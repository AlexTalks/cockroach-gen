// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12062

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1371,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	233, 208,
	487, 208,
	-2, 0,
	-1, 82,
	221, 1164,
	235, 1164,
	251, 351,
	375, 351,
	385, 946,
	417, 351,
	429, 946,
	471, 946,
	498, 351,
	524, 946,
	-2, 0,
	-1, 88,
	251, 355,
	-2, 0,
	-1, 89,
	129, 1371,
	228, 1371,
	509, 1371,
	510, 1371,
	-2, 0,
	-1, 105,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	504, 1342,
	-2, 1313,
	-1, 141,
	154, 821,
	250, 821,
	378, 790,
	434, 790,
	490, 821,
	492, 790,
	-2, 0,
	-1, 143,
	4, 1373,
	21, 1373,
	22, 1373,
	23, 1373,
	24, 1373,
	25, 1373,
	26, 1373,
	27, 1373,
	29, 1373,
	30, 1373,
	36, 1373,
	41, 1373,
	42, 1373,
	44, 1373,
	45, 1373,
	46, 1373,
	47, 1373,
	48, 1373,
	49, 1373,
	50, 1373,
	52, 1373,
	53, 1373,
	54, 1373,
	55, 1373,
	57, 1373,
	58, 1373,
	59, 1373,
	60, 1373,
	61, 1373,
	62, 1373,
	63, 1373,
	67, 1373,
	68, 1373,
	69, 1373,
	70, 1373,
	72, 1373,
	73, 1373,
	74, 1373,
	78, 1373,
	79, 1373,
	80, 1373,
	81, 1373,
	82, 1373,
	83, 1373,
	84, 1373,
	87, 1373,
	88, 1373,
	89, 1373,
	90, 1373,
	91, 1373,
	93, 1373,
	95, 1373,
	96, 1373,
	97, 1373,
	98, 1373,
	99, 1373,
	100, 1373,
	102, 1373,
	103, 1373,
	104, 1373,
	106, 1373,
	107, 1373,
	115, 1373,
	116, 1373,
	117, 1373,
	118, 1373,
	120, 1373,
	121, 1373,
	122, 1373,
	124, 1373,
	125, 1373,
	126, 1373,
	128, 1373,
	129, 1373,
	131, 1373,
	132, 1373,
	133, 1373,
	136, 1373,
	137, 1373,
	138, 1373,
	140, 1373,
	141, 1373,
	143, 1373,
	144, 1373,
	145, 1373,
	147, 1373,
	148, 1373,
	149, 1373,
	150, 1373,
	151, 1373,
	152, 1373,
	153, 1373,
	154, 1373,
	155, 1373,
	156, 1373,
	157, 1373,
	158, 1373,
	159, 1373,
	160, 1373,
	161, 1373,
	163, 1373,
	169, 1373,
	170, 1373,
	171, 1373,
	172, 1373,
	176, 1373,
	178, 1373,
	182, 1373,
	183, 1373,
	184, 1373,
	185, 1373,
	186, 1373,
	187, 1373,
	188, 1373,
	189, 1373,
	190, 1373,
	191, 1373,
	192, 1373,
	193, 1373,
	195, 1373,
	196, 1373,
	198, 1373,
	199, 1373,
	201, 1373,
	202, 1373,
	203, 1373,
	204, 1373,
	205, 1373,
	206, 1373,
	207, 1373,
	208, 1373,
	209, 1373,
	211, 1373,
	212, 1373,
	214, 1373,
	215, 1373,
	216, 1373,
	217, 1373,
	221, 1373,
	222, 1373,
	223, 1373,
	224, 1373,
	225, 1373,
	228, 1373,
	229, 1373,
	230, 1373,
	232, 1373,
	234, 1373,
	235, 1373,
	237, 1373,
	239, 1373,
	240, 1373,
	241, 1373,
	243, 1373,
	247, 1373,
	248, 1373,
	249, 1373,
	250, 1373,
	251, 1373,
	252, 1373,
	254, 1373,
	255, 1373,
	256, 1373,
	258, 1373,
	259, 1373,
	261, 1373,
	262, 1373,
	265, 1373,
	269, 1373,
	270, 1373,
	273, 1373,
	274, 1373,
	275, 1373,
	276, 1373,
	278, 1373,
	279, 1373,
	280, 1373,
	281, 1373,
	282, 1373,
	283, 1373,
	284, 1373,
	285, 1373,
	286, 1373,
	287, 1373,
	288, 1373,
	289, 1373,
	290, 1373,
	291, 1373,
	292, 1373,
	293, 1373,
	294, 1373,
	295, 1373,
	296, 1373,
	297, 1373,
	298, 1373,
	299, 1373,
	301, 1373,
	303, 1373,
	304, 1373,
	305, 1373,
	306, 1373,
	307, 1373,
	308, 1373,
	309, 1373,
	310, 1373,
	311, 1373,
	312, 1373,
	313, 1373,
	314, 1373,
	316, 1373,
	318, 1373,
	320, 1373,
	321, 1373,
	323, 1373,
	324, 1373,
	325, 1373,
	326, 1373,
	327, 1373,
	330, 1373,
	333, 1373,
	334, 1373,
	335, 1373,
	336, 1373,
	339, 1373,
	340, 1373,
	341, 1373,
	343, 1373,
	345, 1373,
	346, 1373,
	347, 1373,
	348, 1373,
	349, 1373,
	350, 1373,
	351, 1373,
	352, 1373,
	353, 1373,
	354, 1373,
	355, 1373,
	356, 1373,
	358, 1373,
	359, 1373,
	360, 1373,
	361, 1373,
	362, 1373,
	363, 1373,
	364, 1373,
	365, 1373,
	366, 1373,
	367, 1373,
	368, 1373,
	369, 1373,
	370, 1373,
	371, 1373,
	372, 1373,
	374, 1373,
	376, 1373,
	377, 1373,
	378, 1373,
	379, 1373,
	380, 1373,
	381, 1373,
	382, 1373,
	383, 1373,
	384, 1373,
	385, 1373,
	386, 1373,
	387, 1373,
	389, 1373,
	395, 1373,
	397, 1373,
	398, 1373,
	399, 1373,
	400, 1373,
	401, 1373,
	402, 1373,
	403, 1373,
	404, 1373,
	406, 1373,
	407, 1373,
	408, 1373,
	410, 1373,
	411, 1373,
	412, 1373,
	413, 1373,
	414, 1373,
	415, 1373,
	417, 1373,
	418, 1373,
	419, 1373,
	420, 1373,
	421, 1373,
	422, 1373,
	423, 1373,
	424, 1373,
	425, 1373,
	426, 1373,
	427, 1373,
	429, 1373,
	430, 1373,
	431, 1373,
	432, 1373,
	433, 1373,
	434, 1373,
	436, 1373,
	437, 1373,
	438, 1373,
	439, 1373,
	440, 1373,
	441, 1373,
	443, 1373,
	444, 1373,
	445, 1373,
	446, 1373,
	447, 1373,
	448, 1373,
	449, 1373,
	451, 1373,
	453, 1373,
	454, 1373,
	455, 1373,
	456, 1373,
	457, 1373,
	458, 1373,
	459, 1373,
	460, 1373,
	461, 1373,
	462, 1373,
	463, 1373,
	464, 1373,
	465, 1373,
	467, 1373,
	468, 1373,
	470, 1373,
	472, 1373,
	473, 1373,
	474, 1373,
	475, 1373,
	476, 1373,
	477, 1373,
	478, 1373,
	479, 1373,
	480, 1373,
	482, 1373,
	483, 1373,
	484, 1373,
	485, 1373,
	486, 1373,
	488, 1373,
	490, 1373,
	491, 1373,
	492, 1373,
	493, 1373,
	494, 1373,
	495, 1373,
	497, 1373,
	498, 1373,
	499, 1373,
	500, 1373,
	502, 1373,
	503, 1373,
	506, 1373,
	507, 1373,
	508, 1373,
	509, 1373,
	510, 1373,
	511, 1373,
	512, 1373,
	514, 1373,
	517, 1373,
	518, 1373,
	519, 1373,
	520, 1373,
	521, 1373,
	522, 1373,
	524, 1373,
	525, 1373,
	526, 1373,
	527, 1373,
	532, 1373,
	533, 1373,
	534, 1373,
	535, 1373,
	536, 1373,
	537, 1373,
	-2, 0,
	-1, 144,
	1, 1242,
	127, 1242,
	239, 1242,
	317, 1242,
	374, 1242,
	382, 1242,
	541, 1242,
	565, 1242,
	-2, 0,
	-1, 146,
	1, 1242,
	565, 1242,
	-2, 0,
	-1, 147,
	1, 1242,
	565, 1242,
	-2, 0,
	-1, 148,
	1, 1242,
	487, 1242,
	565, 1242,
	-2, 0,
	-1, 177,
	146, 1341,
	164, 1341,
	177, 1341,
	231, 1341,
	264, 1341,
	328, 1341,
	338, 1341,
	504, 1341,
	-2, 1316,
	-1, 215,
	4, 1380,
	5, 1380,
	6, 1380,
	7, 1380,
	8, 1380,
	9, 1380,
	10, 1380,
	21, 1380,
	22, 1380,
	23, 1380,
	24, 1380,
	25, 1380,
	26, 1380,
	27, 1380,
	29, 1380,
	30, 1380,
	36, 1380,
	37, 1380,
	41, 1380,
	42, 1380,
	43, 1380,
	44, 1380,
	45, 1380,
	46, 1380,
	47, 1380,
	48, 1380,
	49, 1380,
	50, 1380,
	52, 1380,
	53, 1380,
	54, 1380,
	55, 1380,
	57, 1380,
	58, 1380,
	59, 1380,
	60, 1380,
	61, 1380,
	62, 1380,
	63, 1380,
	64, 1380,
	65, 1380,
	66, 1380,
	67, 1380,
	68, 1380,
	69, 1380,
	70, 1380,
	72, 1380,
	73, 1380,
	74, 1380,
	76, 1380,
	78, 1380,
	79, 1380,
	80, 1380,
	81, 1380,
	82, 1380,
	83, 1380,
	84, 1380,
	87, 1380,
	88, 1380,
	89, 1380,
	90, 1380,
	91, 1380,
	93, 1380,
	95, 1380,
	96, 1380,
	97, 1380,
	98, 1380,
	99, 1380,
	100, 1380,
	102, 1380,
	103, 1380,
	104, 1380,
	105, 1380,
	106, 1380,
	107, 1380,
	108, 1380,
	109, 1380,
	110, 1380,
	111, 1380,
	112, 1380,
	113, 1380,
	114, 1380,
	115, 1380,
	116, 1380,
	117, 1380,
	118, 1380,
	119, 1380,
	120, 1380,
	121, 1380,
	122, 1380,
	123, 1380,
	124, 1380,
	125, 1380,
	126, 1380,
	128, 1380,
	129, 1380,
	131, 1380,
	132, 1380,
	133, 1380,
	136, 1380,
	137, 1380,
	138, 1380,
	140, 1380,
	141, 1380,
	143, 1380,
	144, 1380,
	145, 1380,
	147, 1380,
	148, 1380,
	149, 1380,
	150, 1380,
	151, 1380,
	152, 1380,
	153, 1380,
	154, 1380,
	155, 1380,
	156, 1380,
	157, 1380,
	158, 1380,
	159, 1380,
	160, 1380,
	161, 1380,
	162, 1380,
	163, 1380,
	169, 1380,
	170, 1380,
	171, 1380,
	172, 1380,
	176, 1380,
	178, 1380,
	181, 1380,
	182, 1380,
	183, 1380,
	184, 1380,
	185, 1380,
	186, 1380,
	187, 1380,
	188, 1380,
	189, 1380,
	190, 1380,
	191, 1380,
	192, 1380,
	193, 1380,
	195, 1380,
	196, 1380,
	198, 1380,
	199, 1380,
	201, 1380,
	202, 1380,
	203, 1380,
	204, 1380,
	205, 1380,
	206, 1380,
	207, 1380,
	208, 1380,
	209, 1380,
	210, 1380,
	211, 1380,
	212, 1380,
	214, 1380,
	215, 1380,
	216, 1380,
	217, 1380,
	221, 1380,
	222, 1380,
	223, 1380,
	224, 1380,
	225, 1380,
	227, 1380,
	228, 1380,
	229, 1380,
	230, 1380,
	232, 1380,
	234, 1380,
	235, 1380,
	236, 1380,
	237, 1380,
	238, 1380,
	239, 1380,
	240, 1380,
	241, 1380,
	242, 1380,
	243, 1380,
	247, 1380,
	248, 1380,
	249, 1380,
	250, 1380,
	251, 1380,
	252, 1380,
	254, 1380,
	255, 1380,
	256, 1380,
	258, 1380,
	259, 1380,
	260, 1380,
	261, 1380,
	262, 1380,
	263, 1380,
	265, 1380,
	269, 1380,
	270, 1380,
	271, 1380,
	272, 1380,
	273, 1380,
	274, 1380,
	275, 1380,
	276, 1380,
	278, 1380,
	279, 1380,
	280, 1380,
	281, 1380,
	282, 1380,
	283, 1380,
	284, 1380,
	285, 1380,
	286, 1380,
	287, 1380,
	288, 1380,
	289, 1380,
	290, 1380,
	291, 1380,
	292, 1380,
	293, 1380,
	294, 1380,
	295, 1380,
	296, 1380,
	297, 1380,
	298, 1380,
	299, 1380,
	301, 1380,
	302, 1380,
	303, 1380,
	304, 1380,
	305, 1380,
	306, 1380,
	307, 1380,
	308, 1380,
	309, 1380,
	310, 1380,
	311, 1380,
	312, 1380,
	313, 1380,
	314, 1380,
	315, 1380,
	316, 1380,
	317, 1380,
	318, 1380,
	319, 1380,
	320, 1380,
	321, 1380,
	322, 1380,
	323, 1380,
	324, 1380,
	325, 1380,
	326, 1380,
	327, 1380,
	330, 1380,
	334, 1380,
	335, 1380,
	336, 1380,
	339, 1380,
	340, 1380,
	341, 1380,
	342, 1380,
	343, 1380,
	344, 1380,
	345, 1380,
	346, 1380,
	347, 1380,
	348, 1380,
	349, 1380,
	350, 1380,
	351, 1380,
	352, 1380,
	353, 1380,
	354, 1380,
	355, 1380,
	356, 1380,
	358, 1380,
	359, 1380,
	360, 1380,
	361, 1380,
	362, 1380,
	363, 1380,
	364, 1380,
	365, 1380,
	366, 1380,
	367, 1380,
	368, 1380,
	369, 1380,
	370, 1380,
	371, 1380,
	372, 1380,
	374, 1380,
	376, 1380,
	377, 1380,
	378, 1380,
	379, 1380,
	380, 1380,
	381, 1380,
	382, 1380,
	383, 1380,
	384, 1380,
	385, 1380,
	386, 1380,
	387, 1380,
	389, 1380,
	395, 1380,
	397, 1380,
	398, 1380,
	399, 1380,
	400, 1380,
	401, 1380,
	402, 1380,
	403, 1380,
	404, 1380,
	406, 1380,
	407, 1380,
	408, 1380,
	409, 1380,
	410, 1380,
	411, 1380,
	412, 1380,
	413, 1380,
	414, 1380,
	415, 1380,
	417, 1380,
	418, 1380,
	419, 1380,
	420, 1380,
	421, 1380,
	422, 1380,
	423, 1380,
	424, 1380,
	425, 1380,
	426, 1380,
	427, 1380,
	429, 1380,
	430, 1380,
	431, 1380,
	432, 1380,
	433, 1380,
	434, 1380,
	435, 1380,
	436, 1380,
	437, 1380,
	438, 1380,
	439, 1380,
	440, 1380,
	441, 1380,
	442, 1380,
	443, 1380,
	444, 1380,
	445, 1380,
	446, 1380,
	447, 1380,
	448, 1380,
	449, 1380,
	451, 1380,
	453, 1380,
	454, 1380,
	455, 1380,
	456, 1380,
	457, 1380,
	458, 1380,
	459, 1380,
	460, 1380,
	461, 1380,
	462, 1380,
	463, 1380,
	464, 1380,
	465, 1380,
	467, 1380,
	468, 1380,
	469, 1380,
	470, 1380,
	472, 1380,
	473, 1380,
	474, 1380,
	475, 1380,
	476, 1380,
	477, 1380,
	478, 1380,
	479, 1380,
	480, 1380,
	482, 1380,
	483, 1380,
	484, 1380,
	485, 1380,
	486, 1380,
	488, 1380,
	490, 1380,
	491, 1380,
	492, 1380,
	493, 1380,
	494, 1380,
	495, 1380,
	496, 1380,
	497, 1380,
	498, 1380,
	499, 1380,
	500, 1380,
	502, 1380,
	503, 1380,
	505, 1380,
	506, 1380,
	507, 1380,
	508, 1380,
	509, 1380,
	510, 1380,
	511, 1380,
	512, 1380,
	513, 1380,
	514, 1380,
	517, 1380,
	518, 1380,
	519, 1380,
	520, 1380,
	521, 1380,
	522, 1380,
	524, 1380,
	525, 1380,
	526, 1380,
	527, 1380,
	532, 1380,
	533, 1380,
	534, 1380,
	535, 1380,
	536, 1380,
	537, 1380,
	538, 1380,
	546, 1380,
	553, 1380,
	554, 1380,
	555, 1380,
	562, 1380,
	566, 1380,
	-2, 0,
	-1, 676,
	180, 2126,
	487, 2126,
	545, 2126,
	564, 2126,
	-2, 0,
	-1, 677,
	180, 2225,
	487, 2225,
	545, 2225,
	564, 2225,
	-2, 0,
	-1, 678,
	180, 2113,
	487, 2113,
	545, 2113,
	564, 2113,
	-2, 0,
	-1, 680,
	180, 2349,
	487, 2349,
	545, 2349,
	564, 2349,
	-2, 0,
	-1, 682,
	180, 2385,
	487, 2385,
	545, 2385,
	564, 2385,
	-2, 0,
	-1, 689,
	180, 2251,
	487, 2251,
	545, 2251,
	564, 2251,
	-2, 631,
	-1, 721,
	564, 2063,
	567, 2063,
	-2, 879,
	-1, 722,
	564, 2065,
	567, 2065,
	-2, 880,
	-1, 723,
	564, 2064,
	567, 2064,
	-2, 881,
	-1, 724,
	567, 1997,
	-2, 882,
	-1, 747,
	177, 222,
	-2, 0,
	-1, 770,
	43, 2067,
	-2, 0,
	-1, 771,
	524, 1141,
	-2, 947,
	-1, 787,
	4, 1506,
	21, 1506,
	22, 1506,
	23, 1506,
	24, 1506,
	25, 1506,
	26, 1506,
	27, 1506,
	29, 1506,
	30, 1506,
	36, 1506,
	41, 1506,
	42, 1506,
	44, 1506,
	45, 1506,
	46, 1506,
	47, 1506,
	48, 1506,
	49, 1506,
	50, 1506,
	52, 1506,
	53, 1506,
	54, 1506,
	55, 1506,
	57, 1506,
	58, 1506,
	59, 1506,
	60, 1506,
	61, 1506,
	62, 1506,
	63, 1506,
	67, 1506,
	68, 1506,
	69, 1506,
	70, 1506,
	72, 1506,
	73, 1506,
	74, 1506,
	78, 1506,
	79, 1506,
	80, 1506,
	81, 1506,
	82, 1506,
	83, 1506,
	84, 1506,
	87, 1506,
	88, 1506,
	89, 1506,
	90, 1506,
	91, 1506,
	93, 1506,
	95, 1506,
	96, 1506,
	97, 1506,
	98, 1506,
	99, 1506,
	100, 1506,
	102, 1506,
	103, 1506,
	104, 1506,
	106, 1506,
	107, 1506,
	115, 1506,
	116, 1506,
	117, 1506,
	118, 1506,
	120, 1506,
	121, 1506,
	122, 1506,
	124, 1506,
	125, 1506,
	126, 1506,
	128, 1506,
	129, 1506,
	131, 1506,
	132, 1506,
	133, 1506,
	136, 1506,
	137, 1506,
	138, 1506,
	140, 1506,
	141, 1506,
	143, 1506,
	144, 1506,
	145, 1506,
	147, 1506,
	148, 1506,
	149, 1506,
	150, 1506,
	151, 1506,
	152, 1506,
	153, 1506,
	154, 1506,
	155, 1506,
	156, 1506,
	157, 1506,
	158, 1506,
	159, 1506,
	160, 1506,
	161, 1506,
	163, 1506,
	169, 1506,
	170, 1506,
	171, 1506,
	172, 1506,
	176, 1506,
	178, 1506,
	182, 1506,
	183, 1506,
	184, 1506,
	185, 1506,
	186, 1506,
	187, 1506,
	188, 1506,
	189, 1506,
	190, 1506,
	191, 1506,
	192, 1506,
	193, 1506,
	195, 1506,
	196, 1506,
	198, 1506,
	199, 1506,
	201, 1506,
	202, 1506,
	203, 1506,
	204, 1506,
	205, 1506,
	206, 1506,
	207, 1506,
	208, 1506,
	209, 1506,
	211, 1506,
	212, 1506,
	214, 1506,
	215, 1506,
	216, 1506,
	217, 1506,
	221, 1506,
	222, 1506,
	223, 1506,
	224, 1506,
	225, 1506,
	228, 1506,
	229, 1506,
	230, 1506,
	232, 1506,
	234, 1506,
	235, 1506,
	237, 1506,
	239, 1506,
	240, 1506,
	241, 1506,
	243, 1506,
	247, 1506,
	248, 1506,
	249, 1506,
	250, 1506,
	251, 1506,
	252, 1506,
	254, 1506,
	255, 1506,
	256, 1506,
	258, 1506,
	259, 1506,
	261, 1506,
	262, 1506,
	265, 1506,
	269, 1506,
	270, 1506,
	273, 1506,
	274, 1506,
	275, 1506,
	276, 1506,
	278, 1506,
	279, 1506,
	280, 1506,
	281, 1506,
	282, 1506,
	283, 1506,
	284, 1506,
	285, 1506,
	286, 1506,
	287, 1506,
	288, 1506,
	289, 1506,
	290, 1506,
	291, 1506,
	292, 1506,
	293, 1506,
	294, 1506,
	295, 1506,
	296, 1506,
	297, 1506,
	298, 1506,
	299, 1506,
	301, 1506,
	303, 1506,
	304, 1506,
	305, 1506,
	306, 1506,
	307, 1506,
	308, 1506,
	309, 1506,
	310, 1506,
	311, 1506,
	312, 1506,
	313, 1506,
	314, 1506,
	316, 1506,
	318, 1506,
	320, 1506,
	321, 1506,
	323, 1506,
	324, 1506,
	325, 1506,
	326, 1506,
	327, 1506,
	330, 1506,
	334, 1506,
	335, 1506,
	336, 1506,
	339, 1506,
	340, 1506,
	341, 1506,
	343, 1506,
	345, 1506,
	346, 1506,
	347, 1506,
	348, 1506,
	349, 1506,
	350, 1506,
	351, 1506,
	352, 1506,
	353, 1506,
	354, 1506,
	355, 1506,
	356, 1506,
	358, 1506,
	359, 1506,
	360, 1506,
	361, 1506,
	362, 1506,
	363, 1506,
	364, 1506,
	365, 1506,
	366, 1506,
	367, 1506,
	368, 1506,
	369, 1506,
	370, 1506,
	371, 1506,
	372, 1506,
	374, 1506,
	376, 1506,
	377, 1506,
	378, 1506,
	379, 1506,
	380, 1506,
	381, 1506,
	382, 1506,
	383, 1506,
	384, 1506,
	385, 1506,
	386, 1506,
	387, 1506,
	389, 1506,
	395, 1506,
	397, 1506,
	398, 1506,
	399, 1506,
	400, 1506,
	401, 1506,
	402, 1506,
	403, 1506,
	404, 1506,
	406, 1506,
	407, 1506,
	408, 1506,
	410, 1506,
	411, 1506,
	412, 1506,
	413, 1506,
	414, 1506,
	415, 1506,
	417, 1506,
	418, 1506,
	419, 1506,
	420, 1506,
	421, 1506,
	422, 1506,
	423, 1506,
	424, 1506,
	425, 1506,
	426, 1506,
	427, 1506,
	429, 1506,
	430, 1506,
	431, 1506,
	432, 1506,
	433, 1506,
	434, 1506,
	436, 1506,
	437, 1506,
	438, 1506,
	439, 1506,
	440, 1506,
	441, 1506,
	443, 1506,
	444, 1506,
	445, 1506,
	446, 1506,
	447, 1506,
	448, 1506,
	449, 1506,
	451, 1506,
	453, 1506,
	454, 1506,
	455, 1506,
	456, 1506,
	457, 1506,
	458, 1506,
	459, 1506,
	460, 1506,
	461, 1506,
	462, 1506,
	463, 1506,
	464, 1506,
	465, 1506,
	467, 1506,
	468, 1506,
	470, 1506,
	472, 1506,
	473, 1506,
	474, 1506,
	475, 1506,
	476, 1506,
	477, 1506,
	478, 1506,
	479, 1506,
	480, 1506,
	482, 1506,
	483, 1506,
	484, 1506,
	485, 1506,
	486, 1506,
	488, 1506,
	490, 1506,
	491, 1506,
	492, 1506,
	493, 1506,
	494, 1506,
	495, 1506,
	497, 1506,
	498, 1506,
	499, 1506,
	500, 1506,
	502, 1506,
	503, 1506,
	506, 1506,
	507, 1506,
	508, 1506,
	509, 1506,
	510, 1506,
	511, 1506,
	512, 1506,
	514, 1506,
	517, 1506,
	518, 1506,
	519, 1506,
	520, 1506,
	521, 1506,
	522, 1506,
	524, 1506,
	525, 1506,
	526, 1506,
	527, 1506,
	532, 1506,
	533, 1506,
	534, 1506,
	535, 1506,
	536, 1506,
	537, 1506,
	-2, 0,
	-1, 812,
	4, 1162,
	21, 1162,
	22, 1162,
	23, 1162,
	24, 1162,
	25, 1162,
	26, 1162,
	27, 1162,
	29, 1162,
	30, 1162,
	36, 1162,
	41, 1162,
	42, 1162,
	44, 1162,
	45, 1162,
	46, 1162,
	47, 1162,
	48, 1162,
	49, 1162,
	50, 1162,
	52, 1162,
	53, 1162,
	54, 1162,
	55, 1162,
	57, 1162,
	58, 1162,
	59, 1162,
	60, 1162,
	61, 1162,
	62, 1162,
	63, 1162,
	67, 1162,
	68, 1162,
	69, 1162,
	70, 1162,
	72, 1162,
	73, 1162,
	74, 1162,
	78, 1162,
	79, 1162,
	80, 1162,
	81, 1162,
	82, 1162,
	83, 1162,
	84, 1162,
	87, 1162,
	88, 1162,
	89, 1162,
	90, 1162,
	91, 1162,
	93, 1162,
	95, 1162,
	96, 1162,
	97, 1162,
	98, 1162,
	99, 1162,
	100, 1162,
	102, 1162,
	103, 1162,
	104, 1162,
	106, 1162,
	107, 1162,
	115, 1162,
	116, 1162,
	117, 1162,
	118, 1162,
	120, 1162,
	121, 1162,
	122, 1162,
	124, 1162,
	125, 1162,
	126, 1162,
	128, 1162,
	129, 1162,
	131, 1162,
	132, 1162,
	133, 1162,
	136, 1162,
	137, 1162,
	138, 1162,
	140, 1162,
	141, 1162,
	143, 1162,
	144, 1162,
	145, 1162,
	147, 1162,
	148, 1162,
	149, 1162,
	150, 1162,
	151, 1162,
	152, 1162,
	153, 1162,
	154, 1162,
	155, 1162,
	156, 1162,
	157, 1162,
	158, 1162,
	159, 1162,
	160, 1162,
	161, 1162,
	163, 1162,
	169, 1162,
	170, 1162,
	171, 1162,
	172, 1162,
	176, 1162,
	178, 1162,
	182, 1162,
	183, 1162,
	184, 1162,
	185, 1162,
	186, 1162,
	187, 1162,
	188, 1162,
	189, 1162,
	190, 1162,
	191, 1162,
	192, 1162,
	193, 1162,
	195, 1162,
	196, 1162,
	198, 1162,
	199, 1162,
	201, 1162,
	202, 1162,
	203, 1162,
	204, 1162,
	205, 1162,
	206, 1162,
	207, 1162,
	208, 1162,
	209, 1162,
	211, 1162,
	212, 1162,
	214, 1162,
	215, 1162,
	216, 1162,
	217, 1162,
	221, 1162,
	222, 1162,
	223, 1162,
	224, 1162,
	225, 1162,
	228, 1162,
	229, 1162,
	230, 1162,
	232, 1162,
	234, 1162,
	235, 1162,
	237, 1162,
	239, 1162,
	240, 1162,
	241, 1162,
	243, 1162,
	247, 1162,
	248, 1162,
	249, 1162,
	250, 1162,
	251, 1162,
	252, 1162,
	254, 1162,
	255, 1162,
	256, 1162,
	258, 1162,
	259, 1162,
	261, 1162,
	262, 1162,
	265, 1162,
	269, 1162,
	270, 1162,
	273, 1162,
	274, 1162,
	275, 1162,
	276, 1162,
	278, 1162,
	279, 1162,
	280, 1162,
	281, 1162,
	282, 1162,
	283, 1162,
	284, 1162,
	285, 1162,
	286, 1162,
	287, 1162,
	288, 1162,
	289, 1162,
	290, 1162,
	291, 1162,
	292, 1162,
	293, 1162,
	294, 1162,
	295, 1162,
	296, 1162,
	297, 1162,
	298, 1162,
	299, 1162,
	301, 1162,
	303, 1162,
	304, 1162,
	305, 1162,
	306, 1162,
	307, 1162,
	308, 1162,
	309, 1162,
	310, 1162,
	311, 1162,
	312, 1162,
	313, 1162,
	314, 1162,
	316, 1162,
	318, 1162,
	320, 1162,
	321, 1162,
	323, 1162,
	324, 1162,
	325, 1162,
	326, 1162,
	327, 1162,
	330, 1162,
	334, 1162,
	335, 1162,
	336, 1162,
	339, 1162,
	340, 1162,
	341, 1162,
	343, 1162,
	345, 1162,
	346, 1162,
	347, 1162,
	348, 1162,
	349, 1162,
	350, 1162,
	351, 1162,
	352, 1162,
	353, 1162,
	354, 1162,
	355, 1162,
	356, 1162,
	358, 1162,
	359, 1162,
	360, 1162,
	361, 1162,
	362, 1162,
	363, 1162,
	364, 1162,
	365, 1162,
	366, 1162,
	367, 1162,
	368, 1162,
	369, 1162,
	370, 1162,
	371, 1162,
	372, 1162,
	374, 1162,
	376, 1162,
	377, 1162,
	378, 1162,
	379, 1162,
	380, 1162,
	381, 1162,
	382, 1162,
	383, 1162,
	384, 1162,
	385, 1162,
	386, 1162,
	387, 1162,
	389, 1162,
	395, 1162,
	397, 1162,
	398, 1162,
	399, 1162,
	400, 1162,
	401, 1162,
	402, 1162,
	403, 1162,
	404, 1162,
	406, 1162,
	407, 1162,
	408, 1162,
	410, 1162,
	411, 1162,
	412, 1162,
	413, 1162,
	414, 1162,
	415, 1162,
	417, 1162,
	418, 1162,
	419, 1162,
	420, 1162,
	421, 1162,
	422, 1162,
	423, 1162,
	424, 1162,
	425, 1162,
	426, 1162,
	427, 1162,
	429, 1162,
	430, 1162,
	431, 1162,
	432, 1162,
	433, 1162,
	434, 1162,
	436, 1162,
	437, 1162,
	438, 1162,
	439, 1162,
	440, 1162,
	441, 1162,
	443, 1162,
	444, 1162,
	445, 1162,
	446, 1162,
	447, 1162,
	448, 1162,
	449, 1162,
	451, 1162,
	453, 1162,
	454, 1162,
	455, 1162,
	456, 1162,
	457, 1162,
	458, 1162,
	459, 1162,
	460, 1162,
	461, 1162,
	462, 1162,
	463, 1162,
	464, 1162,
	465, 1162,
	467, 1162,
	468, 1162,
	470, 1162,
	472, 1162,
	473, 1162,
	474, 1162,
	475, 1162,
	476, 1162,
	477, 1162,
	478, 1162,
	479, 1162,
	480, 1162,
	482, 1162,
	483, 1162,
	484, 1162,
	485, 1162,
	486, 1162,
	488, 1162,
	490, 1162,
	491, 1162,
	492, 1162,
	493, 1162,
	494, 1162,
	495, 1162,
	497, 1162,
	498, 1162,
	499, 1162,
	500, 1162,
	502, 1162,
	503, 1162,
	506, 1162,
	507, 1162,
	508, 1162,
	509, 1162,
	510, 1162,
	511, 1162,
	512, 1162,
	514, 1162,
	517, 1162,
	518, 1162,
	519, 1162,
	520, 1162,
	521, 1162,
	522, 1162,
	524, 1162,
	525, 1162,
	526, 1162,
	527, 1162,
	532, 1162,
	533, 1162,
	534, 1162,
	535, 1162,
	536, 1162,
	537, 1162,
	-2, 0,
	-1, 893,
	378, 791,
	434, 791,
	492, 791,
	-2, 0,
	-1, 894,
	378, 790,
	434, 790,
	492, 790,
	-2, 732,
	-1, 898,
	1, 835,
	561, 835,
	563, 835,
	565, 835,
	-2, 0,
	-1, 899,
	1, 767,
	561, 767,
	563, 767,
	565, 767,
	-2, 0,
	-1, 900,
	1, 769,
	561, 769,
	563, 769,
	565, 769,
	-2, 0,
	-1, 901,
	1, 878,
	177, 878,
	561, 878,
	563, 878,
	565, 878,
	-2, 0,
	-1, 909,
	1, 794,
	561, 794,
	563, 794,
	565, 794,
	-2, 0,
	-1, 915,
	1, 835,
	561, 835,
	563, 835,
	565, 835,
	-2, 0,
	-1, 916,
	1, 837,
	561, 837,
	563, 837,
	565, 837,
	-2, 0,
	-1, 917,
	1, 840,
	561, 840,
	563, 840,
	565, 840,
	-2, 0,
	-1, 923,
	1, 857,
	561, 857,
	563, 857,
	565, 857,
	-2, 0,
	-1, 924,
	1, 859,
	561, 859,
	563, 859,
	565, 859,
	-2, 0,
	-1, 973,
	164, 1382,
	177, 1382,
	264, 1382,
	328, 1382,
	-2, 1320,
	-1, 988,
	164, 1381,
	177, 1381,
	264, 1381,
	328, 1381,
	-2, 1317,
	-1, 1014,
	564, 2062,
	-2, 639,
	-1, 1042,
	5, 2054,
	562, 2052,
	-2, 2043,
	-1, 1050,
	5, 2075,
	562, 2072,
	-2, 2063,
	-1, 1051,
	5, 2076,
	562, 2073,
	-2, 2064,
	-1, 1059,
	564, 2060,
	-2, 2042,
	-1, 1060,
	562, 2467,
	-2, 2061,
	-1, 1083,
	562, 2466,
	-2, 2077,
	-1, 1084,
	5, 1581,
	-2, 2437,
	-1, 1085,
	5, 1582,
	-2, 2438,
	-1, 1086,
	5, 1583,
	-2, 2452,
	-1, 1087,
	5, 1584,
	-2, 2416,
	-1, 1088,
	5, 1585,
	-2, 2450,
	-1, 1089,
	5, 1593,
	-2, 2429,
	-1, 1090,
	5, 1580,
	-2, 2425,
	-1, 1091,
	5, 1580,
	-2, 2424,
	-1, 1092,
	5, 1580,
	-2, 2443,
	-1, 1093,
	5, 1591,
	-2, 2418,
	-1, 1094,
	5, 1596,
	-2, 2417,
	-1, 1095,
	5, 1598,
	-2, 2462,
	-1, 1098,
	5, 1620,
	-2, 2455,
	-1, 1099,
	5, 1612,
	-2, 2456,
	-1, 1100,
	5, 1620,
	-2, 2457,
	-1, 1101,
	5, 1616,
	-2, 2458,
	-1, 1102,
	5, 1566,
	-2, 2430,
	-1, 1103,
	5, 1567,
	-2, 2431,
	-1, 1104,
	5, 1568,
	-2, 2419,
	-1, 1132,
	5, 1603,
	-2, 2463,
	-1, 1133,
	5, 1604,
	-2, 2453,
	-1, 1134,
	5, 1605,
	525, 1605,
	-2, 2420,
	-1, 1135,
	5, 1606,
	525, 1606,
	-2, 2421,
	-1, 1172,
	562, 2072,
	-2, 2063,
	-1, 1173,
	562, 2073,
	-2, 2064,
	-1, 1204,
	180, 2385,
	487, 2385,
	545, 2385,
	564, 2385,
	-2, 0,
	-1, 1207,
	1, 617,
	565, 617,
	-2, 1250,
	-1, 1336,
	397, 2038,
	436, 2038,
	555, 2038,
	-2, 2035,
	-1, 1348,
	566, 2038,
	-2, 2039,
	-1, 1355,
	1, 1138,
	561, 1138,
	563, 1138,
	565, 1138,
	-2, 1369,
	-1, 1411,
	385, 946,
	524, 946,
	-2, 350,
	-1, 1431,
	43, 2066,
	-2, 2036,
	-1, 1436,
	1, 1138,
	561, 1138,
	563, 1138,
	565, 1138,
	-2, 1369,
	-1, 1443,
	4, 1162,
	21, 1162,
	22, 1162,
	23, 1162,
	24, 1162,
	25, 1162,
	26, 1162,
	27, 1162,
	29, 1162,
	30, 1162,
	36, 1162,
	41, 1162,
	42, 1162,
	44, 1162,
	45, 1162,
	46, 1162,
	47, 1162,
	48, 1162,
	49, 1162,
	50, 1162,
	52, 1162,
	53, 1162,
	54, 1162,
	55, 1162,
	57, 1162,
	58, 1162,
	59, 1162,
	60, 1162,
	61, 1162,
	62, 1162,
	63, 1162,
	67, 1162,
	68, 1162,
	69, 1162,
	70, 1162,
	72, 1162,
	73, 1162,
	74, 1162,
	78, 1162,
	79, 1162,
	80, 1162,
	81, 1162,
	82, 1162,
	83, 1162,
	84, 1162,
	87, 1162,
	88, 1162,
	89, 1162,
	90, 1162,
	91, 1162,
	93, 1162,
	95, 1162,
	96, 1162,
	97, 1162,
	98, 1162,
	99, 1162,
	100, 1162,
	102, 1162,
	103, 1162,
	104, 1162,
	106, 1162,
	107, 1162,
	115, 1162,
	116, 1162,
	117, 1162,
	118, 1162,
	120, 1162,
	121, 1162,
	122, 1162,
	124, 1162,
	125, 1162,
	126, 1162,
	128, 1162,
	129, 1162,
	131, 1162,
	132, 1162,
	133, 1162,
	136, 1162,
	137, 1162,
	138, 1162,
	140, 1162,
	141, 1162,
	143, 1162,
	144, 1162,
	145, 1162,
	147, 1162,
	148, 1162,
	149, 1162,
	150, 1162,
	151, 1162,
	152, 1162,
	153, 1162,
	154, 1162,
	155, 1162,
	156, 1162,
	157, 1162,
	158, 1162,
	159, 1162,
	160, 1162,
	161, 1162,
	169, 1162,
	170, 1162,
	171, 1162,
	172, 1162,
	176, 1162,
	178, 1162,
	182, 1162,
	183, 1162,
	184, 1162,
	185, 1162,
	186, 1162,
	187, 1162,
	188, 1162,
	189, 1162,
	190, 1162,
	191, 1162,
	192, 1162,
	193, 1162,
	195, 1162,
	196, 1162,
	198, 1162,
	199, 1162,
	201, 1162,
	202, 1162,
	203, 1162,
	204, 1162,
	205, 1162,
	206, 1162,
	207, 1162,
	208, 1162,
	209, 1162,
	211, 1162,
	212, 1162,
	214, 1162,
	215, 1162,
	216, 1162,
	217, 1162,
	222, 1162,
	223, 1162,
	224, 1162,
	225, 1162,
	228, 1162,
	229, 1162,
	230, 1162,
	232, 1162,
	234, 1162,
	235, 1162,
	237, 1162,
	239, 1162,
	240, 1162,
	241, 1162,
	243, 1162,
	247, 1162,
	248, 1162,
	249, 1162,
	250, 1162,
	251, 1162,
	252, 1162,
	254, 1162,
	255, 1162,
	256, 1162,
	258, 1162,
	259, 1162,
	261, 1162,
	262, 1162,
	265, 1162,
	269, 1162,
	270, 1162,
	273, 1162,
	274, 1162,
	275, 1162,
	276, 1162,
	278, 1162,
	279, 1162,
	280, 1162,
	281, 1162,
	282, 1162,
	283, 1162,
	284, 1162,
	285, 1162,
	286, 1162,
	287, 1162,
	288, 1162,
	289, 1162,
	290, 1162,
	291, 1162,
	292, 1162,
	293, 1162,
	294, 1162,
	295, 1162,
	296, 1162,
	297, 1162,
	298, 1162,
	299, 1162,
	301, 1162,
	303, 1162,
	304, 1162,
	305, 1162,
	306, 1162,
	307, 1162,
	308, 1162,
	309, 1162,
	310, 1162,
	311, 1162,
	312, 1162,
	313, 1162,
	314, 1162,
	316, 1162,
	320, 1162,
	321, 1162,
	323, 1162,
	324, 1162,
	325, 1162,
	326, 1162,
	327, 1162,
	330, 1162,
	332, 1162,
	334, 1162,
	335, 1162,
	336, 1162,
	339, 1162,
	340, 1162,
	341, 1162,
	343, 1162,
	345, 1162,
	346, 1162,
	347, 1162,
	348, 1162,
	349, 1162,
	350, 1162,
	351, 1162,
	352, 1162,
	353, 1162,
	354, 1162,
	355, 1162,
	356, 1162,
	358, 1162,
	359, 1162,
	360, 1162,
	361, 1162,
	362, 1162,
	363, 1162,
	364, 1162,
	365, 1162,
	366, 1162,
	367, 1162,
	368, 1162,
	369, 1162,
	370, 1162,
	371, 1162,
	372, 1162,
	374, 1162,
	376, 1162,
	377, 1162,
	378, 1162,
	379, 1162,
	380, 1162,
	381, 1162,
	382, 1162,
	383, 1162,
	384, 1162,
	385, 1162,
	386, 1162,
	387, 1162,
	389, 1162,
	395, 1162,
	397, 1162,
	398, 1162,
	399, 1162,
	400, 1162,
	401, 1162,
	402, 1162,
	403, 1162,
	404, 1162,
	406, 1162,
	407, 1162,
	408, 1162,
	410, 1162,
	411, 1162,
	412, 1162,
	413, 1162,
	414, 1162,
	415, 1162,
	417, 1162,
	418, 1162,
	419, 1162,
	420, 1162,
	421, 1162,
	422, 1162,
	423, 1162,
	424, 1162,
	425, 1162,
	426, 1162,
	427, 1162,
	429, 1162,
	430, 1162,
	431, 1162,
	432, 1162,
	433, 1162,
	434, 1162,
	436, 1162,
	437, 1162,
	438, 1162,
	439, 1162,
	440, 1162,
	441, 1162,
	443, 1162,
	444, 1162,
	445, 1162,
	446, 1162,
	447, 1162,
	448, 1162,
	449, 1162,
	451, 1162,
	453, 1162,
	454, 1162,
	455, 1162,
	456, 1162,
	457, 1162,
	458, 1162,
	459, 1162,
	460, 1162,
	461, 1162,
	462, 1162,
	463, 1162,
	464, 1162,
	465, 1162,
	467, 1162,
	468, 1162,
	470, 1162,
	472, 1162,
	473, 1162,
	474, 1162,
	475, 1162,
	476, 1162,
	477, 1162,
	478, 1162,
	479, 1162,
	480, 1162,
	482, 1162,
	483, 1162,
	484, 1162,
	485, 1162,
	486, 1162,
	488, 1162,
	490, 1162,
	491, 1162,
	492, 1162,
	493, 1162,
	494, 1162,
	495, 1162,
	497, 1162,
	498, 1162,
	499, 1162,
	500, 1162,
	502, 1162,
	503, 1162,
	506, 1162,
	507, 1162,
	508, 1162,
	509, 1162,
	510, 1162,
	511, 1162,
	512, 1162,
	514, 1162,
	517, 1162,
	518, 1162,
	519, 1162,
	520, 1162,
	521, 1162,
	522, 1162,
	524, 1162,
	525, 1162,
	526, 1162,
	527, 1162,
	532, 1162,
	533, 1162,
	534, 1162,
	535, 1162,
	536, 1162,
	537, 1162,
	-2, 0,
	-1, 1518,
	1, 490,
	561, 490,
	563, 490,
	565, 490,
	-2, 1340,
	-1, 1521,
	4, 2461,
	11, 2461,
	12, 2461,
	14, 2461,
	15, 2461,
	16, 2461,
	17, 2461,
	18, 2461,
	19, 2461,
	21, 2461,
	22, 2461,
	23, 2461,
	24, 2461,
	25, 2461,
	26, 2461,
	27, 2461,
	29, 2461,
	30, 2461,
	33, 2461,
	34, 2461,
	36, 2461,
	38, 2461,
	41, 2461,
	42, 2461,
	44, 2461,
	45, 2461,
	46, 2461,
	47, 2461,
	48, 2461,
	49, 2461,
	50, 2461,
	52, 2461,
	53, 2461,
	54, 2461,
	55, 2461,
	57, 2461,
	58, 2461,
	59, 2461,
	60, 2461,
	61, 2461,
	62, 2461,
	63, 2461,
	67, 2461,
	68, 2461,
	69, 2461,
	70, 2461,
	72, 2461,
	73, 2461,
	74, 2461,
	75, 2461,
	78, 2461,
	79, 2461,
	80, 2461,
	81, 2461,
	82, 2461,
	83, 2461,
	84, 2461,
	85, 2461,
	87, 2461,
	88, 2461,
	89, 2461,
	90, 2461,
	91, 2461,
	93, 2461,
	94, 2461,
	95, 2461,
	96, 2461,
	97, 2461,
	98, 2461,
	99, 2461,
	100, 2461,
	102, 2461,
	103, 2461,
	104, 2461,
	105, 2461,
	106, 2461,
	107, 2461,
	115, 2461,
	116, 2461,
	117, 2461,
	118, 2461,
	120, 2461,
	121, 2461,
	122, 2461,
	124, 2461,
	125, 2461,
	126, 2461,
	128, 2461,
	129, 2461,
	131, 2461,
	132, 2461,
	133, 2461,
	136, 2461,
	137, 2461,
	138, 2461,
	140, 2461,
	141, 2461,
	143, 2461,
	144, 2461,
	145, 2461,
	147, 2461,
	148, 2461,
	149, 2461,
	150, 2461,
	151, 2461,
	152, 2461,
	153, 2461,
	154, 2461,
	155, 2461,
	156, 2461,
	157, 2461,
	158, 2461,
	159, 2461,
	160, 2461,
	161, 2461,
	165, 2461,
	166, 2461,
	167, 2461,
	168, 2461,
	169, 2461,
	170, 2461,
	171, 2461,
	172, 2461,
	175, 2461,
	176, 2461,
	178, 2461,
	181, 2461,
	182, 2461,
	183, 2461,
	184, 2461,
	185, 2461,
	186, 2461,
	187, 2461,
	188, 2461,
	189, 2461,
	190, 2461,
	191, 2461,
	192, 2461,
	193, 2461,
	195, 2461,
	196, 2461,
	198, 2461,
	199, 2461,
	201, 2461,
	202, 2461,
	203, 2461,
	204, 2461,
	205, 2461,
	206, 2461,
	207, 2461,
	208, 2461,
	209, 2461,
	210, 2461,
	211, 2461,
	212, 2461,
	213, 2461,
	214, 2461,
	215, 2461,
	216, 2461,
	217, 2461,
	219, 2461,
	220, 2461,
	222, 2461,
	223, 2461,
	224, 2461,
	225, 2461,
	227, 2461,
	228, 2461,
	229, 2461,
	230, 2461,
	232, 2461,
	234, 2461,
	235, 2461,
	236, 2461,
	237, 2461,
	238, 2461,
	239, 2461,
	240, 2461,
	241, 2461,
	242, 2461,
	243, 2461,
	245, 2461,
	246, 2461,
	247, 2461,
	248, 2461,
	249, 2461,
	250, 2461,
	251, 2461,
	252, 2461,
	254, 2461,
	255, 2461,
	256, 2461,
	258, 2461,
	259, 2461,
	260, 2461,
	261, 2461,
	262, 2461,
	263, 2461,
	265, 2461,
	269, 2461,
	270, 2461,
	273, 2461,
	274, 2461,
	275, 2461,
	276, 2461,
	277, 2461,
	278, 2461,
	279, 2461,
	280, 2461,
	281, 2461,
	282, 2461,
	283, 2461,
	284, 2461,
	285, 2461,
	286, 2461,
	287, 2461,
	288, 2461,
	289, 2461,
	290, 2461,
	291, 2461,
	292, 2461,
	293, 2461,
	294, 2461,
	295, 2461,
	296, 2461,
	297, 2461,
	298, 2461,
	299, 2461,
	301, 2461,
	302, 2461,
	303, 2461,
	304, 2461,
	305, 2461,
	306, 2461,
	307, 2461,
	308, 2461,
	309, 2461,
	310, 2461,
	311, 2461,
	312, 2461,
	313, 2461,
	314, 2461,
	316, 2461,
	319, 2461,
	320, 2461,
	321, 2461,
	323, 2461,
	324, 2461,
	325, 2461,
	326, 2461,
	327, 2461,
	330, 2461,
	334, 2461,
	335, 2461,
	336, 2461,
	337, 2461,
	339, 2461,
	340, 2461,
	341, 2461,
	343, 2461,
	345, 2461,
	346, 2461,
	347, 2461,
	348, 2461,
	349, 2461,
	350, 2461,
	351, 2461,
	352, 2461,
	353, 2461,
	354, 2461,
	355, 2461,
	356, 2461,
	358, 2461,
	359, 2461,
	360, 2461,
	361, 2461,
	362, 2461,
	363, 2461,
	364, 2461,
	365, 2461,
	366, 2461,
	367, 2461,
	368, 2461,
	369, 2461,
	370, 2461,
	371, 2461,
	372, 2461,
	374, 2461,
	376, 2461,
	377, 2461,
	378, 2461,
	379, 2461,
	380, 2461,
	381, 2461,
	382, 2461,
	383, 2461,
	384, 2461,
	385, 2461,
	386, 2461,
	387, 2461,
	389, 2461,
	395, 2461,
	396, 2461,
	397, 2461,
	398, 2461,
	399, 2461,
	400, 2461,
	401, 2461,
	402, 2461,
	403, 2461,
	404, 2461,
	406, 2461,
	407, 2461,
	408, 2461,
	409, 2461,
	410, 2461,
	411, 2461,
	412, 2461,
	413, 2461,
	414, 2461,
	415, 2461,
	416, 2461,
	417, 2461,
	418, 2461,
	419, 2461,
	420, 2461,
	421, 2461,
	422, 2461,
	423, 2461,
	424, 2461,
	425, 2461,
	426, 2461,
	427, 2461,
	429, 2461,
	430, 2461,
	431, 2461,
	432, 2461,
	433, 2461,
	434, 2461,
	436, 2461,
	437, 2461,
	438, 2461,
	439, 2461,
	440, 2461,
	441, 2461,
	442, 2461,
	443, 2461,
	444, 2461,
	445, 2461,
	446, 2461,
	447, 2461,
	448, 2461,
	449, 2461,
	451, 2461,
	453, 2461,
	454, 2461,
	455, 2461,
	456, 2461,
	457, 2461,
	458, 2461,
	459, 2461,
	460, 2461,
	461, 2461,
	462, 2461,
	463, 2461,
	464, 2461,
	465, 2461,
	467, 2461,
	468, 2461,
	470, 2461,
	472, 2461,
	473, 2461,
	474, 2461,
	475, 2461,
	476, 2461,
	477, 2461,
	478, 2461,
	479, 2461,
	480, 2461,
	482, 2461,
	483, 2461,
	484, 2461,
	485, 2461,
	486, 2461,
	488, 2461,
	490, 2461,
	491, 2461,
	492, 2461,
	493, 2461,
	494, 2461,
	495, 2461,
	497, 2461,
	498, 2461,
	499, 2461,
	500, 2461,
	502, 2461,
	503, 2461,
	506, 2461,
	507, 2461,
	508, 2461,
	509, 2461,
	510, 2461,
	511, 2461,
	512, 2461,
	514, 2461,
	517, 2461,
	518, 2461,
	519, 2461,
	520, 2461,
	521, 2461,
	522, 2461,
	524, 2461,
	525, 2461,
	526, 2461,
	527, 2461,
	532, 2461,
	533, 2461,
	534, 2461,
	535, 2461,
	536, 2461,
	537, 2461,
	538, 2461,
	540, 2461,
	543, 2461,
	544, 2461,
	545, 2461,
	546, 2461,
	547, 2461,
	548, 2461,
	550, 2461,
	551, 2461,
	552, 2461,
	553, 2461,
	554, 2461,
	555, 2461,
	556, 2461,
	557, 2461,
	558, 2461,
	560, 2461,
	563, 2461,
	564, 2461,
	566, 2461,
	567, 2461,
	-2, 0,
	-1, 1526,
	180, 2349,
	487, 2349,
	545, 2349,
	564, 2349,
	-2, 0,
	-1, 1575,
	378, 791,
	434, 791,
	492, 791,
	-2, 0,
	-1, 1601,
	1, 786,
	561, 786,
	563, 786,
	565, 786,
	-2, 0,
	-1, 1602,
	1, 822,
	561, 822,
	563, 822,
	565, 822,
	-2, 0,
	-1, 1603,
	1, 830,
	561, 830,
	563, 830,
	565, 830,
	-2, 0,
	-1, 1604,
	1, 793,
	561, 793,
	563, 793,
	565, 793,
	-2, 0,
	-1, 1606,
	1, 797,
	561, 797,
	563, 797,
	565, 797,
	-2, 0,
	-1, 1612,
	1, 804,
	561, 804,
	563, 804,
	565, 804,
	-2, 0,
	-1, 1640,
	1, 2407,
	561, 2407,
	563, 2407,
	564, 2407,
	565, 2407,
	-2, 855,
	-1, 1641,
	1, 2346,
	561, 2346,
	563, 2346,
	564, 2346,
	565, 2346,
	-2, 856,
	-1, 1656,
	1, 1245,
	565, 1245,
	-2, 1250,
	-1, 1659,
	164, 1381,
	177, 1381,
	264, 1381,
	328, 1381,
	-2, 1321,
	-1, 1753,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	504, 1342,
	-2, 1781,
	-1, 1813,
	563, 1931,
	-2, 0,
	-1, 1848,
	146, 1342,
	164, 1342,
	177, 1342,
	231, 1342,
	264, 1342,
	328, 1342,
	338, 1342,
	504, 1342,
	-2, 1468,
	-1, 1897,
	562, 1608,
	-2, 1596,
	-1, 1940,
	1, 619,
	565, 619,
	-2, 1250,
	-1, 2054,
	213, 223,
	-2, 2071,
	-1, 2055,
	213, 224,
	-2, 266,
	-1, 2184,
	1, 788,
	561, 788,
	563, 788,
	565, 788,
	-2, 0,
	-1, 2185,
	1, 824,
	561, 824,
	563, 824,
	565, 824,
	-2, 0,
	-1, 2186,
	1, 832,
	561, 832,
	563, 832,
	565, 832,
	-2, 0,
	-1, 2219,
	1, 806,
	561, 806,
	563, 806,
	565, 806,
	-2, 0,
	-1, 2265,
	414, 1408,
	415, 1408,
	-2, 1641,
	-1, 2296,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1661,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1662,
	-1, 2298,
	94, 0,
	245, 0,
	246, 0,
	547, 0,
	548, 0,
	-2, 1663,
	-1, 2299,
	94, 0,
	245, 0,
	246, 0,
	547, 0,
	548, 0,
	-2, 1664,
	-1, 2300,
	94, 0,
	245, 0,
	246, 0,
	547, 0,
	548, 0,
	-2, 1665,
	-1, 2301,
	94, 0,
	245, 0,
	246, 0,
	547, 0,
	548, 0,
	-2, 1666,
	-1, 2302,
	94, 0,
	245, 0,
	246, 0,
	547, 0,
	548, 0,
	-2, 1667,
	-1, 2303,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1668,
	-1, 2315,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1680,
	-1, 2316,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1681,
	-1, 2317,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1682,
	-1, 2320,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1687,
	-1, 2326,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1691,
	-1, 2328,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1699,
	-1, 2329,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1700,
	-1, 2330,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1701,
	-1, 2331,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1702,
	-1, 2467,
	5, 2075,
	180, 1942,
	562, 2072,
	-2, 2063,
	-1, 2468,
	180, 1943,
	-2, 2412,
	-1, 2469,
	180, 1944,
	-2, 2250,
	-1, 2470,
	180, 1945,
	-2, 2142,
	-1, 2471,
	180, 1946,
	-2, 2192,
	-1, 2472,
	180, 1947,
	-2, 2235,
	-1, 2473,
	180, 1948,
	-2, 2344,
	-1, 2474,
	180, 1949,
	-2, 1764,
	-1, 2543,
	1, 1469,
	2, 1469,
	105, 1469,
	146, 1469,
	164, 1469,
	177, 1469,
	181, 1469,
	197, 1469,
	200, 1469,
	227, 1469,
	231, 1469,
	242, 1469,
	260, 1469,
	264, 1469,
	302, 1469,
	328, 1469,
	332, 1469,
	338, 1469,
	405, 1469,
	409, 1469,
	504, 1469,
	515, 1469,
	529, 1469,
	530, 1469,
	531, 1469,
	541, 1469,
	561, 1469,
	563, 1469,
	565, 1469,
	567, 1469,
	-2, 1468,
	-1, 2556,
	562, 2044,
	-2, 2058,
	-1, 2558,
	52, 1369,
	131, 1369,
	-2, 282,
	-1, 2583,
	562, 1607,
	-2, 1597,
	-1, 2724,
	1, 1138,
	561, 1138,
	563, 1138,
	565, 1138,
	-2, 1369,
	-1, 2901,
	333, 1411,
	-2, 2451,
	-1, 2902,
	333, 1412,
	-2, 2330,
	-1, 2906,
	414, 2008,
	415, 2008,
	-2, 1762,
	-1, 2907,
	414, 2012,
	415, 2012,
	-2, 1763,
	-1, 2908,
	414, 2009,
	415, 2009,
	-2, 1762,
	-1, 2909,
	414, 2013,
	415, 2013,
	-2, 1763,
	-1, 2922,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1689,
	-1, 2923,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1693,
	-1, 2929,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1695,
	-1, 3159,
	1, 616,
	561, 616,
	563, 616,
	565, 616,
	-2, 1250,
	-1, 3292,
	1, 1138,
	561, 1138,
	563, 1138,
	565, 1138,
	-2, 1369,
	-1, 3402,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1697,
	-1, 3409,
	236, 0,
	238, 0,
	319, 0,
	-2, 1716,
	-1, 3476,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1745,
	-1, 3477,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1746,
	-1, 3478,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1747,
	-1, 3482,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1751,
	-1, 3483,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1752,
	-1, 3484,
	14, 0,
	15, 0,
	16, 0,
	543, 0,
	544, 0,
	545, 0,
	-2, 1753,
	-1, 3530,
	562, 2045,
	-2, 2059,
	-1, 3567,
	564, 2060,
	-2, 1172,
	-1, 3670,
	564, 2568,
	-2, 1297,
	-1, 3728,
	236, 0,
	238, 0,
	319, 0,
	-2, 1717,
	-1, 3731,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1720,
	-1, 3732,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1722,
	-1, 3948,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1721,
	-1, 3949,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 1723,
	-1, 3960,
	236, 0,
	-2, 1754,
	-1, 4118,
	236, 0,
	-2, 1755,
	-1, 4278,
	49, 0,
	210, 0,
	263, 0,
	442, 0,
	538, 0,
	546, 0,
	-2, 2415,
}

const sqlPrivate = 57344

const sqlLast = 114714

var sqlAct = [...]int{

	250, 4164, 4146, 3277, 2817, 4288, 2786, 3080, 4168, 4277,
	4390, 3997, 4252, 4233, 4236, 4000, 4289, 4339, 3276, 2051,
	4290, 4071, 1375, 3711, 3441, 4218, 3304, 4044, 3905, 2662,
	1165, 4051, 4122, 3854, 4276, 2153, 3969, 2275, 3985, 3872,
	3900, 1176, 1509, 3563, 3937, 3662, 4060, 998, 3309, 2162,
	3604, 3815, 3798, 3886, 3394, 3177, 1504, 1884, 4085, 2137,
	1668, 3302, 3622, 2343, 3638, 3624, 3910, 3564, 3272, 2283,
	2621, 3262, 723, 2499, 1240, 2839, 687, 2826, 1995, 1541,
	2687, 3359, 3965, 2915, 2276, 2747, 2775, 2097, 2757, 3533,
	3357, 3123, 2828, 3767, 3103, 3063, 3710, 723, 826, 2836,
	1333, 2819, 4, 1049, 3095, 2772, 2005, 3086, 2825, 989,
	2045, 2770, 1823, 2046, 2623, 2787, 2536, 2387, 3084, 2160,
	2280, 1799, 4123, 3501, 1761, 1048, 2535, 2356, 2899, 1583,
	1341, 2385, 242, 1540, 1429, 3062, 997, 168, 718, 2135,
	2701, 2835, 244, 2040, 2024, 1046, 4165, 2031, 2758, 1223,
	243, 1976, 1042, 1979, 1932, 1824, 1656, 2517, 1484, 2376,
	1966, 2264, 2247, 3130, 1854, 2568, 2340, 2245, 1519, 3274,
	1843, 2085, 1434, 1505, 1840, 2496, 1156, 1338, 724, 2538,
	1495, 1051, 2612, 725, 2780, 1209, 652, 2567, 2829, 1159,
	1794, 2379, 820, 2661, 2525, 1833, 2357, 2507, 1138, 1358,
	2429, 1746, 1669, 2463, 2246, 1670, 1612, 669, 1360, 2248,
	720, 2084, 1517, 681, 729, 771, 2109, 1458, 1173, 177,
	799, 2269, 732, 1370, 1027, 178, 168, 1994, 638, 655,
	104, 1161, 660, 43, 1136, 42, 40, 31, 29, 729,
	663, 27, 1675, 887, 2950, 1381, 907, 732, 149, 3515,
	1655, 3516, 2126, 2946, 993, 2126, 70, 2126, 45, 44,
	2126, 4457, 2126, 3082, 3319, 2516, 4447, 1683, 1684, 4434,
	3338, 3153, 71, 2516, 4433, 144, 4424, 4407, 2516, 4405,
	2059, 3814, 4319, 3814, 3152, 993, 4320, 4312, 75, 1155,
	1714, 2516, 1374, 3138, 4310, 3338, 4307, 1686, 2516, 65,
	4308, 3318, 2509, 2914, 2516, 4304, 47, 841, 146, 4305,
	4299, 4274, 4273, 2593, 2059, 2059, 2059, 1683, 1684, 4272,
	4267, 1168, 4209, 2146, 2146, 1153, 46, 4124, 82, 4266,
	4261, 1685, 4259, 2146, 3814, 4231, 3814, 4208, 4201, 3814,
	1714, 2574, 2516, 1167, 4200, 4195, 4194, 1686, 2516, 3814,
	3814, 4188, 49, 66, 1218, 2059, 2570, 3035, 3036, 4160,
	50, 4115, 4120, 3864, 4102, 88, 2574, 4099, 3699, 147,
	1171, 2059, 4096, 2144, 4053, 2683, 3814, 48, 4054, 103,
	2161, 1685, 4018, 4017, 89, 100, 2059, 2059, 974, 1139,
	1139, 1705, 2059, 2592, 973, 4009, 1683, 1684, 4008, 2059,
	1702, 3976, 3814, 3950, 3929, 2059, 4103, 2574, 2146, 3918,
	994, 3849, 3837, 3338, 3813, 2516, 2516, 1218, 3814, 1714,
	983, 51, 2146, 988, 3730, 3678, 1686, 3505, 2574, 3354,
	3672, 1691, 3636, 3525, 3354, 1192, 3637, 3526, 3523, 90,
	3508, 89, 3524, 3505, 2516, 1140, 3425, 2508, 3421, 3353,
	2059, 3724, 2516, 3354, 3345, 3079, 1395, 1187, 3346, 2516,
	1685, 1605, 3074, 3073, 3026, 3000, 2516, 2516, 3027, 3001,
	3899, 1708, 1709, 1710, 1711, 1713, 1715, 1142, 2992, 1143,
	2990, 1691, 2993, 2516, 2516, 2961, 2959, 2842, 3864, 2516,
	2815, 2146, 2960, 2814, 2149, 1389, 2596, 2149, 2573, 2565,
	2516, 3838, 2574, 2516, 2559, 38, 2515, 2148, 2059, 2059,
	2516, 2149, 3699, 3346, 2949, 2647, 2678, 2611, 1945, 1549,
	821, 3041, 2125, 1999, 2141, 1713, 1715, 3035, 3036, 2753,
	3053, 3054, 3055, 1706, 2058, 2695, 2609, 1188, 1819, 1369,
	1885, 3595, 3397, 3375, 1841, 215, 2034, 70, 2552, 824,
	823, 1700, 1701, 1585, 3320, 2551, 2550, 2549, 2548, 1144,
	1691, 1141, 982, 71, 981, 980, 979, 3035, 3036, 978,
	3053, 3054, 3055, 3321, 215, 977, 976, 972, 971, 75,
	970, 93, 969, 1706, 968, 967, 2879, 3783, 217, 966,
	965, 964, 2127, 963, 962, 2127, 961, 2127, 52, 960,
	2127, 3050, 2127, 959, 1713, 1715, 958, 957, 956, 938,
	885, 55, 884, 883, 882, 881, 57, 217, 880, 82,
	1683, 1684, 67, 3051, 879, 878, 877, 56, 176, 96,
	876, 99, 875, 874, 873, 53, 1383, 216, 872, 148,
	871, 3050, 870, 1714, 869, 868, 54, 867, 209, 3742,
	1686, 3318, 866, 865, 864, 215, 88, 210, 1188, 863,
	1394, 2124, 1706, 60, 862, 861, 216, 860, 141, 3543,
	103, 2144, 1707, 859, 858, 89, 100, 857, 2783, 179,
	856, 855, 145, 854, 1685, 215, 1051, 1374, 844, 2508,
	1051, 3041, 843, 839, 1383, 838, 832, 831, 217, 1388,
	789, 788, 1712, 746, 745, 744, 1243, 2382, 179, 1553,
	1243, 3519, 215, 743, 1363, 735, 734, 733, 702, 693,
	692, 691, 1707, 1053, 143, 141, 675, 238, 217, 3057,
	90, 3041, 1213, 1222, 1535, 237, 236, 1227, 1051, 180,
	1051, 235, 1051, 234, 233, 232, 231, 216, 1363, 230,
	229, 228, 3056, 227, 3355, 217, 2803, 3126, 209, 2125,
	1382, 2144, 3052, 226, 2141, 225, 2240, 210, 1349, 224,
	1344, 223, 222, 1363, 221, 220, 219, 216, 218, 2972,
	3912, 2955, 3077, 2734, 1691, 1025, 2578, 1539, 209, 179,
	2766, 2383, 3, 3051, 2557, 2542, 1802, 210, 1844, 2412,
	2156, 1707, 2398, 1801, 216, 1096, 1696, 1694, 1695, 1687,
	1688, 1689, 1690, 1692, 1693, 209, 1974, 1363, 1051, 179,
	3078, 1682, 1188, 1363, 210, 1805, 2396, 1363, 1713, 1715,
	1867, 1440, 1442, 3051, 1772, 1051, 1763, 1051, 1802, 1207,
	1336, 1363, 1377, 1348, 1351, 1801, 179, 1051, 4295, 1051,
	1229, 1175, 4275, 1703, 1699, 4175, 1696, 1694, 1695, 1687,
	1688, 1689, 1690, 1692, 1693, 3035, 3036, 1800, 3995, 729,
	4112, 2384, 93, 2381, 3964, 3919, 1432, 732, 3898, 2155,
	4106, 1236, 215, 1330, 1335, 4104, 1706, 215, 3790, 3765,
	3035, 3036, 1373, 1363, 1202, 3764, 3046, 3044, 3045, 3037,
	3038, 3039, 3040, 3042, 3043, 1372, 3758, 1351, 1351, 1383,
	1371, 1051, 3035, 3036, 1051, 4127, 3757, 3756, 3749, 176,
	96, 215, 99, 3035, 3036, 217, 1522, 1524, 3748, 3746,
	217, 3741, 3052, 3035, 3036, 1383, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 3738, 215, 215, 1351, 3641, 1554,
	3737, 3635, 3547, 3546, 825, 1445, 1683, 1684, 1516, 141,
	168, 168, 3545, 3529, 217, 3496, 3495, 3494, 1044, 1489,
	1492, 3417, 3052, 3413, 216, 3121, 3070, 3914, 3349, 216,
	1501, 3061, 1764, 215, 1762, 209, 1686, 1607, 217, 217,
	209, 1498, 1213, 215, 210, 1213, 3034, 3050, 3031, 210,
	3593, 3030, 3028, 1169, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 2999, 2998, 216, 2386, 143, 179, 1152, 2997, 2994,
	1685, 179, 1770, 996, 209, 1707, 217, 2768, 2991, 3041,
	180, 1520, 2971, 210, 2954, 1051, 217, 216, 216, 2947,
	1765, 1051, 2816, 2543, 2369, 1621, 1682, 2066, 209, 209,
	1763, 2100, 1681, 994, 3041, 179, 4451, 210, 210, 3047,
	3048, 3049, 1683, 1684, 4399, 3075, 3046, 3044, 3045, 3037,
	3038, 3039, 3040, 3042, 3043, 216, 3041, 1461, 2576, 179,
	822, 1534, 2064, 1660, 4398, 216, 209, 3041, 4369, 3642,
	4329, 4327, 1686, 1548, 1177, 210, 209, 3041, 3443, 3047,
	3048, 3049, 4167, 4156, 4153, 210, 3046, 3044, 3045, 3037,
	3038, 3039, 3040, 3042, 3043, 4152, 1654, 2782, 3144, 4151,
	1691, 4143, 4136, 2380, 4126, 4125, 1685, 179, 4100, 4084,
	4083, 3051, 1559, 2346, 4069, 215, 4066, 4014, 3991, 3962,
	3945, 1576, 3944, 3926, 3925, 3889, 1051, 1051, 1051, 2587,
	3865, 3782, 1051, 3763, 3700, 1608, 3051, 3694, 3691, 1173,
	215, 1173, 1687, 1688, 1689, 1690, 1692, 1693, 3583, 3582,
	3569, 3324, 3568, 3511, 3499, 3408, 1243, 1750, 217, 3356,
	3642, 1821, 3339, 3295, 1051, 3234, 215, 723, 3207, 3051,
	3180, 1902, 723, 3179, 1665, 1363, 1657, 1752, 2352, 1664,
	1870, 3146, 1051, 217, 2976, 2975, 1363, 3913, 2970, 2767,
	1881, 2938, 2746, 215, 1808, 1928, 1807, 974, 1659, 1806,
	1803, 1795, 1804, 973, 1051, 1830, 1691, 216, 1661, 217,
	1243, 1793, 2585, 2584, 1678, 1679, 1683, 1684, 209, 2554,
	2547, 1875, 3118, 2514, 1380, 2394, 1387, 210, 1393, 1866,
	1822, 1963, 216, 1817, 1213, 1816, 217, 1877, 1815, 1827,
	1828, 2157, 1168, 209, 1168, 994, 1686, 1814, 1851, 179,
	3052, 1972, 210, 1813, 1812, 1938, 1937, 1811, 216, 1810,
	1809, 1790, 1796, 1797, 1167, 1789, 1167, 1788, 1787, 209,
	1786, 1785, 1784, 1783, 179, 3052, 1782, 1781, 210, 168,
	1685, 1780, 1779, 1778, 1777, 216, 1776, 1765, 1751, 1749,
	1744, 1171, 1201, 1171, 1348, 1459, 209, 1139, 1190, 3180,
	179, 1183, 4128, 3892, 1515, 210, 1873, 3786, 3052, 729,
	3734, 1842, 1852, 1874, 729, 3542, 3522, 732, 3514, 2958,
	2545, 1533, 732, 1538, 3980, 1862, 3788, 179, 3541, 1464,
	1849, 1764, 3142, 1547, 1747, 1552, 1871, 1965, 1224, 4396,
	2411, 1940, 3840, 2397, 4389, 1683, 1684, 3305, 1363, 1363,
	3035, 3036, 1820, 4154, 1965, 4056, 4055, 1936, 1243, 3917,
	1965, 1226, 3867, 1987, 215, 3866, 3839, 2395, 1714, 3785,
	1846, 994, 3703, 3210, 1933, 1686, 1861, 1878, 1860, 1859,
	1857, 1856, 1925, 3702, 1855, 1943, 3045, 3037, 3038, 3039,
	3040, 3042, 3043, 3701, 4107, 1606, 3517, 2020, 1882, 4105,
	2023, 3035, 3036, 2028, 1218, 2666, 3341, 217, 3994, 1685,
	3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043, 3340, 1225,
	4061, 3645, 1844, 1968, 3395, 2996, 1958, 2052, 2056, 215,
	1652, 1218, 2995, 2920, 3037, 3038, 3039, 3040, 3042, 3043,
	1785, 2649, 3046, 3044, 3045, 3037, 3038, 3039, 3040, 3042,
	3043, 1221, 1575, 1999, 1802, 3581, 216, 3039, 3040, 3042,
	3043, 1801, 2004, 1774, 954, 2176, 3279, 209, 3278, 4271,
	2154, 2032, 217, 1218, 1584, 1785, 210, 4052, 1687, 1688,
	1689, 1690, 1692, 1693, 4315, 1622, 4300, 4287, 3263, 2840,
	1585, 2047, 729, 2382, 3601, 3600, 3586, 3372, 179, 3157,
	732, 3966, 2377, 1951, 1363, 3082, 1363, 955, 1363, 1691,
	3445, 4296, 2583, 1818, 2090, 1798, 3270, 4355, 2094, 2964,
	4309, 216, 1488, 2049, 1363, 1363, 1439, 2095, 1372, 1366,
	1196, 4306, 209, 1371, 3314, 1363, 3558, 4147, 3901, 2106,
	2692, 210, 1563, 4230, 2689, 4133, 2093, 1363, 3183, 1363,
	1363, 1363, 2027, 1713, 1715, 2101, 1463, 1151, 3576, 1771,
	2823, 2779, 3256, 179, 2255, 3041, 2163, 4380, 3389, 4356,
	3614, 723, 4035, 2057, 3161, 4297, 3828, 2383, 1405, 1413,
	952, 2577, 950, 2175, 2597, 948, 1689, 1690, 1692, 1693,
	946, 943, 4446, 4028, 4020, 3862, 2225, 2615, 1941, 2223,
	2615, 1367, 3610, 3609, 2103, 3603, 3599, 2076, 1348, 2159,
	3597, 1706, 2613, 2077, 3555, 2613, 2116, 3554, 3259, 3137,
	2114, 2776, 2253, 2969, 2968, 2967, 1464, 2129, 2966, 2180,
	1957, 1956, 2924, 3613, 1965, 1967, 2699, 2698, 2694, 1619,
	2685, 2677, 2676, 2675, 2674, 1226, 2653, 2640, 1858, 934,
	2108, 3143, 1051, 2112, 1051, 784, 2566, 2384, 2164, 2381,
	1414, 1051, 2327, 1620, 1902, 1902, 1243, 3051, 1051, 1051,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 1051, 1225, 1051, 1952, 1051, 1051, 1051, 1051,
	2257, 1658, 1520, 729, 1520, 2168, 2150, 1561, 2151, 2244,
	1202, 732, 1461, 1219, 2111, 3163, 2111, 1226, 1051, 2425,
	4384, 1051, 1051, 2424, 994, 1618, 994, 2285, 2075, 1051,
	3810, 3373, 2238, 1051, 992, 1051, 1051, 2167, 1474, 1960,
	1707, 3943, 2184, 1243, 785, 3209, 1409, 2254, 4381, 1051,
	1051, 1051, 1051, 1693, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 1451, 3806, 1450, 2255, 1449, 940, 1448, 2172,
	1422, 2201, 2604, 2154, 1996, 1225, 1208, 1631, 2342, 2558,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 2342,
	2386, 2219, 2651, 1051, 2358, 2359, 3052, 2234, 2185, 1219,
	2639, 2237, 650, 2192, 2268, 1173, 1556, 1992, 2358, 2374,
	4385, 1601, 1243, 2229, 1573, 3807, 2252, 2912, 4002, 991,
	4408, 1173, 1508, 2253, 3824, 1215, 2897, 2638, 645, 2113,
	3380, 3620, 1997, 1998, 2420, 2243, 2241, 1051, 1243, 2625,
	2242, 2256, 2249, 1463, 2882, 1368, 2189, 3379, 1962, 2183,
	2670, 3572, 4293, 2466, 2466, 2480, 2186, 2358, 2876, 2373,
	2500, 2502, 1993, 1663, 1200, 974, 2506, 1602, 974, 974,
	3619, 2272, 2663, 2664, 2273, 2274, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 2422, 1896, 3841, 1961, 3043, 2423, 2663,
	2664, 2426, 2530, 2427, 2428, 2663, 2664, 2350, 2377, 2380,
	2251, 1219, 3861, 1220, 2348, 2236, 1577, 2193, 1168, 1862,
	2555, 1215, 2522, 3434, 1169, 3561, 1169, 2354, 4387, 929,
	2386, 1557, 3598, 1435, 1168, 1603, 993, 3596, 1851, 3585,
	1167, 2371, 4004, 3037, 3038, 3039, 3040, 3042, 3043, 4355,
	2911, 1999, 3258, 987, 3228, 1243, 1167, 2628, 2885, 2544,
	994, 2324, 1180, 4366, 2693, 1651, 2571, 1171, 2254, 994,
	1216, 2521, 700, 994, 1213, 1617, 1899, 1433, 1217, 1139,
	3431, 1635, 2673, 1171, 2652, 2691, 2579, 1902, 3224, 2462,
	2491, 2529, 1351, 2534, 2475, 3160, 2540, 2541, 2504, 1220,
	168, 3942, 1178, 1585, 2594, 2512, 2513, 3584, 2616, 2600,
	2614, 2523, 2527, 2528, 1585, 1243, 852, 2690, 1804, 3802,
	1849, 2688, 1614, 1215, 3803, 2602, 3217, 3223, 3822, 1363,
	782, 4294, 781, 4372, 2569, 787, 786, 2252, 2617, 1351,
	2063, 2062, 930, 4371, 1051, 1051, 2564, 1051, 4411, 2035,
	2726, 4344, 2650, 2018, 2042, 1562, 1216, 2233, 2603, 2002,
	3432, 994, 2904, 2905, 1217, 3216, 2386, 2595, 3716, 944,
	1363, 944, 2586, 2686, 944, 3805, 698, 3715, 2601, 945,
	944, 2590, 1796, 1797, 2224, 703, 2750, 2222, 2884, 2725,
	3808, 2655, 2017, 3311, 2589, 3312, 2591, 2671, 2001, 1411,
	4437, 1220, 990, 1473, 2126, 4386, 1181, 1990, 1832, 4148,
	2598, 1408, 4162, 4393, 1435, 3162, 819, 2881, 1629, 2764,
	1791, 2044, 2322, 1999, 4292, 2325, 4343, 1363, 1363, 1336,
	1363, 2131, 2021, 2006, 2133, 1010, 4205, 1218, 3140, 1890,
	2138, 4322, 1363, 2140, 2630, 2633, 1348, 2143, 2642, 2620,
	4323, 2627, 2729, 3237, 3881, 2010, 2731, 1363, 1216, 3573,
	2654, 3195, 2760, 2041, 2790, 2235, 1217, 2191, 3311, 646,
	2811, 2043, 1990, 2672, 3823, 2321, 3712, 3955, 2806, 1969,
	1970, 729, 2845, 2846, 1836, 2665, 2667, 2668, 2669, 732,
	845, 4365, 4003, 2852, 2853, 2854, 4250, 1051, 4241, 2863,
	708, 2864, 2865, 2386, 2281, 2282, 1980, 3804, 2883, 2837,
	2007, 1981, 2615, 1990, 2926, 2338, 3194, 1372, 1632, 3847,
	833, 2841, 2732, 1218, 2756, 2341, 931, 2631, 3367, 2744,
	1839, 2812, 668, 2861, 2822, 1743, 2974, 3360, 2754, 2526,
	647, 1051, 1630, 2336, 3811, 1834, 941, 1051, 1051, 4412,
	2368, 4400, 2539, 3939, 1351, 1351, 993, 3447, 3891, 2030,
	1572, 1574, 2935, 1837, 2843, 168, 2774, 2797, 2847, 1933,
	2848, 2800, 2793, 2801, 2887, 2792, 2889, 2785, 699, 3706,
	716, 3538, 2029, 2626, 648, 1558, 649, 1193, 2807, 3717,
	2933, 3391, 3627, 2188, 2895, 2239, 2182, 2805, 2813, 2809,
	2858, 3625, 1051, 1051, 710, 1835, 1348, 2824, 1051, 1662,
	1199, 2011, 2867, 1351, 2869, 2025, 2871, 4203, 4169, 4342,
	1982, 1051, 1051, 701, 1589, 1218, 697, 1051, 1051, 4291,
	3362, 2349, 4354, 1051, 3198, 3097, 2880, 1986, 1520, 4352,
	1997, 1998, 1051, 1051, 1051, 3361, 2866, 1348, 1051, 1348,
	2860, 4184, 4204, 1633, 2323, 4391, 1179, 3485, 1051, 4068,
	932, 2868, 714, 2870, 3882, 2872, 1560, 3660, 929, 2927,
	2026, 2957, 2038, 2903, 853, 1051, 2012, 2013, 1836, 3298,
	2332, 2019, 3938, 3200, 4321, 2083, 2894, 1896, 1896, 1542,
	2893, 1829, 987, 1191, 1186, 2890, 637, 2892, 2333, 3640,
	2008, 2268, 2898, 2334, 1673, 1983, 1988, 2339, 933, 3628,
	2913, 3713, 1838, 3761, 3627, 2271, 2952, 2953, 2000, 1672,
	4094, 2956, 2036, 3625, 1839, 1953, 4417, 2930, 846, 847,
	1672, 2022, 3358, 4011, 705, 3131, 1634, 4010, 3989, 2524,
	4438, 2009, 4077, 1667, 2127, 3199, 4132, 1950, 3661, 2948,
	2931, 3607, 2261, 4392, 2936, 3557, 3299, 1837, 834, 835,
	3291, 2037, 3175, 709, 3171, 1051, 1051, 1051, 2765, 1899,
	1899, 2925, 4086, 2759, 1051, 1051, 1051, 3827, 3430, 1051,
	2646, 930, 2748, 2107, 3826, 4087, 4394, 1984, 2096, 1051,
	1173, 1243, 2088, 715, 2069, 1051, 3623, 1051, 1465, 4170,
	3089, 3090, 2657, 1402, 3551, 1173, 712, 674, 2632, 3500,
	4219, 3392, 707, 2682, 1002, 2963, 4088, 3940, 3096, 1671,
	4185, 1948, 2230, 1243, 1946, 2518, 1672, 2656, 3663, 1989,
	1671, 3628, 3906, 1990, 2745, 1173, 3718, 1476, 1243, 4050,
	3486, 3363, 3364, 3365, 3366, 1352, 4048, 3990, 2735, 3487,
	2014, 2738, 3072, 2740, 704, 1902, 1743, 994, 3186, 1243,
	3111, 1949, 3182, 3181, 2918, 3124, 2896, 3626, 3091, 3136,
	736, 2173, 3513, 1363, 1363, 4090, 1051, 2335, 3094, 3202,
	3093, 1604, 711, 1673, 2563, 2262, 1832, 2337, 2562, 2482,
	1051, 3150, 2561, 1168, 1673, 2781, 717, 4089, 2781, 2520,
	1169, 3632, 1902, 1427, 2519, 3762, 1838, 706, 1168, 848,
	849, 2560, 3099, 2752, 4091, 1167, 1169, 3719, 3203, 1457,
	1051, 1363, 2015, 3158, 2932, 4416, 1671, 1213, 1455, 991,
	1167, 3998, 1890, 1890, 2934, 4139, 3100, 3164, 1168, 836,
	837, 3109, 1171, 3117, 3083, 3125, 3105, 3112, 3113, 3067,
	3068, 3069, 3129, 985, 1590, 929, 1363, 1171, 1443, 4045,
	1167, 3098, 1836, 3167, 3168, 931, 1243, 3185, 2658, 2659,
	3190, 3873, 1444, 3192, 2636, 1363, 3101, 3172, 3825, 987,
	1363, 3184, 3147, 3148, 3188, 3149, 3350, 1171, 4171, 3626,
	2105, 3212, 3120, 3552, 3115, 851, 3116, 3110, 4362, 3266,
	1985, 2873, 4166, 1363, 1059, 3133, 3134, 3135, 1839, 1363,
	1896, 1363, 2844, 3923, 2730, 1243, 2728, 4227, 4216, 1566,
	3987, 3215, 723, 1834, 986, 3768, 3502, 3154, 3155, 4222,
	3999, 2393, 3238, 1363, 3159, 4245, 4364, 3106, 1987, 4140,
	3240, 1837, 4311, 3243, 1363, 3165, 3235, 3248, 3250, 246,
	246, 246, 3132, 640, 641, 3226, 656, 640, 656, 666,
	1173, 672, 1649, 3988, 1348, 690, 3307, 3284, 930, 1987,
	696, 2798, 1933, 1933, 3201, 3197, 246, 2802, 1647, 3208,
	3922, 1626, 3290, 1835, 673, 3104, 3219, 2093, 3261, 1624,
	3264, 3065, 1899, 1874, 1600, 830, 1598, 3275, 4155, 932,
	3222, 246, 3961, 1363, 1363, 2032, 3230, 1596, 737, 738,
	3227, 3236, 4223, 2032, 3316, 3257, 3108, 1594, 1592, 3246,
	1933, 3253, 4141, 3760, 3631, 1363, 1582, 1580, 1453, 3245,
	3064, 3388, 3337, 2837, 3252, 3229, 3407, 3370, 3151, 3029,
	3220, 1432, 2837, 3330, 3221, 2655, 2937, 933, 4092, 2749,
	1456, 2684, 2648, 4093, 2588, 1933, 1869, 1865, 1650, 1454,
	3268, 1544, 1243, 1168, 729, 1243, 3300, 3374, 2221, 3387,
	3288, 1667, 732, 2878, 1933, 2877, 2850, 2250, 3308, 1933,
	2232, 1613, 3367, 2196, 3260, 1167, 2068, 1929, 1775, 1555,
	1838, 3360, 1426, 2392, 4286, 1051, 3848, 3335, 3336, 3368,
	3836, 1051, 1051, 4215, 3313, 1051, 1051, 1051, 942, 1051,
	3904, 3853, 1171, 3322, 640, 640, 1348, 1348, 1051, 1902,
	3352, 3107, 246, 3348, 3331, 3386, 850, 1051, 4340, 3795,
	1051, 168, 168, 3239, 3659, 3306, 1243, 3651, 3327, 3385,
	1648, 4332, 3612, 3303, 3315, 1051, 740, 739, 3579, 3577,
	3556, 3294, 931, 1243, 1676, 1890, 1646, 3289, 3369, 1625,
	3280, 2804, 2799, 1902, 1902, 1051, 1051, 1623, 1051, 1051,
	1051, 2777, 1599, 3427, 1597, 2916, 3410, 2763, 3376, 3393,
	3377, 2755, 3378, 2742, 3362, 1595, 2727, 2147, 2145, 2142,
	2139, 2134, 3382, 994, 2132, 1593, 1591, 2128, 1348, 3361,
	2119, 741, 742, 2067, 1581, 1579, 1452, 3390, 2065, 2048,
	1051, 3459, 2033, 2016, 1051, 1876, 1902, 1902, 1051, 1051,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051, 1051,
	1051, 1051, 1051, 1051, 1051, 1051, 1051, 3460, 1051, 2003,
	3383, 3419, 3420, 2220, 1991, 1051, 1051, 1902, 3535, 4356,
	1954, 4255, 1051, 3247, 3415, 947, 949, 951, 2042, 3928,
	1677, 3921, 3920, 1051, 3860, 3426, 2917, 3791, 3437, 2838,
	1973, 1148, 1407, 4079, 1173, 1173, 2637, 3442, 1051, 3433,
	3435, 3436, 4072, 3449, 984, 3671, 932, 2615, 1999, 2615,
	2187, 3456, 1644, 1645, 1497, 3141, 3457, 1149, 2216, 2104,
	3458, 1496, 2613, 1355, 2634, 2215, 4254, 1243, 3855, 2194,
	3829, 1683, 1684, 1578, 4114, 3769, 3531, 3747, 713, 2660,
	2641, 1680, 1683, 1684, 1194, 3497, 4358, 3534, 4350, 3204,
	3205, 4316, 3518, 3206, 933, 2741, 3464, 1398, 3489, 2218,
	3536, 3537, 3176, 3606, 1051, 3648, 2089, 1205, 3462, 2689,
	651, 2697, 1686, 2679, 3548, 3549, 3550, 2696, 3498, 239,
	1051, 1173, 1436, 2681, 3605, 3231, 3232, 2041, 2643, 3233,
	1755, 4210, 4179, 4388, 1760, 1685, 2680, 1168, 1168, 3490,
	4176, 3509, 3510, 1497, 3504, 1497, 1685, 4138, 1051, 1051,
	4064, 3565, 168, 3506, 3507, 3363, 3364, 3365, 3366, 1167,
	1167, 772, 4043, 1150, 662, 634, 1512, 816, 2645, 3650,
	3639, 3528, 3520, 3293, 2784, 1051, 1528, 2505, 3996, 1939,
	1883, 2644, 3139, 3521, 4247, 4415, 1171, 1171, 4065, 4248,
	4247, 3035, 3036, 1683, 1684, 4248, 4178, 1363, 2607, 2608,
	2605, 2606, 1565, 1374, 3544, 3739, 2388, 3540, 1564, 4368,
	2607, 2605, 2421, 4029, 1628, 3856, 1902, 1627, 3852, 3851,
	3735, 3587, 3657, 3539, 1168, 3438, 3591, 3241, 1769, 1768,
	3592, 3594, 3560, 4402, 4373, 1169, 4214, 3608, 1896, 4213,
	4212, 4129, 1567, 4046, 4024, 1363, 1167, 3981, 3602, 3978,
	1169, 3884, 1051, 3787, 3697, 3677, 3634, 3575, 3570, 3325,
	1173, 1051, 3297, 3296, 3191, 3673, 3025, 3024, 3023, 2655,
	3664, 3646, 3022, 1171, 3021, 3020, 3019, 3630, 3018, 3017,
	1169, 1363, 1363, 1363, 3682, 1896, 3016, 3618, 3015, 3014,
	1131, 3013, 3012, 3011, 3010, 3009, 3008, 1363, 3633, 3668,
	3007, 3006, 3005, 3004, 3003, 3002, 2875, 1184, 2857, 2856,
	2855, 2795, 1980, 1351, 2769, 2743, 1243, 1981, 2635, 3686,
	1899, 3621, 3654, 2581, 3629, 2580, 2353, 2217, 2214, 2790,
	3649, 2213, 2212, 2211, 2210, 2122, 1195, 2121, 1243, 3698,
	2120, 1051, 1051, 3652, 2118, 690, 2102, 1051, 1051, 1902,
	2078, 2074, 1051, 1051, 2073, 1051, 2072, 3667, 2071, 1051,
	3666, 2070, 2093, 1168, 3669, 2837, 1643, 1899, 1642, 246,
	1051, 246, 246, 1339, 3674, 246, 246, 1354, 3675, 1587,
	3681, 1586, 1483, 3687, 3688, 1167, 1051, 1482, 3647, 1481,
	1480, 246, 3695, 1376, 3696, 3689, 3693, 1479, 1478, 3326,
	1477, 3692, 3328, 3329, 1475, 1470, 3729, 3332, 1469, 3333,
	1468, 3334, 1171, 1467, 1400, 1466, 1421, 1420, 3721, 1419,
	3720, 1418, 1417, 3714, 1416, 1415, 1982, 1410, 3733, 3704,
	1406, 1404, 1403, 1425, 1234, 1431, 1233, 1232, 1231, 246,
	246, 1230, 1339, 1986, 3665, 1198, 1173, 1197, 1944, 953,
	939, 3709, 4001, 3809, 1173, 1637, 87, 1412, 1243, 759,
	1243, 1472, 81, 2281, 3450, 2039, 3574, 1173, 912, 4244,
	1396, 4161, 767, 246, 3774, 246, 246, 4229, 1339, 246,
	1354, 3193, 2700, 1890, 1243, 2195, 1588, 2197, 3119, 2546,
	690, 4202, 246, 246, 3743, 2973, 4121, 3124, 3759, 3954,
	2391, 1773, 3076, 83, 1035, 1169, 1081, 1051, 3880, 1173,
	3879, 1983, 1988, 3796, 3559, 830, 2281, 3465, 2827, 3877,
	3876, 1887, 1889, 1001, 1246, 1955, 1930, 1041, 1971, 1964,
	1890, 2582, 3821, 2465, 1058, 1055, 1243, 1891, 3777, 3565,
	3771, 3772, 3766, 1893, 1243, 3832, 3833, 3493, 1057, 1168,
	3776, 1056, 3820, 3770, 1892, 3773, 1792, 1168, 3781, 3819,
	1054, 3775, 3784, 1886, 3656, 3792, 3793, 3655, 2751, 2788,
	1168, 1167, 1363, 1363, 3794, 3831, 168, 3323, 1462, 1167,
	1460, 914, 1959, 2347, 2375, 2962, 1766, 246, 3830, 1363,
	1016, 1037, 1167, 1984, 2372, 1189, 1026, 1015, 1171, 3102,
	1243, 3081, 1896, 3310, 246, 1363, 1171, 3527, 2260, 776,
	3859, 3032, 1168, 2378, 3869, 3871, 1182, 2488, 2481, 1171,
	2477, 3857, 3156, 3858, 3850, 3844, 2778, 1653, 3968, 3780,
	3907, 1745, 1173, 3863, 1167, 1989, 3897, 2789, 1228, 1990,
	3846, 3868, 1363, 1363, 1363, 1019, 1896, 1896, 3874, 2345,
	1757, 2942, 3870, 1243, 2270, 3317, 3122, 3927, 2575, 4251,
	3446, 1171, 3565, 2082, 1147, 1051, 1051, 1051, 3911, 3890,
	3875, 1146, 2093, 1145, 4235, 3924, 4232, 3690, 3894, 3896,
	3902, 3273, 1947, 1243, 1899, 3166, 1351, 2599, 1051, 1735,
	3281, 1051, 1051, 3909, 1031, 1347, 3087, 3351, 1423, 1896,
	1896, 1051, 695, 3816, 1902, 1043, 1734, 2721, 2720, 1051,
	1051, 4135, 1214, 1212, 1211, 1210, 3174, 4436, 3571, 214,
	3935, 3930, 3933, 3916, 1243, 2910, 1363, 3941, 1899, 1899,
	1896, 3931, 1674, 1666, 211, 1168, 213, 212, 3885, 3653,
	1243, 3532, 3128, 3893, 4314, 3946, 3589, 3265, 1051, 22,
	21, 20, 108, 41, 19, 1173, 3176, 1167, 123, 140,
	139, 3963, 116, 138, 137, 136, 135, 1051, 142, 1902,
	134, 133, 3957, 128, 132, 131, 130, 1051, 129, 127,
	1051, 1899, 1899, 126, 1171, 3565, 3951, 125, 1933, 1051,
	3578, 124, 3580, 3983, 3974, 3975, 1243, 122, 121, 120,
	119, 118, 640, 117, 3908, 115, 1985, 1363, 1363, 3984,
	114, 113, 1899, 3982, 112, 111, 3705, 110, 109, 1169,
	1169, 686, 4005, 246, 683, 246, 59, 4023, 58, 246,
	107, 106, 18, 4034, 39, 14, 63, 64, 17, 2351,
	4006, 13, 1376, 1339, 246, 1243, 246, 1890, 1363, 4058,
	3611, 246, 1376, 656, 1755, 4021, 246, 1376, 1168, 34,
	4049, 4025, 86, 98, 690, 4031, 1173, 1173, 4039, 97,
	4038, 35, 95, 4073, 94, 33, 4078, 2152, 4063, 4047,
	1167, 4062, 4042, 3977, 16, 1051, 1051, 4041, 15, 92,
	4037, 1890, 1890, 1512, 2165, 4082, 3565, 3565, 4057, 4076,
	3275, 91, 1051, 1902, 2166, 4101, 1169, 1171, 2487, 4097,
	4098, 4075, 32, 30, 11, 9, 2174, 3911, 2177, 2178,
	2179, 4081, 4095, 4080, 8, 4070, 36, 1853, 12, 3679,
	5, 173, 1051, 3680, 172, 1051, 175, 2808, 171, 1896,
	174, 85, 170, 4109, 1890, 1890, 169, 84, 28, 10,
	165, 4059, 3644, 78, 167, 1173, 166, 164, 4110, 4111,
	4119, 163, 162, 79, 76, 4026, 4131, 161, 4142, 1168,
	1168, 80, 160, 77, 159, 1890, 4130, 26, 6, 62,
	7, 3936, 3371, 101, 102, 3565, 37, 4149, 74, 73,
	72, 1167, 1167, 25, 61, 24, 1051, 1051, 4150, 4145,
	202, 4144, 201, 200, 4113, 199, 198, 1173, 197, 192,
	1173, 191, 196, 194, 1363, 193, 1348, 195, 1171, 1171,
	4157, 1899, 190, 205, 1363, 1363, 204, 206, 203, 208,
	189, 246, 4159, 187, 246, 183, 182, 3565, 186, 4193,
	3565, 1363, 188, 4173, 4174, 1169, 4177, 4074, 4172, 4062,
	4181, 185, 184, 4183, 181, 1051, 1051, 207, 1168, 157,
	158, 4187, 69, 156, 155, 1051, 4191, 4192, 4198, 4190,
	4199, 154, 1896, 153, 152, 4189, 151, 150, 68, 23,
	1167, 2, 1, 4196, 4224, 3883, 0, 246, 4197, 0,
	0, 246, 0, 4207, 1051, 1051, 3895, 1051, 246, 0,
	0, 4211, 0, 0, 246, 0, 4225, 1171, 1351, 0,
	1168, 0, 0, 1168, 4226, 4234, 4237, 0, 3915, 246,
	0, 246, 4246, 4249, 0, 640, 0, 246, 4206, 0,
	0, 0, 1167, 4243, 0, 1167, 4265, 4269, 0, 4270,
	0, 2123, 4239, 0, 1051, 1051, 1051, 0, 2265, 4268,
	0, 0, 4263, 246, 1899, 4256, 4264, 0, 0, 1171,
	246, 0, 1171, 4260, 0, 0, 0, 4238, 0, 0,
	4242, 1051, 0, 0, 4303, 4285, 4298, 0, 4253, 4282,
	4283, 0, 4284, 0, 1890, 0, 0, 0, 0, 0,
	0, 690, 0, 0, 0, 830, 0, 0, 4317, 0,
	0, 0, 4326, 0, 2533, 0, 0, 0, 0, 0,
	4301, 0, 0, 4186, 0, 0, 0, 4328, 4337, 1051,
	246, 0, 1339, 246, 4324, 4336, 4331, 0, 4341, 4325,
	0, 1169, 0, 4330, 0, 0, 4335, 690, 0, 1169,
	4347, 4348, 4333, 4334, 246, 0, 4357, 4353, 4338, 0,
	4351, 0, 1169, 0, 0, 246, 246, 0, 246, 4361,
	246, 0, 246, 4363, 246, 4349, 4374, 4359, 1173, 4234,
	1173, 4360, 4237, 4370, 4375, 0, 4367, 4382, 0, 0,
	0, 0, 4376, 0, 0, 2226, 0, 2483, 2227, 0,
	2228, 0, 0, 0, 1169, 0, 4378, 0, 3565, 0,
	3565, 0, 246, 0, 4383, 4397, 0, 4395, 0, 4013,
	0, 4377, 0, 4379, 0, 0, 0, 1890, 0, 0,
	4406, 0, 0, 672, 0, 4410, 4409, 690, 0, 1051,
	1051, 4253, 4401, 4403, 0, 0, 0, 1051, 4413, 1051,
	1051, 0, 0, 0, 4404, 4422, 4426, 0, 4427, 4419,
	4428, 0, 4425, 0, 4432, 4430, 2487, 4431, 0, 0,
	0, 0, 0, 4429, 0, 0, 0, 0, 4435, 0,
	4439, 1168, 0, 1168, 0, 4445, 4441, 0, 4443, 0,
	4444, 0, 0, 4440, 4450, 0, 0, 4448, 0, 0,
	0, 4452, 1051, 1167, 4453, 1167, 4455, 4442, 2724, 4459,
	0, 4456, 0, 4458, 0, 0, 0, 0, 4449, 3170,
	0, 0, 4420, 4421, 0, 0, 0, 1169, 0, 2790,
	1171, 0, 1171, 0, 0, 0, 0, 1896, 0, 0,
	0, 0, 4015, 4016, 0, 0, 2487, 2487, 1980, 0,
	0, 0, 0, 1981, 0, 3214, 0, 0, 0, 1683,
	1684, 0, 0, 0, 0, 0, 4030, 0, 0, 4032,
	4033, 0, 0, 0, 0, 4454, 3225, 0, 0, 0,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 3810, 640, 0, 3244, 0, 0, 4163,
	0, 3251, 1896, 0, 0, 0, 2810, 1512, 0, 246,
	0, 0, 0, 0, 0, 0, 248, 0, 640, 1899,
	4180, 0, 0, 1685, 0, 246, 3806, 640, 0, 0,
	3799, 0, 0, 1705, 0, 0, 2851, 0, 0, 246,
	0, 0, 1702, 0, 0, 0, 0, 3797, 0, 0,
	1169, 0, 0, 0, 246, 1354, 3801, 0, 3287, 0,
	0, 0, 1982, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3807, 1986,
	0, 0, 0, 0, 1899, 0, 0, 0, 0, 0,
	2487, 2487, 2487, 3406, 0, 0, 0, 0, 0, 0,
	0, 246, 1354, 0, 656, 0, 0, 0, 70, 0,
	0, 246, 0, 1708, 1709, 1710, 1711, 0, 3800, 0,
	0, 0, 0, 1691, 71, 0, 0, 0, 1683, 1684,
	0, 0, 4257, 0, 0, 4258, 1896, 0, 0, 0,
	75, 0, 0, 0, 0, 0, 4158, 1983, 1988, 0,
	0, 1714, 0, 0, 0, 2624, 0, 0, 1686, 0,
	0, 1169, 1169, 0, 0, 0, 246, 1713, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	82, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 1685, 1700, 1701, 0, 0, 1014, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 246, 0,
	0, 1702, 0, 0, 0, 0, 0, 88, 1899, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 1984,
	0, 103, 0, 246, 2733, 0, 89, 100, 0, 0,
	0, 0, 0, 0, 0, 2900, 0, 1890, 0, 0,
	1169, 0, 0, 0, 0, 0, 0, 0, 1376, 0,
	0, 246, 3401, 0, 0, 0, 0, 0, 0, 246,
	0, 1989, 3802, 0, 0, 1990, 0, 3803, 2773, 0,
	0, 0, 1708, 1709, 1710, 1711, 0, 0, 2624, 0,
	640, 90, 1691, 0, 2794, 0, 0, 0, 0, 0,
	246, 0, 1169, 246, 0, 1169, 0, 246, 0, 246,
	0, 0, 0, 0, 1339, 0, 246, 246, 0, 1354,
	1354, 1977, 0, 0, 0, 2483, 2483, 0, 3805, 2820,
	830, 0, 2624, 2624, 0, 0, 1713, 1715, 0, 0,
	0, 0, 0, 3808, 1712, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 4313, 0, 0, 0, 0,
	1978, 0, 1700, 1701, 1707, 0, 246, 1339, 246, 0,
	0, 1376, 0, 1376, 1376, 246, 0, 0, 1339, 0,
	1339, 1890, 1339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	2939, 2940, 0, 0, 0, 0, 0, 0, 246, 246,
	246, 246, 1339, 246, 0, 246, 0, 0, 0, 0,
	1241, 0, 0, 0, 1342, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	3804, 0, 0, 0, 0, 0, 0, 0, 0, 2483,
	2483, 2483, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 96, 0, 99, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1699, 3811, 1696, 1694,
	1695, 1687, 1688, 1689, 1690, 1692, 1693, 215, 0, 0,
	0, 0, 0, 1712, 0, 825, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 2716, 0, 0, 0,
	0, 2487, 2487, 1707, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 1376, 3058, 3059, 3060, 0, 0, 0,
	217, 0, 0, 0, 0, 0, 1719, 1714, 0, 2708,
	2706, 3617, 0, 1169, 1686, 1169, 2710, 2712, 2702, 0,
	0, 0, 1732, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 3254, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 0, 0, 0, 0, 0, 0, 1685, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	209, 0, 3285, 0, 0, 0, 0, 1702, 0, 210,
	0, 0, 0, 3292, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 2487, 2487, 2487, 2487, 2487, 2487, 2487,
	2487, 2487, 2487, 2487, 2487, 2487, 2487, 2487, 2487, 2487,
	2487, 2487, 0, 2487, 1703, 1699, 0, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 0, 0,
	0, 0, 3343, 3344, 246, 0, 0, 0, 1708, 1709,
	1710, 1711, 0, 0, 0, 0, 0, 0, 1691, 246,
	1831, 0, 1014, 0, 640, 0, 1014, 0, 0, 640,
	0, 0, 640, 0, 0, 640, 640, 0, 0, 0,
	0, 640, 1327, 0, 0, 0, 1327, 0, 0, 246,
	0, 0, 0, 1723, 0, 0, 1733, 0, 2704, 0,
	0, 1376, 1713, 1715, 0, 0, 0, 0, 0, 2718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 1730, 0, 1376, 0, 0, 0, 0, 1700, 1701,
	2717, 2709, 2707, 2711, 2713, 2703, 2705, 2719, 0, 0,
	0, 0, 0, 0, 2715, 0, 1721, 2624, 2624, 246,
	0, 1354, 0, 0, 2624, 0, 0, 3178, 0, 0,
	1706, 0, 0, 0, 0, 2624, 3178, 0, 2624, 3178,
	0, 0, 3178, 0, 70, 0, 0, 2722, 0, 0,
	0, 0, 0, 0, 0, 246, 246, 1354, 246, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 75, 0, 1354, 246,
	0, 0, 1339, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 2624, 0, 3242, 2624, 1354, 0,
	0, 2624, 2624, 1354, 0, 0, 0, 0, 0, 0,
	0, 1000, 0, 0, 0, 0, 82, 0, 3835, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 3843,
	0, 3845, 246, 0, 0, 0, 0, 0, 0, 0,
	2483, 2483, 0, 0, 0, 0, 246, 3269, 0, 1712,
	3271, 2624, 0, 88, 246, 0, 0, 0, 246, 0,
	1431, 0, 0, 0, 0, 0, 0, 103, 0, 1707,
	0, 0, 89, 100, 1975, 0, 0, 0, 0, 2773,
	0, 0, 1339, 0, 246, 0, 0, 2624, 0, 640,
	0, 0, 0, 0, 0, 1724, 2624, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 246, 246,
	0, 2723, 0, 0, 0, 3403, 3404, 0, 0, 0,
	2714, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 246, 2773, 0, 0, 2773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2483, 2483, 2483, 2483, 2483, 2483, 2483, 2483,
	2483, 2483, 2483, 2483, 2483, 2483, 2483, 2483, 2483, 2483,
	2483, 0, 2483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3381, 0, 0, 1339, 246, 0,
	246, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 0, 0, 0, 0, 3752, 0, 0, 0,
	3751, 0, 2060, 246, 0, 1683, 1684, 3466, 3467, 3468,
	3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478,
	3479, 3480, 3481, 3482, 3483, 3484, 3615, 3488, 1714, 2572,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 1683, 1684, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3444,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 1685,
	0, 1686, 0, 0, 4036, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 176, 96, 0, 99,
	0, 0, 1327, 0, 0, 1685, 0, 0, 0, 0,
	3683, 3684, 3685, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 0, 1512, 0, 0, 0,
	0, 825, 0, 0, 0, 0, 141, 0, 0, 3400,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1014, 0, 0, 0, 0, 0, 1327, 0, 0, 1708,
	1709, 1710, 1711, 0, 0, 0, 217, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 1708, 1709, 1710, 1711, 0,
	640, 640, 0, 0, 0, 1691, 0, 180, 0, 0,
	0, 0, 0, 1713, 1715, 216, 0, 0, 0, 0,
	0, 0, 1376, 1376, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 1376, 1376, 1376, 1700,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 3567, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 2487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 1000, 0, 0, 0,
	1000, 0, 0, 0, 1327, 0, 0, 1706, 0, 0,
	2284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2487, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 0, 0, 1354, 246, 0, 0, 0, 1378, 0,
	1384, 0, 1390, 0, 0, 246, 71, 1083, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 75, 0, 246, 0, 70, 0, 0, 246,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	1712, 0, 71, 0, 0, 0, 0, 2389, 0, 0,
	0, 1512, 0, 2624, 246, 0, 0, 0, 75, 0,
	1707, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2820, 2820, 0, 1712, 0, 1513, 830,
	830, 2624, 0, 0, 2773, 2773, 0, 0, 830, 2624,
	0, 0, 0, 0, 0, 1531, 1707, 1536, 82, 88,
	0, 0, 0, 0, 0, 0, 0, 1545, 246, 1550,
	0, 0, 0, 103, 0, 0, 0, 0, 89, 100,
	0, 3932, 0, 3934, 0, 0, 0, 2487, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	0, 0, 2556, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 89, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3035, 3036, 0, 3053, 3054,
	3055, 1609, 0, 90, 1615, 0, 0, 0, 3744, 0,
	0, 0, 0, 0, 0, 0, 0, 3726, 0, 0,
	0, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 0, 0, 3979, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 3050,
	246, 0, 0, 0, 0, 0, 1376, 0, 246, 2610,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 1327, 0, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4040, 0, 0, 2624,
	2624, 2624, 0, 0, 0, 1754, 0, 0, 0, 0,
	3817, 1767, 3817, 3567, 1376, 2483, 0, 0, 0, 0,
	0, 0, 2624, 0, 3178, 93, 0, 1376, 1376, 246,
	1354, 0, 3035, 3036, 0, 3053, 3054, 3055, 0, 3041,
	0, 1354, 246, 1354, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3725, 2624, 0, 2624, 246, 1327,
	0, 93, 2483, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 96, 0, 99, 0, 0, 0, 0,
	0, 0, 2624, 0, 0, 0, 0, 3887, 0, 0,
	3960, 0, 0, 0, 0, 0, 246, 0, 0, 215,
	3056, 0, 0, 0, 0, 246, 3050, 825, 176, 96,
	0, 99, 141, 0, 0, 1047, 1825, 1825, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1327, 0,
	0, 0, 0, 0, 0, 215, 3567, 3992, 0, 1376,
	0, 3051, 217, 825, 0, 0, 0, 0, 141, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	245, 245, 245, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	0, 3035, 3036, 180, 3053, 3054, 3055, 730, 0, 0,
	0, 216, 0, 0, 1000, 0, 3041, 0, 0, 0,
	0, 0, 209, 3412, 143, 0, 0, 0, 0, 0,
	0, 210, 730, 1512, 1512, 0, 2483, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	1512, 0, 0, 1525, 0, 0, 0, 0, 209, 0,
	2624, 0, 3178, 0, 0, 3986, 0, 210, 0, 0,
	0, 0, 0, 246, 0, 3050, 0, 3056, 0, 3567,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 1523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3052, 0, 0, 690, 0, 0, 0, 0, 0, 0,
	0, 4118, 1339, 0, 0, 0, 0, 0, 3051, 0,
	0, 0, 0, 0, 0, 0, 1354, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 3986, 0, 0, 0,
	0, 0, 0, 1170, 2624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3041, 4067, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3567, 3567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3056, 3047, 3048, 3049,
	0, 3444, 0, 0, 3046, 3044, 3045, 3037, 3038, 3039,
	3040, 3042, 3043, 1174, 0, 0, 0, 1174, 0, 0,
	0, 1174, 3986, 0, 0, 0, 0, 3052, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3051, 0, 0,
	0, 0, 3817, 0, 0, 0, 0, 0, 0, 3567,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 3088, 0, 0, 0, 3887,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3567, 0, 246, 3567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3178, 0, 0, 3114, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	1174, 0, 3127, 0, 1174, 0, 0, 0, 0, 0,
	1376, 0, 1376, 0, 0, 0, 0, 0, 1174, 0,
	0, 0, 0, 3145, 3047, 3048, 3049, 0, 0, 0,
	0, 3046, 3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043,
	0, 4220, 0, 0, 0, 0, 3052, 0, 1376, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 2624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2259, 0, 2263, 0, 0, 0, 0, 0,
	0, 2277, 0, 0, 3444, 0, 0, 0, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 0, 2326, 246, 2328, 2329, 2330, 2331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3047, 3048, 3049, 0, 0, 2355, 3127,
	3046, 3044, 3045, 3037, 3038, 3039, 3040, 3042, 3043, 1754,
	0, 3986, 0, 2370, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2400,
	2403, 2406, 2409, 0, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 0, 0, 0, 0, 2624, 0, 0, 0, 0,
	0, 0, 3567, 0, 3567, 0, 0, 0, 0, 0,
	0, 0, 2479, 0, 2490, 2492, 2497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1327, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1376, 0, 0, 0, 0, 0,
	245, 0, 245, 245, 0, 0, 245, 245, 0, 1327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 1327, 2820, 3035, 3036, 0, 3053,
	3054, 3055, 0, 2624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1327, 1342, 0, 2820, 1241,
	0, 0, 0, 0, 0, 0, 1174, 0, 1174, 0,
	0, 0, 1014, 0, 0, 0, 0, 0, 0, 0,
	245, 245, 0, 1174, 0, 0, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 1684, 1903, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	3050, 0, 0, 1174, 245, 0, 245, 245, 0, 1714,
	245, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	3423, 0, 0, 245, 245, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3439, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 1327, 0, 0, 0, 0, 0, 3035, 3036,
	1705, 3053, 3054, 3055, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3411, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2736, 2737, 0, 2739, 245, 0,
	2928, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3050, 0, 0, 245, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 0,
	1691, 3056, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 3530, 3051, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 1732,
	1700, 1701, 3041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 1327, 0,
	0, 1327, 1706, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 2874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3056, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 1737, 0,
	0, 1174, 1327, 1174, 3051, 1174, 0, 0, 0, 0,
	0, 3052, 0, 0, 0, 1708, 1709, 1710, 1711, 1327,
	0, 1174, 1174, 0, 0, 1691, 0, 0, 0, 0,
	0, 0, 1174, 0, 1847, 0, 1170, 0, 0, 0,
	245, 0, 0, 0, 1174, 0, 1174, 1174, 1174, 0,
	0, 1712, 2922, 2923, 0, 245, 1847, 245, 2929, 0,
	1723, 0, 730, 1733, 0, 0, 0, 730, 0, 1713,
	1715, 1707, 0, 0, 0, 0, 0, 2943, 2944, 0,
	0, 807, 0, 2370, 0, 0, 1729, 0, 1730, 0,
	0, 0, 2951, 0, 0, 1700, 1701, 0, 0, 0,
	0, 790, 0, 0, 0, 0, 791, 0, 2965, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2977, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3047, 3048,
	3049, 0, 0, 3052, 792, 3046, 3044, 3045, 3037, 3038,
	3039, 3040, 3042, 3043, 0, 793, 0, 0, 0, 0,
	0, 1903, 1903, 1174, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 1327, 0, 0, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 813, 0, 0, 0,
	0, 0, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 2497, 2497, 2497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 796, 1825,
	0, 0, 245, 0, 0, 730, 1712, 3092, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 797, 0,
	0, 798, 0, 0, 3779, 0, 1707, 0, 0, 0,
	3047, 3048, 3049, 0, 0, 0, 716, 3046, 3044, 3045,
	3037, 3038, 3039, 3040, 3042, 3043, 0, 0, 3789, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 245, 0,
	812, 0, 245, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 1174, 0, 0, 245, 0, 0, 0, 1174,
	0, 0, 0, 0, 0, 0, 1000, 0, 1174, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 245, 0,
	1000, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 809, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	3196, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 0,
	0, 0, 0, 2986, 0, 0, 0, 2987, 0, 0,
	0, 0, 1327, 0, 0, 0, 0, 800, 0, 0,
	0, 245, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 819, 245, 801, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 245, 0, 245,
	0, 245, 0, 245, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 3952, 0, 715,
	0, 0, 0, 0, 0, 0, 802, 0, 0, 0,
	817, 818, 815, 0, 0, 0, 0, 0, 810, 0,
	0, 803, 1174, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 3952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2284, 0, 0, 0, 0, 804,
	811, 0, 0, 0, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 0, 1327, 0, 1327, 1174, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 0, 814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1327, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	2284, 0, 0, 808, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 1174, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 1327, 0, 0, 2277, 0, 0, 0, 0,
	1327, 3398, 3399, 0, 1174, 3402, 0, 0, 0, 3405,
	0, 0, 0, 0, 0, 0, 0, 0, 3409, 0,
	0, 0, 0, 0, 0, 0, 0, 3416, 0, 0,
	3092, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1327, 0, 1683, 1684,
	1170, 0, 0, 0, 0, 3451, 3452, 0, 3453, 3454,
	3455, 0, 0, 0, 0, 0, 1170, 0, 0, 0,
	0, 1714, 0, 0, 0, 0, 0, 0, 1686, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 1327,
	3461, 0, 0, 0, 3463, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 1327,
	0, 1702, 0, 0, 0, 3491, 3492, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 3503, 0, 0, 2458, 2459, 2460, 2461,
	2454, 2455, 2456, 2457, 0, 0, 0, 0, 3512, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2921, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 1709, 1710, 1711, 0, 245, 0, 1036,
	105, 0, 1691, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 1014, 0, 0, 0,
	0, 0, 245, 0, 3553, 0, 2434, 2435, 2436, 2437,
	0, 0, 1327, 0, 0, 0, 0, 0, 0, 245,
	3562, 0, 0, 0, 0, 0, 1713, 1715, 2446, 2447,
	2448, 2449, 2442, 2443, 2444, 2445, 2450, 2451, 2452, 2453,
	0, 0, 0, 0, 730, 0, 0, 0, 0, 3588,
	0, 0, 1700, 1701, 0, 0, 0, 0, 0, 0,
	0, 1327, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 1174, 0,
	0, 2430, 2431, 2432, 2433, 2438, 2439, 2440, 2441, 0,
	0, 245, 1174, 0, 245, 0, 0, 0, 245, 0,
	245, 0, 0, 0, 0, 0, 0, 245, 245, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 1174, 0, 0, 975, 0,
	0, 0, 1825, 0, 0, 0, 0, 0, 245, 995,
	0, 3676, 1903, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 245,
	1174, 1174, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 1903,
	0, 0, 1014, 1014, 0, 0, 0, 0, 0, 245,
	245, 245, 245, 1707, 245, 0, 245, 0, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3722, 3723, 0, 0, 0, 0, 3727, 3728, 0,
	0, 0, 3731, 3732, 0, 0, 0, 245, 0, 3736,
	0, 0, 0, 1174, 0, 245, 0, 0, 0, 0,
	3740, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 3745, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 1014, 0, 0, 0, 0, 1174, 0, 1174, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 1703, 1699, 0, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 1684,
	0, 1716, 1717, 1718, 1726, 1727, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 1714, 0, 0, 0, 0, 0, 3818, 1686, 0,
	1174, 1174, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 1174,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1903, 0, 0, 0,
	0, 0, 1708, 1709, 1710, 1711, 0, 0, 0, 0,
	1847, 0, 1691, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 3947, 3948, 3949, 0, 0,
	1903, 1903, 0, 0, 0, 0, 0, 1723, 0, 0,
	1733, 0, 0, 0, 0, 0, 1713, 1715, 2277, 0,
	0, 3958, 3959, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 1729, 0, 1730, 0, 0, 0, 3967,
	3970, 0, 1700, 1701, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 1903, 1903, 0, 0, 0, 0, 0,
	1721, 0, 0, 0, 0, 0, 245, 245, 0, 245,
	0, 0, 0, 0, 1706, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 1903, 0, 0, 0, 0, 0,
	245, 0, 241, 241, 636, 0, 0, 4012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4019, 0, 0,
	1000, 1174, 1174, 0, 0, 0, 1731, 0, 0, 4027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 1174, 0, 0, 0, 105, 0,
	105, 0, 105, 0, 0, 0, 0, 730, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 1170, 0, 0, 1174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 245, 0, 0, 0, 245,
	245, 0, 0, 0, 0, 0, 1683, 1684, 105, 0,
	0, 0, 995, 105, 105, 0, 0, 0, 0, 1724,
	0, 1060, 0, 0, 0, 105, 245, 105, 0, 1714,
	0, 0, 0, 0, 0, 0, 1686, 105, 0, 105,
	0, 0, 4134, 0, 0, 4137, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 247, 247, 0,
	1685, 0, 0, 1903, 0, 0, 0, 0, 0, 245,
	1705, 245, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 105,
	0, 0, 1174, 0, 0, 0, 1000, 1000, 0, 0,
	0, 0, 0, 0, 245, 1722, 0, 1174, 247, 0,
	1697, 1698, 1704, 1725, 1703, 1699, 0, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 1174, 1174,
	1174, 0, 0, 0, 3750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 2277, 0, 0, 0,
	1691, 0, 0, 1174, 0, 3970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 1903, 1748, 0, 0,
	0, 0, 0, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4281, 4281, 4281, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 4302, 0, 0, 0, 0, 0, 0, 0, 1170,
	1170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 1174, 0, 1174, 0, 0,
	0, 0, 0, 0, 1174, 0, 0, 0, 0, 4281,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 1845, 0,
	1848, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1174,
	1174, 0, 0, 0, 0, 0, 245, 0, 0, 4281,
	4414, 0, 0, 0, 0, 0, 1174, 4418, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 1174, 0, 0,
	0, 0, 1174, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 1174,
	245, 0, 0, 0, 245, 0, 0, 0, 0, 1174,
	1174, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 1346, 0,
	1174, 0, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 0, 0, 0,
	0, 1903, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 1487, 1487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1174, 0, 1529, 1530, 0, 0, 0,
	0, 0, 0, 0, 1174, 1174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1170, 1174, 0, 0, 1174, 0, 0, 0, 1170,
	0, 0, 0, 995, 0, 995, 0, 0, 0, 0,
	0, 0, 1847, 1174, 1174, 0, 247, 1247, 247, 247,
	0, 1247, 247, 247, 0, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1903, 0, 0, 0, 1847, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 1247, 245, 247, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 247, 247, 0, 0, 247, 0, 1247, 0,
	0, 0, 0, 0, 1247, 0, 0, 245, 1247, 247,
	247, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 1247, 0, 1174, 975, 0, 1174, 975, 975,
	0, 1174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1174, 1174, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 1683, 1684, 0, 1174, 0,
	0, 1726, 1727, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 1714, 0,
	0, 0, 0, 2344, 0, 1686, 0, 1052, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 995,
	0, 0, 0, 0, 247, 0, 0, 0, 1753, 0,
	0, 0, 1753, 0, 0, 0, 0, 0, 0, 1685,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 1872, 0, 1346,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 1710, 1711, 0, 0, 0, 0, 0, 245, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 1733, 0, 0,
	0, 0, 0, 1713, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 1847, 0, 0, 1174, 0, 1174, 0, 1700,
	1701, 0, 0, 0, 0, 0, 0, 0, 245, 245,
	0, 0, 0, 0, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 247, 247, 247, 0, 0, 0, 0, 247, 0,
	1847, 0, 0, 247, 0, 0, 1247, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 1247, 105, 0, 2087, 105, 0, 105, 0, 0,
	0, 0, 1847, 0, 245, 1847, 0, 2099, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 2110, 0, 2110, 0, 0, 0, 0, 0,
	2117, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	1707, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1487, 0, 0, 0,
	0, 0, 0, 1346, 0, 0, 1724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 2087, 0, 0, 2170, 0, 247, 1247,
	1247, 247, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 105, 0, 2190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2202,
	0, 2204, 1722, 2206, 0, 2208, 0, 2209, 0, 0,
	1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 0, 247, 0, 245, 0, 247, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 247, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 2344, 0, 247, 0, 0,
	0, 0, 0, 1847, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 1247, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1247, 247, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	1247, 1247, 1247, 0, 0, 0, 0, 251, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 247, 0, 247, 0, 247, 0, 247,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 1245, 0, 0,
	0, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 1365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2553, 0, 722, 0, 0, 0, 0, 1157,
	1365, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 0, 0, 0, 0, 0,
	1365, 0, 0, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2099, 0, 0, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 1732,
	1365, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 105, 0, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 1346, 0, 1247, 1702, 0, 0, 0, 0, 105,
	105, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2087, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1709, 1710, 1711, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 247, 0,
	0, 0, 0, 2796, 0, 0, 1487, 0, 247, 0,
	1487, 0, 1487, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 995, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 1733, 0, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 1247, 0, 0, 0,
	2849, 0, 0, 0, 105, 105, 1729, 0, 1730, 0,
	0, 0, 0, 247, 0, 1700, 1701, 0, 0, 2859,
	0, 2862, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 1721, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 247, 1247, 0, 0, 0,
	0, 2886, 1346, 2888, 1346, 0, 2891, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1487,
	0, 0, 0, 1245, 0, 0, 0, 2919, 247, 0,
	0, 1247, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	247, 0, 0, 0, 247, 0, 247, 1245, 0, 0,
	0, 0, 0, 247, 247, 0, 1712, 0, 1247, 1247,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1247, 0, 0, 1707, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 0, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 247, 0, 247, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 247, 247, 247, 0,
	247, 0, 247, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1157, 1157, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 1365, 1365, 0, 0, 0,
	0, 247, 0, 1244, 0, 1245, 0, 1244, 1722, 0,
	0, 1364, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1714, 0, 0, 0,
	0, 0, 0, 1686, 1364, 0, 0, 0, 0, 0,
	1364, 1732, 0, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1364, 0,
	0, 0, 3169, 0, 0, 0, 0, 1685, 0, 0,
	0, 1365, 0, 1365, 0, 1365, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 1365, 1365, 0, 0, 0, 0, 0, 3211, 3213,
	0, 2099, 1365, 105, 0, 0, 0, 0, 0, 0,
	1364, 0, 0, 0, 1365, 0, 1365, 1365, 1365, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3282, 0, 1247,
	0, 3286, 1723, 0, 0, 1733, 0, 0, 0, 0,
	0, 1713, 1715, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	1730, 0, 0, 1245, 1247, 1247, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1487, 0, 0,
	0, 1346, 1346, 0, 0, 1721, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 3347, 0,
	0, 0, 1247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 247, 0, 247, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 105,
	0, 1731, 0, 0, 0, 1157, 247, 1247, 0, 0,
	1245, 0, 0, 1157, 0, 0, 0, 1247, 0, 1720,
	0, 3384, 0, 1346, 0, 0, 1247, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 3396, 0, 0, 247,
	1247, 0, 1247, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 1712, 1245,
	0, 247, 0, 1244, 1247, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 722, 1247, 0, 0, 1707, 722,
	0, 0, 1364, 0, 0, 1245, 0, 0, 0, 0,
	0, 0, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 247, 247, 1244, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 1247, 1247, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 1247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 1247, 0, 247, 1247, 247, 0, 0,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 2366, 0, 0, 0, 2367,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 1364, 1364, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 1365, 1247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1365, 1365, 0, 1365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2099, 0, 1365,
	0, 0, 0, 0, 0, 0, 0, 0, 2099, 0,
	0, 0, 0, 0, 1365, 0, 0, 2344, 3643, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 2099, 1364, 0, 1364, 3658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 1364, 0, 0, 0, 0, 0, 1247, 0,
	0, 0, 1364, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 0, 1364, 1364, 1364, 0,
	0, 0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 0, 0, 0, 0, 0, 722, 0,
	0, 0, 0, 0, 0, 0, 1719, 1714, 0, 0,
	0, 3707, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 1732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 105, 0, 0, 1702, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 0,
	0, 247, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 0, 0, 0, 247, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 1247, 0, 1708, 1709,
	1710, 1711, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 1247, 1247, 0, 105, 0, 0, 105,
	1244, 0, 0, 1723, 0, 0, 1733, 0, 1247, 0,
	0, 0, 1713, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 1247, 0, 1729,
	0, 1730, 0, 0, 0, 0, 0, 0, 1700, 1701,
	0, 0, 3834, 0, 0, 0, 0, 0, 0, 1247,
	0, 0, 0, 0, 0, 2099, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1245, 1244,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 2099,
	0, 0, 1731, 0, 0, 1245, 0, 0, 3903, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1365, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1247,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 0, 0, 1247, 0, 0, 1365, 0,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1365, 0, 1724, 247, 0, 0, 0,
	0, 0, 0, 1245, 0, 0, 0, 1247, 0, 247,
	0, 247, 1365, 0, 0, 1247, 0, 1365, 0, 0,
	0, 0, 1244, 0, 0, 247, 3993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1364, 0, 0, 0,
	1365, 0, 0, 1247, 1247, 0, 1365, 0, 1365, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	1247, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	1365, 1247, 247, 0, 0, 0, 1247, 1364, 0, 0,
	2099, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 0, 1247, 1247, 1247, 0, 0, 0, 0,
	3414, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 1364, 0, 1364, 0, 0,
	1365, 1365, 0, 0, 0, 0, 0, 0, 0, 1364,
	0, 0, 0, 0, 1247, 0, 0, 0, 0, 0,
	4108, 1346, 1365, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 0, 1247, 0, 1245,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 0, 0, 0, 1247, 0, 0,
	0, 0, 0, 1245, 247, 0, 0, 0, 1247, 1247,
	0, 0, 0, 0, 0, 1685, 4182, 0, 0, 0,
	1245, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 1247, 0, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4228, 0, 0, 0,
	1685, 0, 0, 0, 0, 1708, 1709, 1710, 1711, 0,
	1705, 0, 0, 0, 0, 1691, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 1733, 0, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 0, 1729, 247, 1730, 0,
	0, 0, 0, 0, 0, 1700, 1701, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 4318, 0,
	1691, 0, 0, 1721, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 1247, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 1247, 1247, 0, 1244, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 1733, 0,
	0, 0, 1247, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	1244, 1729, 0, 1730, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 1244, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	247, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 1706, 0, 1365, 0, 0, 0, 0, 0,
	1364, 1364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1712, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 1365, 0, 0, 0, 1707, 0, 1364, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 1365, 1365,
	1365, 0, 247, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 1365, 0, 0, 0, 0, 0,
	0, 0, 1364, 0, 0, 0, 0, 1364, 0, 0,
	0, 1712, 0, 1245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 1707, 0, 0, 0, 1245, 1364, 0, 1364, 0,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 722,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	1364, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 1364, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 2989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1364, 1364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 1722, 0, 1245, 0, 1245, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 0, 0, 0,
	0, 1245, 2988, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 1684,
	0, 1716, 1717, 1718, 1726, 1727, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 1714, 0, 1245, 0, 0, 0, 0, 1686, 0,
	0, 1245, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 1365,
	1365, 0, 1685, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 1705, 0, 0, 0, 1365, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 1245, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1365,
	1365, 1365, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 1709, 1710, 1711, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	1733, 0, 0, 0, 0, 0, 1713, 1715, 0, 0,
	0, 1245, 0, 1365, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 1244, 1730, 0, 1245, 0, 0,
	0, 0, 1700, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1721, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 0, 0, 0, 0,
	0, 1686, 0, 1245, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 1365, 1365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 1705, 0, 0, 0, 0,
	0, 0, 1245, 0, 1702, 1365, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1364, 1707, 0, 1708, 1709, 1710, 1711, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 1364, 1364,
	1364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 1733, 1364, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 1729, 0, 1730, 0,
	0, 0, 0, 0, 0, 1700, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 1365, 0, 1721, 0, 0, 0, 0, 0, 0,
	0, 1365, 1365, 0, 0, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 1722, 0, 0, 1365, 0,
	1697, 1698, 1704, 1725, 1703, 1699, 0, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 0, 0,
	0, 0, 0, 0, 2985, 0, 0, 0, 748, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1720, 750, 0,
	0, 0, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 0, 0, 1244, 0, 1244, 0, 0,
	0, 752, 0, 769, 0, 0, 1719, 1714, 0, 0,
	0, 0, 0, 0, 1686, 0, 1712, 0, 0, 0,
	0, 1244, 1732, 0, 0, 0, 0, 0, 753, 0,
	0, 0, 0, 754, 0, 0, 1707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1685, 0,
	0, 0, 0, 777, 0, 0, 0, 0, 1705, 755,
	0, 0, 1724, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 775, 1244, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	1364, 0, 0, 0, 0, 756, 0, 0, 757, 0,
	0, 0, 0, 0, 0, 0, 1364, 0, 0, 779,
	0, 0, 0, 716, 0, 0, 0, 1244, 1708, 1709,
	1710, 1711, 1364, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 1364,
	1364, 1364, 0, 1723, 0, 0, 1733, 2984, 0, 0,
	1244, 0, 1713, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 1729,
	0, 1730, 0, 0, 0, 773, 0, 0, 1700, 1701,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 758, 0, 0, 0, 1244, 0, 0,
	0, 0, 0, 0, 760, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1364, 1364, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 1364, 0, 0, 0, 1707,
	0, 0, 768, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 0, 764,
	782, 0, 781, 0, 0, 1724, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 774, 0, 0, 0, 0,
	0, 783, 0, 780, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 0, 0, 0, 0, 0, 0, 0, 0,
	2983, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 1364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 1364, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 1248, 262, 263, 1249, 1250, 1251, 1364, 1252,
	582, 1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	1257, 587, 273, 274, 275, 276, 277, 278, 1258, 1259,
	0, 279, 588, 589, 590, 1260, 280, 281, 591, 1261,
	1328, 1262, 282, 283, 284, 285, 286, 287, 288, 0,
	1263, 290, 291, 292, 289, 293, 1264, 294, 0, 295,
	296, 297, 298, 299, 300, 1265, 301, 302, 303, 1115,
	304, 305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306,
	307, 308, 309, 0, 310, 592, 593, 1273, 314, 311,
	312, 1274, 315, 313, 1275, 316, 317, 318, 1276, 1277,
	319, 320, 321, 1278, 322, 323, 1279, 324, 325, 326,
	1280, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 1281, 252, 1282, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 1283, 344, 1284, 1285, 1116, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 1286, 355,
	600, 1287, 601, 356, 1288, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 1118, 362, 363, 1289, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	1290, 1117, 371, 605, 606, 1291, 607, 1292, 373, 374,
	1119, 608, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 1293, 385, 387,
	386, 1294, 388, 609, 1122, 389, 390, 1123, 1295, 391,
	0, 0, 0, 392, 393, 1296, 1297, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1298, 254, 1126, 434, 435, 1299, 610, 436, 611,
	438, 439, 1300, 0, 440, 0, 1301, 1302, 442, 443,
	444, 1303, 1304, 445, 446, 612, 1127, 447, 1128, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 1305, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 1306, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 1307, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 1308,
	491, 492, 493, 1129, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 1309, 514, 515, 513, 516, 517, 518, 1310,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 1311, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	1312, 541, 542, 0, 540, 1313, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 1314, 551, 623, 624, 625,
	626, 1315, 560, 1316, 552, 553, 554, 627, 555, 628,
	1317, 556, 557, 558, 559, 0, 561, 562, 1318, 1319,
	563, 564, 565, 567, 568, 566, 569, 1320, 570, 1321,
	0, 571, 572, 573, 629, 630, 631, 1322, 575, 574,
	576, 632, 1323, 1324, 1325, 1326, 577, 578, 633, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 2531, 0, 0, 0, 0, 0,
	0, 0, 2532, 255, 257, 256, 258, 259, 260, 261,
	1248, 262, 263, 1249, 1250, 1251, 0, 1252, 582, 1253,
	1254, 1255, 1256, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 1257, 587,
	273, 274, 275, 276, 277, 278, 1258, 1259, 0, 279,
	588, 589, 590, 1260, 280, 281, 591, 1261, 1328, 1262,
	282, 283, 284, 285, 286, 287, 288, 0, 1263, 290,
	291, 292, 289, 293, 1264, 294, 0, 295, 296, 297,
	298, 299, 300, 1265, 301, 302, 303, 1115, 304, 305,
	1266, 1267, 1269, 1268, 1270, 1271, 1272, 306, 307, 308,
	309, 0, 310, 592, 593, 1273, 314, 311, 312, 1274,
	315, 313, 1275, 316, 317, 318, 1276, 1277, 319, 320,
	321, 1278, 322, 323, 1279, 324, 325, 326, 1280, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 1281, 252, 1282, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 1283,
	344, 1284, 1285, 1116, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 1286, 355, 600, 1287,
	601, 356, 1288, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 1118, 362, 363, 1289, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 1290, 1117,
	371, 605, 606, 1291, 607, 1292, 373, 374, 1119, 608,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 1293, 385, 387, 386, 1294,
	388, 609, 1122, 389, 390, 1123, 1295, 391, 0, 0,
	0, 392, 393, 1296, 1297, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1298,
	254, 1126, 434, 435, 1299, 610, 436, 611, 438, 439,
	1300, 0, 440, 0, 1301, 1302, 442, 443, 444, 1303,
	1304, 445, 446, 612, 1127, 447, 1128, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 1305,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 1306, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	1307, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 1308, 491, 492,
	493, 1129, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	1309, 514, 515, 513, 516, 517, 518, 1310, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 1311, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 1312, 541,
	542, 0, 540, 1313, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 1314, 551, 623, 624, 625, 626, 1315,
	560, 1316, 552, 553, 554, 627, 555, 628, 1317, 556,
	557, 558, 559, 0, 561, 562, 1318, 1319, 563, 564,
	565, 567, 568, 566, 569, 1320, 570, 1321, 0, 571,
	572, 573, 629, 630, 631, 1322, 575, 574, 576, 632,
	1323, 1324, 1325, 1326, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 3422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3424, 255,
	257, 256, 258, 259, 260, 261, 1248, 262, 263, 1249,
	1250, 1251, 0, 1252, 582, 1253, 1254, 1255, 1256, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 1257, 587, 273, 274, 275, 276,
	277, 278, 1258, 1259, 0, 279, 588, 589, 590, 1260,
	280, 281, 591, 1261, 1328, 1262, 282, 283, 284, 285,
	286, 287, 288, 0, 1263, 290, 291, 292, 289, 293,
	1264, 294, 0, 295, 296, 297, 298, 299, 300, 1265,
	301, 302, 303, 1115, 304, 305, 1266, 1267, 1269, 1268,
	1270, 1271, 1272, 306, 307, 308, 309, 0, 310, 592,
	593, 1273, 314, 311, 312, 1274, 315, 313, 1275, 316,
	317, 318, 1276, 1277, 319, 320, 321, 1278, 322, 323,
	1279, 324, 325, 326, 1280, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	1281, 252, 1282, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 1283, 344, 1284, 1285, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 1286, 355, 600, 1287, 601, 356, 1288, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 1289, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1290, 1117, 371, 605, 606, 1291,
	607, 1292, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1293, 385, 387, 386, 1294, 388, 609, 1122, 389,
	390, 1123, 1295, 391, 0, 0, 0, 392, 393, 1296,
	1297, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1298, 254, 1126, 434, 435,
	1299, 610, 436, 611, 438, 439, 1300, 0, 440, 0,
	1301, 1302, 442, 443, 444, 1303, 1304, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1305, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 1306, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 1307, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 1308, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 1309, 514, 515, 513,
	516, 517, 518, 1310, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	1311, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 1312, 541, 542, 0, 540, 1313,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 1314,
	551, 623, 624, 625, 626, 1315, 560, 1316, 552, 553,
	554, 627, 555, 628, 1317, 556, 557, 558, 559, 0,
	561, 562, 1318, 1319, 563, 564, 565, 567, 568, 566,
	569, 1320, 570, 1321, 0, 571, 572, 573, 629, 630,
	631, 1322, 575, 574, 576, 632, 1323, 1324, 1325, 1326,
	577, 578, 633, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3778, 255,
	257, 256, 258, 259, 260, 261, 1248, 262, 263, 1249,
	1250, 1251, 0, 1252, 582, 1253, 1254, 1255, 1256, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 1257, 587, 273, 274, 275, 276,
	277, 278, 1258, 1259, 0, 279, 588, 589, 590, 1260,
	280, 281, 591, 1261, 1328, 1262, 282, 283, 284, 285,
	286, 287, 288, 0, 1263, 290, 291, 292, 289, 293,
	1264, 294, 0, 295, 296, 297, 298, 299, 300, 1265,
	301, 302, 303, 1115, 304, 305, 1266, 1267, 1269, 1268,
	1270, 1271, 1272, 306, 307, 308, 309, 0, 310, 592,
	593, 1273, 314, 311, 312, 1274, 315, 313, 1275, 316,
	317, 318, 1276, 1277, 319, 320, 321, 1278, 322, 323,
	1279, 324, 325, 326, 1280, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	1281, 252, 1282, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 1283, 344, 1284, 1285, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 1286, 355, 600, 1287, 601, 356, 1288, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 1289, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1290, 1117, 371, 605, 606, 1291,
	607, 1292, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1293, 385, 387, 386, 1294, 388, 609, 1122, 389,
	390, 1123, 1295, 391, 0, 0, 0, 392, 393, 1296,
	1297, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1298, 254, 1126, 434, 435,
	1299, 610, 436, 611, 438, 439, 1300, 0, 440, 0,
	1301, 1302, 442, 443, 444, 1303, 1304, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1305, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 1306, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 1307, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 1308, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 1309, 514, 515, 513,
	516, 517, 518, 1310, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	1311, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 1312, 541, 542, 0, 540, 1313,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 1314,
	551, 623, 624, 625, 626, 1315, 560, 1316, 552, 553,
	554, 627, 555, 628, 1317, 556, 557, 558, 559, 0,
	561, 562, 1318, 1319, 563, 564, 565, 567, 568, 566,
	569, 1320, 570, 1321, 0, 571, 572, 573, 629, 630,
	631, 1322, 575, 574, 576, 632, 1323, 1324, 1325, 1326,
	577, 578, 633, 579, 580, 581, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3953, 255, 257, 256, 258, 259, 260,
	261, 1248, 262, 263, 1249, 1250, 1251, 0, 1252, 582,
	1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 1257,
	587, 273, 274, 275, 276, 277, 278, 1258, 1259, 0,
	279, 588, 589, 590, 1260, 280, 281, 591, 1261, 1328,
	1262, 282, 283, 284, 285, 286, 287, 288, 0, 1263,
	290, 291, 292, 289, 293, 1264, 294, 0, 295, 296,
	297, 298, 299, 300, 1265, 301, 302, 303, 1115, 304,
	305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306, 307,
	308, 309, 0, 310, 592, 593, 1273, 314, 311, 312,
	1274, 315, 313, 1275, 316, 317, 318, 1276, 1277, 319,
	320, 321, 1278, 322, 323, 1279, 324, 325, 326, 1280,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 1281, 252, 1282, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	1283, 344, 1284, 1285, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 1286, 355, 600,
	1287, 601, 356, 1288, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 1289, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1290,
	1117, 371, 605, 606, 1291, 607, 1292, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1293, 385, 387, 386,
	1294, 388, 609, 1122, 389, 390, 1123, 1295, 391, 0,
	0, 0, 392, 393, 1296, 1297, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1298, 254, 1126, 434, 435, 1299, 610, 436, 611, 438,
	439, 1300, 0, 440, 0, 1301, 1302, 442, 443, 444,
	1303, 1304, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1305, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 1306, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 1307, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 1308, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 1309, 514, 515, 513, 516, 517, 518, 1310, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 1311, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 1312,
	541, 542, 0, 540, 1313, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 1314, 551, 623, 624, 625, 626,
	1315, 560, 1316, 552, 553, 554, 627, 555, 628, 1317,
	556, 557, 558, 559, 0, 561, 562, 1318, 1319, 563,
	564, 565, 567, 568, 566, 569, 1320, 570, 1321, 0,
	571, 572, 573, 629, 630, 631, 1322, 575, 574, 576,
	632, 1323, 1324, 1325, 1326, 577, 578, 633, 579, 580,
	581, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3842, 255,
	257, 256, 258, 259, 260, 261, 1248, 262, 263, 1249,
	1250, 1251, 0, 1252, 582, 1253, 1254, 1255, 1256, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 1257, 587, 273, 274, 275, 276,
	277, 278, 1258, 1259, 0, 279, 588, 589, 590, 1260,
	280, 281, 591, 1261, 1328, 1262, 282, 283, 284, 285,
	286, 287, 288, 0, 1263, 290, 291, 292, 289, 293,
	1264, 294, 0, 295, 296, 297, 298, 299, 300, 1265,
	301, 302, 303, 1115, 304, 305, 1266, 1267, 1269, 1268,
	1270, 1271, 1272, 306, 307, 308, 309, 0, 310, 592,
	593, 1273, 314, 311, 312, 1274, 315, 313, 1275, 316,
	317, 318, 1276, 1277, 319, 320, 321, 1278, 322, 323,
	1279, 324, 325, 326, 1280, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	1281, 252, 1282, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 1283, 344, 1284, 1285, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 1286, 355, 600, 1287, 601, 356, 1288, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 1289, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1290, 1117, 371, 605, 606, 1291,
	607, 1292, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1293, 385, 387, 386, 1294, 388, 609, 1122, 389,
	390, 1123, 1295, 391, 0, 0, 0, 392, 393, 1296,
	1297, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1298, 254, 1126, 434, 435,
	1299, 610, 436, 611, 438, 439, 1300, 0, 440, 0,
	1301, 1302, 442, 443, 444, 1303, 1304, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1305, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 1306, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 1307, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 1308, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 1309, 514, 515, 513,
	516, 517, 518, 1310, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	1311, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 1312, 541, 542, 0, 540, 1313,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 1314,
	551, 623, 624, 625, 626, 1315, 560, 1316, 552, 553,
	554, 627, 555, 628, 1317, 556, 557, 558, 559, 0,
	561, 562, 1318, 1319, 563, 564, 565, 567, 568, 566,
	569, 1320, 570, 1321, 0, 571, 572, 573, 629, 630,
	631, 1322, 575, 574, 576, 632, 1323, 1324, 1325, 1326,
	577, 578, 633, 579, 580, 581, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3708, 255, 257, 256, 258, 259, 260,
	261, 1248, 262, 263, 1249, 1250, 1251, 0, 1252, 582,
	1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 1257,
	587, 273, 274, 275, 276, 277, 278, 1258, 1259, 0,
	279, 588, 589, 590, 1260, 280, 281, 591, 1261, 1328,
	1262, 282, 283, 284, 285, 286, 287, 288, 0, 1263,
	290, 291, 292, 289, 293, 1264, 294, 0, 295, 296,
	297, 298, 299, 300, 1265, 301, 302, 303, 1115, 304,
	305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306, 307,
	308, 309, 0, 310, 592, 593, 1273, 314, 311, 312,
	1274, 315, 313, 1275, 316, 317, 318, 1276, 1277, 319,
	320, 321, 1278, 322, 323, 1279, 324, 325, 326, 1280,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 1281, 252, 1282, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	1283, 344, 1284, 1285, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 1286, 355, 600,
	1287, 601, 356, 1288, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 1289, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1290,
	1117, 371, 605, 606, 1291, 607, 1292, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1293, 385, 387, 386,
	1294, 388, 609, 1122, 389, 390, 1123, 1295, 391, 0,
	0, 0, 392, 393, 1296, 1297, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1298, 254, 1126, 434, 435, 1299, 610, 436, 611, 438,
	439, 1300, 0, 440, 0, 1301, 1302, 442, 443, 444,
	1303, 1304, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1305, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 1306, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 1307, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 1308, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 1309, 514, 515, 513, 516, 517, 518, 1310, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 1311, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 1312,
	541, 542, 0, 540, 1313, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 1314, 551, 623, 624, 625, 626,
	1315, 560, 1316, 552, 553, 554, 627, 555, 628, 1317,
	556, 557, 558, 559, 0, 561, 562, 1318, 1319, 563,
	564, 565, 567, 568, 566, 569, 1320, 570, 1321, 0,
	571, 572, 573, 629, 630, 631, 1322, 575, 574, 576,
	632, 1323, 1324, 1325, 1326, 577, 578, 633, 579, 580,
	581, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3440, 255,
	257, 256, 258, 259, 260, 261, 1248, 262, 263, 1249,
	1250, 1251, 0, 1252, 582, 1253, 1254, 1255, 1256, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 1257, 587, 273, 274, 275, 276,
	277, 278, 1258, 1259, 0, 279, 588, 589, 590, 1260,
	280, 281, 591, 1261, 1328, 1262, 282, 283, 284, 285,
	286, 287, 288, 0, 1263, 290, 291, 292, 289, 293,
	1264, 294, 0, 295, 296, 297, 298, 299, 300, 1265,
	301, 302, 303, 1115, 304, 305, 1266, 1267, 1269, 1268,
	1270, 1271, 1272, 306, 307, 308, 309, 0, 310, 592,
	593, 1273, 314, 311, 312, 1274, 315, 313, 1275, 316,
	317, 318, 1276, 1277, 319, 320, 321, 1278, 322, 323,
	1279, 324, 325, 326, 1280, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	1281, 252, 1282, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 1283, 344, 1284, 1285, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 1286, 355, 600, 1287, 601, 356, 1288, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 1289, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1290, 1117, 371, 605, 606, 1291,
	607, 1292, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1293, 385, 387, 386, 1294, 388, 609, 1122, 389,
	390, 1123, 1295, 391, 0, 0, 0, 392, 393, 1296,
	1297, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1298, 254, 1126, 434, 435,
	1299, 610, 436, 611, 438, 439, 1300, 0, 440, 0,
	1301, 1302, 442, 443, 444, 1303, 1304, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1305, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 1306, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 1307, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 1308, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 1309, 514, 515, 513,
	516, 517, 518, 1310, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	1311, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 1312, 541, 542, 0, 540, 1313,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 1314,
	551, 623, 624, 625, 626, 1315, 560, 1316, 552, 553,
	554, 627, 555, 628, 1317, 556, 557, 558, 559, 0,
	561, 562, 1318, 1319, 563, 564, 565, 567, 568, 566,
	569, 1320, 570, 1321, 0, 571, 572, 573, 629, 630,
	631, 1322, 575, 574, 576, 632, 1323, 1324, 1325, 1326,
	577, 578, 633, 579, 580, 581, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3267, 255, 257, 256, 258, 259, 260,
	261, 1248, 262, 263, 1249, 1250, 1251, 0, 1252, 582,
	1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 1257,
	587, 273, 274, 275, 276, 277, 278, 1258, 1259, 0,
	279, 588, 589, 590, 1260, 280, 281, 591, 1261, 1328,
	1262, 282, 283, 284, 285, 286, 287, 288, 0, 1263,
	290, 291, 292, 289, 293, 1264, 294, 0, 295, 296,
	297, 298, 299, 300, 1265, 301, 302, 303, 1115, 304,
	305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306, 307,
	308, 309, 0, 310, 592, 593, 1273, 314, 311, 312,
	1274, 315, 313, 1275, 316, 317, 318, 1276, 1277, 319,
	320, 321, 1278, 322, 323, 1279, 324, 325, 326, 1280,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 1281, 252, 1282, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	1283, 344, 1284, 1285, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 1286, 355, 600,
	1287, 601, 356, 1288, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 1289, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 1290,
	1117, 371, 605, 606, 1291, 607, 1292, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1293, 385, 387, 386,
	1294, 388, 609, 1122, 389, 390, 1123, 1295, 391, 0,
	0, 0, 392, 393, 1296, 1297, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1298, 254, 1126, 434, 435, 1299, 610, 436, 611, 438,
	439, 1300, 0, 440, 0, 1301, 1302, 442, 443, 444,
	1303, 1304, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	1305, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 1306, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 1307, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 1308, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 1309, 514, 515, 513, 516, 517, 518, 1310, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 1311, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 1312,
	541, 542, 0, 540, 1313, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 1314, 551, 623, 624, 625, 626,
	1315, 560, 1316, 552, 553, 554, 627, 555, 628, 1317,
	556, 557, 558, 559, 0, 561, 562, 1318, 1319, 563,
	564, 565, 567, 568, 566, 569, 1320, 570, 1321, 0,
	571, 572, 573, 629, 630, 631, 1322, 575, 574, 576,
	632, 1323, 1324, 1325, 1326, 577, 578, 633, 579, 580,
	581, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2390, 255,
	257, 256, 258, 259, 260, 261, 1248, 262, 263, 1249,
	1250, 1251, 0, 1252, 582, 1253, 1254, 1255, 1256, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 1257, 587, 273, 274, 275, 276,
	277, 278, 1258, 1259, 0, 279, 588, 589, 590, 1260,
	280, 281, 591, 1261, 1328, 1262, 282, 283, 284, 285,
	286, 287, 288, 0, 1263, 290, 291, 292, 289, 293,
	1264, 294, 0, 295, 296, 297, 298, 299, 300, 1265,
	301, 302, 303, 1115, 304, 305, 1266, 1267, 1269, 1268,
	1270, 1271, 1272, 306, 307, 308, 309, 0, 310, 592,
	593, 1273, 314, 311, 312, 1274, 315, 313, 1275, 316,
	317, 318, 1276, 1277, 319, 320, 321, 1278, 322, 323,
	1279, 324, 325, 326, 1280, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	1281, 252, 1282, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 1283, 344, 1284, 1285, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 1286, 355, 600, 1287, 601, 356, 1288, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 1289, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 1290, 1117, 371, 605, 606, 1291,
	607, 1292, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1293, 385, 387, 386, 1294, 388, 609, 1122, 389,
	390, 1123, 1295, 391, 0, 0, 0, 392, 393, 1296,
	1297, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1298, 254, 1126, 434, 435,
	1299, 610, 436, 611, 438, 439, 1300, 0, 440, 0,
	1301, 1302, 442, 443, 444, 1303, 1304, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 1305, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 1306, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 1307, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 1308, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 1309, 514, 515, 513,
	516, 517, 518, 1310, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	1311, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 1312, 541, 542, 0, 540, 1313,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 1314,
	551, 623, 624, 625, 626, 1315, 560, 1316, 552, 553,
	554, 627, 555, 628, 1317, 556, 557, 558, 559, 0,
	561, 562, 1318, 1319, 563, 564, 565, 567, 568, 566,
	569, 1320, 570, 1321, 0, 571, 572, 573, 629, 630,
	631, 1322, 575, 574, 576, 632, 1323, 1324, 1325, 1326,
	577, 578, 633, 579, 580, 581, 1340, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 0, 255, 257, 256, 258, 259,
	260, 261, 1248, 262, 263, 1249, 1250, 1251, 0, 1252,
	582, 1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	1257, 587, 273, 274, 275, 276, 277, 278, 1258, 1259,
	0, 279, 588, 589, 590, 1260, 280, 281, 591, 1261,
	1328, 1262, 282, 283, 284, 285, 286, 287, 288, 0,
	1263, 290, 291, 292, 289, 293, 1264, 294, 0, 295,
	296, 297, 298, 299, 300, 1265, 301, 302, 303, 1115,
	304, 305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306,
	307, 308, 309, 0, 310, 592, 593, 1273, 314, 311,
	312, 1274, 315, 313, 1275, 316, 317, 318, 1276, 1277,
	319, 320, 321, 1278, 322, 323, 1279, 324, 325, 326,
	1280, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 1281, 252, 1282, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 1283, 344, 1284, 1285, 1116, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 1286, 355,
	600, 1287, 601, 356, 1288, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 1118, 362, 363, 1289, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	1290, 1117, 371, 605, 606, 1291, 607, 1292, 373, 374,
	1119, 608, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 1293, 385, 387,
	386, 1294, 388, 609, 1122, 389, 390, 1123, 1295, 391,
	0, 0, 0, 392, 393, 1296, 1297, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1298, 254, 1126, 434, 435, 1299, 610, 436, 611,
	438, 439, 1300, 0, 440, 0, 1301, 1302, 442, 443,
	444, 1303, 1304, 445, 446, 612, 1127, 447, 1128, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 1305, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 1306, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 1307, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 1308,
	491, 492, 493, 1129, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 1309, 514, 515, 513, 516, 517, 518, 1310,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 1311, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	1312, 541, 542, 0, 540, 1313, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 1314, 551, 623, 624, 625,
	626, 1315, 560, 1316, 552, 553, 554, 627, 555, 628,
	1317, 556, 557, 558, 559, 0, 561, 562, 1318, 1319,
	563, 564, 565, 567, 568, 566, 569, 1320, 570, 1321,
	0, 571, 572, 573, 629, 630, 631, 1322, 575, 574,
	576, 632, 1323, 1324, 1325, 1326, 577, 578, 633, 579,
	580, 581, 1239, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 1248, 262,
	263, 1249, 1250, 1251, 0, 1252, 582, 1253, 1254, 1255,
	1256, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 1257, 587, 273, 274,
	275, 276, 277, 278, 1258, 1259, 0, 279, 588, 589,
	590, 1260, 280, 281, 591, 1261, 1328, 1262, 282, 283,
	284, 285, 286, 287, 288, 0, 1263, 290, 291, 292,
	289, 293, 1264, 294, 0, 295, 296, 297, 298, 299,
	300, 1265, 301, 302, 303, 1115, 304, 305, 1266, 1267,
	1269, 1268, 1270, 1271, 1272, 306, 307, 308, 309, 0,
	310, 592, 593, 1273, 314, 311, 312, 1274, 315, 313,
	1275, 316, 317, 318, 1276, 1277, 319, 320, 321, 1278,
	322, 323, 1279, 324, 325, 326, 1280, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 1281, 252, 1282, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 1283, 344, 1284,
	1285, 1116, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 1286, 355, 600, 1287, 601, 356,
	1288, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	1118, 362, 363, 1289, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 1290, 1117, 371, 605,
	606, 1291, 607, 1292, 373, 374, 1119, 608, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 1293, 385, 387, 386, 1294, 388, 609,
	1122, 389, 390, 1123, 1295, 391, 0, 0, 0, 392,
	393, 1296, 1297, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 1298, 254, 1126,
	434, 435, 1299, 610, 436, 611, 438, 439, 1300, 0,
	440, 0, 1301, 1302, 442, 443, 444, 1303, 1304, 445,
	446, 612, 1127, 447, 1128, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 1305, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 1306, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 1307, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 1308, 491, 492, 493, 1129,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 1309, 514,
	515, 513, 516, 517, 518, 1310, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 1311, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 1312, 541, 542, 0,
	540, 1313, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 1314, 551, 623, 624, 625, 626, 1315, 560, 1316,
	552, 553, 554, 627, 555, 628, 1317, 556, 557, 558,
	559, 0, 561, 562, 1318, 1319, 563, 564, 565, 567,
	568, 566, 569, 1320, 570, 1321, 0, 571, 572, 573,
	629, 630, 631, 1322, 575, 574, 576, 632, 1323, 1324,
	1325, 1326, 577, 578, 633, 579, 580, 581, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 1248, 262, 263, 1249, 1250, 1251, 0, 1252,
	582, 1253, 1254, 1255, 1256, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	1257, 587, 273, 274, 275, 276, 277, 278, 1258, 1259,
	0, 279, 588, 589, 590, 1260, 280, 281, 591, 1261,
	1328, 1262, 282, 283, 284, 285, 286, 287, 288, 0,
	1263, 290, 291, 292, 289, 293, 1264, 294, 0, 295,
	296, 297, 298, 299, 300, 1265, 301, 302, 303, 1115,
	304, 305, 1266, 1267, 1269, 1268, 1270, 1271, 1272, 306,
	307, 308, 309, 0, 310, 592, 593, 1273, 314, 311,
	312, 1274, 315, 313, 1275, 316, 317, 318, 1276, 1277,
	319, 320, 321, 1278, 322, 323, 1279, 324, 325, 326,
	1280, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 1281, 252, 1282, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 1283, 344, 1284, 1285, 1116, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 1286, 355,
	600, 1287, 601, 356, 1288, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 1118, 362, 363, 1289, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	1290, 1117, 371, 605, 606, 1291, 607, 1292, 373, 374,
	1119, 608, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 1293, 385, 387,
	386, 1294, 388, 609, 1122, 389, 390, 1123, 1295, 391,
	0, 0, 0, 392, 393, 1296, 1297, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1298, 254, 1126, 434, 435, 1299, 610, 436, 611,
	438, 439, 1300, 0, 440, 0, 1301, 1302, 442, 443,
	444, 1303, 1304, 445, 446, 612, 1127, 447, 1128, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 1305, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 1306, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 1307, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 1308,
	491, 492, 493, 1129, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 1309, 514, 515, 513, 516, 517, 518, 1310,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 1311, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	1312, 541, 542, 0, 540, 1313, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 1314, 551, 623, 624, 625,
	626, 1315, 560, 1316, 552, 553, 554, 627, 555, 628,
	1317, 556, 557, 558, 559, 0, 561, 562, 1318, 1319,
	563, 564, 565, 567, 568, 566, 569, 1320, 570, 1321,
	0, 571, 572, 573, 629, 630, 631, 1322, 575, 574,
	576, 632, 1323, 1324, 1325, 1326, 577, 578, 633, 579,
	580, 581, 2365, 0, 1050, 1022, 1023, 1024, 1020, 1021,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 2362, 262,
	263, 0, 0, 0, 0, 0, 1074, 1038, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	1087, 0, 271, 1094, 272, 1093, 0, 1104, 273, 274,
	275, 276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135,
	590, 0, 280, 281, 1080, 0, 1061, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 304, 305, 1064, 1062,
	1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097,
	310, 1091, 1090, 1011, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 2363, 0, 319, 1082, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1017,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1105, 1106, 1029, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1089, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 1102, 1103, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1112, 0, 1039, 356,
	0, 357, 358, 359, 360, 361, 1075, 1076, 1079, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1117, 371, 1084,
	1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1113,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 1068, 1067, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 1008, 254, 1126,
	434, 435, 1030, 1078, 436, 1092, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 1107, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 1108, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 1088, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 497, 1018, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 1071, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 1086,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	1133, 535, 536, 537, 538, 1109, 0, 541, 542, 1006,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 1098, 1099, 1100, 1101, 0, 560, 0,
	552, 553, 554, 1110, 555, 1111, 1028, 556, 557, 558,
	559, 0, 561, 562, 0, 1012, 563, 564, 565, 567,
	568, 566, 569, 1072, 570, 0, 0, 571, 572, 573,
	629, 1095, 1132, 2361, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 1009, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 1003, 1004, 2364, 0, 0, 0, 0,
	0, 0, 1034, 2360, 0, 996, 1032, 1050, 1022, 1023,
	1024, 1020, 1021, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1074,
	1038, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 1087, 0, 271, 1094, 272, 1093, 0,
	1104, 273, 274, 275, 276, 277, 278, 1040, 1073, 1007,
	279, 1134, 1135, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 1097, 310, 1091, 1090, 1011, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1082, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1017, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 1029, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1089, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 1102, 1103, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 1039, 356, 0, 357, 358, 359, 360, 361, 1075,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 1084, 1085, 0, 1045, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 1088, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 1018, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 215, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 1086, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 1133, 535, 536, 537, 538, 1109, 0,
	541, 542, 1006, 540, 217, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 1098, 1099, 1100, 1101,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 1028,
	556, 557, 558, 559, 0, 561, 562, 0, 1012, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 1521, 1095, 1132, 0, 575, 574, 576,
	632, 0, 0, 0, 209, 577, 578, 633, 579, 580,
	581, 1009, 0, 210, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 1003, 1004, 1050, 1022,
	1023, 1024, 1020, 1021, 1033, 1758, 1756, 0, 0, 1032,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1074, 1038, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 1087, 0, 271, 1094, 272, 1093,
	0, 1104, 273, 274, 275, 276, 277, 278, 1040, 1073,
	1007, 279, 1134, 1135, 590, 0, 280, 281, 1080, 0,
	1061, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306,
	307, 308, 309, 1097, 310, 1091, 1090, 1011, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1082, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1017, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1105, 1106, 1029, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1089, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 1102, 1103,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1112, 0, 1039, 356, 0, 357, 358, 359, 360, 361,
	1075, 1076, 1079, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 1117, 371, 1084, 1085, 0, 1045, 0, 373, 374,
	1119, 1077, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 1113, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 1068, 1067, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 1107,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 1108, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 1088, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 1018, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 215, 514, 515, 513, 516, 517, 518, 1071,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 1086, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 1133, 535, 536, 537, 538, 1109,
	0, 541, 542, 1006, 540, 217, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 1098, 1099, 1100,
	1101, 0, 560, 0, 552, 553, 554, 1110, 555, 1111,
	1028, 556, 557, 558, 559, 0, 561, 562, 0, 1012,
	563, 564, 565, 567, 568, 566, 569, 1072, 570, 0,
	0, 571, 572, 573, 1521, 1095, 1132, 0, 575, 574,
	576, 632, 0, 0, 0, 209, 577, 578, 633, 579,
	580, 581, 1009, 0, 210, 0, 0, 0, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 1003, 1004, 1050,
	1022, 1023, 1024, 1020, 1021, 1033, 1758, 2941, 0, 0,
	1032, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 1038, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 1087, 0, 271, 1094, 272,
	1093, 0, 1104, 273, 274, 275, 276, 277, 278, 1040,
	1073, 1007, 279, 1134, 1135, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 1097, 310, 1091, 1090, 1011, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1082, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1017, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 1029, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1089, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 1102,
	1103, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 1039, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 1084, 1085, 0, 1045, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078, 436,
	1092, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 1088, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 1018,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 215, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 1086, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 1133, 535, 536, 537, 538,
	1109, 0, 541, 542, 1006, 540, 217, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 1098, 1099,
	1100, 1101, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 1028, 556, 557, 558, 559, 0, 561, 562, 0,
	1012, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 1521, 1095, 1132, 0, 575,
	574, 576, 632, 0, 0, 0, 209, 577, 578, 633,
	579, 580, 581, 1009, 0, 210, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 1003, 1004,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 1758, 1756, 0,
	0, 1032, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 2493, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 2498, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 2494, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 2495, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 2410, 1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1074, 1038, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 1087,
	0, 271, 1094, 272, 1093, 0, 1104, 273, 274, 275,
	276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590,
	0, 280, 281, 1080, 0, 1061, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 1064, 1062, 1063,
	1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097, 310,
	1091, 1090, 1011, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1017, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1105,
	1106, 1029, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1089, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1102, 1103, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1112, 0, 1039, 356, 0,
	357, 358, 359, 360, 361, 1075, 1076, 1079, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1117, 371, 1084, 1085,
	0, 1045, 0, 373, 374, 1119, 1077, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1113, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	1068, 1067, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 1008, 254, 1126, 434,
	435, 1030, 1078, 436, 1092, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 1107, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 1108, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1088, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 1018, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1071, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1086, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1133,
	535, 536, 537, 538, 1109, 0, 541, 542, 1006, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1098, 1099, 1100, 1101, 0, 560, 0, 552,
	553, 554, 1110, 555, 1111, 1028, 556, 557, 558, 559,
	0, 561, 562, 0, 1012, 563, 564, 565, 567, 568,
	566, 569, 1072, 570, 0, 0, 571, 572, 573, 629,
	1095, 1132, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1009, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 1003, 1004, 0, 0, 0, 0, 0, 0,
	0, 1034, 2408, 0, 2407, 1032, 1050, 1022, 1023, 1024,
	1020, 1021, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 310, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 1126, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 561, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	1009, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 1003, 1004, 0, 0, 0,
	0, 0, 0, 0, 1034, 2405, 0, 2404, 1032, 1050,
	1022, 1023, 1024, 1020, 1021, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 1038, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 1087, 0, 271, 1094, 272,
	1093, 0, 1104, 273, 274, 275, 276, 277, 278, 1040,
	1073, 1007, 279, 1134, 1135, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 1097, 310, 1091, 1090, 1011, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1082, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1017, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 1029, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1089, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 1102,
	1103, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 1039, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 1084, 1085, 0, 1045, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078, 436,
	1092, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 1088, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 1018,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 1086, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 1133, 535, 536, 537, 538,
	1109, 0, 541, 542, 1006, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 1098, 1099,
	1100, 1101, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 1028, 556, 557, 558, 559, 0, 561, 562, 0,
	1012, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 1095, 1132, 0, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 1009, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 1003, 1004,
	0, 0, 0, 0, 0, 0, 0, 1034, 2402, 0,
	2401, 1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1074, 1038, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 1087, 0,
	271, 1094, 272, 1093, 0, 1104, 273, 274, 275, 276,
	277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 1097, 310, 1091,
	1090, 1011, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1082, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1017, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	1029, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1089, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 1102, 1103, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 1039, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 1084, 1085, 0,
	1045, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1008, 254, 1126, 434, 435,
	1030, 1078, 436, 1092, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 1088, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 1018, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 1086, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 1133, 535,
	536, 537, 538, 1109, 0, 541, 542, 1006, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 1098, 1099, 1100, 1101, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 1028, 556, 557, 558, 559, 0,
	561, 562, 0, 1012, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 629, 1095,
	1132, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1009, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 1003, 1004, 0, 0, 0, 0, 0, 0, 0,
	1034, 2399, 0, 1611, 1032, 1050, 1022, 1023, 1024, 1020,
	1021, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1074, 1038, 0,
	0, 0, 264, 265, 1114, 266, 267, 268, 269, 270,
	583, 1087, 0, 271, 1094, 272, 1093, 0, 1104, 273,
	274, 275, 276, 277, 278, 1040, 1073, 1007, 279, 1134,
	1135, 590, 0, 280, 281, 1080, 0, 1061, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1115, 304, 305, 1064,
	1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309,
	1097, 310, 1091, 1090, 1011, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1082, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1017, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1105, 1106, 1029, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1089, 0, 0, 0, 343, 0, 344,
	0, 0, 1116, 345, 346, 1102, 1103, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1112, 0, 1039,
	356, 0, 357, 358, 359, 360, 361, 1075, 1076, 1079,
	437, 1118, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1117, 371,
	1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120,
	375, 376, 377, 1121, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1113, 1122, 389, 390, 1123, 0, 391, 0, 0, 0,
	392, 393, 1068, 1067, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1124, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1125, 424, 1008, 254,
	1126, 434, 435, 1030, 1078, 436, 1092, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 1127, 447, 1128, 1107, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 1108,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 1088, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	1129, 494, 495, 496, 497, 1018, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 1071, 519, 520, 503,
	504, 521, 522, 1130, 523, 524, 525, 526, 527, 528,
	1086, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 1133, 535, 536, 537, 538, 1109, 0, 541, 542,
	1006, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 1098, 1099, 1100, 1101, 0, 560,
	0, 552, 553, 554, 1110, 555, 1111, 1028, 556, 557,
	558, 559, 0, 561, 562, 0, 1012, 563, 564, 565,
	567, 568, 566, 569, 1072, 570, 0, 0, 571, 572,
	573, 629, 1095, 1132, 0, 575, 574, 576, 632, 1610,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 1009,
	0, 0, 0, 0, 0, 0, 0, 1005, 0, 0,
	0, 0, 0, 0, 1003, 1004, 0, 0, 0, 0,
	0, 0, 0, 1034, 0, 0, 999, 1032, 1050, 1022,
	1023, 1024, 1020, 1021, 1033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1074, 1038, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 1087, 0, 271, 1094, 272, 1093,
	0, 1104, 273, 274, 275, 276, 277, 278, 1040, 1073,
	1007, 279, 1134, 1135, 590, 0, 280, 281, 1080, 0,
	1061, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306,
	307, 308, 309, 1097, 310, 1091, 1090, 1011, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1082, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1017, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1105, 1106, 1029, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1089, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 1102, 1103,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1112, 0, 1039, 356, 0, 357, 358, 359, 360, 361,
	1075, 1076, 1079, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 1117, 371, 1084, 1085, 0, 1045, 0, 373, 374,
	1119, 1077, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 1113, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 1068, 1067, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092,
	438, 439, 0, 0, 440, 0, 1013, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 1107,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 1108, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 1088, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 1018, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 1071,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 1086, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 1133, 535, 536, 537, 538, 1109,
	0, 541, 542, 1006, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 1098, 1099, 1100,
	1101, 0, 560, 0, 552, 553, 554, 1110, 555, 1111,
	1028, 556, 557, 558, 559, 0, 561, 562, 0, 1012,
	563, 564, 565, 567, 568, 566, 569, 1072, 570, 0,
	0, 571, 572, 573, 629, 1095, 1132, 0, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 1009, 0, 0, 0, 0, 0, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 1003, 1004, 1050,
	1022, 1023, 1024, 1020, 1021, 1033, 1034, 0, 0, 0,
	1032, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 1038, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 1087, 0, 271, 1094, 272,
	1093, 0, 1104, 273, 274, 275, 276, 277, 278, 1040,
	1073, 1007, 279, 1134, 1135, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 4240, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 1097, 310, 1091, 1090, 1011, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1082, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1017, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 1029, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1089, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 1102,
	1103, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 1039, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 1084, 1085, 0, 1045, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078, 436,
	1092, 438, 439, 0, 0, 440, 0, 1013, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 1088, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 1018,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 1086, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 1133, 535, 536, 537, 538,
	1109, 0, 541, 542, 1006, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 1098, 1099,
	1100, 1101, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 1028, 556, 557, 558, 559, 0, 561, 562, 0,
	1012, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 1095, 1132, 0, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 1009, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 1003, 1004,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034, 0, 0,
	0, 1032, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 0, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 2279, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 2278,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034, 0,
	0, 0, 1032, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1074, 1038, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 1087, 0, 271,
	1094, 272, 1093, 0, 1104, 273, 274, 275, 276, 277,
	278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280,
	281, 1080, 0, 1061, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066,
	1065, 1069, 306, 307, 308, 309, 1097, 310, 1091, 1090,
	1011, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1082, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1017, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1105, 1106, 1029,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1089,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 1102, 1103, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1112, 0, 1039, 356, 0, 357, 358,
	359, 360, 361, 1075, 1076, 1079, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1117, 371, 1084, 1085, 0, 1045,
	0, 373, 374, 1119, 1077, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1113, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 1068, 1067,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 1008, 254, 1126, 434, 435, 1030,
	1078, 436, 1092, 438, 439, 0, 0, 440, 0, 1013,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 1107, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 1108, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	1088, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 1018, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 1071, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 1086, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 1133, 535, 536,
	537, 538, 1109, 0, 541, 542, 1006, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	1098, 1099, 1100, 1101, 0, 560, 0, 552, 553, 554,
	1110, 555, 1111, 1028, 556, 557, 558, 559, 0, 561,
	562, 0, 1012, 563, 564, 565, 567, 568, 566, 569,
	1072, 570, 0, 0, 571, 572, 573, 629, 1095, 1132,
	0, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 1009, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	1003, 1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034,
	0, 0, 0, 1032, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1074, 1038, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 1087, 0,
	271, 1094, 272, 1093, 0, 1104, 273, 274, 275, 276,
	277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 4022, 300, 0,
	301, 302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 1097, 310, 1091,
	1090, 1011, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1082, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1017, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	1029, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1089, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 1102, 1103, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 1039, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 1084, 1085, 0,
	1045, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1008, 254, 1126, 434, 435,
	1030, 1078, 436, 1092, 438, 439, 0, 0, 440, 0,
	1013, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 1088, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 1018, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 1086, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 1133, 535,
	536, 537, 538, 1109, 0, 541, 542, 1006, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 1098, 1099, 1100, 1101, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 1028, 556, 557, 558, 559, 0,
	561, 562, 0, 1012, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 629, 1095,
	1132, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1009, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 1003, 1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033,
	1034, 0, 0, 0, 1032, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1074, 1038, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 1087,
	0, 271, 1094, 272, 1093, 0, 1104, 273, 274, 275,
	276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590,
	0, 280, 281, 1080, 0, 1061, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 1064, 1062, 1063,
	1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097, 310,
	1091, 1090, 1011, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1017, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1105,
	1106, 1029, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1089, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1102, 1103, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1112, 0, 1039, 356, 0,
	357, 358, 359, 360, 361, 1075, 1076, 1079, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1117, 371, 1084, 1085,
	0, 1045, 0, 373, 374, 1119, 1077, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1113, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	1068, 1067, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 1008, 3670, 1126, 434,
	435, 1030, 1078, 436, 1092, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 1107, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 1108, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1088, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 1018, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1071, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1086, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1133,
	535, 536, 537, 538, 1109, 0, 541, 542, 1006, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1098, 1099, 1100, 1101, 0, 560, 0, 552,
	553, 554, 1110, 555, 1111, 1028, 556, 557, 558, 559,
	0, 561, 562, 0, 1012, 563, 564, 565, 567, 568,
	566, 569, 1072, 570, 0, 0, 571, 572, 573, 629,
	1095, 1132, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1009, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 1003, 1004, 1826, 0, 0, 0, 0, 0,
	0, 1034, 0, 0, 0, 1032, 1050, 1022, 1023, 1024,
	1020, 1021, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 310, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 1126, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 561, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 3418, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	1009, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 1003, 1004, 1050, 1022, 1023,
	1024, 1020, 1021, 1033, 1034, 0, 0, 0, 1032, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1074,
	1038, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 1087, 0, 271, 1094, 272, 1093, 0,
	1104, 273, 274, 275, 276, 277, 278, 1040, 1073, 1007,
	279, 1134, 1135, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 1097, 310, 1091, 1090, 1011, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1082, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1017, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 1029, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1089, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 1102, 1103, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 1039, 356, 0, 357, 358, 359, 360, 361, 1075,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 1084, 1085, 0, 1045, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 1088, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 1018, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 1086, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 1133, 535, 536, 537, 538, 1109, 0,
	541, 542, 1006, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 1098, 1099, 1100, 1101,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 1028,
	556, 557, 558, 559, 0, 561, 562, 0, 1012, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 629, 1095, 1132, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1009, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 1003, 1004, 1826, 0,
	0, 0, 0, 0, 0, 1034, 0, 0, 0, 1032,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 0, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 2498, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034, 0,
	0, 0, 1032, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1074, 1038, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 1087, 0, 271,
	1094, 272, 1093, 0, 1104, 273, 274, 275, 276, 277,
	278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280,
	281, 1080, 0, 1061, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066,
	1065, 1069, 306, 307, 308, 309, 1097, 310, 1091, 1090,
	1011, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1082, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1017, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1105, 1106, 1029,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1089,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 1102, 1103, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1112, 0, 1039, 356, 0, 357, 358,
	359, 360, 361, 1075, 1076, 1079, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1117, 371, 1084, 1085, 0, 1045,
	0, 373, 374, 1119, 1077, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1113, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 1068, 1067,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 1008, 254, 1126, 434, 435, 1030,
	1078, 436, 1092, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 1107, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 1108, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	1088, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 1018, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 1071, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 1086, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 1133, 535, 536,
	537, 538, 1109, 0, 541, 542, 1006, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	1098, 1099, 1100, 1101, 0, 560, 0, 552, 553, 554,
	1110, 555, 1111, 1028, 556, 557, 558, 559, 0, 561,
	562, 0, 1012, 563, 564, 565, 567, 568, 566, 569,
	1072, 570, 0, 0, 571, 572, 573, 629, 1095, 1132,
	0, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 1009, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	1003, 1004, 0, 0, 0, 0, 0, 0, 0, 1034,
	1756, 0, 2503, 1032, 1050, 1022, 1023, 1024, 1020, 1021,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1074, 1038, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	1087, 0, 271, 1094, 272, 1093, 0, 1104, 273, 274,
	275, 276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135,
	590, 0, 280, 281, 1080, 0, 1061, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 304, 305, 1064, 1062,
	1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097,
	310, 1091, 1090, 1011, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1082, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1017,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1105, 1106, 1029, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1089, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 1102, 1103, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1112, 0, 1039, 356,
	0, 357, 358, 359, 360, 361, 1075, 1076, 1079, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1117, 371, 1084,
	1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1113,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 1068, 1067, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 1008, 254, 1126,
	434, 435, 1030, 1078, 436, 1092, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 1107, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 1108, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 1088, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 497, 1018, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 1071, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 1086,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	1133, 535, 536, 537, 538, 1109, 0, 541, 542, 1006,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 1098, 1099, 1100, 1101, 0, 560, 0,
	552, 553, 554, 1110, 555, 1111, 1028, 556, 557, 558,
	559, 0, 561, 562, 0, 1012, 563, 564, 565, 567,
	568, 566, 569, 1072, 570, 0, 0, 571, 572, 573,
	629, 1095, 1132, 0, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 1009, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 1003, 1004, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 2501, 1032, 1050, 1022, 1023,
	1024, 1020, 1021, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1074,
	1038, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 1087, 0, 271, 1094, 272, 1093, 0,
	1104, 273, 274, 275, 276, 277, 278, 1040, 1073, 1007,
	279, 1134, 1135, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 1097, 310, 1091, 1090, 1011, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1082, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1017, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 1029, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1089, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 1102, 1103, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 1039, 356, 0, 357, 358, 359, 360, 361, 1075,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 1084, 1085, 0, 1045, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 1088, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 1018, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 1086, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 1133, 535, 536, 537, 538, 1109, 0,
	541, 542, 1006, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 1098, 1099, 1100, 1101,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 1028,
	556, 557, 558, 559, 0, 561, 562, 0, 1012, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 629, 1095, 1132, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1009, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 1003, 1004, 0, 0,
	0, 0, 0, 0, 0, 1034, 0, 0, 2489, 1032,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 0, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 0, 0, 0, 0, 0, 0, 0, 1034, 0,
	0, 2478, 1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1074, 1038, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 1087,
	0, 271, 1094, 272, 1093, 0, 1104, 273, 274, 275,
	276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590,
	0, 280, 281, 1080, 0, 1061, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 1064, 1062, 1063,
	1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097, 310,
	1091, 1090, 1011, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1017, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1105,
	1106, 1029, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1089, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1102, 1103, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1112, 0, 1039, 356, 0,
	357, 358, 359, 360, 361, 1075, 1076, 1079, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1117, 371, 1084, 1085,
	0, 1045, 0, 373, 374, 1119, 1077, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1113, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	1068, 1067, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 1008, 254, 1126, 434,
	435, 1030, 1078, 436, 1092, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 1107, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 1108, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1088, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 1018, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1071, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1086, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1133,
	535, 536, 537, 538, 1109, 0, 541, 542, 1006, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1098, 1099, 1100, 1101, 0, 560, 0, 552,
	553, 554, 1110, 555, 1111, 1028, 556, 557, 558, 559,
	0, 561, 562, 0, 1012, 563, 564, 565, 567, 568,
	566, 569, 1072, 570, 0, 0, 571, 572, 573, 629,
	1095, 1132, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1009, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 1003, 1004, 0, 0, 0, 0, 0, 0,
	0, 1034, 0, 0, 2476, 1032, 2467, 2474, 1023, 1024,
	1020, 1021, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 2470, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 2471, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 2472, 405, 2469, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 1126, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 2473,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 561, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 2468, 581,
	1009, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 1003, 1004, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 2464, 1032, 2467,
	2474, 1023, 1024, 1020, 1021, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 1038, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 1087, 0, 271, 1094, 272,
	1093, 0, 1104, 273, 274, 275, 276, 277, 278, 1040,
	1073, 1007, 279, 1134, 1135, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 1097, 2470, 1091, 1090, 1011, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1082, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1017, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 1029, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1089, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 1102,
	1103, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 1039, 356, 0, 357, 358, 359, 2471,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 1084, 1085, 0, 1045, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 2472,
	405, 2469, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078, 436,
	1092, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 1088, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 1018,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 2473, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 1086, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 1133, 535, 536, 537, 538,
	1109, 0, 541, 542, 1006, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 1098, 1099,
	1100, 1101, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 1028, 556, 557, 558, 559, 0, 561, 562, 0,
	1012, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 1095, 1132, 0, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 2468, 581, 1009, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 1003, 1004,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034, 0, 0,
	0, 1032, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 0, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 0, 0, 0, 0, 0, 1764, 0, 1034, 0,
	0, 0, 1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 2258, 262, 263,
	0, 0, 0, 0, 0, 1074, 1038, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 1087,
	0, 271, 1094, 272, 1093, 0, 1104, 273, 274, 275,
	276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590,
	0, 280, 281, 1080, 0, 1061, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 1064, 1062, 1063,
	1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097, 310,
	1091, 1090, 1011, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1017, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1105,
	1106, 1029, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1089, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1102, 1103, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1112, 0, 1039, 356, 0,
	357, 358, 359, 360, 361, 1075, 1076, 1079, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1117, 371, 1084, 1085,
	0, 1045, 0, 373, 374, 1119, 1077, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1113, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	1068, 1067, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 1008, 254, 1126, 434,
	435, 1030, 1078, 436, 1092, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 1107, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 1108, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1088, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 1018, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1071, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1086, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1133,
	535, 536, 537, 538, 1109, 0, 541, 542, 1006, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1098, 1099, 1100, 1101, 0, 560, 0, 552,
	553, 554, 1110, 555, 1111, 1028, 556, 557, 558, 559,
	0, 561, 562, 0, 1012, 563, 564, 565, 567, 568,
	566, 569, 1072, 570, 0, 0, 571, 572, 573, 629,
	1095, 1132, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1009, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 1003, 1004, 0, 0, 0, 0, 0, 0,
	0, 1034, 0, 0, 1616, 1032, 1050, 1022, 1023, 1024,
	1020, 1021, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 310, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 1126, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 561, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	1009, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 1003, 1004, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 1551, 1032, 1050,
	1022, 1023, 1024, 1020, 1021, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 1038, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 1087, 0, 271, 1094, 272,
	1093, 0, 1104, 273, 274, 275, 276, 277, 278, 1040,
	1073, 1007, 279, 1134, 1135, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 1097, 310, 1091, 1090, 1011, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1082, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1017, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 1029, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1089, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 1102,
	1103, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 1039, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 1084, 1085, 0, 1045, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078, 436,
	1092, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 1088, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 1018,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 1086, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 1133, 535, 536, 537, 538,
	1109, 0, 541, 542, 1006, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 1098, 1099,
	1100, 1101, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 1028, 556, 557, 558, 559, 0, 561, 562, 0,
	1012, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 1095, 1132, 0, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 1009, 0, 0, 0, 0, 0, 0,
	0, 1005, 0, 0, 0, 0, 0, 0, 1003, 1004,
	0, 0, 0, 0, 0, 0, 0, 1034, 0, 0,
	1546, 1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1074, 1038, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 1087, 0,
	271, 1094, 272, 1093, 0, 1104, 273, 274, 275, 276,
	277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 1097, 310, 1091,
	1090, 1011, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1082, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1017, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	1029, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1089, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 1102, 1103, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 1039, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 1084, 1085, 0,
	1045, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1008, 254, 1126, 434, 435,
	1030, 1078, 436, 1092, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 1088, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 1018, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 1086, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 1133, 535,
	536, 537, 538, 1109, 0, 541, 542, 1006, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 1098, 1099, 1100, 1101, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 1028, 556, 557, 558, 559, 0,
	561, 562, 0, 1012, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 629, 1095,
	1132, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1009, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 1003, 1004, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 1537, 1032, 1050, 1022, 1023, 1024, 1020,
	1021, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1074, 1038, 0,
	0, 0, 264, 265, 1114, 266, 267, 268, 269, 270,
	583, 1087, 0, 271, 1094, 272, 1093, 0, 1104, 273,
	274, 275, 276, 277, 278, 1040, 1073, 1007, 279, 1134,
	1135, 590, 0, 280, 281, 1080, 0, 1061, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1115, 304, 305, 1064,
	1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309,
	1097, 310, 1091, 1090, 1011, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1082, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1017, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1105, 1106, 1029, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1089, 0, 0, 0, 343, 0, 344,
	0, 0, 1116, 345, 346, 1102, 1103, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1112, 0, 1039,
	356, 0, 357, 358, 359, 360, 361, 1075, 1076, 1079,
	437, 1118, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1117, 371,
	1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120,
	375, 376, 377, 1121, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1113, 1122, 389, 390, 1123, 0, 391, 0, 0, 0,
	392, 393, 1068, 1067, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1124, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1125, 424, 1008, 254,
	1126, 434, 435, 1030, 1078, 436, 1092, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 1127, 447, 1128, 1107, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 1108,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 1088, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	1129, 494, 495, 496, 497, 1018, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 1071, 519, 520, 503,
	504, 521, 522, 1130, 523, 524, 525, 526, 527, 528,
	1086, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 1133, 535, 536, 537, 538, 1109, 0, 541, 542,
	1006, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 1098, 1099, 1100, 1101, 0, 560,
	0, 552, 553, 554, 1110, 555, 1111, 1028, 556, 557,
	558, 559, 0, 561, 562, 0, 1012, 563, 564, 565,
	567, 568, 566, 569, 1072, 570, 0, 0, 571, 572,
	573, 629, 1095, 1132, 0, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 1009,
	0, 0, 0, 0, 0, 0, 0, 1005, 0, 0,
	0, 0, 0, 0, 1003, 1004, 0, 0, 0, 0,
	0, 0, 0, 1034, 0, 0, 1532, 1032, 1050, 1022,
	1023, 1024, 1020, 1021, 1033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1074, 1038, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 1087, 0, 271, 1094, 272, 1093,
	0, 1104, 273, 274, 275, 276, 277, 278, 1040, 1073,
	1007, 279, 1134, 1135, 590, 0, 280, 281, 1080, 0,
	1061, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306,
	307, 308, 309, 1097, 310, 1091, 1090, 1011, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1082, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1017, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1105, 1106, 1029, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1089, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 1102, 1103,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1112, 0, 1039, 356, 0, 357, 358, 359, 360, 361,
	1075, 1076, 1079, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 1117, 371, 1084, 1085, 0, 1045, 0, 373, 374,
	1119, 1077, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 1113, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 1068, 1067, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 1107,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 1108, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 1088, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 1018, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 1071,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 1086, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 1133, 535, 536, 537, 538, 1109,
	0, 541, 542, 1006, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 1098, 1099, 1100,
	1101, 0, 560, 0, 552, 553, 554, 1110, 555, 1111,
	1028, 556, 557, 558, 559, 0, 561, 562, 0, 1012,
	563, 564, 565, 567, 568, 566, 569, 1072, 570, 0,
	0, 571, 572, 573, 629, 1095, 1132, 0, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 1009, 0, 0, 0, 0, 0, 0, 0,
	1005, 0, 0, 0, 0, 0, 0, 1003, 1004, 0,
	0, 0, 0, 0, 0, 0, 1034, 0, 0, 1514,
	1032, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1074, 1038, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 1087, 0, 271,
	1094, 272, 1093, 0, 1104, 273, 274, 275, 276, 277,
	278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280,
	281, 1080, 0, 1061, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066,
	1065, 1069, 306, 307, 308, 309, 1097, 310, 1091, 1090,
	1011, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1082, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1017, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1105, 1106, 1029,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1089,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 1102, 1103, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1112, 0, 1039, 356, 0, 357, 358,
	359, 360, 361, 1075, 1076, 1079, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1117, 371, 1084, 1085, 0, 1045,
	0, 373, 374, 1119, 1077, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1113, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 1068, 1067,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 1008, 254, 1126, 434, 435, 1030,
	1078, 436, 1092, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 1107, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 1108, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	1088, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 1018, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 1071, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 1086, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 1133, 535, 536,
	537, 538, 1109, 0, 541, 542, 1006, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	1098, 1099, 1100, 1101, 0, 560, 0, 552, 553, 554,
	1110, 555, 1111, 1028, 556, 557, 558, 559, 0, 561,
	562, 0, 1012, 563, 564, 565, 567, 568, 566, 569,
	1072, 570, 0, 0, 571, 572, 573, 629, 1095, 1132,
	0, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 1009, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	1003, 1004, 0, 0, 0, 0, 0, 0, 0, 1034,
	0, 0, 1392, 1032, 1050, 1022, 1023, 1024, 1020, 1021,
	1033, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1074, 1038, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	1087, 0, 271, 1094, 272, 1093, 0, 1104, 273, 274,
	275, 276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135,
	590, 0, 280, 281, 1080, 0, 1061, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 304, 305, 1064, 1062,
	1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097,
	310, 1091, 1090, 1011, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1082, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1017,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1105, 1106, 1029, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1089, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 1102, 1103, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1112, 0, 1039, 356,
	0, 357, 358, 359, 360, 361, 1391, 1076, 1079, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1117, 371, 1084,
	1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1113,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 1068, 1067, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 1008, 254, 1126,
	434, 435, 1030, 1078, 436, 1092, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 1107, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 1108, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 1088, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 497, 1018, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 1071, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 1086,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	1133, 535, 536, 537, 538, 1109, 0, 541, 542, 1006,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 1098, 1099, 1100, 1101, 0, 560, 0,
	552, 553, 554, 1110, 555, 1111, 1028, 556, 557, 558,
	559, 0, 561, 562, 0, 1012, 563, 564, 565, 567,
	568, 566, 569, 1072, 570, 0, 0, 571, 572, 573,
	629, 1095, 1132, 0, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 1009, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 1003, 1004, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 1386, 1032, 1050, 1022, 1023,
	1024, 1020, 1021, 1033, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1074,
	1038, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 1087, 0, 271, 1094, 272, 1093, 0,
	1104, 273, 274, 275, 276, 277, 278, 1040, 1073, 1007,
	279, 1134, 1135, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 1097, 310, 1091, 1090, 1011, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1082, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1017, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 1029, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1089, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 1102, 1103, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 1039, 356, 0, 357, 358, 359, 360, 361, 1385,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 1084, 1085, 0, 1045, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 1088, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 1018, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 1086, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 1133, 535, 536, 537, 538, 1109, 0,
	541, 542, 1006, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 1098, 1099, 1100, 1101,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 1028,
	556, 557, 558, 559, 0, 561, 562, 0, 1012, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 629, 1095, 1132, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1009, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 1003, 1004, 0, 0,
	0, 0, 0, 0, 0, 1034, 0, 0, 1379, 1032,
	1050, 1022, 1023, 1024, 1020, 1021, 1033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 1038, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 1087, 0, 271, 1094,
	272, 1093, 0, 1104, 273, 274, 275, 276, 277, 278,
	1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 1097, 310, 1091, 1090, 1011,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1082, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1017, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 1029, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1089, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	1102, 1103, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 1039, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 1084, 1085, 0, 1045, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 1008, 254, 1126, 434, 435, 1030, 1078,
	436, 1092, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 1088,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	1018, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 1086, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 1133, 535, 536, 537,
	538, 1109, 0, 541, 542, 1006, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 1098,
	1099, 1100, 1101, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 1028, 556, 557, 558, 559, 0, 561, 562,
	0, 1012, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 1095, 1132, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1009, 0, 0, 0, 0, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 1003,
	1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034, 0,
	0, 0, 1032, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1074, 1038, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 1087, 0, 271,
	1094, 272, 1093, 0, 1104, 273, 274, 275, 276, 277,
	278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0, 280,
	281, 1080, 0, 1061, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066,
	1065, 1069, 306, 307, 308, 309, 1097, 310, 1091, 1090,
	1011, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1082, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1017, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1105, 1106, 1029,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1089,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 1102, 1103, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1112, 0, 1039, 356, 0, 357, 358,
	359, 360, 361, 1075, 1076, 1079, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1117, 371, 1084, 1085, 0, 1045,
	0, 373, 374, 1119, 1077, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 1113, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 1068, 1067,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 1008, 254, 1126, 434, 435, 1030,
	1078, 436, 1092, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 1107, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 1108, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	1088, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 1018, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 1071, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 1086, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 1133, 535, 536,
	537, 538, 1109, 0, 541, 542, 1006, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	1098, 1099, 1100, 1101, 0, 560, 0, 552, 553, 554,
	1110, 555, 1111, 1028, 556, 557, 558, 559, 0, 561,
	562, 0, 1012, 563, 564, 565, 567, 568, 566, 569,
	1072, 570, 0, 0, 571, 572, 573, 629, 1095, 1132,
	0, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 1009, 0, 0, 0, 0,
	0, 0, 0, 1005, 0, 0, 0, 0, 0, 0,
	1003, 1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 1034,
	0, 0, 0, 1032, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1074, 1038, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 1087, 0,
	271, 1094, 272, 1093, 0, 1104, 273, 274, 275, 276,
	277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 4280, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 1097, 310, 1091,
	1090, 1011, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1082, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1017, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	1029, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1089, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 1102, 1103, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 1039, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 1084, 1085, 0,
	1045, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 1008, 254, 1126, 434, 435,
	1030, 1078, 436, 1092, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 1088, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 1018, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 1086, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 1133, 535,
	536, 537, 538, 1109, 0, 541, 542, 1006, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 1098, 1099, 1100, 1101, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 1028, 556, 557, 558, 559, 0,
	4279, 562, 0, 1012, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 629, 1095,
	1132, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1009, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 0,
	0, 1003, 1004, 1050, 1022, 1023, 1024, 1020, 1021, 1033,
	1034, 0, 0, 0, 1032, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1074, 1038, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 4278, 1087,
	0, 271, 1094, 272, 1093, 0, 1104, 273, 274, 275,
	276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135, 590,
	0, 280, 281, 1080, 0, 1061, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 4280, 1064, 1062, 1063,
	1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097, 310,
	1091, 1090, 1011, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1017, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1105,
	1106, 1029, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1089, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1102, 1103, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1112, 0, 1039, 356, 0,
	357, 358, 359, 360, 361, 1075, 1076, 1079, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 1117, 371, 1084, 1085,
	0, 1045, 0, 373, 374, 1119, 1077, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 1113, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	1068, 1067, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 1008, 254, 1126, 434,
	435, 1030, 1078, 436, 1092, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 1107, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 1108, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1088, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 1018, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1071, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1086, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1133,
	535, 536, 537, 538, 1109, 0, 541, 542, 1006, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1098, 1099, 1100, 1101, 0, 560, 0, 552,
	553, 554, 1110, 555, 1111, 1028, 556, 557, 558, 559,
	0, 4279, 562, 0, 1012, 563, 564, 565, 567, 568,
	566, 569, 1072, 570, 0, 0, 571, 572, 573, 629,
	1095, 1132, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1009, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 1003, 1004, 1050, 1022, 1023, 1024, 1020, 1021,
	1033, 1034, 0, 0, 0, 1032, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1074, 1038, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	1087, 0, 271, 1094, 272, 1093, 0, 1104, 273, 274,
	275, 276, 277, 278, 1040, 1073, 1007, 279, 1134, 1135,
	590, 0, 280, 281, 1080, 0, 1061, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 3972, 305, 1064, 1062,
	1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309, 1097,
	310, 1091, 1090, 1011, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1082, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1017,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1105, 1106, 1029, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1089, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 1102, 1103, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1112, 0, 3973, 356,
	0, 357, 358, 359, 360, 361, 1075, 1076, 1079, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 1117, 371, 1084,
	1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 1113,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 1068, 1067, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 1008, 254, 1126,
	434, 435, 1030, 1078, 436, 1092, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 1107, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 1108, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 1088, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 3971, 1018, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 1071, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 1086,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	1133, 535, 536, 537, 538, 1109, 0, 541, 542, 1006,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 1098, 1099, 1100, 1101, 0, 560, 0,
	552, 553, 554, 1110, 555, 1111, 1028, 556, 557, 558,
	559, 0, 561, 562, 0, 1012, 563, 564, 565, 567,
	568, 566, 569, 1072, 570, 0, 0, 571, 572, 573,
	629, 1095, 1132, 0, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 1009, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 1003, 1004, 1050, 1022, 1023, 1024, 2908,
	2909, 1033, 1034, 0, 0, 0, 1032, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1074, 1038, 0,
	0, 0, 264, 265, 1114, 266, 267, 268, 269, 270,
	583, 1087, 0, 271, 1094, 272, 1093, 0, 1104, 273,
	274, 275, 276, 277, 278, 1040, 1073, 1007, 279, 1134,
	1135, 590, 0, 280, 281, 1080, 0, 1061, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1115, 304, 305, 1064,
	1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308, 309,
	1097, 310, 1091, 1090, 1011, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1082, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1017, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1105, 1106, 1029, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1089, 0, 0, 0, 343, 0, 344,
	0, 0, 1116, 345, 346, 1102, 1103, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1112, 0, 1039,
	356, 0, 357, 358, 359, 360, 361, 1075, 1076, 1079,
	437, 1118, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 1117, 371,
	1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077, 1120,
	375, 376, 377, 1121, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	1113, 1122, 389, 390, 1123, 0, 391, 0, 0, 0,
	392, 393, 1068, 1067, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1124, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1125, 424, 1008, 254,
	1126, 434, 435, 1030, 1078, 436, 1092, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 1127, 447, 1128, 1107, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 1108,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 1088, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	1129, 494, 495, 496, 497, 1018, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 1071, 519, 520, 503,
	504, 521, 522, 1130, 523, 524, 525, 526, 527, 528,
	1086, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 1133, 535, 536, 537, 538, 1109, 0, 541, 542,
	1006, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 1098, 1099, 1100, 1101, 0, 560,
	0, 552, 553, 554, 1110, 555, 1111, 1028, 556, 557,
	558, 559, 0, 561, 562, 0, 1012, 563, 564, 565,
	567, 568, 566, 569, 1072, 570, 0, 0, 571, 572,
	573, 629, 1095, 1132, 0, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 1009,
	0, 0, 0, 0, 0, 0, 0, 1005, 0, 0,
	0, 0, 0, 0, 1003, 1004, 1050, 1022, 1023, 1024,
	2906, 2907, 1033, 1034, 0, 0, 0, 1032, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 310, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 1126, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 561, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	1009, 0, 0, 0, 0, 0, 0, 0, 1005, 0,
	0, 0, 0, 0, 0, 1003, 1004, 1050, 1022, 1023,
	1024, 1020, 1021, 1033, 1034, 0, 0, 0, 1032, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1074,
	1038, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 1087, 0, 271, 1094, 272, 1093, 0,
	1104, 273, 274, 275, 276, 277, 278, 1040, 1073, 1007,
	279, 1134, 1135, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 1097, 310, 1091, 1090, 1011, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1082, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1017, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 1029, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1089, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 1102, 1103, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 1039, 356, 0, 357, 358, 359, 360, 361, 1075,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 1084, 1085, 0, 1045, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	1008, 254, 1126, 434, 435, 1030, 1078, 436, 1092, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 1088, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 1018, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 1086, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 1133, 535, 536, 537, 538, 1109, 0,
	541, 542, 1006, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 1098, 1099, 1100, 1101,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 1028,
	556, 557, 558, 559, 0, 561, 562, 0, 1012, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 629, 1095, 1132, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1009, 0, 0, 0, 0, 0, 0, 0, 1005,
	0, 0, 0, 0, 0, 0, 2266, 2267, 1050, 1022,
	1023, 1024, 1020, 1021, 1033, 1034, 0, 0, 0, 1032,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1074, 1038, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 1087, 0, 271, 1094, 272, 1093,
	0, 1104, 273, 274, 275, 276, 277, 278, 1040, 1073,
	0, 279, 1134, 1135, 590, 0, 280, 281, 1080, 0,
	1061, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306,
	307, 308, 309, 1097, 310, 1091, 1090, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1082, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1017, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1105, 1106, 1029, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1089, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 1102, 1103,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1112, 0, 1039, 356, 0, 357, 358, 359, 360, 361,
	1075, 1076, 1079, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 1117, 371, 1084, 1085, 0, 1045, 0, 373, 374,
	1119, 1077, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 1113, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 1068, 1067, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 0, 254, 1126, 434, 435, 1030, 1078, 436, 1092,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 1107,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 1108, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 1088, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 1018, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 1071,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 1086, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 1133, 535, 536, 537, 538, 1109,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 1098, 1099, 1100,
	1101, 0, 560, 0, 552, 553, 554, 1110, 555, 1111,
	1028, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 1072, 570, 0,
	0, 571, 572, 573, 629, 1095, 1132, 0, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 1050, 1022, 1023, 1024, 1020, 1021, 1033, 0,
	2486, 0, 0, 0, 0, 0, 0, 2484, 2485, 255,
	257, 256, 258, 259, 260, 261, 1034, 262, 263, 0,
	1032, 0, 0, 0, 1074, 1038, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 1087, 0,
	271, 1094, 272, 1093, 0, 1104, 273, 274, 275, 276,
	277, 278, 1040, 1073, 0, 279, 1134, 1135, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 1097, 310, 1091,
	1090, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1082, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1017, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	1029, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1089, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 1102, 1103, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 1039, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 1084, 1085, 0,
	1045, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 0, 254, 1126, 434, 435,
	1030, 1078, 436, 1092, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 1088, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 2901, 2902, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 1086, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 1133, 535,
	536, 537, 538, 1109, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 1098, 1099, 1100, 1101, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 1028, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 629, 1095,
	1132, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1050, 1022, 1023, 1024,
	1020, 1021, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 1970, 255, 257, 256, 258, 259, 260, 261,
	1034, 262, 263, 0, 1032, 0, 0, 0, 1074, 1038,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 0, 1087, 0, 271, 1094, 272, 1093, 0, 1104,
	273, 274, 275, 276, 277, 278, 1040, 1073, 1007, 279,
	1134, 1135, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 4280,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 1097, 310, 1091, 1090, 1011, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1082,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1017, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 1029, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1089, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 1102, 1103, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	1039, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 1084, 1085, 0, 1045, 0, 373, 374, 0, 1077,
	0, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 1008,
	254, 0, 434, 435, 1030, 1078, 436, 1092, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 1088, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 1018, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 1086, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 1133, 535, 536, 537, 538, 1109, 0, 541,
	542, 1006, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 1098, 1099, 1100, 1101, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 1028, 556,
	557, 558, 559, 0, 4279, 562, 0, 1012, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 1095, 1132, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	996, 0, 1172, 0, 0, 1003, 1004, 0, 0, 0,
	0, 0, 0, 0, 1034, 0, 0, 0, 1032, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 1073, 0, 279, 588, 589, 590, 0,
	280, 281, 1080, 0, 1061, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070,
	1066, 1065, 1069, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1105, 1106,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1112, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 1075, 1076, 1079, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 1117, 371, 605, 606, 0,
	607, 0, 373, 374, 1119, 1077, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 1158, 385, 387, 386, 0, 388, 1113, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 1068,
	1067, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 0, 254, 1126, 434, 435,
	0, 1078, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 1164, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 1107, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 1108, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 1166, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 215, 514, 515, 513,
	516, 517, 518, 1071, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 1109, 0, 541, 542, 0, 540, 217,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 1110, 555, 1111, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 1072, 570, 0, 0, 571, 572, 573, 1521, 630,
	631, 0, 575, 574, 576, 632, 0, 1172, 0, 209,
	577, 578, 633, 579, 580, 581, 0, 0, 210, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 1162, 1074,
	1850, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 1073, 0,
	279, 588, 589, 590, 0, 280, 281, 1080, 0, 1061,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1105, 1106, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1112,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 1075,
	1076, 1079, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	1117, 371, 605, 606, 0, 607, 0, 373, 374, 1119,
	1077, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 1158, 385, 387, 386,
	0, 388, 1113, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 1068, 1067, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	0, 254, 1126, 434, 435, 0, 1078, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 1164, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 1107, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 1108, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 1166, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 215, 514, 515, 513, 516, 517, 518, 1071, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 1109, 0,
	541, 542, 0, 540, 217, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 1110, 555, 1111, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 1072, 570, 0, 0,
	571, 572, 573, 1521, 630, 631, 0, 575, 574, 576,
	632, 0, 0, 0, 209, 577, 578, 633, 579, 580,
	581, 0, 0, 210, 0, 0, 0, 3085, 0, 1172,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1162, 0, 1850, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 0, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	1073, 0, 279, 588, 589, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 605, 606, 0, 607, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 1158, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 0, 254, 1126, 434, 435, 0, 1078, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 1164, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 619,
	1166, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	1109, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 0, 1154, 0, 1172, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 1162, 0, 1160, 1074, 0,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 1073, 0, 279,
	588, 589, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 605, 606, 0, 607, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 1158, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 0,
	254, 1126, 434, 435, 0, 1078, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 1164, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 619, 1166, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 1109, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 0, 575, 574, 576, 632,
	0, 1172, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 1162, 1074, 1160, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 1073, 0, 279, 588, 589, 590, 0, 280,
	281, 1080, 0, 1061, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066,
	1065, 1069, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1105, 1106, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1112, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1075, 1076, 1079, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 1117, 371, 605, 606, 0, 607,
	0, 373, 374, 1119, 1077, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	1158, 385, 387, 386, 0, 388, 1113, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 1068, 1067,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 0, 254, 1126, 434, 435, 0,
	1078, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	1164, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 1107, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 1108, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 619, 1166, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 1071, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 1109, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	1110, 555, 1111, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	1072, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 0, 1172, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 1162, 1074, 1160,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 1073, 0, 279,
	588, 589, 590, 0, 280, 281, 1080, 0, 1061, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	1064, 1062, 1063, 1070, 1066, 1065, 1069, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1105, 1106, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1112, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 1075, 1076,
	1079, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 1117,
	371, 605, 606, 0, 607, 0, 373, 374, 1119, 1077,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 1113, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 1068, 1067, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 0,
	254, 1126, 434, 435, 0, 1078, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 1107, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	1108, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1071, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 1109, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 1110, 555, 1111, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 1072, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 0, 575, 574, 576, 632,
	1172, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1074, 0, 3566, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 1073, 0, 279, 588, 589, 590, 0, 280, 281,
	1080, 0, 1061, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065,
	1069, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1105, 1106, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1112, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 1075, 1076, 1079, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 1117, 371, 605, 606, 0, 607, 0,
	373, 374, 1119, 1077, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 1113, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 1068, 1067, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 0, 254, 1126, 434, 435, 0, 1078,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 1107, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 1108, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	619, 1166, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 1071, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 1109, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 1110,
	555, 1111, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 1072,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 0, 996, 0, 1362, 577, 578,
	633, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 1749, 582,
	0, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 1328,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1117, 371, 605, 606, 0, 607, 0, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	0, 0, 1126, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 215, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 217, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 1521, 630, 631, 0, 575, 574, 576,
	632, 0, 0, 0, 209, 577, 578, 633, 579, 580,
	581, 0, 0, 210, 0, 0, 0, 1518, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 1328, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 1117, 371, 605, 606, 0, 607, 0, 373,
	374, 1119, 608, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 0, 0, 1126, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 215, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 217, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 1521, 630, 631, 0, 575,
	574, 576, 632, 0, 0, 0, 209, 577, 578, 633,
	579, 580, 581, 1362, 1361, 210, 0, 0, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 179, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 1328, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 1117, 371, 605, 606,
	0, 607, 0, 373, 374, 1119, 608, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 0, 0, 1126, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1362, 1361, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 1543, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 1328,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1117, 371, 605, 606, 0, 607, 0, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	0, 0, 1126, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1362, 2054, 0, 0, 0, 0, 2055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 3342, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 1328, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1117, 371, 605, 606, 0, 607,
	0, 373, 374, 1119, 608, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 2053, 387, 386, 0, 388, 609, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 0, 0, 1126, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 1362, 1361, 0, 0, 0,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 1543,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 1114, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 1328, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1115, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 1116, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 1118, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 1117, 371,
	605, 606, 0, 607, 0, 373, 374, 1119, 608, 1120,
	375, 376, 377, 1121, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 1122, 389, 390, 1123, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 1124, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 1125, 424, 0, 0,
	1126, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 1127, 447, 1128, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	1129, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 1130, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 1172,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1074, 0, 1527, 0, 0, 264, 265, 1114, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	1073, 0, 279, 588, 589, 590, 0, 280, 281, 1080,
	0, 1061, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1115, 304, 305, 1064, 1062, 1063, 1070, 1066, 1065, 1069,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1105, 1106, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 1116, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1112, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 1075, 1076, 1079, 437, 1118, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 1117, 371, 605, 606, 0, 607, 0, 373,
	374, 1119, 1077, 1120, 375, 376, 377, 1121, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 1113, 1122, 389, 390, 1123, 0,
	391, 0, 0, 0, 392, 393, 1068, 1067, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 1124, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	1125, 424, 0, 254, 1126, 434, 435, 0, 1078, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 1127, 447, 1128,
	1107, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 1108, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 1129, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	1071, 519, 520, 503, 504, 521, 522, 1130, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	1109, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 1110, 555,
	1111, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 1072, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 996, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 215,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 217, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 1521, 630, 631, 0, 575, 574, 576, 632, 249,
	0, 0, 209, 577, 578, 633, 579, 580, 581, 0,
	0, 210, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 179, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 249, 2821, 0, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 1864, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 249, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 4423, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 0, 575, 574, 576, 632, 0, 249, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 3283, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 0, 249, 0, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 1463, 582, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 249, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	2791, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 3443,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 0, 842, 0, 721, 577, 578,
	633, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 2158, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	728, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 840, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 726, 543, 544, 545, 546, 547,
	727, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 0, 719, 0, 721, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 731, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 728, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 726, 543, 544, 545, 546, 547, 727, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 1901, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 731, 0, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 0, 1907,
	0, 271, 1897, 272, 1913, 0, 1920, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 1923, 1924, 0,
	0, 280, 281, 0, 0, 1328, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 1097, 310,
	1911, 1910, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1082, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 0, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 1909, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 1918, 1919, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 0, 0, 0, 356, 0,
	357, 358, 359, 360, 361, 0, 0, 0, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 1117, 371, 1904, 1905,
	0, 1900, 0, 373, 374, 1119, 0, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 0, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 0, 0, 1126, 434,
	435, 0, 0, 436, 1912, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	0, 1127, 447, 1128, 0, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 1894,
	460, 461, 462, 1895, 463, 464, 465, 0, 466, 0,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 1908, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 0, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 1906, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 1922,
	535, 536, 537, 538, 0, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 1914, 1915, 1916, 1917, 0, 560, 0, 552,
	553, 554, 0, 555, 0, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 0,
	1898, 1921, 0, 575, 574, 576, 721, 0, 0, 0,
	0, 577, 578, 0, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 1888, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 728,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 605, 606, 0, 607, 0, 373, 374, 0, 608,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 0, 447, 0, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 0, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 726, 543, 544, 545, 546, 547, 727,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 0, 575, 574, 576, 632,
	721, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 731, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 728, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 2198, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 2199,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 726, 543, 544,
	545, 546, 547, 727, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 2200, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1931, 0, 1362, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 1328, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	0, 0, 0, 0, 0, 0, 1934, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1117,
	371, 605, 606, 0, 607, 0, 373, 374, 1119, 608,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 0,
	0, 1126, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 1935, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 721, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 728, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 1927, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 726, 543, 544, 545, 546, 547, 727, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	1926, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 721,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 731, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 728, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 1880, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 726, 543, 544, 545,
	546, 547, 727, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 1879, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 1362, 1361, 0, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	731, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 1114, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 1328, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1115, 304, 305, 0, 0, 0,
	0, 0, 0, 1934, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	1116, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 1118,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 1117, 371, 605, 606,
	0, 607, 0, 373, 374, 1119, 608, 1120, 375, 376,
	377, 1121, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 1122,
	389, 390, 1123, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 1124, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 1125, 424, 0, 0, 1126, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 1127, 447, 1128, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 1129, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 1935, 519, 520, 503, 504, 521,
	522, 1130, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 1362, 1361, 0,
	0, 0, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 1114, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 1328,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1115, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 1116, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 1118, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	1117, 371, 605, 606, 0, 607, 0, 373, 374, 1119,
	608, 1120, 375, 376, 377, 1121, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 1122, 389, 390, 1123, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 1124, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 1125, 424,
	0, 0, 1126, 434, 435, 3616, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 1127, 447, 1128, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 1129, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 1130, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 1362, 1361, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 1328, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1117, 371, 605, 606, 0, 607,
	0, 373, 374, 1119, 608, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 0, 0, 1126, 434, 435, 3255,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1571, 0, 1362, 1361, 0, 0,
	0, 0, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 1114, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 1328, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1115, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 252, 0, 0, 0, 0,
	0, 1570, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 1116, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 1118, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 1117,
	371, 605, 606, 0, 607, 0, 373, 374, 1119, 608,
	1120, 375, 376, 377, 1121, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 1122, 389, 390, 1123, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 1124, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 1125, 424, 0,
	0, 1126, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 1127, 447, 1128, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 1569, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 1129, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 1568, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 1130, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 0, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	1511, 0, 1362, 1361, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 1328, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 1510, 603, 604, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1117, 371, 605, 606, 0,
	607, 0, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 0, 0, 1126, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 0, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 1438, 0, 1362, 1361,
	0, 0, 0, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 590, 0, 280, 281, 591, 0,
	1328, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	1437, 603, 604, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 1117, 371, 605, 606, 0, 607, 0, 373, 374,
	1119, 608, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 0, 0, 1126, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 0,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 623, 624, 625,
	626, 0, 560, 0, 552, 553, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 0, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 1397, 0, 1362, 1361, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 1328, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 1117, 371, 605,
	606, 0, 607, 0, 373, 374, 1119, 608, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 0, 0, 1126,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 0, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 1357, 0,
	1362, 1361, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 1114,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 1328, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1115, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 1116, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 1356, 603, 604, 437, 1118, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 1117, 371, 605, 606, 0, 607, 0,
	373, 374, 1119, 608, 1120, 375, 376, 377, 1121, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 1122, 389, 390, 1123,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 1124, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 1125, 424, 0, 0, 1126, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 1127, 447,
	1128, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 1129, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 1130, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 1362, 1361, 0, 0, 0, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 1114, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 1328, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1115, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 1116, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	1118, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 1117, 371, 605,
	606, 0, 607, 0, 373, 374, 1119, 608, 1120, 375,
	376, 377, 1121, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	1122, 389, 390, 1123, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 1124, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 1125, 424, 0, 0, 1126,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 1127, 447, 1128, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 1129,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 1130, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 0, 575, 574, 576, 632, 1362, 1361,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 1114, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 590, 0, 280, 281, 591, 0,
	1328, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1115,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 1942, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 1116, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 1118, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 1117, 371, 605, 606, 0, 607, 0, 373, 374,
	1119, 608, 1120, 375, 376, 377, 1121, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 1122, 389, 390, 1123, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 1124, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 1125,
	424, 0, 0, 1126, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 1127, 447, 1128, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 1129, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 0,
	519, 520, 503, 504, 521, 522, 1130, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 623, 624, 625,
	626, 0, 560, 0, 552, 553, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 0, 575, 574,
	576, 632, 1362, 1361, 0, 0, 577, 578, 633, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 1114, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 1328, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1115, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 1116,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 1118, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 1117, 371, 605, 606, 0,
	607, 0, 373, 374, 1119, 608, 1120, 375, 376, 377,
	1121, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 1122, 389,
	390, 1123, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	1124, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 1125, 424, 0, 0, 1126, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	1127, 447, 1128, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 1129, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	1130, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 1362, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	1114, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 1328, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1115, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 1116, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 1118, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 1117, 371, 605, 606, 0, 607,
	0, 373, 374, 1119, 608, 1120, 375, 376, 377, 1121,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 1122, 389, 390,
	1123, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 1124,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 1125, 424, 0, 0, 1126, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 1127,
	447, 1128, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 1129, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 1130,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 2625, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 2622, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 2629, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 2834,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 2628, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 2831, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 2833, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 2830,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 2627,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 2832, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 249,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 2625, 280, 281, 591,
	0, 0, 2619, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 2622, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 2629, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 2628, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 2618, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 2627, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	2626, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 1638, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	1641, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 1639, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 1640, 574, 576, 632, 1332,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1334, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	1164, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 1329, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 1331,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 1164, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 1235, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 1237, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 1164, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 665, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	664, 260, 261, 654, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 657, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 658,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 659, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 653, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 654,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 657, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 658, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 659,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 249, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 1164, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 249, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 3218, 424, 0, 254, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 2762, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 2761, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 2171, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 249, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 2086, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 0, 575, 574, 576, 632, 2092, 0,
	249, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 2091, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 254, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 2079, 0, 249, 0, 577, 578,
	633, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 2081, 603,
	604, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 605, 606, 0, 607, 0, 373, 374, 0, 608,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 0, 447, 0, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 0, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 249, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 2050, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 1164, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 1503,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1502, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 1494, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 1493,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 1491, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 1490, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 1486, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 1485, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 1441, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 1350,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 1343, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 1345,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 254, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 635, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 240, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 254, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 249, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 590, 0, 280, 281, 591, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 370, 372,
	0, 0, 371, 605, 606, 0, 607, 0, 373, 374,
	0, 608, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 254, 0, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 0, 447, 0, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 0, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 0,
	519, 520, 503, 504, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 623, 624, 625,
	626, 0, 560, 0, 552, 553, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 249, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 657, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 658, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 659, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 249, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 2207,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 370, 372, 0, 0,
	371, 605, 606, 0, 607, 0, 373, 374, 0, 608,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	254, 0, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 0, 447, 0, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 0, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 249, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 2205, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 254,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 249, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 2203, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 254, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 249, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 2136, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 254, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 249, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 2130, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 254, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 249, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 2098, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 254, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 829, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 828, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 827, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 249, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 2834, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 602, 603,
	604, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 605, 606, 0, 607, 0, 373, 374, 0, 608,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 0, 447, 0, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 3878, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 0, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 0, 575, 574, 576, 632,
	688, 0, 249, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 1205, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 1203, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 689,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 685, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 1206, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 684, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 0, 575, 574, 576, 632, 688, 0, 249, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 1205, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 1203, 0, 280, 281, 591, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 605, 606, 0, 607, 0, 373, 374,
	0, 608, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 689, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 0, 447, 0, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 0, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 685, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 1206, 518, 0,
	519, 520, 503, 504, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 684, 624, 625,
	626, 0, 560, 0, 552, 1204, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 0, 575, 574,
	576, 632, 644, 0, 249, 0, 577, 578, 633, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 643, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 642, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 0, 575, 574, 576, 632, 249, 2821,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 590, 0, 280, 281, 591, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	602, 603, 604, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 605, 606, 0, 607, 0, 373, 374,
	0, 608, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 0, 447, 0, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 0, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 0,
	519, 520, 503, 504, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 623, 624, 625,
	626, 0, 560, 0, 552, 553, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 0, 575, 574,
	576, 632, 249, 3888, 0, 0, 577, 578, 633, 579,
	580, 581, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 249, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	3590, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 2537, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 0,
	575, 574, 576, 632, 249, 2821, 0, 0, 577, 578,
	633, 579, 580, 581, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 602, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 2818, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 249, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 2181, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 2169, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 688, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 678, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 689, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 685, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 1526, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 684, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 1507,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1506, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 1500, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 1499,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 1447, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 1446, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 1430, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 1428, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 1424, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 1401,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1399, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 1353, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 1337, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 506, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 249, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 1185, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 519, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 249, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 694, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	0, 575, 574, 576, 632, 688, 0, 249, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 678, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 676, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 602,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 677, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 689, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 679, 498, 0,
	499, 500, 506, 507, 501, 502, 685, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 680, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 684, 624, 625, 626,
	0, 560, 0, 552, 682, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 0, 575, 574, 576,
	632, 670, 0, 249, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 671, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 0, 575, 574, 576, 632, 667, 0, 249,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 661, 0, 249, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 602, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 0, 575, 574, 576, 632, 639,
	0, 249, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 602, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 479, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 249,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 356, 0, 357, 358, 359, 360,
	361, 3301, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 452, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 474, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	498, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 249, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	582, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 583, 584, 0, 271, 585, 272, 586,
	0, 587, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 588, 589, 590, 0, 280, 281, 591, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 592, 593, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 594, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 595, 596, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 597, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 598, 599,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	600, 0, 601, 356, 0, 357, 358, 359, 360, 361,
	3249, 603, 604, 437, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 370, 372,
	0, 0, 371, 605, 606, 0, 607, 0, 373, 374,
	0, 608, 0, 375, 376, 377, 0, 378, 0, 0,
	0, 379, 380, 381, 382, 383, 384, 0, 385, 387,
	386, 0, 388, 609, 0, 389, 390, 0, 0, 391,
	0, 0, 0, 392, 393, 0, 0, 394, 395, 396,
	397, 0, 398, 399, 401, 404, 400, 402, 403, 405,
	418, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 420, 0, 419, 0, 421, 422, 423,
	428, 430, 431, 426, 427, 429, 432, 433, 425, 0,
	424, 0, 0, 0, 434, 435, 0, 610, 436, 611,
	438, 439, 0, 0, 440, 0, 0, 0, 442, 443,
	444, 0, 0, 445, 446, 612, 0, 447, 0, 613,
	448, 449, 441, 450, 451, 452, 453, 454, 455, 456,
	457, 0, 458, 459, 614, 460, 461, 462, 615, 463,
	464, 465, 616, 466, 617, 467, 468, 0, 469, 0,
	470, 471, 472, 473, 474, 475, 476, 618, 477, 479,
	478, 480, 0, 481, 0, 0, 0, 0, 0, 482,
	0, 484, 485, 486, 483, 487, 488, 489, 490, 0,
	491, 492, 493, 0, 494, 495, 496, 497, 619, 498,
	0, 499, 500, 506, 507, 501, 502, 508, 509, 510,
	511, 512, 0, 514, 515, 513, 516, 517, 518, 0,
	519, 520, 503, 504, 521, 522, 0, 523, 524, 525,
	526, 527, 528, 620, 0, 529, 0, 530, 531, 532,
	533, 505, 534, 539, 621, 535, 536, 537, 538, 622,
	0, 541, 542, 0, 540, 0, 543, 544, 545, 546,
	547, 548, 549, 334, 550, 0, 551, 623, 624, 625,
	626, 0, 560, 0, 552, 553, 554, 627, 555, 628,
	0, 556, 557, 558, 559, 0, 561, 562, 0, 0,
	563, 564, 565, 567, 568, 566, 569, 0, 570, 0,
	0, 571, 572, 573, 629, 630, 631, 249, 575, 574,
	576, 632, 0, 0, 0, 0, 577, 578, 633, 579,
	580, 581, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 583, 584, 0, 271, 585, 272, 586, 0,
	587, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 588, 589, 590, 0, 280, 281, 591, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 592, 593, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 594, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 595, 596, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 597, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 598, 599, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 600,
	0, 601, 356, 0, 357, 358, 359, 360, 361, 3189,
	603, 604, 437, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 370, 372, 0,
	0, 371, 605, 606, 0, 607, 0, 373, 374, 0,
	608, 0, 375, 376, 377, 0, 378, 0, 0, 0,
	379, 380, 381, 382, 383, 384, 0, 385, 387, 386,
	0, 388, 609, 0, 389, 390, 0, 0, 391, 0,
	0, 0, 392, 393, 0, 0, 394, 395, 396, 397,
	0, 398, 399, 401, 404, 400, 402, 403, 405, 418,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 417, 420, 0, 419, 0, 421, 422, 423, 428,
	430, 431, 426, 427, 429, 432, 433, 425, 0, 424,
	0, 0, 0, 434, 435, 0, 610, 436, 611, 438,
	439, 0, 0, 440, 0, 0, 0, 442, 443, 444,
	0, 0, 445, 446, 612, 0, 447, 0, 613, 448,
	449, 441, 450, 451, 452, 453, 454, 455, 456, 457,
	0, 458, 459, 614, 460, 461, 462, 615, 463, 464,
	465, 616, 466, 617, 467, 468, 0, 469, 0, 470,
	471, 472, 473, 474, 475, 476, 618, 477, 479, 478,
	480, 0, 481, 0, 0, 0, 0, 0, 482, 0,
	484, 485, 486, 483, 487, 488, 489, 490, 0, 491,
	492, 493, 0, 494, 495, 496, 497, 619, 498, 0,
	499, 500, 506, 507, 501, 502, 508, 509, 510, 511,
	512, 0, 514, 515, 513, 516, 517, 518, 0, 519,
	520, 503, 504, 521, 522, 0, 523, 524, 525, 526,
	527, 528, 620, 0, 529, 0, 530, 531, 532, 533,
	505, 534, 539, 621, 535, 536, 537, 538, 622, 0,
	541, 542, 0, 540, 0, 543, 544, 545, 546, 547,
	548, 549, 334, 550, 0, 551, 623, 624, 625, 626,
	0, 560, 0, 552, 553, 554, 627, 555, 628, 0,
	556, 557, 558, 559, 0, 561, 562, 0, 0, 563,
	564, 565, 567, 568, 566, 569, 0, 570, 0, 0,
	571, 572, 573, 629, 630, 631, 249, 575, 574, 576,
	632, 0, 0, 0, 0, 577, 578, 633, 579, 580,
	581, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 582, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 583, 584, 0, 271, 585, 272, 586, 0, 587,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	588, 589, 590, 0, 280, 281, 591, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 592, 593, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 594, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 595, 596, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 597, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 598, 599, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 600, 0,
	601, 356, 0, 357, 358, 359, 360, 361, 3187, 603,
	604, 437, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 370, 372, 0, 0,
	371, 605, 606, 0, 607, 0, 373, 374, 0, 608,
	0, 375, 376, 377, 0, 378, 0, 0, 0, 379,
	380, 381, 382, 383, 384, 0, 385, 387, 386, 0,
	388, 609, 0, 389, 390, 0, 0, 391, 0, 0,
	0, 392, 393, 0, 0, 394, 395, 396, 397, 0,
	398, 399, 401, 404, 400, 402, 403, 405, 418, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	417, 420, 0, 419, 0, 421, 422, 423, 428, 430,
	431, 426, 427, 429, 432, 433, 425, 0, 424, 0,
	0, 0, 434, 435, 0, 610, 436, 611, 438, 439,
	0, 0, 440, 0, 0, 0, 442, 443, 444, 0,
	0, 445, 446, 612, 0, 447, 0, 613, 448, 449,
	441, 450, 451, 452, 453, 454, 455, 456, 457, 0,
	458, 459, 614, 460, 461, 462, 615, 463, 464, 465,
	616, 466, 617, 467, 468, 0, 469, 0, 470, 471,
	472, 473, 474, 475, 476, 618, 477, 479, 478, 480,
	0, 481, 0, 0, 0, 0, 0, 482, 0, 484,
	485, 486, 483, 487, 488, 489, 490, 0, 491, 492,
	493, 0, 494, 495, 496, 497, 619, 498, 0, 499,
	500, 506, 507, 501, 502, 508, 509, 510, 511, 512,
	0, 514, 515, 513, 516, 517, 518, 0, 519, 520,
	503, 504, 521, 522, 0, 523, 524, 525, 526, 527,
	528, 620, 0, 529, 0, 530, 531, 532, 533, 505,
	534, 539, 621, 535, 536, 537, 538, 622, 0, 541,
	542, 0, 540, 0, 543, 544, 545, 546, 547, 548,
	549, 334, 550, 0, 551, 623, 624, 625, 626, 0,
	560, 0, 552, 553, 554, 627, 555, 628, 0, 556,
	557, 558, 559, 0, 561, 562, 0, 0, 563, 564,
	565, 567, 568, 566, 569, 0, 570, 0, 0, 571,
	572, 573, 629, 630, 631, 249, 575, 574, 576, 632,
	0, 0, 0, 0, 577, 578, 633, 579, 580, 581,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 582, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	583, 584, 0, 271, 585, 272, 586, 0, 587, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 588,
	589, 590, 0, 280, 281, 591, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 592, 593, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	594, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 595, 596, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 597, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 598, 599, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 600, 0, 601,
	356, 0, 357, 358, 359, 360, 361, 3173, 603, 604,
	437, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 370, 372, 0, 0, 371,
	605, 606, 0, 607, 0, 373, 374, 0, 608, 0,
	375, 376, 377, 0, 378, 0, 0, 0, 379, 380,
	381, 382, 383, 384, 0, 385, 387, 386, 0, 388,
	609, 0, 389, 390, 0, 0, 391, 0, 0, 0,
	392, 393, 0, 0, 394, 395, 396, 397, 0, 398,
	399, 401, 404, 400, 402, 403, 405, 418, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 417,
	420, 0, 419, 0, 421, 422, 423, 428, 430, 431,
	426, 427, 429, 432, 433, 425, 0, 424, 0, 0,
	0, 434, 435, 0, 610, 436, 611, 438, 439, 0,
	0, 440, 0, 0, 0, 442, 443, 444, 0, 0,
	445, 446, 612, 0, 447, 0, 613, 448, 449, 441,
	450, 451, 452, 453, 454, 455, 456, 457, 0, 458,
	459, 614, 460, 461, 462, 615, 463, 464, 465, 616,
	466, 617, 467, 468, 0, 469, 0, 470, 471, 472,
	473, 474, 475, 476, 618, 477, 479, 478, 480, 0,
	481, 0, 0, 0, 0, 0, 482, 0, 484, 485,
	486, 483, 487, 488, 489, 490, 0, 491, 492, 493,
	0, 494, 495, 496, 497, 619, 498, 0, 499, 500,
	506, 507, 501, 502, 508, 509, 510, 511, 512, 0,
	514, 515, 513, 516, 517, 518, 0, 519, 520, 503,
	504, 521, 522, 0, 523, 524, 525, 526, 527, 528,
	620, 0, 529, 0, 530, 531, 532, 533, 505, 534,
	539, 621, 535, 536, 537, 538, 622, 0, 541, 542,
	0, 540, 0, 543, 544, 545, 546, 547, 548, 549,
	334, 550, 0, 551, 623, 624, 625, 626, 0, 560,
	0, 552, 553, 554, 627, 555, 628, 0, 556, 557,
	558, 559, 0, 561, 562, 0, 0, 563, 564, 565,
	567, 568, 566, 569, 0, 570, 0, 0, 571, 572,
	573, 629, 630, 631, 249, 575, 574, 576, 632, 0,
	0, 0, 0, 577, 578, 633, 579, 580, 581, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 582, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 583,
	584, 0, 271, 585, 272, 586, 0, 587, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 588, 589,
	590, 0, 280, 281, 591, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 592, 593, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 594,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	595, 596, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 597, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 598, 599, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 600, 0, 601, 356,
	0, 357, 358, 359, 360, 361, 2771, 603, 604, 437,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 370, 372, 0, 0, 371, 605,
	606, 0, 607, 0, 373, 374, 0, 608, 0, 375,
	376, 377, 0, 378, 0, 0, 0, 379, 380, 381,
	382, 383, 384, 0, 385, 387, 386, 0, 388, 609,
	0, 389, 390, 0, 0, 391, 0, 0, 0, 392,
	393, 0, 0, 394, 395, 396, 397, 0, 398, 399,
	401, 404, 400, 402, 403, 405, 418, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 417, 420,
	0, 419, 0, 421, 422, 423, 428, 430, 431, 426,
	427, 429, 432, 433, 425, 0, 424, 0, 0, 0,
	434, 435, 0, 610, 436, 611, 438, 439, 0, 0,
	440, 0, 0, 0, 442, 443, 444, 0, 0, 445,
	446, 612, 0, 447, 0, 613, 448, 449, 441, 450,
	451, 452, 453, 454, 455, 456, 457, 0, 458, 459,
	614, 460, 461, 462, 615, 463, 464, 465, 616, 466,
	617, 467, 468, 0, 469, 0, 470, 471, 472, 473,
	474, 475, 476, 618, 477, 479, 478, 480, 0, 481,
	0, 0, 0, 0, 0, 482, 0, 484, 485, 486,
	483, 487, 488, 489, 490, 0, 491, 492, 493, 0,
	494, 495, 496, 497, 619, 498, 0, 499, 500, 506,
	507, 501, 502, 508, 509, 510, 511, 512, 0, 514,
	515, 513, 516, 517, 518, 0, 519, 520, 503, 504,
	521, 522, 0, 523, 524, 525, 526, 527, 528, 620,
	0, 529, 0, 530, 531, 532, 533, 505, 534, 539,
	621, 535, 536, 537, 538, 622, 0, 541, 542, 0,
	540, 0, 543, 544, 545, 546, 547, 548, 549, 334,
	550, 0, 551, 623, 624, 625, 626, 0, 560, 0,
	552, 553, 554, 627, 555, 628, 0, 556, 557, 558,
	559, 0, 561, 562, 0, 0, 563, 564, 565, 567,
	568, 566, 569, 0, 570, 0, 0, 571, 572, 573,
	629, 630, 631, 249, 575, 574, 576, 632, 0, 0,
	0, 0, 577, 578, 633, 579, 580, 581, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 582, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 583, 584,
	0, 271, 585, 272, 586, 0, 587, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 588, 589, 590,
	0, 280, 281, 591, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	592, 593, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 594, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 595,
	596, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 597, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 598, 599, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 600, 0, 601, 356, 0,
	357, 358, 359, 360, 361, 602, 603, 604, 437, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 370, 372, 0, 0, 371, 605, 606,
	0, 607, 0, 373, 374, 0, 608, 0, 375, 376,
	377, 0, 378, 0, 0, 0, 379, 380, 381, 382,
	383, 384, 0, 385, 387, 386, 0, 388, 609, 0,
	389, 390, 0, 0, 391, 0, 0, 0, 392, 393,
	0, 0, 394, 395, 396, 397, 0, 398, 399, 401,
	404, 400, 402, 403, 405, 418, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 417, 420, 0,
	419, 0, 421, 422, 423, 428, 430, 431, 426, 427,
	429, 432, 433, 425, 0, 424, 0, 0, 0, 434,
	435, 0, 610, 436, 611, 438, 439, 0, 0, 440,
	0, 0, 0, 442, 443, 444, 0, 0, 445, 446,
	612, 0, 447, 0, 613, 448, 449, 441, 450, 451,
	452, 453, 454, 455, 456, 457, 0, 458, 459, 614,
	460, 461, 462, 615, 463, 464, 465, 616, 466, 617,
	467, 468, 0, 469, 0, 470, 471, 472, 473, 474,
	475, 476, 618, 477, 479, 478, 480, 0, 481, 0,
	0, 0, 0, 0, 482, 0, 484, 485, 486, 483,
	487, 488, 489, 490, 0, 491, 492, 493, 0, 494,
	495, 496, 497, 619, 498, 0, 499, 500, 671, 507,
	501, 502, 508, 509, 510, 511, 512, 0, 514, 515,
	513, 516, 517, 518, 0, 519, 520, 503, 504, 521,
	522, 0, 523, 524, 525, 526, 527, 528, 620, 0,
	529, 0, 530, 531, 532, 533, 505, 534, 539, 621,
	535, 536, 537, 538, 622, 0, 541, 542, 0, 540,
	0, 543, 544, 545, 546, 547, 548, 549, 334, 550,
	0, 551, 623, 624, 625, 626, 0, 560, 0, 552,
	553, 554, 627, 555, 628, 0, 556, 557, 558, 559,
	0, 561, 562, 0, 0, 563, 564, 565, 567, 568,
	566, 569, 0, 570, 0, 0, 571, 572, 573, 629,
	630, 631, 249, 575, 574, 576, 632, 0, 0, 0,
	0, 577, 578, 633, 579, 580, 581, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 582, 0, 2115, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 583, 584, 0,
	271, 585, 272, 586, 0, 587, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 588, 589, 590, 0,
	280, 281, 591, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 592,
	593, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 594, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 595, 596,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	597, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 598, 599, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 600, 0, 601, 356, 0, 357,
	358, 359, 360, 361, 602, 603, 604, 437, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 370, 372, 0, 0, 371, 605, 606, 0,
	607, 0, 373, 374, 0, 608, 0, 375, 376, 377,
	0, 378, 0, 0, 0, 379, 380, 381, 382, 383,
	384, 0, 385, 387, 386, 0, 388, 609, 0, 389,
	390, 0, 0, 391, 0, 0, 0, 392, 393, 0,
	0, 394, 395, 396, 397, 0, 398, 399, 401, 404,
	400, 402, 403, 405, 418, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 420, 0, 419,
	0, 421, 422, 423, 428, 430, 431, 426, 427, 429,
	432, 433, 425, 0, 424, 0, 0, 0, 434, 435,
	0, 610, 436, 611, 438, 439, 0, 0, 440, 0,
	0, 0, 442, 443, 444, 0, 0, 445, 446, 612,
	0, 447, 0, 613, 448, 449, 441, 450, 451, 452,
	453, 454, 455, 456, 457, 0, 458, 459, 614, 460,
	461, 462, 615, 463, 464, 465, 616, 466, 617, 467,
	468, 0, 469, 0, 470, 471, 472, 473, 474, 475,
	476, 618, 477, 479, 478, 480, 0, 481, 0, 0,
	0, 0, 0, 482, 0, 484, 485, 486, 483, 487,
	488, 489, 490, 0, 491, 492, 493, 0, 494, 495,
	496, 497, 619, 498, 0, 499, 500, 506, 507, 501,
	502, 508, 509, 510, 511, 512, 0, 514, 515, 513,
	516, 517, 518, 0, 0, 520, 503, 504, 521, 522,
	0, 523, 524, 525, 526, 527, 528, 620, 0, 529,
	0, 530, 531, 532, 533, 505, 534, 539, 621, 535,
	536, 537, 538, 622, 0, 541, 542, 0, 540, 0,
	543, 544, 545, 546, 547, 548, 549, 334, 550, 0,
	551, 623, 624, 625, 626, 0, 560, 0, 552, 553,
	554, 627, 555, 628, 0, 556, 557, 558, 559, 0,
	561, 562, 0, 0, 563, 564, 565, 567, 568, 566,
	569, 0, 570, 0, 0, 571, 572, 573, 629, 630,
	631, 249, 575, 574, 576, 632, 0, 0, 0, 0,
	577, 578, 633, 579, 580, 581, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 582, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 583, 584, 0, 271,
	585, 272, 586, 0, 587, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 588, 589, 590, 0, 280,
	281, 591, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 592, 593,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 594, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 595, 596, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 597,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 598, 599, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 600, 0, 601, 356, 0, 357, 358,
	359, 360, 361, 1471, 603, 604, 437, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 370, 372, 0, 0, 371, 605, 606, 0, 607,
	0, 373, 374, 0, 608, 0, 375, 376, 377, 0,
	378, 0, 0, 0, 379, 380, 381, 382, 383, 384,
	0, 385, 387, 386, 0, 388, 609, 0, 389, 390,
	0, 0, 391, 0, 0, 0, 392, 393, 0, 0,
	394, 395, 396, 397, 0, 398, 399, 401, 404, 400,
	402, 403, 405, 418, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 417, 420, 0, 419, 0,
	421, 422, 423, 428, 430, 431, 426, 427, 429, 432,
	433, 425, 0, 424, 0, 0, 0, 434, 435, 0,
	610, 436, 611, 438, 439, 0, 0, 440, 0, 0,
	0, 442, 443, 444, 0, 0, 445, 446, 612, 0,
	447, 0, 613, 448, 449, 441, 450, 451, 452, 453,
	454, 455, 456, 457, 0, 458, 459, 614, 460, 461,
	462, 615, 463, 464, 465, 616, 466, 617, 467, 468,
	0, 469, 0, 470, 471, 472, 473, 474, 475, 476,
	618, 477, 479, 478, 480, 0, 481, 0, 0, 0,
	0, 0, 482, 0, 484, 485, 486, 483, 487, 488,
	489, 490, 0, 491, 492, 493, 0, 494, 495, 496,
	497, 619, 498, 0, 499, 500, 506, 507, 501, 502,
	508, 509, 510, 511, 512, 0, 514, 515, 513, 516,
	517, 518, 0, 519, 520, 503, 504, 521, 522, 0,
	523, 524, 525, 526, 527, 528, 620, 0, 529, 0,
	530, 531, 532, 533, 505, 534, 539, 621, 535, 536,
	537, 538, 622, 0, 541, 542, 0, 540, 0, 543,
	544, 545, 546, 547, 548, 549, 334, 550, 0, 551,
	623, 624, 625, 626, 0, 560, 0, 552, 553, 554,
	627, 555, 628, 0, 556, 557, 558, 559, 0, 561,
	562, 0, 0, 563, 564, 565, 567, 568, 566, 569,
	0, 570, 0, 0, 571, 572, 573, 629, 630, 631,
	249, 575, 574, 576, 632, 0, 0, 0, 0, 577,
	578, 633, 579, 580, 581, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 582, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 583, 584, 0, 271, 585,
	272, 586, 0, 587, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 588, 589, 590, 0, 280, 281,
	591, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 592, 593, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 594, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 595, 596, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 597, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	598, 599, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 600, 0, 601, 356, 0, 357, 358, 359,
	360, 361, 602, 603, 604, 437, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	370, 372, 0, 0, 371, 605, 606, 0, 607, 0,
	373, 374, 0, 608, 0, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 380, 381, 382, 383, 384, 0,
	385, 387, 386, 0, 388, 609, 0, 389, 390, 0,
	0, 391, 0, 0, 0, 392, 393, 0, 0, 394,
	395, 396, 397, 0, 398, 399, 401, 404, 400, 402,
	403, 405, 418, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 417, 420, 0, 419, 0, 421,
	422, 423, 428, 430, 431, 426, 427, 429, 432, 433,
	425, 0, 424, 0, 0, 0, 434, 435, 0, 610,
	436, 611, 438, 439, 0, 0, 440, 0, 0, 0,
	442, 443, 444, 0, 0, 445, 446, 612, 0, 447,
	0, 613, 448, 449, 441, 450, 451, 452, 453, 454,
	455, 456, 457, 0, 458, 459, 614, 460, 461, 462,
	615, 463, 464, 465, 616, 466, 617, 467, 468, 0,
	469, 0, 470, 471, 472, 473, 474, 475, 476, 618,
	477, 1137, 478, 480, 0, 481, 0, 0, 0, 0,
	0, 482, 0, 484, 485, 486, 483, 487, 488, 489,
	490, 0, 491, 492, 493, 0, 494, 495, 496, 497,
	619, 498, 0, 499, 500, 506, 507, 501, 502, 508,
	509, 510, 511, 512, 0, 514, 515, 513, 516, 517,
	518, 0, 519, 520, 503, 504, 521, 522, 0, 523,
	524, 525, 526, 527, 528, 620, 0, 529, 0, 530,
	531, 532, 533, 505, 534, 539, 621, 535, 536, 537,
	538, 622, 0, 541, 542, 0, 540, 0, 543, 544,
	545, 546, 547, 548, 549, 334, 550, 0, 551, 623,
	624, 625, 626, 0, 560, 0, 552, 553, 554, 627,
	555, 628, 0, 556, 557, 558, 559, 0, 561, 562,
	0, 0, 563, 564, 565, 567, 568, 566, 569, 0,
	570, 0, 0, 571, 572, 573, 629, 630, 631, 249,
	575, 574, 576, 632, 0, 0, 0, 0, 577, 578,
	633, 579, 580, 581, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 582, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 583, 584, 0, 271, 585, 272,
	586, 0, 587, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 588, 589, 590, 0, 280, 281, 591,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 592, 593, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 594, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 595, 596, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 597, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 598,
	599, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 600, 0, 601, 0, 0, 357, 358, 359, 360,
	361, 602, 603, 604, 437, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 370,
	372, 0, 0, 371, 605, 606, 0, 607, 0, 373,
	374, 0, 608, 0, 375, 376, 377, 0, 378, 0,
	0, 0, 379, 380, 381, 382, 383, 384, 0, 385,
	387, 386, 0, 388, 609, 0, 389, 390, 0, 0,
	391, 0, 0, 0, 392, 393, 0, 0, 394, 395,
	396, 397, 0, 398, 399, 401, 404, 400, 402, 403,
	405, 418, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 417, 420, 0, 419, 0, 421, 422,
	423, 428, 430, 431, 426, 427, 429, 432, 433, 425,
	0, 424, 0, 0, 0, 434, 435, 0, 610, 436,
	611, 438, 439, 0, 0, 440, 0, 0, 0, 442,
	443, 444, 0, 0, 445, 446, 612, 0, 447, 0,
	613, 448, 449, 441, 450, 451, 0, 453, 454, 455,
	456, 457, 0, 458, 459, 614, 460, 461, 462, 615,
	463, 464, 465, 616, 466, 617, 467, 468, 0, 469,
	0, 470, 471, 472, 473, 0, 475, 476, 618, 477,
	479, 478, 480, 0, 481, 0, 0, 0, 0, 0,
	482, 0, 484, 485, 486, 483, 487, 488, 489, 490,
	0, 491, 492, 493, 0, 494, 495, 496, 497, 619,
	0, 0, 499, 500, 506, 507, 501, 502, 508, 509,
	510, 511, 512, 0, 514, 515, 513, 516, 517, 518,
	0, 519, 520, 503, 504, 521, 522, 0, 523, 524,
	525, 526, 527, 528, 620, 0, 529, 0, 530, 531,
	532, 533, 505, 534, 539, 621, 535, 536, 537, 538,
	622, 0, 541, 542, 0, 540, 0, 543, 544, 545,
	546, 547, 548, 549, 334, 550, 0, 551, 623, 624,
	625, 626, 0, 560, 0, 552, 553, 554, 627, 555,
	628, 0, 556, 557, 558, 559, 0, 561, 562, 0,
	0, 563, 564, 565, 567, 568, 566, 569, 0, 570,
	0, 0, 571, 572, 573, 629, 630, 631, 0, 575,
	574, 576, 632, 0, 0, 0, 0, 577, 578, 633,
	579, 580, 581, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1714, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1714, 1685, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 1705, 0, 0,
	0, 1732, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727,
	1728, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 1719, 1714, 0, 1705, 0, 0,
	0, 0, 1686, 0, 0, 0, 1702, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1685, 1708, 1709, 1710,
	1711, 0, 0, 0, 0, 0, 1705, 1691, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 1723, 0, 0, 1733, 0, 1691, 0, 0,
	0, 1713, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	1730, 0, 0, 0, 0, 0, 0, 1700, 1701, 0,
	0, 0, 1723, 0, 0, 1733, 1708, 1709, 1710, 1711,
	0, 1713, 1715, 0, 0, 1721, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 1706,
	1730, 0, 0, 0, 0, 0, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 1733, 1721, 0, 0, 0, 0,
	1713, 1715, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 1731, 0, 0, 0, 0, 0, 1729, 0, 1730,
	0, 0, 0, 0, 0, 0, 1700, 1701, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 1684, 1707, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 0, 0, 0, 1724, 0, 1686, 1712, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 1724, 0, 0, 0, 0, 0, 1702,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 2367,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 4221, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699,
	0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693,
	0, 0, 0, 0, 4217, 1723, 0, 0, 1733, 0,
	0, 0, 0, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 1730, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 0, 1706, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 1712, 0, 0, 0, 0, 1686, 0, 0, 0,
	1708, 1709, 1710, 1711, 1732, 0, 0, 0, 0, 0,
	1691, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1683, 1684,
	1685, 1716, 1717, 1718, 1726, 1727, 1728, 1724, 0, 0,
	1705, 0, 0, 0, 0, 1723, 0, 0, 1733, 1702,
	1719, 1714, 0, 0, 1713, 1715, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 1732, 0, 0, 0,
	0, 1729, 0, 1730, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1685, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 1702, 1706, 0, 0, 0, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 1731, 0, 0, 0, 4117, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 1733, 0,
	0, 0, 1720, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 1708, 1709, 1710, 1711, 0, 0, 0, 0,
	0, 1729, 1691, 1730, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 0, 0,
	1733, 1712, 1706, 0, 0, 0, 1713, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 1729, 0, 1730, 0, 0, 0, 0,
	0, 0, 1700, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 1724, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 1720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 1724, 4116, 0,
	0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727,
	1728, 0, 0, 1712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1714, 0, 0, 0, 0,
	0, 0, 1686, 1707, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1724,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 0, 4007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1722, 1708, 1709, 1710, 1711,
	1697, 1698, 1704, 1725, 1703, 1699, 1691, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 0, 0,
	3956, 0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 1733, 1719, 1714, 0, 0, 0,
	1713, 1715, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1729, 0, 1730,
	0, 0, 0, 0, 0, 0, 1700, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 0, 0, 0, 0,
	0, 1686, 1723, 0, 0, 1733, 0, 1712, 0, 1732,
	0, 1713, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 1729, 0,
	1730, 0, 0, 0, 0, 1685, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 1724, 1702, 1721, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 1708, 1709, 1710, 1711, 1720,
	1705, 0, 0, 0, 0, 1691, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699,
	0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693,
	1723, 0, 0, 1733, 3812, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 1730, 0,
	0, 0, 0, 0, 0, 1700, 1701, 0, 1707, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 1721, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 0, 1724, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 1714, 0, 0,
	0, 0, 0, 0, 1686, 1723, 0, 0, 1733, 0,
	0, 0, 1732, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 1729, 0, 1730, 0, 0, 0, 0, 1685, 0,
	1700, 1701, 0, 0, 0, 0, 0, 1720, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 3755, 1712, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 1709,
	1710, 1711, 1720, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 1683, 1684, 0, 1716, 1717,
	1718, 1726, 1727, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 0, 0, 1733, 1719, 1714, 0,
	0, 0, 1713, 1715, 0, 1686, 0, 0, 0, 0,
	0, 1712, 0, 1732, 0, 0, 0, 0, 0, 1729,
	0, 1730, 0, 0, 0, 0, 0, 0, 1700, 1701,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 0, 0, 0, 1721, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1724, 1702, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 1722, 0,
	0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 0,
	0, 0, 0, 3754, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 1710, 1711, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 1723, 0, 0, 1733, 3753, 1712,
	0, 0, 0, 1713, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	1729, 0, 1730, 0, 0, 0, 0, 0, 0, 1700,
	1701, 0, 0, 0, 0, 1683, 1684, 0, 1716, 1717,
	1718, 1726, 1727, 1728, 0, 1724, 0, 1721, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 1714, 0,
	0, 1706, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1685,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 0, 0, 0, 0, 3448, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	1709, 1710, 1711, 0, 0, 0, 0, 0, 0, 1691,
	1707, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1719, 1714, 0, 1724, 0, 0, 0,
	0, 1686, 0, 0, 1723, 0, 0, 1733, 0, 1732,
	0, 0, 0, 1713, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 1730, 0, 0, 1685, 0, 0, 0, 1700,
	1701, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 1721, 1683, 1684,
	0, 1716, 1717, 1718, 1726, 1727, 1728, 0, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 1714, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 1722, 0, 0, 0, 1732, 1697, 1698, 1704,
	1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 1731, 0, 0, 0, 2981, 0, 0,
	0, 0, 1685, 0, 0, 1708, 1709, 1710, 1711, 0,
	0, 1720, 1705, 0, 0, 1691, 0, 0, 0, 0,
	0, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1723, 0, 0, 1733, 0, 0, 0, 0, 0, 1713,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1712, 0, 0, 0, 0, 0, 1729, 0, 1730, 0,
	0, 0, 0, 0, 0, 1700, 1701, 0, 0, 0,
	1707, 0, 1708, 1709, 1710, 1711, 0, 0, 0, 0,
	0, 0, 1691, 1721, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 0, 0, 0, 1724, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 1714, 0, 0,
	0, 0, 0, 0, 1686, 0, 0, 1723, 0, 0,
	1733, 0, 1732, 0, 0, 0, 1713, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 1729, 0, 1730, 0, 0, 1685, 0,
	0, 0, 1700, 1701, 0, 0, 0, 1720, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	1721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 1697, 1698, 1704,
	1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 0, 0, 0, 1712, 2980, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 1708, 1709,
	1710, 1711, 0, 0, 1720, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718,
	1726, 1727, 1728, 1723, 0, 0, 1733, 0, 0, 0,
	0, 0, 1713, 1715, 0, 0, 1719, 1714, 0, 0,
	0, 0, 0, 1712, 1686, 0, 0, 0, 0, 1729,
	0, 1730, 1732, 0, 0, 0, 0, 0, 1700, 1701,
	0, 0, 0, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1721, 0, 1685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 1724,
	1706, 0, 0, 0, 0, 0, 0, 1702, 1722, 0,
	0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699, 0,
	1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693, 0,
	0, 0, 0, 2979, 0, 0, 0, 0, 0, 0,
	0, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 1709,
	1710, 1711, 0, 0, 0, 0, 0, 0, 1691, 4346,
	0, 0, 0, 0, 0, 1722, 0, 0, 0, 0,
	1697, 1698, 1704, 1725, 1703, 1699, 0, 1696, 1694, 1695,
	1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 0, 1712,
	2978, 0, 0, 1723, 0, 0, 1733, 0, 0, 0,
	0, 0, 1713, 1715, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 1730, 0, 0, 0, 0, 0, 0, 1700, 1701,
	0, 0, 0, 0, 0, 1724, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 1721, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	1706, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 1731, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	1720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 4345, 0, 2945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 1707,
	1691, 0, 3065, 0, 0, 3064, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1724, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 1723, 0, 0, 1733, 0,
	0, 0, 0, 0, 1713, 1715, 0, 0, 1719, 1714,
	0, 0, 0, 0, 2916, 0, 1686, 0, 0, 0,
	0, 1729, 0, 1730, 1732, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 1706, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725,
	1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690,
	1692, 1693, 0, 0, 1731, 2917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 1709, 1710, 1711, 0, 2511, 0, 0, 0, 0,
	1691, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1714, 0, 0, 0, 2510,
	0, 1712, 1686, 0, 0, 1723, 0, 0, 1733, 0,
	1732, 0, 0, 0, 1713, 1715, 0, 0, 0, 0,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 1730, 0, 0, 1685, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 1705, 1724, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 1721, 1683,
	1684, 0, 1716, 1717, 1718, 1726, 1727, 1728, 0, 0,
	0, 0, 1706, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 1714, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 1732, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 1708, 1709, 1710, 1711,
	0, 0, 1720, 1705, 0, 0, 1691, 0, 0, 0,
	0, 0, 1702, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 0, 0, 0,
	0, 1723, 0, 0, 1733, 0, 0, 0, 0, 0,
	1713, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 1729, 0, 1730,
	0, 0, 0, 0, 0, 0, 1700, 1701, 0, 0,
	0, 1707, 0, 1708, 1709, 1710, 1711, 0, 0, 0,
	0, 0, 0, 1691, 1721, 1683, 1684, 0, 1716, 1717,
	1718, 1726, 1727, 1728, 0, 0, 0, 1724, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 1714, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 1723, 0,
	0, 1733, 0, 1732, 0, 0, 0, 1713, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 1729, 0, 1730, 0, 0, 1685,
	0, 0, 0, 1700, 1701, 0, 0, 0, 1720, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 1721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 0, 0, 0, 1712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1707, 0, 1708,
	1709, 1710, 1711, 0, 0, 1720, 993, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1724, 0, 0, 0, 0, 0, 1683,
	1684, 0, 1716, 1717, 1718, 1726, 1727, 1728, 0, 0,
	0, 0, 0, 0, 1723, 0, 0, 1733, 0, 0,
	0, 1719, 1714, 1713, 1715, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 1712, 0, 0, 1732, 0, 0,
	1729, 0, 1730, 0, 0, 0, 0, 0, 0, 1700,
	1701, 0, 0, 0, 1707, 0, 0, 0, 0, 0,
	0, 0, 0, 1685, 0, 0, 0, 1721, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	1724, 1706, 1702, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699,
	0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 1709, 1710, 1711, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 0, 0, 3071, 0,
	0, 0, 0, 0, 0, 0, 1722, 0, 0, 0,
	0, 1697, 1698, 1704, 1725, 1703, 1699, 0, 1696, 1694,
	1695, 1687, 1688, 1689, 1690, 1692, 1693, 0, 1723, 0,
	1712, 1733, 0, 0, 0, 0, 0, 1713, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 1729, 0, 1730, 0, 0, 0,
	0, 0, 0, 1700, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1724, 0, 0, 0,
	0, 1721, 1683, 1684, 0, 1716, 1717, 1718, 1726, 1727,
	1728, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 1714, 0, 0, 0, 3066,
	0, 0, 1686, 0, 0, 3429, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 1722, 0, 0, 0, 0, 1697, 1698, 1704,
	1725, 1703, 1699, 0, 1696, 1694, 1695, 1687, 1688, 1689,
	1690, 1692, 1693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 1712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1714, 0, 0, 0,
	0, 0, 0, 1686, 1707, 0, 1708, 1709, 1710, 1711,
	0, 1732, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1724, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 1723, 0, 0, 1733, 0, 1702, 0, 0, 0,
	1713, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 1730,
	0, 0, 0, 0, 0, 0, 1700, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1721, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 1722, 1708, 1709, 1710,
	1711, 1697, 1698, 1704, 1725, 1703, 1699, 1691, 1696, 1694,
	1695, 1687, 1688, 1689, 1690, 1692, 1693, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 1733, 0, 0, 1720, 0,
	0, 1713, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	1730, 0, 0, 0, 0, 0, 0, 1700, 1701, 0,
	0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1719, 1714, 1712, 0, 1706,
	2982, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 1707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 1731, 0, 1724, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3033,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 0, 0, 0, 0, 0, 1691, 1707, 1722,
	0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703, 1699,
	0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692, 1693,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 0, 1733, 0, 0, 0, 0,
	0, 1713, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	1730, 0, 0, 0, 0, 0, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1721, 1683, 1684, 0, 1716,
	1717, 1718, 1726, 1727, 1728, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1714,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	1722, 0, 0, 0, 1732, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1714, 0, 1712, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 1707, 0,
	1708, 1709, 1710, 1711, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 1733, 0,
	0, 0, 0, 0, 1713, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1729, 0, 1730, 0, 0, 0, 0, 0, 0,
	1700, 1701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1721, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 1706, 0, 0, 0, 0, 1691, 0, 0,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1723, 0, 1731, 1733, 0, 0, 0, 0,
	0, 1713, 1715, 1683, 1684, 0, 1716, 1717, 1718, 1726,
	1727, 1728, 1720, 0, 0, 0, 0, 0, 1729, 0,
	1730, 0, 0, 0, 0, 0, 1714, 1700, 1701, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 1685, 0, 0,
	0, 1712, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 1707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1709, 1710,
	1711, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 1723, 0, 0, 1733, 0, 0, 886, 0,
	929, 1713, 1715, 1722, 0, 0, 0, 0, 1697, 1698,
	1704, 1725, 1703, 1699, 1724, 1696, 1694, 1695, 1687, 1688,
	1689, 1690, 1692, 1693, 894, 0, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	908, 892, 891, 0, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 893,
	0, 0, 0, 0, 896, 0, 0, 0, 0, 937,
	0, 0, 0, 0, 0, 0, 0, 0, 905, 906,
	0, 0, 0, 0, 0, 0, 0, 922, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 930, 898, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	899, 0, 0, 0, 0, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 0, 0, 0, 0, 0, 1707, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 902, 903, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 910, 909, 0, 0,
	0, 0, 0, 0, 904, 0, 0, 0, 919, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 1697, 1698, 1704, 1725, 1703,
	1699, 0, 1696, 1694, 1695, 1687, 1688, 1689, 1690, 1692,
	1693, 0, 0, 0, 0, 0, 0, 0, 897, 0,
	0, 936, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 895, 0, 0, 0, 926, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 924, 0, 0,
	0, 0, 0, 0, 935, 920, 0, 913, 911, 0,
	916, 0, 0, 0, 0, 0, 917, 0, 0, 888,
	0, 932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 933,
	0, 0, 0, 0, 0, 0, 0, 921, 0, 0,
	0, 0, 0, 0, 0, 0, 900, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	923, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 925,
}
var sqlPact = [...]int{

	227, -1000, -1000, -1000, -1000, 213, -1000, -1000, 211, 210,
	209, 207, 206, 204, 200, 198, 188, 186, -1000, -1000,
	-1000, -1000, -1000, -1000, 185, -1000, -1000, 184, -1000, 181,
	180, 179, -1000, -1000, 178, -1000, 176, -1000, -1000, -1000,
	-1000, 171, 170, 162, 83285, 82759, 83804, 2084, 102117, 90060,
	1830, 74371, 101591, 73845, 101065, 1906, 100539, 2525, 161, -1000,
	100013, 156, 155, 154, -1000, 99487, -1000, 1875, -1000, 153,
	2103, 60140, 152, 151, 150, 2588, 148, -1000, 140, 139,
	138, -1000, 14256, 1546, -1000, 136, 135, -1000, 7599, 518,
	87963, 132, 131, 2238, 130, 128, 59613, 127, 123, 2208,
	2713, -1000, -1000, 1969, -1000, -1000, 118, 116, 115, 112,
	109, 108, 102, 100, 99, 94, 89, -1000, 88, 87,
	82, 80, 79, 77, 75, 73, -1000, 69, 68, 67,
	65, 61, 60, 59, 53, 50, 49, 48, 47, 45,
	-1000, 114176, 44, 1795, 1609, 1608, 1603, 1600, 1598, 993,
	43, 42, 41, 38, 34, 31, 29, 28, 26, -1000,
	25, 24, 20, 19, 17, 15, 13, 12, 146, 11,
	10, 4, 1, 0, -1, -3, 2671, -1000, 1618, 1021,
	27444, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 107826,
	102636, -4, -88, -6, -1000, 3089, 1015, 49602, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 287, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 532, 1905, 759, -1000,
	-1000, -1000, 98968, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2082, -30, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	756, -1000, 2081, 255, 1972, -1000, -1000, -1000, 3085, -1000,
	-1000, 102636, -1000, 1026, -1000, -1000, 3505, 3503, 1892, 750,
	89534, -1000, 1804, -1000, 934, 29097, -1000, 1178, -1000, 29097,
	286, -1000, -1000, -1000, -1000, -1000, -1000, 3499, 3496, 3495,
	3494, 3492, -1000, -1000, 73319, 20780, 72793, 72267, 98449, 20244,
	82233, 81707, 97923, 68076, 1025, -1000, -1000, -1000, 1388, -1000,
	-1000, -1000, -1000, -1000, -1000, -28, 65396, 3255, 102636, -1000,
	278, -1000, -1000, -1000, -1000, -1000, -1000, 41986, 758, 41423,
	493, 40860, 454, -1000, -1000, -1000, -1000, 67540, -1000, 97397,
	2240, 3490, 3489, 1104, 3488, 2995, 1660, 3485, 1720, 1182,
	3483, 3482, 3480, 3479, 3477, 3475, 3474, 1329, 96871, 2735,
	96345, 1568, 67004, 1022, 81181, 83804, 2457, 95819, 1322, 1318,
	-1000, -1000, -1000, -1000, 2846, 2646, 2637, 1313, -1000, -1000,
	2235, 3473, 3471, 3468, 3466, 3463, 107307, 1652, 3462, 2306,
	3458, 3456, 3455, 3448, 3447, 3445, 3440, -1000, 80655, 1018,
	80129, 79603, 3119, 95293, 79077, 94767, 66468, 40297, 956, -1000,
	-1000, -1000, 52245, 5987, 5951, 94241, 54381, 83804, 83804, -1000,
	-1000, -1000, -1000, -1000, 39734, 732, 39171, 785, -1000, -1000,
	52779, 2701, -1000, -1000, -1000, -1000, 38608, 517, 38045, 707,
	102636, -1000, 2732, 1834, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2384, 1560,
	3260, 2526, 65932, 1842, 1399, 3060, 2845, 2844, 1492, 3439,
	3437, 2342, 2836, 2835, 2825, 2814, 2812, 1463, 2360, 459,
	26881, 2724, 1620, 37482, 1505, 1503, 2807, 2799, 3272, 1759,
	1805, 1999, 71741, 3426, 3424, 3025, 2796, 2780, 2698, -1000,
	-1000, -1000, -1000, 1448, -1000, -1000, -1000, -1000, -1000, 74890,
	-1000, -1000, 1702, -1000, -1000, 1702, -1000, -1000, -1000, -1000,
	-1000, 1244, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1618, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1945, -1000, 1891, -1000, -1000, 2286,
	2946, 2946, 2946, 3082, 489, 483, -1000, 146, -1000, -1000,
	113645, -1000, -1000, 42537, 42537, 42537, 42537, 42537, 42537, 42537,
	1911, -1000, 748, -1000, -1000, 794, -1000, 747, 615, -1000,
	-1000, -1000, -1000, -1000, -1000, 746, -1000, -1000, -1000, -1000,
	-1000, -1000, 3255, -1000, 23515, -1000, -1000, -1000, 422, 745,
	42537, -1000, -1000, 3284, 3283, 1017, -1000, 270, 951, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2731, 744, 742, -1000, 741, 740, 739, 735, 734,
	-1000, -1000, -1000, 731, 730, 729, 728, 726, 725, 723,
	719, -1000, 1770, -1000, -1000, -1000, -1000, -1000, -1000, 669,
	659, 659, 659, -1000, 1010, -1000, -1000, -1000, 305, 658,
	263, 657, 654, 652, -1000, 718, 717, 715, 712, 711,
	705, 696, 693, 691, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1008, -1000, -1000, -1000, -1000, -29, 102636, -1000, 532,
	-29, -1000, -1000, 688, -1000, 31313, 31313, 31313, -1000, -1000,
	2079, 42537, -1000, 2501, -1000, -22, -22, 902, 51176, -1000,
	48533, 902, 284, 790, 55955, -1000, 2697, -1000, -1000, 687,
	266, -1000, -1000, -1000, -1000, 21314, 2696, 102636, 102636, 83804,
	83804, 83804, 2902, 42537, -1000, -1000, 63285, 102636, 84323, 3202,
	60659, 62761, 102636, 2730, 62242, -1000, 3028, -1000, -1000, 102636,
	-1000, 42537, -1000, 3201, 1616, 69134, 3124, -49, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2282, 2265, 1190, 2119, -1000,
	2943, 1646, -1000, 29097, 2983, -1000, -1000, -1000, 252, 21314,
	-1000, -1000, -1000, -1000, -1000, -1000, 4474, 2915, 1384, -1000,
	2112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1682, 2910, -1000, 2115, 2884, 1676, -1000, -1000, 2054, -1000,
	-1000, 3019, -1000, -1000, 1882, 2883, -20, -1000, -1000, 2045,
	-1000, -1000, 1794, -1000, -1000, 980, 2880, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 78551, 53847, 52779, 65396,
	-33, -1000, -1000, -1000, -1000, -58, -1000, 19708, 113645, -1000,
	-1000, -1000, -1000, 1639, 113645, 933, -1000, -1000, 2879, -1000,
	113645, 898, -1000, -1000, 2874, -1000, 2729, -1000, -1000, 2197,
	-1000, -1000, 3419, -1000, -1000, 3416, -1000, 3414, 3412, 3409,
	-1000, 1576, 1761, 3408, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 78032, 2073, -1000, -1000, 76980, -1000, 2195, 3123,
	-1000, -1000, -1000, 77506, 1014, -1000, 980, 2191, -1000, 87437,
	1013, -1000, 3404, 3117, 2489, 980, 2186, -1000, -1000, -1000,
	-1000, -1000, 1016, -1000, 57523, -1000, 57523, -1000, 1423, -1000,
	106788, -22, 83804, 3255, -1000, 3402, -1000, -1000, -1000, -1000,
	-1000, 2871, 3398, 3395, 3393, -1000, 102636, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 192, 2868, -1000, -1000, 86918, 192,
	2865, -1000, 192, 2862, -1000, 86399, -1000, -1000, 2061, 2861,
	-1000, 197, 2860, -1000, -1000, 194, 2859, -1000, -1000, -145,
	2858, -1000, -1000, 113645, -1000, -1000, -1000, -56, -1000, -1000,
	-1000, 1015, -1000, 51703, -1000, 51703, 89008, 68610, 959, 699,
	59086, 113645, -1000, -1000, -1000, -1000, 113645, -1000, -1000, -1000,
	-187, -1000, -1000, 68610, 52779, 113645, -1000, -1000, -1000, -1000,
	113645, -1000, -1000, -1000, 68610, 76980, -1000, 93715, 76461, -1000,
	-1000, 1328, 2348, -1000, -1000, -1000, 68610, 1272, 68610, 68610,
	68610, -1000, 93189, -1000, -1000, 1877, 1394, 3022, 1874, 83804,
	-1000, 1716, -1000, -1000, -1000, 3050, -1000, -1000, 2726, -1000,
	61706, 85880, -1000, 85361, -1000, 84842, -1000, 83804, -1000, 83804,
	-1000, 3392, 3391, 3390, 3389, -1000, 3386, 3041, -1000, 113645,
	3034, -1000, 3385, 3114, 2724, 113645, -1000, 2886, 1617, 1614,
	102636, -1000, -1000, 102636, -1000, 102636, -1000, -1000, -1000, 1387,
	-1000, -1000, 2280, -1000, -1000, -1000, -1000, 83804, -1000, -1000,
	-1000, -1000, -1000, -1000, 2723, -1000, 1606, -1000, 1714, -1000,
	1291, -1000, -1000, 199, -1000, -1000, -49, -1000, 106269, -1000,
	2286, -1000, 102636, -1000, 2275, 2714, 2720, 1548, 2096, 2382,
	-1000, 36919, 2301, 45843, 2109, 146, -1000, -1000, 146, 146,
	28546, -1000, -1000, 60659, 60659, 21314, 1274, 42537, 42537, 42537,
	42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537,
	42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537,
	42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537, 42537,
	42537, 42537, 1932, 42537, 1195, 42537, 42537, 42537, 42537, 2101,
	-1000, -1000, 1779, 571, 1899, -1000, 3242, 3242, 3242, 945,
	945, 113752, 113752, 636, 3384, 794, -1000, 42537, -1000, 565,
	42537, 21850, -1000, 483, 11572, 2232, -1000, 481, 22413, -1000,
	-1000, -1000, 23515, 615, 36356, 42537, 994, 113645, -1000, -1000,
	1393, 3258, 19173, 2743, 2554, 683, 824, 800, 26318, 25755,
	25192, 24629, 797, 42537, 42537, 42537, 42537, 42537, 42537, 42537,
	42537, -1000, -1000, 3264, -1000, 3258, -1000, -1000, -1000, -1000,
	3258, 1270, 1266, 3258, -1000, 3258, 3258, 8151, 8151, 35805,
	35242, 34679, 46394, 34116, 42537, 24066, 33553, 32990, -1000, 102636,
	-29, 3199, 42537, 122, -1000, 112341, -1000, 122, 122, 681,
	-57, 113645, 2344, 2344, 50127, 2217, 1917, 1917, 1917, -1000,
	902, 14864, 902, 92146, 1933, 902, 902, 231, 258, 480,
	48008, 2501, 92146, 779, 678, -7, -8, -9, -1000, -1000,
	-10, -17, -1000, -1000, 83804, 677, 21850, 21314, 230, 1351,
	-59, 2395, 2376, 2372, -1000, 2368, 1651, -64, 1189, 83804,
	102636, -175, -1000, 5335, -65, -1000, 1041, 222, 3258, -1000,
	-1000, -1000, -1000, -1000, 3383, 3381, -1000, 1007, 671, 670,
	587, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 669,
	659, 659, 659, -1000, 305, 658, 263, 657, 654, 652,
	-1000, -1000, -1000, -1000, -1000, 2694, 83804, 102636, -58, 84323,
	-174, -1000, -1000, -1000, -1000, -1000, 83804, 894, -67, 1113,
	-49, -1000, -1000, -1000, 1702, -1000, 1647, -1000, -1000, -1000,
	-1000, -1000, -1000, 1334, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1017, -1000, -1000, -1000, -1000, -1000, -1000, 3252,
	3250, -31, -1000, -1000, 21314, -1000, -50, 1543, 1605, -1000,
	71215, 2155, 3032, 3376, 2471, 3004, 1421, -1000, 1374, 1180,
	3081, 74890, 3147, 3200, 257, -1000, 2692, -1000, -1000, 924,
	1601, 1581, 1179, 74890, 2115, -1000, 60659, -1000, 2407, 3080,
	1372, 1366, 1372, 1372, 1349, -1000, 74890, 1579, 1177, 1176,
	-1000, 1175, 1174, -1000, -51, 3132, 3155, 117, -1000, 2691,
	1173, -1000, -1000, 83804, 21314, 1522, 1518, 1561, 1171, -32,
	-1000, 3135, 3129, 1170, 1169, -1000, 5014, -1000, 68610, 1673,
	2857, 2523, 883, 2521, -1000, -1000, 883, -33, 65396, 102636,
	219, -1000, 565, 42537, 42537, 565, 42537, 565, 3110, 2854,
	-1000, -1000, -1000, -1000, -1000, 3373, 1749, 2303, -1000, -1000,
	650, 2185, 2689, 102636, 2400, -38, 83804, -1000, 2852, 63809,
	2115, 2176, -1000, -1000, 75935, -1000, 2848, 532, 2171, -1000,
	647, 3372, -1000, 105750, -1000, 3028, 1166, 2842, 1066, 555,
	3196, -1000, 555, 58048, -1000, 102636, -1000, -22, -1000, 102636,
	-1000, -1000, -1000, 3369, -1000, 83804, -1000, -1000, 83804, 192,
	2833, -1000, 83804, -1000, 83804, 189, 2832, -1000, -1000, 102636,
	-1000, 83804, 83804, -1000, 102636, 102636, 68610, 68610, 4629, 70177,
	-70, -73, 479, -1000, 92670, 102636, 1065, 70696, 102636, 2973,
	978, 52779, -1000, -76, -187, 2519, 959, 959, 883, -1000,
	883, -1000, 83804, 2719, -1000, -1000, 68610, 959, 959, 959,
	-1000, -1000, -1000, -1000, 3368, 3367, 3366, -1000, -1000, -1000,
	979, 83804, 102636, 83804, -1000, -1000, 102636, -1000, 102636, 102636,
	83804, -1000, 979, 102636, 979, 102636, 979, 102636, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 565, 42537, -1000, -1000, 3364,
	1455, -1000, 2718, -1000, 2716, -1000, 22, -1000, -1000, -1000,
	-1000, -1000, 1757, 83804, 83804, 83804, 83804, 102636, 83804, -1000,
	74890, -1000, 2275, 2714, -1000, -1000, -1000, -1000, -1000, -1000,
	1337, 1981, -1000, 2339, -1000, 1416, -1000, -1000, -1000, 113645,
	46928, -1000, -1000, 113645, 1668, -1000, 45292, 44741, -1000, -1000,
	1526, 83804, 2418, -1000, 2418, -264, -1000, 112175, 2337, 83804,
	-1000, -1000, -1000, -1000, -1000, 916, 1051, 1051, 1225, 1225,
	1225, 1225, 3131, 1354, 609, 385, 10084, 10084, 5670, 5670,
	5670, 5670, 5670, 10084, 256, 945, 945, 256, 256, 256,
	256, 256, 945, 945, 945, 10084, 10084, 10084, 113752, 10970,
	8217, 42537, 42537, 1165, 1768, 571, 7175, 42537, 9195, 9195,
	9195, 9195, -1000, 2148, -1000, -1000, -1000, -1000, 2686, 649,
	46394, 46394, -1000, -1000, -1000, -1000, 22964, 42537, -1000, -1000,
	-1000, -1000, 32427, -1000, -1000, 111553, -317, 476, -263, -53,
	-1000, 42537, 42537, 42537, 471, -1000, 217, 42537, 102636, -1000,
	108872, 778, -75, -1000, -78, 1400, -1000, 42537, -1000, -1000,
	1161, -1000, 1158, 1157, 1156, -1000, 646, 469, -1000, 215,
	-1000, 1913, 643, 642, 42537, -1000, -1000, -1000, -1000, -1000,
	111387, -1000, -1000, 111300, -1000, -1000, 111134, -1000, -1000, 110894,
	-1000, -1000, -1000, 113392, 14293, 13940, 13687, 7370, 13105, 13020,
	-83, 465, -85, 456, 915, 908, 455, 449, 448, -98,
	-1000, 3363, 3362, 3361, -1000, 3360, 3359, 3358, -1000, 3354,
	3353, 3352, -1000, 3351, 3350, 3349, -1000, 3347, 3346, 3344,
	-1000, 3337, 3336, 3334, -1000, 3333, 3332, 3330, -1000, 3326,
	3325, 3324, -99, 439, -1000, 2679, -263, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 438, -1000, 435, -1000, 113152,
	-263, 433, 516, -1000, 46394, 46394, 46394, -1000, 418, -1000,
	111985, -1000, 113031, 31876, 31876, 31876, 413, 112778, 42537, -263,
	-100, -1000, -101, -1000, -1000, 503, -108, 996, 31313, 49075,
	21314, -1000, 996, 996, 42537, -1000, 42537, 2358, -1000, -1000,
	-1000, 2356, 2023, 2344, 50127, -1000, -1000, -1000, -1000, 92146,
	-1000, 3255, 2627, -1000, 92146, -1000, -1000, 102636, 532, -1000,
	92146, 92146, 21314, 902, -1000, 902, 92146, 679, -1000, -1000,
	-1000, -1000, -1000, 412, 54905, -53, 193, 21314, 980, -1000,
	2450, 2450, 2450, 2450, -1000, -1000, 102636, 1152, -43, -194,
	3217, -1000, 1800, -1000, 60659, -1000, 792, 1110, 21314, -1000,
	-1000, -1000, 639, -1000, 3258, 3258, -1000, 3258, 102636, 2678,
	104, 91, 63809, 63809, 988, 29097, -1000, 1702, -1000, -1000,
	1512, -1000, 1753, -1000, 1262, -1000, -1000, -1000, -1000, 29097,
	-1000, 3348, 102636, 102636, 83804, -1000, 102636, -1000, 2167, 105231,
	2165, 60659, 102636, -1000, -1000, 631, 628, 2336, 2335, 1053,
	102636, 102636, 2331, 104712, 104193, -1000, 3322, 102636, 1854, 42537,
	63809, 2085, 2202, 565, 565, -1000, -1000, 565, 626, 1260,
	83804, 83804, 102636, 83804, 1649, -1000, -1000, -1000, -1000, -1000,
	75409, -1000, -1000, 3263, 3262, -1000, 1372, -1000, -1000, -1000,
	1372, 2115, 1611, 102636, 83804, 63809, 1551, 102636, 1841, 565,
	565, -1000, -1000, 565, 623, 21314, 1776, -1000, 2747, 102636,
	3282, 102636, 102636, 102636, 63809, 3049, 103674, 102636, 102636, 63809,
	5014, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 64877, 1071, 980, 1549, 1151, 74890, 52779, 977,
	52779, 2502, -1000, -1000, 18638, -1000, 113645, 113645, -1000, 113645,
	-1000, 61182, 102636, -1000, 1012, 102636, 70696, 955, 2831, 56998,
	-58, 959, 68610, 83804, -38, 102636, -1000, -1000, 2115, 2828,
	532, 2163, -1000, 68610, 3195, 2822, 621, 3321, 3320, -1000,
	2067, 2159, -1000, -1000, 103155, 2823, 822, 102636, 996, 50127,
	1783, -1000, 55431, 1034, 102636, 1708, 84, -1000, -1000, -1000,
	9, 102636, -1000, 616, 3317, -1000, -1000, 192, -1000, 83804,
	192, 192, -1000, 83804, 83804, 2061, -1000, 197, -1000, 194,
	-1000, -145, -1000, -1000, 4629, 4629, 959, -272, 620, -1000,
	893, 881, 53313, 68610, -109, -1000, -1000, -1000, -1000, -1000,
	83804, 102636, 757, 2485, 102636, -114, -1000, 190, 617, -1000,
	2116, -1000, -1000, 978, 52779, 2677, -1000, -1000, 986, -1000,
	1290, 959, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -23, -58, -58, -58, -43, -1000, 979, -1000,
	979, -1000, 979, -1000, 113645, -1000, -1000, 1444, 1427, 102636,
	-1000, 21314, 102636, 83804, 21314, 83804, 2712, 2674, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1079, -1000, 1668, 1978,
	-1000, 615, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2258, -1000, -45, 28546, 905, -1000, -1000, 83804, -24,
	42537, 42537, 5634, 4667, 42537, 46394, 46394, -1000, 42537, 4498,
	-1000, -1000, -1000, -1000, -1000, 2676, 613, 42537, 60659, 7247,
	6450, -1000, 410, 12363, 256, -1000, 42537, -1000, 408, 30762,
	-1000, 112428, -84, -115, -1000, 15412, -263, -117, -1000, -1000,
	791, -1000, 2851, -1000, 42537, 112594, 2212, 1796, 1659, 1523,
	3258, 3280, 18103, -1000, 58567, 1001, 1939, 110713, -1000, -1000,
	-1000, -1000, 60659, 60659, 42537, 42537, -1000, 42537, 42537, 42537,
	-1000, -1000, -1000, 3258, 941, -1000, -1000, -1000, 941, -1000,
	-1000, 1372, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1372, -1000, 42537,
	-1000, -1000, 2670, 42537, -1000, 60659, 60659, 46394, 46394, 46394,
	46394, 46394, 46394, 46394, 46394, 46394, 46394, 46394, 46394, 46394,
	46394, 46394, 46394, 46394, 46394, 46394, 2243, 46394, 3240, 3240,
	3240, -1000, 2634, 2670, 42537, 42537, 60659, 404, 403, 402,
	-1000, 42537, -263, -1000, -1000, 4629, 612, -1000, 2250, -1000,
	2549, -1000, 42537, -1000, -124, -1000, 2501, -1000, -1000, 2549,
	2549, -123, 113645, 50127, 50127, -1000, 611, 42537, 2350, -1000,
	-1000, 777, -318, -1000, 871, -1000, -1000, -1000, -1000, -1000,
	532, -1000, -1000, -1000, 147, 92146, 92146, 775, -1000, -125,
	-1000, -1000, -130, -1000, 3193, 400, 21314, -1000, 996, 3016,
	-1000, -1000, -1000, -1000, -1000, -1000, -58, 102636, 102636, 1966,
	3278, -1000, 3259, 788, 774, 105, 3258, 399, 390, 389,
	-58, 102636, 102636, 102636, -1000, -1000, -1000, 2408, -1000, -49,
	-1000, -1000, -1000, 42537, -1000, -1000, 3030, 1150, 1147, -1000,
	-1000, 2821, -1000, 2158, -1000, 1039, -1000, 1798, -1000, 42537,
	50652, 610, 608, 3316, 1743, 3315, 1063, 2820, 2061, 2819,
	2061, -1000, -1000, -1000, 940, -1000, 113645, -1000, 607, 606,
	-1000, -50, 1540, 1536, 985, -1000, -1000, 42537, 42537, 91627,
	-1000, 434, 3019, -25, -1000, -1000, 1534, 1143, -1000, -1000,
	-1000, -1000, 2115, 1529, 1139, -1000, -1000, -1000, 984, -1000,
	-1000, 983, -1000, -1000, 42537, -1000, -51, 1138, 3137, 2154,
	83804, 1136, -1000, 1135, -1000, -1000, -1000, 3127, 2061, 2813,
	1154, -1000, -1000, -1000, -1000, -1000, 64343, -1000, 102636, 83804,
	1464, 883, -1000, 2180, 883, 977, 2664, -1000, 2388, -1000,
	83804, 3314, 388, -131, -54, 60659, 3192, -1000, 2089, 618,
	83804, 910, -1000, 3255, -1000, -1000, -1000, -1000, 3122, 83804,
	3191, 2808, 980, 565, 83804, 3277, -1000, -1000, 83804, 2805,
	2055, 2151, 2292, 822, 69658, -1000, 980, 1938, -140, -1000,
	1708, 30199, 3015, -133, -1000, -1000, -1000, 996, 58048, 50127,
	42537, 3313, -138, -1000, -1000, -1000, -1000, 192, -1000, -1000,
	-1000, 189, -1000, -1000, -1000, -1000, -1000, -1000, 90584, 90584,
	68610, 68610, 68610, 959, 102636, 102636, 70696, -1000, 596, 102636,
	102636, 595, -1000, 102636, 102636, 3312, 68610, -55, 592, -1000,
	868, 858, 847, -1000, -1000, -1000, -1000, -1000, -1000, -187,
	565, -1000, 1963, 83804, -1000, 17568, -1000, -1000, -1000, -1000,
	-1000, 979, -1000, -1000, 1845, 2105, 1845, 1683, 1674, -1000,
	1976, -1000, -1000, -1000, -1000, 2385, 2956, 21314, 3120, 9195,
	42537, 42537, 306, 6301, 6144, 9195, 42537, 42537, 60659, 113962,
	-139, 42537, 42537, -1000, 42537, 769, 113645, 3275, 42537, 387,
	381, -1000, -1000, -1000, 3257, -1000, -1000, -1000, 113645, 42537,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 368, -1000, 85,
	-1000, -1000, -1000, 108345, -1000, 42537, 366, 3078, -1000, 365,
	355, 8777, 5073, 110545, 110460, 110292, 354, -1000, -1000, 353,
	343, 113645, 2634, 113645, -1000, -1000, 922, 922, 1359, 1359,
	1359, 1359, 3240, 854, 1410, 879, 912, 912, 912, 346,
	901, 901, 912, 912, 912, 2663, 2299, 591, 7115, -1000,
	-1000, 113645, 113645, 332, -1000, -1000, -1000, -263, 326, 4629,
	-1000, 2545, 3076, 113645, -1000, 50127, 2545, 2545, -1000, -1000,
	2023, 102636, 113645, 50127, -1000, 2627, -1000, 15958, -1000, 21314,
	-1000, -1000, -1000, -1000, 3255, -1000, 54905, -1000, 589, -1000,
	23, -1000, 3016, -1000, 844, -1000, -58, -58, -1000, -1000,
	766, 3311, 786, 21314, 325, -1000, -1000, -1000, -58, -58,
	-58, -1000, 2971, 113645, 102636, 102636, 102636, 2800, -1000, 4505,
	-1000, 1053, 110111, -149, -1000, 102636, 42537, 102636, 50652, 102636,
	-1000, -1000, 1731, 2381, 1097, -1000, 3052, 102636, -1000, 102636,
	-1000, -1000, 102636, 102636, 83804, 102636, 2764, -151, 113645, -66,
	-1000, 841, -1000, 1360, -1000, 17033, 102636, 83804, 102636, 83804,
	1890, 2760, -152, 21314, -1000, 3274, 3273, 2782, 3053, 3270,
	102636, -1000, 102636, 83804, 2968, -1000, -1000, -1000, -1000, 1509,
	1128, 977, -79, 588, -1000, 840, -1000, -1000, 837, 977,
	-1000, 68610, 52779, 532, -1000, 2468, -1000, 88482, 2011, 565,
	-1000, 3309, 91108, 583, -1000, 1942, -1000, 762, 63809, 2115,
	565, 83804, -1000, -1000, 532, 315, -97, -1000, 1043, 21314,
	83804, 2781, 2297, 822, 69658, -1000, 1166, 2382, -1000, -120,
	-1000, 645, 565, 1938, -1000, -140, 113645, -1000, 834, -1000,
	-1000, -1000, -154, -1000, -1000, 312, -1000, 2966, 2965, -1000,
	2585, 50652, 582, 581, 102636, 2963, -1000, -1000, -159, 2770,
	2770, 68610, 52779, 68610, 978, -1000, 2181, -1000, -1000, -1000,
	-1000, -1000, 21314, 1550, -1000, 580, 578, -1000, -1000, -1000,
	-1000, 2956, 9195, 9195, 42537, 42537, 42537, 9195, 113962, -160,
	-1000, 9195, 9195, -263, -1000, -1000, 112428, -1000, -1000, -1000,
	113645, -1000, 16498, 1846, -1000, 109737, -1000, 28546, -1000, -1000,
	42537, 42537, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	46394, 2642, 577, 60659, -1000, -1000, 311, 991, 42537, 44190,
	2501, 991, 991, -1000, -162, -1000, -1000, -1000, 3255, 23,
	-1000, -1000, 3307, 21314, -1000, 68610, 784, -1000, 3305, -1000,
	-1000, -1000, -1000, -1000, -1000, 102636, -1000, 102636, -1000, 21314,
	102636, 2577, 2136, -1000, -1000, 2320, 576, 46394, 83804, 866,
	-1000, 3208, 2524, 1748, 50652, -1000, 2956, -1000, 109675, -1000,
	-165, -168, 2135, -1000, -1000, 2131, 42537, -1000, 60659, 575,
	2061, 2061, -180, -181, -1000, -1000, 42537, 1127, 102636, 29648,
	-1000, 3302, 3019, -1000, -1000, -1000, -1000, 102636, 42537, 1126,
	-1000, -1000, -1000, 3268, 2061, 21314, -1000, 2061, 2061, 3053,
	1093, 102636, 83804, -1000, 2302, 2302, 68610, 52779, -1000, -145,
	977, 3184, 2454, 3301, -1000, -1000, -1000, -1000, 2319, -1000,
	-1000, 102636, 2312, 966, -1000, -189, -1000, 831, 830, 70696,
	955, 952, -1000, -1000, -1000, -1000, 532, 3172, -1000, 3243,
	574, 102636, 2047, 572, 21314, 3011, 822, 69658, -1000, 2823,
	1708, -1000, 2144, 102636, 3001, -1000, 2382, 571, -1000, 959,
	568, 567, 2412, 2412, -191, 50652, 50652, -196, 566, 959,
	-1000, -199, -1000, -1000, -1000, -1000, -161, -1000, 857, 852,
	-1000, -1000, 83804, 83804, 42537, 42537, -1000, 9195, 9195, 9195,
	-1000, 307, -1000, -1000, 1938, 3075, -1000, -206, 109555, 109315,
	556, 46394, 60659, -201, -1000, -1000, 102636, 113645, -240, -1000,
	113645, 563, 562, 478, -1000, -1000, -1000, 761, -1000, -1000,
	3299, -1000, -1000, 1722, -1000, -1000, -1000, 102636, 2149, -1000,
	1050, 42537, 7115, 560, 42537, -1000, 3169, -1000, 2429, 2631,
	2454, 559, -1000, -1000, -1000, -1000, 905, 102636, 1042, 1741,
	-1000, -1000, 113645, 3053, 50652, -1000, -1000, 557, 553, 113645,
	542, 828, 2638, -1000, -1000, -1000, -1000, 113645, 541, 3137,
	-1000, -1000, -1000, -1000, 2061, 83804, -1000, -1000, -1000, -204,
	-1000, -1000, 1746, 565, 1841, 2509, -1000, 2011, 540, -1000,
	-1000, 2006, 2403, -1000, 91108, 29097, 29097, 292, 3162, 952,
	-1000, 3247, -1000, 3154, 565, -1000, 50652, -1000, 83804, 50652,
	2039, -1000, 2276, 69658, -1000, 2292, -1000, -1000, -212, 102636,
	1708, -1000, -1000, 68610, 68610, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1042, -217, -218, -1000,
	68610, -1000, -1000, 2181, -1000, 102636, -1000, 102636, -1000, -1000,
	-219, -225, -1000, 1957, 42537, 28546, -1000, -1000, 556, -226,
	-1000, -245, -1000, 3153, 44190, 3298, 3297, 3294, -1000, -1000,
	-1000, -1000, 2774, 2537, 108961, 2252, 102636, 108912, -1000, 2621,
	-1000, -1000, 1841, 102636, -1000, -1000, 2454, 2536, 83804, 1048,
	-228, 1845, 1845, 42537, 27995, 1869, 42537, -1000, -1000, 3053,
	-1000, 2574, 3245, -1000, 955, -1000, 1867, 102636, -1000, 3045,
	-1000, 2955, -1000, -1000, -1000, 2468, 565, -1000, -1000, 565,
	-1000, -231, 1043, -233, 83804, 822, -1000, 2297, 996, -1000,
	-1000, -234, -243, 1748, 1042, 958, -244, -1000, -251, -252,
	-1000, -1000, 289, 43639, 43639, 43639, -263, -264, -1000, 102636,
	536, -1000, -1000, -1000, -1000, 2751, 976, -1000, 2017, 1701,
	285, 1068, -1000, -1000, 2524, -253, -1000, 975, 532, -1000,
	42537, 1042, -258, -1000, 1031, -267, -1000, 1020, -269, -1000,
	2582, -1000, -276, 2061, 973, 3106, -1000, -1000, -1000, 2006,
	83804, -281, -1000, -1000, 2032, -1000, 2454, 966, -1000, 1042,
	529, 1748, 528, 1372, 3011, 2826, 959, 959, 2454, 1748,
	996, 527, 959, -1000, -1000, -1000, 2801, -1000, 47462, 1970,
	1657, 111743, 2801, 2801, -1000, -1000, 102636, 3094, -1000, 2027,
	2020, 1460, -1000, -1000, -1000, -1000, -1000, -1000, 996, -1000,
	3092, 2252, 113645, 2454, -1000, 1845, 2505, -1000, 1845, 2576,
	-1000, 1862, -1000, -1000, -1000, 1562, 3239, -1000, 526, -1000,
	102636, 1648, 1638, 3292, 1841, 2006, 1748, 50652, 2454, 50652,
	-1000, -1000, 1269, -1000, -1000, 1841, 2454, -1000, -1000, -1000,
	1643, 3160, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	819, -1000, 2940, -1000, 1028, 2070, 2070, -1000, 814, 2017,
	-1000, -1000, 522, -1000, 502, -1000, 1935, -1000, -1000, 102636,
	-1000, -1000, 3291, -1000, 955, -1000, 2454, -284, 1841, -286,
	-1000, 1414, 958, 1841, 1654, -1000, -1000, 1929, 43088, 42537,
	-1000, 3222, -1000, -1000, 2323, -1000, 42537, 2524, 42537, 42537,
	56479, -287, -1000, 2006, 1841, 1042, 958, 1748, 58048, 996,
	958, -1000, -1000, -1000, 113645, -1000, -1000, -1000, 113645, -1000,
	-289, -294, -272, 90584, 2057, -1000, 958, 1748, 996, 2454,
	-266, -1000, 996, 1841, 1125, -297, -1000, -1000, -1000, 996,
	2454, -1000, 1841, -1000, -1000, -1000, 494, -1000, -1000, 1841,
	958, 42537, 958, 996, -302, 996, -1000, 1841, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4142, 4141, 4139, 4138, 4137, 4136, 4134, 4133, 4131,
	4124, 4123, 4122, 4120, 4119, 4117, 4114, 4112, 4111, 4102,
	4098, 4096, 4095, 4093, 4090, 4089, 4088, 4087, 4086, 4083,
	4082, 4077, 4075, 4073, 4072, 4071, 4069, 4068, 4066, 4065,
	4063, 4062, 4060, 4055, 4054, 4053, 4050, 4049, 4048, 4046,
	4044, 4043, 4042, 4041, 44, 4040, 4039, 4038, 4037, 4034,
	4033, 4032, 4031, 4027, 4024, 4023, 4022, 4021, 4017, 4016,
	4014, 4013, 4012, 4011, 46, 4010, 241, 4009, 4008, 4007,
	4006, 4002, 4001, 4000, 3998, 3996, 3994, 3991, 3990, 238,
	3988, 102, 3987, 3986, 3984, 3975, 3974, 237, 3973, 3972,
	3961, 3949, 245, 3948, 3944, 3935, 3934, 3932, 3931, 3929,
	3923, 3922, 3919, 79, 133, 3901, 3898, 505, 3897, 3896,
	3895, 3894, 3892, 3891, 3890, 3888, 3886, 3884, 213, 3881,
	236, 3878, 3877, 3875, 3874, 3871, 3870, 3865, 3863, 3861,
	3860, 3859, 3858, 3857, 3851, 3847, 3843, 3839, 3838, 3836,
	3835, 3834, 3833, 3831, 3830, 3828, 3826, 3825, 3824, 3823,
	3822, 3820, 3819, 3818, 243, 163, 3814, 3813, 235, 233,
	3812, 3811, 3810, 3809, 3807, 101, 4, 35, 3806, 3804,
	71, 65, 62, 75, 81, 90, 3802, 89, 3801, 98,
	53, 3798, 18, 3, 230, 225, 8389, 219, 3797, 3796,
	3794, 209, 162, 3793, 205, 3792, 3785, 3779, 3778, 83,
	54, 153, 151, 147, 144, 661, 3777, 3776, 86, 61,
	45, 28, 21, 3775, 3774, 3773, 3772, 2724, 105, 3771,
	229, 207, 140, 3768, 3767, 3766, 785, 3765, 3763, 33,
	3762, 177, 80, 111, 70, 99, 3758, 122, 38, 3757,
	179, 55, 3756, 130, 74, 69, 6395, 9027, 3755, 100,
	56, 87, 132, 150, 142, 165, 1852, 134, 173, 183,
	178, 145, 152, 3754, 216, 3750, 3179, 59, 139, 3749,
	3747, 3742, 68, 169, 85, 3741, 3737, 58, 8, 27,
	1, 146, 23, 96, 39, 13, 3736, 14, 3734, 3733,
	3731, 3724, 41, 141, 3723, 244, 3720, 109, 37, 43,
	3719, 22, 186, 3718, 197, 118, 3716, 3715, 223, 171,
	158, 3714, 73, 196, 3711, 3710, 3709, 3705, 3698, 112,
	6, 115, 3697, 3691, 123, 3688, 36, 204, 167, 3687,
	48, 3686, 3682, 148, 88, 106, 242, 129, 194, 104,
	195, 157, 203, 3680, 3678, 3677, 175, 3676, 3673, 191,
	131, 3671, 3669, 180, 246, 40, 60, 202, 66, 161,
	128, 3668, 184, 3667, 3663, 250, 156, 185, 2, 15,
	77, 108, 3661, 7, 201, 127, 174, 94, 3659, 5250,
	2609, 2534, 3657, 3656, 135, 95, 63, 93, 124, 224,
	57, 3655, 3654, 2155, 3651, 3650, 3646, 3645, 159, 3644,
	3643, 3642, 116, 126, 170, 3641, 84, 67, 51, 12,
	107, 289, 231, 91, 189, 176, 217, 3640, 3638, 3637,
	155, 3629, 49, 119, 3628, 168, 212, 3627, 3624, 540,
	3623, 120, 968, 50, 121, 3620, 190, 3616, 3614, 3611,
	3608, 3603, 3597, 3595, 805, 200, 3594, 3593, 3591, 29,
	160, 3589, 221, 117, 193, 164, 47, 3588, 76, 4264,
	3587, 723, 208, 199, 154, 3586, 3585, 2409, 42, 0,
	10127, 5997, 9221, 10797, 3584, 4566, 3583, 3582, 3581, 188,
	114, 3580, 3579, 3578, 92, 3574, 64, 3573, 3570, 52,
	3568, 25, 5, 10, 20, 16, 125, 103, 3566, 3564,
	30, 113, 136, 3563, 234, 198, 3562, 3561, 3560, 3559,
	82, 3556, 32, 3555, 24, 3554, 3551, 34, 9, 17,
	3549, 3548, 210, 3547, 187, 211, 3546, 138, 3545, 3170,
	110, 3542, 3541, 227, 78, 3537, 215, 3532, 3138, 3531,
	3530, 19, 3529, 3528, 206, 149, 182, 3526, 3525, 143,
	3522, 3519, 3517, 220, 3516, 3515, 31, 3513, 11, 3512,
	3510, 172, 2928, 3509, 3508, 26, 3350, 166,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 543, 543, 21, 35,
	22, 36, 15, 544, 544, 544, 544, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	542, 542, 214, 214, 213, 208, 208, 545, 545, 215,
	215, 215, 217, 217, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 443, 443, 443, 475, 475, 474, 474,
	474, 558, 558, 559, 559, 559, 559, 559, 116, 116,
	342, 342, 342, 43, 43, 43, 43, 43, 537, 537,
	180, 180, 180, 182, 182, 181, 181, 181, 181, 65,
	65, 550, 550, 551, 551, 549, 552, 552, 552, 179,
	179, 179, 112, 112, 112, 112, 113, 113, 114, 114,
	183, 183, 183, 185, 185, 184, 184, 184, 184, 184,
	184, 184, 184, 189, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 93, 93, 477, 477, 478, 478, 174,
	174, 175, 175, 175, 175, 176, 176, 177, 177, 177,
	57, 186, 186, 188, 188, 187, 187, 45, 45, 45,
	45, 45, 45, 45, 46, 46, 46, 46, 46, 47,
	47, 47, 47, 47, 47, 48, 48, 48, 48, 48,
	48, 55, 55, 55, 55, 165, 165, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 58, 62, 62,
	62, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	561, 561, 562, 562, 563, 563, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 71, 71, 304, 304, 275, 275, 72,
	72, 72, 73, 73, 74, 74, 59, 59, 535, 535,
	319, 319, 434, 434, 76, 76, 341, 341, 77, 77,
	77, 77, 77, 77, 78, 78, 78, 78, 78, 78,
	78, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 86, 86, 86, 86, 86,
	87, 87, 87, 84, 84, 84, 81, 81, 81, 80,
	80, 80, 85, 85, 85, 534, 265, 265, 83, 83,
	83, 268, 268, 82, 82, 82, 320, 320, 88, 88,
	88, 88, 276, 89, 89, 89, 89, 89, 89, 89,
	89, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 436, 436, 90, 90, 90, 401,
	401, 94, 94, 94, 357, 357, 95, 95, 95, 95,
	95, 96, 96, 96, 96, 96, 96, 115, 115, 115,
	115, 115, 115, 539, 539, 312, 312, 230, 230, 230,
	230, 105, 105, 105, 105, 106, 106, 106, 107, 107,
	170, 170, 122, 122, 122, 122, 122, 121, 121, 121,
	121, 121, 121, 49, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 54, 54, 54, 54, 54, 124,
	124, 555, 555, 126, 123, 123, 123, 125, 125, 125,
	125, 127, 128, 128, 128, 128, 128, 128, 128, 128,
	129, 129, 468, 468, 328, 328, 466, 466, 486, 486,
	467, 467, 280, 280, 280, 280, 280, 281, 281, 281,
	476, 476, 476, 476, 476, 476, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	171, 171, 172, 173, 173, 173, 173, 173, 150, 150,
	150, 164, 164, 164, 164, 164, 164, 164, 153, 153,
	153, 140, 140, 131, 131, 131, 131, 131, 131, 131,
	135, 135, 135, 135, 135, 135, 135, 135, 132, 132,
	142, 142, 142, 142, 142, 136, 136, 137, 137, 160,
	160, 139, 139, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 133, 133, 133, 133, 144, 144, 144, 144,
	364, 364, 364, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 163, 163, 163, 163, 163, 163,
	553, 553, 554, 554, 157, 157, 157, 157, 157, 157,
	415, 415, 151, 151, 151, 151, 156, 156, 156, 156,
	159, 159, 159, 159, 347, 347, 148, 148, 148, 149,
	149, 149, 154, 154, 155, 152, 152, 158, 158, 158,
	158, 134, 134, 134, 565, 565, 565, 161, 161, 147,
	147, 162, 162, 162, 162, 162, 162, 162, 162, 146,
	146, 146, 145, 145, 145, 145, 138, 536, 536, 532,
	532, 532, 532, 532, 532, 532, 532, 533, 533, 533,
	533, 538, 538, 99, 99, 99, 99, 99, 108, 108,
	108, 108, 108, 100, 100, 100, 100, 100, 102, 102,
	101, 101, 101, 101, 66, 66, 66, 66, 66, 14,
	14, 14, 67, 67, 192, 192, 192, 294, 294, 193,
	193, 288, 288, 288, 288, 190, 190, 191, 191, 68,
	68, 566, 566, 566, 546, 546, 546, 547, 547, 547,
	547, 547, 547, 282, 282, 283, 283, 381, 381, 381,
	381, 381, 286, 286, 286, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 289, 289, 216, 216, 216, 292,
	293, 293, 290, 290, 291, 291, 291, 296, 296, 295,
	298, 298, 297, 380, 495, 495, 497, 497, 497, 497,
	497, 497, 497, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 567, 567, 493, 493, 493, 494,
	489, 489, 490, 490, 490, 490, 490, 284, 284, 285,
	285, 285, 285, 491, 492, 310, 310, 419, 496, 496,
	498, 498, 500, 568, 568, 568, 568, 568, 568, 569,
	569, 569, 379, 379, 378, 378, 302, 302, 501, 501,
	501, 501, 502, 502, 502, 502, 502, 505, 504, 503,
	503, 503, 503, 503, 70, 70, 70, 344, 344, 343,
	343, 345, 345, 345, 345, 345, 345, 345, 345, 345,
	345, 345, 345, 345, 345, 345, 167, 167, 233, 233,
	64, 64, 64, 12, 12, 12, 548, 548, 548, 69,
	69, 69, 69, 69, 69, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 541, 541, 540, 540, 234,
	234, 571, 571, 75, 75, 75, 75, 75, 75, 75,
	437, 437, 438, 438, 63, 63, 63, 63, 63, 365,
	365, 363, 363, 362, 362, 309, 309, 417, 417, 417,
	418, 238, 238, 239, 239, 209, 209, 209, 27, 26,
	19, 19, 24, 24, 39, 39, 39, 39, 42, 42,
	38, 38, 38, 38, 40, 40, 34, 34, 556, 556,
	557, 557, 104, 104, 109, 109, 109, 109, 109, 110,
	110, 110, 110, 111, 111, 111, 111, 120, 120, 166,
	166, 166, 166, 166, 166, 166, 44, 44, 44, 44,
	56, 56, 56, 56, 118, 573, 573, 573, 119, 119,
	119, 572, 572, 231, 231, 375, 375, 376, 376, 574,
	574, 377, 377, 377, 377, 377, 224, 223, 225, 225,
	226, 226, 61, 61, 61, 218, 218, 219, 219, 220,
	220, 221, 221, 222, 222, 575, 575, 97, 97, 97,
	169, 169, 274, 274, 274, 372, 372, 372, 303, 303,
	245, 245, 374, 374, 374, 374, 340, 340, 340, 168,
	168, 317, 317, 330, 330, 331, 331, 431, 431, 332,
	103, 103, 117, 117, 196, 196, 194, 194, 194, 194,
	194, 194, 194, 194, 201, 201, 202, 202, 203, 203,
	204, 205, 205, 205, 205, 321, 321, 206, 206, 206,
	195, 195, 195, 197, 197, 197, 197, 197, 197, 197,
	200, 200, 200, 200, 207, 207, 207, 199, 199, 512,
	512, 512, 514, 514, 516, 516, 515, 515, 511, 511,
	513, 513, 570, 570, 346, 346, 346, 300, 301, 299,
	299, 307, 307, 305, 306, 306, 308, 308, 416, 416,
	416, 210, 210, 210, 337, 337, 337, 337, 338, 338,
	368, 368, 366, 366, 366, 366, 367, 367, 369, 369,
	369, 370, 370, 371, 371, 334, 334, 335, 335, 336,
	336, 336, 336, 397, 397, 198, 198, 198, 314, 314,
	314, 315, 315, 387, 387, 387, 387, 387, 387, 388,
	388, 386, 386, 386, 386, 420, 420, 420, 420, 420,
	420, 420, 420, 420, 421, 422, 422, 316, 316, 423,
	373, 373, 530, 530, 530, 531, 531, 414, 414, 424,
	424, 424, 424, 424, 424, 412, 412, 413, 413, 432,
	433, 433, 350, 350, 350, 350, 348, 348, 351, 351,
	351, 351, 349, 349, 425, 425, 425, 425, 339, 339,
	426, 426, 426, 426, 427, 428, 428, 429, 429, 382,
	383, 383, 439, 439, 439, 439, 441, 313, 313, 313,
	313, 313, 488, 487, 487, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 455, 455, 455, 455,
	455, 455, 455, 455, 455, 455, 456, 456, 456, 456,
	456, 456, 456, 442, 442, 442, 442, 442, 446, 446,
	446, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 447, 447, 452, 452, 453, 453, 453, 448,
	449, 454, 454, 454, 454, 576, 576, 458, 458, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 444, 444,
	444, 451, 451, 451, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 358, 358, 360,
	360, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 391, 391,
	391, 391, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 392, 392, 392,
	392, 392, 392, 392, 392, 392, 392, 506, 506, 506,
	506, 506, 506, 506, 506, 393, 393, 509, 509, 510,
	510, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	517, 517, 518, 518, 520, 520, 521, 521, 522, 523,
	523, 523, 524, 525, 525, 519, 519, 526, 526, 526,
	526, 527, 527, 528, 528, 528, 528, 528, 529, 529,
	529, 529, 529, 403, 403, 404, 404, 410, 410, 410,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 235, 235, 235, 235,
	235, 326, 326, 324, 324, 324, 327, 327, 325, 325,
	323, 323, 322, 322, 400, 400, 398, 398, 402, 402,
	352, 352, 457, 457, 457, 457, 457, 457, 457, 457,
	353, 353, 353, 361, 354, 354, 355, 355, 355, 355,
	355, 394, 395, 356, 356, 356, 396, 396, 405, 409,
	409, 408, 407, 407, 406, 406, 384, 384, 385, 385,
	333, 333, 577, 577, 329, 329, 430, 430, 430, 430,
	278, 278, 318, 318, 277, 277, 269, 269, 270, 270,
	270, 270, 311, 311, 411, 411, 459, 459, 460, 460,
	461, 461, 462, 462, 463, 464, 465, 399, 399, 255,
	254, 242, 243, 253, 252, 251, 241, 244, 248, 249,
	250, 246, 247, 261, 260, 259, 266, 267, 257, 258,
	435, 240, 271, 271, 272, 272, 272, 273, 273, 273,
	273, 236, 236, 237, 237, 262, 262, 263, 264, 264,
	256, 256, 256, 227, 227, 227, 228, 228, 229, 229,
	473, 473, 470, 470, 470, 471, 471, 471, 472, 472,
	472, 472, 469, 469, 469, 469, 469, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 480, 480, 481, 481,
	481, 481, 481, 481, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 481, 481, 481, 482, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 485, 485,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	2, 3, 10, 3, 6, 4, 3, 1, 3, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 12,
	3, 1, 0, 1, 1, 2, 3, 3, 0, 4,
	6, 0, 5, 6, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 2, 0, 1, 2, 3, 1, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 6, 6, 6, 6, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 6, 3,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 1, 3, 3, 5, 3, 1, 3, 2, 2,
	2, 2, 1, 2, 2, 5, 3, 3, 6, 6,
	3, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 6, 4, 7, 7, 7, 2, 6, 4, 7,
	7, 7, 2, 1, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 3, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 2, 6, 3, 3, 4,
	4, 3, 1, 3, 2, 3, 3, 1, 3, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 2, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 3, 2, 4, 3, 3, 5, 3,
	4, 3, 5, 3, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 4, 3, 3, 4, 3, 3,
	3, 3, 4, 3, 1, 1, 1, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 3, 4, 10,
	10, 3, 5, 5, 5, 3, 5, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	1, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 9, 9, 3, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 1, 2, 8, 4, 2,
	5, 5, 5, 2, 1, 3, 11, 12, 8, 5,
	3, 1, 5, 9, 7, 11, 3, 3, 0, 2,
	4, 3, 3, 1, 5, 1, 3, 1, 2, 0,
	1, 2, 2, 0, 1, 3, 3, 2, 2, 1,
	1, 1, 4, 0, 6, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 4, 2, 2, 2,
	4, 7, 3, 4, 6, 3, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 17, 20, 16, 19, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 9, 12, 3, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	3, 2, 4, 4, 0, 4, 4, 3, 4, 1,
	5, 3, 4, 5, 5, 1, 5, 1, 3, 2,
	0, 3, 0, 2, 3, 1, 3, 2, 0, 3,
	5, 6, 4, 6, 4, 3, 2, 1, 0, 5,
	1, 0, 2, 2, 2, 1, 1, 0, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 565, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 371, 408, 419, 384, 400, 389, -125, -126,
	436, -44, -56, -119, -118, 72, 126, 395, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -560, 101, -513, -79, -82, -111, -564, 138, 157,
	212, -100, -101, 354, -106, -107, 402, -109, -110, 404,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 441, -155, 497, 48, 455, 81, 142, 412, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -512, -80,
	-81, -84, -86, -87, -83, -85, 401, -197, -195, 562,
	512, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 531,
	540, -200, -198, -199, -207, 428, 520, 471, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, -276,
	2, -257, -262, -263, -264, -256, -227, -482, -485, 4,
	-479, -483, 163, 221, 318, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 479, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	224, 228, 225, 234, 235, 239, 240, 241, 243, 247,
	248, 249, 250, 251, 252, 254, 256, 255, 258, 261,
	262, 265, 269, 270, 273, 274, 275, 276, 278, 279,
	282, 280, 283, 284, 281, 285, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 298, 286, 301,
	299, 303, 304, 305, 316, 314, 309, 310, 306, 311,
	307, 308, 312, 313, 320, 321, 324, 209, 326, 327,
	330, 348, 334, 335, 336, 339, 340, 343, 346, 347,
	349, 350, 351, 352, 353, 354, 355, 356, 358, 359,
	361, 362, 363, 365, 366, 367, 369, 371, 372, 374,
	376, 377, 378, 379, 380, 381, 382, 384, 386, 385,
	387, 389, 395, 400, 397, 398, 399, 401, 402, 403,
	404, 406, 407, 408, 410, 411, 412, 413, 415, 417,
	418, 421, 422, 438, 439, 457, 419, 420, 423, 424,
	425, 426, 427, 431, 429, 430, 432, 433, 434, 436,
	437, 440, 441, 443, 444, 445, 446, 447, 448, 451,
	453, 454, 455, 456, 458, 461, 462, 463, 464, 459,
	470, 467, 468, 472, 473, 474, 475, 476, 477, 478,
	480, 482, 490, 491, 492, 494, 497, 498, 499, 500,
	488, 502, 503, 506, 507, 508, 511, 509, 510, 512,
	514, 517, 518, 519, 525, 524, 526, 532, 533, 535,
	536, 537, 36, 49, 50, 53, 55, 57, 68, 69,
	70, 74, 121, 122, 149, 160, 161, 172, 184, 185,
	196, 198, 206, 207, 208, 229, 230, 232, 237, 259,
	323, 325, 341, 345, 360, 364, 368, 370, 383, 414,
	449, 460, 465, 483, 484, 485, 486, 493, 495, 520,
	521, 522, 527, 534, -276, 2, -257, 332, -250, 2,
	-227, -227, 371, 28, 2, 28, 359, 430, 474, 476,
	2, -539, -312, 2, 28, -230, -227, 101, 194, 428,
	-250, 2, -539, -312, 25, 2, -227, 2, 346, -231,
	2, 419, -227, 279, 2, 565, 93, 270, 73, 414,
	433, -128, 491, -127, 483, 423, -129, -468, 2, 301,
	-227, 565, 565, 565, 28, -240, -227, 471, 221, 423,
	117, 468, 565, 2, 471, 351, 524, 429, 117, 380,
	221, 499, 423, -548, 279, 410, 197, 513, -537, 2,
	-532, 4, -483, -479, -270, -269, 471, 477, 117, -264,
	-256, 555, -263, 565, 565, 565, 2, 240, 241, 379,
	378, 433, 434, 565, 565, 565, 565, 421, 2, 159,
	22, 27, 65, 92, 97, 123, 179, 182, 337, -561,
	348, 377, 432, 470, 473, 480, 494, -547, 456, 67,
	423, -546, -548, 279, 499, 136, -362, 117, 270, 193,
	507, 476, 474, 505, 129, 228, 510, 509, 565, 565,
	22, 27, 65, 76, 97, 136, 159, 179, 182, -563,
	348, 377, 417, 432, 470, 480, 494, 2, 524, 279,
	429, 471, 221, 117, 499, 423, -548, 421, 422, 375,
	-91, 2, 562, 32, 31, 436, -189, 471, 233, 2,
	-227, 565, 565, 2, 240, 241, 421, 422, 565, 565,
	180, -532, 2, 565, 565, 2, 240, 241, 421, 422,
	233, 2, 67, 425, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 2, -164, 433, 456,
	203, 46, 45, 73, 28, 376, 78, 352, 118, 144,
	500, 195, 221, 222, 248, 92, 93, -364, 44, 241,
	240, 422, -553, 421, -415, 472, 424, 430, 467, 252,
	419, 491, 101, 514, 411, 537, 380, 381, 153, 4,
	117, 301, 435, 483, 270, 418, 355, 83, 565, -570,
	2, 471, -572, 2, 491, 491, 2, -572, 2, -572,
	2, -572, 2, -573, 491, 534, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 565, 565,
	565, 565, 565, -195, -197, -196, 565, 565, 565, 565,
	565, 565, 565, -164, 433, 2, 73, 28, -305, -307,
	504, 231, 146, 338, -194, -196, 2, -512, -466, 2,
	-389, -486, -391, 553, 554, 546, 469, 66, 317, 538,
	-403, 123, 505, 332, -485, -392, -405, 149, 414, -327,
	8, 9, 5, 6, 7, -236, -393, -399, 496, 162,
	322, -273, 566, 10, 562, -509, -196, -404, 37, 198,
	64, -470, -272, -237, -442, 232, -271, -256, -506, -507,
	4, -479, -480, -471, -445, -453, -449, -450, -456, -227,
	-482, 76, 109, 110, 108, 113, 112, 272, 271, 114,
	111, 435, 513, 65, 36, 206, 207, 237, 323, 208,
	74, -508, 137, -481, 229, 230, 449, 50, 383, 172,
	122, 121, 325, 55, 53, 521, -454, 119, 483, 484,
	485, 486, 184, 185, 57, 160, 161, 345, 368, 465,
	493, 495, 196, 259, 43, 105, 181, 227, 210, 236,
	238, 242, 260, 263, 302, 315, 319, 342, 344, 409,
	442, -576, 522, 460, 68, 69, -514, 385, -515, -250,
	-514, 565, 565, 567, 565, -299, -300, -301, 2, 28,
	134, 562, 2, -420, 2, -421, -425, -196, 253, -424,
	562, -422, 560, -257, 333, -510, 415, -506, -507, -236,
	-256, -272, 4, -479, -481, 564, -302, 562, 117, 471,
	77, 221, -357, 562, -227, 28, 332, 487, 567, -401,
	562, 332, 180, 335, 59, -227, 524, 2, 2, 438,
	2, 562, -128, 70, 491, 43, 433, -376, 2, -377,
	-223, -224, -225, -432, -226, 239, 374, 382, 541, 127,
	317, 537, -466, -555, 180, 545, 487, -466, -328, 564,
	2, 2, 2, 2, 2, 2, -425, 206, -257, 2,
	-254, -469, 4, -479, -483, -480, -484, -482, 28, 31,
	32, 33, 35, 37, 38, 39, 40, 56, 64, 65,
	71, 75, 77, 86, 92, 101, 108, 109, 111, 110,
	112, 113, 114, 123, 127, 130, 134, 135, 139, 142,
	146, 162, 164, 177, 179, 180, 194, 197, 200, 213,
	226, 231, 233, 253, 257, 264, 271, 272, 317, 322,
	328, 332, 333, 337, 338, 357, 373, 388, 405, 428,
	435, 452, 466, 471, 481, 487, 489, 496, 504, 505,
	513, 515, 523, 528, 529, 530, 531, -485, 76, 2,
	-425, 206, 2, -259, 206, -425, -262, 2, -241, -227,
	2, -253, -469, 2, -277, 206, -257, -258, -262, -260,
	2, -262, -266, 2, -227, -477, 206, 2, -473, 10,
	-472, 5, 4, -479, -483, -480, 524, 233, 487, 567,
	-318, -269, -270, -465, 8, -311, -227, 564, -389, 2,
	-117, -102, 2, 177, -389, 206, 2, -117, 206, 2,
	-389, 206, 2, -117, 206, 2, -550, 2, -477, 206,
	-227, 2, 283, 2, 2, 494, 2, 97, 471, 116,
	2, 399, -562, 417, 498, 2, 2, 2, 2, 2,
	2, 2, 471, -246, 2, -227, 177, -266, 206, -267,
	2, -227, -228, 429, -571, 385, -477, 206, 2, 524,
	-260, 2, -260, 221, 235, -241, 206, 2, 476, 474,
	476, 474, 180, 2, 233, 2, 233, 2, -426, 2,
	-427, -421, -428, 560, 333, 283, 2, 2, 2, 2,
	2, 206, -227, 471, 116, 2, 251, 2, 2, 2,
	2, 2, 2, 2, -320, 206, 2, -257, 524, -320,
	206, 2, -320, 206, 2, -363, 2, 86, -241, 206,
	2, -265, 206, 2, -260, -268, 206, 2, -266, -478,
	206, 2, -477, -389, 2, -117, 2, -436, 2, -435,
	-472, 520, -91, 562, -91, 562, 433, 562, -477, -257,
	-257, -389, 2, -117, -102, 2, -389, 2, -117, 2,
	-114, -113, -477, 562, 180, -389, 2, -117, -102, 2,
	-389, 2, -117, 2, -189, 177, 2, 117, 471, -164,
	2, 177, 515, 2, 8, 2, 213, -477, 424, 381,
	169, 2, 438, 2, 439, 73, -364, 537, 73, 180,
	2, 180, 2, -347, 2, 531, 2, 2, -536, 2,
	332, 180, 2, 180, 2, 180, 2, 180, 2, 180,
	2, 378, 434, 492, 241, 2, -117, 528, -102, -389,
	528, 2, -554, 177, 422, -389, 2, 490, 250, 154,
	180, -347, 2, 180, 2, 180, 2, 5, 2, 379,
	457, 2, 239, 374, 457, 2, -257, -565, 2, 471,
	524, 429, 2, 2, 87, 88, 180, 2, 180, 2,
	180, 537, 2, -339, -425, -375, -376, -375, 487, -305,
	-307, -164, 438, 2, -201, -337, -203, 177, -366, -367,
	-204, 264, 164, 328, -205, -346, 28, 134, -346, -346,
	59, 563, 563, 11, 12, 75, 41, 553, 554, 555,
	556, 175, 557, 558, 551, 552, 550, 543, 544, 548,
	245, 246, 94, 547, 545, 85, 277, 416, 165, 166,
	167, 168, 396, 219, 34, 220, 14, 15, 16, 33,
	337, 263, 538, 210, 442, 546, 17, 18, 19, 236,
	238, 319, 49, 213, -235, -279, -389, -389, -389, -389,
	-389, -389, -389, 344, 562, -333, -384, 560, -196, 562,
	562, 562, -465, -196, -389, -403, 563, -325, 562, -196,
	-403, -398, 562, 414, 560, 562, -406, -389, 5, 5,
	5, 562, 564, -517, 532, 177, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 370, -447, 562, -446, 562, -446, -446, 525, -444,
	562, 540, 533, 562, -444, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 525, 567,
	-514, -302, 562, -329, -430, -389, 555, -329, -329, 332,
	-322, -389, 105, -350, 242, 302, 181, 260, 409, 227,
	-386, 566, -386, -414, 540, -196, -422, -256, -196, -424,
	562, -420, -414, -92, -465, -76, -89, -97, -117, -130,
	-168, -169, 555, -257, 562, 180, 562, 564, -469, 180,
	-311, -241, -257, -271, -272, -277, 133, -322, -532, 499,
	423, -311, -230, 38, -400, -439, -440, -488, 566, -487,
	-442, -452, -448, -451, 360, 364, -471, 53, 521, -454,
	232, 4, -479, -481, 229, 230, 449, 50, 383, 172,
	122, 121, 325, 55, 483, 484, 485, 486, 184, 185,
	57, 522, 460, 68, 69, -532, 499, 423, -311, 177,
	-475, 2, -474, -473, 114, 435, -363, -468, -322, 38,
	-376, 2, 123, -473, -574, 567, 262, -281, 276, 316,
	202, 333, 535, 326, 127, -476, 5, 4, -399, -411,
	123, 270, 232, -459, -461, 8, -460, 9, -462, 553,
	554, -467, -466, 107, 564, -469, -212, 397, 436, -211,
	24, 29, 138, 223, 305, 518, 155, -291, 224, 347,
	351, 149, 453, 508, -543, -544, 420, 478, 479, 89,
	326, 436, 397, 149, -343, -345, 38, 115, 305, 346,
	60, 216, 281, 282, 455, 527, 149, 436, 397, 347,
	-544, 98, 397, -544, -214, 453, 508, -543, -544, 420,
	397, -213, -291, 149, 566, 24, 397, 436, 347, -558,
	-559, 138, 29, 397, 347, -540, -511, 531, 149, -425,
	206, -551, -113, 254, 5, 10, -113, -318, 567, 567,
	-469, 555, 422, 421, 149, 149, 149, 149, 177, 317,
	2, 2, 2, 2, 2, 182, -546, -563, 2, 2,
	-257, 206, -304, 332, -535, -319, 471, -257, 317, 43,
	-259, 206, 2, -262, 524, -540, 317, -261, 206, -257,
	38, 562, 2, -363, 2, 221, -511, 317, -426, -274,
	-257, -421, -274, 436, -250, 38, -386, -257, 2, 149,
	2, 2, 2, -227, -215, 567, 63, 403, 149, -320,
	206, -215, 149, -215, 149, -278, 206, -277, -215, 149,
	-215, 567, 149, -215, 567, 149, 567, 149, 563, 567,
	-436, -436, -477, -177, 531, 180, 101, 562, 562, -189,
	-433, 567, -432, -478, -114, -477, -477, -535, -241, 2,
	-257, 2, 471, 243, -477, -177, 213, -477, -477, -477,
	-468, 28, 439, 2, 378, 434, 492, 88, 439, 2,
	-257, 471, 117, 221, 79, -538, 177, -533, 410, 423,
	499, -532, -257, 117, -257, 117, -257, 117, -257, -257,
	2, 2, 2, 2, 2, 84, 84, 2, 45, -554,
	177, 2, 490, 2, 490, 2, -227, -227, -227, 456,
	262, -257, 177, 471, 221, 471, 221, 117, 471, -215,
	567, -231, -201, -337, -468, -338, -337, -202, -201, -204,
	177, 382, 509, 305, 440, 247, -367, -366, 28, -389,
	-371, 171, 304, -389, -369, -391, 553, 554, -460, -462,
	-321, 326, -195, -195, -195, -308, -416, -389, 373, 221,
	-441, -439, -439, -255, -469, 483, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, 263, 210, 442, 49, 213, -389, 487, -389, -389,
	-389, -389, 299, 317, 322, 496, 162, 506, 134, 326,
	-577, 466, 40, -396, -196, -326, 562, -410, 35, 452,
	28, -403, 562, 2, -384, -389, -385, -323, -322, -322,
	563, 523, 28, 134, 555, 2, 563, 567, 38, 563,
	-389, -323, -402, -398, -322, -409, -408, 528, -358, -359,
	536, 286, 120, 204, 284, -360, 427, -463, 8, -469,
	555, -518, 170, 197, 562, 563, 2, 563, 2, 563,
	-389, 2, 563, -389, 2, 563, -389, 2, 563, -389,
	2, 563, 2, -389, -389, -389, -389, -389, -389, -389,
	-322, 8, -463, -463, 483, 483, -463, -463, -463, -455,
	360, 361, 362, 363, 265, 266, 267, 268, 364, 365,
	366, 367, 291, 292, 293, 294, 287, 288, 289, 290,
	295, 296, 297, 298, 189, 190, 191, 192, 185, 186,
	187, 188, -455, -352, 2, -457, -322, 4, 536, 286,
	120, 204, 284, 427, 5, -352, 2, -353, 2, -389,
	-322, -354, -390, -391, 553, 554, 546, -403, -355, 2,
	-389, -323, -389, 56, 257, 489, -356, -389, 180, -322,
	-322, 2, -322, 2, -515, 38, -322, -314, 567, 180,
	38, 4, -314, -314, 562, 563, 567, -351, 201, 280,
	275, -351, -420, -350, 242, -348, 342, -348, -348, -414,
	-242, 560, 568, -469, -414, -413, -412, 38, -250, 339,
	-414, -414, 564, 563, -413, 561, -530, 562, 565, 565,
	565, 565, 565, -257, 562, -322, -469, 564, 458, 563,
	236, 236, 236, 236, 415, 563, 487, -534, -265, -268,
	531, -91, 334, 563, 567, -313, 37, 560, 564, -463,
	2, 2, -458, 525, 562, 562, -359, 562, 180, -534,
	-268, -312, 567, 487, -261, -555, 563, 491, -377, -280,
	382, 451, 398, 431, 468, 8, 9, 8, 9, 567,
	-469, 567, -556, 92, 487, 77, 423, -380, 206, 77,
	-489, -244, 92, -490, -227, 71, 505, 373, 179, 147,
	-556, 92, 373, -556, 92, 2, 223, 92, 436, 456,
	487, 59, -425, 41, 41, 28, -117, 258, 180, 537,
	471, 221, 423, 487, -425, -345, -439, 115, 281, 282,
	59, -464, -459, 553, 554, -464, 59, -464, -464, -464,
	531, -259, -425, 423, 487, 487, 487, 487, 567, 41,
	41, 28, -117, 258, 180, 487, -277, -242, 519, 42,
	519, 487, 42, 423, 487, 567, 42, 42, 487, 487,
	-541, -232, 104, 311, 274, 312, 96, 308, 95, 307,
	102, 309, 103, 310, 526, 320, 62, 306, 285, 313,
	-233, -234, 353, 517, -477, 436, 397, 149, 213, -433,
	213, -433, -269, -227, 564, -117, -389, -389, -117, -389,
	-117, 45, 149, 2, -571, 251, 562, -284, 317, 180,
	-311, -434, 233, 567, -319, 149, -474, -344, -343, 317,
	-261, 206, 2, 149, -302, 317, 143, 562, 380, 2,
	-243, 206, -228, -227, -363, -218, 475, 149, -341, 515,
	-372, -117, 562, 123, 38, -372, -330, -331, -431, -332,
	-244, 562, -250, -386, -227, 2, -257, -320, -215, 149,
	-320, -320, -215, 567, 149, -241, -260, -265, -266, -268,
	-477, -478, -91, -435, 563, 563, 563, -176, 336, -175,
	-227, 5, -189, 515, -283, -381, -380, -493, -494, -489,
	263, 221, 505, 235, 163, -303, -245, -244, 116, -183,
	531, -113, 563, -433, 213, -177, -177, -433, -433, -257,
	177, -477, -177, -177, -177, 2, 2, 2, -347, -257,
	-241, -277, -257, -311, -311, -311, -265, -347, -241, -347,
	-241, -347, -241, -117, -389, 2, 433, 177, 177, 564,
	-347, 380, 117, 471, 351, 221, -257, -277, -257, -277,
	-241, -257, -425, -338, -202, 333, 247, 440, -369, -370,
	-391, 414, 415, -370, 414, 415, 8, 9, 8, 9,
	-206, 444, 321, -320, 567, -209, 39, 130, 247, -257,
	537, 145, -389, -389, 487, -577, 466, -396, 145, -389,
	299, 322, 496, 162, 506, 134, 326, 180, 562, -390,
	-390, 563, -324, -389, -389, 561, 570, 563, -307, 567,
	-305, -389, -322, -322, 563, 564, -322, -311, 561, 561,
	567, 563, -407, -408, 139, -389, 487, 487, 487, 487,
	562, 563, 564, -523, 343, 562, 562, -389, 563, 563,
	563, 563, 38, 567, 567, 567, 563, 567, 567, 567,
	563, 563, 563, 567, 563, 537, 537, 563, 563, 563,
	563, 567, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 563, 567, 563, 180,
	563, 563, -361, 357, 563, 11, 12, 553, 554, 555,
	556, 175, 557, 558, 551, 552, 550, 543, 544, 545,
	85, 277, 416, 14, 15, 16, 236, 213, -390, -390,
	-390, 563, -394, -395, 180, 177, 38, -356, -356, -356,
	563, 180, -322, 563, 563, 562, -516, 279, 317, 563,
	-383, -382, 529, -430, -315, 2, -420, -252, -469, -383,
	-383, -322, -389, 242, 242, -349, 515, 332, -351, -420,
	-413, -465, -388, -387, 178, 39, 130, 314, 209, -413,
	-250, -302, -413, -413, -469, -414, -414, -412, 563, -531,
	-465, 563, -316, -423, -510, -307, 564, -469, -186, -511,
	-165, 5, 322, -165, -165, -165, -311, 487, 487, 25,
	358, -439, 560, 561, 8, -469, 562, -463, -463, -463,
	-311, 180, 180, 180, -474, -474, -342, 531, -466, -376,
	503, 82, 382, 483, -466, -211, 397, -244, -244, -257,
	-266, 317, -380, 206, -217, 317, -439, -251, -227, 562,
	562, 247, 247, 515, -244, -251, 247, 206, -244, 206,
	-251, 2, -251, -542, 382, 327, -389, -474, 269, 380,
	318, -212, 397, 436, -117, -117, -117, 562, -555, 515,
	133, -257, -277, -257, -266, -261, 436, 397, 315, -271,
	-464, -464, -343, 436, 397, -266, -259, -474, 423, -241,
	-213, -117, -117, -117, 562, -242, -214, 397, 5, 206,
	-244, 5, -227, -244, -266, -474, -559, 24, -244, 206,
	-244, -266, -474, -232, -477, 322, 511, -540, 423, 487,
	-425, -113, -180, 531, -113, -174, 217, 555, -537, -227,
	524, -227, -282, -285, -283, -244, -192, -193, 533, 531,
	149, -275, -257, 560, -177, -477, -257, -266, -267, 149,
	-302, 317, -477, 38, 149, 562, 2, 2, 332, 317,
	-243, 206, -219, 140, -575, 545, -241, -383, -315, -340,
	-374, 405, 332, -303, 520, -250, -340, -317, 567, 180,
	545, 564, -303, -429, 555, 2, -215, -320, -215, -215,
	-277, -278, -215, -215, -215, -91, -91, -177, 567, 562,
	545, 545, 562, -477, -477, 563, 567, -257, -243, 221,
	221, -249, -228, 563, 567, 564, 562, -185, 336, -184,
	141, 249, 234, 445, 446, 447, 448, 132, -183, -114,
	180, -52, 531, 471, -177, 566, -347, -347, -347, 433,
	433, -227, -253, -241, -257, -254, -277, 177, 177, 509,
	-370, 333, 273, -416, -210, 539, -257, 566, -389, -389,
	145, 145, -389, -390, -390, -389, 145, 180, 562, -389,
	-400, 33, 33, 563, 567, -385, -389, 563, 523, -307,
	-307, 563, 555, -469, 566, 563, -398, 142, -389, 481,
	286, 204, 284, -360, 284, -360, -360, -463, 5, -469,
	555, -524, -247, 562, -227, 529, -306, 338, 563, -441,
	-439, -389, -389, -389, -389, -389, -463, -444, -444, -459,
	-459, -389, -394, -389, -441, -439, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, -390, -390, -390, -390, -390,
	-390, -390, -390, -390, -390, 134, 317, 326, -390, -395,
	-394, -389, -389, -439, 563, 563, 563, -322, -91, 562,
	279, -334, 197, -389, -433, 567, -334, -334, 563, -420,
	-420, 562, -389, 242, 561, 567, 569, 545, -302, 564,
	-412, -413, 561, 563, 567, 563, 567, -373, 38, 563,
	-469, -383, -188, -187, 131, 52, -311, -311, 335, 5,
	8, 560, 561, 564, -463, 563, 563, 563, -311, -311,
	-311, 116, 305, -389, 487, 487, 149, 317, 517, -495,
	-490, 147, -389, -309, -417, -510, 562, -227, 562, 562,
	2, -208, 138, 436, -557, 2, 515, 149, -215, 149,
	-215, 535, 562, 562, 487, 423, 531, -322, -389, -178,
	123, -468, -544, 566, -544, 566, 423, 487, 423, 487,
	531, 531, -322, 487, -443, 47, 26, 317, -260, 487,
	487, -215, 149, 499, 436, -477, 322, -266, -261, 436,
	397, -433, -182, 336, -181, 141, 407, 132, 249, -433,
	-180, 180, 233, -261, 2, 563, 563, 567, -496, 38,
	330, 330, 562, -257, -72, 531, -432, -465, 43, -259,
	38, 149, -540, -117, -261, -437, -438, 5, -257, 149,
	332, 317, -220, 256, -575, -473, -511, -307, -340, -329,
	318, 90, 563, -383, -331, -315, -389, 2, 563, -215,
	-215, -175, -176, -477, -477, -477, -177, -189, -189, -381,
	-286, 562, -243, -228, 562, -189, -245, 2, -478, 567,
	562, 545, 545, 545, -433, -117, 336, -257, 555, -347,
	-293, -292, 351, 326, -293, 414, 414, 333, 171, 252,
	-209, -242, -389, -389, 145, 33, 33, -389, -389, -400,
	563, -389, -389, -322, 561, 5, -389, 563, 563, 8,
	-389, 563, 564, -525, -227, -389, 563, 59, 563, 563,
	567, 567, 563, 563, 563, 563, 563, 563, 563, -395,
	180, 134, 326, 562, 563, 563, -91, -397, 200, 59,
	-420, -397, -397, -349, -311, -420, -387, -242, 560, -469,
	-465, -423, 562, 564, -187, 545, 561, 2, 560, -469,
	563, 116, -244, -244, -380, 149, -497, 92, -499, 75,
	163, 101, 317, 322, 505, 373, 71, 123, 388, -567,
	38, 542, 563, 563, 567, -418, -238, -227, -389, -418,
	-309, -311, 317, 463, 123, 317, 123, 116, 499, 78,
	-244, -251, -311, -311, -257, -266, 156, 563, 567, 545,
	2, 555, 555, -266, -261, -266, -259, 349, 156, 563,
	-242, 5, 5, 149, -239, 75, 5, -244, -244, -260,
	116, 423, 487, -180, 567, 562, 545, 545, -180, -478,
	-113, -302, -294, 223, -244, -494, -491, -492, 373, -498,
	-500, 163, 373, -117, 2, -191, -190, -227, 5, 562,
	-284, 336, 561, -474, -344, -117, -261, -302, 563, 567,
	-365, 515, -242, -257, 149, -221, 255, -575, -473, -218,
	-368, -366, 135, 562, 332, -117, -307, 545, 563, 563,
	116, 116, 215, 148, -309, 562, 562, -311, 116, 563,
	-184, -185, -477, -113, -477, -183, -53, -54, 221, 92,
	356, -254, 471, 221, 562, 562, -209, -389, -389, -389,
	563, -307, -469, 555, -519, 351, 563, -416, -389, -389,
	-390, 180, 562, -400, 563, -520, 530, -389, -335, -336,
	-389, 413, 106, 198, -520, -520, 563, -465, 2, -477,
	560, 2, -380, -251, -255, -248, -227, 163, 206, 322,
	247, 562, -390, -257, 562, 2, 30, -568, 127, 226,
	-379, -569, 100, 464, 214, -417, -209, 563, 563, 563,
	322, 322, -389, -439, 562, -215, -215, 563, 563, -389,
	487, -468, 99, -466, 2, -544, -241, -389, 487, 5,
	-215, -255, -215, -215, -239, 499, -266, -261, -181, -182,
	-477, -113, -180, 38, -289, 225, 2, -496, 247, -248,
	247, -566, 531, 563, 567, 545, 545, -282, -192, -73,
	-74, 488, -432, -302, 38, 5, 562, -227, 332, 562,
	-242, -222, 91, -575, -473, -219, -340, 318, -311, 92,
	-368, -396, -177, 562, 562, -287, 80, 93, 124, 205,
	183, 222, 456, 461, 28, -287, 563, -309, -309, 563,
	562, -177, 563, 567, 28, 562, 28, 562, -257, -277,
	-322, -322, 563, -307, 59, 567, 563, 563, -390, -400,
	563, -521, -522, -247, 567, 562, 562, 437, 561, 2,
	-499, -248, 317, 515, -389, -229, 562, -389, 38, 226,
	128, 211, -289, 562, -210, -418, -378, 515, 388, -239,
	-309, 562, 562, 562, 545, 180, 562, -443, -215, -260,
	563, -549, 386, -117, -290, -291, 213, 562, -288, 332,
	116, 305, -190, -466, -466, 563, 38, -74, 9, 38,
	-117, -309, -257, -309, 332, 264, -473, -220, 563, -251,
	-340, -478, -478, -378, 563, 563, -478, -54, -311, -311,
	563, 563, -526, 380, 415, 199, -322, -308, 563, 567,
	38, -336, 2, 2, 2, 149, 201, 563, -501, 278,
	-227, 563, 128, 211, -290, -311, -289, 201, -257, -545,
	515, 563, -296, -295, -292, -298, -297, -292, -322, -466,
	99, 349, -322, -239, -552, 181, -551, 5, 10, -192,
	349, -310, -419, -244, 81, 116, -294, -117, -117, 563,
	-365, 563, -257, -575, -221, -383, 563, 563, -379, -378,
	-193, 531, 563, 563, 563, 563, -527, -528, 49, 502,
	107, -389, -527, -527, -522, -524, 163, 531, -502, -505,
	-504, 332, 443, 181, 350, 563, 463, 527, -568, 563,
	531, -302, -389, -378, 563, 567, 520, 563, 567, 520,
	563, 180, 563, -215, -179, 531, 45, -288, -257, 563,
	567, 372, 129, 138, -289, -566, -378, 562, -379, 562,
	-459, -222, 135, -177, -177, -289, -379, -383, -177, -529,
	147, -528, 369, 176, 414, 369, 176, -529, -529, -248,
	54, -504, 332, -505, 332, 509, 129, -383, 54, -501,
	-289, -295, 213, -297, 180, 349, 421, -551, 30, 562,
	-419, 415, 415, 2, -290, -288, -379, -309, -289, -309,
	318, 509, -290, -289, 107, 197, 482, 305, 33, 545,
	-503, 305, 403, 63, 436, -503, 545, -502, 562, 562,
	336, -311, 2, -192, -289, 563, -290, 563, 436, -193,
	-290, 414, 340, -528, -389, 23, 322, 123, -389, -568,
	-322, -322, -176, 562, 563, -288, -290, -378, -193, -379,
	-330, -383, -193, 563, 563, -176, -216, 63, 403, -193,
	-379, -383, -289, -383, -383, -290, 487, 563, -383, -289,
	-290, 562, -290, -193, -322, -193, -383, 563, -383, -290,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 491, 492, 494, 495, 496, 498, 499,
	501, 503, 505, 506, 507, 509, 510, 512, 513, 514,
	515, 516, 518, 520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 582, 584,
	0, 1219, 1221, 1223, 1225, 0, 722, 0, 34, 35,
	0, -2, 287, 289, 291, 0, 317, 319, 320, 322,
	324, 326, -2, 0, 424, 425, 427, 429, -2, -2,
	0, 893, 895, 0, 571, 573, 0, 898, 900, 0,
	0, 593, 594, 0, 1312, -2, 587, 589, 591, 656,
	658, 660, 662, 664, 666, 668, 670, 672, 673, 675,
	677, 679, 681, 683, 685, 687, 689, 690, 692, 694,
	696, 698, 700, 702, 704, 706, 708, 710, 712, 714,
	716, -2, 718, -2, -2, 0, -2, -2, -2, 1237,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 375,
	376, 378, 380, 382, 384, 387, 389, 391, 1370, 431,
	433, 435, 437, 439, 441, 443, 0, -2, 1382, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1343, 1345, 1347, 1349, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 493,
	497, 500, 502, 504, 508, 511, 517, 519, 521, 478,
	479, 482, 2038, 2055, 2056, 2057, 2060, 2061, 2062, 2063,
	2064, 2065, 2486, 2567, 2568, 2087, 2088, 2089, 2090, 2091,
	2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101,
	2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111,
	2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131,
	2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141,
	2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151,
	2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161,
	2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171,
	2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181,
	2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191,
	2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201,
	2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211,
	2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221,
	2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231,
	2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241,
	2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251,
	2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261,
	2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271,
	2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291,
	2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301,
	2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311,
	2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321,
	2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331,
	2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351,
	2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391,
	2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401,
	2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411,
	2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451,
	2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461,
	2462, 2463, 2464, 2465, 480, 481, 1057, 0, 545, 543,
	2030, 546, 2299, 548, 550, 418, 419, 420, 421, 422,
	423, 0, 564, 556, 563, 565, 567, 568, 569, 570,
	540, 538, 0, 564, 2091, 562, 1217, 1218, 0, 1202,
	1203, 2338, 1244, 0, 199, 583, -2, -2, -2, 2451,
	-2, 615, -2, 622, 2455, 2340, 627, 0, 629, -2,
	632, 1220, 1222, 1224, 720, 721, 2041, 0, 0, 0,
	0, 0, 36, 37, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1106, 1107, 1108, 0, 207,
	209, -2, -2, -2, -2, 0, 0, 2380, 2140, 1998,
	2057, 2001, 1996, 288, 290, 292, 293, 0, 0, 0,
	0, 0, 0, 318, 321, 323, 325, -2, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	952, 944, 945, 1163, 0, 0, 0, -2, 426, 428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 354,
	483, 484, 0, 1371, 1371, 0, 0, 0, 0, 262,
	253, 894, 896, 897, 0, 0, 0, 0, 572, 574,
	0, 0, 235, 899, 901, 902, 0, 0, 0, 0,
	0, 264, 0, 0, 588, 590, 592, 657, 659, 661,
	663, 665, 667, 669, 671, 674, 676, 678, 680, 682,
	684, 686, 688, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 709, 711, 713, 715, 717, 728, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 812, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 731,
	733, 734, 735, 0, 792, 810, 811, 820, 719, 0,
	1097, 1372, 1246, 1227, 1241, 1246, 1229, 1230, 1231, 1232,
	1233, 1238, 1240, 1234, 1235, 1236, 39, 41, 43, 45,
	47, 49, 51, 53, 55, 377, 379, 381, 383, 385,
	388, 390, 392, -2, 1341, 1342, 432, 434, 436, 438,
	440, 442, 444, 575, 0, 577, 0, 732, -2, 0,
	1376, 1376, 1376, 0, 0, 1342, 1340, 0, 580, 581,
	636, 637, 1641, 0, 0, 0, 0, 0, 0, 0,
	1895, 1727, 0, 638, -2, 1758, 1760, 2426, 2451, 1894,
	1762, 1763, 1764, 1765, 1766, 0, 1768, 1769, 1770, 1771,
	1772, 1773, 0, 1775, 0, 1780, 1781, 1782, 0, 2433,
	1975, 2051, -2, 0, 0, 2439, 2047, 0, 1861, 1798,
	-2, -2, 2074, 2053, 1573, 1574, 1575, 1576, 1577, -2,
	-2, 2469, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 0, 2414, 2434, 2435, 2440, 2442, 2436,
	2423, 1823, 2152, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1600, 1609, -2, -2,
	-2, -2, -2, -2, -2, 2427, 2428, 2445, 2448, 2454,
	2459, 2460, 2432, 2441, 2468, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 1601, -2, -2, -2, -2, 1359, 2311, 1362, 1057,
	1360, 1344, 1346, 0, 1348, 0, 0, 0, 1353, 1379,
	1377, 0, 1426, 1357, 1358, 1444, 1444, 1468, 0, 1449,
	0, 1468, 1371, 1494, 0, 1455, 2330, 1799, 1800, 0,
	2057, 2052, -2, -2, 2466, 0, 0, 0, 0, 0,
	0, 0, 541, 0, 547, 549, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1243, 1162, 585, 586, 0,
	610, 0, 614, 2422, -2, 0, 2349, -2, 618, 1247,
	1251, 1252, 1253, 1254, 1255, 0, 0, 0, 0, 1260,
	0, 0, 624, 0, 0, 611, 612, 630, 633, 0,
	723, 724, 725, 726, 727, 65, 0, 2434, 1494, 67,
	0, 2020, 2082, 2083, 2084, 2085, 2086, 2467, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2469, 70,
	0, 2434, 74, 0, 2434, 0, -2, 81, 0, 2026,
	84, 0, 2023, 93, 0, 2434, 0, 1995, -2, 0,
	182, 2034, 0, 921, 2036, -2, 2434, 1105, 265, 266,
	2070, 2071, 2078, 2079, 2080, 2081, 0, 0, 0, 0,
	884, 1992, 1997, 885, 2016, 886, 2002, 0, 294, 295,
	296, 297, 298, 0, 299, 2434, 301, 302, 0, 304,
	305, 2434, 307, 308, 0, 310, 0, 220, 221, 2434,
	329, 330, 0, 332, 333, 0, 335, 0, 0, 0,
	339, -2, 355, 0, 352, 342, 343, 345, 346, 347,
	348, 349, 0, 396, 394, 2031, 0, 914, 2434, 0,
	918, -2, 2037, 0, 0, 1142, -2, 2434, 1102, 0,
	1148, 1144, 0, -2, 0, 1369, 2434, 1264, 948, 949,
	950, 951, 1506, 415, 0, 1279, 0, 1281, 0, 1300,
	1500, 1444, 0, 0, 1505, 0, 357, 358, 359, 360,
	361, 2434, 0, 0, 0, 366, 0, 368, 369, 370,
	371, 372, 373, 374, 171, 2434, 449, 476, 0, 171,
	2434, 452, 171, 2434, 455, 0, 458, 1161, 171, 2434,
	461, 171, 2434, 464, 466, 171, 2434, 470, 471, 473,
	2434, 475, 267, 1213, 1214, 1215, 1216, 0, -2, 534,
	2040, -2, 486, 0, 487, 0, -2, 0, 279, 0,
	0, 903, 904, 905, 906, 907, 910, 911, 912, 913,
	1481, 238, 236, 0, 0, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 0, 0, 595, 0, 0, 729,
	730, 0, 0, 740, 741, 742, 0, 279, 2341, 2307,
	2172, 749, 0, 752, 755, -2, 0, 0, 0, 0,
	759, 0, 764, 765, 766, 0, 768, 770, 892, 772,
	0, 0, 774, 0, 778, 0, 781, 0, 783, 0,
	785, -2, -2, -2, -2, 796, -2, 0, 799, 801,
	0, 803, -2, 0, 812, 808, 809, 0, 0, 0,
	0, 828, 829, 0, 838, 0, 841, 842, 843, 0,
	845, 846, 0, 848, 849, 850, 851, 0, 853, 854,
	-2, -2, 858, 860, 0, 867, 0, 871, 0, 875,
	0, 736, 737, 171, 1498, 1226, -2, 1228, 0, -2,
	0, 576, 0, 579, 1399, 1327, 1324, 0, 1396, 1397,
	1328, 0, 0, 0, 1335, 0, 1374, 1375, 0, 0,
	0, 1314, 1315, 0, 0, 0, 0, 1900, 1901, 1902,
	1903, 1904, 1905, 1908, 1909, 1906, 1907, 1910, 1911, 0,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1913, 1914, 1915, 0,
	0, 1917, 0, 1919, 0, 0, 0, 0, 0, 0,
	1706, 1708, 1983, 0, 0, 1916, 1646, 1647, 1648, 1649,
	1650, 1685, 1686, 0, 0, 1759, 1980, 1979, 1761, 0,
	1931, 0, 1774, -2, 0, 1895, 1926, 0, 0, 1783,
	1784, 1785, 0, 0, 1931, 0, 0, 1974, 1795, 1796,
	1638, 0, 0, 1863, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1587, 1586, 0, 1588, 0, 1589, 1590, 1597, 1610,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 1955, -2, 0, 0, 0, 0, 1602, 0,
	1361, 0, 0, 1430, 1984, 1988, 1989, 1430, 1430, 0,
	0, 1932, 1491, 1491, 0, 0, 1487, 1487, 1487, 1485,
	1468, 0, 1468, 1478, 0, 1468, 1468, 0, -2, 1449,
	0, 0, 1478, 0, 1462, 522, 524, 526, 528, 529,
	530, 532, 1495, 1496, 0, 0, 0, 0, 2058, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 2390,
	2340, 552, 566, 1371, 0, 1934, 1521, 1525, 0, 1527,
	1528, 1529, 1530, 1531, 0, 0, 1522, -2, 1598, 1600,
	1621, 2075, 2076, 2077, 1581, 1582, 1583, 1584, 1585, 1593,
	1580, 1580, 1580, 1591, 1620, 1612, 1620, 1616, 1566, 1567,
	1568, 1603, 1604, 1605, 1606, 0, 2390, 2340, 558, 0,
	0, 1311, 186, 188, 189, 190, 0, 0, 0, 0,
	-2, 620, 625, 626, 0, 1249, 0, 1256, 647, 648,
	649, 1258, 1259, 0, 1261, 623, 650, 651, 652, 653,
	654, 655, 0, 2004, 2005, 2006, 2007, 2010, 2011, 0,
	0, 621, 640, 628, 0, 634, 94, 1199, 0, 133,
	0, 1199, 1199, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 118, 129, 106, 107, 0,
	0, 0, 0, 0, 75, 1079, 0, 1082, 0, 0,
	0, 0, 0, 0, 0, 1095, 0, 0, 0, 0,
	117, 0, 0, 112, 96, 0, 0, 0, 119, 131,
	0, 162, 164, 0, 0, 0, 0, 0, 0, 181,
	191, 0, 0, 0, 0, 1103, 0, 1368, 0, 0,
	2434, 0, 1481, 2217, -2, -2, 1481, 883, 0, 0,
	2058, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 334, 336, 337, 338, 0, 1141, 0, 344, 386,
	1028, 2434, 0, 0, 413, 408, 0, 410, 0, 0,
	1078, 2434, 1076, 2035, 0, 1100, 0, 1057, 2434, 2033,
	0, 0, 1149, 2067, 1158, 1162, 1266, 0, 417, 0,
	1282, 1284, 0, 0, 1501, 0, 1503, 1444, 356, 0,
	363, 364, 365, 0, 445, 0, 169, 170, 0, 171,
	2434, 450, 0, 453, 0, 171, 2434, 1990, 459, 0,
	462, 0, 0, 468, 0, 0, 0, 0, 1371, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	242, 0, 1480, 0, 1481, 236, 279, 279, 1481, 597,
	1481, 599, 0, 0, 743, 744, 0, 279, 279, 279,
	750, 751, 753, 754, -2, -2, -2, 868, 756, 757,
	835, 0, 0, 0, 834, 771, 0, 877, 2326, 2340,
	2390, 890, 835, 2140, 835, 2140, 835, 2140, 782, 784,
	787, 823, 831, 795, 800, 0, 0, 805, 813, -2,
	0, 815, 0, 817, 0, 819, 835, 836, 839, 844,
	847, 852, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 1239, 1399, 1327, 578, 1318, 1398, 1319, 1326, 1329,
	0, 0, 1331, 0, 1333, 0, 1394, 1395, 1402, 1403,
	0, 1413, 1414, 1406, 0, -2, 0, 0, 1409, 1410,
	1337, 0, 1354, 1355, 1356, 1383, 1386, 1177, 0, 2567,
	1642, 1516, 1643, 1644, 2019, 0, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, -2, -2, -2, -2,
	-2, -2, -2, -2, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, -2, -2, -2, 1683, 1684,
	-2, 1918, 1920, 0, 1983, 0, -2, 0, -2, -2,
	-2, -2, 1703, 0, 1705, 1710, 1712, 1714, 0, 0,
	0, 0, 1982, 1724, 1966, 1967, 0, 0, 1897, 1898,
	1899, 1709, 0, 1728, 1981, 1978, 0, 0, 1930, 1382,
	1787, 0, 0, 0, 0, 1794, 1779, 1928, 0, 1927,
	0, 0, 0, 1938, 0, 1973, 1969, 0, 2017, 1637,
	1624, 1625, 1626, 1627, 1628, 1629, 1639, 0, 2014, 2044,
	2050, 1871, 0, 0, 0, 1824, 1825, 1826, 1827, 1828,
	0, 1830, 1831, 0, 1833, 1834, 0, 1836, 1837, 0,
	1839, 1840, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1534, 0, 0, 0, 1538, 0, 0, 0, 1542, 0,
	0, 0, 1546, 0, 0, 0, 1550, 0, 0, 0,
	1554, 0, 0, 0, 1558, 0, 0, 0, 1562, 0,
	0, 0, 0, 0, 1843, 0, 1941, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1845, 0, 1847, 1932,
	1952, 0, 0, 1729, 0, 0, 0, 1895, 0, 1850,
	1932, 1960, 0, 0, 0, 0, 0, 1932, 0, 1965,
	0, 1857, 0, 1859, 1363, 0, 0, 1511, 0, 0,
	0, 1987, 1511, 1511, 0, 1425, 0, 0, 1488, 1489,
	1490, 0, 0, 1491, 0, 1482, 1486, 1483, 1484, 1478,
	1441, 0, 0, 2021, 1478, 1447, 1477, 0, 1057, 1467,
	1478, 1478, 0, -2, 1451, 1468, 0, 0, 523, 525,
	527, 531, 533, 0, 0, 1382, -2, 0, -2, 1056,
	0, 0, 0, 0, 542, 544, 0, 0, 465, 0,
	0, 536, 0, 539, 0, 1512, 1515, 0, 0, 1526,
	1532, 1533, 0, -2, 0, 0, 1622, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 613, 0, 1248, 1257,
	0, 644, 0, 646, 0, 2008, 2012, 2009, 2013, 0,
	635, 0, 0, 0, 0, 1198, 0, 137, 2434, 0,
	173, 0, 0, 1021, 2027, 0, 0, 0, 0, 2159,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 108, 0, 0, 0,
	0, 0, 0, 0, 0, 1080, 1081, 1083, 1090, 1092,
	0, 1086, 2015, 0, 0, 1087, 0, 1089, 1091, 1093,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 109, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1137, 1135, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 0, 0, -2, 0, 0, 0, 0, 212,
	0, 270, 1993, 2003, 0, 908, 909, 300, 303, 306,
	309, 208, 0, 340, 0, 0, 954, 929, 0, 0,
	395, 279, 0, 0, 409, 2067, 916, 1074, 1077, 0,
	1057, 2434, 1114, 0, 0, 0, 0, 0, 0, 1147,
	0, 2434, 2022, 2066, 2067, 1268, 1276, 0, 1511, 0,
	1298, 1285, 0, 0, 0, 1298, 1302, 1303, 1305, 1306,
	0, 0, 1502, 1508, 0, 367, 477, 171, 447, 0,
	171, 171, 456, 0, 0, 171, 467, 171, 472, 171,
	268, 474, 485, 535, 1371, 1371, 279, 277, 2276, 275,
	272, 274, 0, 0, 0, 955, 957, 958, 959, 960,
	0, 2067, 0, 2206, 2067, 0, 1288, 1290, 0, 232,
	0, 239, 237, 242, 0, 0, 407, 596, 601, 738,
	0, 279, 746, 747, 748, 789, 825, 833, 758, 760,
	761, 762, 0, 891, 887, 888, 889, 773, 835, 776,
	835, 779, 835, 798, 802, 807, 814, 0, 0, 0,
	827, 0, 0, 0, 0, 0, 0, 0, 872, 873,
	874, 876, 1499, 1322, 1323, 1325, 0, 1334, 0, 0,
	1408, -2, -2, 1407, 1411, 1412, -2, -2, -2, -2,
	1330, 0, 1339, 1336, 0, 1393, 1175, 1176, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1725, 0, -2,
	1704, 1707, 1711, 1713, 1715, 0, 0, 0, 0, 0,
	0, 1921, 0, 1923, 1726, 1976, 1979, 1893, 0, 0,
	1381, 1382, 1382, 0, 1793, 0, 1929, 0, 1936, 1937,
	0, 1786, 0, 1970, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1829, 1832,
	1835, 1838, 0, 0, 0, 0, 1818, 0, 0, 0,
	1822, 1592, 1578, 0, 1620, 1618, 1619, 1613, 1620, 1617,
	1570, 0, 1535, 1536, 1537, 1539, 1540, 1541, 1543, 1544,
	1545, 1547, 1548, 1549, 1551, 1552, 1553, 1555, 1556, 1557,
	1559, 1560, 1561, 1563, 1564, 1565, 1569, 0, 1842, 0,
	1844, 1846, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1849, 1958, 1959, 0, 0, 0, 0, 0, 0,
	1855, 0, 1964, 1856, 1858, 1371, 0, 1364, 0, 1427,
	1416, 1510, 0, 1985, 1481, 1429, 1431, 1986, 2024, 1416,
	1416, 0, 1933, 0, 0, 1472, 0, 0, 0, 1474,
	1445, 0, 0, 1439, 0, 1435, 1436, 1437, 1438, 1446,
	1057, 1476, 1448, 1452, 2044, 0, 1478, 0, 1463, 0,
	1465, 1497, 0, 1457, 1460, 0, 0, 2059, 1511, 0,
	311, 315, 316, 312, 313, 314, 551, 0, 0, 0,
	0, 1935, 0, 1517, 0, 1523, 0, 0, 0, 0,
	557, 0, 0, 0, 187, 1310, 198, 0, 609, -2,
	642, 643, 645, 0, 641, 134, 1199, 0, 0, 1180,
	1182, 0, 139, 2434, 148, 0, 995, 0, 2025, 0,
	0, 0, 0, 0, 1201, 0, 0, 2434, 171, 2434,
	171, 151, 153, 156, 0, 161, 158, 159, 0, 0,
	986, 95, 1199, 0, 98, 102, 110, 0, 0, 0,
	116, 0, 0, 0, 1184, 1190, 0, 0, 1084, 1085,
	1088, 1094, 76, 0, 0, 1188, 1194, 82, 0, 1179,
	163, 100, 104, 111, 0, 1196, 97, 0, 185, 0,
	0, 0, 177, 0, 178, 179, 192, 0, 171, 2434,
	0, 919, 920, 1136, 1098, 1099, 0, 1104, 0, 0,
	0, 1481, 204, 0, 1481, 212, 0, 1999, 0, 328,
	0, 0, 0, 0, 953, 1039, 0, 924, 0, 0,
	0, 401, 397, 0, 406, 412, 411, 915, 0, 0,
	0, 0, -2, 0, 0, 1151, 1145, 1146, 0, 0,
	0, 2434, 1270, 1276, 0, 1275, 1369, 1382, 416, 1277,
	1298, 0, 0, 0, 1287, 1283, 1280, 1511, 0, 0,
	0, 0, 0, 1504, 1507, 362, 446, 171, 451, 454,
	1991, 171, 460, 463, 469, 488, 489, 254, 0, 0,
	0, 0, 0, 279, 0, 0, 0, 964, 0, 2067,
	2067, 0, 2029, 0, 0, 0, 0, 240, 0, 243,
	0, 0, 0, 248, 249, 250, 251, 252, 233, 1481,
	0, 598, 0, 0, 745, 0, 775, 777, 780, 816,
	818, 835, 861, 862, 981, 0, 981, 0, 0, 1332,
	0, 1405, 1338, 1387, 1388, 0, 1177, 0, 1645, 1688,
	0, 0, -2, 0, 0, 1692, 0, 0, 0, -2,
	0, 0, 0, 1922, 1924, 0, 1978, 1788, 0, 0,
	0, 1792, 1776, 1777, 0, 1896, 1939, 1968, 1972, 0,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 0, 2018, 2045,
	2049, 1869, 1870, 1874, 2032, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 1611, 1615, 0,
	0, 1940, 1951, 1953, 1730, 1731, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, -2, -2, -2, 1748,
	1749, 1750, -2, -2, -2, 0, 0, 0, 1954, 1956,
	1957, 1961, 1962, 0, 1852, 1853, 1854, 1963, 0, 1371,
	1365, 1424, 0, 1509, 1428, 0, 1424, 1424, 1378, 1470,
	0, 0, 1493, 0, 1442, 0, 1443, 0, 1475, 0,
	1450, 1453, 1454, 1464, 0, 1456, 0, 1459, 0, 1788,
	-2, 280, 281, 283, 0, 286, 554, 555, 553, 537,
	0, 0, 1519, 0, 0, 1595, 1599, 1623, 560, 561,
	559, 200, 0, 1479, 0, 0, 0, 0, 172, 993,
	1020, 0, 0, 0, 1165, 1172, 0, -2, 0, 0,
	1026, 141, 0, 0, 0, 149, 0, 0, 146, 0,
	155, 160, 0, 0, 0, 0, 0, 0, 113, 114,
	115, 0, 120, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 1174, 0,
	0, 194, 0, 0, 0, 1139, 1140, 1185, 1191, 0,
	0, 212, 210, 0, 213, 0, 216, 217, 0, 212,
	206, 0, 0, 1057, 341, 927, 1027, 0, 1029, 0,
	925, 0, 0, 1028, 393, 0, 400, 0, 0, 1078,
	0, 0, 1101, 1112, 1057, 0, 1150, 1152, 1160, 0,
	0, 0, 1272, 1276, 0, 1265, 1266, 1401, 1278, 1296,
	-2, 0, 0, 1382, 1304, 1301, 1307, 1308, 0, 448,
	457, 276, 0, 271, 273, 0, 257, 0, 0, 956,
	961, 0, 0, 0, 0, 0, 1289, 1291, 0, 0,
	0, 0, 0, 0, 242, 263, 0, 739, 763, 826,
	863, 980, 0, 0, 865, 0, 0, 1404, 1391, 1392,
	1389, 1177, 1690, 1694, 0, 0, 0, 1696, -2, 0,
	1718, -2, -2, 1925, 1977, 1767, 1382, 1789, 1791, 1778,
	1971, 1640, 0, 1876, 1873, 0, 1860, 0, 1813, 1814,
	0, 0, 1817, 1819, 1820, 1821, 1579, 1572, 1571, 1950,
	0, 0, 0, 0, 1851, 1366, 0, 1865, 0, 0,
	1432, 1865, 1865, 1471, 0, 1473, 1440, 1433, 0, 2045,
	1466, 1458, 0, 0, 284, 0, 1513, 1518, 0, 1524,
	1594, 201, 135, 136, 138, 0, 994, 0, 997, 0,
	0, 0, 0, 1004, 1005, 0, 0, 0, 0, 0,
	1014, 0, 1043, 1053, 0, 1167, 1177, 1171, 0, 1169,
	0, 0, 0, 143, 166, 0, 0, 1200, 0, 0,
	171, 171, 0, 0, 1181, 1183, 0, 0, 0, 0,
	123, 0, 0, 1186, 1192, 1189, 1195, 0, 0, 0,
	1197, 183, 184, 0, 171, 0, 176, 171, 171, 1174,
	0, 0, 0, 203, 0, 0, 0, 0, 205, 269,
	212, 0, 975, 0, 1039, 1031, 1032, 1033, 0, 1038,
	1040, 0, 0, 941, 926, 0, 937, 0, 0, 954,
	929, 0, 398, 917, 1075, 1109, 1057, 0, 1143, 0,
	0, 0, 0, 0, 0, 1274, 1276, 0, 1267, 1268,
	1298, 1400, 0, 0, 0, 1286, 1401, 0, 278, 279,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	244, 0, 245, 246, 247, 234, 600, 602, 0, 0,
	608, 979, 0, 0, 0, 0, 1390, 1698, -2, -2,
	1719, 0, 2046, 2048, 1382, 0, 1862, 1384, 0, 0,
	-2, 0, 0, 0, 1367, 1350, 0, 1423, 1415, 1417,
	1419, 2329, 2136, 2433, 1351, 1352, 1492, 0, 1461, 285,
	0, 1520, 140, 0, 998, 999, 2028, 1001, 0, 1003,
	1006, 0, 1009, 2069, 0, 1013, 0, 1022, 1044, 0,
	975, 0, 1049, 1050, 1051, 1166, 1393, 1172, 1055, 0,
	142, 144, 165, 1174, 0, 145, 154, 0, 0, 99,
	0, 0, 2131, 126, 124, 122, 1178, 101, 0, 185,
	193, 1173, 180, 195, 171, 0, 1187, 1193, 214, 0,
	215, 218, 0, 0, 983, 0, 928, 1030, 0, 1041,
	1042, 931, 0, 930, 0, 0, 0, 0, 0, 399,
	402, 0, 405, 0, 0, 1153, 0, 1159, 0, 0,
	0, 1262, 0, 0, 1269, 1270, 414, 1292, 0, 0,
	1298, 1309, 256, 0, 0, 962, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 963, 1055, 0, 0, 1019,
	0, 261, 241, 0, 604, 0, 606, 0, 864, 866,
	0, 0, 1790, 1880, 0, 0, 1815, 1816, -2, 0,
	1756, 1864, 1866, 0, 0, 0, 0, 0, 1434, 1514,
	996, 1000, 0, 0, 0, 1061, 0, 0, 1015, 0,
	1047, 1048, 983, 0, 1170, 1168, 975, 0, 0, 168,
	0, 0, 0, 0, 0, 0, 0, 175, 196, 1174,
	211, 228, 0, 1110, 929, 982, 0, 0, 939, 0,
	942, 0, 938, 935, 936, 927, 0, 403, 404, 0,
	1113, 0, 1160, 0, 0, 1276, 1271, 1272, 1511, 1295,
	1299, 0, 0, 1053, 1055, 929, 0, 603, 0, 0,
	869, 870, 0, 0, 0, 0, 1875, 1385, 1757, 0,
	0, 1418, 1420, 1421, 1422, 0, 0, 1008, 1066, 0,
	0, 0, 1045, 1046, 1043, 0, 1024, 0, 1057, 147,
	0, 1055, 0, 987, 0, 0, 990, 0, 0, 127,
	2131, 125, 0, 171, 231, 0, 225, 223, 224, 931,
	0, 0, 1035, 1037, 0, 943, 975, 941, 1111, 1055,
	0, 1053, 0, 0, 1274, 0, 279, 279, 975, 1053,
	1511, 0, 279, 605, 607, 1872, 1892, 1881, -2, 2393,
	2137, 0, 1892, 1892, 1867, 1868, 0, 0, 1010, 1062,
	1063, 0, 1058, 1059, 1060, 2068, 1011, 1012, 1511, 1052,
	0, 1061, 167, 975, 984, 0, 0, 985, 0, 0,
	130, 0, 132, 197, 219, 0, 0, 922, 0, 1034,
	0, 0, 0, 0, 983, 931, 1053, 0, 975, 0,
	1273, 1263, 0, 258, 259, 983, 975, 1018, 260, 1877,
	0, 0, 1883, 1884, 1885, 1886, 1887, 1878, 1879, 1002,
	0, 1064, 0, 1065, 0, 0, 0, 1023, 0, 1066,
	152, 988, 0, 991, 0, 128, 0, 226, 227, 0,
	1036, 932, 0, 934, 929, 940, 975, 0, 983, 0,
	1293, 0, 929, 983, 0, 1889, 1890, 0, 0, 0,
	1067, 0, 1070, 1071, 0, 1068, 0, 1043, 0, 0,
	0, 0, 933, 931, 983, 1055, 929, 1053, 0, 1511,
	929, 1888, 1891, 1882, 1007, 1069, 1072, 1073, 1054, 1025,
	0, 0, 229, 0, 978, 923, 929, 1053, 1511, 975,
	1511, 1016, 1511, 983, 0, 0, 974, 976, 977, 1511,
	975, 1156, 983, 1294, 1017, 989, 0, 230, 1154, 983,
	929, 0, 929, 1511, 0, 1511, 1157, 983, 1155, 992,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 551, 3, 557, 552, 3,
	562, 563, 555, 553, 567, 554, 564, 556, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 570, 3,
	543, 545, 544, 548, 566, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 560, 3, 561, 558, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 568, 550, 569, 546,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 547, 57886, 549, 57887, 559, 57888, 565, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1238
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1264
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1285
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1367
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1380
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1397
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1401
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1405
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1423
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1427
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1448
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1488
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1498
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1504
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1524
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1528
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1542
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1552
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1556
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1566
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1577
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1584
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1596
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1603
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1611
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1616
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1620
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1625
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1631
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1650
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1660
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1670
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1679
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1690
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1696
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1704
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1708
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1727
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1738
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1818
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1847
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1856
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 152:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1896
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1916
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1938
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1960
		{
			sqlVAL.union.val = nil
		}
	case 169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 173:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1985
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2060
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2069
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2073
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2076
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2094
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2136
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2210
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2219
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2254
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2365
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = nil
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2480
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2604
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2609
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2613
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2619
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2624
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2629
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2639
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2643
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2662
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2670
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2746
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2796
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2797
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2799
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2817
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2826
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2853
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2862
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2889
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2898
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2949
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CREATE")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "create access method")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplemented(sqllex, "create cast")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "create operator")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "create publication")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "create rule")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplemented(sqllex, "create server")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2984
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2990
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2993
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2994
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2997
		{
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2998
		{
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3001
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3007
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3008
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3009
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3012
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3016
		{
			return unimplemented(sqllex, "drop server")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3017
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3019
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3023
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3030
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3100
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3111
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3139
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3159
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3174
		{

			sqlVAL.union.val = nil
		}
	case 414:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "DELETE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3202
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3228
		{
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "DROP")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3232
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3233
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3438
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3461
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3503
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3527
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3535
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "DELETE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "INSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "DELETE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3578
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3579
		{
			return helpWith(sqllex, "INSERT")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3585
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3586
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3612
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3620
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3628
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3645
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3686
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3708
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "GRANT")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3780
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3789
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "RESET")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "RESET")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3863
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3865
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3871
		{
			return helpWith(sqllex, "USE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3971
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4051
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4070
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4077
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4092
		{
			return unimplemented(sqllex, "set from current")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4106
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.Low
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.Normal
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.High
		}
	case 650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4269
		{
			return helpWith(sqllex, "SHOW")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4270
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4275
		{
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4276
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4279
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4293
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4303
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.str = "client_encoding"
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.str = "timezone"
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4348
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4411
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4420
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4442
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4450
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4537
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = true
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4616
		{
			sqlVAL.union.val = true
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = false
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4692
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4700
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4739
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = true
		}
	case 821:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = false
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4781
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = true
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4848
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4859
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4872
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4885
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4890
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4902
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4906
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4949
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4957
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4994
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5017
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5033
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5173
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5225
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "RESUME")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5306
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5315
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5457
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5472
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5490
		{

			sqlVAL.union.val = nil
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.str = ""
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5506
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = nil
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5517
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5528
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5533
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 939:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5565
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5579
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5594
		{
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5595
		{
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5668
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5679
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5682
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5685
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5686
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5692
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5713
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5724
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.str = ""
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 992:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5879
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5898
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5902
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5916
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5927
		{
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5961
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6026
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6064
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6079
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6139
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6144
		{
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6146
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6167
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6171
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6221
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6305
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6314
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6353
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6355
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6358
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6361
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6363
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6376
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6416
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = true
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{

			sqlVAL.union.val = true
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = false
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6441
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6455
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6467
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6479
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6489
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6499
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = nil
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6609
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6628
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6630
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6632
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6634
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6636
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6640
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6674
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6692
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6711
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6728
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6745
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = false
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = true
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = false
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = true
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = false
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6803
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6808
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6813
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6821
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6845
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.str = ""
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.str = ""
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6880
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6886
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6930
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6956
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6962
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6994
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7000
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7018
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7021
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7022
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7060
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7081
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7089
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7110
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7118
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7134
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7154
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7172
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7188
		{
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7209
		{
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7217
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7237
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7256
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.str = ""
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.str = ""
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7375
		{
			sqlVAL.str = ""
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7389
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7395
		{
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7424
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7442
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7455
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7504
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7531
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7573
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7625
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7719
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7754
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7755
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7769
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7871
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7927
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = true
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = false
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7980
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = nil
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = true
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = false
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = false
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = true
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8024
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8025
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8092
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8121
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8154
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8180
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8213
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8248
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8250
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8280
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8282
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8315
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8319
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8371
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8420
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8455
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8466
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8496
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8529
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = nil
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = true
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = false
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.str = tree.AstFull
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.str = tree.AstRight
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.str = tree.AstInner
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8649
		{
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.str = tree.AstHash
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.str = ""
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8711
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8734
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8740
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8746
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8756
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = true
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = false
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = true
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = false
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8818
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8826
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8845
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8847
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8855
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8875
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8943
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8947
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8949
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8950
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8951
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8953
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8956
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8957
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8958
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8959
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8962
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8963
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8965
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8967
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8969
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8971
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = types.Geography
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8986
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8994
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9020
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9028
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = nil
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = types.Int2
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = types.Int
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = types.Float4
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = types.Float
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9079
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9087
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = types.Bool
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9101
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = types.Float
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9120
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9148
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9178
		{
			sqlVAL.union.val = types.String
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = true
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = false
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = types.Date
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9205
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9219
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9228
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9236
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9253
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = true
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = false
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = false
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = types.Interval
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9277
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9312
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9334
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = nil
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9406
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9466
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9784
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9830
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10000
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10005
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10031
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10055
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10061
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10070
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10082
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10096
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10097
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10112
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10121
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10187
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10312
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10368
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10383
		{
			return unimplemented(sqllex, "treat")
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10404
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10409
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.str = ""
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10558
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10655
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10667
		{
			sqlVAL.union.val = tree.Any
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.Some
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = tree.All
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10683
		{
			sqlVAL.union.val = tree.Div
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = tree.LT
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = tree.GT
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = tree.LE
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.GE
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = tree.NE
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = tree.Like
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11017
		{
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11097
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11166
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11170
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11195
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11206
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11215
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11223
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11235
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11371
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11375
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11435
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.str = ""
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
