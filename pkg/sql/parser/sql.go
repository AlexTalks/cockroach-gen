// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}

//line sql-gen.y:932
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14610

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1731,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 454,
	-2, 0,
	-1, 71,
	8, 903,
	29, 903,
	622, 903,
	623, 903,
	-2, 0,
	-1, 72,
	8, 903,
	29, 903,
	622, 903,
	623, 903,
	-2, 0,
	-1, 79,
	254, 268,
	544, 268,
	-2, 0,
	-1, 92,
	242, 1462,
	256, 1462,
	272, 450,
	410, 450,
	422, 1206,
	464, 450,
	478, 1206,
	528, 1206,
	556, 450,
	583, 1206,
	-2, 0,
	-1, 98,
	137, 1731,
	249, 1731,
	567, 1731,
	568, 1731,
	-2, 0,
	-1, 116,
	156, 1702,
	176, 1702,
	189, 1702,
	252, 1702,
	285, 1702,
	359, 1702,
	370, 1702,
	562, 1702,
	-2, 1673,
	-1, 158,
	164, 1035,
	271, 1035,
	413, 996,
	483, 996,
	527, 996,
	547, 1035,
	549, 996,
	-2, 0,
	-1, 163,
	4, 1733,
	21, 1733,
	22, 1733,
	23, 1733,
	24, 1733,
	25, 1733,
	26, 1733,
	27, 1733,
	28, 1733,
	30, 1733,
	31, 1733,
	37, 1733,
	41, 1733,
	43, 1733,
	44, 1733,
	46, 1733,
	47, 1733,
	48, 1733,
	49, 1733,
	50, 1733,
	51, 1733,
	52, 1733,
	53, 1733,
	54, 1733,
	56, 1733,
	57, 1733,
	58, 1733,
	59, 1733,
	61, 1733,
	62, 1733,
	63, 1733,
	64, 1733,
	65, 1733,
	66, 1733,
	67, 1733,
	71, 1733,
	72, 1733,
	73, 1733,
	74, 1733,
	76, 1733,
	77, 1733,
	78, 1733,
	82, 1733,
	83, 1733,
	84, 1733,
	85, 1733,
	86, 1733,
	87, 1733,
	88, 1733,
	89, 1733,
	92, 1733,
	93, 1733,
	94, 1733,
	95, 1733,
	96, 1733,
	98, 1733,
	100, 1733,
	101, 1733,
	102, 1733,
	103, 1733,
	104, 1733,
	105, 1733,
	107, 1733,
	108, 1733,
	109, 1733,
	111, 1733,
	112, 1733,
	113, 1733,
	121, 1733,
	122, 1733,
	123, 1733,
	124, 1733,
	125, 1733,
	127, 1733,
	128, 1733,
	129, 1733,
	130, 1733,
	132, 1733,
	133, 1733,
	134, 1733,
	136, 1733,
	137, 1733,
	138, 1733,
	140, 1733,
	141, 1733,
	142, 1733,
	145, 1733,
	146, 1733,
	147, 1733,
	149, 1733,
	150, 1733,
	151, 1733,
	153, 1733,
	154, 1733,
	155, 1733,
	157, 1733,
	158, 1733,
	159, 1733,
	160, 1733,
	161, 1733,
	162, 1733,
	163, 1733,
	164, 1733,
	165, 1733,
	166, 1733,
	167, 1733,
	168, 1733,
	169, 1733,
	170, 1733,
	171, 1733,
	172, 1733,
	173, 1733,
	175, 1733,
	181, 1733,
	182, 1733,
	183, 1733,
	184, 1733,
	188, 1733,
	190, 1733,
	191, 1733,
	192, 1733,
	194, 1733,
	195, 1733,
	198, 1733,
	199, 1733,
	200, 1733,
	201, 1733,
	202, 1733,
	203, 1733,
	204, 1733,
	205, 1733,
	206, 1733,
	207, 1733,
	208, 1733,
	209, 1733,
	210, 1733,
	211, 1733,
	213, 1733,
	214, 1733,
	216, 1733,
	217, 1733,
	219, 1733,
	220, 1733,
	221, 1733,
	222, 1733,
	223, 1733,
	224, 1733,
	225, 1733,
	226, 1733,
	227, 1733,
	228, 1733,
	229, 1733,
	231, 1733,
	232, 1733,
	234, 1733,
	235, 1733,
	236, 1733,
	237, 1733,
	238, 1733,
	242, 1733,
	243, 1733,
	244, 1733,
	245, 1733,
	248, 1733,
	249, 1733,
	250, 1733,
	251, 1733,
	253, 1733,
	255, 1733,
	256, 1733,
	258, 1733,
	260, 1733,
	261, 1733,
	262, 1733,
	264, 1733,
	268, 1733,
	269, 1733,
	270, 1733,
	271, 1733,
	272, 1733,
	273, 1733,
	275, 1733,
	276, 1733,
	277, 1733,
	279, 1733,
	280, 1733,
	282, 1733,
	283, 1733,
	286, 1733,
	287, 1733,
	288, 1733,
	289, 1733,
	290, 1733,
	291, 1733,
	292, 1733,
	295, 1733,
	296, 1733,
	297, 1733,
	298, 1733,
	300, 1733,
	301, 1733,
	302, 1733,
	303, 1733,
	304, 1733,
	305, 1733,
	306, 1733,
	307, 1733,
	308, 1733,
	309, 1733,
	310, 1733,
	311, 1733,
	312, 1733,
	313, 1733,
	314, 1733,
	315, 1733,
	316, 1733,
	317, 1733,
	318, 1733,
	319, 1733,
	320, 1733,
	321, 1733,
	322, 1733,
	324, 1733,
	326, 1733,
	327, 1733,
	328, 1733,
	329, 1733,
	330, 1733,
	331, 1733,
	332, 1733,
	333, 1733,
	334, 1733,
	335, 1733,
	336, 1733,
	337, 1733,
	338, 1733,
	339, 1733,
	340, 1733,
	341, 1733,
	342, 1733,
	344, 1733,
	345, 1733,
	347, 1733,
	349, 1733,
	350, 1733,
	351, 1733,
	352, 1733,
	354, 1733,
	355, 1733,
	356, 1733,
	357, 1733,
	358, 1733,
	361, 1733,
	363, 1733,
	365, 1733,
	366, 1733,
	367, 1733,
	368, 1733,
	371, 1733,
	372, 1733,
	373, 1733,
	375, 1733,
	377, 1733,
	378, 1733,
	379, 1733,
	380, 1733,
	381, 1733,
	382, 1733,
	383, 1733,
	384, 1733,
	385, 1733,
	386, 1733,
	387, 1733,
	388, 1733,
	389, 1733,
	391, 1733,
	392, 1733,
	393, 1733,
	394, 1733,
	395, 1733,
	396, 1733,
	397, 1733,
	398, 1733,
	399, 1733,
	400, 1733,
	401, 1733,
	402, 1733,
	403, 1733,
	404, 1733,
	405, 1733,
	407, 1733,
	408, 1733,
	409, 1733,
	411, 1733,
	412, 1733,
	413, 1733,
	414, 1733,
	415, 1733,
	416, 1733,
	417, 1733,
	418, 1733,
	419, 1733,
	420, 1733,
	421, 1733,
	422, 1733,
	423, 1733,
	424, 1733,
	426, 1733,
	428, 1733,
	429, 1733,
	430, 1733,
	436, 1733,
	437, 1733,
	438, 1733,
	440, 1733,
	441, 1733,
	442, 1733,
	443, 1733,
	444, 1733,
	445, 1733,
	446, 1733,
	447, 1733,
	448, 1733,
	449, 1733,
	450, 1733,
	452, 1733,
	453, 1733,
	454, 1733,
	456, 1733,
	457, 1733,
	458, 1733,
	459, 1733,
	460, 1733,
	461, 1733,
	462, 1733,
	464, 1733,
	465, 1733,
	466, 1733,
	467, 1733,
	468, 1733,
	469, 1733,
	470, 1733,
	471, 1733,
	472, 1733,
	473, 1733,
	474, 1733,
	475, 1733,
	476, 1733,
	478, 1733,
	479, 1733,
	480, 1733,
	481, 1733,
	482, 1733,
	483, 1733,
	485, 1733,
	486, 1733,
	487, 1733,
	488, 1733,
	489, 1733,
	490, 1733,
	492, 1733,
	493, 1733,
	494, 1733,
	495, 1733,
	496, 1733,
	497, 1733,
	498, 1733,
	499, 1733,
	501, 1733,
	503, 1733,
	504, 1733,
	505, 1733,
	506, 1733,
	507, 1733,
	508, 1733,
	509, 1733,
	510, 1733,
	511, 1733,
	512, 1733,
	513, 1733,
	514, 1733,
	515, 1733,
	516, 1733,
	517, 1733,
	518, 1733,
	519, 1733,
	520, 1733,
	521, 1733,
	523, 1733,
	524, 1733,
	526, 1733,
	527, 1733,
	529, 1733,
	530, 1733,
	531, 1733,
	532, 1733,
	533, 1733,
	534, 1733,
	536, 1733,
	537, 1733,
	539, 1733,
	540, 1733,
	541, 1733,
	542, 1733,
	543, 1733,
	545, 1733,
	547, 1733,
	548, 1733,
	549, 1733,
	550, 1733,
	551, 1733,
	552, 1733,
	553, 1733,
	555, 1733,
	556, 1733,
	557, 1733,
	558, 1733,
	560, 1733,
	561, 1733,
	564, 1733,
	565, 1733,
	566, 1733,
	567, 1733,
	568, 1733,
	569, 1733,
	570, 1733,
	571, 1733,
	573, 1733,
	576, 1733,
	577, 1733,
	578, 1733,
	579, 1733,
	580, 1733,
	581, 1733,
	583, 1733,
	584, 1733,
	585, 1733,
	586, 1733,
	587, 1733,
	588, 1733,
	589, 1733,
	590, 1733,
	595, 1733,
	596, 1733,
	597, 1733,
	598, 1733,
	599, 1733,
	600, 1733,
	-2, 0,
	-1, 164,
	1, 1581,
	135, 1581,
	260, 1581,
	346, 1581,
	408, 1581,
	418, 1581,
	604, 1581,
	635, 1581,
	-2, 0,
	-1, 166,
	1, 1581,
	635, 1581,
	-2, 0,
	-1, 167,
	1, 1581,
	635, 1581,
	-2, 0,
	-1, 168,
	1, 1581,
	544, 1581,
	635, 1581,
	-2, 0,
	-1, 200,
	156, 1701,
	176, 1701,
	189, 1701,
	252, 1701,
	285, 1701,
	359, 1701,
	370, 1701,
	562, 1701,
	-2, 1676,
	-1, 251,
	4, 1740,
	5, 1740,
	6, 1740,
	7, 1740,
	8, 1740,
	9, 1740,
	10, 1740,
	21, 1740,
	22, 1740,
	23, 1740,
	24, 1740,
	25, 1740,
	26, 1740,
	27, 1740,
	28, 1740,
	30, 1740,
	31, 1740,
	37, 1740,
	38, 1740,
	41, 1740,
	43, 1740,
	44, 1740,
	45, 1740,
	46, 1740,
	47, 1740,
	48, 1740,
	49, 1740,
	50, 1740,
	51, 1740,
	52, 1740,
	53, 1740,
	54, 1740,
	56, 1740,
	57, 1740,
	58, 1740,
	59, 1740,
	61, 1740,
	62, 1740,
	63, 1740,
	64, 1740,
	65, 1740,
	66, 1740,
	67, 1740,
	68, 1740,
	69, 1740,
	70, 1740,
	71, 1740,
	72, 1740,
	73, 1740,
	74, 1740,
	76, 1740,
	77, 1740,
	78, 1740,
	80, 1740,
	82, 1740,
	83, 1740,
	84, 1740,
	85, 1740,
	86, 1740,
	87, 1740,
	88, 1740,
	89, 1740,
	92, 1740,
	93, 1740,
	94, 1740,
	95, 1740,
	96, 1740,
	98, 1740,
	100, 1740,
	101, 1740,
	102, 1740,
	103, 1740,
	104, 1740,
	105, 1740,
	107, 1740,
	108, 1740,
	109, 1740,
	110, 1740,
	111, 1740,
	112, 1740,
	113, 1740,
	114, 1740,
	115, 1740,
	116, 1740,
	117, 1740,
	118, 1740,
	119, 1740,
	120, 1740,
	121, 1740,
	122, 1740,
	123, 1740,
	124, 1740,
	125, 1740,
	126, 1740,
	127, 1740,
	128, 1740,
	129, 1740,
	130, 1740,
	131, 1740,
	132, 1740,
	133, 1740,
	134, 1740,
	136, 1740,
	137, 1740,
	138, 1740,
	140, 1740,
	141, 1740,
	142, 1740,
	145, 1740,
	146, 1740,
	147, 1740,
	149, 1740,
	150, 1740,
	151, 1740,
	153, 1740,
	154, 1740,
	155, 1740,
	157, 1740,
	158, 1740,
	159, 1740,
	160, 1740,
	161, 1740,
	162, 1740,
	163, 1740,
	164, 1740,
	165, 1740,
	166, 1740,
	167, 1740,
	168, 1740,
	169, 1740,
	170, 1740,
	171, 1740,
	172, 1740,
	173, 1740,
	174, 1740,
	175, 1740,
	181, 1740,
	182, 1740,
	183, 1740,
	184, 1740,
	188, 1740,
	190, 1740,
	191, 1740,
	192, 1740,
	194, 1740,
	195, 1740,
	197, 1740,
	198, 1740,
	199, 1740,
	200, 1740,
	201, 1740,
	202, 1740,
	203, 1740,
	204, 1740,
	205, 1740,
	206, 1740,
	207, 1740,
	208, 1740,
	209, 1740,
	210, 1740,
	211, 1740,
	213, 1740,
	214, 1740,
	216, 1740,
	217, 1740,
	219, 1740,
	220, 1740,
	221, 1740,
	222, 1740,
	223, 1740,
	224, 1740,
	225, 1740,
	226, 1740,
	227, 1740,
	228, 1740,
	229, 1740,
	230, 1740,
	231, 1740,
	232, 1740,
	234, 1740,
	235, 1740,
	236, 1740,
	237, 1740,
	238, 1740,
	242, 1740,
	243, 1740,
	244, 1740,
	245, 1740,
	247, 1740,
	248, 1740,
	249, 1740,
	250, 1740,
	251, 1740,
	253, 1740,
	255, 1740,
	256, 1740,
	257, 1740,
	258, 1740,
	259, 1740,
	260, 1740,
	261, 1740,
	262, 1740,
	263, 1740,
	264, 1740,
	268, 1740,
	269, 1740,
	270, 1740,
	271, 1740,
	272, 1740,
	273, 1740,
	275, 1740,
	276, 1740,
	277, 1740,
	279, 1740,
	280, 1740,
	281, 1740,
	282, 1740,
	283, 1740,
	284, 1740,
	286, 1740,
	287, 1740,
	288, 1740,
	289, 1740,
	290, 1740,
	291, 1740,
	292, 1740,
	293, 1740,
	294, 1740,
	295, 1740,
	296, 1740,
	297, 1740,
	298, 1740,
	300, 1740,
	301, 1740,
	302, 1740,
	303, 1740,
	304, 1740,
	305, 1740,
	306, 1740,
	307, 1740,
	308, 1740,
	309, 1740,
	310, 1740,
	311, 1740,
	312, 1740,
	313, 1740,
	314, 1740,
	315, 1740,
	316, 1740,
	317, 1740,
	318, 1740,
	319, 1740,
	320, 1740,
	321, 1740,
	322, 1740,
	324, 1740,
	325, 1740,
	326, 1740,
	327, 1740,
	328, 1740,
	329, 1740,
	330, 1740,
	331, 1740,
	332, 1740,
	333, 1740,
	334, 1740,
	335, 1740,
	336, 1740,
	337, 1740,
	338, 1740,
	339, 1740,
	340, 1740,
	341, 1740,
	342, 1740,
	343, 1740,
	344, 1740,
	345, 1740,
	346, 1740,
	347, 1740,
	348, 1740,
	349, 1740,
	350, 1740,
	351, 1740,
	352, 1740,
	353, 1740,
	354, 1740,
	355, 1740,
	356, 1740,
	357, 1740,
	358, 1740,
	361, 1740,
	363, 1740,
	366, 1740,
	367, 1740,
	368, 1740,
	371, 1740,
	372, 1740,
	373, 1740,
	374, 1740,
	375, 1740,
	376, 1740,
	377, 1740,
	378, 1740,
	379, 1740,
	380, 1740,
	381, 1740,
	382, 1740,
	383, 1740,
	384, 1740,
	385, 1740,
	386, 1740,
	387, 1740,
	388, 1740,
	389, 1740,
	391, 1740,
	392, 1740,
	393, 1740,
	394, 1740,
	395, 1740,
	396, 1740,
	397, 1740,
	398, 1740,
	399, 1740,
	400, 1740,
	401, 1740,
	402, 1740,
	403, 1740,
	404, 1740,
	405, 1740,
	407, 1740,
	408, 1740,
	409, 1740,
	411, 1740,
	412, 1740,
	413, 1740,
	414, 1740,
	415, 1740,
	416, 1740,
	417, 1740,
	418, 1740,
	419, 1740,
	420, 1740,
	421, 1740,
	422, 1740,
	423, 1740,
	424, 1740,
	426, 1740,
	428, 1740,
	429, 1740,
	430, 1740,
	436, 1740,
	437, 1740,
	438, 1740,
	440, 1740,
	441, 1740,
	442, 1740,
	443, 1740,
	444, 1740,
	445, 1740,
	446, 1740,
	447, 1740,
	448, 1740,
	449, 1740,
	450, 1740,
	452, 1740,
	453, 1740,
	454, 1740,
	455, 1740,
	456, 1740,
	457, 1740,
	458, 1740,
	459, 1740,
	460, 1740,
	461, 1740,
	462, 1740,
	464, 1740,
	465, 1740,
	466, 1740,
	467, 1740,
	468, 1740,
	469, 1740,
	470, 1740,
	471, 1740,
	472, 1740,
	473, 1740,
	474, 1740,
	475, 1740,
	476, 1740,
	478, 1740,
	479, 1740,
	480, 1740,
	481, 1740,
	482, 1740,
	483, 1740,
	484, 1740,
	485, 1740,
	486, 1740,
	487, 1740,
	488, 1740,
	489, 1740,
	490, 1740,
	491, 1740,
	492, 1740,
	493, 1740,
	494, 1740,
	495, 1740,
	496, 1740,
	497, 1740,
	498, 1740,
	499, 1740,
	501, 1740,
	503, 1740,
	504, 1740,
	505, 1740,
	506, 1740,
	507, 1740,
	508, 1740,
	509, 1740,
	510, 1740,
	511, 1740,
	512, 1740,
	513, 1740,
	514, 1740,
	515, 1740,
	516, 1740,
	517, 1740,
	518, 1740,
	519, 1740,
	520, 1740,
	521, 1740,
	523, 1740,
	524, 1740,
	525, 1740,
	526, 1740,
	527, 1740,
	529, 1740,
	530, 1740,
	531, 1740,
	532, 1740,
	533, 1740,
	534, 1740,
	536, 1740,
	537, 1740,
	539, 1740,
	540, 1740,
	541, 1740,
	542, 1740,
	543, 1740,
	545, 1740,
	547, 1740,
	548, 1740,
	549, 1740,
	550, 1740,
	551, 1740,
	552, 1740,
	553, 1740,
	554, 1740,
	555, 1740,
	556, 1740,
	557, 1740,
	558, 1740,
	560, 1740,
	561, 1740,
	563, 1740,
	564, 1740,
	565, 1740,
	566, 1740,
	567, 1740,
	568, 1740,
	569, 1740,
	570, 1740,
	571, 1740,
	572, 1740,
	573, 1740,
	576, 1740,
	577, 1740,
	578, 1740,
	579, 1740,
	580, 1740,
	581, 1740,
	583, 1740,
	584, 1740,
	585, 1740,
	586, 1740,
	587, 1740,
	588, 1740,
	589, 1740,
	590, 1740,
	595, 1740,
	596, 1740,
	597, 1740,
	598, 1740,
	599, 1740,
	600, 1740,
	601, 1740,
	615, 1740,
	622, 1740,
	623, 1740,
	624, 1740,
	632, 1740,
	636, 1740,
	-2, 0,
	-1, 797,
	4, 1460,
	21, 1460,
	22, 1460,
	23, 1460,
	24, 1460,
	25, 1460,
	26, 1460,
	27, 1460,
	28, 1460,
	30, 1460,
	31, 1460,
	37, 1460,
	41, 1460,
	43, 1460,
	44, 1460,
	46, 1460,
	47, 1460,
	48, 1460,
	49, 1460,
	50, 1460,
	51, 1460,
	52, 1460,
	53, 1460,
	54, 1460,
	56, 1460,
	57, 1460,
	58, 1460,
	59, 1460,
	61, 1460,
	62, 1460,
	63, 1460,
	64, 1460,
	65, 1460,
	66, 1460,
	67, 1460,
	71, 1460,
	72, 1460,
	73, 1460,
	74, 1460,
	76, 1460,
	77, 1460,
	78, 1460,
	82, 1460,
	83, 1460,
	84, 1460,
	85, 1460,
	86, 1460,
	87, 1460,
	88, 1460,
	89, 1460,
	92, 1460,
	93, 1460,
	94, 1460,
	95, 1460,
	96, 1460,
	98, 1460,
	100, 1460,
	101, 1460,
	102, 1460,
	103, 1460,
	104, 1460,
	105, 1460,
	107, 1460,
	108, 1460,
	109, 1460,
	111, 1460,
	112, 1460,
	113, 1460,
	121, 1460,
	122, 1460,
	123, 1460,
	124, 1460,
	125, 1460,
	127, 1460,
	128, 1460,
	129, 1460,
	130, 1460,
	132, 1460,
	133, 1460,
	134, 1460,
	136, 1460,
	137, 1460,
	138, 1460,
	140, 1460,
	141, 1460,
	142, 1460,
	145, 1460,
	146, 1460,
	147, 1460,
	149, 1460,
	150, 1460,
	151, 1460,
	153, 1460,
	154, 1460,
	155, 1460,
	157, 1460,
	158, 1460,
	159, 1460,
	160, 1460,
	161, 1460,
	162, 1460,
	163, 1460,
	164, 1460,
	165, 1460,
	166, 1460,
	167, 1460,
	168, 1460,
	169, 1460,
	170, 1460,
	171, 1460,
	172, 1460,
	173, 1460,
	175, 1460,
	181, 1460,
	182, 1460,
	183, 1460,
	184, 1460,
	188, 1460,
	190, 1460,
	191, 1460,
	192, 1460,
	194, 1460,
	195, 1460,
	198, 1460,
	199, 1460,
	200, 1460,
	201, 1460,
	202, 1460,
	203, 1460,
	204, 1460,
	205, 1460,
	206, 1460,
	207, 1460,
	208, 1460,
	209, 1460,
	210, 1460,
	211, 1460,
	213, 1460,
	214, 1460,
	216, 1460,
	217, 1460,
	219, 1460,
	220, 1460,
	221, 1460,
	222, 1460,
	223, 1460,
	224, 1460,
	225, 1460,
	226, 1460,
	227, 1460,
	228, 1460,
	229, 1460,
	231, 1460,
	232, 1460,
	234, 1460,
	235, 1460,
	236, 1460,
	237, 1460,
	238, 1460,
	242, 1460,
	243, 1460,
	244, 1460,
	245, 1460,
	248, 1460,
	249, 1460,
	250, 1460,
	251, 1460,
	253, 1460,
	255, 1460,
	256, 1460,
	258, 1460,
	260, 1460,
	261, 1460,
	262, 1460,
	264, 1460,
	268, 1460,
	269, 1460,
	270, 1460,
	271, 1460,
	272, 1460,
	273, 1460,
	275, 1460,
	276, 1460,
	277, 1460,
	279, 1460,
	280, 1460,
	282, 1460,
	283, 1460,
	286, 1460,
	287, 1460,
	288, 1460,
	289, 1460,
	290, 1460,
	291, 1460,
	292, 1460,
	295, 1460,
	296, 1460,
	297, 1460,
	298, 1460,
	300, 1460,
	301, 1460,
	302, 1460,
	303, 1460,
	304, 1460,
	305, 1460,
	306, 1460,
	307, 1460,
	308, 1460,
	309, 1460,
	310, 1460,
	311, 1460,
	312, 1460,
	313, 1460,
	314, 1460,
	315, 1460,
	316, 1460,
	317, 1460,
	318, 1460,
	319, 1460,
	320, 1460,
	321, 1460,
	322, 1460,
	324, 1460,
	326, 1460,
	327, 1460,
	328, 1460,
	329, 1460,
	330, 1460,
	331, 1460,
	332, 1460,
	333, 1460,
	334, 1460,
	335, 1460,
	336, 1460,
	337, 1460,
	338, 1460,
	339, 1460,
	340, 1460,
	341, 1460,
	342, 1460,
	344, 1460,
	345, 1460,
	347, 1460,
	349, 1460,
	350, 1460,
	351, 1460,
	352, 1460,
	354, 1460,
	355, 1460,
	356, 1460,
	357, 1460,
	358, 1460,
	361, 1460,
	363, 1460,
	366, 1460,
	367, 1460,
	368, 1460,
	371, 1460,
	372, 1460,
	373, 1460,
	375, 1460,
	377, 1460,
	378, 1460,
	379, 1460,
	380, 1460,
	381, 1460,
	382, 1460,
	383, 1460,
	384, 1460,
	385, 1460,
	386, 1460,
	387, 1460,
	388, 1460,
	389, 1460,
	391, 1460,
	392, 1460,
	393, 1460,
	394, 1460,
	395, 1460,
	396, 1460,
	397, 1460,
	398, 1460,
	399, 1460,
	400, 1460,
	401, 1460,
	402, 1460,
	403, 1460,
	404, 1460,
	405, 1460,
	407, 1460,
	408, 1460,
	409, 1460,
	411, 1460,
	412, 1460,
	413, 1460,
	414, 1460,
	415, 1460,
	416, 1460,
	417, 1460,
	418, 1460,
	419, 1460,
	420, 1460,
	421, 1460,
	422, 1460,
	423, 1460,
	424, 1460,
	426, 1460,
	428, 1460,
	429, 1460,
	430, 1460,
	436, 1460,
	437, 1460,
	438, 1460,
	440, 1460,
	441, 1460,
	442, 1460,
	443, 1460,
	444, 1460,
	445, 1460,
	446, 1460,
	447, 1460,
	448, 1460,
	449, 1460,
	450, 1460,
	452, 1460,
	453, 1460,
	454, 1460,
	456, 1460,
	457, 1460,
	458, 1460,
	459, 1460,
	460, 1460,
	461, 1460,
	462, 1460,
	464, 1460,
	465, 1460,
	466, 1460,
	467, 1460,
	468, 1460,
	469, 1460,
	470, 1460,
	471, 1460,
	472, 1460,
	473, 1460,
	474, 1460,
	475, 1460,
	476, 1460,
	478, 1460,
	479, 1460,
	480, 1460,
	481, 1460,
	482, 1460,
	483, 1460,
	485, 1460,
	486, 1460,
	487, 1460,
	488, 1460,
	489, 1460,
	490, 1460,
	492, 1460,
	493, 1460,
	494, 1460,
	495, 1460,
	496, 1460,
	497, 1460,
	498, 1460,
	499, 1460,
	501, 1460,
	503, 1460,
	504, 1460,
	505, 1460,
	506, 1460,
	507, 1460,
	508, 1460,
	509, 1460,
	510, 1460,
	511, 1460,
	512, 1460,
	513, 1460,
	514, 1460,
	515, 1460,
	516, 1460,
	517, 1460,
	518, 1460,
	519, 1460,
	520, 1460,
	521, 1460,
	523, 1460,
	524, 1460,
	526, 1460,
	527, 1460,
	529, 1460,
	530, 1460,
	531, 1460,
	532, 1460,
	533, 1460,
	534, 1460,
	536, 1460,
	537, 1460,
	539, 1460,
	540, 1460,
	541, 1460,
	542, 1460,
	543, 1460,
	545, 1460,
	547, 1460,
	548, 1460,
	549, 1460,
	550, 1460,
	551, 1460,
	552, 1460,
	553, 1460,
	555, 1460,
	556, 1460,
	557, 1460,
	558, 1460,
	560, 1460,
	561, 1460,
	564, 1460,
	565, 1460,
	566, 1460,
	567, 1460,
	568, 1460,
	569, 1460,
	570, 1460,
	571, 1460,
	573, 1460,
	576, 1460,
	577, 1460,
	578, 1460,
	579, 1460,
	580, 1460,
	581, 1460,
	583, 1460,
	584, 1460,
	585, 1460,
	586, 1460,
	587, 1460,
	588, 1460,
	589, 1460,
	590, 1460,
	595, 1460,
	596, 1460,
	597, 1460,
	598, 1460,
	599, 1460,
	600, 1460,
	-2, 0,
	-1, 816,
	196, 2538,
	544, 2538,
	614, 2538,
	634, 2538,
	-2, 0,
	-1, 817,
	196, 2524,
	544, 2524,
	614, 2524,
	634, 2524,
	-2, 0,
	-1, 819,
	196, 2806,
	544, 2806,
	614, 2806,
	634, 2806,
	-2, 0,
	-1, 822,
	196, 2654,
	544, 2654,
	614, 2654,
	634, 2654,
	-2, 0,
	-1, 823,
	196, 2850,
	544, 2850,
	614, 2850,
	634, 2850,
	-2, 0,
	-1, 831,
	196, 2682,
	544, 2682,
	614, 2682,
	634, 2682,
	-2, 769,
	-1, 847,
	8, 902,
	29, 902,
	622, 902,
	623, 902,
	-2, 907,
	-1, 851,
	1, 2592,
	635, 2592,
	-2, 907,
	-1, 852,
	1, 2642,
	635, 2642,
	-2, 907,
	-1, 855,
	1, 2687,
	635, 2687,
	-2, 900,
	-1, 856,
	1, 2743,
	635, 2743,
	-2, 901,
	-1, 857,
	1, 2597,
	635, 2597,
	-2, 904,
	-1, 858,
	1, 2511,
	635, 2511,
	-2, 905,
	-1, 893,
	634, 2470,
	637, 2470,
	-2, 1122,
	-1, 894,
	634, 2472,
	637, 2472,
	-2, 1123,
	-1, 895,
	634, 2471,
	637, 2471,
	-2, 1124,
	-1, 896,
	637, 2394,
	-2, 1125,
	-1, 921,
	189, 287,
	-2, 0,
	-1, 944,
	45, 2443,
	-2, 0,
	-1, 945,
	583, 1438,
	-2, 1207,
	-1, 961,
	4, 1874,
	21, 1874,
	22, 1874,
	23, 1874,
	24, 1874,
	25, 1874,
	26, 1874,
	27, 1874,
	28, 1874,
	30, 1874,
	31, 1874,
	37, 1874,
	41, 1874,
	43, 1874,
	44, 1874,
	46, 1874,
	47, 1874,
	48, 1874,
	49, 1874,
	50, 1874,
	51, 1874,
	52, 1874,
	53, 1874,
	54, 1874,
	56, 1874,
	57, 1874,
	58, 1874,
	59, 1874,
	61, 1874,
	62, 1874,
	63, 1874,
	64, 1874,
	65, 1874,
	66, 1874,
	67, 1874,
	71, 1874,
	72, 1874,
	73, 1874,
	74, 1874,
	76, 1874,
	77, 1874,
	78, 1874,
	82, 1874,
	83, 1874,
	84, 1874,
	85, 1874,
	86, 1874,
	87, 1874,
	88, 1874,
	89, 1874,
	92, 1874,
	93, 1874,
	94, 1874,
	95, 1874,
	96, 1874,
	98, 1874,
	100, 1874,
	101, 1874,
	102, 1874,
	103, 1874,
	104, 1874,
	105, 1874,
	107, 1874,
	108, 1874,
	109, 1874,
	111, 1874,
	112, 1874,
	113, 1874,
	121, 1874,
	122, 1874,
	123, 1874,
	124, 1874,
	125, 1874,
	127, 1874,
	128, 1874,
	129, 1874,
	130, 1874,
	132, 1874,
	133, 1874,
	134, 1874,
	136, 1874,
	137, 1874,
	138, 1874,
	140, 1874,
	141, 1874,
	142, 1874,
	145, 1874,
	146, 1874,
	147, 1874,
	149, 1874,
	150, 1874,
	151, 1874,
	153, 1874,
	154, 1874,
	155, 1874,
	157, 1874,
	158, 1874,
	159, 1874,
	160, 1874,
	161, 1874,
	162, 1874,
	163, 1874,
	164, 1874,
	165, 1874,
	166, 1874,
	167, 1874,
	168, 1874,
	169, 1874,
	170, 1874,
	171, 1874,
	172, 1874,
	173, 1874,
	175, 1874,
	181, 1874,
	182, 1874,
	183, 1874,
	184, 1874,
	188, 1874,
	190, 1874,
	191, 1874,
	192, 1874,
	194, 1874,
	195, 1874,
	198, 1874,
	199, 1874,
	200, 1874,
	201, 1874,
	202, 1874,
	203, 1874,
	204, 1874,
	205, 1874,
	206, 1874,
	207, 1874,
	208, 1874,
	209, 1874,
	210, 1874,
	211, 1874,
	213, 1874,
	214, 1874,
	216, 1874,
	217, 1874,
	219, 1874,
	220, 1874,
	221, 1874,
	222, 1874,
	223, 1874,
	224, 1874,
	225, 1874,
	226, 1874,
	227, 1874,
	228, 1874,
	229, 1874,
	231, 1874,
	232, 1874,
	234, 1874,
	235, 1874,
	236, 1874,
	237, 1874,
	238, 1874,
	242, 1874,
	243, 1874,
	244, 1874,
	245, 1874,
	248, 1874,
	249, 1874,
	250, 1874,
	251, 1874,
	253, 1874,
	255, 1874,
	256, 1874,
	258, 1874,
	260, 1874,
	261, 1874,
	262, 1874,
	264, 1874,
	268, 1874,
	269, 1874,
	270, 1874,
	271, 1874,
	272, 1874,
	273, 1874,
	275, 1874,
	276, 1874,
	277, 1874,
	279, 1874,
	280, 1874,
	282, 1874,
	283, 1874,
	286, 1874,
	287, 1874,
	288, 1874,
	289, 1874,
	290, 1874,
	291, 1874,
	292, 1874,
	295, 1874,
	296, 1874,
	297, 1874,
	298, 1874,
	300, 1874,
	301, 1874,
	302, 1874,
	303, 1874,
	304, 1874,
	305, 1874,
	306, 1874,
	307, 1874,
	308, 1874,
	309, 1874,
	310, 1874,
	311, 1874,
	312, 1874,
	313, 1874,
	314, 1874,
	315, 1874,
	316, 1874,
	317, 1874,
	318, 1874,
	319, 1874,
	320, 1874,
	321, 1874,
	322, 1874,
	324, 1874,
	326, 1874,
	327, 1874,
	328, 1874,
	329, 1874,
	330, 1874,
	331, 1874,
	332, 1874,
	333, 1874,
	334, 1874,
	335, 1874,
	336, 1874,
	337, 1874,
	338, 1874,
	339, 1874,
	340, 1874,
	341, 1874,
	342, 1874,
	344, 1874,
	345, 1874,
	347, 1874,
	349, 1874,
	350, 1874,
	351, 1874,
	352, 1874,
	354, 1874,
	355, 1874,
	356, 1874,
	357, 1874,
	358, 1874,
	361, 1874,
	363, 1874,
	366, 1874,
	367, 1874,
	368, 1874,
	371, 1874,
	372, 1874,
	373, 1874,
	375, 1874,
	377, 1874,
	378, 1874,
	379, 1874,
	380, 1874,
	381, 1874,
	382, 1874,
	383, 1874,
	384, 1874,
	385, 1874,
	386, 1874,
	387, 1874,
	388, 1874,
	389, 1874,
	391, 1874,
	392, 1874,
	393, 1874,
	394, 1874,
	395, 1874,
	396, 1874,
	397, 1874,
	398, 1874,
	399, 1874,
	400, 1874,
	401, 1874,
	402, 1874,
	403, 1874,
	404, 1874,
	405, 1874,
	407, 1874,
	408, 1874,
	409, 1874,
	411, 1874,
	412, 1874,
	413, 1874,
	414, 1874,
	415, 1874,
	416, 1874,
	417, 1874,
	418, 1874,
	419, 1874,
	420, 1874,
	421, 1874,
	422, 1874,
	423, 1874,
	424, 1874,
	426, 1874,
	428, 1874,
	429, 1874,
	430, 1874,
	436, 1874,
	437, 1874,
	438, 1874,
	440, 1874,
	441, 1874,
	442, 1874,
	443, 1874,
	444, 1874,
	445, 1874,
	446, 1874,
	447, 1874,
	448, 1874,
	449, 1874,
	450, 1874,
	452, 1874,
	453, 1874,
	454, 1874,
	456, 1874,
	457, 1874,
	458, 1874,
	459, 1874,
	460, 1874,
	461, 1874,
	462, 1874,
	464, 1874,
	465, 1874,
	466, 1874,
	467, 1874,
	468, 1874,
	469, 1874,
	470, 1874,
	471, 1874,
	472, 1874,
	473, 1874,
	474, 1874,
	475, 1874,
	476, 1874,
	478, 1874,
	479, 1874,
	480, 1874,
	481, 1874,
	482, 1874,
	483, 1874,
	485, 1874,
	486, 1874,
	487, 1874,
	488, 1874,
	489, 1874,
	490, 1874,
	492, 1874,
	493, 1874,
	494, 1874,
	495, 1874,
	496, 1874,
	497, 1874,
	498, 1874,
	499, 1874,
	501, 1874,
	503, 1874,
	504, 1874,
	505, 1874,
	506, 1874,
	507, 1874,
	508, 1874,
	509, 1874,
	510, 1874,
	511, 1874,
	512, 1874,
	513, 1874,
	514, 1874,
	515, 1874,
	516, 1874,
	517, 1874,
	518, 1874,
	519, 1874,
	520, 1874,
	521, 1874,
	523, 1874,
	524, 1874,
	526, 1874,
	527, 1874,
	529, 1874,
	530, 1874,
	531, 1874,
	532, 1874,
	533, 1874,
	534, 1874,
	536, 1874,
	537, 1874,
	539, 1874,
	540, 1874,
	541, 1874,
	542, 1874,
	543, 1874,
	545, 1874,
	547, 1874,
	548, 1874,
	549, 1874,
	550, 1874,
	551, 1874,
	552, 1874,
	553, 1874,
	555, 1874,
	556, 1874,
	557, 1874,
	558, 1874,
	560, 1874,
	561, 1874,
	564, 1874,
	565, 1874,
	566, 1874,
	567, 1874,
	568, 1874,
	569, 1874,
	570, 1874,
	571, 1874,
	573, 1874,
	576, 1874,
	577, 1874,
	578, 1874,
	579, 1874,
	580, 1874,
	581, 1874,
	583, 1874,
	584, 1874,
	585, 1874,
	586, 1874,
	587, 1874,
	588, 1874,
	589, 1874,
	590, 1874,
	595, 1874,
	596, 1874,
	597, 1874,
	598, 1874,
	599, 1874,
	600, 1874,
	-2, 0,
	-1, 971,
	272, 454,
	-2, 0,
	-1, 1049,
	196, 944,
	-2, 0,
	-1, 1050,
	413, 997,
	483, 997,
	527, 997,
	549, 997,
	-2, 0,
	-1, 1051,
	413, 996,
	483, 996,
	527, 996,
	549, 996,
	-2, 920,
	-1, 1055,
	1, 1049,
	631, 1049,
	633, 1049,
	635, 1049,
	-2, 0,
	-1, 1057,
	1, 971,
	631, 971,
	633, 971,
	635, 971,
	-2, 0,
	-1, 1058,
	1, 975,
	631, 975,
	633, 975,
	635, 975,
	-2, 0,
	-1, 1059,
	1, 1121,
	189, 1121,
	631, 1121,
	633, 1121,
	635, 1121,
	-2, 0,
	-1, 1067,
	1, 1002,
	631, 1002,
	633, 1002,
	635, 1002,
	-2, 0,
	-1, 1074,
	1, 1049,
	631, 1049,
	633, 1049,
	635, 1049,
	-2, 0,
	-1, 1075,
	1, 1051,
	631, 1051,
	633, 1051,
	635, 1051,
	-2, 0,
	-1, 1076,
	1, 1054,
	631, 1054,
	633, 1054,
	635, 1054,
	-2, 0,
	-1, 1084,
	1, 1084,
	631, 1084,
	633, 1084,
	635, 1084,
	-2, 0,
	-1, 1085,
	1, 1086,
	631, 1086,
	633, 1086,
	635, 1086,
	-2, 0,
	-1, 1090,
	1, 1114,
	631, 1114,
	633, 1114,
	635, 1114,
	-2, 0,
	-1, 1145,
	176, 1744,
	189, 1744,
	285, 1744,
	359, 1744,
	-2, 1680,
	-1, 1161,
	176, 1743,
	189, 1743,
	285, 1743,
	359, 1743,
	-2, 1677,
	-1, 1188,
	634, 2469,
	-2, 777,
	-1, 1217,
	5, 2461,
	632, 2459,
	-2, 2450,
	-1, 1225,
	5, 2482,
	632, 2479,
	-2, 2470,
	-1, 1226,
	5, 2483,
	632, 2480,
	-2, 2471,
	-1, 1234,
	634, 2467,
	-2, 2449,
	-1, 1235,
	632, 2938,
	-2, 2468,
	-1, 1258,
	632, 2937,
	-2, 2484,
	-1, 1259,
	5, 1949,
	-2, 2908,
	-1, 1260,
	5, 1950,
	-2, 2909,
	-1, 1261,
	5, 1951,
	-2, 2923,
	-1, 1262,
	5, 1952,
	-2, 2887,
	-1, 1263,
	5, 1953,
	-2, 2921,
	-1, 1264,
	5, 1961,
	-2, 2900,
	-1, 1265,
	5, 1948,
	-2, 2896,
	-1, 1266,
	5, 1948,
	-2, 2895,
	-1, 1267,
	5, 1948,
	-2, 2914,
	-1, 1268,
	5, 1959,
	-2, 2889,
	-1, 1269,
	5, 1964,
	-2, 2888,
	-1, 1270,
	5, 1966,
	-2, 2933,
	-1, 1273,
	5, 1988,
	-2, 2926,
	-1, 1274,
	5, 1980,
	-2, 2927,
	-1, 1275,
	5, 1988,
	-2, 2928,
	-1, 1276,
	5, 1984,
	-2, 2929,
	-1, 1277,
	5, 1934,
	-2, 2901,
	-1, 1278,
	5, 1935,
	-2, 2902,
	-1, 1279,
	5, 1936,
	-2, 2890,
	-1, 1307,
	5, 1971,
	-2, 2934,
	-1, 1308,
	5, 1972,
	-2, 2924,
	-1, 1309,
	5, 1973,
	584, 1973,
	-2, 2891,
	-1, 1310,
	5, 1974,
	584, 1974,
	-2, 2892,
	-1, 1348,
	632, 2479,
	-2, 2470,
	-1, 1349,
	632, 2480,
	-2, 2471,
	-1, 1447,
	196, 2850,
	544, 2850,
	614, 2850,
	634, 2850,
	-2, 0,
	-1, 1452,
	1, 753,
	635, 753,
	-2, 1589,
	-1, 1599,
	379, 2444,
	440, 2444,
	485, 2444,
	624, 2444,
	-2, 2432,
	-1, 1605,
	196, 147,
	279, 147,
	344, 147,
	590, 147,
	-2, 2846,
	-1, 1606,
	196, 148,
	279, 148,
	344, 148,
	590, 148,
	-2, 2583,
	-1, 1607,
	196, 149,
	279, 149,
	344, 149,
	590, 149,
	-2, 2766,
	-1, 1613,
	636, 2444,
	-2, 2446,
	-1, 1637,
	1, 1435,
	445, 1390,
	485, 1390,
	607, 1390,
	631, 1435,
	633, 1435,
	635, 1435,
	-2, 1729,
	-1, 1643,
	212, 1532,
	233, 1532,
	454, 1532,
	-2, 0,
	-1, 1692,
	422, 1206,
	583, 1206,
	-2, 449,
	-1, 1708,
	45, 2442,
	-2, 1169,
	-1, 1715,
	1, 1435,
	631, 1435,
	633, 1435,
	635, 1435,
	-2, 1729,
	-1, 1723,
	4, 1460,
	21, 1460,
	22, 1460,
	23, 1460,
	24, 1460,
	25, 1460,
	26, 1460,
	27, 1460,
	28, 1460,
	30, 1460,
	31, 1460,
	37, 1460,
	41, 1460,
	43, 1460,
	44, 1460,
	46, 1460,
	47, 1460,
	48, 1460,
	49, 1460,
	50, 1460,
	51, 1460,
	52, 1460,
	53, 1460,
	54, 1460,
	56, 1460,
	57, 1460,
	58, 1460,
	59, 1460,
	61, 1460,
	62, 1460,
	63, 1460,
	64, 1460,
	65, 1460,
	66, 1460,
	67, 1460,
	71, 1460,
	72, 1460,
	73, 1460,
	74, 1460,
	76, 1460,
	77, 1460,
	78, 1460,
	82, 1460,
	83, 1460,
	84, 1460,
	85, 1460,
	86, 1460,
	87, 1460,
	88, 1460,
	89, 1460,
	92, 1460,
	93, 1460,
	94, 1460,
	95, 1460,
	96, 1460,
	98, 1460,
	100, 1460,
	101, 1460,
	102, 1460,
	103, 1460,
	104, 1460,
	105, 1460,
	107, 1460,
	108, 1460,
	109, 1460,
	111, 1460,
	112, 1460,
	113, 1460,
	121, 1460,
	122, 1460,
	123, 1460,
	124, 1460,
	125, 1460,
	127, 1460,
	128, 1460,
	129, 1460,
	130, 1460,
	132, 1460,
	133, 1460,
	134, 1460,
	136, 1460,
	137, 1460,
	138, 1460,
	140, 1460,
	141, 1460,
	142, 1460,
	145, 1460,
	146, 1460,
	147, 1460,
	149, 1460,
	150, 1460,
	151, 1460,
	153, 1460,
	154, 1460,
	155, 1460,
	157, 1460,
	158, 1460,
	159, 1460,
	160, 1460,
	161, 1460,
	162, 1460,
	163, 1460,
	164, 1460,
	165, 1460,
	166, 1460,
	167, 1460,
	168, 1460,
	169, 1460,
	170, 1460,
	171, 1460,
	172, 1460,
	173, 1460,
	181, 1460,
	182, 1460,
	183, 1460,
	184, 1460,
	188, 1460,
	190, 1460,
	191, 1460,
	192, 1460,
	194, 1460,
	195, 1460,
	198, 1460,
	199, 1460,
	200, 1460,
	201, 1460,
	202, 1460,
	203, 1460,
	204, 1460,
	205, 1460,
	206, 1460,
	207, 1460,
	208, 1460,
	209, 1460,
	210, 1460,
	211, 1460,
	213, 1460,
	214, 1460,
	216, 1460,
	217, 1460,
	219, 1460,
	220, 1460,
	221, 1460,
	222, 1460,
	223, 1460,
	224, 1460,
	225, 1460,
	226, 1460,
	227, 1460,
	228, 1460,
	229, 1460,
	231, 1460,
	232, 1460,
	234, 1460,
	235, 1460,
	236, 1460,
	237, 1460,
	238, 1460,
	243, 1460,
	244, 1460,
	245, 1460,
	248, 1460,
	249, 1460,
	250, 1460,
	251, 1460,
	253, 1460,
	255, 1460,
	256, 1460,
	258, 1460,
	260, 1460,
	261, 1460,
	262, 1460,
	264, 1460,
	268, 1460,
	269, 1460,
	270, 1460,
	271, 1460,
	272, 1460,
	273, 1460,
	275, 1460,
	276, 1460,
	277, 1460,
	279, 1460,
	280, 1460,
	282, 1460,
	283, 1460,
	286, 1460,
	287, 1460,
	288, 1460,
	289, 1460,
	290, 1460,
	291, 1460,
	292, 1460,
	295, 1460,
	296, 1460,
	297, 1460,
	298, 1460,
	300, 1460,
	301, 1460,
	302, 1460,
	303, 1460,
	304, 1460,
	305, 1460,
	306, 1460,
	307, 1460,
	308, 1460,
	309, 1460,
	310, 1460,
	311, 1460,
	312, 1460,
	313, 1460,
	314, 1460,
	315, 1460,
	316, 1460,
	317, 1460,
	318, 1460,
	319, 1460,
	320, 1460,
	321, 1460,
	322, 1460,
	324, 1460,
	326, 1460,
	327, 1460,
	328, 1460,
	329, 1460,
	330, 1460,
	331, 1460,
	332, 1460,
	333, 1460,
	334, 1460,
	335, 1460,
	336, 1460,
	337, 1460,
	338, 1460,
	339, 1460,
	340, 1460,
	341, 1460,
	342, 1460,
	344, 1460,
	345, 1460,
	349, 1460,
	350, 1460,
	351, 1460,
	352, 1460,
	354, 1460,
	355, 1460,
	356, 1460,
	357, 1460,
	358, 1460,
	361, 1460,
	363, 1460,
	364, 1460,
	366, 1460,
	367, 1460,
	368, 1460,
	371, 1460,
	372, 1460,
	373, 1460,
	375, 1460,
	377, 1460,
	378, 1460,
	379, 1460,
	380, 1460,
	381, 1460,
	382, 1460,
	383, 1460,
	384, 1460,
	385, 1460,
	386, 1460,
	387, 1460,
	388, 1460,
	389, 1460,
	391, 1460,
	392, 1460,
	393, 1460,
	394, 1460,
	395, 1460,
	396, 1460,
	397, 1460,
	398, 1460,
	399, 1460,
	400, 1460,
	401, 1460,
	402, 1460,
	403, 1460,
	404, 1460,
	405, 1460,
	407, 1460,
	408, 1460,
	409, 1460,
	411, 1460,
	412, 1460,
	413, 1460,
	414, 1460,
	415, 1460,
	416, 1460,
	417, 1460,
	418, 1460,
	419, 1460,
	420, 1460,
	421, 1460,
	422, 1460,
	423, 1460,
	424, 1460,
	426, 1460,
	428, 1460,
	429, 1460,
	430, 1460,
	436, 1460,
	437, 1460,
	438, 1460,
	440, 1460,
	441, 1460,
	442, 1460,
	443, 1460,
	444, 1460,
	445, 1460,
	446, 1460,
	447, 1460,
	448, 1460,
	449, 1460,
	450, 1460,
	452, 1460,
	453, 1460,
	454, 1460,
	456, 1460,
	457, 1460,
	458, 1460,
	459, 1460,
	460, 1460,
	461, 1460,
	462, 1460,
	464, 1460,
	465, 1460,
	466, 1460,
	467, 1460,
	468, 1460,
	469, 1460,
	470, 1460,
	471, 1460,
	472, 1460,
	473, 1460,
	474, 1460,
	475, 1460,
	476, 1460,
	478, 1460,
	479, 1460,
	480, 1460,
	481, 1460,
	482, 1460,
	483, 1460,
	485, 1460,
	486, 1460,
	487, 1460,
	488, 1460,
	489, 1460,
	490, 1460,
	492, 1460,
	493, 1460,
	494, 1460,
	495, 1460,
	496, 1460,
	497, 1460,
	498, 1460,
	499, 1460,
	501, 1460,
	503, 1460,
	504, 1460,
	505, 1460,
	506, 1460,
	507, 1460,
	508, 1460,
	509, 1460,
	510, 1460,
	511, 1460,
	512, 1460,
	513, 1460,
	514, 1460,
	515, 1460,
	516, 1460,
	517, 1460,
	518, 1460,
	519, 1460,
	520, 1460,
	521, 1460,
	523, 1460,
	524, 1460,
	526, 1460,
	527, 1460,
	529, 1460,
	530, 1460,
	531, 1460,
	532, 1460,
	533, 1460,
	534, 1460,
	536, 1460,
	537, 1460,
	539, 1460,
	540, 1460,
	541, 1460,
	542, 1460,
	543, 1460,
	545, 1460,
	547, 1460,
	548, 1460,
	549, 1460,
	550, 1460,
	551, 1460,
	552, 1460,
	553, 1460,
	555, 1460,
	556, 1460,
	557, 1460,
	558, 1460,
	560, 1460,
	561, 1460,
	564, 1460,
	565, 1460,
	566, 1460,
	567, 1460,
	568, 1460,
	569, 1460,
	570, 1460,
	571, 1460,
	573, 1460,
	576, 1460,
	577, 1460,
	578, 1460,
	579, 1460,
	580, 1460,
	581, 1460,
	583, 1460,
	584, 1460,
	585, 1460,
	586, 1460,
	587, 1460,
	588, 1460,
	589, 1460,
	590, 1460,
	595, 1460,
	596, 1460,
	597, 1460,
	598, 1460,
	599, 1460,
	600, 1460,
	-2, 0,
	-1, 1746,
	1, 588,
	631, 588,
	633, 588,
	635, 588,
	-2, 1700,
	-1, 1749,
	4, 2932,
	11, 2932,
	12, 2932,
	14, 2932,
	15, 2932,
	16, 2932,
	17, 2932,
	18, 2932,
	19, 2932,
	21, 2932,
	22, 2932,
	23, 2932,
	24, 2932,
	25, 2932,
	26, 2932,
	27, 2932,
	28, 2932,
	30, 2932,
	31, 2932,
	34, 2932,
	35, 2932,
	37, 2932,
	39, 2932,
	41, 2932,
	43, 2932,
	44, 2932,
	46, 2932,
	47, 2932,
	48, 2932,
	49, 2932,
	50, 2932,
	51, 2932,
	52, 2932,
	53, 2932,
	54, 2932,
	56, 2932,
	57, 2932,
	58, 2932,
	59, 2932,
	61, 2932,
	62, 2932,
	63, 2932,
	64, 2932,
	65, 2932,
	66, 2932,
	67, 2932,
	70, 2932,
	71, 2932,
	72, 2932,
	73, 2932,
	74, 2932,
	76, 2932,
	77, 2932,
	78, 2932,
	79, 2932,
	82, 2932,
	83, 2932,
	84, 2932,
	85, 2932,
	86, 2932,
	87, 2932,
	88, 2932,
	89, 2932,
	90, 2932,
	92, 2932,
	93, 2932,
	94, 2932,
	95, 2932,
	96, 2932,
	98, 2932,
	99, 2932,
	100, 2932,
	101, 2932,
	102, 2932,
	103, 2932,
	104, 2932,
	105, 2932,
	107, 2932,
	108, 2932,
	109, 2932,
	110, 2932,
	111, 2932,
	112, 2932,
	113, 2932,
	121, 2932,
	122, 2932,
	123, 2932,
	124, 2932,
	125, 2932,
	127, 2932,
	128, 2932,
	129, 2932,
	130, 2932,
	132, 2932,
	133, 2932,
	134, 2932,
	136, 2932,
	137, 2932,
	138, 2932,
	140, 2932,
	141, 2932,
	142, 2932,
	145, 2932,
	146, 2932,
	147, 2932,
	149, 2932,
	150, 2932,
	151, 2932,
	153, 2932,
	154, 2932,
	155, 2932,
	157, 2932,
	158, 2932,
	159, 2932,
	160, 2932,
	161, 2932,
	162, 2932,
	163, 2932,
	164, 2932,
	165, 2932,
	166, 2932,
	167, 2932,
	168, 2932,
	169, 2932,
	170, 2932,
	171, 2932,
	172, 2932,
	173, 2932,
	177, 2932,
	178, 2932,
	179, 2932,
	180, 2932,
	181, 2932,
	182, 2932,
	183, 2932,
	184, 2932,
	187, 2932,
	188, 2932,
	190, 2932,
	191, 2932,
	192, 2932,
	194, 2932,
	195, 2932,
	197, 2932,
	198, 2932,
	199, 2932,
	200, 2932,
	201, 2932,
	202, 2932,
	203, 2932,
	204, 2932,
	205, 2932,
	206, 2932,
	207, 2932,
	208, 2932,
	209, 2932,
	210, 2932,
	211, 2932,
	213, 2932,
	214, 2932,
	216, 2932,
	217, 2932,
	219, 2932,
	220, 2932,
	221, 2932,
	222, 2932,
	223, 2932,
	224, 2932,
	225, 2932,
	226, 2932,
	227, 2932,
	228, 2932,
	229, 2932,
	230, 2932,
	231, 2932,
	232, 2932,
	233, 2932,
	234, 2932,
	235, 2932,
	236, 2932,
	237, 2932,
	238, 2932,
	240, 2932,
	241, 2932,
	243, 2932,
	244, 2932,
	245, 2932,
	247, 2932,
	248, 2932,
	249, 2932,
	250, 2932,
	251, 2932,
	253, 2932,
	255, 2932,
	256, 2932,
	257, 2932,
	258, 2932,
	259, 2932,
	260, 2932,
	261, 2932,
	262, 2932,
	263, 2932,
	264, 2932,
	266, 2932,
	267, 2932,
	268, 2932,
	269, 2932,
	270, 2932,
	271, 2932,
	272, 2932,
	273, 2932,
	275, 2932,
	276, 2932,
	277, 2932,
	279, 2932,
	280, 2932,
	281, 2932,
	282, 2932,
	283, 2932,
	284, 2932,
	286, 2932,
	287, 2932,
	288, 2932,
	289, 2932,
	290, 2932,
	291, 2932,
	292, 2932,
	295, 2932,
	296, 2932,
	297, 2932,
	298, 2932,
	299, 2932,
	300, 2932,
	301, 2932,
	302, 2932,
	303, 2932,
	304, 2932,
	305, 2932,
	306, 2932,
	307, 2932,
	308, 2932,
	309, 2932,
	310, 2932,
	311, 2932,
	312, 2932,
	313, 2932,
	314, 2932,
	315, 2932,
	316, 2932,
	317, 2932,
	318, 2932,
	319, 2932,
	320, 2932,
	321, 2932,
	322, 2932,
	324, 2932,
	325, 2932,
	326, 2932,
	327, 2932,
	328, 2932,
	329, 2932,
	330, 2932,
	331, 2932,
	332, 2932,
	333, 2932,
	334, 2932,
	335, 2932,
	336, 2932,
	337, 2932,
	338, 2932,
	339, 2932,
	340, 2932,
	341, 2932,
	342, 2932,
	344, 2932,
	345, 2932,
	348, 2932,
	349, 2932,
	350, 2932,
	351, 2932,
	352, 2932,
	354, 2932,
	355, 2932,
	356, 2932,
	357, 2932,
	358, 2932,
	361, 2932,
	363, 2932,
	366, 2932,
	367, 2932,
	368, 2932,
	369, 2932,
	371, 2932,
	372, 2932,
	373, 2932,
	375, 2932,
	377, 2932,
	378, 2932,
	379, 2932,
	380, 2932,
	381, 2932,
	382, 2932,
	383, 2932,
	384, 2932,
	385, 2932,
	386, 2932,
	387, 2932,
	388, 2932,
	389, 2932,
	391, 2932,
	392, 2932,
	393, 2932,
	394, 2932,
	395, 2932,
	396, 2932,
	397, 2932,
	398, 2932,
	399, 2932,
	400, 2932,
	401, 2932,
	402, 2932,
	403, 2932,
	404, 2932,
	405, 2932,
	407, 2932,
	408, 2932,
	409, 2932,
	411, 2932,
	412, 2932,
	413, 2932,
	414, 2932,
	415, 2932,
	416, 2932,
	417, 2932,
	418, 2932,
	419, 2932,
	420, 2932,
	421, 2932,
	422, 2932,
	423, 2932,
	424, 2932,
	426, 2932,
	428, 2932,
	429, 2932,
	430, 2932,
	436, 2932,
	437, 2932,
	438, 2932,
	439, 2932,
	440, 2932,
	441, 2932,
	442, 2932,
	443, 2932,
	444, 2932,
	445, 2932,
	446, 2932,
	447, 2932,
	448, 2932,
	449, 2932,
	450, 2932,
	452, 2932,
	453, 2932,
	454, 2932,
	455, 2932,
	456, 2932,
	457, 2932,
	458, 2932,
	459, 2932,
	460, 2932,
	461, 2932,
	462, 2932,
	463, 2932,
	464, 2932,
	465, 2932,
	466, 2932,
	467, 2932,
	468, 2932,
	469, 2932,
	470, 2932,
	471, 2932,
	472, 2932,
	473, 2932,
	474, 2932,
	475, 2932,
	476, 2932,
	478, 2932,
	479, 2932,
	480, 2932,
	481, 2932,
	482, 2932,
	483, 2932,
	485, 2932,
	486, 2932,
	487, 2932,
	488, 2932,
	489, 2932,
	490, 2932,
	491, 2932,
	492, 2932,
	493, 2932,
	494, 2932,
	495, 2932,
	496, 2932,
	497, 2932,
	498, 2932,
	499, 2932,
	501, 2932,
	503, 2932,
	504, 2932,
	505, 2932,
	506, 2932,
	507, 2932,
	508, 2932,
	509, 2932,
	510, 2932,
	511, 2932,
	512, 2932,
	513, 2932,
	514, 2932,
	515, 2932,
	516, 2932,
	517, 2932,
	518, 2932,
	519, 2932,
	520, 2932,
	521, 2932,
	523, 2932,
	524, 2932,
	525, 2932,
	526, 2932,
	527, 2932,
	529, 2932,
	530, 2932,
	531, 2932,
	532, 2932,
	533, 2932,
	534, 2932,
	536, 2932,
	537, 2932,
	539, 2932,
	540, 2932,
	541, 2932,
	542, 2932,
	543, 2932,
	545, 2932,
	547, 2932,
	548, 2932,
	549, 2932,
	550, 2932,
	551, 2932,
	552, 2932,
	553, 2932,
	555, 2932,
	556, 2932,
	557, 2932,
	558, 2932,
	560, 2932,
	561, 2932,
	564, 2932,
	565, 2932,
	566, 2932,
	567, 2932,
	568, 2932,
	569, 2932,
	570, 2932,
	571, 2932,
	573, 2932,
	576, 2932,
	577, 2932,
	578, 2932,
	579, 2932,
	580, 2932,
	581, 2932,
	583, 2932,
	584, 2932,
	585, 2932,
	586, 2932,
	587, 2932,
	588, 2932,
	589, 2932,
	590, 2932,
	595, 2932,
	596, 2932,
	597, 2932,
	598, 2932,
	599, 2932,
	600, 2932,
	601, 2932,
	603, 2932,
	612, 2932,
	613, 2932,
	614, 2932,
	615, 2932,
	616, 2932,
	617, 2932,
	619, 2932,
	620, 2932,
	621, 2932,
	622, 2932,
	623, 2932,
	624, 2932,
	625, 2932,
	626, 2932,
	627, 2932,
	630, 2932,
	633, 2932,
	634, 2932,
	636, 2932,
	637, 2932,
	-2, 0,
	-1, 1754,
	196, 2806,
	544, 2806,
	614, 2806,
	634, 2806,
	-2, 0,
	-1, 1802,
	196, 945,
	-2, 2798,
	-1, 1803,
	196, 946,
	-2, 2590,
	-1, 1804,
	196, 947,
	-2, 2752,
	-1, 1809,
	413, 997,
	483, 997,
	527, 997,
	549, 997,
	-2, 0,
	-1, 1820,
	1, 1532,
	233, 1532,
	631, 1532,
	633, 1532,
	635, 1532,
	-2, 0,
	-1, 1837,
	1, 992,
	631, 992,
	633, 992,
	635, 992,
	-2, 0,
	-1, 1838,
	1, 1036,
	631, 1036,
	633, 1036,
	635, 1036,
	-2, 0,
	-1, 1839,
	1, 1044,
	631, 1044,
	633, 1044,
	635, 1044,
	-2, 0,
	-1, 1842,
	1, 1001,
	631, 1001,
	633, 1001,
	635, 1001,
	-2, 0,
	-1, 1844,
	1, 1007,
	631, 1007,
	633, 1007,
	635, 1007,
	-2, 0,
	-1, 1847,
	1, 1003,
	631, 1003,
	633, 1003,
	635, 1003,
	-2, 0,
	-1, 1852,
	1, 1017,
	631, 1017,
	633, 1017,
	635, 1017,
	-2, 0,
	-1, 1886,
	1, 2788,
	631, 2788,
	633, 2788,
	634, 2788,
	635, 2788,
	-2, 0,
	-1, 1890,
	1, 1095,
	631, 1095,
	633, 1095,
	635, 1095,
	-2, 0,
	-1, 1908,
	1, 1584,
	635, 1584,
	-2, 1589,
	-1, 1911,
	176, 1743,
	189, 1743,
	285, 1743,
	359, 1743,
	-2, 1681,
	-1, 2011,
	156, 1702,
	176, 1702,
	189, 1702,
	252, 1702,
	285, 1702,
	359, 1702,
	370, 1702,
	562, 1702,
	-2, 2153,
	-1, 2072,
	633, 2328,
	-2, 0,
	-1, 2108,
	156, 1702,
	176, 1702,
	189, 1702,
	252, 1702,
	285, 1702,
	359, 1702,
	370, 1702,
	562, 1702,
	-2, 1835,
	-1, 2147,
	544, 2803,
	634, 2803,
	637, 2803,
	-2, 0,
	-1, 2164,
	632, 1976,
	-2, 1964,
	-1, 2196,
	196, 2803,
	634, 2803,
	637, 2803,
	-2, 0,
	-1, 2239,
	1, 755,
	635, 755,
	-2, 1589,
	-1, 2415,
	233, 282,
	-2, 2478,
	-1, 2416,
	233, 283,
	-2, 341,
	-1, 2527,
	1, 994,
	631, 994,
	633, 994,
	635, 994,
	-2, 0,
	-1, 2528,
	1, 1038,
	631, 1038,
	633, 1038,
	635, 1038,
	-2, 0,
	-1, 2529,
	1, 1046,
	631, 1046,
	633, 1046,
	635, 1046,
	-2, 0,
	-1, 2530,
	1, 1097,
	631, 1097,
	633, 1097,
	635, 1097,
	-2, 0,
	-1, 2571,
	1, 1019,
	631, 1019,
	633, 1019,
	635, 1019,
	-2, 0,
	-1, 2593,
	1, 1080,
	631, 1080,
	633, 1080,
	635, 1080,
	-2, 0,
	-1, 2641,
	461, 1770,
	462, 1770,
	-2, 2009,
	-1, 2672,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2029,
	-1, 2673,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2030,
	-1, 2674,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2031,
	-1, 2675,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2032,
	-1, 2676,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2033,
	-1, 2677,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2034,
	-1, 2678,
	99, 0,
	266, 0,
	267, 0,
	616, 0,
	617, 0,
	-2, 2035,
	-1, 2679,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2036,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2048,
	-1, 2692,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2049,
	-1, 2693,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2050,
	-1, 2697,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2057,
	-1, 2703,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2061,
	-1, 2705,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2069,
	-1, 2706,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2070,
	-1, 2707,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2071,
	-1, 2708,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2072,
	-1, 2882,
	5, 2482,
	196, 2339,
	632, 2479,
	-2, 2470,
	-1, 2883,
	196, 2340,
	-2, 2883,
	-1, 2884,
	196, 2341,
	-2, 2680,
	-1, 2885,
	196, 2342,
	-2, 2556,
	-1, 2886,
	196, 2343,
	-2, 2618,
	-1, 2887,
	196, 2344,
	-2, 2665,
	-1, 2888,
	196, 2345,
	-2, 2801,
	-1, 2889,
	196, 2346,
	-2, 2136,
	-1, 2961,
	1, 1836,
	2, 1836,
	110, 1836,
	156, 1836,
	176, 1836,
	189, 1836,
	197, 1836,
	215, 1836,
	218, 1836,
	247, 1836,
	252, 1836,
	263, 1836,
	281, 1836,
	285, 1836,
	325, 1836,
	359, 1836,
	364, 1836,
	370, 1836,
	451, 1836,
	455, 1836,
	562, 1836,
	574, 1836,
	592, 1836,
	593, 1836,
	594, 1836,
	604, 1836,
	631, 1836,
	633, 1836,
	635, 1836,
	637, 1836,
	-2, 1835,
	-1, 2974,
	632, 2451,
	-2, 2465,
	-1, 2976,
	1, 358,
	592, 358,
	-2, 1729,
	-1, 3006,
	632, 1975,
	-2, 1965,
	-1, 3223,
	1, 1435,
	445, 1390,
	485, 1390,
	607, 1390,
	631, 1435,
	633, 1435,
	635, 1435,
	-2, 1729,
	-1, 3407,
	365, 1773,
	-2, 2922,
	-1, 3408,
	365, 1774,
	-2, 2785,
	-1, 3412,
	461, 2405,
	462, 2405,
	-2, 2134,
	-1, 3413,
	461, 2409,
	462, 2409,
	-2, 2135,
	-1, 3414,
	461, 2406,
	462, 2406,
	-2, 2134,
	-1, 3415,
	461, 2410,
	462, 2410,
	-2, 2135,
	-1, 3428,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2059,
	-1, 3429,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2063,
	-1, 3435,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2065,
	-1, 3662,
	1, 750,
	631, 750,
	633, 750,
	635, 750,
	-2, 1589,
	-1, 3862,
	45, 2442,
	-2, 1170,
	-1, 3867,
	1, 1435,
	631, 1435,
	633, 1435,
	635, 1435,
	-2, 1729,
	-1, 3977,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2067,
	-1, 3984,
	257, 0,
	259, 0,
	348, 0,
	-2, 2086,
	-1, 4052,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2115,
	-1, 4053,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2116,
	-1, 4054,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2117,
	-1, 4058,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2121,
	-1, 4059,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2122,
	-1, 4060,
	14, 0,
	15, 0,
	16, 0,
	612, 0,
	613, 0,
	614, 0,
	-2, 2123,
	-1, 4108,
	632, 2452,
	-2, 2466,
	-1, 4323,
	634, 3039,
	-2, 1655,
	-1, 4383,
	257, 0,
	259, 0,
	348, 0,
	-2, 2087,
	-1, 4386,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2090,
	-1, 4387,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2092,
	-1, 4510,
	634, 2467,
	-2, 1470,
	-1, 4669,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2091,
	-1, 4670,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2093,
	-1, 4681,
	257, 0,
	-2, 2126,
	-1, 4874,
	257, 0,
	-2, 2127,
	-1, 5094,
	53, 0,
	230, 0,
	284, 0,
	491, 0,
	601, 0,
	615, 0,
	-2, 2886,
}

const sqlPrivate = 57344

const sqlLast = 147635

var sqlAct = [...]int{
	291, 5285, 5212, 5028, 4915, 1428, 3849, 3296, 3566, 4967,
	5027, 4742, 4923, 5156, 3177, 5093, 5078, 3147, 5106, 5226,
	4983, 5140, 3848, 5061, 2412, 2208, 5018, 5107, 4841, 4506,
	4792, 5042, 5039, 4366, 5108, 4808, 1341, 4821, 1484, 2299,
	3860, 5165, 4017, 5092, 3077, 5104, 4878, 4627, 4622, 4125,
	2114, 4588, 4616, 1352, 4561, 4747, 2489, 3969, 4690, 3266,
	3689, 4657, 2651, 1171, 2501, 4315, 4307, 4827, 3884, 1623,
	4507, 4232, 1425, 4952, 3078, 4487, 2499, 2720, 3421, 1920,
	895, 4632, 1418, 2914, 3833, 3318, 4265, 3878, 1420, 4282,
	3753, 4263, 2221, 828, 1503, 1162, 2659, 3162, 756, 3695,
	2462, 4686, 2151, 3822, 3912, 3676, 3914, 895, 3285, 2308,
	3692, 3677, 3837, 3255, 1772, 3838, 3840, 3282, 3612, 3678,
	2988, 3815, 3280, 3549, 2652, 4111, 3814, 2951, 1596, 3589,
	3572, 3619, 3581, 4365, 3349, 3570, 973, 3313, 969, 4,
	3297, 1770, 4422, 2399, 2152, 3230, 2401, 2337, 2083, 2388,
	3178, 5141, 2320, 3716, 2954, 767, 892, 4078, 3548, 4879,
	2656, 2798, 2019, 1989, 2733, 1710, 285, 1217, 3405, 1170,
	190, 890, 3312, 1423, 2400, 284, 2058, 964, 2497, 2450,
	2378, 824, 3192, 2359, 2366, 2386, 1221, 2956, 2953, 3267,
	2287, 1467, 2291, 2219, 1908, 2084, 2934, 2789, 1653, 1397,
	1817, 1228, 2717, 1482, 1226, 1486, 2640, 1332, 2623, 2103,
	2621, 2989, 1747, 1411, 3290, 2911, 1713, 896, 897, 2381,
	801, 3103, 2449, 3102, 1044, 1454, 4984, 3063, 2792, 1335,
	844, 2943, 3017, 1314, 1625, 3841, 2093, 2924, 1189, 743,
	2003, 2878, 2100, 765, 2053, 200, 901, 201, 1921, 1922,
	2622, 2770, 2624, 809, 1349, 904, 1837, 1852, 820, 2844,
	1745, 1408, 1331, 990, 2409, 1738, 2475, 119, 190, 105,
	1647, 2390, 5157, 901, 1604, 5213, 2645, 1202, 1479, 760,
	1224, 115, 904, 2800, 784, 46, 1223, 757, 45, 769,
	43, 34, 32, 30, 945, 3681, 1312, 1927, 1337, 885,
	837, 840, 1907, 3458, 1659, 1065, 4092, 3452, 4093, 3568,
	2210, 5296, 5288, 946, 2210, 2933, 3795, 5276, 4126, 2210,
	2210, 2933, 2210, 5102, 4715, 5275, 2210, 1935, 1936, 2933,
	1968, 1969, 1970, 1979, 1980, 1981, 5245, 5243, 5186, 5142,
	4746, 4746, 2421, 5143, 5132, 5130, 4709, 1166, 2933, 2933,
	1972, 1966, 5127, 5124, 3893, 1166, 5128, 5125, 5090, 1938,
	5089, 2231, 2421, 5086, 2421, 4712, 5076, 3323, 5074, 1985,
	4746, 5065, 4746, 5064, 1463, 4746, 5037, 4746, 1782, 3894,
	4746, 5004, 3647, 1843, 1329, 2997, 1991, 4997, 4996, 4988,
	4966, 2933, 2933, 2421, 2421, 1937, 4963, 4945, 4876, 4855,
	4746, 4578, 2997, 4341, 4823, 4765, 1957, 2498, 4159, 2421,
	4764, 1935, 1936, 4753, 2421, 1954, 4752, 2421, 4745, 4458,
	4746, 1347, 4746, 1155, 3629, 4697, 3261, 3519, 3520, 2421,
	3537, 3538, 3539, 1315, 1315, 1966, 1146, 4671, 1145, 2228,
	4643, 2997, 4640, 1938, 3323, 4556, 3795, 4534, 4385, 2933,
	4381, 2933, 2997, 4331, 4325, 4279, 4190, 3907, 3907, 4280,
	4191, 4158, 2231, 4103, 4101, 4159, 2490, 4104, 4102, 4085,
	1991, 1463, 4001, 2933, 3997, 3019, 2421, 3906, 2933, 1937,
	3644, 3907, 3519, 3520, 1167, 3565, 2993, 3560, 3559, 2933,
	1957, 2933, 2933, 1960, 1961, 1962, 1963, 3510, 3508, 1954,
	1367, 3511, 3509, 1943, 4082, 1161, 3534, 3500, 3498, 3260,
	3469, 3501, 2933, 3467, 2933, 2926, 3322, 2228, 3307, 3468,
	3323, 3306, 2485, 3042, 2996, 2485, 2986, 2933, 2997, 2231,
	2933, 2978, 2932, 3795, 1344, 2421, 2933, 1935, 1936, 2421,
	1343, 2484, 1318, 1316, 1319, 2485, 1976, 2231, 3420, 1986,
	1375, 2933, 5005, 4880, 4871, 4379, 1965, 1967, 4859, 3323,
	4082, 1966, 2925, 4620, 4578, 1661, 2228, 4535, 2231, 1938,
	1661, 4341, 4281, 1982, 3154, 1983, 3062, 1960, 1961, 1962,
	1963, 2245, 1952, 1953, 2209, 2225, 3260, 1943, 251, 1368,
	2313, 2420, 3172, 1368, 3053, 2079, 1991, 1646, 4208, 3972,
	1974, 3941, 2101, 3525, 2371, 1937, 3895, 2970, 1819, 2969,
	2968, 2967, 3293, 2966, 2933, 1958, 965, 1320, 1317, 1935,
	1936, 1154, 3457, 1153, 1152, 1151, 3896, 1271, 1150, 2795,
	1149, 1148, 1144, 1143, 1142, 251, 1141, 1140, 1139, 253,
	1965, 1967, 1138, 1966, 78, 1137, 968, 967, 3375, 1652,
	1136, 1938, 1135, 1134, 1652, 1133, 1132, 1131, 3525, 1130,
	1129, 1128, 79, 1127, 1984, 1126, 1952, 1953, 1125, 1107,
	1042, 1041, 1040, 3541, 1039, 1038, 1037, 1036, 1991, 84,
	1763, 1035, 1034, 3519, 3520, 1973, 253, 1937, 1673, 1033,
	252, 2211, 1032, 1031, 1030, 2211, 1988, 1029, 1957, 1958,
	2211, 2211, 1028, 2211, 1027, 245, 1026, 2211, 1025, 1024,
	1023, 1022, 1021, 1943, 246, 3535, 1020, 1019, 1018, 1017,
	92, 1016, 1015, 1200, 1014, 2563, 2796, 1013, 1012, 1660,
	1011, 1010, 1009, 1008, 1007, 1006, 995, 252, 994, 993,
	988, 987, 980, 202, 979, 978, 3070, 963, 962, 920,
	919, 918, 917, 908, 907, 1964, 906, 905, 867, 866,
	835, 971, 3534, 4440, 2228, 2228, 1965, 1967, 834, 833,
	3535, 815, 1935, 1936, 51, 279, 114, 278, 277, 1959,
	1988, 276, 98, 111, 275, 1960, 1961, 1962, 1963, 274,
	202, 273, 272, 3519, 3520, 1943, 1988, 271, 270, 269,
	268, 267, 1430, 1226, 1938, 266, 2228, 1977, 2797, 3260,
	2794, 265, 264, 263, 98, 262, 261, 260, 5117, 259,
	3893, 5116, 258, 1368, 257, 1958, 256, 255, 254, 4397,
	1226, 1226, 1226, 4135, 4097, 3945, 3908, 3615, 3480, 1964,
	1937, 1990, 3563, 4634, 3463, 3454, 99, 3352, 1965, 1967,
	3240, 1988, 3001, 251, 2975, 2960, 2613, 3275, 251, 3525,
	2272, 2827, 2061, 1959, 2230, 1667, 2825, 1661, 1786, 2060,
	2127, 1506, 2104, 3519, 3520, 1226, 2811, 5113, 2061, 3536,
	2231, 1226, 1628, 1226, 3029, 2060, 1430, 3564, 2809, 2209,
	2228, 1637, 2225, 1471, 1472, 1473, 2616, 2030, 2064, 1902,
	1458, 1655, 1934, 5091, 253, 1475, 1988, 1958, 1351, 253,
	3070, 1226, 1672, 1226, 2059, 1226, 1661, 1975, 5073, 4971,
	4883, 2228, 1628, 4868, 4685, 1990, 4196, 4737, 1949, 1950,
	1956, 1978, 1955, 1951, 3536, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 4641, 4862, 4619, 1430, 1943, 4407,
	1650, 4860, 1715, 4406, 4464, 252, 2925, 4420, 251, 1614,
	252, 4419, 4413, 4412, 3519, 3520, 4411, 1628, 1609, 3525,
	245, 3535, 1845, 4404, 1628, 245, 4403, 1345, 2799, 246,
	3519, 3520, 4401, 1226, 246, 1226, 4396, 2028, 1988, 1959,
	1628, 1368, 4393, 4392, 4278, 1402, 1405, 2021, 1504, 1226,
	103, 1226, 4139, 4138, 1450, 4292, 1767, 4137, 202, 253,
	4107, 1415, 4073, 202, 1328, 4072, 1955, 1951, 1452, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 3531, 3532,
	3533, 1719, 1722, 5291, 1436, 3530, 3528, 3529, 3521, 3522,
	3523, 3524, 3526, 3527, 4071, 3993, 3988, 1964, 3610, 3525,
	1628, 1990, 1988, 1489, 1490, 3556, 3547, 3518, 1635, 198,
	252, 106, 1169, 4636, 110, 901, 2023, 3519, 3520, 3515,
	1226, 1959, 3514, 1226, 904, 245, 1478, 1499, 1444, 1593,
	1598, 3535, 3512, 3507, 246, 3506, 3067, 1601, 3505, 1666,
	3068, 251, 3529, 3521, 3522, 3523, 3524, 3526, 3527, 972,
	3502, 2793, 3499, 3479, 158, 3462, 3455, 3453, 3308, 2961,
	2782, 1934, 2021, 3292, 2465, 1933, 1649, 1648, 1708, 5234,
	3277, 1631, 5233, 251, 3519, 3520, 1481, 3537, 3538, 3539,
	1491, 1492, 4206, 1990, 3010, 3536, 158, 190, 190, 1787,
	3525, 1988, 253, 2428, 5155, 1750, 1752, 4380, 1939, 1940,
	1941, 1942, 1944, 1945, 5153, 251, 3525, 1353, 3636, 4019,
	5029, 3535, 1988, 251, 2426, 1725, 2022, 4293, 2020, 163,
	4950, 4935, 4931, 3561, 253, 4930, 4929, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 203, 4909, 4908, 1458, 4906,
	4882, 1458, 4881, 252, 4853, 2723, 4839, 4836, 4835, 4819,
	251, 1748, 4818, 3534, 251, 4761, 253, 4732, 245, 4683,
	1226, 4666, 4665, 4608, 253, 4604, 1226, 246, 4601, 4579,
	4439, 199, 1935, 1936, 1741, 252, 4418, 1948, 1946, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 4342, 4194, 4193, 4174,
	245, 1912, 1988, 3525, 4173, 3536, 966, 4171, 1167, 246,
	3067, 253, 3067, 4088, 1938, 253, 4076, 252, 2010, 3983,
	2008, 3909, 3903, 3870, 3775, 252, 3727, 3694, 3535, 3638,
	1792, 3484, 245, 4885, 3607, 1861, 4293, 3483, 202, 3478,
	245, 246, 3444, 2729, 3254, 3095, 2067, 2066, 1762, 246,
	1937, 3530, 3528, 3529, 3521, 3522, 3523, 3524, 3526, 3527,
	3525, 2065, 252, 2062, 1781, 2054, 252, 2052, 3008, 3007,
	202, 2972, 2965, 2931, 2807, 2007, 1906, 245, 202, 2126,
	2082, 245, 1226, 1226, 1226, 3536, 246, 2076, 1226, 2075,
	246, 4635, 2074, 2073, 2072, 1349, 3276, 1349, 2071, 2070,
	251, 2069, 2068, 251, 2049, 2048, 2047, 2046, 2045, 1988,
	2044, 2043, 1506, 2042, 2041, 202, 2040, 1810, 2039, 202,
	2038, 2037, 2036, 2035, 1226, 2034, 2023, 895, 1430, 2081,
	3541, 2009, 1846, 2169, 895, 2006, 1430, 2001, 1430, 1739,
	1443, 1913, 1372, 1939, 1940, 1941, 1942, 1944, 1945, 1363,
	4884, 253, 1744, 4611, 253, 4460, 4389, 4134, 1943, 4100,
	4091, 3530, 3528, 3529, 3521, 3522, 3523, 3524, 3526, 3527,
	3466, 2090, 3535, 1917, 2999, 1916, 1146, 1909, 1145, 2963,
	4710, 4462, 4133, 2022, 3634, 2004, 1935, 1936, 2215, 4537,
	3899, 2217, 3536, 2122, 1468, 3148, 1988, 2222, 1430, 1485,
	2148, 2224, 252, 3730, 1226, 252, 2227, 2142, 2198, 1911,
	2200, 2136, 2063, 5225, 4939, 4932, 1470, 245, 1938, 4639,
	245, 4582, 1930, 1931, 4581, 4580, 246, 2111, 1226, 246,
	2137, 2087, 2088, 3519, 3520, 4536, 1506, 5109, 5182, 2128,
	5180, 251, 3528, 3529, 3521, 3522, 3523, 3524, 3526, 3527,
	1485, 1167, 2826, 1988, 1937, 202, 4442, 2824, 202, 4349,
	1485, 1315, 1347, 2302, 1347, 2263, 1485, 2810, 190, 251,
	2233, 2055, 2056, 4348, 4347, 1485, 4346, 4345, 4344, 2808,
	4343, 4160, 4095, 2143, 1458, 2135, 1469, 2237, 4094, 2132,
	2192, 2270, 253, 901, 3911, 2236, 1483, 251, 3910, 1463,
	901, 3799, 904, 3797, 2134, 3121, 3796, 2112, 4863, 904,
	5105, 4296, 2130, 4828, 4861, 2061, 3970, 4736, 2104, 2349,
	253, 1463, 2060, 1904, 4223, 1809, 2109, 3504, 2131, 2795,
	3503, 3426, 3106, 1466, 2163, 2102, 3536, 3523, 3524, 3526,
	3527, 2251, 2032, 252, 4189, 3851, 3696, 3850, 253, 1123,
	1464, 3521, 3522, 3523, 3524, 3526, 3527, 1818, 245, 3190,
	4154, 2213, 4155, 2273, 2257, 2256, 4687, 246, 1485, 2265,
	2080, 252, 1463, 2368, 2029, 1344, 2044, 1344, 1167, 4902,
	4901, 1343, 4286, 1343, 2121, 1862, 245, 2120, 2402, 2119,
	2117, 2116, 2115, 2106, 3765, 246, 202, 2044, 1124, 252,
	4902, 2490, 2239, 4822, 1327, 1628, 1628, 5138, 2149, 4617,
	3568, 3319, 2313, 3823, 245, 2518, 1506, 1743, 4568, 1819,
	2403, 4275, 4229, 246, 202, 4220, 2796, 4199, 3937, 4521,
	3660, 2584, 2495, 2434, 4021, 3472, 2790, 4518, 3521, 3522,
	3523, 3524, 3526, 3527, 4756, 4728, 5114, 3006, 2077, 2057,
	3831, 2459, 202, 1718, 1642, 1439, 3169, 5129, 1401, 5126,
	4549, 2235, 4547, 3889, 3166, 4165, 3164, 2466, 3104, 1796,
	2277, 2345, 2278, 2353, 4924, 1460, 4623, 3351, 5036, 2363,
	3699, 2348, 2285, 2286, 2311, 3531, 3532, 3533, 4184, 3289,
	1775, 2260, 3530, 3528, 3529, 3521, 3522, 3523, 3524, 3526,
	3527, 3806, 1744, 2266, 2258, 3150, 2355, 5183, 2797, 2382,
	2794, 5184, 1628, 4759, 1628, 4755, 1628, 4734, 5115, 2413,
	2418, 2279, 2280, 3964, 2240, 3080, 4787, 958, 2283, 2284,
	5217, 5162, 3664, 2358, 1628, 1628, 2307, 4523, 1453, 1103,
	1686, 3635, 1470, 2422, 4242, 1121, 2319, 1119, 1628, 1694,
	3043, 2339, 2593, 1117, 1644, 2590, 2344, 2577, 1841, 2631,
	1628, 1465, 2575, 1628, 1628, 1628, 5287, 3066, 3232, 1115,
	2358, 2358, 1859, 901, 2252, 2405, 2406, 3066, 4940, 1860,
	4780, 1112, 904, 3064, 4767, 4571, 2356, 895, 2342, 4570,
	4240, 4239, 4231, 3064, 4214, 1941, 1942, 1944, 1945, 4213,
	4211, 2455, 4210, 3666, 1219, 1470, 4198, 4168, 4157, 1226,
	2407, 2591, 1469, 2262, 4156, 3812, 4241, 3811, 2519, 2460,
	2313, 2629, 3767, 1461, 1649, 1648, 3286, 3628, 2528, 2346,
	3477, 2383, 2472, 1462, 2341, 3729, 2840, 2338, 2354, 959,
	2592, 1695, 3476, 3083, 2362, 3475, 3474, 1226, 3430, 3188,
	3187, 2261, 4517, 3171, 3160, 2493, 1794, 1464, 3152, 2392,
	2523, 2391, 2392, 807, 2391, 3142, 2395, 3141, 3133, 3132,
	4519, 1464, 1840, 2340, 2516, 1469, 2503, 2419, 2799, 1858,
	4757, 4729, 2897, 3131, 1226, 3111, 1226, 3110, 2480, 2839,
	3071, 2615, 2987, 1226, 2529, 2704, 2169, 2169, 1506, 2661,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 3696, 1226, 2442, 1226,
	1226, 1226, 1226, 2548, 2482, 2469, 1748, 2441, 1748, 2403,
	5218, 5163, 1910, 901, 807, 1741, 2312, 2477, 2474, 2477,
	2166, 2633, 904, 2478, 2510, 1226, 3000, 1743, 2620, 1226,
	1226, 2509, 2486, 1444, 2487, 3763, 2490, 1226, 4992, 2357,
	2630, 1226, 1460, 1226, 1226, 3127, 2309, 4502, 2078, 4469,
	1731, 1506, 1730, 1167, 4479, 1167, 1460, 1226, 1226, 1226,
	1226, 2793, 1945, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 4538, 1165, 1487, 1488, 2631, 2357, 2357, 1345, 1463,
	1345, 2305, 3014, 4495, 1789, 2660, 2440, 2527, 2991, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1690, 1226,
	2657, 2658, 1387, 1226, 1645, 2538, 3125, 3938, 1811, 3527,
	4664, 3108, 2771, 2772, 2310, 1349, 3082, 1729, 2628, 1728,
	2605, 4478, 1506, 2602, 1487, 1488, 2771, 2787, 1465, 2611,
	1109, 1349, 2571, 1841, 1487, 1488, 2514, 2629, 2790, 4496,
	1487, 1488, 1465, 3050, 2306, 1900, 1703, 1226, 1506, 1487,
	1488, 2644, 2351, 2835, 3140, 4520, 3326, 2163, 2163, 3383,
	2719, 2719, 2292, 2977, 806, 2336, 4917, 2293, 1164, 3370,
	4515, 2535, 2881, 2881, 2895, 2350, 2771, 3136, 2802, 2915,
	2917, 1903, 3094, 2619, 2617, 2618, 2923, 3134, 2625, 2632,
	1461, 2735, 2352, 1146, 1872, 2648, 1146, 1146, 2649, 2650,
	1462, 5183, 2122, 1838, 1461, 2786, 1790, 3764, 2321, 1819,
	2582, 1878, 1807, 2569, 1462, 1857, 3168, 961, 960, 2948,
	2092, 3403, 1442, 3418, 5220, 2627, 2347, 2727, 4797, 2384,
	2973, 2349, 2393, 2325, 2725, 2532, 1876, 1819, 2604, 5249,
	2526, 1714, 2267, 2268, 3950, 2940, 5219, 1840, 3093, 1915,
	3167, 2479, 1430, 1430, 2990, 806, 1095, 3037, 3165, 3024,
	3163, 2111, 3949, 2731, 2799, 3028, 3372, 3663, 3137, 1839,
	4892, 2343, 2394, 3081, 2715, 2974, 864, 3386, 3135, 3039,
	808, 1159, 1347, 3441, 2294, 4569, 1166, 1315, 1004, 2536,
	4195, 2322, 3669, 1506, 2784, 4919, 2630, 1712, 1347, 4010,
	3065, 1795, 2298, 3013, 4255, 2713, 2351, 2096, 1167, 2994,
	2939, 1854, 4212, 2385, 3439, 4209, 3016, 3747, 1167, 2396,
	4142, 2962, 1167, 4181, 5111, 3038, 5221, 4129, 3032, 3942,
	2947, 2890, 2952, 2921, 3012, 2958, 2959, 2919, 3035, 3818,
	190, 1458, 2169, 755, 2906, 2929, 2930, 2877, 5229, 2945,
	2946, 1113, 2941, 1113, 4491, 3810, 3040, 2099, 2837, 1113,
	2109, 4492, 2576, 2838, 3417, 4256, 2841, 2574, 2842, 2843,
	750, 808, 4497, 2094, 2628, 1114, 1096, 3761, 3748, 3738,
	2063, 2295, 2300, 2292, 2313, 4513, 1463, 1113, 2293, 3170,
	3130, 2097, 1506, 2348, 862, 1344, 4663, 3107, 3109, 5195,
	1463, 1343, 2612, 4516, 3046, 2326, 5204, 3227, 1628, 2601,
	4254, 1344, 1167, 5203, 4494, 2701, 3009, 1343, 3385, 956,
	3054, 955, 3034, 3746, 2985, 1430, 3057, 3048, 3072, 4007,
	3223, 5251, 3023, 4498, 2334, 2095, 3026, 5170, 3027, 4371,
	3739, 5223, 41, 2055, 2056, 4179, 1226, 1226, 3041, 1226,
	2372, 3382, 3018, 2709, 3943, 2379, 2311, 3031, 3033, 3002,
	4370, 3069, 3436, 2425, 2424, 3886, 3049, 2296, 3228, 2799,
	3410, 3411, 2327, 2328, 3583, 1430, 3819, 2710, 1163, 1692,
	3265, 3128, 3379, 3161, 2711, 3737, 3114, 3047, 2716, 4798,
	3044, 5013, 3113, 3437, 1873, 2335, 3146, 3442, 1898, 2323,
	2210, 2398, 4796, 1689, 5001, 2294, 1628, 1386, 4794, 5112,
	4925, 4008, 2292, 3226, 3887, 4720, 3723, 2293, 3760, 1628,
	2303, 1628, 2369, 2298, 2603, 3309, 3816, 1628, 1101, 1100,
	3058, 3059, 3098, 3683, 3060, 3061, 3273, 3759, 1628, 1628,
	2333, 3085, 3088, 2163, 3300, 3139, 3112, 2324, 3075, 3119,
	3120, 3122, 3123, 3124, 3126, 4514, 3182, 3314, 4793, 4947,
	3129, 3756, 2397, 3384, 1430, 2098, 1430, 3056, 3189, 3149,
	1714, 4493, 2373, 3224, 3225, 2534, 1097, 3721, 4918, 3778,
	3269, 3665, 2301, 2166, 2166, 3329, 3330, 4795, 1226, 1870,
	3138, 3317, 2699, 2316, 3144, 2702, 3151, 3337, 3338, 3339,
	3316, 3886, 2295, 2300, 3181, 805, 3158, 901, 1820, 1643,
	1791, 5227, 3235, 4503, 4504, 2330, 904, 3237, 5148, 5110,
	3174, 5080, 3722, 5081, 863, 3175, 3176, 1370, 5149, 3717,
	3711, 3066, 2352, 3320, 2294, 4598, 3353, 4451, 3354, 909,
	3432, 2718, 1874, 2050, 4452, 996, 2698, 3086, 3311, 3347,
	5222, 3233, 2298, 3336, 2317, 3355, 1110, 1226, 1649, 3238,
	3632, 2369, 3321, 1226, 1226, 2350, 916, 3258, 3327, 2570,
	3803, 2976, 997, 2369, 190, 2329, 865, 5169, 3252, 4367,
	861, 2799, 3304, 2303, 3582, 2712, 3719, 4961, 2296, 3302,
	3710, 1005, 4659, 4676, 3438, 2714, 5193, 1806, 1808, 2315,
	2726, 1871, 3324, 4999, 3440, 5047, 4450, 1441, 1098, 3331,
	4550, 3332, 4268, 3295, 2297, 3388, 1877, 3390, 3305, 1226,
	1226, 2531, 4266, 5247, 4502, 1226, 2525, 774, 2312, 5228,
	2365, 2295, 2300, 751, 1914, 1357, 1099, 2290, 1226, 1226,
	1748, 2303, 4953, 1875, 1226, 1226, 3303, 2781, 2000, 5000,
	1226, 1359, 3684, 3284, 3344, 3718, 4954, 2331, 2364, 3482,
	4495, 2944, 2393, 5252, 4488, 2957, 5230, 1166, 3817, 3346,
	3360, 4023, 3362, 5236, 3364, 4610, 3366, 3367, 1354, 3359,
	3233, 4356, 4486, 4180, 3361, 2096, 3363, 4707, 3365, 4574,
	4955, 4490, 1102, 2360, 4130, 1226, 1226, 1226, 2288, 3376,
	3433, 1226, 2394, 2301, 2376, 1376, 1374, 4372, 3966, 4270,
	3401, 1226, 4268, 1825, 3145, 4968, 4496, 2296, 5053, 4982,
	752, 4838, 4266, 4573, 1360, 4572, 2310, 4313, 1226, 3409,
	3874, 2092, 3646, 2984, 3924, 2099, 2448, 4658, 1345, 3391,
	2089, 4269, 3393, 2289, 3398, 4291, 1373, 3922, 3400, 3399,
	1366, 2942, 1361, 2700, 1345, 742, 2361, 3915, 4957, 4788,
	4489, 1925, 2644, 3404, 2581, 2374, 4599, 3419, 4062, 2097,
	2303, 1924, 753, 1793, 754, 1095, 4416, 1924, 4368, 3460,
	3461, 2211, 2647, 4956, 3464, 2314, 5147, 2253, 3456, 5257,
	1919, 5168, 4754, 4704, 4847, 3690, 1358, 2250, 910, 911,
	1159, 4958, 3620, 4899, 998, 999, 3591, 4314, 4235, 4270,
	2375, 981, 4215, 4166, 4164, 3875, 3866, 2637, 2096, 3686,
	1226, 1226, 1226, 1226, 3431, 3274, 3268, 3671, 3256, 1226,
	1226, 1226, 2301, 2473, 1226, 2297, 2467, 1157, 986, 1095,
	2461, 4269, 2453, 2433, 3926, 2432, 1226, 1349, 1506, 3185,
	4006, 1683, 1226, 1378, 1226, 5019, 3087, 4969, 3575, 3576,
	4077, 3917, 4832, 1349, 1159, 814, 3070, 3967, 2099, 2166,
	4150, 4985, 3672, 1175, 2248, 2583, 3916, 2246, 2935, 1924,
	1923, 1506, 4316, 4660, 2094, 4628, 1923, 3253, 4373, 1389,
	2417, 4814, 4812, 1349, 4731, 1096, 1506, 3702, 3115, 3698,
	3465, 2515, 2097, 3697, 3424, 3592, 3471, 3402, 1430, 4090,
	3580, 3579, 1158, 1848, 1847, 2938, 2507, 3558, 2169, 2496,
	3587, 2249, 1506, 2430, 4267, 1167, 1842, 4124, 2983, 3613,
	3600, 4491, 1430, 3925, 2982, 3577, 3609, 2981, 4492, 4264,
	1430, 2980, 2979, 2098, 1737, 3648, 2095, 4274, 1735, 4497,
	913, 912, 1723, 1003, 1925, 2276, 2937, 3590, 3597, 1096,
	1925, 2936, 1226, 2638, 2297, 1164, 1724, 4912, 4589, 3650,
	3091, 4063, 3652, 3653, 1226, 3574, 3779, 3656, 4374, 3657,
	3627, 3658, 4064, 4743, 2000, 4287, 2302, 4172, 1923, 3614,
	4417, 4494, 1430, 3585, 2471, 3596, 3826, 3685, 2169, 2389,
	4161, 853, 5190, 4718, 3642, 4716, 3350, 4816, 3603, 4473,
	4498, 5256, 1000, 1001, 1347, 1226, 3231, 3939, 3934, 914,
	915, 3645, 2302, 3616, 4267, 3661, 1355, 3630, 3673, 3674,
	1347, 1430, 3622, 3623, 3624, 3625, 3735, 3667, 854, 3606,
	1458, 3569, 3654, 3618, 3553, 3554, 3555, 1101, 1100, 3637,
	3700, 3325, 1430, 3704, 1430, 3236, 3586, 3750, 3584, 3752,
	1347, 3598, 3633, 3599, 4970, 3234, 4959, 3601, 3602, 4831,
	982, 983, 4960, 1226, 1226, 1826, 2098, 4151, 2368, 3116,
	3117, 1506, 1356, 2500, 4815, 2368, 2402, 3766, 1799, 5025,
	4913, 3604, 1430, 3605, 4744, 1097, 4739, 3789, 4738, 283,
	3923, 3918, 3919, 3920, 3921, 4726, 3593, 3594, 3595, 1430,
	3687, 1101, 1100, 4472, 3801, 5033, 5016, 3701, 4423, 2163,
	3706, 3732, 4079, 3708, 2806, 4708, 1895, 1344, 4455, 3781,
	5055, 3783, 3736, 1343, 3787, 3714, 5194, 2157, 3793, 1897,
	3927, 1628, 3693, 1344, 3655, 3651, 1435, 3757, 4493, 1343,
	3621, 5192, 3794, 5131, 1430, 1628, 4727, 1628, 3662, 1097,
	4943, 1506, 2275, 4933, 813, 4714, 4682, 1894, 895, 1628,
	4162, 4466, 2597, 1344, 1892, 3670, 1866, 1864, 3776, 1343,
	1836, 3751, 1628, 4415, 5026, 4914, 1834, 1832, 1830, 1828,
	4503, 4504, 4273, 1430, 1822, 1816, 1736, 3780, 3867, 2163,
	1734, 1814, 3550, 3982, 1733, 1002, 2135, 2387, 3935, 3720,
	1349, 3639, 3640, 3932, 3641, 4113, 3768, 3882, 3728, 3836,
	3643, 3513, 3443, 3257, 3880, 3741, 3820, 1098, 3159, 3153,
	3105, 3011, 1628, 2610, 2606, 2517, 3856, 2506, 3745, 2491,
	2129, 2125, 1899, 3865, 1628, 3742, 1628, 1774, 2573, 3743,
	2540, 3744, 2411, 4800, 1658, 1099, 1665, 3314, 1671, 3771,
	4471, 3551, 3961, 3960, 3952, 3777, 3314, 1919, 3374, 3821,
	4114, 3824, 3373, 3790, 3334, 2626, 3762, 1853, 984, 985,
	2543, 2431, 3873, 2199, 3891, 3902, 2197, 3808, 3616, 3798,
	2033, 1098, 3139, 1788, 3802, 1707, 1311, 4115, 2805, 4112,
	5103, 3859, 3263, 1506, 4551, 4222, 1506, 4221, 4123, 4555,
	4533, 1102, 1111, 3940, 4121, 5015, 4626, 1156, 3809, 1099,
	4560, 4546, 4484, 4483, 5166, 3734, 1761, 3876, 1766, 4621,
	3930, 3879, 4312, 1896, 901, 4455, 4303, 2141, 4238, 3828,
	3113, 1226, 1780, 904, 1785, 3883, 3749, 1226, 1226, 4122,
	3863, 1226, 1226, 1226, 4118, 1226, 3807, 3813, 3862, 2599,
	3857, 1893, 4217, 4187, 1226, 2169, 2598, 4185, 1891, 4163,
	1865, 1863, 3869, 1226, 1835, 1102, 3864, 1347, 1226, 4119,
	1833, 1831, 1829, 1827, 1506, 3888, 3788, 3931, 1821, 1815,
	3852, 3287, 3279, 1226, 3897, 1813, 190, 190, 1732, 3959,
	3958, 1506, 3890, 3800, 3900, 3901, 3272, 4003, 3264, 1928,
	1844, 2169, 2169, 1226, 1226, 3249, 1226, 1226, 1226, 3248,
	3928, 3881, 3229, 3030, 3025, 2429, 3933, 2427, 2404, 2370,
	3955, 2332, 2318, 1504, 1226, 2572, 2304, 2539, 1226, 2410,
	2169, 2169, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226, 1226,
	1226, 1226, 2232, 1226, 2229, 3968, 2226, 3985, 4035, 2223,
	4036, 1226, 1226, 2169, 2218, 3995, 3996, 2216, 1226, 1116,
	1118, 1120, 3946, 2212, 3947, 2203, 3948, 3791, 1324, 1226,
	1344, 5161, 2379, 3965, 1167, 5085, 1343, 3422, 3953, 5184,
	1349, 1349, 2254, 4911, 1226, 2242, 2243, 3394, 3395, 3392,
	3222, 3999, 4116, 5067, 4976, 1325, 4642, 3956, 4567, 4470,
	4117, 3315, 3668, 1929, 2609, 2271, 3962, 1688, 4015, 3963,
	4849, 3066, 3066, 3092, 4842, 4324, 1506, 3990, 3992, 2313,
	1889, 1890, 2530, 1410, 2470, 2166, 4109, 3064, 3089, 1430,
	1430, 4002, 2567, 2562, 1409, 2657, 4026, 4009, 4011, 4012,
	5066, 4074, 4018, 2537, 1430, 1430, 2163, 895, 1430, 4524,
	1345, 4025, 2607, 4096, 4120, 4562, 1935, 1936, 1935, 1936,
	3186, 1158, 1812, 1480, 2657, 4041, 1345, 1226, 842, 3096,
	4870, 4741, 4066, 4424, 4402, 4038, 3423, 4148, 3715, 4033,
	4040, 4149, 3097, 4034, 3118, 1477, 1184, 1932, 1938, 3792,
	1437, 1377, 2163, 2163, 5178, 1226, 1345, 4070, 5139, 2608,
	4075, 4127, 4128, 3097, 280, 2166, 3247, 4300, 4067, 1326,
	4086, 4087, 2241, 1410, 4234, 2454, 4140, 4141, 1448, 3166,
	4147, 2163, 2163, 1410, 1937, 3164, 1937, 3173, 1226, 1226,
	4186, 190, 4188, 4083, 4084, 845, 845, 3157, 4233, 3155,
	3099, 859, 3101, 4108, 1869, 5024, 5006, 1347, 1347, 4081,
	4975, 3156, 3143, 739, 2163, 4972, 3100, 4910, 4857, 4098,
	4833, 2118, 4013, 4807, 4719, 4310, 4302, 4167, 1226, 1226,
	4290, 4106, 3868, 3294, 2922, 2238, 1226, 2150, 1234, 5224,
	2157, 2157, 5057, 4740, 1641, 4032, 1640, 5058, 1634, 1160,
	3631, 2389, 5255, 1798, 4099, 3519, 3520, 1628, 1628, 1797,
	1628, 1935, 1936, 4143, 1628, 5057, 4974, 1628, 5197, 4237,
	5058, 4200, 1430, 901, 2282, 3052, 5088, 4252, 2281, 3051,
	1652, 1651, 904, 4204, 1652, 1652, 287, 287, 287, 4394,
	745, 746, 2801, 761, 745, 761, 772, 2169, 4132, 812,
	3377, 4205, 4207, 832, 2836, 2282, 2281, 4309, 839, 839,
	839, 839, 1621, 1868, 4834, 4781, 1867, 4224, 287, 4230,
	1344, 1344, 4564, 4559, 4236, 4558, 1343, 1343, 4453, 4192,
	4449, 4448, 4390, 4364, 4197, 4131, 4014, 3785, 977, 3782,
	3380, 1628, 2027, 2026, 3397, 287, 2614, 1226, 5240, 5205,
	5071, 5010, 1678, 5009, 5008, 1349, 1226, 4317, 3113, 4942,
	4299, 4326, 4283, 4941, 4888, 1628, 4298, 4260, 4886, 4810,
	1628, 1628, 1628, 4253, 4246, 4257, 4258, 4771, 4332, 4711,
	4706, 4705, 4136, 4703, 4702, 4700, 4606, 4586, 4522, 4272,
	4297, 4461, 4276, 1628, 4447, 1628, 4446, 4445, 3300, 4337,
	1628, 4330, 1506, 4277, 1756, 4183, 4243, 4175, 3182, 3872,
	4318, 3871, 3314, 3707, 4321, 3649, 3381, 4250, 3371, 3343,
	1771, 3342, 4334, 3341, 4289, 4261, 4285, 3340, 3278, 3251,
	4306, 3250, 3090, 1506, 4338, 3021, 1226, 1226, 4320, 1419,
	3015, 3693, 1226, 1226, 2169, 3004, 3003, 1226, 1226, 2992,
	1226, 2730, 2600, 4301, 2568, 1226, 2561, 2560, 2559, 2558,
	4262, 2557, 2468, 4271, 2443, 2439, 1226, 2438, 2437, 2436,
	2435, 4304, 2206, 1345, 4350, 2205, 2204, 2202, 2140, 4353,
	1801, 2139, 1226, 1888, 745, 745, 1887, 1823, 4319, 1702,
	4328, 1701, 287, 1700, 4327, 4322, 1699, 1698, 2163, 1697,
	1696, 1691, 1687, 4335, 1685, 4336, 1684, 4352, 1618, 1617,
	4375, 1616, 1599, 1497, 4358, 1613, 1419, 1496, 1495, 1494,
	1493, 1440, 1347, 1396, 1395, 1394, 1393, 1392, 1391, 1390,
	4376, 1388, 2166, 4388, 1383, 1382, 4354, 1381, 4361, 1380,
	1379, 970, 8, 1349, 1306, 2244, 4384, 1122, 1108, 4916,
	4501, 1349, 4500, 4369, 4499, 1506, 1506, 2596, 1506, 97,
	1693, 933, 91, 2377, 4182, 1349, 4251, 4856, 1071, 5054,
	4351, 4946, 1676, 941, 5035, 3709, 1628, 1628, 2166, 2166,
	3191, 2542, 1824, 2544, 3608, 2964, 4998, 4398, 1419, 1419,
	3481, 4877, 4675, 2804, 2031, 3562, 1506, 93, 1210, 1256,
	4597, 3613, 4596, 4485, 4169, 3839, 4593, 2166, 2166, 4592,
	2154, 2156, 4363, 4437, 1174, 1509, 5079, 2255, 5246, 1216,
	2269, 1226, 4414, 2264, 3005, 2880, 2157, 1233, 1230, 2158,
	2160, 1232, 1349, 1231, 1349, 1344, 2159, 4456, 4457, 2051,
	2166, 1343, 1229, 2153, 4308, 2163, 3259, 3298, 3898, 1742,
	1740, 1073, 4432, 4434, 2259, 2724, 2788, 3470, 2024, 1430,
	1190, 4474, 4475, 4511, 4532, 1212, 2785, 1371, 4508, 1506,
	4508, 1430, 1201, 4425, 1430, 4421, 4541, 3588, 4459, 4544,
	4428, 4430, 4431, 4438, 4477, 4436, 4426, 4427, 3567, 1226,
	4525, 4465, 1506, 3885, 4468, 4105, 4441, 2636, 4360, 950,
	3516, 2791, 1362, 2903, 2896, 2892, 190, 3659, 3288, 1905,
	1347, 4689, 2002, 4480, 3299, 1901, 4454, 1474, 1347, 1194,
	2722, 2015, 3448, 4463, 2646, 4467, 3892, 3611, 2998, 5060,
	2564, 4476, 1347, 4022, 1628, 1628, 3378, 2447, 1323, 4482,
	1322, 1369, 1321, 4563, 5041, 4565, 5038, 4429, 2367, 4600,
	3834, 3835, 2247, 3045, 2734, 3853, 1206, 3356, 4526, 3357,
	1612, 1430, 2588, 1345, 1345, 3954, 4612, 3573, 4548, 4288,
	1704, 4527, 4542, 1506, 4748, 1218, 1987, 3218, 1628, 3217,
	4905, 1459, 1457, 1456, 4566, 4590, 1455, 5214, 3184, 4557,
	4587, 2380, 4178, 4177, 4629, 4176, 250, 3416, 4584, 1347,
	1926, 1347, 1918, 4545, 1628, 1628, 1628, 1628, 1628, 1628,
	1628, 247, 249, 248, 3713, 4110, 3617, 1800, 5137, 4202,
	4618, 4613, 3825, 1344, 25, 846, 4577, 847, 1506, 1343,
	848, 1344, 3055, 4512, 2274, 4583, 1476, 1343, 4153, 24,
	1226, 1226, 1226, 4576, 23, 1344, 22, 4630, 4575, 4585,
	21, 1343, 4528, 4529, 4595, 120, 44, 4591, 1506, 4607,
	4633, 20, 162, 1226, 4615, 4603, 1226, 1226, 4609, 4602,
	4624, 160, 137, 157, 156, 4661, 1226, 129, 155, 2169,
	154, 153, 4638, 152, 1226, 1226, 151, 159, 4631, 150,
	149, 144, 148, 147, 146, 145, 143, 4653, 141, 142,
	136, 1506, 140, 1628, 139, 138, 135, 4645, 4644, 134,
	133, 132, 1344, 131, 1344, 4667, 130, 128, 1343, 4647,
	1343, 161, 4662, 4651, 2166, 127, 126, 1430, 204, 125,
	124, 123, 122, 121, 825, 826, 63, 62, 117, 118,
	19, 42, 14, 67, 4698, 68, 4699, 4672, 18, 1506,
	13, 37, 4531, 96, 109, 1504, 108, 1226, 107, 38,
	104, 36, 17, 16, 15, 4540, 102, 101, 4543, 100,
	1226, 35, 33, 11, 9, 39, 2113, 12, 5, 1226,
	195, 4684, 194, 197, 2169, 4673, 1364, 4678, 4695, 4696,
	4725, 4654, 193, 4655, 1226, 196, 95, 1226, 1613, 4713,
	192, 191, 94, 31, 10, 187, 4826, 4295, 87, 189,
	188, 4762, 4763, 1226, 186, 185, 1226, 184, 88, 85,
	1385, 183, 90, 1506, 182, 86, 4751, 89, 4673, 1633,
	29, 1430, 287, 6, 287, 287, 4790, 1414, 287, 1424,
	66, 1628, 1628, 1628, 7, 4724, 4656, 4782, 1613, 4784,
	1438, 4785, 2302, 4730, 3936, 4722, 112, 4723, 832, 4721,
	4770, 832, 1349, 113, 4799, 40, 83, 82, 81, 80,
	28, 2166, 65, 27, 179, 228, 2660, 227, 1345, 226,
	2163, 4786, 225, 224, 839, 223, 222, 1506, 4809, 4768,
	1628, 4817, 4825, 221, 216, 220, 218, 4773, 4508, 4813,
	3445, 3446, 217, 219, 215, 241, 4843, 240, 287, 4772,
	287, 287, 1414, 3836, 287, 287, 239, 238, 237, 4783,
	231, 230, 236, 1424, 235, 4801, 1226, 1226, 4760, 4830,
	234, 4802, 4791, 233, 232, 229, 244, 287, 76, 1654,
	4811, 214, 213, 1226, 2169, 212, 210, 4829, 206, 4806,
	2660, 209, 211, 4824, 208, 1674, 4804, 4805, 4852, 4844,
	4854, 4846, 1681, 207, 205, 243, 242, 77, 177, 178,
	1430, 75, 176, 1430, 175, 1430, 1430, 4851, 4633, 4845,
	4850, 1706, 174, 1424, 4840, 2163, 2488, 287, 287, 173,
	1414, 172, 171, 1226, 170, 1226, 74, 1226, 4900, 181,
	180, 4858, 26, 2, 2502, 2504, 4774, 1349, 4775, 4866,
	4867, 832, 1, 287, 287, 0, 0, 4865, 2508, 0,
	1226, 0, 1349, 0, 4776, 1768, 0, 4898, 0, 1347,
	0, 4869, 0, 2520, 2521, 2522, 1776, 0, 0, 0,
	0, 977, 4887, 4508, 0, 4889, 4875, 4890, 4891, 0,
	0, 4928, 0, 0, 0, 0, 0, 4896, 4508, 4897,
	0, 0, 0, 4820, 0, 0, 1345, 0, 0, 4893,
	0, 0, 4937, 0, 1345, 4927, 0, 4920, 0, 1349,
	1349, 4951, 3543, 3544, 3545, 3546, 0, 4921, 1345, 0,
	0, 4949, 0, 0, 4848, 0, 0, 1349, 0, 0,
	1349, 0, 2157, 0, 1628, 0, 0, 3241, 4964, 4965,
	3244, 0, 3246, 4936, 1628, 4508, 4508, 0, 0, 0,
	0, 0, 287, 0, 0, 4789, 4979, 0, 0, 4981,
	4938, 1226, 1226, 4508, 0, 0, 4508, 0, 0, 2641,
	0, 1226, 1344, 0, 0, 2163, 0, 287, 1343, 0,
	4962, 0, 2458, 0, 4973, 1345, 2013, 1345, 3291, 4944,
	2018, 3291, 4978, 4829, 0, 0, 0, 0, 0, 0,
	0, 4987, 0, 4986, 1347, 0, 0, 0, 4991, 4990,
	0, 4993, 2157, 0, 0, 0, 0, 0, 0, 1347,
	5032, 0, 1226, 1226, 5003, 0, 1226, 5011, 0, 5007,
	1628, 1430, 0, 0, 1430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5002, 0, 0, 5014, 0, 5059,
	4989, 0, 0, 5040, 5043, 0, 0, 0, 5022, 5023,
	0, 0, 5056, 0, 0, 0, 5063, 0, 5031, 5030,
	0, 5012, 0, 0, 0, 3368, 1347, 1347, 0, 0,
	0, 0, 0, 5049, 0, 5062, 5045, 5084, 0, 0,
	1226, 1226, 1226, 5082, 1347, 0, 0, 1347, 0, 0,
	0, 0, 0, 5051, 0, 5044, 5052, 0, 0, 5048,
	0, 0, 0, 5068, 0, 2898, 0, 1344, 0, 5075,
	5072, 0, 0, 1343, 0, 5083, 0, 1226, 0, 5118,
	0, 0, 1344, 5087, 5098, 5099, 2166, 0, 1343, 5101,
	5123, 0, 5100, 0, 5050, 0, 0, 0, 0, 0,
	4994, 0, 4995, 2589, 0, 0, 0, 0, 5144, 0,
	0, 0, 2302, 0, 0, 5133, 5146, 5145, 5135, 5120,
	0, 5154, 0, 0, 5136, 0, 0, 5152, 5121, 0,
	0, 0, 745, 0, 0, 1226, 0, 5158, 0, 1344,
	1344, 5134, 0, 1430, 5150, 1343, 1343, 5151, 4809, 0,
	5167, 5177, 5160, 287, 0, 287, 0, 1344, 0, 287,
	1344, 5159, 0, 1343, 0, 0, 1343, 5185, 0, 0,
	5188, 0, 1654, 1414, 1424, 287, 5181, 287, 2138, 0,
	5173, 5174, 5179, 5164, 5176, 287, 0, 761, 5187, 5198,
	5201, 2166, 287, 5202, 1349, 5200, 1349, 5208, 5189, 5040,
	5191, 5207, 5043, 0, 5196, 5210, 0, 5199, 2207, 0,
	0, 0, 0, 5206, 0, 5175, 0, 0, 0, 0,
	287, 5216, 0, 5209, 0, 5211, 0, 287, 5062, 0,
	4508, 0, 4508, 0, 0, 1430, 0, 0, 0, 0,
	0, 0, 0, 0, 5231, 0, 5232, 5237, 0, 0,
	0, 5239, 5238, 0, 0, 0, 5241, 5244, 0, 5242,
	832, 0, 0, 0, 0, 1226, 1226, 5250, 5119, 3924,
	0, 0, 0, 5248, 1226, 1226, 0, 0, 0, 0,
	5253, 0, 3922, 0, 5258, 5265, 5264, 0, 0, 5267,
	5270, 5262, 3915, 5269, 0, 0, 5268, 5273, 839, 5274,
	839, 5261, 5272, 5266, 3300, 5271, 0, 5235, 0, 0,
	839, 839, 1430, 5280, 5278, 5283, 5279, 5282, 5277, 5286,
	0, 5281, 5284, 0, 0, 0, 0, 0, 5290, 2157,
	0, 5289, 1226, 0, 3300, 0, 5292, 0, 5297, 5293,
	5286, 5295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2166, 0, 0, 0, 0, 0, 5259, 5260, 1935,
	1936, 1347, 0, 1347, 1419, 1345, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2157, 2157, 0, 0, 3926,
	0, 0, 0, 1966, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 3978, 3979, 3917, 5215, 3183, 0,
	0, 0, 0, 0, 2157, 2157, 0, 0, 0, 0,
	0, 3916, 0, 1419, 0, 5294, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2157, 0, 0,
	0, 0, 0, 0, 0, 1419, 1419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 287, 0, 0, 3925, 0,
	0, 0, 0, 0, 1344, 0, 1344, 0, 0, 0,
	1343, 0, 1343, 0, 4042, 4043, 4044, 4045, 4046, 4047,
	4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057,
	4058, 4059, 4060, 4061, 0, 4065, 0, 0, 0, 3913,
	1345, 0, 0, 0, 0, 0, 0, 3328, 0, 0,
	0, 0, 287, 0, 0, 1345, 287, 0, 3335, 0,
	0, 287, 0, 0, 0, 1943, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 287, 0, 287, 0, 0, 0, 745,
	0, 287, 3724, 3725, 0, 3726, 0, 0, 0, 0,
	0, 0, 0, 832, 0, 0, 0, 977, 0, 0,
	0, 0, 1345, 1345, 0, 0, 0, 0, 1965, 1967,
	1613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1345, 0, 0, 1345, 0, 0, 0, 287, 0, 1414,
	287, 0, 0, 0, 0, 0, 0, 0, 3772, 3773,
	0, 3774, 0, 0, 0, 832, 0, 0, 0, 0,
	3406, 0, 287, 0, 0, 3923, 3918, 3919, 3920, 3921,
	2541, 0, 0, 0, 0, 287, 287, 1958, 287, 0,
	287, 0, 287, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 78, 3927, 0, 0, 0, 2578,
	0, 0, 2579, 0, 2580, 0, 0, 0, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 287,
	287, 287, 287, 0, 0, 0, 0, 0, 0, 84,
	0, 2898, 2898, 0, 0, 0, 0, 0, 0, 0,
	0, 2157, 0, 0, 0, 0, 0, 2728, 1988, 812,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 0,
	0, 971, 0, 0, 0, 0, 0, 0, 1633, 0,
	0, 1972, 1966, 0, 51, 1633, 114, 0, 0, 0,
	1938, 1959, 98, 111, 0, 0, 0, 0, 0, 0,
	1985, 0, 1613, 0, 1613, 0, 2736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 3519,
	3520, 0, 3537, 3538, 3539, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 3987, 0, 0, 0, 1954, 0, 2157, 0,
	0, 0, 0, 1990, 1188, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2898, 2898, 2898, 2898, 0, 745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 1345, 3534, 1345,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 287,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 1960, 1961, 1962, 1963, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 1424, 0, 0, 1948, 1946, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0,
	2746, 2747, 2748, 2765, 2766, 2767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	1986, 2768, 0, 0, 0, 0, 0, 1965, 1967, 0,
	0, 0, 287, 1424, 0, 3525, 761, 0, 761, 0,
	0, 0, 3020, 0, 1982, 0, 1983, 0, 287, 0,
	103, 287, 0, 1952, 1953, 287, 1991, 287, 0, 0,
	0, 0, 1414, 0, 287, 287, 0, 1424, 1424, 3036,
	0, 1974, 0, 0, 287, 0, 2758, 0, 0, 3519,
	3520, 0, 3537, 3538, 3539, 2754, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3986, 0, 0, 3541, 0, 0, 0, 198,
	0, 106, 0, 0, 110, 0, 0, 0, 839, 839,
	0, 0, 839, 839, 0, 0, 0, 0, 0, 0,
	0, 3079, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 251, 0, 287, 0, 0, 0, 3535, 0, 972,
	0, 0, 0, 0, 158, 0, 1973, 287, 3534, 0,
	0, 0, 0, 2759, 2760, 2761, 2762, 1988, 0, 0,
	0, 287, 0, 2753, 0, 0, 0, 0, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	1181, 287, 287, 3179, 1654, 0, 1964, 0, 1988, 0,
	0, 0, 0, 0, 0, 203, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 0, 0, 0, 0, 0,
	1959, 3804, 2763, 2764, 0, 3525, 0, 0, 245, 287,
	3239, 0, 0, 0, 0, 0, 0, 246, 0, 1613,
	1613, 199, 0, 0, 0, 0, 0, 0, 1977, 3829,
	0, 0, 0, 0, 0, 2756, 0, 1654, 0, 0,
	287, 0, 3858, 0, 0, 0, 202, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3283, 0,
	0, 3536, 1990, 0, 0, 0, 0, 0, 3079, 0,
	745, 0, 0, 2157, 0, 3541, 0, 0, 0, 3179,
	977, 3079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3905, 0, 0, 0, 0, 0, 1613, 0,
	0, 4305, 0, 287, 3929, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3535, 0, 0,
	0, 0, 2458, 287, 1414, 287, 0, 0, 0, 0,
	0, 0, 0, 1633, 0, 3358, 287, 0, 1975, 1414,
	0, 1414, 0, 1414, 0, 0, 0, 0, 4681, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 4355, 0,
	3494, 0, 0, 0, 3495, 0, 0, 0, 2157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 287, 287, 1414, 2898, 2898, 1414, 1988, 2757,
	287, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	3531, 3532, 3533, 0, 1633, 1633, 0, 3530, 3528, 3529,
	3521, 3522, 3523, 3524, 3526, 3527, 0, 0, 0, 4733,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 1935, 1936, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 1419,
	1188, 1188, 1188, 0, 0, 1966, 0, 0, 0, 0,
	0, 3536, 0, 1938, 0, 2898, 2898, 2898, 2898, 2898,
	2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898, 2898,
	2898, 2898, 2898, 2898, 2898, 0, 2898, 0, 0, 0,
	1991, 1590, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 2157, 1954,
	0, 0, 3519, 3520, 0, 3537, 3538, 3539, 2743, 2744,
	2745, 2769, 2755, 2749, 0, 2751, 2752, 2750, 2737, 2738,
	2739, 2740, 2741, 2742, 0, 0, 0, 0, 0, 0,
	1654, 0, 0, 0, 0, 0, 1613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3981, 1633, 1633, 1633, 1633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4874, 0, 1960, 1961, 1962,
	1963, 3534, 0, 0, 0, 0, 0, 1943, 0, 0,
	3531, 3532, 3533, 0, 0, 0, 0, 3530, 3528, 3529,
	3521, 3522, 3523, 3524, 3526, 3527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4553, 0, 0, 0, 0, 0, 0, 4904, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1965, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4926, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 3525, 0,
	0, 0, 0, 4605, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 868, 0, 4614, 745, 0, 0, 1958,
	0, 745, 0, 0, 745, 0, 0, 745, 745, 0,
	0, 0, 0, 745, 0, 0, 0, 0, 4637, 879,
	0, 287, 3519, 3520, 3542, 3537, 3538, 3539, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 4244, 4245, 881,
	0, 0, 0, 0, 4247, 0, 0, 4248, 3541, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 287, 287,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3079, 3079, 287, 873, 3679, 3682, 0, 0,
	0, 0, 889, 3079, 0, 2138, 0, 0, 0, 0,
	0, 0, 0, 0, 3079, 2138, 878, 3079, 2138, 1964,
	0, 2138, 0, 0, 3679, 4333, 0, 0, 0, 0,
	2502, 4339, 4340, 0, 0, 0, 287, 287, 3682, 0,
	287, 0, 0, 1959, 4717, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 3682,
	0, 287, 0, 3755, 0, 3755, 0, 0, 0, 877,
	0, 1414, 0, 0, 0, 0, 0, 0, 3525, 0,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 0,
	0, 0, 0, 3079, 0, 3079, 0, 3786, 3079, 3682,
	0, 0, 3079, 0, 0, 1990, 0, 0, 0, 0,
	0, 1419, 0, 875, 0, 0, 3682, 0, 0, 832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1590, 0, 3536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3541, 0,
	0, 1414, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 888, 0, 0, 0, 287, 0, 3830, 0,
	0, 0, 3832, 3079, 0, 0, 287, 0, 0, 287,
	3535, 0, 3861, 1424, 2458, 0, 1955, 1951, 0, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 287, 0,
	0, 0, 0, 3283, 0, 0, 1414, 0, 287, 0,
	0, 3079, 0, 745, 0, 0, 0, 0, 0, 0,
	3079, 0, 0, 0, 0, 0, 4443, 4444, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1188, 0,
	0, 0, 0, 0, 870, 0, 1590, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1633, 1633,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3944, 0, 3531, 3532, 3533, 0, 874, 0, 0,
	3530, 3528, 3529, 3521, 3522, 3523, 3524, 3526, 3527, 0,
	0, 0, 0, 0, 3951, 0, 0, 0, 1654, 0,
	0, 0, 1414, 287, 0, 287, 0, 0, 0, 0,
	0, 1414, 0, 0, 1414, 0, 0, 806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 884, 0, 0, 0, 0, 0, 872,
	0, 4934, 0, 287, 3536, 0, 0, 0, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633,
	1633, 1633, 1633, 1633, 1633, 1633, 1633, 1633, 0, 1633,
	4948, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 0, 0, 2502, 0, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 882, 4977, 0, 0, 0,
	0, 4020, 0, 0, 1966, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 876, 0,
	0, 1935, 1936, 0, 0, 0, 1590, 0, 0, 0,
	0, 0, 0, 808, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 871, 1966, 0, 0, 1937, 0,
	0, 0, 0, 1938, 4646, 0, 4648, 4649, 4650, 1957,
	4652, 0, 0, 0, 1419, 0, 0, 0, 1954, 886,
	887, 0, 883, 0, 1971, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 3531, 3532, 3533, 0, 0, 287, 287,
	3530, 3528, 3529, 3521, 3522, 3523, 3524, 3526, 3527, 2898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2458, 5069, 0, 0, 5070, 0,
	0, 0, 0, 0, 0, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 4701, 0, 0, 1943, 0, 0, 0,
	0, 1419, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 1936, 0, 1968, 1969,
	1970, 1979, 1980, 1981, 0, 0, 0, 0, 0, 0,
	2898, 0, 0, 0, 0, 0, 0, 1943, 1972, 1966,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 1965,
	1967, 0, 0, 0, 0, 0, 0, 1985, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 1952, 1953, 0, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 0, 832, 0,
	1965, 1967, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 4216, 0, 0, 4218, 4219,
	0, 0, 0, 0, 0, 3755, 0, 0, 0, 0,
	0, 4803, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 0, 0, 0, 0, 1590, 1958,
	0, 0, 0, 0, 3179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3682,
	0, 287, 0, 0, 1971, 761, 761, 1424, 0, 0,
	0, 1960, 1961, 1962, 1963, 0, 0, 0, 0, 1988,
	287, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 3283, 0, 0, 3283, 2138, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 2898, 0, 3861, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 287, 0,
	1988, 0, 0, 287, 1976, 0, 0, 1986, 0, 0,
	0, 1590, 0, 0, 1965, 1967, 0, 0, 1964, 0,
	0, 0, 3079, 287, 0, 0, 0, 0, 0, 0,
	0, 1982, 3179, 1983, 0, 977, 3079, 0, 2898, 0,
	1952, 1953, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 2898, 0, 0, 0, 287, 0, 0,
	0, 3682, 0, 1958, 3036, 0, 0, 0, 0, 0,
	0, 0, 1590, 1959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 1973, 0, 1990, 0, 0, 4399, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 79, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 0, 0, 1971, 2502, 84, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1613, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 287, 0, 1964, 0, 0, 92, 1654, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 1959, 0, 0,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 971, 1424, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	1971, 1424, 114, 287, 1424, 1971, 0, 0, 98, 111,
	0, 0, 0, 0, 0, 3079, 3079, 0, 3679, 1971,
	0, 3755, 3079, 0, 1971, 0, 0, 0, 0, 1990,
	4510, 0, 4510, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3079, 0, 2138, 1419, 0, 0,
	3679, 0, 1654, 1654, 287, 3682, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3682, 0,
	287, 3682, 99, 287, 0, 0, 3755, 0, 0, 0,
	0, 0, 1590, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 1971, 3079, 0, 3079,
	287, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 3209, 0, 1949, 1950, 1956, 1978,
	1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942,
	1944, 1945, 78, 0, 1935, 1936, 0, 2779, 0, 3079,
	3079, 2780, 0, 0, 0, 3283, 3283, 0, 3199, 3197,
	79, 0, 3679, 0, 0, 3201, 3203, 3193, 1966, 0,
	0, 0, 287, 0, 0, 0, 1938, 84, 0, 0,
	0, 0, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1633, 0, 0, 0, 0, 0, 0, 78,
	0, 0, 0, 1991, 0, 0, 0, 0, 3219, 0,
	0, 0, 1937, 0, 0, 0, 2995, 79, 92, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 84, 0, 103, 0, 0, 0,
	0, 0, 0, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 1633, 114, 92, 1971, 0, 0, 0,
	98, 111, 0, 0, 0, 0, 0, 0, 3976, 0,
	0, 0, 0, 0, 0, 198, 0, 106, 0, 0,
	110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 1961, 1962, 1963, 0, 0, 971, 0, 0, 0,
	1943, 0, 2902, 0, 0, 0, 0, 251, 0, 51,
	0, 114, 0, 0, 0, 972, 1971, 98, 111, 0,
	158, 0, 1971, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 3079, 2138, 3195, 2138, 0, 0, 3861, 0,
	0, 0, 0, 0, 0, 3211, 0, 287, 0, 0,
	0, 0, 0, 1965, 1967, 0, 0, 4749, 253, 4749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3210,
	3200, 3198, 3202, 3204, 3194, 3196, 3212, 3214, 0, 1952,
	1953, 99, 0, 0, 832, 163, 0, 3206, 3208, 3216,
	0, 0, 0, 0, 0, 3755, 1654, 0, 1654, 1414,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 252,
	0, 0, 1958, 0, 0, 0, 0, 0, 3682, 0,
	287, 0, 0, 3220, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 199, 0, 1633,
	0, 0, 0, 0, 0, 0, 0, 3861, 0, 0,
	4510, 0, 0, 1654, 0, 0, 0, 3079, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4837, 0, 0, 0, 0, 0, 103, 1935,
	1936, 0, 0, 0, 1654, 0, 0, 0, 0, 0,
	0, 1633, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1966, 0, 3519, 3520, 0, 3537, 3538,
	3539, 1938, 287, 287, 0, 0, 1633, 0, 2091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 4020, 198, 1991, 106,
	0, 0, 110, 3213, 0, 0, 0, 1937, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3755, 4895, 251,
	0, 0, 0, 0, 0, 3861, 1959, 972, 0, 0,
	0, 0, 158, 0, 3534, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 4510, 106, 0, 0, 110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4510, 0, 0, 0, 3221, 0, 0, 0, 0, 0,
	253, 0, 0, 3205, 3207, 3215, 251, 0, 1590, 0,
	0, 0, 0, 0, 972, 0, 287, 0, 1990, 158,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 761,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 1590, 0, 203, 0, 0, 0, 4510, 4510, 0,
	0, 252, 0, 0, 0, 0, 1590, 253, 0, 0,
	0, 3525, 0, 0, 0, 4510, 245, 287, 4510, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 2138, 199,
	0, 0, 1590, 0, 163, 0, 0, 0, 1965, 1967,
	1654, 0, 1654, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 1173, 0, 1753, 0, 0, 0, 252, 1955,
	1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944,
	1945, 1424, 1188, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 1188, 5020, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 4749, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3535, 0, 0, 1971, 0, 0, 3079,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1966, 1971, 0, 0, 0, 0,
	0, 287, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 4020, 0, 0, 0, 0, 1991,
	0, 1590, 0, 0, 0, 0, 1971, 0, 1937, 0,
	1971, 0, 0, 0, 1988, 0, 0, 0, 1654, 1957,
	0, 0, 0, 0, 1971, 0, 0, 0, 1954, 0,
	0, 0, 0, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
	1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
	1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971,
	1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 1971, 0,
	0, 1959, 0, 0, 1971, 0, 1971, 1971, 1971, 1971,
	0, 1590, 0, 0, 0, 0, 0, 0, 2902, 2902,
	0, 0, 3861, 0, 0, 0, 0, 3536, 0, 0,
	0, 0, 0, 1971, 0, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3079, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 4510, 0, 4510, 0, 0, 1654, 1935, 1936,
	0, 0, 0, 0, 1971, 0, 0, 0, 0, 1976,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 1965,
	1967, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 1971, 0, 1982, 1971, 1983, 0,
	1971, 0, 0, 1971, 0, 1952, 1953, 0, 0, 1971,
	1971, 1971, 1971, 1971, 1971, 1971, 0, 1991, 3079, 0,
	0, 0, 0, 1974, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 1590, 0, 3179, 1590, 1957, 1958, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 1954, 0, 3079, 0,
	0, 0, 0, 0, 0, 0, 3531, 3532, 3533, 0,
	0, 0, 3179, 3530, 3528, 3529, 3521, 3522, 3523, 3524,
	3526, 3527, 0, 0, 0, 1971, 0, 0, 3540, 0,
	2902, 2902, 2902, 2902, 0, 0, 1971, 1984, 1971, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 3975, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	0, 1590, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 0, 0, 0, 0, 0, 0, 1965, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 1966, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 1990, 0, 1590, 0, 0, 0,
	0, 1433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 1173, 1173,
	1173, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 1603, 0, 0, 0, 0, 0, 1619,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 3434, 0, 0, 0, 0, 4405, 0, 0, 1656,
	0, 1662, 0, 1668, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 1960, 1961, 1962, 1963, 0, 0, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 1971, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1764, 0, 0, 1965, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 1783,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1855, 0, 1972, 1966, 0, 0, 0, 0, 0,
	1971, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 1937, 0,
	0, 0, 1590, 0, 0, 0, 1988, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 1971,
	1971, 0, 2902, 2902, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 3540, 3540, 0, 0,
	1971, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 0, 1971, 1964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1971, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2012, 1959,
	0, 0, 0, 0, 2025, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 2902, 2902, 2902, 2902, 2902, 2902, 2902, 2902,
	2902, 2902, 2902, 2902, 2902, 2902, 2902, 2902, 2902, 2902,
	2902, 2902, 0, 2902, 3540, 3540, 3540, 3540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1976,
	0, 1990, 1986, 0, 0, 1590, 1590, 0, 1590, 1965,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 1982, 0, 1983, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 0,
	2085, 2085, 2085, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 1188, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1935, 1936, 0, 0, 1984, 0, 1590,
	286, 286, 286, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 1973, 0,
	0, 0, 1590, 0, 0, 1938, 0, 0, 0, 1988,
	0, 0, 902, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 902,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 1173, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 1964, 0,
	1971, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1590, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2873, 2874, 2875, 2876, 2869, 2870,
	2871, 2872, 0, 0, 0, 0, 0, 3427, 0, 0,
	1977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 1960,
	1961, 1962, 1963, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 2849, 2850,
	2851, 2852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1965, 1967, 0, 0, 0, 0, 0, 0,
	0, 1590, 2861, 2862, 2863, 2864, 2857, 2858, 2859, 2860,
	2865, 2866, 2867, 2868, 0, 0, 0, 0, 1952, 1953,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 1590,
	0, 1958, 0, 0, 0, 0, 3989, 0, 0, 0,
	0, 0, 0, 0, 1971, 1971, 0, 0, 1971, 3540,
	3540, 1971, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 2845, 2846, 2847, 2848, 2853,
	2854, 2855, 2856, 0, 0, 1971, 0, 1188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1971,
	1971, 1971, 1971, 1590, 0, 0, 0, 0, 1971, 0,
	1971, 0, 1988, 3540, 3540, 3540, 3540, 3540, 3540, 3540,
	3540, 3540, 3540, 3540, 3540, 3540, 3540, 3540, 3540, 3540,
	3540, 3540, 3540, 0, 0, 0, 3540, 0, 0, 1971,
	1971, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 0, 0, 1590, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 2594, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2635, 0, 2639, 0, 0, 0, 0, 0,
	0, 2653, 0, 0, 0, 0, 1971, 1971, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 0, 2703, 0, 2705, 2706, 2707,
	2708, 0, 0, 0, 0, 0, 0, 0, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 2732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 0, 2783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 2813, 2816, 2819, 2822, 0,
	1971, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 84, 0, 2894,
	0, 2905, 2907, 2912, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1971, 1971,
	0, 0, 0, 1971, 1971, 0, 0, 1971, 1971, 0,
	0, 0, 1971, 0, 0, 0, 1971, 0, 92, 0,
	0, 1971, 0, 1188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 286, 286,
	0, 0, 286, 0, 0, 0, 0, 0, 0, 971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 0, 0, 0, 0,
	98, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2902, 0, 0,
	0, 0, 286, 0, 286, 286, 0, 0, 286, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1258, 1935, 1936, 0, 1968, 1969, 1970,
	1979, 1980, 1981, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1966, 0,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	0, 286, 286, 0, 0, 0, 1985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 286, 286, 0,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	1971, 1971, 0, 0, 0, 0, 0, 0, 103, 0,
	1971, 1971, 3540, 2902, 0, 0, 0, 0, 0, 1971,
	0, 0, 1971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1960, 1961, 1962, 1963, 3242, 3243, 286, 3245, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3540, 2902, 0, 198, 0, 106,
	0, 286, 110, 0, 0, 0, 0, 0, 0, 0,
	0, 1971, 0, 0, 0, 0, 0, 0, 0, 1971,
	2902, 0, 0, 1976, 0, 0, 1986, 1971, 0, 251,
	0, 0, 0, 1965, 1967, 0, 0, 972, 1971, 0,
	1971, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 1983, 0, 0, 0, 0, 1350, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 3369, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 252, 0, 0, 0, 3540, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 199,
	0, 0, 1973, 0, 1971, 3540, 0, 0, 1971, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 202, 0, 0, 3540, 0, 0,
	0, 1992, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 1346,
	0, 0, 1964, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3428, 3429, 286,
	2107, 286, 0, 3435, 0, 0, 1959, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 902, 0, 0, 0,
	0, 0, 3449, 3450, 0, 0, 0, 0, 2783, 0,
	0, 0, 0, 0, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 286, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979,
	1980, 1981, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 3459, 0, 0, 1972, 1966, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 3473,
	0, 0, 0, 1935, 1936, 1985, 1968, 1969, 1970, 1979,
	1980, 1981, 0, 0, 0, 0, 3485, 0, 1971, 0,
	0, 0, 1991, 0, 0, 0, 0, 1966, 0, 0,
	0, 1937, 0, 0, 0, 1938, 0, 0, 0, 0,
	0, 0, 1957, 1971, 0, 1985, 0, 0, 0, 0,
	0, 1954, 0, 0, 1975, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 1949, 1950, 1956, 1978, 1955,
	1951, 1937, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944,
	1945, 0, 1957, 0, 0, 0, 0, 0, 0, 0,
	3497, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2912, 2912, 2912,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	1961, 1962, 1963, 0, 2085, 0, 0, 0, 0, 1943,
	0, 0, 3578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1960,
	1961, 1962, 1963, 0, 0, 1971, 0, 0, 0, 1943,
	0, 0, 1976, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 1965, 1967, 0, 286, 0, 0, 0, 902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1982,
	0, 1983, 0, 0, 0, 0, 0, 0, 1952, 1953,
	0, 0, 1976, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 1965, 1967, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	1173, 1958, 0, 0, 0, 0, 286, 0, 1952, 1953,
	286, 0, 1173, 0, 0, 286, 0, 0, 0, 0,
	775, 286, 0, 0, 0, 776, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 286,
	0, 1958, 0, 0, 0, 286, 0, 0, 0, 0,
	1984, 0, 0, 3712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 777, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 778, 0, 0,
	0, 0, 1988, 0, 1350, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 286, 1350, 0, 0, 0, 779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3769, 3770, 0, 0, 0, 286, 0, 0, 0,
	0, 798, 1988, 0, 0, 0, 0, 0, 0, 902,
	286, 0, 286, 0, 286, 1350, 286, 0, 286, 0,
	0, 1964, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 781, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 1964, 0, 286, 286, 286, 286, 1350, 0, 0,
	782, 0, 0, 1977, 0, 783, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 1959, 0, 0, 0, 0,
	0, 0, 807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 1977, 0, 0, 0, 0, 0, 797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 775, 0, 0, 794, 0,
	776, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3496,
	0, 777, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 778, 0, 1949, 1950, 1956, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 0, 779, 804, 0, 785, 0, 2653,
	0, 0, 0, 0, 0, 3973, 3974, 0, 0, 3977,
	0, 0, 0, 3980, 0, 0, 798, 1346, 0, 0,
	0, 0, 3984, 0, 0, 0, 0, 805, 0, 786,
	0, 3991, 0, 1346, 0, 0, 3578, 780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 4004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 286, 0, 0,
	0, 4027, 4028, 806, 4029, 4030, 4031, 0, 0, 0,
	0, 787, 0, 0, 0, 782, 802, 803, 0, 800,
	783, 0, 4037, 0, 0, 795, 4039, 0, 788, 0,
	0, 0, 0, 0, 0, 0, 0, 807, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4068,
	4069, 0, 286, 0, 797, 286, 0, 0, 0, 286,
	0, 286, 0, 789, 0, 796, 0, 4080, 286, 286,
	0, 0, 0, 0, 790, 0, 0, 0, 286, 0,
	0, 0, 4089, 0, 0, 0, 0, 0, 1350, 791,
	1350, 0, 0, 0, 799, 0, 0, 0, 0, 0,
	0, 0, 1339, 0, 0, 1350, 0, 0, 0, 808,
	0, 0, 0, 794, 0, 0, 0, 0, 0, 0,
	793, 0, 0, 0, 0, 0, 2170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	282, 282, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 4152, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 785, 4170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 805, 0, 786, 286, 286, 4201, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 902, 0, 0, 4225, 4226, 806, 0,
	0, 0, 0, 0, 0, 0, 787, 0, 0, 0,
	169, 802, 803, 0, 800, 0, 0, 0, 0, 78,
	795, 48, 47, 788, 286, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 79, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 69, 0, 0, 789, 0,
	796, 0, 50, 0, 166, 0, 0, 0, 0, 790,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 0, 49, 791, 92, 0, 0, 0, 799,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 286,
	0, 0, 0, 0, 808, 2085, 0, 0, 0, 0,
	286, 0, 52, 70, 4329, 793, 0, 0, 1350, 1350,
	0, 53, 0, 0, 0, 0, 59, 0, 0, 1350,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 114, 0, 0, 0, 0, 0, 98, 111, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 286, 286, 286, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 4377, 4378, 0, 0, 0, 0,
	4382, 4383, 0, 0, 0, 4386, 4387, 0, 0, 0,
	286, 99, 0, 4391, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 0, 4395, 1350, 0, 1350, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4400, 0, 0, 0, 0, 0, 0, 1350, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 1350, 1350, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 72, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 0,
	1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 1966, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1985,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 103, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 1937, 0, 0, 0, 1173,
	0, 0, 0, 55, 0, 0, 1957, 0, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	58, 0, 0, 0, 0, 61, 0, 0, 0, 2170,
	2170, 1350, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 60, 198, 0, 106, 0, 0, 110,
	0, 0, 0, 56, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 57, 0, 4554, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 0, 0, 64, 0, 0, 0, 0, 158,
	0, 0, 0, 1960, 1961, 1962, 1963, 0, 0, 0,
	0, 0, 0, 1943, 0, 165, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 1346, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 1986,
	0, 0, 0, 0, 163, 2107, 1965, 1967, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	203, 0, 0, 1982, 0, 1983, 0, 0, 252, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 245, 0, 1350, 0, 0, 0, 0,
	1974, 0, 246, 0, 1350, 0, 199, 0, 286, 0,
	0, 0, 286, 286, 0, 1958, 0, 0, 4668, 4669,
	4670, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 3, 0, 1400, 0, 1400, 1400,
	0, 2653, 0, 0, 4679, 4680, 0, 0, 286, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4688, 4691, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	286, 286, 0, 0, 286, 0, 1988, 0, 0, 0,
	0, 2107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 286, 0, 0, 1611, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4750, 0,
	0, 0, 0, 0, 0, 1964, 0, 4758, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 4766, 0, 0, 1173, 0, 0, 0, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4777, 0, 0, 4779, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 1977, 0, 0,
	0, 0, 286, 0, 0, 2170, 0, 1757, 1758, 1972,
	1966, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	902, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	286, 1990, 0, 286, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 286, 0, 1937, 1350, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 1957, 0, 0, 0, 0,
	0, 1350, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 1949, 1950,
	1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3493, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 0, 286, 0, 286,
	0, 4903, 1943, 0, 0, 4907, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 1350, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 1350, 1350, 1935, 1936, 1976, 0, 0, 1986, 1979,
	1980, 1981, 0, 0, 0, 1965, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1966, 0, 0,
	0, 0, 1982, 0, 1983, 1938, 0, 0, 0, 0,
	0, 1952, 1953, 0, 0, 1985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 1937, 0, 0, 1958, 0, 0, 0, 0, 0,
	1935, 1936, 1957, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	2653, 0, 0, 1972, 1966, 0, 0, 0, 0, 4691,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 1973, 0, 0, 0, 1937, 0,
	0, 0, 1346, 1346, 0, 1988, 0, 0, 0, 1957,
	0, 1173, 0, 0, 0, 0, 0, 0, 1954, 1960,
	1961, 1962, 1963, 2123, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2133,
	0, 1611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 902,
	0, 0, 1976, 0, 0, 1986, 0, 0, 5097, 5097,
	5097, 0, 1965, 1967, 1400, 0, 0, 0, 1959, 0,
	0, 1611, 0, 0, 1235, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 0, 0, 1943, 0, 1952, 1953,
	0, 0, 0, 0, 0, 5122, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 288, 288, 288, 0, 0, 0, 0, 1976,
	1990, 0, 1986, 0, 0, 0, 0, 0, 0, 1965,
	1967, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5097, 288, 0, 1982, 0, 1983, 0,
	0, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 1974, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 1988, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 286, 0, 0, 0, 0, 0,
	1350, 1350, 3492, 0, 0, 286, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 286, 1350, 0, 0, 0,
	0, 1964, 0, 0, 0, 0, 0, 286, 1973, 0,
	0, 0, 286, 0, 1350, 0, 0, 286, 0, 1988,
	0, 0, 0, 5097, 5254, 1959, 1350, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2170, 0, 1977, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 0,
	0, 286, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 2445, 0, 0, 0,
	2452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2464, 0, 0, 0, 0, 0, 0, 0, 0,
	1977, 2170, 0, 0, 0, 0, 0, 2476, 0, 2476,
	0, 0, 0, 0, 0, 2483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 2452, 0, 0, 2512, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 2533, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	2549, 0, 2551, 1346, 2553, 0, 2555, 0, 2556, 0,
	1975, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 3491, 0, 0, 0,
	0, 0, 0, 2585, 2586, 2587, 0, 286, 1350, 0,
	1350, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2107, 1350, 2107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 286, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 1350,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2971, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2170, 2170, 0, 0, 0, 922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	924, 0, 0, 2170, 2170, 925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2170, 0, 288, 0,
	288, 288, 3022, 0, 288, 1400, 926, 0, 943, 1400,
	0, 1400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 1350, 0, 0, 0, 2464, 0,
	0, 286, 0, 0, 927, 0, 0, 0, 0, 928,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 951, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 0, 288, 1510, 288, 288, 0, 0,
	288, 288, 949, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 286, 0, 0, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	930, 0, 1211, 116, 2107, 931, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 953, 0, 0,
	0, 0, 807, 288, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 1611, 0, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 2452, 2452, 0, 1510, 288,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 286, 286, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 947, 0,
	1350, 1350, 0, 1350, 3262, 0, 0, 1350, 0, 0,
	1350, 0, 2464, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	2170, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 2107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 932, 3333, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 934, 0, 0,
	286, 0, 0, 1147, 1350, 0, 0, 3345, 0, 3348,
	0, 0, 0, 0, 0, 1168, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 1350, 935,
	0, 2107, 2107, 1350, 1350, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2107,
	0, 286, 2107, 894, 0, 0, 1350, 0, 1350, 0,
	0, 0, 0, 1350, 0, 1350, 1333, 0, 0, 0,
	0, 0, 0, 806, 3387, 1611, 3389, 1611, 0, 0,
	0, 0, 0, 0, 3396, 0, 921, 0, 0, 944,
	0, 0, 0, 0, 0, 0, 1350, 0, 936, 0,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1400, 0, 0, 0, 0, 942, 0, 0, 3425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 937, 0, 0, 0, 938, 956, 0,
	955, 0, 0, 0, 939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 940,
	0, 0, 0, 0, 948, 0, 0, 0, 0, 0,
	957, 0, 954, 0, 0, 0, 0, 0, 0, 808,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 1350, 1350,
	0, 1350, 0, 0, 0, 288, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 1350,
	1350, 288, 288, 288, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 288, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 288, 0, 1350, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 2107, 0, 2107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 1350,
	1350, 1350, 1350, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 1400, 0,
	0, 0, 1611, 1611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 288, 0, 1510,
	1510, 288, 0, 0, 0, 0, 0, 0, 3675, 0,
	1510, 0, 2170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3731, 3733, 0, 0, 2464, 0, 0, 0, 288, 0,
	0, 0, 288, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 116, 0, 0, 288,
	0, 288, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 1510, 0,
	1510, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 288, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 1510, 0, 1350, 1510, 1510, 1510,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 1350, 1350, 1350, 0, 0, 0,
	0, 288, 288, 0, 288, 0, 288, 0, 288, 0,
	288, 0, 0, 0, 116, 1350, 116, 0, 116, 0,
	3854, 0, 0, 2452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 1350, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 288, 288, 288, 288, 0,
	1630, 0, 0, 0, 0, 0, 0, 0, 0, 1168,
	116, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 2170, 0, 0,
	1630, 0, 116, 0, 116, 0, 0, 1507, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1630, 0, 3957, 0, 1611,
	0, 0, 1630, 0, 0, 0, 0, 0, 1629, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	116, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1629, 0, 1510, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 1630, 0,
	0, 0, 1350, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 1350, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 1147, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 288,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 2017, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 288, 0, 0,
	0, 288, 0, 288, 0, 0, 0, 0, 0, 0,
	288, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2105, 0, 2108,
	0, 116, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 288, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 288, 0,
	0, 0, 1510, 0, 0, 0, 0, 1350, 0, 1350,
	0, 0, 0, 0, 0, 2464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 2464, 288, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 4284, 0, 0, 0, 0,
	894, 0, 0, 0, 0, 4294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 2464, 0, 288, 0, 0, 4311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 1510, 0, 0, 0, 0,
	0, 1510, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 1510, 1510, 0, 0, 0, 0, 0, 0,
	0, 4357, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 288, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1966, 0, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 288, 288, 288, 288,
	0, 0, 0, 1985, 0, 0, 288, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 0, 288, 1630, 1630, 0, 0, 0, 0, 1954,
	288, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1168, 0, 1168, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1960, 1961, 1962,
	1963, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 0, 1630, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 1630, 1630, 0, 0, 0, 0, 4530, 0,
	1976, 0, 0, 1986, 0, 0, 1630, 0, 0, 0,
	1965, 1967, 0, 0, 2464, 0, 0, 0, 1630, 0,
	0, 1630, 1630, 1630, 0, 0, 0, 1982, 1629, 1983,
	1629, 0, 1629, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 1958,
	1147, 0, 0, 1147, 1147, 0, 1629, 0, 0, 1629,
	1629, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 2464, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4625, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 1168,
	1988, 0, 0, 0, 0, 0, 1508, 0, 0, 2011,
	0, 0, 0, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 1935, 1936, 288,
	1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 0, 1964,
	0, 0, 0, 0, 1507, 0, 1510, 0, 0, 0,
	1972, 1966, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 1959, 0, 0, 0, 1333, 0, 1985,
	288, 0, 0, 0, 288, 288, 0, 0, 0, 1508,
	0, 0, 0, 2108, 0, 0, 1991, 0, 0, 0,
	0, 1977, 0, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 0, 0, 0,
	288, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 1990, 0, 0, 0, 0,
	0, 4735, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 288, 288, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1960, 1961, 1962, 1963, 0, 0, 0,
	0, 1975, 0, 1943, 2464, 1510, 0, 0, 1507, 0,
	0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 2780, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 1965, 1967, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 1982, 288, 1983, 0, 0, 0, 1510,
	0, 1510, 1952, 1953, 0, 1510, 0, 0, 0, 0,
	0, 0, 288, 1510, 0, 0, 4864, 1611, 0, 0,
	1974, 0, 288, 0, 0, 288, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 1508, 0, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 1510, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 116, 0, 0,
	116, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 1510, 0, 288,
	1510, 288, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 116, 0, 0, 0, 1964, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 4980, 0, 0, 0, 0, 0, 0, 1507, 1959,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1977, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 116, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 1630, 0, 1630,
	0, 0, 0, 0, 0, 1630, 0, 0, 5034, 0,
	0, 0, 0, 0, 0, 0, 1630, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1629, 0, 1629, 0, 0,
	0, 0, 0, 1629, 0, 5077, 0, 1975, 0, 0,
	0, 0, 0, 0, 1629, 1629, 0, 0, 1949, 1950,
	1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 0, 0, 0, 0, 0, 5021,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1510, 1510, 0, 1510, 0, 0, 0, 1510, 0,
	0, 1510, 0, 0, 0, 0, 0, 288, 0, 1935,
	1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 1972, 1966, 0, 0, 0, 288, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 288, 0, 1333,
	0, 1985, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 288, 1333, 0, 0, 1991, 288,
	0, 0, 0, 0, 0, 1510, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 1510,
	0, 0, 0, 0, 1510, 1510, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1508, 1510, 0, 1510,
	0, 0, 0, 288, 1510, 0, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 1508, 1960, 1961, 1962, 1963, 0,
	0, 0, 0, 0, 1507, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 116, 116, 0, 116, 0, 0, 1976, 0,
	0, 1986, 1507, 0, 0, 0, 0, 0, 1965, 1967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1982, 0, 1983, 1507, 0,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 116,
	0, 116, 1974, 0, 0, 0, 0, 0, 0, 1510,
	1510, 0, 1510, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 1510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1510, 0, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1510, 0, 0, 288, 0, 0, 288,
	0, 0, 1333, 0, 0, 1168, 0, 1507, 0, 1630,
	0, 0, 0, 0, 0, 0, 1510, 0, 0, 116,
	116, 0, 0, 1630, 0, 1630, 288, 1964, 0, 1508,
	0, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1630, 1959, 0, 0, 0, 0, 0, 0, 1510, 1510,
	0, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1977,
	0, 1629, 0, 1629, 0, 0, 0, 1507, 288, 0,
	0, 0, 0, 0, 894, 1629, 0, 1510, 288, 0,
	1630, 0, 1510, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1630, 1990, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 1510,
	1510, 1510, 1510, 1510, 1510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1508, 1629, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 1510, 0, 0, 0, 0, 0, 0, 1975,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0,
	0, 5017, 0, 0, 0, 1510, 0, 1510, 0, 1507,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 0, 0, 1508,
	0, 0, 0, 1510, 116, 0, 0, 0, 0, 1972,
	1966, 0, 0, 288, 0, 0, 0, 0, 1938, 0,
	0, 0, 1333, 1333, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 1510, 1510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 1510, 0, 0, 1510, 0, 0, 0, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 0, 0, 0, 0,
	0, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 1965, 1967, 0, 0, 0,
	0, 0, 0, 894, 0, 0, 0, 0, 0, 0,
	0, 0, 1982, 0, 1983, 0, 0, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 1630, 1630, 0, 1630, 0,
	0, 0, 1630, 1984, 0, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 1988, 0, 0, 1510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1510, 0,
	0, 0, 0, 1629, 1629, 0, 1629, 0, 116, 0,
	1629, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 0, 0, 0, 0, 0,
	0, 0, 0, 1630, 0, 0, 0, 0, 1630, 1630,
	1630, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1630, 0, 1630, 1510, 0, 0, 1629, 1630, 0,
	1508, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 1629, 1629, 1629, 0,
	0, 1508, 0, 0, 0, 0, 0, 288, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	0, 1629, 0, 0, 0, 0, 1629, 0, 1507, 116,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 0, 0, 0, 0, 4922, 0,
	0, 0, 0, 1508, 1508, 0, 1508, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 1507, 1507, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 1508, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 1972,
	1966, 0, 0, 0, 0, 116, 0, 0, 1938, 0,
	1508, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 1937, 1507, 0, 0, 0, 0,
	0, 0, 1630, 1630, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1508, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 1630, 1630, 1630, 1630, 1630, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 1508, 0, 0, 1507,
	0, 0, 1943, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 1508, 0, 0, 0,
	1629, 1629, 1629, 1629, 1629, 1629, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 1976, 0, 0, 1986, 0,
	0, 0, 0, 0, 1507, 1965, 1967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 1630, 1982, 0, 1983, 0, 0, 0, 0, 0,
	0, 1952, 1953, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 1508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 1508, 2721, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1630,
	1630, 1630, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 1964, 1508, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 1629, 1629, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 1959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 0, 0, 0, 0, 4873, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 116, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1511, 304, 305, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 306, 1519, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 1520, 692, 318, 319,
	320, 321, 322, 323, 1521, 1522, 1629, 324, 693, 694,
	695, 1523, 325, 326, 696, 1524, 1591, 1525, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1526, 336, 337,
	338, 335, 339, 1527, 340, 0, 341, 342, 343, 344,
	345, 346, 1528, 347, 348, 349, 1290, 350, 351, 352,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 1536, 363, 359,
	361, 1537, 364, 362, 365, 1538, 366, 367, 368, 1539,
	1540, 369, 370, 371, 1541, 372, 373, 374, 1542, 375,
	376, 377, 1543, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	1544, 293, 1545, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 1546, 396, 397, 398, 1547,
	399, 400, 1548, 1291, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1549, 413,
	705, 1550, 706, 414, 1551, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 1293, 422, 423, 1552,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1553, 1292, 511, 432, 710, 711, 1554, 712,
	1555, 433, 434, 1294, 713, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1556, 445, 447, 446, 1557, 448, 714, 1297, 449, 450,
	1298, 1558, 451, 452, 453, 454, 455, 456, 459, 1559,
	1560, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1561, 295, 1301, 505, 506, 507, 508, 1562,
	715, 509, 716, 512, 513, 1563, 0, 514, 0, 515,
	1564, 1565, 517, 518, 519, 1566, 1567, 520, 521, 717,
	1302, 522, 1303, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1568, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 1569, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 1570, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 1571, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 1572, 605, 606, 604, 607, 608, 609,
	1573, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 1574, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 1575, 640,
	641, 0, 636, 627, 1576, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 1577, 650, 728, 729, 730, 731,
	1578, 660, 1579, 651, 652, 653, 654, 732, 655, 733,
	1580, 656, 657, 658, 659, 0, 661, 662, 1581, 1582,
	663, 664, 666, 668, 669, 665, 667, 670, 1583, 671,
	1584, 0, 672, 673, 674, 734, 735, 736, 1585, 676,
	675, 677, 678, 679, 737, 680, 681, 1586, 1587, 1588,
	1589, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 2949, 0, 0, 0,
	0, 0, 0, 0, 2950, 296, 297, 299, 298, 300,
	301, 302, 303, 1511, 304, 305, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 306, 1519, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 1520, 692, 318, 319, 320, 321,
	322, 323, 1521, 1522, 0, 324, 693, 694, 695, 1523,
	325, 326, 696, 1524, 1591, 1525, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1526, 336, 337, 338, 335,
	339, 1527, 340, 0, 341, 342, 343, 344, 345, 346,
	1528, 347, 348, 349, 1290, 350, 351, 352, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 1536, 363, 359, 361, 1537,
	364, 362, 365, 1538, 366, 367, 368, 1539, 1540, 369,
	370, 371, 1541, 372, 373, 374, 1542, 375, 376, 377,
	1543, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 1544, 293,
	1545, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 1546, 396, 397, 398, 1547, 399, 400,
	1548, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1549, 413, 705, 1550,
	706, 414, 1551, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 1293, 422, 423, 1552, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1553, 1292, 511, 432, 710, 711, 1554, 712, 1555, 433,
	434, 1294, 713, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1556, 445,
	447, 446, 1557, 448, 714, 1297, 449, 450, 1298, 1558,
	451, 452, 453, 454, 455, 456, 459, 1559, 1560, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1561, 295, 1301, 505, 506, 507, 508, 1562, 715, 509,
	716, 512, 513, 1563, 0, 514, 0, 515, 1564, 1565,
	517, 518, 519, 1566, 1567, 520, 521, 717, 1302, 522,
	1303, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1568, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	1569, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 1570,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 3998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4000, 296, 297, 299, 298, 300, 301, 302, 303, 1511,
	304, 305, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 306, 1519, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	1520, 692, 318, 319, 320, 321, 322, 323, 1521, 1522,
	0, 324, 693, 694, 695, 1523, 325, 326, 696, 1524,
	1591, 1525, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1526, 336, 337, 338, 335, 339, 1527, 340, 0,
	341, 342, 343, 344, 345, 346, 1528, 347, 348, 349,
	1290, 350, 351, 352, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 1536, 363, 359, 361, 1537, 364, 362, 365, 1538,
	366, 367, 368, 1539, 1540, 369, 370, 371, 1541, 372,
	373, 374, 1542, 375, 376, 377, 1543, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 1544, 293, 1545, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 1546,
	396, 397, 398, 1547, 399, 400, 1548, 1291, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1549, 413, 705, 1550, 706, 414, 1551, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	1293, 422, 423, 1552, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1553, 1292, 511, 432,
	710, 711, 1554, 712, 1555, 433, 434, 1294, 713, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1556, 445, 447, 446, 1557, 448,
	714, 1297, 449, 450, 1298, 1558, 451, 452, 453, 454,
	455, 456, 459, 1559, 1560, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1561, 295, 1301, 505,
	506, 507, 508, 1562, 715, 509, 716, 512, 513, 1563,
	0, 514, 0, 515, 1564, 1565, 517, 518, 519, 1566,
	1567, 520, 521, 717, 1302, 522, 1303, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1568, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 1569, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 1570, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4435, 296, 297, 299, 298, 300, 301, 302, 303, 1511,
	304, 305, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 306, 1519, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	1520, 692, 318, 319, 320, 321, 322, 323, 1521, 1522,
	0, 324, 693, 694, 695, 1523, 325, 326, 696, 1524,
	1591, 1525, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1526, 336, 337, 338, 335, 339, 1527, 340, 0,
	341, 342, 343, 344, 345, 346, 1528, 347, 348, 349,
	1290, 350, 351, 352, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 1536, 363, 359, 361, 1537, 364, 362, 365, 1538,
	366, 367, 368, 1539, 1540, 369, 370, 371, 1541, 372,
	373, 374, 1542, 375, 376, 377, 1543, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 1544, 293, 1545, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 1546,
	396, 397, 398, 1547, 399, 400, 1548, 1291, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1549, 413, 705, 1550, 706, 414, 1551, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	1293, 422, 423, 1552, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1553, 1292, 511, 432,
	710, 711, 1554, 712, 1555, 433, 434, 1294, 713, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1556, 445, 447, 446, 1557, 448,
	714, 1297, 449, 450, 1298, 1558, 451, 452, 453, 454,
	455, 456, 459, 1559, 1560, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1561, 295, 1301, 505,
	506, 507, 508, 1562, 715, 509, 716, 512, 513, 1563,
	0, 514, 0, 515, 1564, 1565, 517, 518, 519, 1566,
	1567, 520, 521, 717, 1302, 522, 1303, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1568, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 1569, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 1570, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4433, 296, 297, 299, 298, 300, 301, 302, 303, 1511,
	304, 305, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 306, 1519, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	1520, 692, 318, 319, 320, 321, 322, 323, 1521, 1522,
	0, 324, 693, 694, 695, 1523, 325, 326, 696, 1524,
	1591, 1525, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1526, 336, 337, 338, 335, 339, 1527, 340, 0,
	341, 342, 343, 344, 345, 346, 1528, 347, 348, 349,
	1290, 350, 351, 352, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 1536, 363, 359, 361, 1537, 364, 362, 365, 1538,
	366, 367, 368, 1539, 1540, 369, 370, 371, 1541, 372,
	373, 374, 1542, 375, 376, 377, 1543, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 1544, 293, 1545, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 1546,
	396, 397, 398, 1547, 399, 400, 1548, 1291, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1549, 413, 705, 1550, 706, 414, 1551, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	1293, 422, 423, 1552, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1553, 1292, 511, 432,
	710, 711, 1554, 712, 1555, 433, 434, 1294, 713, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1556, 445, 447, 446, 1557, 448,
	714, 1297, 449, 450, 1298, 1558, 451, 452, 453, 454,
	455, 456, 459, 1559, 1560, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1561, 295, 1301, 505,
	506, 507, 508, 1562, 715, 509, 716, 512, 513, 1563,
	0, 514, 0, 515, 1564, 1565, 517, 518, 519, 1566,
	1567, 520, 521, 717, 1302, 522, 1303, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1568, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 1569, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 1570, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4674, 296, 297, 299, 298, 300,
	301, 302, 303, 1511, 304, 305, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 306, 1519, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 1520, 692, 318, 319, 320, 321,
	322, 323, 1521, 1522, 0, 324, 693, 694, 695, 1523,
	325, 326, 696, 1524, 1591, 1525, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1526, 336, 337, 338, 335,
	339, 1527, 340, 0, 341, 342, 343, 344, 345, 346,
	1528, 347, 348, 349, 1290, 350, 351, 352, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 1536, 363, 359, 361, 1537,
	364, 362, 365, 1538, 366, 367, 368, 1539, 1540, 369,
	370, 371, 1541, 372, 373, 374, 1542, 375, 376, 377,
	1543, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 1544, 293,
	1545, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 1546, 396, 397, 398, 1547, 399, 400,
	1548, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1549, 413, 705, 1550,
	706, 414, 1551, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 1293, 422, 423, 1552, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1553, 1292, 511, 432, 710, 711, 1554, 712, 1555, 433,
	434, 1294, 713, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1556, 445,
	447, 446, 1557, 448, 714, 1297, 449, 450, 1298, 1558,
	451, 452, 453, 454, 455, 456, 459, 1559, 1560, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1561, 295, 1301, 505, 506, 507, 508, 1562, 715, 509,
	716, 512, 513, 1563, 0, 514, 0, 515, 1564, 1565,
	517, 518, 519, 1566, 1567, 520, 521, 717, 1302, 522,
	1303, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1568, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	1569, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 1570,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4539, 296,
	297, 299, 298, 300, 301, 302, 303, 1511, 304, 305,
	1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 306,
	1519, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 1520, 692,
	318, 319, 320, 321, 322, 323, 1521, 1522, 0, 324,
	693, 694, 695, 1523, 325, 326, 696, 1524, 1591, 1525,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1526,
	336, 337, 338, 335, 339, 1527, 340, 0, 341, 342,
	343, 344, 345, 346, 1528, 347, 348, 349, 1290, 350,
	351, 352, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 1536,
	363, 359, 361, 1537, 364, 362, 365, 1538, 366, 367,
	368, 1539, 1540, 369, 370, 371, 1541, 372, 373, 374,
	1542, 375, 376, 377, 1543, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 1544, 293, 1545, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 1546, 396, 397,
	398, 1547, 399, 400, 1548, 1291, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1549, 413, 705, 1550, 706, 414, 1551, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 1293, 422,
	423, 1552, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1553, 1292, 511, 432, 710, 711,
	1554, 712, 1555, 433, 434, 1294, 713, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1556, 445, 447, 446, 1557, 448, 714, 1297,
	449, 450, 1298, 1558, 451, 452, 453, 454, 455, 456,
	459, 1559, 1560, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1561, 295, 1301, 505, 506, 507,
	508, 1562, 715, 509, 716, 512, 513, 1563, 0, 514,
	0, 515, 1564, 1565, 517, 518, 519, 1566, 1567, 520,
	521, 717, 1302, 522, 1303, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1568, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 1569, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 1570, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4359, 296, 297, 299, 298, 300, 301, 302,
	303, 1511, 304, 305, 1512, 1513, 1514, 0, 1515, 687,
	1516, 1517, 1518, 306, 1519, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 1520, 692, 318, 319, 320, 321, 322, 323,
	1521, 1522, 0, 324, 693, 694, 695, 1523, 325, 326,
	696, 1524, 1591, 1525, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 1526, 336, 337, 338, 335, 339, 1527,
	340, 0, 341, 342, 343, 344, 345, 346, 1528, 347,
	348, 349, 1290, 350, 351, 352, 1529, 1530, 1532, 1531,
	1533, 1534, 1535, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 1536, 363, 359, 361, 1537, 364, 362,
	365, 1538, 366, 367, 368, 1539, 1540, 369, 370, 371,
	1541, 372, 373, 374, 1542, 375, 376, 377, 1543, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 1544, 293, 1545, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 1546, 396, 397, 398, 1547, 399, 400, 1548, 1291,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 1549, 413, 705, 1550, 706, 414,
	1551, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 1293, 422, 423, 1552, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 1553, 1292,
	511, 432, 710, 711, 1554, 712, 1555, 433, 434, 1294,
	713, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 1556, 445, 447, 446,
	1557, 448, 714, 1297, 449, 450, 1298, 1558, 451, 452,
	453, 454, 455, 456, 459, 1559, 1560, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 1561, 295,
	1301, 505, 506, 507, 508, 1562, 715, 509, 716, 512,
	513, 1563, 0, 514, 0, 515, 1564, 1565, 517, 518,
	519, 1566, 1567, 520, 521, 717, 1302, 522, 1303, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 1568, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 1569, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 1570, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 1571, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 1572,
	605, 606, 604, 607, 608, 609, 1573, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 1574, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 1575, 640, 641, 0, 636, 627,
	1576, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	1577, 650, 728, 729, 730, 731, 1578, 660, 1579, 651,
	652, 653, 654, 732, 655, 733, 1580, 656, 657, 658,
	659, 0, 661, 662, 1581, 1582, 663, 664, 666, 668,
	669, 665, 667, 670, 1583, 671, 1584, 0, 672, 673,
	674, 734, 735, 736, 1585, 676, 675, 677, 678, 679,
	737, 680, 681, 1586, 1587, 1588, 1589, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4016, 296, 297, 299,
	298, 300, 301, 302, 303, 1511, 304, 305, 1512, 1513,
	1514, 0, 1515, 687, 1516, 1517, 1518, 306, 1519, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 1520, 692, 318, 319,
	320, 321, 322, 323, 1521, 1522, 0, 324, 693, 694,
	695, 1523, 325, 326, 696, 1524, 1591, 1525, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 1526, 336, 337,
	338, 335, 339, 1527, 340, 0, 341, 342, 343, 344,
	345, 346, 1528, 347, 348, 349, 1290, 350, 351, 352,
	1529, 1530, 1532, 1531, 1533, 1534, 1535, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 1536, 363, 359,
	361, 1537, 364, 362, 365, 1538, 366, 367, 368, 1539,
	1540, 369, 370, 371, 1541, 372, 373, 374, 1542, 375,
	376, 377, 1543, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	1544, 293, 1545, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 1546, 396, 397, 398, 1547,
	399, 400, 1548, 1291, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 1549, 413,
	705, 1550, 706, 414, 1551, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 1293, 422, 423, 1552,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 1553, 1292, 511, 432, 710, 711, 1554, 712,
	1555, 433, 434, 1294, 713, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	1556, 445, 447, 446, 1557, 448, 714, 1297, 449, 450,
	1298, 1558, 451, 452, 453, 454, 455, 456, 459, 1559,
	1560, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1561, 295, 1301, 505, 506, 507, 508, 1562,
	715, 509, 716, 512, 513, 1563, 0, 514, 0, 515,
	1564, 1565, 517, 518, 519, 1566, 1567, 520, 521, 717,
	1302, 522, 1303, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 1568, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 1569, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 1570, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 1571, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 1572, 605, 606, 604, 607, 608, 609,
	1573, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 1574, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 1575, 640,
	641, 0, 636, 627, 1576, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 1577, 650, 728, 729, 730, 731,
	1578, 660, 1579, 651, 652, 653, 654, 732, 655, 733,
	1580, 656, 657, 658, 659, 0, 661, 662, 1581, 1582,
	663, 664, 666, 668, 669, 665, 667, 670, 1583, 671,
	1584, 0, 672, 673, 674, 734, 735, 736, 1585, 676,
	675, 677, 678, 679, 737, 680, 681, 1586, 1587, 1588,
	1589, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3827, 296, 297, 299, 298, 300, 301, 302, 303, 1511,
	304, 305, 1512, 1513, 1514, 0, 1515, 687, 1516, 1517,
	1518, 306, 1519, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	1520, 692, 318, 319, 320, 321, 322, 323, 1521, 1522,
	0, 324, 693, 694, 695, 1523, 325, 326, 696, 1524,
	1591, 1525, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 1526, 336, 337, 338, 335, 339, 1527, 340, 0,
	341, 342, 343, 344, 345, 346, 1528, 347, 348, 349,
	1290, 350, 351, 352, 1529, 1530, 1532, 1531, 1533, 1534,
	1535, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 1536, 363, 359, 361, 1537, 364, 362, 365, 1538,
	366, 367, 368, 1539, 1540, 369, 370, 371, 1541, 372,
	373, 374, 1542, 375, 376, 377, 1543, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 1544, 293, 1545, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 1546,
	396, 397, 398, 1547, 399, 400, 1548, 1291, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 1549, 413, 705, 1550, 706, 414, 1551, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	1293, 422, 423, 1552, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 1553, 1292, 511, 432,
	710, 711, 1554, 712, 1555, 433, 434, 1294, 713, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 1556, 445, 447, 446, 1557, 448,
	714, 1297, 449, 450, 1298, 1558, 451, 452, 453, 454,
	455, 456, 459, 1559, 1560, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1561, 295, 1301, 505,
	506, 507, 508, 1562, 715, 509, 716, 512, 513, 1563,
	0, 514, 0, 515, 1564, 1565, 517, 518, 519, 1566,
	1567, 520, 521, 717, 1302, 522, 1303, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	1568, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 1569, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 1570, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 1571, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 1572, 605, 606,
	604, 607, 608, 609, 1573, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 1574, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 1575, 640, 641, 0, 636, 627, 1576, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 1577, 650,
	728, 729, 730, 731, 1578, 660, 1579, 651, 652, 653,
	654, 732, 655, 733, 1580, 656, 657, 658, 659, 0,
	661, 662, 1581, 1582, 663, 664, 666, 668, 669, 665,
	667, 670, 1583, 671, 1584, 0, 672, 673, 674, 734,
	735, 736, 1585, 676, 675, 677, 678, 679, 737, 680,
	681, 1586, 1587, 1588, 1589, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2803, 296, 297, 299, 298, 300,
	301, 302, 303, 1511, 304, 305, 1512, 1513, 1514, 0,
	1515, 687, 1516, 1517, 1518, 306, 1519, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 1520, 692, 318, 319, 320, 321,
	322, 323, 1521, 1522, 0, 324, 693, 694, 695, 1523,
	325, 326, 696, 1524, 1591, 1525, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 1526, 336, 337, 338, 335,
	339, 1527, 340, 0, 341, 342, 343, 344, 345, 346,
	1528, 347, 348, 349, 1290, 350, 351, 352, 1529, 1530,
	1532, 1531, 1533, 1534, 1535, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 1536, 363, 359, 361, 1537,
	364, 362, 365, 1538, 366, 367, 368, 1539, 1540, 369,
	370, 371, 1541, 372, 373, 374, 1542, 375, 376, 377,
	1543, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 1544, 293,
	1545, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 1546, 396, 397, 398, 1547, 399, 400,
	1548, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 1549, 413, 705, 1550,
	706, 414, 1551, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 1293, 422, 423, 1552, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	1553, 1292, 511, 432, 710, 711, 1554, 712, 1555, 433,
	434, 1294, 713, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1556, 445,
	447, 446, 1557, 448, 714, 1297, 449, 450, 1298, 1558,
	451, 452, 453, 454, 455, 456, 459, 1559, 1560, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1561, 295, 1301, 505, 506, 507, 508, 1562, 715, 509,
	716, 512, 513, 1563, 0, 514, 0, 515, 1564, 1565,
	517, 518, 519, 1566, 1567, 520, 521, 717, 1302, 522,
	1303, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 1568, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	1569, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 1570,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 1571, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 1572, 605, 606, 604, 607, 608, 609, 1573, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 1574, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 1575, 640, 641, 0,
	636, 627, 1576, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 1577, 650, 728, 729, 730, 731, 1578, 660,
	1579, 651, 652, 653, 654, 732, 655, 733, 1580, 656,
	657, 658, 659, 0, 661, 662, 1581, 1582, 663, 664,
	666, 668, 669, 665, 667, 670, 1583, 671, 1584, 0,
	672, 673, 674, 734, 735, 736, 1585, 676, 675, 677,
	678, 679, 737, 680, 681, 1586, 1587, 1588, 1589, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	1502, 0, 1505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2423, 296,
	297, 299, 298, 300, 301, 302, 303, 1511, 304, 305,
	1512, 1513, 1514, 0, 1515, 687, 1516, 1517, 1518, 306,
	1519, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 1520, 692,
	318, 319, 320, 321, 322, 323, 1521, 1522, 0, 324,
	693, 694, 695, 1523, 325, 326, 696, 1524, 1591, 1525,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 1526,
	336, 337, 338, 335, 339, 1527, 340, 0, 341, 342,
	343, 344, 345, 346, 1528, 347, 348, 349, 1290, 350,
	351, 352, 1529, 1530, 1532, 1531, 1533, 1534, 1535, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 1536,
	363, 359, 361, 1537, 364, 362, 365, 1538, 366, 367,
	368, 1539, 1540, 369, 370, 371, 1541, 372, 373, 374,
	1542, 375, 376, 377, 1543, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 1544, 293, 1545, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 1546, 396, 397,
	398, 1547, 399, 400, 1548, 1291, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	1549, 413, 705, 1550, 706, 414, 1551, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 1293, 422,
	423, 1552, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 1553, 1292, 511, 432, 710, 711,
	1554, 712, 1555, 433, 434, 1294, 713, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 1556, 445, 447, 446, 1557, 448, 714, 1297,
	449, 450, 1298, 1558, 451, 452, 453, 454, 455, 456,
	459, 1559, 1560, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1561, 295, 1301, 505, 506, 507,
	508, 1562, 715, 509, 716, 512, 513, 1563, 0, 514,
	0, 515, 1564, 1565, 517, 518, 519, 1566, 1567, 520,
	521, 717, 1302, 522, 1303, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 1568, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 1569, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 1570, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 1571,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 1572, 605, 606, 604, 607,
	608, 609, 1573, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	1574, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	1575, 640, 641, 0, 636, 627, 1576, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 1577, 650, 728, 729,
	730, 731, 1578, 660, 1579, 651, 652, 653, 654, 732,
	655, 733, 1580, 656, 657, 658, 659, 0, 661, 662,
	1581, 1582, 663, 664, 666, 668, 669, 665, 667, 670,
	1583, 671, 1584, 0, 672, 673, 674, 734, 735, 736,
	1585, 676, 675, 677, 678, 679, 737, 680, 681, 1586,
	1587, 1588, 1589, 682, 683, 738, 684, 685, 686, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 1511, 304, 305, 1512, 1513, 1514,
	0, 1515, 687, 1516, 1517, 1518, 306, 1519, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 1520, 692, 318, 319, 320,
	321, 322, 323, 1521, 1522, 0, 324, 693, 694, 695,
	1523, 325, 326, 696, 1524, 1591, 1525, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 1526, 336, 337, 338,
	335, 339, 1527, 340, 0, 341, 342, 343, 344, 345,
	346, 1528, 347, 348, 349, 1290, 350, 351, 352, 1529,
	1530, 1532, 1531, 1533, 1534, 1535, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 1536, 363, 359, 361,
	1537, 364, 362, 365, 1538, 366, 367, 368, 1539, 1540,
	369, 370, 371, 1541, 372, 373, 374, 1542, 375, 376,
	377, 1543, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 1544,
	293, 1545, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 1546, 396, 397, 398, 1547, 399,
	400, 1548, 1291, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 1549, 413, 705,
	1550, 706, 414, 1551, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 1293, 422, 423, 1552, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 1553, 1292, 511, 432, 710, 711, 1554, 712, 1555,
	433, 434, 1294, 713, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 1556,
	445, 447, 446, 1557, 448, 714, 1297, 449, 450, 1298,
	1558, 451, 452, 453, 454, 455, 456, 459, 1559, 1560,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 1561, 295, 1301, 505, 506, 507, 508, 1562, 715,
	509, 716, 512, 513, 1563, 0, 514, 0, 515, 1564,
	1565, 517, 518, 519, 1566, 1567, 520, 521, 717, 1302,
	522, 1303, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 1568, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 1569, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	1570, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 1571, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 1572, 605, 606, 604, 607, 608, 609, 1573,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 1574, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 1575, 640, 641,
	0, 636, 627, 1576, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 1577, 650, 728, 729, 730, 731, 1578,
	660, 1579, 651, 652, 653, 654, 732, 655, 733, 1580,
	656, 657, 658, 659, 0, 661, 662, 1581, 1582, 663,
	664, 666, 668, 669, 665, 667, 670, 1583, 671, 1584,
	0, 672, 673, 674, 734, 735, 736, 1585, 676, 675,
	677, 678, 679, 737, 680, 681, 1586, 1587, 1588, 1589,
	682, 683, 738, 684, 685, 686, 2778, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 2775, 304, 305, 0, 0, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 2776, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 2774, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 2777, 0,
	0, 0, 0, 0, 0, 0, 1209, 2773, 0, 1169,
	1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 251, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 253, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 1749, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 245, 682, 683, 738, 684, 685, 686, 1183, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 2016,
	2014, 0, 0, 1207, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 251, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 253, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 1749, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 245, 682, 683, 738, 684, 685, 686, 1183, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 2016,
	3447, 0, 0, 1207, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 251, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 253, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 1749, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 245, 682, 683, 738, 684, 685, 686, 1183, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 2016,
	2014, 0, 0, 1207, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 2908, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 2913, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 2909, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 2910, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2823, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 296, 297, 299, 298, 300, 301, 302, 303, 1209,
	304, 305, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 1262, 0, 316, 1269, 317, 1268,
	0, 1279, 318, 319, 320, 321, 322, 323, 1215, 1248,
	1180, 324, 1309, 1310, 695, 0, 325, 326, 1255, 0,
	1236, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 353, 354, 355, 356, 357, 1272, 358, 360, 1266,
	1265, 1185, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1191,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1280, 1281, 391, 1204, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1264, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 1277, 1278, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1287, 0, 1214, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1250, 1251, 1254, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1292, 511, 432,
	1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1288, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 1243, 1242, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1182, 295, 1301, 505,
	506, 507, 508, 1205, 1253, 509, 1267, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 1302, 522, 1303, 1282, 523, 524,
	1192, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 1283, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1263,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 0, 0, 0, 0, 0, 0,
	0, 0, 1209, 2821, 0, 2820, 1207, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 1213, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 1262, 0, 316,
	1269, 317, 1268, 0, 1279, 318, 319, 320, 321, 322,
	323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 1272,
	358, 360, 1266, 1265, 1185, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1257,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1191, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 1204, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1264, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 1277, 1278, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 1214,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 1259, 1260, 0, 1220, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 1182,
	295, 1301, 505, 506, 507, 508, 1205, 1253, 509, 1267,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 1192, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1263, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 0, 0, 0,
	0, 0, 0, 0, 0, 1209, 2818, 0, 2817, 1207,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 1249, 1213, 0, 0, 306, 0, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	1262, 0, 316, 1269, 317, 1268, 0, 1279, 318, 319,
	320, 321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310,
	695, 0, 325, 326, 1255, 0, 1236, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1290, 350, 351, 352,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355,
	356, 357, 1272, 358, 360, 1266, 1265, 1185, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1257, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1191, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1280, 1281, 391,
	1204, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1264, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1291, 401, 402, 403, 1277, 1278, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1287, 0, 1214, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1250, 1251, 1254, 510, 1293, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1292, 511, 432, 1259, 1260, 0, 1220,
	0, 433, 434, 1294, 1252, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1288, 1297, 449, 450,
	1298, 0, 451, 452, 453, 454, 455, 456, 459, 1243,
	1242, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1182, 295, 1301, 505, 506, 507, 508, 1205,
	1253, 509, 1267, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	1302, 522, 1303, 1282, 523, 524, 1192, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 1283, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1263, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	0, 0, 0, 0, 0, 0, 0, 0, 1209, 2815,
	0, 2814, 1207, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1249, 1213, 0, 0,
	306, 0, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 1262, 0, 316, 1269, 317, 1268, 0,
	1279, 318, 319, 320, 321, 322, 323, 1215, 1248, 1180,
	324, 1309, 1310, 695, 0, 325, 326, 1255, 0, 1236,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	353, 354, 355, 356, 357, 1272, 358, 360, 1266, 1265,
	1185, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1257, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1191, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1280, 1281, 391, 1204, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1264, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	1277, 1278, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1287, 0, 1214, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1250, 1251, 1254, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1292, 511, 432, 1259,
	1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1288,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 1243, 1242, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 1182, 295, 1301, 505, 506,
	507, 508, 1205, 1253, 509, 1267, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 1282, 523, 524, 1192,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	1283, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1263, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 2812, 0, 1851, 1207, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 1249,
	1213, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 1262, 0, 316, 1269,
	317, 1268, 0, 1279, 318, 319, 320, 321, 322, 323,
	1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325, 326,
	1255, 0, 1236, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 353, 354, 355, 356, 357, 1272, 358,
	360, 1266, 1265, 1185, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1257, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1191, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1280, 1281, 391, 1204, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1264, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 1277, 1278, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1287, 0, 1214, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1250, 1251,
	1254, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1292,
	511, 432, 1259, 1260, 0, 1220, 0, 433, 434, 1294,
	1252, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1288, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 1243, 1242, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 1182, 295,
	1301, 505, 506, 507, 508, 1205, 1253, 509, 1267, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 1282,
	523, 524, 1192, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 1283, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1263, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1850, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 1172, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 296, 297, 299, 298,
	300, 301, 302, 303, 1209, 304, 305, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 1262,
	0, 316, 1269, 317, 1268, 0, 1279, 318, 319, 320,
	321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695,
	0, 325, 326, 1255, 0, 1236, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356,
	357, 1272, 358, 360, 1266, 1265, 1185, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1257, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1191, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1280, 1281, 391, 1204,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1264,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 1277, 1278, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1287,
	0, 1214, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1250, 1251, 1254, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1292, 511, 432, 1259, 1260, 0, 1220, 0,
	433, 434, 1294, 1252, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1288, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 1243, 1242,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 1182, 295, 1301, 505, 506, 507, 508, 1205, 1253,
	509, 1267, 512, 513, 0, 0, 514, 0, 515, 1187,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 1282, 523, 524, 1192, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 1283, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1263, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 296,
	297, 299, 298, 300, 301, 302, 303, 1209, 304, 305,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 1262, 0, 316, 1269, 317, 1268, 0, 1279,
	318, 319, 320, 321, 322, 323, 1215, 1248, 1180, 324,
	1309, 1310, 695, 0, 325, 326, 1255, 0, 1236, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 5046, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353,
	354, 355, 356, 357, 1272, 358, 360, 1266, 1265, 1185,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1257, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1191, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1280,
	1281, 391, 1204, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1264, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 1277,
	1278, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1287, 0, 1214, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1250, 1251, 1254, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1292, 511, 432, 1259, 1260,
	0, 1220, 0, 433, 434, 1294, 1252, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1288, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 1243, 1242, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1182, 295, 1301, 505, 506, 507,
	508, 1205, 1253, 509, 1267, 512, 513, 0, 0, 514,
	0, 515, 1187, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 1282, 523, 524, 1192, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 1283,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1263, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 296, 297, 299, 298, 300, 301, 302, 303,
	1209, 304, 305, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 2655, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 1301,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 2654, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 4769, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 1187, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 296, 297,
	299, 298, 300, 301, 302, 303, 1209, 304, 305, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 1187, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 296, 297, 299, 298, 300, 301, 302, 303, 1209,
	304, 305, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 1262, 0, 316, 1269, 317, 1268,
	0, 1279, 318, 319, 320, 321, 322, 323, 1215, 1248,
	1180, 324, 1309, 1310, 695, 0, 325, 326, 1255, 0,
	1236, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 353, 354, 355, 356, 357, 1272, 358, 360, 1266,
	1265, 1185, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1191,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1280, 1281, 391, 1204, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1264, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 1277, 1278, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1287, 0, 1214, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1250, 1251, 1254, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1292, 511, 432,
	1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1288, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 1243, 1242, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1182, 4323, 1301, 505,
	506, 507, 508, 1205, 1253, 509, 1267, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 1302, 522, 1303, 1282, 523, 524,
	1192, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 1283, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1263,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 2086, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 1209, 0, 0, 0, 1207, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 1301,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 3994, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 2086, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 1209, 0, 0, 0,
	1207, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 1249, 1213, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 1262,
	0, 316, 1269, 317, 1268, 0, 1279, 318, 319, 320,
	321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695,
	0, 325, 326, 1255, 0, 1236, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356,
	357, 1272, 358, 360, 1266, 1265, 1185, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1257, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1191, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1280, 1281, 391, 1204,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1264,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 2913, 1291, 401, 402, 403, 1277, 1278, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1287,
	0, 1214, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1250, 1251, 1254, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1292, 511, 432, 1259, 1260, 0, 1220, 0,
	433, 434, 1294, 1252, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1288, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 1243, 1242,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 1182, 295, 1301, 505, 506, 507, 508, 1205, 1253,
	509, 1267, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 1282, 523, 524, 1192, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 1283, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1263, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 296,
	297, 299, 298, 300, 301, 302, 303, 1209, 304, 305,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 1262, 0, 316, 1269, 317, 1268, 0, 1279,
	318, 319, 320, 321, 322, 323, 1215, 1248, 1180, 324,
	1309, 1310, 695, 0, 325, 326, 1255, 0, 1236, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353,
	354, 355, 356, 357, 1272, 358, 360, 1266, 1265, 1185,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1257, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1191, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1280,
	1281, 391, 1204, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1264, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 1277,
	1278, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1287, 0, 1214, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1250, 1251, 1254, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1292, 511, 432, 1259, 1260,
	0, 1220, 0, 433, 434, 1294, 1252, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1288, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 1243, 1242, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1182, 295, 1301, 505, 506, 507,
	508, 1205, 1253, 509, 1267, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 1282, 523, 524, 1192, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 1283,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1263, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	1209, 2014, 0, 2918, 1207, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 1301,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 2916, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 2904,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 296, 297,
	299, 298, 300, 301, 302, 303, 1209, 304, 305, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 2893, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 296, 297, 299, 298, 300, 301, 302, 303, 1209,
	304, 305, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 1262, 0, 316, 1269, 317, 1268,
	0, 1279, 318, 319, 320, 321, 322, 323, 1215, 1248,
	1180, 324, 1309, 1310, 695, 0, 325, 326, 1255, 0,
	1236, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 353, 354, 355, 356, 357, 1272, 358, 360, 1266,
	1265, 1185, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1191,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1280, 1281, 391, 1204, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1264, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 1277, 1278, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1287, 0, 1214, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1250, 1251, 1254, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1292, 511, 432,
	1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1288, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 1243, 1242, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1182, 295, 1301, 505,
	506, 507, 508, 1205, 1253, 509, 1267, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 1302, 522, 1303, 1282, 523, 524,
	1192, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 1283, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1263,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 2891, 0, 2882, 2889, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 296, 297, 299, 298, 300, 301,
	302, 303, 1209, 304, 305, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 1262, 0, 316,
	1269, 317, 1268, 0, 1279, 318, 319, 320, 321, 322,
	323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 1272,
	2885, 360, 1266, 1265, 1185, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1257,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1191, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 1204, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1264, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 1277, 1278, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 1214,
	414, 0, 415, 416, 417, 418, 419, 2886, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 1259, 1260, 0, 1220, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 2887,
	469, 2884, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 1182,
	295, 1301, 505, 506, 507, 508, 1205, 1253, 509, 1267,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 1192, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1263, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 2888,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 2883, 686, 1183, 0, 0, 0, 2879, 0,
	2882, 2889, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 296, 297, 299,
	298, 300, 301, 302, 303, 1209, 304, 305, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 306, 0, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	1262, 0, 316, 1269, 317, 1268, 0, 1279, 318, 319,
	320, 321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310,
	695, 0, 325, 326, 1255, 0, 1236, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1290, 350, 351, 352,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355,
	356, 357, 1272, 2885, 360, 1266, 1265, 1185, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1257, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1191, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1280, 1281, 391,
	1204, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1264, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1291, 401, 402, 403, 1277, 1278, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1287, 0, 1214, 414, 0, 415, 416, 417, 418, 419,
	2886, 421, 1250, 1251, 1254, 510, 1293, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1292, 511, 432, 1259, 1260, 0, 1220,
	0, 433, 434, 1294, 1252, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1288, 1297, 449, 450,
	1298, 0, 451, 452, 453, 454, 455, 456, 459, 1243,
	1242, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 2887, 469, 2884, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1182, 295, 1301, 505, 506, 507, 508, 1205,
	1253, 509, 1267, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	1302, 522, 1303, 1282, 523, 524, 1192, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 1283, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1263, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 2888, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 2883, 686, 1183, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	296, 297, 299, 298, 300, 301, 302, 303, 1209, 304,
	305, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	306, 0, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 1262, 0, 316, 1269, 317, 1268, 0,
	1279, 318, 319, 320, 321, 322, 323, 1215, 1248, 1180,
	324, 1309, 1310, 695, 0, 325, 326, 1255, 0, 1236,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	353, 354, 355, 356, 357, 1272, 358, 360, 1266, 1265,
	1185, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1257, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1191, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1280, 1281, 391, 1204, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1264, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	1277, 1278, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1287, 0, 1214, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1250, 1251, 1254, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1292, 511, 432, 1259,
	1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1288,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 1243, 1242, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 1182, 295, 1301, 505, 506,
	507, 508, 1205, 1253, 509, 1267, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 1282, 523, 524, 1192,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	1283, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1263, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 0, 0, 0, 0, 0, 0, 2022,
	0, 1209, 0, 0, 0, 1207, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 2634, 304, 305, 0, 0, 0, 0, 0, 1249,
	1213, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 1262, 0, 316, 1269,
	317, 1268, 0, 1279, 318, 319, 320, 321, 322, 323,
	1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325, 326,
	1255, 0, 1236, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 353, 354, 355, 356, 357, 1272, 358,
	360, 1266, 1265, 1185, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1257, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1191, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1280, 1281, 391, 1204, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1264, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 1277, 1278, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1287, 0, 1214, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1250, 1251,
	1254, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1292,
	511, 432, 1259, 1260, 0, 1220, 0, 433, 434, 1294,
	1252, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1288, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 1243, 1242, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 1182, 295,
	1301, 505, 506, 507, 508, 1205, 1253, 509, 1267, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 1282,
	523, 524, 1192, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 1283, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1263, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 2595, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 296, 297, 299, 298,
	300, 301, 302, 303, 1209, 304, 305, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 1262,
	0, 316, 1269, 317, 1268, 0, 1279, 318, 319, 320,
	321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695,
	0, 325, 326, 1255, 0, 1236, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356,
	357, 1272, 358, 360, 1266, 1265, 1185, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1257, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1191, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1280, 1281, 391, 1204,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1264,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 1277, 1278, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1287,
	0, 1214, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1250, 1251, 1254, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1292, 511, 432, 1259, 1260, 0, 1220, 0,
	433, 434, 1294, 1252, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1288, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 1243, 1242,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 1182, 295, 1301, 505, 506, 507, 508, 1205, 1253,
	509, 1267, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 1282, 523, 524, 1192, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 1283, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1263, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	2566, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 296,
	297, 299, 298, 300, 301, 302, 303, 1209, 304, 305,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 1262, 0, 316, 1269, 317, 1268, 0, 1279,
	318, 319, 320, 321, 322, 323, 1215, 1248, 1180, 324,
	1309, 1310, 695, 0, 325, 326, 1255, 0, 1236, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353,
	354, 355, 356, 357, 1272, 358, 360, 1266, 1265, 1185,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1257, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1191, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1280,
	1281, 391, 1204, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1264, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 1277,
	1278, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1287, 0, 1214, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1250, 1251, 1254, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1292, 511, 432, 1259, 1260,
	0, 1220, 0, 433, 434, 1294, 1252, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1288, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 1243, 1242, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1182, 295, 1301, 505, 506, 507,
	508, 1205, 1253, 509, 1267, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 1282, 523, 524, 1192, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 1283,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1263, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 1856, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 296, 297, 299, 298, 300, 301, 302, 303,
	1209, 304, 305, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 1301,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 1784, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 1779,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 296, 297,
	299, 298, 300, 301, 302, 303, 1209, 304, 305, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 661, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 1765, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 296, 297, 299, 298, 300, 301, 302, 303, 1209,
	304, 305, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 688, 1262, 0, 316, 1269, 317, 1268,
	0, 1279, 318, 319, 320, 321, 322, 323, 1215, 1248,
	1180, 324, 1309, 1310, 695, 0, 325, 326, 1255, 0,
	1236, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 353, 354, 355, 356, 357, 1272, 358, 360, 1266,
	1265, 1185, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1191,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1280, 1281, 391, 1204, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1264, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 1277, 1278, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1287, 0, 1214, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1250, 1251, 1254, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1292, 511, 432,
	1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1288, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 1243, 1242, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1182, 295, 1301, 505,
	506, 507, 508, 1205, 1253, 509, 1267, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 1302, 522, 1303, 1282, 523, 524,
	1192, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 1283, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1263,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	661, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 1760, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 296, 297, 299, 298, 300, 301,
	302, 303, 1209, 304, 305, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 1262, 0, 316,
	1269, 317, 1268, 0, 1279, 318, 319, 320, 321, 322,
	323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 1272,
	358, 360, 1266, 1265, 1185, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1257,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1191, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 1204, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1264, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 1277, 1278, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 1214,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 1259, 1260, 0, 1220, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 1182,
	295, 1301, 505, 506, 507, 508, 1205, 1253, 509, 1267,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 1192, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1263, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 1670, 0,
	1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 296, 297, 299,
	298, 300, 301, 302, 303, 1209, 304, 305, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 306, 0, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	1262, 0, 316, 1269, 317, 1268, 0, 1279, 318, 319,
	320, 321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310,
	695, 0, 325, 326, 1255, 0, 1236, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1290, 350, 351, 352,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355,
	356, 357, 1272, 358, 360, 1266, 1265, 1185, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1257, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1191, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1280, 1281, 391,
	1204, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1264, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1291, 401, 402, 403, 1277, 1278, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1287, 0, 1214, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1669, 1251, 1254, 510, 1293, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1292, 511, 432, 1259, 1260, 0, 1220,
	0, 433, 434, 1294, 1252, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1288, 1297, 449, 450,
	1298, 0, 451, 452, 453, 454, 455, 456, 459, 1243,
	1242, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1182, 295, 1301, 505, 506, 507, 508, 1205,
	1253, 509, 1267, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	1302, 522, 1303, 1282, 523, 524, 1192, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 1283, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1263, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 1664, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	296, 297, 299, 298, 300, 301, 302, 303, 1209, 304,
	305, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	306, 0, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 1262, 0, 316, 1269, 317, 1268, 0,
	1279, 318, 319, 320, 321, 322, 323, 1215, 1248, 1180,
	324, 1309, 1310, 695, 0, 325, 326, 1255, 0, 1236,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	353, 354, 355, 356, 357, 1272, 358, 360, 1266, 1265,
	1185, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1257, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1191, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1280, 1281, 391, 1204, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1264, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	1277, 1278, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1287, 0, 1214, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1663, 1251, 1254, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1292, 511, 432, 1259,
	1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1288,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 1243, 1242, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 1182, 295, 1301, 505, 506,
	507, 508, 1205, 1253, 509, 1267, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 1282, 523, 524, 1192,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	1283, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1263, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 1657, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 296, 297, 299, 298, 300, 301, 302,
	303, 1209, 304, 305, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 1262, 0, 316, 1269,
	317, 1268, 0, 1279, 318, 319, 320, 321, 322, 323,
	1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325, 326,
	1255, 0, 1236, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 353, 354, 355, 356, 357, 1272, 358,
	360, 1266, 1265, 1185, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1257, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1191, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1280, 1281, 391, 1204, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1264, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 1277, 1278, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1287, 0, 1214, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1250, 1251,
	1254, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1292,
	511, 432, 1259, 1260, 0, 1220, 0, 433, 434, 1294,
	1252, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1288, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 1243, 1242, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 1182, 295,
	1301, 505, 506, 507, 508, 1205, 1253, 509, 1267, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 1282,
	523, 524, 1192, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 1283, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1263, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 1620, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 1176, 1177, 296, 297, 299, 298,
	300, 301, 302, 303, 1209, 304, 305, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 1262,
	0, 316, 1269, 317, 1268, 0, 1279, 318, 319, 320,
	321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695,
	0, 325, 326, 1255, 0, 1236, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356,
	357, 1272, 358, 360, 1266, 1265, 1185, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1257, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1191, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1280, 1281, 391, 1204,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1264,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 1277, 1278, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1287,
	0, 1214, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1250, 1251, 1254, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1292, 511, 432, 1259, 1260, 0, 1220, 0,
	433, 434, 1294, 1252, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1288, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 1243, 1242,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 1182, 295, 1301, 505, 506, 507, 508, 1205, 1253,
	509, 1267, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 1282, 523, 524, 1192, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 1283, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1263, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	1179, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 1186, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1183, 0, 0, 0,
	1602, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	1178, 0, 0, 0, 0, 0, 0, 1176, 1177, 296,
	297, 299, 298, 300, 301, 302, 303, 1209, 304, 305,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 1262, 0, 316, 1269, 317, 1268, 0, 1279,
	318, 319, 320, 321, 322, 323, 1215, 1248, 1180, 324,
	1309, 1310, 695, 0, 325, 326, 1255, 0, 1236, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353,
	354, 355, 356, 357, 1272, 358, 360, 1266, 1265, 1185,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1257, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1191, 380, 381,
	382, 384, 386, 383, 1606, 387, 388, 389, 390, 1280,
	1281, 391, 1204, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1264, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 1277,
	1278, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1287, 0, 1214, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1250, 1251, 1254, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1292, 511, 432, 1259, 1260,
	0, 1220, 0, 433, 434, 1294, 1252, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1288, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 1243, 1242, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 1182, 295, 1301, 505, 506, 507,
	508, 1205, 1253, 509, 1267, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 1282, 523, 524, 1192, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 1283,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1263, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 1607, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 1193,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 1179, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 1605, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 1186, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1183,
	0, 0, 0, 1434, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 1178, 0, 0, 0, 0, 0, 0,
	1176, 1177, 296, 297, 299, 298, 300, 301, 302, 303,
	1209, 304, 305, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 1301,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 661, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1183, 0, 0, 0, 0, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 1185, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 1191, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	1182, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 1192, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 1179,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 1186, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1183, 0, 0, 0, 0,
	0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0, 1178,
	0, 0, 0, 0, 0, 0, 1176, 1177, 296, 297,
	299, 298, 300, 301, 302, 303, 1209, 304, 305, 0,
	1207, 0, 0, 0, 1249, 1213, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 1262, 0, 316, 1269, 317, 1268, 0, 1279, 318,
	319, 320, 321, 322, 323, 1215, 1248, 1180, 324, 1309,
	1310, 695, 0, 325, 326, 1255, 0, 1236, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	5096, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354,
	355, 356, 357, 1272, 358, 360, 1266, 1265, 1185, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 1257, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 1191, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 1280, 1281,
	391, 1204, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 1264, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 1277, 1278,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 1287, 0, 1214, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1250, 1251, 1254, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 1292, 511, 432, 1259, 1260, 0,
	1220, 0, 433, 434, 1294, 1252, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 1288, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	1243, 1242, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 1182, 295, 1301, 505, 506, 507, 508,
	1205, 1253, 509, 1267, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 1282, 523, 524, 1192, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 1283, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 1263, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 1193, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1246, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 1261, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	1308, 630, 631, 632, 633, 1284, 637, 638, 639, 0,
	640, 641, 1179, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 1273, 1274, 1275,
	1276, 0, 660, 0, 651, 652, 653, 654, 1285, 655,
	1286, 1203, 656, 657, 658, 659, 0, 5095, 662, 0,
	1186, 663, 664, 666, 668, 669, 665, 667, 670, 1247,
	671, 0, 0, 672, 673, 674, 734, 1270, 1307, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 1183, 0,
	0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195, 1196,
	1208, 0, 1178, 0, 0, 0, 0, 0, 0, 1176,
	1177, 296, 297, 299, 298, 300, 301, 302, 303, 1209,
	304, 305, 0, 1207, 0, 0, 0, 1249, 1213, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 5094, 1262, 0, 316, 1269, 317, 1268,
	0, 1279, 318, 319, 320, 321, 322, 323, 1215, 1248,
	1180, 324, 1309, 1310, 695, 0, 325, 326, 1255, 0,
	1236, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 5096, 1239, 1237, 1238, 1245, 1241, 1240,
	1244, 353, 354, 355, 356, 357, 1272, 358, 360, 1266,
	1265, 1185, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 1191,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 1280, 1281, 391, 1204, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 1264, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 1277, 1278, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 1287, 0, 1214, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 1250, 1251, 1254, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 1292, 511, 432,
	1259, 1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	1288, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 1243, 1242, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 1182, 295, 1301, 505,
	506, 507, 508, 1205, 1253, 509, 1267, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 1302, 522, 1303, 1282, 523, 524,
	1192, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 1283, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 1263,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 1193, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 1246, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 1261,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 1308, 630, 631, 632, 633, 1284, 637,
	638, 639, 0, 640, 641, 1179, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	1273, 1274, 1275, 1276, 0, 660, 0, 651, 652, 653,
	654, 1285, 655, 1286, 1203, 656, 657, 658, 659, 0,
	5095, 662, 0, 1186, 663, 664, 666, 668, 669, 665,
	667, 670, 1247, 671, 0, 0, 672, 673, 674, 734,
	1270, 1307, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 1183, 0, 0, 0, 0, 0, 1225, 1197, 1198,
	1199, 1195, 1196, 1208, 0, 1178, 0, 0, 0, 0,
	0, 0, 1176, 1177, 296, 297, 299, 298, 300, 301,
	302, 303, 1209, 304, 305, 0, 1207, 0, 0, 0,
	1249, 1213, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 1262, 0, 316,
	1269, 317, 1268, 0, 1279, 318, 319, 320, 321, 322,
	323, 1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 4693, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 1272,
	358, 360, 1266, 1265, 1185, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 1257,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 1191, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 1204, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 1264, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 1277, 1278, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 4694,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 1259, 1260, 0, 1220, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 1182,
	295, 1301, 505, 506, 507, 508, 1205, 1253, 509, 1267,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 1192, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 1263, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 4692, 586, 1193, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 1261, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 1308, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 1179, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 1273, 1274, 1275, 1276, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 1203, 656, 657,
	658, 659, 0, 661, 662, 0, 1186, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 1270, 1307, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1183, 0, 0, 0, 0, 0,
	1225, 1197, 1198, 1199, 3414, 3415, 1208, 0, 1178, 0,
	0, 0, 0, 0, 0, 1176, 1177, 296, 297, 299,
	298, 300, 301, 302, 303, 1209, 304, 305, 0, 1207,
	0, 0, 0, 1249, 1213, 0, 0, 306, 0, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	1262, 0, 316, 1269, 317, 1268, 0, 1279, 318, 319,
	320, 321, 322, 323, 1215, 1248, 1180, 324, 1309, 1310,
	695, 0, 325, 326, 1255, 0, 1236, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1290, 350, 351, 352,
	1239, 1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355,
	356, 357, 1272, 358, 360, 1266, 1265, 1185, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 1257, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 1191, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 1280, 1281, 391,
	1204, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	1264, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1291, 401, 402, 403, 1277, 1278, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	1287, 0, 1214, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1250, 1251, 1254, 510, 1293, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 1292, 511, 432, 1259, 1260, 0, 1220,
	0, 433, 434, 1294, 1252, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 1288, 1297, 449, 450,
	1298, 0, 451, 452, 453, 454, 455, 456, 459, 1243,
	1242, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 1182, 295, 1301, 505, 506, 507, 508, 1205,
	1253, 509, 1267, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	1302, 522, 1303, 1282, 523, 524, 1192, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 1283, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 1263, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 1193, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1246, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 1261, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 1308,
	630, 631, 632, 633, 1284, 637, 638, 639, 0, 640,
	641, 1179, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 1273, 1274, 1275, 1276,
	0, 660, 0, 651, 652, 653, 654, 1285, 655, 1286,
	1203, 656, 657, 658, 659, 0, 661, 662, 0, 1186,
	663, 664, 666, 668, 669, 665, 667, 670, 1247, 671,
	0, 0, 672, 673, 674, 734, 1270, 1307, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 1183, 0, 0,
	0, 0, 0, 1225, 1197, 1198, 1199, 3412, 3413, 1208,
	0, 1178, 0, 0, 0, 0, 0, 0, 1176, 1177,
	296, 297, 299, 298, 300, 301, 302, 303, 1209, 304,
	305, 0, 1207, 0, 0, 0, 1249, 1213, 0, 0,
	306, 0, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 1262, 0, 316, 1269, 317, 1268, 0,
	1279, 318, 319, 320, 321, 322, 323, 1215, 1248, 1180,
	324, 1309, 1310, 695, 0, 325, 326, 1255, 0, 1236,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	353, 354, 355, 356, 357, 1272, 358, 360, 1266, 1265,
	1185, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 1257, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 1191, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1280, 1281, 391, 1204, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 1264, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	1277, 1278, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1287, 0, 1214, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1250, 1251, 1254, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1292, 511, 432, 1259,
	1260, 0, 1220, 0, 433, 434, 1294, 1252, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1288,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 1243, 1242, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 1182, 295, 1301, 505, 506,
	507, 508, 1205, 1253, 509, 1267, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 1282, 523, 524, 1192,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	1283, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 1263, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	1193, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 1261, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 1308, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 1179, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 1273,
	1274, 1275, 1276, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 1203, 656, 657, 658, 659, 0, 661,
	662, 0, 1186, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 1270,
	1307, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	1183, 0, 0, 0, 0, 0, 1225, 1197, 1198, 1199,
	1195, 1196, 1208, 0, 1178, 0, 0, 0, 0, 0,
	0, 1176, 1177, 296, 297, 299, 298, 300, 301, 302,
	303, 1209, 304, 305, 0, 1207, 0, 0, 0, 1249,
	1213, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 1262, 0, 316, 1269,
	317, 1268, 0, 1279, 318, 319, 320, 321, 322, 323,
	1215, 1248, 1180, 324, 1309, 1310, 695, 0, 325, 326,
	1255, 0, 1236, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245,
	1241, 1240, 1244, 353, 354, 355, 356, 357, 1272, 358,
	360, 1266, 1265, 1185, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 1257, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 1191, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 1280, 1281, 391, 1204, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 1264, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 1277, 1278, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 1287, 0, 1214, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1250, 1251,
	1254, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 1292,
	511, 432, 1259, 1260, 0, 1220, 0, 433, 434, 1294,
	1252, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 1288, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 1243, 1242, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 1182, 295,
	1301, 505, 506, 507, 508, 1205, 1253, 509, 1267, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 1282,
	523, 524, 1192, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 1283, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 1263, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 1193, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 1246, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 1261, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 1308, 630, 631, 632, 633,
	1284, 637, 638, 639, 0, 640, 641, 1179, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 1273, 1274, 1275, 1276, 0, 660, 0, 651,
	652, 653, 654, 1285, 655, 1286, 1203, 656, 657, 658,
	659, 0, 661, 662, 0, 1186, 663, 664, 666, 668,
	669, 665, 667, 670, 1247, 671, 0, 0, 672, 673,
	674, 734, 1270, 1307, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1183, 0, 0, 0, 0, 0, 1225,
	1197, 1198, 1199, 1195, 1196, 1208, 0, 1178, 0, 0,
	0, 0, 0, 0, 2642, 2643, 296, 297, 299, 298,
	300, 301, 302, 303, 1209, 304, 305, 0, 1207, 0,
	0, 0, 1249, 1213, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 1262,
	0, 316, 1269, 317, 1268, 0, 1279, 318, 319, 320,
	321, 322, 323, 1215, 1248, 0, 324, 1309, 1310, 695,
	0, 325, 326, 1255, 0, 1236, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 1239,
	1237, 1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356,
	357, 1272, 358, 360, 1266, 1265, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 1257, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 1191, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 1280, 1281, 391, 1204,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 1264,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 1277, 1278, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 1287,
	0, 1214, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1250, 1251, 1254, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 1292, 511, 432, 1259, 1260, 0, 1220, 0,
	433, 434, 1294, 1252, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 1288, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 1243, 1242,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 0, 295, 1301, 505, 506, 507, 508, 1205, 1253,
	509, 1267, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 1282, 523, 524, 1192, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 1283, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 1263, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 1193, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1246,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 1261, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 1308, 630,
	631, 632, 633, 1284, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 1273, 1274, 1275, 1276, 0,
	660, 0, 651, 652, 653, 654, 1285, 655, 1286, 1203,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 1247, 671, 0,
	0, 672, 673, 674, 734, 1270, 1307, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 1225, 1197, 1198, 1199, 1195, 1196, 1208, 0,
	2901, 0, 0, 0, 0, 0, 0, 2899, 2900, 296,
	297, 299, 298, 300, 301, 302, 303, 1209, 304, 305,
	0, 1207, 0, 0, 0, 1249, 1213, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 1262, 0, 316, 1269, 317, 1268, 0, 1279,
	318, 319, 320, 321, 322, 323, 1215, 1248, 0, 324,
	1309, 1310, 695, 0, 325, 326, 1255, 0, 1236, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244, 353,
	354, 355, 356, 357, 1272, 358, 360, 1266, 1265, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 1257, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 1191, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 1280,
	1281, 391, 1204, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 1264, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 1277,
	1278, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 1287, 0, 1214, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1250, 1251, 1254, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 1292, 511, 432, 1259, 1260,
	0, 1220, 0, 433, 434, 1294, 1252, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 1288, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 1243, 1242, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 0, 295, 1301, 505, 506, 507,
	508, 1205, 1253, 509, 1267, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 1282, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 1283,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 1263, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 3407,
	3408, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 1246, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 1261, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 1308, 630, 631, 632, 633, 1284, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 1273, 1274,
	1275, 1276, 0, 660, 0, 651, 652, 653, 654, 1285,
	655, 1286, 1203, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	1247, 671, 0, 0, 672, 673, 674, 734, 1270, 1307,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 1225, 1197, 1198, 1199, 1195,
	1196, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	2267, 2268, 296, 297, 299, 298, 300, 301, 302, 303,
	1209, 304, 305, 0, 1207, 0, 0, 0, 1249, 1213,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 0, 1262, 0, 316, 1269, 317,
	1268, 0, 1279, 318, 319, 320, 321, 322, 323, 1215,
	1248, 1180, 324, 1309, 1310, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 5096, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 1272, 358, 360,
	1266, 1265, 1185, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 1257, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	1191, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 1204, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 1264, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 1277, 1278, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 1214, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 1259, 1260, 0, 1220, 0, 433, 434, 0, 1252,
	0, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 1182, 295, 0,
	505, 506, 507, 508, 1205, 1253, 509, 1267, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 1192, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	1263, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 1193, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	1261, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 1308, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 1179, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 1273, 1274, 1275, 1276, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 1203, 656, 657, 658, 659,
	0, 5095, 662, 0, 1186, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	734, 1270, 1307, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 2920, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 1176, 1177, 296, 297, 299, 298, 300,
	301, 302, 303, 1209, 304, 305, 0, 1207, 0, 0,
	0, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 0, 1248, 0, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	0, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 1632, 0, 1225, 1197,
	1198, 1199, 1195, 1196, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 1209, 0, 0, 0,
	1207, 1249, 1213, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 1262, 0,
	316, 1269, 317, 1268, 0, 1279, 318, 319, 320, 321,
	322, 323, 0, 1248, 0, 324, 1309, 1310, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	1272, 358, 360, 1266, 1265, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	1257, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 1204, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 1264, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 1277, 1278, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	1214, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 1259, 1260, 0, 1220, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	0, 295, 1301, 505, 506, 507, 508, 1205, 1253, 509,
	1267, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 1263, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 1193, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 1261, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 1308, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 1273, 1274, 1275, 1276, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 1203, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 734, 1270, 1307, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 1169, 0, 1348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 1209, 0, 0, 0,
	1207, 1249, 0, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 1248, 0, 324, 693, 694, 695, 0,
	325, 326, 1255, 0, 1236, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 1239, 1237,
	1238, 1245, 1241, 1240, 1244, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 1280, 1281, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 1287, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1250, 1251, 1254, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 1292, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 1294, 1252, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 1334, 445,
	447, 446, 0, 448, 1288, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 1243, 1242, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	0, 295, 1301, 505, 506, 507, 508, 0, 1253, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 1340,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 1282, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 1283, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 1342, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 251, 605, 606, 604, 607, 608, 609, 1246, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 1284, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 253, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 1285, 655, 1286, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 1247, 671, 0, 0,
	672, 673, 674, 1749, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 245, 682,
	683, 738, 684, 685, 686, 1348, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 1338, 0, 2110, 0, 1249, 0,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	1248, 0, 324, 693, 694, 695, 0, 325, 326, 1255,
	0, 1236, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 1239, 1237, 1238, 1245, 1241,
	1240, 1244, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 1280, 1281, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 1287, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1250, 1251, 1254,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 1292, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 1294, 1252,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 1334, 445, 447, 446, 0,
	448, 1288, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 1243, 1242, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 0, 295, 1301,
	505, 506, 507, 508, 0, 1253, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 1340, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 1282, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 1283, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 1342, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 251, 605,
	606, 604, 607, 608, 609, 1246, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 1284,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 253,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 1285, 655, 1286, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 1247, 671, 0, 0, 672, 673, 674,
	1749, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 245, 682, 683, 738, 684,
	685, 686, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3571, 0, 1348, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1338, 0, 2110, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 1248, 0, 324, 693, 694, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1334, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	295, 1301, 505, 506, 507, 508, 0, 1253, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 1340, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 1330, 0, 1348, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 0, 0, 1338, 306, 1336, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 1248, 0, 324, 693, 694, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1334, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	295, 1301, 505, 506, 507, 508, 0, 1253, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 1340, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 1348, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 0, 0, 1338, 306, 1336, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 1248, 0, 324, 693, 694, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 1334, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	295, 1301, 505, 506, 507, 508, 0, 1253, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 1340, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 1348, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 0, 0, 1338, 306, 1336, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 1248, 0, 324, 693, 694, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	295, 1301, 505, 506, 507, 508, 0, 1253, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 1348, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 306, 4509, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 1248, 0, 324, 693, 694, 695, 0, 325,
	326, 1255, 0, 1236, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 1239, 1237, 1238,
	1245, 1241, 1240, 1244, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 1280, 1281, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 1287, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1250,
	1251, 1254, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 1252, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 1288, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 1243, 1242, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	295, 1301, 505, 506, 507, 508, 0, 1253, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	1282, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 1283, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 1342, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1246, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 1284, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 1285, 655, 1286, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 1247, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 2746, 2747, 2748, 2765, 2766, 2767,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 2768, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 2006, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	1991, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	2758, 0, 336, 337, 338, 335, 339, 0, 340, 2754,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 2759, 2760, 2761,
	2762, 392, 393, 394, 702, 0, 0, 2753, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 2763, 2764, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 2756,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 2757, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 1990, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 1169,
	0, 1627, 2743, 2744, 2745, 2769, 2755, 2749, 0, 2751,
	2752, 2750, 2737, 2738, 2739, 2740, 2741, 2742, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 1591, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1292, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 1294, 713, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 0, 0, 1301, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 251, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 253, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 1749, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 245, 682, 683, 738, 684, 685, 686, 0, 1746,
	246, 1627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 202,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 1289, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 1591, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 1290, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 1291, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 1293, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 1292, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 1294, 713, 1295, 435, 436, 437,
	1296, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 1297, 449,
	450, 1298, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 1299, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	1300, 503, 491, 0, 0, 1301, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 1302, 522, 1303, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 1304, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 251, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 1305, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 253, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 1749, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 0,
	0, 245, 682, 683, 738, 684, 685, 686, 1627, 1626,
	246, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 202,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 1591, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1292, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 1294, 713, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	0, 0, 1301, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1627, 1626, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 1773, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 1289, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 1591, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 1290, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 1291, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 1293, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 1292, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 1294, 713,
	1295, 435, 436, 437, 1296, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 1297, 449, 450, 1298, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 1299, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 1300, 503, 491, 0, 0, 1301,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 1302, 522, 1303, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 1304, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 1305, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 3904, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 1591, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1292, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 1294, 713, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 0, 0, 1301, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 2505, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1627,
	2415, 0, 0, 0, 0, 2416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	1773, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 1591, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1292, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 1294, 713, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	2414, 447, 446, 0, 448, 714, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 0, 0, 1301, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1627, 1626, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 1773, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 1591, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1292,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 1294,
	713, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 0, 0,
	1301, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 1169, 0, 290, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 1755, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 251,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	253, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 1749, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 245, 682, 683, 738,
	684, 685, 686, 0, 0, 246, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 202, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	290, 3180, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 2124, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 290, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 5263, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 290, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 3855, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 0, 290, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 1743, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	0, 0, 0, 1348, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	306, 3301, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 1248, 0,
	324, 693, 694, 695, 0, 325, 326, 1255, 0, 1236,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 1239, 1237, 1238, 1245, 1241, 1240, 1244,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	1280, 1281, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 1287, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 1250, 1251, 1254, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 1292, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 1294, 1252, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 1288,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 1243, 1242, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 0, 295, 1301, 505, 506,
	507, 508, 0, 1253, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 1282, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	1283, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 1246, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 1284, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	1285, 655, 1286, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 1247, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	290, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 290, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 4019, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 992, 0, 893, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 2492, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 900, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 989,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 991, 0, 636,
	627, 898, 642, 643, 644, 645, 646, 899, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 2168, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 903, 0, 0,
	0, 306, 0, 307, 308, 1289, 309, 310, 311, 312,
	313, 314, 315, 0, 2174, 0, 316, 2164, 317, 2180,
	0, 2187, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 2190, 2191, 0, 0, 325, 326, 0, 0,
	1591, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	1290, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 1272, 358, 360, 2178,
	2177, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 1257, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 0,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 0, 0, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 2176, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 1291, 401, 402,
	403, 2185, 2186, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 0, 0, 0, 510,
	1293, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 1292, 511, 432,
	2171, 2172, 0, 2167, 0, 433, 434, 1294, 0, 1295,
	435, 436, 437, 1296, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	0, 1297, 449, 450, 1298, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 1299, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 1300, 503, 491, 0, 0, 1301, 505,
	506, 507, 508, 0, 0, 509, 2179, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 0, 1302, 522, 1303, 0, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 2161, 536, 537, 538, 2162, 539, 540,
	541, 0, 542, 0, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 2175,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 1304, 582, 583, 584, 585,
	586, 0, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 1305, 614, 615, 616, 617, 618, 619, 620, 2173,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 2189, 630, 631, 632, 633, 0, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	2181, 2182, 2183, 2184, 0, 660, 0, 651, 652, 653,
	654, 0, 655, 0, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 0,
	2165, 2188, 0, 676, 675, 677, 678, 679, 0, 680,
	681, 0, 0, 0, 0, 682, 683, 0, 684, 685,
	686, 893, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 4146, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 2155, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 900, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 4145,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 898, 642, 643, 644, 645,
	646, 899, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 4144, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 0, 893,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 2195, 304, 305, 0, 0, 0,
	0, 903, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 900,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 2194, 600, 601,
	602, 603, 0, 2196, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 898, 642, 643, 644, 645, 646, 899,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 2193, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 893, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 2146, 304, 305, 0, 0, 0, 0, 903,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 900, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 2145, 600, 601, 602, 603,
	0, 2147, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 898, 642, 643, 644, 645, 646, 899, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	2144, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 891, 0, 893, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 903, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 900, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	898, 642, 643, 644, 645, 646, 899, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 893, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 903, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 900, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 898, 642,
	643, 644, 645, 646, 899, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 0, 893, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 903, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 900, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 2545, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	2546, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 898, 642, 643, 644,
	645, 646, 899, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 2547, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	290, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 903, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 0, 290, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	903, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 1627, 1626, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4362, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 1289, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 1591, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 1290, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 1291, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 1293, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 1292, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 1294, 713, 1295, 435, 436,
	437, 1296, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 1297,
	449, 450, 1298, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 1299, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 1300, 503, 491, 0, 0, 1301, 505, 506, 507,
	508, 4249, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 1302, 522, 1303, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 1304, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 1305,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 0,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 1627,
	1626, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	1289, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 1591, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 1290, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 1291, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 1293, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 1292, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 1294, 713, 1295, 435, 436, 437, 1296, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 1297, 449, 450, 1298,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	1299, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 1300, 503,
	491, 0, 0, 1301, 505, 506, 507, 508, 3805, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 1302,
	522, 1303, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	1304, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 1305, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 0, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 1805, 0, 1627, 1626,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 1289,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 1591, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 1290, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 293,
	0, 0, 0, 0, 0, 1803, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 1291, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 1293, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 1292, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 1294, 713, 1295, 435, 436, 437, 1296, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 1297, 449, 450, 1298, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 1299,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 1300, 503, 491,
	0, 0, 1301, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 1302, 522,
	1303, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 1804, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 1304,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 1802, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 1305, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 0, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 1677, 0, 1627, 1626, 0,
	0, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 1591, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1679,
	708, 709, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 713, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	0, 1301, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 0, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 1622, 0, 1627, 1626, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 1289, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 1591, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 1290, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 1291,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 1293, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 1292,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 1294,
	713, 1295, 435, 436, 437, 1296, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 1297, 449, 450, 1298, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 1299, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 1300, 503, 491, 0, 0,
	1301, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 1302, 522, 1303, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 1304, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 1305, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 0, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 1627, 1626, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 1289, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 1591,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 1290,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 1291, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 1293,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 1292, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 1294, 713, 1295, 435,
	436, 437, 1296, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	1297, 449, 450, 1298, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 1299, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 1300, 503, 491, 0, 0, 1301, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 1302, 522, 1303, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 1304, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	1305, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1627, 1626, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 1289, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 1591, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 1290, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 1291, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 1293, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 1292, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 1294, 713, 1295, 435, 436, 437, 1296,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 1297, 449, 450,
	1298, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 1299, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 1300,
	503, 491, 0, 0, 1301, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	1302, 522, 1303, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 1304, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 1305, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1627, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 1289, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 1591, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 1290, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	1291, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 1293, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	1292, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	1294, 713, 1295, 435, 436, 437, 1296, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 1297, 449, 450, 1298, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 1299, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 1300, 503, 491, 0,
	0, 1301, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 1302, 522, 1303,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 1304, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 1305, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 3080, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 3847, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 3084, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 3846, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 3083, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 3843, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 3845, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 3842, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 3082, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 3844, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 290, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 3080, 325, 326, 696, 0, 0, 3074, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 3076, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 3084, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	3083, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 3073, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 3082, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	3081, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1885, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 1884, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	1883, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 1886, 591, 592, 599, 600,
	601, 602, 603, 0, 1882, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 1880, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 1881,
	675, 677, 678, 679, 737, 680, 681, 1595, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1597, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	1340, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1592, 0, 290, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1594, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 1340,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1498, 0, 290, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1500,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 1340, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 771, 0, 290, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 770, 302,
	303, 759, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 762, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 768, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 764,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 758, 0, 290, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	759, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 762, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 763, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 764, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 290, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 759, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 762, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	763, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 764, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 290,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 759, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 762, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 4259, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 764, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 290, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	2451, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 1340, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	290, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 3740,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 3271, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3270, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 2513, 0, 290, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 2457, 0, 290, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 2456,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 2444, 0, 290, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 2446, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 2408, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 1340, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1721, 0, 290, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 1720, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1615,
	0, 290, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1608, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1610, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1417, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1416, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1407, 0, 290, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 293,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1406, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 294, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 295, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1404, 0, 290, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 293, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1403,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 294, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	295, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1399, 0, 290, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 1398, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 740, 0, 290, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 281, 0, 290, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 293, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 294, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 295, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 290, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 293, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 294,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 295, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 290, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	762, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 763, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 764, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 290, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 2554, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 293, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 294, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 295, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 290, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 2552, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 293, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	294, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 295, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 290,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 2550,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	293, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 294, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 295, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 290, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 293, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 2463, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 294, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 295,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 293, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 2220, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 294, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 295, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	290, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 293, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 2214, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 294, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 295, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 976, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 975,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 974, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 860, 0, 290, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 849, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 858, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 851, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 857, 400,
	853, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 0, 422, 423, 854, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 852, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 855, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 856, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 850, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 843, 0, 290, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 849, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 858, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 851, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 857, 400, 853,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 854, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 852, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 855, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	856, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	850, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 3846, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 4594, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1445, 0, 290, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 1448, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 1446, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 831, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 830, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 829, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 1449, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 827,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1445, 0, 290, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 1448, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 1446, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 831, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 830, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	829, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	1449, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 827, 729,
	730, 731, 0, 660, 0, 651, 1447, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 838,
	0, 290, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 836, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 749, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 748, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	747, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 290, 3180, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 4894, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 290, 3680, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 290, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	707, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	4481, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 290, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 4203, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 290, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 2955, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 290,
	3180, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 3310, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 290, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 2352, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 830, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 829, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 827, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 2524, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	2511, 0, 290, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1777,
	0, 290, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1769, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 821, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 817, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 707, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 822, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 831,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 830, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 829, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 1754, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 827, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 1727, 0, 290, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1726, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 1711, 0, 290, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 1709,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 1705, 0, 290, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 1682, 0, 290, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 1680, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 1675, 0, 290, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 1636, 0, 290, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	1600, 0, 290, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1451,
	0, 290, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 830, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 829,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 827, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 1422, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1421, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 1413, 0, 290,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1412, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 290, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 1365, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 707, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 841, 0, 290, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 821, 0, 290, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 817, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 816, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 822, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 831, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 830, 583, 584, 585,
	586, 818, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 829, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 819, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	827, 729, 730, 731, 0, 660, 0, 651, 823, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 810, 0, 290, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 707, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 811, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	773, 0, 290, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 766,
	0, 290, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 744, 0,
	290, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 707, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 290, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 707,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 3877, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 596, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 290, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 830, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 829,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 827, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 290, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	3784, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 290, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 3758, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 559, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 290, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 414, 0, 415, 416, 417,
	418, 419, 420, 421, 3754, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 527, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 553, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	587, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 290,
	0, 0, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 687, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 688, 689,
	0, 316, 690, 317, 691, 0, 692, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 693, 694, 695,
	0, 325, 326, 696, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 0, 353, 354, 355, 356,
	357, 0, 358, 360, 697, 698, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 699, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 700, 701, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 702,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 703, 704, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 705,
	0, 706, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 3705, 708, 709, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 710, 711, 0, 712, 0,
	433, 434, 0, 713, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 714, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 715,
	509, 716, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 717, 0,
	522, 0, 718, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 719, 536,
	537, 538, 720, 539, 540, 541, 721, 542, 722, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 723, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 724, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 0,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 725, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 726, 630,
	631, 632, 633, 727, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 728, 729, 730, 731, 0,
	660, 0, 651, 652, 653, 654, 732, 655, 733, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 734, 735, 736, 0, 676, 675,
	677, 678, 679, 737, 680, 681, 290, 0, 0, 0,
	682, 683, 738, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 296, 297, 299, 298, 300, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 687,
	0, 0, 0, 306, 0, 307, 308, 0, 309, 310,
	311, 312, 313, 314, 315, 688, 689, 0, 316, 690,
	317, 691, 0, 692, 318, 319, 320, 321, 322, 323,
	0, 0, 0, 324, 693, 694, 695, 0, 325, 326,
	696, 0, 0, 0, 327, 328, 329, 330, 331, 332,
	333, 334, 0, 0, 336, 337, 338, 335, 339, 0,
	340, 0, 341, 342, 343, 344, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 352, 0, 0, 0, 0,
	0, 0, 0, 353, 354, 355, 356, 357, 0, 358,
	360, 697, 698, 0, 363, 359, 361, 0, 364, 362,
	365, 0, 366, 367, 368, 0, 0, 369, 370, 371,
	0, 372, 373, 374, 0, 375, 376, 377, 0, 378,
	379, 699, 380, 381, 382, 384, 386, 383, 385, 387,
	388, 389, 390, 700, 701, 391, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 394, 702, 0, 0, 0,
	395, 0, 396, 397, 398, 0, 399, 400, 0, 0,
	401, 402, 403, 703, 704, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 0, 413, 705, 0, 706, 414,
	0, 415, 416, 417, 418, 419, 420, 421, 3703, 708,
	709, 510, 0, 422, 423, 0, 424, 425, 426, 427,
	428, 0, 0, 0, 0, 429, 430, 431, 0, 0,
	511, 432, 710, 711, 0, 712, 0, 433, 434, 0,
	713, 0, 435, 436, 437, 0, 438, 0, 0, 0,
	439, 440, 441, 442, 443, 444, 0, 445, 447, 446,
	0, 448, 714, 0, 449, 450, 0, 0, 451, 452,
	453, 454, 455, 456, 459, 0, 0, 457, 458, 460,
	461, 0, 462, 463, 465, 468, 464, 466, 467, 469,
	482, 483, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 485, 0, 484, 0, 486, 487,
	488, 489, 490, 497, 499, 500, 495, 496, 498, 501,
	502, 504, 492, 493, 494, 0, 503, 491, 0, 0,
	0, 505, 506, 507, 508, 0, 715, 509, 716, 512,
	513, 0, 0, 514, 0, 515, 0, 0, 517, 518,
	519, 0, 0, 520, 521, 717, 0, 522, 0, 718,
	523, 524, 516, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 0, 534, 535, 719, 536, 537, 538, 720,
	539, 540, 541, 721, 542, 722, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 553, 554,
	555, 723, 556, 557, 559, 558, 560, 0, 561, 0,
	562, 563, 564, 0, 0, 0, 0, 0, 565, 566,
	568, 0, 569, 570, 571, 572, 567, 573, 574, 575,
	576, 577, 578, 0, 579, 580, 581, 0, 582, 583,
	584, 585, 586, 724, 587, 0, 588, 589, 596, 597,
	598, 590, 591, 592, 599, 600, 601, 602, 603, 0,
	605, 606, 604, 607, 608, 609, 0, 610, 611, 593,
	594, 612, 613, 0, 614, 615, 616, 617, 618, 619,
	620, 725, 0, 621, 0, 622, 623, 624, 625, 626,
	628, 595, 629, 634, 635, 726, 630, 631, 632, 633,
	727, 637, 638, 639, 0, 640, 641, 0, 636, 627,
	0, 642, 643, 644, 645, 646, 647, 0, 648, 649,
	0, 650, 728, 729, 730, 731, 0, 660, 0, 651,
	652, 653, 654, 732, 655, 733, 0, 656, 657, 658,
	659, 0, 661, 662, 0, 0, 663, 664, 666, 668,
	669, 665, 667, 670, 0, 671, 0, 0, 672, 673,
	674, 734, 735, 736, 0, 676, 675, 677, 678, 679,
	737, 680, 681, 290, 0, 0, 0, 682, 683, 738,
	684, 685, 686, 0, 0, 0, 0, 0, 0, 0,
	296, 297, 299, 298, 300, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 687, 0, 0, 0,
	306, 0, 307, 308, 0, 309, 310, 311, 312, 313,
	314, 315, 688, 689, 0, 316, 690, 317, 691, 0,
	692, 318, 319, 320, 321, 322, 323, 0, 0, 0,
	324, 693, 694, 695, 0, 325, 326, 696, 0, 0,
	0, 327, 328, 329, 330, 331, 332, 333, 334, 0,
	0, 336, 337, 338, 335, 339, 0, 340, 0, 341,
	342, 343, 344, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 352, 0, 0, 0, 0, 0, 0, 0,
	353, 354, 355, 356, 357, 0, 358, 360, 697, 698,
	0, 363, 359, 361, 0, 364, 362, 365, 0, 366,
	367, 368, 0, 0, 369, 370, 371, 0, 372, 373,
	374, 0, 375, 376, 377, 0, 378, 379, 699, 380,
	381, 382, 384, 386, 383, 385, 387, 388, 389, 390,
	700, 701, 391, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 394, 702, 0, 0, 0, 395, 0, 396,
	397, 398, 0, 399, 400, 0, 0, 401, 402, 403,
	703, 704, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 0, 413, 705, 0, 706, 414, 0, 415, 416,
	417, 418, 419, 420, 421, 3691, 708, 709, 510, 0,
	422, 423, 0, 424, 425, 426, 427, 428, 0, 0,
	0, 0, 429, 430, 431, 0, 0, 511, 432, 710,
	711, 0, 712, 0, 433, 434, 0, 713, 0, 435,
	436, 437, 0, 438, 0, 0, 0, 439, 440, 441,
	442, 443, 444, 0, 445, 447, 446, 0, 448, 714,
	0, 449, 450, 0, 0, 451, 452, 453, 454, 455,
	456, 459, 0, 0, 457, 458, 460, 461, 0, 462,
	463, 465, 468, 464, 466, 467, 469, 482, 483, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 485, 0, 484, 0, 486, 487, 488, 489, 490,
	497, 499, 500, 495, 496, 498, 501, 502, 504, 492,
	493, 494, 0, 503, 491, 0, 0, 0, 505, 506,
	507, 508, 0, 715, 509, 716, 512, 513, 0, 0,
	514, 0, 515, 0, 0, 517, 518, 519, 0, 0,
	520, 521, 717, 0, 522, 0, 718, 523, 524, 516,
	525, 526, 527, 528, 529, 530, 531, 532, 533, 0,
	534, 535, 719, 536, 537, 538, 720, 539, 540, 541,
	721, 542, 722, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 553, 554, 555, 723, 556,
	557, 559, 558, 560, 0, 561, 0, 562, 563, 564,
	0, 0, 0, 0, 0, 565, 566, 568, 0, 569,
	570, 571, 572, 567, 573, 574, 575, 576, 577, 578,
	0, 579, 580, 581, 0, 582, 583, 584, 585, 586,
	724, 587, 0, 588, 589, 596, 597, 598, 590, 591,
	592, 599, 600, 601, 602, 603, 0, 605, 606, 604,
	607, 608, 609, 0, 610, 611, 593, 594, 612, 613,
	0, 614, 615, 616, 617, 618, 619, 620, 725, 0,
	621, 0, 622, 623, 624, 625, 626, 628, 595, 629,
	634, 635, 726, 630, 631, 632, 633, 727, 637, 638,
	639, 0, 640, 641, 0, 636, 627, 0, 642, 643,
	644, 645, 646, 647, 0, 648, 649, 0, 650, 728,
	729, 730, 731, 0, 660, 0, 651, 652, 653, 654,
	732, 655, 733, 0, 656, 657, 658, 659, 0, 661,
	662, 0, 0, 663, 664, 666, 668, 669, 665, 667,
	670, 0, 671, 0, 0, 672, 673, 674, 734, 735,
	736, 0, 676, 675, 677, 678, 679, 737, 680, 681,
	290, 0, 0, 0, 682, 683, 738, 684, 685, 686,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 687, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 688,
	689, 0, 316, 690, 317, 691, 0, 692, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 693, 694,
	695, 0, 325, 326, 696, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 0, 353, 354, 355,
	356, 357, 0, 358, 360, 697, 698, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 699, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 700, 701, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	702, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 703, 704, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	705, 0, 706, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 3688, 708, 709, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 710, 711, 0, 712,
	0, 433, 434, 0, 713, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 714, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	715, 509, 716, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 717,
	0, 522, 0, 718, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 719,
	536, 537, 538, 720, 539, 540, 541, 721, 542, 722,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 723, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 724, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	0, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 725, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 726,
	630, 631, 632, 633, 727, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 728, 729, 730, 731,
	0, 660, 0, 651, 652, 653, 654, 732, 655, 733,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 734, 735, 736, 0, 676,
	675, 677, 678, 679, 737, 680, 681, 290, 0, 0,
	0, 682, 683, 738, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	687, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 688, 689, 0, 316,
	690, 317, 691, 0, 692, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 693, 694, 695, 0, 325,
	326, 696, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 0, 353, 354, 355, 356, 357, 0,
	358, 360, 697, 698, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 699, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 700, 701, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 702, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 703, 704, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 705, 0, 706,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 3281,
	708, 709, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 710, 711, 0, 712, 0, 433, 434,
	0, 713, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 714, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 715, 509, 716,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 717, 0, 522, 0,
	718, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 719, 536, 537, 538,
	720, 539, 540, 541, 721, 542, 722, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 723, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 724, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 0, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 725, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 726, 630, 631, 632,
	633, 727, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 728, 729, 730, 731, 0, 660, 0,
	651, 652, 653, 654, 732, 655, 733, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 734, 735, 736, 0, 676, 675, 677, 678,
	679, 737, 680, 681, 290, 0, 0, 0, 682, 683,
	738, 684, 685, 686, 0, 0, 0, 0, 0, 0,
	0, 296, 297, 299, 298, 300, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 687, 0, 0,
	0, 306, 0, 307, 308, 0, 309, 310, 311, 312,
	313, 314, 315, 688, 689, 0, 316, 690, 317, 691,
	0, 692, 318, 319, 320, 321, 322, 323, 0, 0,
	0, 324, 693, 694, 695, 0, 325, 326, 696, 0,
	0, 0, 327, 328, 329, 330, 331, 332, 333, 334,
	0, 0, 336, 337, 338, 335, 339, 0, 340, 0,
	341, 342, 343, 344, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 352, 0, 0, 0, 0, 0, 0,
	0, 353, 354, 355, 356, 357, 0, 358, 360, 697,
	698, 0, 363, 359, 361, 0, 364, 362, 365, 0,
	366, 367, 368, 0, 0, 369, 370, 371, 0, 372,
	373, 374, 0, 375, 376, 377, 0, 378, 379, 699,
	380, 381, 382, 384, 386, 383, 385, 387, 388, 389,
	390, 700, 701, 391, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 394, 702, 0, 0, 0, 395, 0,
	396, 397, 398, 0, 399, 400, 0, 0, 401, 402,
	403, 703, 704, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 0, 413, 705, 0, 706, 414, 0, 415,
	416, 417, 418, 419, 420, 421, 707, 708, 709, 510,
	0, 422, 423, 0, 424, 425, 426, 427, 428, 0,
	0, 0, 0, 429, 430, 431, 0, 0, 511, 432,
	710, 711, 0, 712, 0, 433, 434, 0, 713, 0,
	435, 436, 437, 0, 438, 0, 0, 0, 439, 440,
	441, 442, 443, 444, 0, 445, 447, 446, 0, 448,
	714, 0, 449, 450, 0, 0, 451, 452, 453, 454,
	455, 456, 459, 0, 0, 457, 458, 460, 461, 0,
	462, 463, 465, 468, 464, 466, 467, 469, 482, 483,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 485, 0, 484, 0, 486, 487, 488, 489,
	490, 497, 499, 500, 495, 496, 498, 501, 502, 504,
	492, 493, 494, 0, 503, 491, 0, 0, 0, 505,
	506, 507, 508, 0, 715, 509, 716, 512, 513, 0,
	0, 514, 0, 515, 0, 0, 517, 518, 519, 0,
	0, 520, 521, 717, 0, 522, 0, 718, 523, 524,
	516, 525, 526, 527, 528, 529, 530, 531, 532, 533,
	0, 534, 535, 719, 536, 537, 538, 720, 539, 540,
	541, 721, 542, 722, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 553, 554, 555, 723,
	556, 557, 559, 558, 560, 0, 561, 0, 562, 563,
	564, 0, 0, 0, 0, 0, 565, 566, 568, 0,
	569, 570, 571, 572, 567, 573, 574, 575, 576, 577,
	578, 0, 579, 580, 581, 0, 582, 583, 584, 585,
	586, 724, 587, 0, 588, 589, 811, 597, 598, 590,
	591, 592, 599, 600, 601, 602, 603, 0, 605, 606,
	604, 607, 608, 609, 0, 610, 611, 593, 594, 612,
	613, 0, 614, 615, 616, 617, 618, 619, 620, 725,
	0, 621, 0, 622, 623, 624, 625, 626, 628, 595,
	629, 634, 635, 726, 630, 631, 632, 633, 727, 637,
	638, 639, 0, 640, 641, 0, 636, 627, 0, 642,
	643, 644, 645, 646, 647, 0, 648, 649, 0, 650,
	728, 729, 730, 731, 0, 660, 0, 651, 652, 653,
	654, 732, 655, 733, 0, 656, 657, 658, 659, 0,
	661, 662, 0, 0, 663, 664, 666, 668, 669, 665,
	667, 670, 0, 671, 0, 0, 672, 673, 674, 734,
	735, 736, 0, 676, 675, 677, 678, 679, 737, 680,
	681, 290, 0, 0, 0, 682, 683, 738, 684, 685,
	686, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 687, 0, 2481, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	688, 689, 0, 316, 690, 317, 691, 0, 692, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 693,
	694, 695, 0, 325, 326, 696, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 0, 353, 354,
	355, 356, 357, 0, 358, 360, 697, 698, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 699, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 700, 701,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 702, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 703, 704,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 705, 0, 706, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 707, 708, 709, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 710, 711, 0,
	712, 0, 433, 434, 0, 713, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 714, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 715, 509, 716, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	717, 0, 522, 0, 718, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	719, 536, 537, 538, 720, 539, 540, 541, 721, 542,
	722, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 723, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 724, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 0, 0, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 725, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	726, 630, 631, 632, 633, 727, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 728, 729, 730,
	731, 0, 660, 0, 651, 652, 653, 654, 732, 655,
	733, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 734, 735, 736, 0,
	676, 675, 677, 678, 679, 737, 680, 681, 290, 0,
	0, 0, 682, 683, 738, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 687, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 688, 689, 0,
	316, 690, 317, 691, 0, 692, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 693, 694, 695, 0,
	325, 326, 696, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 0, 353, 354, 355, 356, 357,
	0, 358, 360, 697, 698, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 699, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 700, 701, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 702, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 703, 704, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 705, 0,
	706, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	1384, 708, 709, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 710, 711, 0, 712, 0, 433,
	434, 0, 713, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 714, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 715, 509,
	716, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 717, 0, 522,
	0, 718, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 719, 536, 537,
	538, 720, 539, 540, 541, 721, 542, 722, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 723, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 724, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 0, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 725, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 726, 630, 631,
	632, 633, 727, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 728, 729, 730, 731, 0, 660,
	0, 651, 652, 653, 654, 732, 655, 733, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 734, 735, 736, 0, 676, 675, 677,
	678, 679, 737, 680, 681, 290, 0, 0, 0, 682,
	683, 738, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 296, 297, 299, 298, 300, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 687, 0,
	0, 0, 306, 0, 307, 308, 0, 309, 310, 311,
	312, 313, 314, 315, 688, 689, 0, 316, 690, 317,
	691, 0, 692, 318, 319, 320, 321, 322, 323, 0,
	0, 0, 324, 693, 694, 695, 0, 325, 326, 696,
	0, 0, 0, 327, 328, 329, 330, 331, 332, 333,
	334, 0, 0, 336, 337, 338, 335, 339, 0, 340,
	0, 341, 342, 343, 344, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 352, 0, 0, 0, 0, 0,
	0, 0, 353, 354, 355, 356, 357, 0, 358, 360,
	697, 698, 0, 363, 359, 361, 0, 364, 362, 365,
	0, 366, 367, 368, 0, 0, 369, 370, 371, 0,
	372, 373, 374, 0, 375, 376, 377, 0, 378, 379,
	699, 380, 381, 382, 384, 386, 383, 385, 387, 388,
	389, 390, 700, 701, 391, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 394, 702, 0, 0, 0, 395,
	0, 396, 397, 398, 0, 399, 400, 0, 0, 401,
	402, 403, 703, 704, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 0, 413, 705, 0, 706, 414, 0,
	415, 416, 417, 418, 419, 420, 421, 707, 708, 709,
	510, 0, 422, 423, 0, 424, 425, 426, 427, 428,
	0, 0, 0, 0, 429, 430, 431, 0, 0, 511,
	432, 710, 711, 0, 712, 0, 433, 434, 0, 713,
	0, 435, 436, 437, 0, 438, 0, 0, 0, 439,
	440, 441, 442, 443, 444, 0, 445, 447, 446, 0,
	448, 714, 0, 449, 450, 0, 0, 451, 452, 453,
	454, 455, 456, 459, 0, 0, 457, 458, 460, 461,
	0, 462, 463, 465, 468, 464, 466, 467, 469, 482,
	483, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 485, 0, 484, 0, 486, 487, 488,
	489, 490, 497, 499, 500, 495, 496, 498, 501, 502,
	504, 492, 493, 494, 0, 503, 491, 0, 0, 0,
	505, 506, 507, 508, 0, 715, 509, 716, 512, 513,
	0, 0, 514, 0, 515, 0, 0, 517, 518, 519,
	0, 0, 520, 521, 717, 0, 522, 0, 718, 523,
	524, 516, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 0, 534, 535, 719, 536, 537, 538, 720, 539,
	540, 541, 721, 542, 722, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 553, 554, 555,
	723, 556, 557, 1313, 558, 560, 0, 561, 0, 562,
	563, 564, 0, 0, 0, 0, 0, 565, 566, 568,
	0, 569, 570, 571, 572, 567, 573, 574, 575, 576,
	577, 578, 0, 579, 580, 581, 0, 582, 583, 584,
	585, 586, 724, 587, 0, 588, 589, 596, 597, 598,
	590, 591, 592, 599, 600, 601, 602, 603, 0, 605,
	606, 604, 607, 608, 609, 0, 610, 611, 593, 594,
	612, 613, 0, 614, 615, 616, 617, 618, 619, 620,
	725, 0, 621, 0, 622, 623, 624, 625, 626, 628,
	595, 629, 634, 635, 726, 630, 631, 632, 633, 727,
	637, 638, 639, 0, 640, 641, 0, 636, 627, 0,
	642, 643, 644, 645, 646, 647, 0, 648, 649, 0,
	650, 728, 729, 730, 731, 0, 660, 0, 651, 652,
	653, 654, 732, 655, 733, 0, 656, 657, 658, 659,
	0, 661, 662, 0, 0, 663, 664, 666, 668, 669,
	665, 667, 670, 0, 671, 0, 0, 672, 673, 674,
	734, 735, 736, 0, 676, 675, 677, 678, 679, 737,
	680, 681, 290, 0, 0, 0, 682, 683, 738, 684,
	685, 686, 0, 0, 0, 0, 0, 0, 0, 296,
	297, 299, 298, 300, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 687, 0, 0, 0, 306,
	0, 307, 308, 0, 309, 310, 311, 312, 313, 314,
	315, 688, 689, 0, 316, 690, 317, 691, 0, 692,
	318, 319, 320, 321, 322, 323, 0, 0, 0, 324,
	693, 694, 695, 0, 325, 326, 696, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 333, 334, 0, 0,
	336, 337, 338, 335, 339, 0, 340, 0, 341, 342,
	343, 344, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 352, 0, 0, 0, 0, 0, 0, 0, 353,
	354, 355, 356, 357, 0, 358, 360, 697, 698, 0,
	363, 359, 361, 0, 364, 362, 365, 0, 366, 367,
	368, 0, 0, 369, 370, 371, 0, 372, 373, 374,
	0, 375, 376, 377, 0, 378, 379, 699, 380, 381,
	382, 384, 386, 383, 385, 387, 388, 389, 390, 700,
	701, 391, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 394, 702, 0, 0, 0, 395, 0, 396, 397,
	398, 0, 399, 400, 0, 0, 401, 402, 403, 703,
	704, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	0, 413, 705, 0, 706, 0, 0, 415, 416, 417,
	418, 419, 420, 421, 707, 708, 709, 510, 0, 422,
	423, 0, 424, 425, 426, 427, 428, 0, 0, 0,
	0, 429, 430, 431, 0, 0, 511, 432, 710, 711,
	0, 712, 0, 433, 434, 0, 713, 0, 435, 436,
	437, 0, 438, 0, 0, 0, 439, 440, 441, 442,
	443, 444, 0, 445, 447, 446, 0, 448, 714, 0,
	449, 450, 0, 0, 451, 452, 453, 454, 455, 456,
	459, 0, 0, 457, 458, 460, 461, 0, 462, 463,
	465, 468, 464, 466, 467, 469, 482, 483, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	485, 0, 484, 0, 486, 487, 488, 489, 490, 497,
	499, 500, 495, 496, 498, 501, 502, 504, 492, 493,
	494, 0, 503, 491, 0, 0, 0, 505, 506, 507,
	508, 0, 715, 509, 716, 512, 513, 0, 0, 514,
	0, 515, 0, 0, 517, 518, 519, 0, 0, 520,
	521, 717, 0, 522, 0, 718, 523, 524, 516, 525,
	526, 0, 528, 529, 530, 531, 532, 533, 0, 534,
	535, 719, 536, 537, 538, 720, 539, 540, 541, 721,
	542, 722, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 0, 554, 555, 723, 556, 557,
	559, 558, 560, 0, 561, 0, 562, 563, 564, 0,
	0, 0, 0, 0, 565, 566, 568, 0, 569, 570,
	571, 572, 567, 573, 574, 575, 576, 577, 578, 0,
	579, 580, 581, 0, 582, 583, 584, 585, 586, 724,
	0, 0, 588, 589, 596, 597, 598, 590, 591, 592,
	599, 600, 601, 602, 603, 0, 605, 606, 604, 607,
	608, 609, 0, 610, 611, 593, 594, 612, 613, 0,
	614, 615, 616, 617, 618, 619, 620, 725, 0, 621,
	0, 622, 623, 624, 625, 626, 628, 595, 629, 634,
	635, 726, 630, 631, 632, 633, 727, 637, 638, 639,
	0, 640, 641, 0, 636, 627, 0, 642, 643, 644,
	645, 646, 647, 0, 648, 649, 0, 650, 728, 729,
	730, 731, 0, 660, 0, 651, 652, 653, 654, 732,
	655, 733, 0, 656, 657, 658, 659, 0, 661, 662,
	0, 0, 663, 664, 666, 668, 669, 665, 667, 670,
	0, 671, 0, 0, 672, 673, 674, 734, 735, 736,
	0, 676, 675, 677, 678, 679, 737, 680, 681, 1717,
	0, 1429, 0, 682, 683, 738, 684, 685, 686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 317, 0, 0, 0, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 0,
	0, 0, 0, 325, 326, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 1431, 353, 354,
	355, 356, 357, 0, 358, 360, 0, 0, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 1716, 0, 0, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 0, 0, 0,
	0, 0, 433, 434, 0, 0, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 0, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 509, 0, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	0, 0, 522, 0, 0, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	0, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 0, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1432, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 0, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	0, 630, 631, 632, 633, 0, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 0, 0, 0,
	0, 0, 660, 0, 651, 652, 653, 654, 0, 655,
	0, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 0, 0, 0, 0,
	676, 675, 677, 678, 679, 0, 680, 681, 1639, 0,
	1429, 0, 682, 683, 0, 684, 685, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 297, 299,
	298, 300, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 0, 307,
	308, 0, 309, 310, 311, 312, 313, 314, 315, 0,
	0, 0, 316, 0, 317, 0, 0, 0, 318, 319,
	320, 321, 322, 323, 0, 0, 0, 324, 0, 0,
	0, 0, 325, 326, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 332, 333, 334, 0, 0, 336, 337,
	338, 335, 339, 0, 340, 0, 341, 342, 343, 344,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 352,
	0, 0, 0, 0, 0, 0, 1431, 353, 354, 355,
	356, 357, 0, 358, 360, 0, 0, 0, 363, 359,
	361, 0, 364, 362, 365, 0, 366, 367, 368, 0,
	0, 369, 370, 371, 0, 372, 373, 374, 0, 375,
	376, 377, 0, 378, 379, 0, 380, 381, 382, 384,
	386, 383, 385, 387, 388, 389, 390, 0, 0, 391,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 394,
	0, 0, 0, 0, 395, 0, 396, 397, 398, 0,
	399, 400, 0, 0, 401, 402, 403, 0, 0, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 0, 415, 416, 417, 418, 419,
	420, 421, 1638, 0, 0, 510, 0, 422, 423, 0,
	424, 425, 426, 427, 428, 0, 0, 0, 0, 429,
	430, 431, 0, 0, 511, 432, 0, 0, 0, 0,
	0, 433, 434, 0, 0, 0, 435, 436, 437, 0,
	438, 0, 0, 0, 439, 440, 441, 442, 443, 444,
	0, 445, 447, 446, 0, 448, 0, 0, 449, 450,
	0, 0, 451, 452, 453, 454, 455, 456, 459, 0,
	0, 457, 458, 460, 461, 0, 462, 463, 465, 468,
	464, 466, 467, 469, 482, 483, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 485, 0,
	484, 0, 486, 487, 488, 489, 490, 497, 499, 500,
	495, 496, 498, 501, 502, 504, 492, 493, 494, 0,
	503, 491, 0, 0, 0, 505, 506, 507, 508, 0,
	0, 509, 0, 512, 513, 0, 0, 514, 0, 515,
	0, 0, 517, 518, 519, 0, 0, 520, 521, 0,
	0, 522, 0, 0, 523, 524, 516, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 0, 534, 535, 0,
	536, 537, 538, 0, 539, 540, 541, 0, 542, 0,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 559, 558,
	560, 0, 561, 0, 562, 563, 564, 0, 0, 0,
	0, 0, 565, 566, 568, 0, 569, 570, 571, 572,
	567, 573, 574, 575, 576, 577, 578, 0, 579, 580,
	581, 0, 582, 583, 584, 585, 586, 0, 587, 0,
	588, 589, 596, 597, 598, 590, 591, 592, 599, 600,
	601, 602, 603, 0, 605, 606, 604, 607, 608, 609,
	1432, 610, 611, 593, 594, 612, 613, 0, 614, 615,
	616, 617, 618, 619, 620, 0, 0, 621, 0, 622,
	623, 624, 625, 626, 628, 595, 629, 634, 635, 0,
	630, 631, 632, 633, 0, 637, 638, 639, 0, 640,
	641, 0, 636, 627, 0, 642, 643, 644, 645, 646,
	647, 0, 648, 649, 0, 650, 0, 0, 0, 0,
	0, 660, 0, 651, 652, 653, 654, 0, 655, 0,
	0, 656, 657, 658, 659, 0, 661, 662, 0, 0,
	663, 664, 666, 668, 669, 665, 667, 670, 0, 671,
	0, 0, 672, 673, 674, 0, 0, 0, 0, 676,
	675, 677, 678, 679, 0, 680, 681, 1427, 0, 1429,
	0, 682, 683, 0, 684, 685, 686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 297, 299, 298,
	300, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 306, 0, 307, 308,
	0, 309, 310, 311, 312, 313, 314, 315, 0, 0,
	0, 316, 0, 317, 0, 0, 0, 318, 319, 320,
	321, 322, 323, 0, 0, 0, 324, 0, 0, 0,
	0, 325, 326, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 332, 333, 334, 0, 0, 336, 337, 338,
	335, 339, 0, 340, 0, 341, 342, 343, 344, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 352, 0,
	0, 0, 0, 0, 0, 1431, 353, 354, 355, 356,
	357, 0, 358, 360, 0, 0, 0, 363, 359, 361,
	0, 364, 362, 365, 0, 366, 367, 368, 0, 0,
	369, 370, 371, 0, 372, 373, 374, 0, 375, 376,
	377, 0, 378, 379, 0, 380, 381, 382, 384, 386,
	383, 385, 387, 388, 389, 390, 0, 0, 391, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 394, 0,
	0, 0, 0, 395, 0, 396, 397, 398, 0, 399,
	400, 0, 0, 401, 402, 403, 0, 0, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 0, 415, 416, 417, 418, 419, 420,
	421, 1426, 0, 0, 510, 0, 422, 423, 0, 424,
	425, 426, 427, 428, 0, 0, 0, 0, 429, 430,
	431, 0, 0, 511, 432, 0, 0, 0, 0, 0,
	433, 434, 0, 0, 0, 435, 436, 437, 0, 438,
	0, 0, 0, 439, 440, 441, 442, 443, 444, 0,
	445, 447, 446, 0, 448, 0, 0, 449, 450, 0,
	0, 451, 452, 453, 454, 455, 456, 459, 0, 0,
	457, 458, 460, 461, 0, 462, 463, 465, 468, 464,
	466, 467, 469, 482, 483, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 485, 0, 484,
	0, 486, 487, 488, 489, 490, 497, 499, 500, 495,
	496, 498, 501, 502, 504, 492, 493, 494, 0, 503,
	491, 0, 0, 0, 505, 506, 507, 508, 0, 0,
	509, 0, 512, 513, 0, 0, 514, 0, 515, 0,
	0, 517, 518, 519, 0, 0, 520, 521, 0, 0,
	522, 0, 0, 523, 524, 516, 525, 526, 527, 528,
	529, 530, 531, 532, 533, 0, 534, 535, 0, 536,
	537, 538, 0, 539, 540, 541, 0, 542, 0, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 559, 558, 560,
	0, 561, 0, 562, 563, 564, 0, 0, 0, 0,
	0, 565, 566, 568, 0, 569, 570, 571, 572, 567,
	573, 574, 575, 576, 577, 578, 0, 579, 580, 581,
	0, 582, 583, 584, 585, 586, 0, 587, 0, 588,
	589, 596, 597, 598, 590, 591, 592, 599, 600, 601,
	602, 603, 0, 605, 606, 604, 607, 608, 609, 1432,
	610, 611, 593, 594, 612, 613, 0, 614, 615, 616,
	617, 618, 619, 620, 0, 0, 621, 0, 622, 623,
	624, 625, 626, 628, 595, 629, 634, 635, 0, 630,
	631, 632, 633, 0, 637, 638, 639, 0, 640, 641,
	0, 636, 627, 0, 642, 643, 644, 645, 646, 647,
	0, 648, 649, 0, 650, 0, 0, 0, 0, 0,
	660, 0, 651, 652, 653, 654, 0, 655, 0, 0,
	656, 657, 658, 659, 0, 661, 662, 0, 0, 663,
	664, 666, 668, 669, 665, 667, 670, 0, 671, 0,
	0, 672, 673, 674, 0, 0, 0, 0, 676, 675,
	677, 678, 679, 0, 680, 681, 2234, 0, 1429, 0,
	682, 683, 0, 684, 685, 686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 297, 299, 298, 300,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 0, 307, 308, 0,
	309, 310, 311, 312, 313, 314, 315, 0, 0, 0,
	316, 0, 317, 0, 0, 0, 318, 319, 320, 321,
	322, 323, 0, 0, 0, 324, 0, 0, 0, 0,
	325, 326, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 332, 333, 334, 0, 0, 336, 337, 338, 335,
	339, 0, 340, 0, 341, 342, 343, 344, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 352, 0, 0,
	0, 0, 0, 0, 1431, 353, 354, 355, 356, 357,
	0, 358, 360, 0, 0, 0, 363, 359, 361, 0,
	364, 362, 365, 0, 366, 367, 368, 0, 0, 369,
	370, 371, 0, 372, 373, 374, 0, 375, 376, 377,
	0, 378, 379, 0, 380, 381, 382, 384, 386, 383,
	385, 387, 388, 389, 390, 0, 0, 391, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 394, 0, 0,
	0, 0, 395, 0, 396, 397, 398, 0, 399, 400,
	0, 0, 401, 402, 403, 0, 0, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 0, 415, 416, 417, 418, 419, 420, 421,
	0, 0, 0, 510, 0, 422, 423, 0, 424, 425,
	426, 427, 428, 0, 0, 0, 0, 429, 430, 431,
	0, 0, 511, 432, 0, 0, 0, 0, 0, 433,
	434, 0, 0, 0, 435, 436, 437, 0, 438, 0,
	0, 0, 439, 440, 441, 442, 443, 444, 0, 445,
	447, 446, 0, 448, 0, 0, 449, 450, 0, 0,
	451, 452, 453, 454, 455, 456, 459, 0, 0, 457,
	458, 460, 461, 0, 462, 463, 465, 468, 464, 466,
	467, 469, 482, 483, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 485, 0, 484, 0,
	486, 487, 488, 489, 490, 497, 499, 500, 495, 496,
	498, 501, 502, 504, 492, 493, 494, 0, 503, 491,
	0, 0, 0, 505, 506, 507, 508, 0, 0, 509,
	0, 512, 513, 0, 0, 514, 0, 515, 0, 0,
	517, 518, 519, 0, 0, 520, 521, 0, 0, 522,
	0, 0, 523, 524, 516, 525, 526, 527, 528, 529,
	530, 531, 532, 533, 0, 534, 535, 0, 536, 537,
	538, 0, 539, 540, 541, 0, 542, 0, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 559, 558, 560, 0,
	561, 0, 562, 563, 564, 0, 0, 0, 0, 0,
	565, 566, 568, 0, 569, 570, 571, 572, 567, 573,
	574, 575, 576, 577, 578, 0, 579, 580, 581, 0,
	582, 583, 584, 585, 586, 0, 587, 0, 588, 589,
	596, 597, 598, 590, 591, 592, 599, 600, 601, 602,
	603, 0, 605, 606, 604, 607, 608, 609, 1432, 610,
	611, 593, 594, 612, 613, 0, 614, 615, 616, 617,
	618, 619, 620, 0, 0, 621, 0, 622, 623, 624,
	625, 626, 628, 595, 629, 634, 635, 0, 630, 631,
	632, 633, 0, 637, 638, 639, 0, 640, 641, 0,
	636, 627, 0, 642, 643, 644, 645, 646, 647, 0,
	648, 649, 0, 650, 0, 0, 0, 0, 0, 660,
	0, 651, 652, 653, 654, 0, 655, 0, 0, 656,
	657, 658, 659, 0, 661, 662, 0, 0, 663, 664,
	666, 668, 669, 665, 667, 670, 0, 671, 0, 0,
	672, 673, 674, 0, 0, 0, 0, 676, 675, 677,
	678, 679, 0, 680, 681, 2201, 0, 1429, 0, 682,
	683, 0, 684, 685, 686, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 296, 297, 299, 298, 300, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 0, 307, 308, 0, 309,
	310, 311, 312, 313, 314, 315, 0, 0, 0, 316,
	0, 317, 0, 0, 0, 318, 319, 320, 321, 322,
	323, 0, 0, 0, 324, 0, 0, 0, 0, 325,
	326, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	332, 333, 334, 0, 0, 336, 337, 338, 335, 339,
	0, 340, 0, 341, 342, 343, 344, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 352, 0, 0, 0,
	0, 0, 0, 1431, 353, 354, 355, 356, 357, 0,
	358, 360, 0, 0, 0, 363, 359, 361, 0, 364,
	362, 365, 0, 366, 367, 368, 0, 0, 369, 370,
	371, 0, 372, 373, 374, 0, 375, 376, 377, 0,
	378, 379, 0, 380, 381, 382, 384, 386, 383, 385,
	387, 388, 389, 390, 0, 0, 391, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 394, 0, 0, 0,
	0, 395, 0, 396, 397, 398, 0, 399, 400, 0,
	0, 401, 402, 403, 0, 0, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 0, 415, 416, 417, 418, 419, 420, 421, 0,
	0, 0, 510, 0, 422, 423, 0, 424, 425, 426,
	427, 428, 0, 0, 0, 0, 429, 430, 431, 0,
	0, 511, 432, 0, 0, 0, 0, 0, 433, 434,
	0, 0, 0, 435, 436, 437, 0, 438, 0, 0,
	0, 439, 440, 441, 442, 443, 444, 0, 445, 447,
	446, 0, 448, 0, 0, 449, 450, 0, 0, 451,
	452, 453, 454, 455, 456, 459, 0, 0, 457, 458,
	460, 461, 0, 462, 463, 465, 468, 464, 466, 467,
	469, 482, 483, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 485, 0, 484, 0, 486,
	487, 488, 489, 490, 497, 499, 500, 495, 496, 498,
	501, 502, 504, 492, 493, 494, 0, 503, 491, 0,
	0, 0, 505, 506, 507, 508, 0, 0, 509, 0,
	512, 513, 0, 0, 514, 0, 515, 0, 0, 517,
	518, 519, 0, 0, 520, 521, 0, 0, 522, 0,
	0, 523, 524, 516, 525, 526, 527, 528, 529, 530,
	531, 532, 533, 0, 534, 535, 0, 536, 537, 538,
	0, 539, 540, 541, 0, 542, 0, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 559, 558, 560, 0, 561,
	0, 562, 563, 564, 0, 0, 0, 0, 0, 565,
	566, 568, 0, 569, 570, 571, 572, 567, 573, 574,
	575, 576, 577, 578, 0, 579, 580, 581, 0, 582,
	583, 584, 585, 586, 0, 587, 0, 588, 589, 596,
	597, 598, 590, 591, 592, 599, 600, 601, 602, 603,
	0, 605, 606, 604, 607, 608, 609, 1432, 610, 611,
	593, 594, 612, 613, 0, 614, 615, 616, 617, 618,
	619, 620, 0, 0, 621, 0, 622, 623, 624, 625,
	626, 628, 595, 629, 634, 635, 0, 630, 631, 632,
	633, 0, 637, 638, 639, 0, 640, 641, 0, 636,
	627, 0, 642, 643, 644, 645, 646, 647, 0, 648,
	649, 0, 650, 0, 0, 0, 0, 0, 660, 0,
	651, 652, 653, 654, 0, 655, 0, 0, 656, 657,
	658, 659, 0, 661, 662, 0, 0, 663, 664, 666,
	668, 669, 665, 667, 670, 0, 671, 0, 0, 672,
	673, 674, 0, 0, 0, 0, 676, 675, 677, 678,
	679, 1429, 680, 681, 0, 0, 0, 0, 682, 683,
	0, 684, 685, 686, 0, 0, 0, 0, 296, 297,
	299, 298, 300, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 0,
	307, 308, 0, 309, 310, 311, 312, 313, 314, 315,
	0, 0, 0, 316, 0, 317, 0, 0, 0, 318,
	319, 320, 321, 322, 323, 0, 0, 0, 324, 0,
	0, 0, 0, 325, 326, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 332, 333, 334, 0, 0, 336,
	337, 338, 335, 339, 0, 340, 0, 341, 342, 343,
	344, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	352, 0, 0, 0, 0, 0, 0, 1431, 353, 354,
	355, 356, 357, 0, 358, 360, 0, 0, 0, 363,
	359, 361, 0, 364, 362, 365, 0, 366, 367, 368,
	0, 0, 369, 370, 371, 0, 372, 373, 374, 0,
	375, 376, 377, 0, 378, 379, 0, 380, 381, 382,
	384, 386, 383, 385, 387, 388, 389, 390, 0, 0,
	391, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 0, 0, 0, 395, 0, 396, 397, 398,
	0, 399, 400, 0, 0, 401, 402, 403, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 0, 415, 416, 417, 418,
	419, 420, 421, 0, 0, 0, 510, 0, 422, 423,
	0, 424, 425, 426, 427, 428, 0, 0, 0, 0,
	429, 430, 431, 0, 0, 511, 432, 0, 0, 0,
	0, 0, 433, 434, 0, 0, 0, 435, 436, 437,
	0, 438, 0, 0, 0, 439, 440, 441, 442, 443,
	444, 0, 445, 447, 446, 0, 448, 0, 0, 449,
	450, 0, 0, 451, 452, 453, 454, 455, 456, 459,
	0, 0, 457, 458, 460, 461, 0, 462, 463, 465,
	468, 464, 466, 467, 469, 482, 483, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 485,
	0, 484, 0, 486, 487, 488, 489, 490, 497, 499,
	500, 495, 496, 498, 501, 502, 504, 492, 493, 494,
	0, 503, 491, 0, 0, 0, 505, 506, 507, 508,
	0, 0, 509, 0, 512, 513, 0, 0, 514, 0,
	515, 0, 0, 517, 518, 519, 0, 0, 520, 521,
	0, 0, 522, 0, 0, 523, 524, 516, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 0, 534, 535,
	0, 536, 537, 538, 0, 539, 540, 541, 0, 542,
	0, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 559,
	558, 560, 0, 561, 0, 562, 563, 564, 0, 0,
	0, 0, 0, 565, 566, 568, 0, 569, 570, 571,
	572, 567, 573, 574, 575, 576, 577, 578, 0, 579,
	580, 581, 0, 582, 583, 584, 585, 586, 0, 587,
	0, 588, 589, 596, 597, 598, 590, 591, 592, 599,
	600, 601, 602, 603, 0, 605, 606, 604, 607, 608,
	609, 1432, 610, 611, 593, 594, 612, 613, 0, 614,
	615, 616, 617, 618, 619, 620, 0, 0, 621, 0,
	622, 623, 624, 625, 626, 628, 595, 629, 634, 635,
	0, 630, 631, 632, 633, 0, 637, 638, 639, 0,
	640, 641, 0, 636, 627, 0, 642, 643, 644, 645,
	646, 647, 0, 648, 649, 0, 650, 0, 0, 0,
	0, 0, 660, 0, 651, 652, 653, 654, 0, 655,
	0, 0, 656, 657, 658, 659, 0, 661, 662, 0,
	0, 663, 664, 666, 668, 669, 665, 667, 670, 0,
	671, 0, 0, 672, 673, 674, 0, 0, 0, 0,
	676, 675, 677, 678, 679, 0, 680, 681, 0, 0,
	0, 0, 682, 683, 0, 684, 685, 686, 1935, 1936,
	0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1966, 0, 0, 0, 0, 0, 1935, 1936,
	1938, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1966, 0, 0, 0, 0, 1991, 0, 0,
	1938, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	1985, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 1965, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1982, 0, 1983, 1976, 0, 0,
	1986, 0, 0, 1952, 1953, 0, 0, 1965, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 1982, 0, 1983, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 1958, 0, 0, 0,
	0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981,
	0, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 1966, 1958, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 1973, 0, 0, 1937,
	0, 0, 0, 0, 0, 1984, 0, 1988, 0, 0,
	1957, 0, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1959, 0, 0, 0, 0, 0, 1964, 1960, 1961, 1962,
	1963, 0, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1977, 0,
	1959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1935,
	1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 1977, 0,
	1976, 0, 1990, 1986, 0, 0, 0, 0, 0, 0,
	1965, 1967, 1972, 1966, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 1982, 0, 1983,
	0, 1985, 1990, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 1974, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1958,
	0, 0, 0, 0, 0, 0, 0, 1954, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 1975, 0,
	4872, 0, 0, 0, 0, 0, 0, 0, 1984, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0, 1973,
	4677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 1960, 1961, 1962, 1963, 0,
	0, 0, 0, 0, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 1936, 0,
	1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 1976, 1964,
	0, 1986, 0, 0, 0, 0, 0, 0, 1965, 1967,
	1972, 1966, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 1959, 0, 1982, 0, 1983, 0, 1985,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 1977, 1974, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1958, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 1960, 1961, 1962, 1963, 0, 0, 0,
	0, 1975, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0,
	0, 0, 0, 4505, 0, 1935, 1936, 0, 1968, 1969,
	1970, 1979, 1980, 1981, 0, 0, 1976, 1964, 0, 1986,
	0, 0, 0, 0, 0, 0, 1965, 1967, 1972, 1966,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 0,
	0, 1959, 0, 1982, 0, 1983, 0, 1985, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 1977,
	1974, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1958, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 1960, 1961, 1962, 1963, 0, 0, 0, 0, 1975,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0,
	0, 4410, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979,
	1980, 1981, 0, 0, 1976, 1964, 0, 1986, 0, 0,
	0, 0, 0, 0, 1965, 1967, 1972, 1966, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 1959,
	0, 1982, 0, 1983, 0, 1985, 0, 0, 0, 0,
	1952, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 1977, 1974, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1958, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 1960,
	1961, 1962, 1963, 0, 0, 0, 0, 1975, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 1950,
	1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 0, 0, 0, 0, 0, 4409,
	0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981,
	0, 0, 1976, 1964, 0, 1986, 0, 0, 0, 0,
	0, 0, 1965, 1967, 1972, 1966, 0, 0, 0, 0,
	0, 0, 0, 1938, 0, 0, 0, 1959, 0, 1982,
	0, 1983, 0, 1985, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 0, 1977, 1974, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 0, 0, 0, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 1960, 1961, 1962,
	1963, 0, 0, 0, 0, 1975, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 1950, 1956, 1978,
	1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942,
	1944, 1945, 0, 0, 0, 0, 0, 4408, 0, 1935,
	1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0,
	1976, 1964, 0, 1986, 0, 0, 0, 0, 0, 0,
	1965, 1967, 1972, 1966, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 1959, 0, 1982, 0, 1983,
	0, 1985, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 1977, 1974, 0, 0, 1937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1958,
	0, 0, 0, 0, 0, 0, 0, 1954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 1960, 1961, 1962, 1963, 0,
	0, 0, 0, 1975, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 0, 0, 4024, 0, 1935, 1936, 0,
	1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 1976, 1964,
	0, 1986, 0, 0, 0, 0, 0, 0, 1965, 1967,
	1972, 1966, 0, 0, 0, 0, 0, 0, 0, 1938,
	0, 0, 0, 1959, 0, 1982, 0, 1983, 0, 1985,
	0, 0, 0, 0, 1952, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 1977, 1974, 0, 0, 1937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1958, 0, 0,
	0, 0, 0, 0, 0, 1954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1984, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 1960, 1961, 1962, 1963, 0, 0, 0,
	0, 1975, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0,
	0, 0, 0, 3489, 0, 1935, 1936, 0, 1968, 1969,
	1970, 1979, 1980, 1981, 0, 0, 1976, 1964, 0, 1986,
	0, 0, 0, 0, 0, 0, 1965, 1967, 1972, 1966,
	0, 0, 0, 0, 0, 0, 0, 1938, 0, 0,
	0, 1959, 0, 1982, 0, 1983, 0, 1985, 0, 0,
	0, 0, 1952, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 1977,
	1974, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 1958, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1984, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 1960, 1961, 1962, 1963, 0, 0, 0, 0, 1975,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947,
	1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0,
	0, 3488, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979,
	1980, 1981, 0, 0, 1976, 1964, 0, 1986, 0, 0,
	0, 0, 0, 0, 1965, 1967, 1972, 1966, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 0, 0, 1959,
	0, 1982, 0, 1983, 0, 1985, 0, 0, 0, 0,
	1952, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 1977, 1974, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 1958, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 1960,
	1961, 1962, 1963, 0, 0, 0, 0, 1975, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 1950,
	1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940,
	1941, 1942, 1944, 1945, 0, 0, 0, 0, 0, 3487,
	0, 0, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979,
	1980, 1981, 1976, 1964, 0, 1986, 0, 2382, 0, 0,
	0, 0, 1965, 1967, 0, 0, 1972, 1966, 0, 0,
	0, 0, 0, 0, 0, 1938, 0, 1959, 0, 1982,
	0, 1983, 0, 0, 0, 1985, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 1977, 1974, 0, 0, 0,
	0, 1937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 1954, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 2383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 1960,
	1961, 1962, 1963, 0, 0, 1975, 0, 0, 0, 1943,
	0, 0, 0, 0, 0, 0, 1949, 1950, 1956, 1978,
	1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942,
	1944, 1945, 0, 0, 0, 0, 0, 3486, 0, 0,
	0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981,
	0, 1964, 1976, 0, 0, 1986, 0, 0, 0, 0,
	0, 0, 1965, 1967, 1972, 1966, 0, 0, 0, 0,
	0, 0, 0, 1938, 0, 1959, 0, 0, 0, 1982,
	0, 1983, 0, 1985, 0, 0, 0, 0, 1952, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 1977, 0, 0, 1974, 0, 0, 1937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 0, 0, 2313, 0, 0, 0, 0, 1954,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 2311, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 1960, 1961, 1962,
	1963, 0, 0, 1975, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 3451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1976, 1964, 0, 1986, 0, 0, 0, 0, 0, 0,
	1965, 1967, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 0, 1982, 0, 1983,
	0, 0, 0, 0, 0, 0, 1952, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2384, 0, 0,
	0, 0, 0, 1977, 1974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1958,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 1972, 1966, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1985, 0, 0, 0, 0, 0, 1984, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 2385, 0, 0, 0, 0, 0, 0, 1937, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	1988, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 1975, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951,
	0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2312, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1959, 0, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 0, 0, 1943, 5172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1977, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 1976,
	0, 0, 1986, 0, 0, 1990, 0, 0, 0, 1965,
	1967, 1972, 1966, 0, 0, 0, 2310, 0, 0, 0,
	1938, 0, 0, 0, 0, 0, 1982, 0, 1983, 0,
	1985, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 0, 1974, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948,
	1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	0, 0, 0, 0, 1943, 0, 3551, 0, 0, 0,
	0, 5171, 0, 3550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 1976, 1964, 0,
	1986, 0, 0, 0, 0, 0, 0, 1965, 1967, 1972,
	1966, 0, 0, 0, 0, 3422, 0, 0, 1938, 0,
	0, 0, 1959, 0, 1982, 0, 1983, 0, 1985, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	1977, 1974, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 1958, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3423, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 0, 0, 0, 0,
	1975, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 2928, 0, 0,
	0, 0, 0, 0, 1935, 1936, 0, 1968, 1969, 1970,
	1979, 1980, 1981, 0, 0, 1976, 1964, 0, 1986, 0,
	0, 0, 0, 0, 0, 1965, 1967, 1972, 1966, 0,
	0, 0, 2927, 0, 0, 0, 1938, 0, 0, 0,
	1959, 0, 1982, 0, 1983, 0, 1985, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 1977, 1974,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1958, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	1960, 1961, 1962, 1963, 0, 0, 0, 0, 1975, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980,
	1981, 0, 0, 1976, 1964, 0, 1986, 0, 0, 0,
	0, 0, 0, 1965, 1967, 1972, 1966, 0, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 1959, 0,
	1982, 0, 1983, 0, 1985, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 1977, 1974, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1958, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 1960, 1961,
	1962, 1963, 0, 0, 0, 0, 1975, 0, 1943, 0,
	4778, 0, 0, 0, 0, 0, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 1976, 1964, 0, 1986, 0, 0, 0, 0, 0,
	0, 1965, 1967, 1972, 1966, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 1959, 0, 1982, 0,
	1983, 0, 1985, 0, 0, 0, 0, 1952, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 1977, 1974, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	1958, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 1975, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955,
	1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944,
	1945, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 0, 1976,
	1964, 0, 1986, 0, 0, 0, 0, 0, 0, 1965,
	1967, 1972, 1966, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 0, 0, 1959, 0, 1982, 0, 1983, 0,
	1985, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 1977, 1974, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	0, 0, 1975, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0,
	1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0,
	0, 0, 0, 0, 0, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 1976, 1964, 0,
	1986, 0, 0, 0, 0, 0, 0, 1965, 1967, 1972,
	1966, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 1959, 0, 1982, 0, 1983, 0, 1985, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	1977, 1974, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 1958, 0, 0, 0,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1984, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 0, 0, 0, 0,
	1975, 0, 1943, 0, 0, 0, 0, 0, 0, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 0, 1968, 1969, 1970,
	1979, 1980, 1981, 0, 0, 1976, 1964, 0, 1986, 0,
	0, 0, 0, 0, 0, 1965, 1967, 1972, 1966, 0,
	0, 0, 0, 0, 0, 0, 1938, 0, 0, 0,
	1959, 0, 1982, 0, 1983, 0, 1985, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 1977, 1974,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1958, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	1960, 1961, 1962, 1963, 0, 0, 0, 0, 1975, 0,
	1943, 0, 4227, 0, 0, 0, 0, 0, 0, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980,
	1981, 0, 0, 1976, 1964, 0, 1986, 0, 0, 0,
	0, 0, 0, 1965, 1967, 1972, 1966, 0, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 1959, 0,
	1982, 0, 1983, 0, 1985, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 1977, 1974, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1958, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 1960, 1961,
	1962, 1963, 0, 0, 0, 0, 1975, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 1964, 0, 1986, 0, 0, 0, 0, 0,
	0, 1965, 1967, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1959, 0, 1982, 0,
	1983, 0, 0, 0, 0, 0, 0, 1952, 1953, 0,
	0, 0, 0, 0, 0, 1935, 1936, 0, 1968, 1969,
	1970, 1979, 1980, 1981, 1977, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 1966,
	1958, 0, 0, 0, 0, 1935, 1936, 1938, 1968, 1969,
	1970, 1979, 1980, 1981, 0, 0, 0, 1985, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1972, 1966,
	0, 0, 0, 3552, 1991, 0, 0, 1938, 0, 0,
	0, 0, 0, 1937, 0, 0, 0, 1985, 0, 1984,
	0, 0, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1991, 0, 0, 0, 0, 0,
	1973, 0, 0, 1937, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 1957, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 1975, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955,
	1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 1960, 1961, 1962, 1963, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	3557, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 1960, 1961, 1962, 1963, 0, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1977, 0, 1976, 0, 0, 1986, 0, 0,
	0, 0, 0, 0, 1965, 1967, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1982, 0, 1983, 1976, 0, 1990, 1986, 0, 0,
	1952, 1953, 0, 0, 1965, 1967, 0, 0, 0, 4005,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 1982, 0, 1983, 0, 0, 0, 0, 0, 0,
	1952, 1953, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 1949, 1950, 1956, 1978, 1955, 1951, 0,
	1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 1984, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1959, 0, 0,
	0, 0, 0, 1964, 0, 0, 1935, 1936, 0, 1968,
	1969, 1970, 1979, 1980, 1981, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1977, 0, 1959, 0, 1972,
	1966, 0, 0, 0, 0, 0, 0, 0, 1938, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 0,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 1937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 1990,
	0, 0, 0, 0, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1949, 1950, 1956, 1978,
	1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942,
	1944, 1945, 0, 0, 0, 1975, 0, 0, 0, 0,
	0, 0, 1960, 1961, 1962, 1963, 1949, 1950, 1956, 1978,
	1955, 1951, 1943, 1948, 1946, 1947, 1939, 1940, 1941, 1942,
	1944, 1945, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1935, 1936, 0, 1968, 1969, 1970,
	1979, 1980, 1981, 0, 0, 1976, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 1965, 1967, 1972, 1966, 0,
	0, 0, 3490, 0, 0, 0, 1938, 0, 0, 0,
	0, 0, 1982, 0, 1983, 0, 1985, 0, 0, 0,
	0, 1952, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 1974,
	0, 0, 1937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1957, 1958, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	1960, 1961, 1962, 1963, 0, 3517, 0, 0, 0, 0,
	1943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 0, 1968, 1969, 1970, 1979, 1980,
	1981, 0, 0, 1976, 1964, 0, 1986, 0, 0, 0,
	0, 0, 0, 1965, 1967, 1972, 1966, 0, 0, 0,
	0, 0, 0, 0, 1938, 0, 0, 0, 1959, 0,
	1982, 0, 1983, 0, 1985, 0, 0, 0, 0, 1952,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 1977, 1974, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1958, 0, 0, 0, 0, 0, 0, 0,
	1954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 1960, 1961,
	1962, 1963, 0, 0, 0, 0, 1975, 0, 1943, 0,
	0, 0, 0, 0, 0, 0, 0, 1949, 1950, 1956,
	1978, 1955, 1951, 0, 1948, 1946, 1947, 1939, 1940, 1941,
	1942, 1944, 1945, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 0,
	0, 1976, 1964, 0, 1986, 0, 0, 0, 0, 0,
	0, 1965, 1967, 1972, 1966, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 0, 0, 1959, 0, 1982, 0,
	1983, 0, 1985, 0, 0, 0, 0, 1952, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 1977, 1974, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	1958, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 1960, 1961, 1962, 1963,
	0, 0, 0, 0, 1975, 0, 1943, 0, 0, 0,
	0, 0, 0, 0, 0, 1949, 1950, 1956, 1978, 1955,
	1951, 0, 1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944,
	1945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1935, 1936, 0, 1968, 1969, 1970, 1979, 1980, 1981, 1976,
	1964, 0, 1986, 0, 0, 0, 0, 0, 0, 1965,
	1967, 0, 0, 1972, 1966, 0, 0, 0, 0, 0,
	0, 0, 1938, 0, 1959, 0, 1982, 0, 1983, 0,
	0, 0, 1985, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 1977, 1974, 0, 0, 0, 0, 1937, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1958, 1957,
	0, 0, 0, 0, 0, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 2494, 1960, 1961, 1962, 1963,
	0, 0, 1975, 0, 0, 0, 1943, 0, 0, 0,
	0, 0, 0, 1949, 1950, 1956, 1978, 1955, 1951, 0,
	1948, 1946, 1947, 1939, 1940, 1941, 1942, 1944, 1945, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1935, 1936,
	0, 1968, 1969, 1970, 1979, 1980, 1981, 0, 1964, 1976,
	0, 0, 1986, 0, 0, 0, 0, 0, 0, 1965,
	1967, 0, 1966, 0, 0, 0, 0, 0, 0, 0,
	1938, 0, 1959, 0, 0, 0, 1982, 0, 1983, 0,
	1985, 0, 0, 0, 0, 1952, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	1977, 0, 0, 1974, 0, 0, 1937, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1957, 1958, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 1960, 1961, 1962, 1963, 0, 0,
	1975, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 0, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1976, 1964, 0,
	1986, 0, 0, 0, 0, 0, 0, 1965, 1967, 0,
	0, 0, 0, 0, 0, 0, 1043, 0, 1095, 0,
	0, 0, 1959, 0, 1982, 0, 1983, 0, 0, 0,
	0, 0, 0, 1952, 1953, 0, 0, 0, 0, 0,
	0, 0, 0, 1051, 0, 0, 0, 0, 0, 0,
	1977, 1974, 0, 0, 0, 0, 0, 0, 0, 0,
	1066, 0, 1049, 1048, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 1068, 0, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 1106, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 1063, 1064, 0, 0, 1984, 0, 0, 0, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 1055,
	0, 0, 0, 0, 0, 1056, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 0, 0, 0, 0, 0, 0, 0, 1057, 0,
	0, 1949, 1950, 1956, 1978, 1955, 1951, 1093, 1948, 1946,
	1947, 1939, 1940, 1941, 1942, 1944, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	1959, 0, 0, 0, 0, 0, 1047, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1060, 1061, 1977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1069, 1067, 0, 0, 0,
	0, 0, 0, 1062, 0, 0, 0, 1079, 0, 0,
	1101, 1100, 1990, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 1092, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1975, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1949,
	1950, 1956, 1978, 1955, 1951, 0, 1948, 1946, 1947, 1939,
	1940, 1941, 1942, 1944, 1945, 0, 0, 0, 1054, 0,
	0, 1105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1052, 0, 0, 0, 0,
	1087, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1090, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1098, 1085, 0, 0, 0, 0, 0, 0, 0, 1104,
	1080, 0, 0, 1072, 1070, 0, 0, 1075, 0, 0,
	0, 0, 0, 1076, 0, 0, 1045, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1046, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1091, 0, 1089, 0, 1077, 0, 0,
	0, 0, 0, 1074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 1081, 0, 1082, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086,
}

var sqlPact = [...]int{
	12209, -1000, -1000, -1000, -1000, 193, -1000, -1000, 192, 191,
	189, 187, 184, 182, 181, 180, 178, 177, 176, -1000,
	-1000, 170, 166, 165, 164, -1000, -1000, 163, -1000, -1000,
	162, -1000, 157, 156, 154, -1000, -1000, 149, -1000, 146,
	-1000, -1000, -1000, -1000, 143, 142, 140, 99710, 99121, 100297,
	2471, 126766, 109116, 2321, 88531, 126177, 87942, 125588, 2329, 11487,
	124999, 2943, 136, -1000, 124410, 134, 133, 125, -1000, 108527,
	123821, 106173, 105584, 2132, -1000, 124, 123, -1000, 6721, 76702,
	122, 121, 119, 118, 2617, 117, -1000, 116, 115, -1000,
	114, -1000, 14197, 1630, -1000, 113, 112, -1000, 614, 104995,
	110, 109, 107, 2889, 106, 105, 73753, 104, 103, 101,
	2623, 3031, -1000, -1000, 2197, -1000, -1000, 100, 99, 98,
	97, 96, 95, 93, 92, 89, 87, 86, 84, 83,
	-1000, 82, 81, 77, 76, 75, -1000, 74, 73, 71,
	-1000, 69, -1000, 67, 62, 59, 58, 57, 54, 47,
	46, 42, 41, 40, 39, 37, 36, 35, 147034, -1000,
	-1000, 34, -1000, 2108, 1819, 1807, 1791, 1785, 1783, 1041,
	33, 30, 28, 26, 25, 24, 22, 21, 20, 18,
	17, 15, 10, 7, 3, 2, 1, -1, -2, -3,
	158, -4, -5, -7, -10, -11, -12, -14, 2915, 3760,
	-1000, 1896, 1060, 33505, 3187, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 135571, 127353, -17, -93, -18,
	-1000, 3566, 1012, 61323, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 274, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 525, 2634, 757, -1000, -1000, -1000, 123232, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2466, -44, -1000, 2198,
	-1000, -1000, -1000, -1000, -1000, 750, -1000, 2462, 2419, 354,
	2418, -1000, -1000, -1000, 3628, 2628, 4078, 4077, 4075, 4073,
	4072, 134984, 1959, 4069, 2697, 4067, 4066, 4065, 4064, 4063,
	4062, 4061, -1000, 98532, 1115, 97943, 97354, 3632, 122645, 96765,
	122056, 137925, 51691, 1032, 3627, -1000, -1000, -1000, -1000, -1000,
	-1000, 127353, -1000, 1112, -1000, -1000, 4059, 2200, 748, 107938,
	-1000, -1000, 121467, 1776, -1000, -1000, -1000, 973, 1238, 35917,
	35917, 35917, 271, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3629, -1000, -1000, -1000, -1000, 127353, 2885, 2885, 1507, 1498,
	1498, 2885, 2885, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4058, 4057, 4056, 4055, 4051, -1000, -1000, -1000, 87353,
	26078, 86764, 86175, 120878, 51088, 96176, 95587, 4049, 4047, 4046,
	50485, 82052, 58924, 3759, 120289, 137336, 3757, 3755, 1111, 2180,
	1540, -1000, -1000, -1000, -1000, -1000, -1000, -40, 78466, 3817,
	127353, -1000, 267, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	49882, 727, 49279, 863, 48676, 686, 119700, -1000, -1000, -1000,
	-1000, 81453, -1000, 119111, 2626, 4044, 4042, 1228, 4040, 3505,
	1955, 4039, 2017, 1325, 4038, 4037, 4035, 4034, 4031, 4029,
	4027, 1598, 118522, 3186, 117933, 1799, 136747, 1110, 94998, 100297,
	2790, 117344, 1566, 1499, -1000, -1000, -1000, -1000, 3282, 3026,
	3022, 1377, -1000, -1000, -1000, -1000, 64887, 8079, 8022, -1000,
	-1000, 11762, 116755, 67872, 100297, 100297, -1000, -1000, -1000, -1000,
	-1000, -1000, 48073, 678, 47470, 1004, 116166, -1000, -1000, 65484,
	3131, 1157, -1000, -1000, -1000, -1000, -1000, 115577, 46867, 376,
	46264, 866, 127353, -1000, 3184, 2062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2851, 1707, 3791, 2935, 80854,
	2190, 1488, 3585, 3279, 3273, 1595, 2179, 3272, 4025, 2791,
	3267, 3266, 3265, 3264, 3258, 1700, 2744, 381, 2732, 32902,
	3168, 1821, 45661, 1648, 1623, 3255, 3254, 3851, 3701, 2155,
	2172, 2214, 2189, 85586, 4024, 4021, 3528, 3252, 3245, 2995,
	3217, 2048, -1000, 3126, 1597, 265, -1000, -1000, -1000, -1000,
	-1000, -1000, 1561, -1000, -1000, -1000, -1000, -1000, 90879, -1000,
	-1000, 1455, -1000, -1000, 1455, -1000, -1000, -1000, -1000, -1000,
	1448, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1896, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2232, -1000, 2227, -1000,
	-1000, -1000, 2681, 3460, 3460, 3460, 3624, 482, 478, -1000,
	158, -1000, -1000, 146369, -1000, -1000, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 52294, 2352, -1000, 745, -1000, -1000, 795,
	-1000, 743, 683, 628, -1000, -1000, -1000, -1000, -1000, -1000,
	739, -1000, -1000, -1000, -1000, -1000, -1000, 3816, -1000, 29147,
	-1000, -1000, -1000, 536, 734, 52294, -1000, -1000, 3878, 3877,
	982, -1000, 263, 987, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3181, 733, 731, -1000,
	730, 729, 728, 726, 724, -1000, 722, -1000, 721, 719,
	718, 716, 715, 714, 713, 712, -1000, 2220, -1000, -1000,
	-1000, -1000, -1000, -1000, 675, 673, 673, 673, -1000, 1105,
	-1000, -1000, -1000, 282, 671, 266, 669, 655, 654, -1000,
	710, 709, 707, 706, 702, 701, 700, 697, 695, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1104, -1000, -1000, -1000,
	-1000, 1494, -42, 127353, -1000, 525, -42, -1000, -1000, 688,
	-1000, 37744, 37744, 37744, -1000, -1000, 2456, 52294, -1000, 2701,
	-1000, -34, -34, 955, 63093, -1000, 60121, 955, 646, 809,
	69049, -1000, 3125, -1000, -1000, 687, 236, -1000, -1000, -1000,
	-1000, 26675, 3124, 127353, 127353, 127353, 100297, 100297, 100297, 127353,
	4019, 4016, 3275, 52294, -1000, -1000, 76113, 139687, 100884, -1000,
	-1000, 3738, 74340, 75525, 3177, 139687, 3174, 139103, 4015, -1000,
	-1000, -1000, -1000, -1000, 3406, 4014, 4013, 4010, -1000, 127353,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 252, 3404, -1000,
	-1000, 104406, 252, 3398, -1000, 252, 3395, -1000, 103819, -1000,
	-1000, 2413, 3390, -1000, -1000, 255, 3387, -1000, -1000, -1000,
	253, 3385, -1000, -1000, 230, -90, 3383, -1000, -1000, -1000,
	-1000, -1000, -1000, 146369, -1000, -1000, -1000, 138514, -1000, 3532,
	-1000, 127353, -1000, 52294, -1000, -1000, 3736, 1762, 3581, 3673,
	-1000, -1000, -56, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2674, 2656, 1216, 2510, -1000, 3447, 1600, 35917, 3492, -1000,
	-1000, -1000, -1000, -1000, 226, 26675, 2994, -1000, -1000, 127353,
	-1000, 127353, 2885, 2885, -1000, -1000, -1000, 3838, 3837, 2885,
	2885, 127353, 127353, -1000, -1000, -1000, -1000, -1000, -1000, 2338,
	3357, 1558, -1000, 2508, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2194, 3353, -1000, 2149, 3352, 2035, -1000,
	-1000, 1766, -1000, 142860, 1467, -1000, -1000, -1000, -1000, 2270,
	3350, -32, -1000, -1000, 2405, -1000, -1000, -1000, -1000, 142652,
	-1000, 3054, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1767, -1000, -1000, 2297, 2102, -1000, 1395, 3349, -1000,
	2933, 2933, 94409, 3330, 67275, 65484, 78466, -46, -1000, -1000,
	-1000, -1000, -1000, -98, -1000, 25474, 146369, -1000, -1000, -1000,
	-1000, 1974, 146369, 1005, -1000, -1000, 3348, -1000, 146369, 984,
	-1000, -1000, 3346, -1000, 2741, -1000, 3172, -1000, -1000, 2579,
	2577, 1079, -1000, 4008, -1000, -1000, 4007, -1000, 4006, 4005,
	4003, -1000, 1868, 2175, 4002, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 93822, 2452, -1000, -1000, 90292, -1000, 2576,
	3670, -1000, 93233, 1108, -1000, 1066, 2574, -1000, 103232, 1075,
	2570, -1000, 4000, 3622, 2832, 1066, 2567, -1000, -1000, -1000,
	-1000, -1000, 1027, -1000, 70811, -1000, 70811, -1000, 1746, -1000,
	134397, -34, 100297, 3816, -1000, -92, -1000, -1000, -1000, 1012,
	-1000, 64287, -1000, 64287, 107349, 82649, 1047, 3123, 73163, 146161,
	-1000, 1078, -1000, -1000, 146369, -1000, -1000, -1000, 2737, -1000,
	-230, 2930, -1000, 82649, 66678, 3121, 2734, -1000, 146369, -1000,
	-1000, -1000, -1000, 146369, -1000, -1000, -1000, 82649, 90292, -1000,
	114988, 92644, -1000, -1000, 1588, 2717, -1000, -1000, -1000, 65484,
	3119, 1422, 82649, 82649, 82649, -1000, 114399, -1000, -1000, 2218,
	1385, 3529, 2213, 100297, -1000, 2027, -1000, -1000, -1000, 3560,
	3328, 127353, -1000, -1000, 3171, -1000, 77878, 102645, -1000, 102058,
	-1000, 101471, -1000, 100297, -1000, 100297, -1000, 3999, 3997, 3996,
	-1000, -1000, 3995, -1000, 3994, 3545, -1000, 723, 45058, 146369,
	3544, -1000, 3992, 2145, 3168, 146369, -1000, 3326, 1800, 1795,
	127353, -1000, -1000, 127353, -1000, 127353, -1000, -1000, -1000, 2485,
	1682, -1000, -1000, 2672, -1000, -1000, -1000, 1077, -1000, -1000,
	100297, 100297, 100297, 100297, 1322, -1000, 44455, -1000, -1000, 3250,
	3990, 1861, -1000, 1976, -1000, 3118, 3575, -1000, 3117, 1581,
	1915, 222, 3882, -1000, -1000, 259, -1000, -1000, -56, -1000,
	133810, -1000, 2681, -1000, 127353, -1000, 2675, 3158, 3166, 1787,
	2482, 2783, -1000, 43852, 2714, 55912, 2505, 158, -1000, -1000,
	158, 158, 34711, -1000, -1000, 74340, 74340, 26675, 1399, 52294,
	52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	52294, 52294, 52294, 52294, 52294, 2342, 52294, 1391, 52294, 52294,
	52294, 52294, 2111, -1000, -1000, 2099, 563, 2178, 683, -1000,
	-1000, -1000, 3790, 3790, 3790, 761, 761, 761, 146787, 146787,
	651, 3989, 795, -1000, 52294, -1000, 111, 63680, 52294, 27274,
	-1000, 478, 7424, 2688, -1000, 477, 27907, -1000, -1000, -1000,
	29147, 628, 43219, 52294, 1085, 146369, -1000, -1000, 1442, 3824,
	24870, 3196, 2989, 682, 886, 874, 32269, 31636, 31003, 30370,
	864, 859, 52294, 52294, 52294, 52294, 52294, 52294, 52294, 52294,
	-1000, -1000, 3836, -1000, 3824, -1000, -1000, -1000, -1000, 3824,
	1389, 1336, 3824, -1000, 3824, 3824, 9762, 9762, 42616, 42013,
	41410, 56515, 40807, 52294, 29767, 40204, 39601, -1000, 58324, 127353,
	-42, 3735, 52294, 319, -1000, 143773, -1000, 319, 319, 681,
	-101, 146369, 2739, 2739, 61913, 2568, 2367, 2367, 2367, -1000,
	955, 19396, 955, 112638, 2374, 955, 955, 221, 269, 476,
	59524, 2701, 112638, 788, 680, -22, -24, -25, -1000, -1000,
	-26, -28, -1000, -1000, 100297, 679, 27274, 26675, 220, 2141,
	-102, 2765, 2764, 2760, 2757, -1000, 2751, 2449, -1000, -1000,
	-1000, 1942, -107, 1388, 100297, 127353, 1539, 3987, -108, -1000,
	7760, -109, -1000, 1376, 218, 3824, -1000, -1000, -1000, -1000,
	-1000, 3984, 3983, -1000, 1103, 677, 676, 502, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 675, 673, 673, 673,
	-1000, 282, 671, 266, 669, 655, 654, -1000, -1000, -1000,
	-1000, -1000, 3115, 100297, 127353, 1533, 3978, 89118, -90, 100884,
	-69, -1000, -1000, 127353, -1000, -1000, -1000, 3973, -1000, 100297,
	-1000, -1000, 100297, 252, 3345, -1000, 100297, -1000, 100297, 247,
	3344, -1000, -1000, 127353, -1000, 100297, 100297, -1000, 127353, 127353,
	127353, 139687, 139687, 243, -1000, 100297, 912, -110, 1242, -56,
	-1000, -1000, -1000, -1000, 1455, -1000, 1966, -1000, -1000, -1000,
	-1000, -1000, -1000, 1599, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 982, -1000, -1000, -1000, -1000, 3810, 3806, -43,
	-1000, -1000, 26675, -1000, 2076, -1000, -1000, -1000, -1000, 127353,
	127353, -1000, -1000, 127353, 127353, -1000, -1000, -61, 1736, 618,
	1386, -1000, 84997, 2530, 3531, 3970, 2806, 3516, 1743, -1000,
	1654, 653, -1000, 3640, 90879, 3697, 3713, 1429, -1000, 3114,
	-1000, -1000, -1000, 972, 1849, 1906, 1383, 1381, 90879, 2149,
	-1000, 74340, -1000, 2856, 3621, 1498, 1482, 1498, 1498, 1492,
	1431, -1000, 90879, 1898, 1379, 1365, 1364, -1000, -1000, 1739,
	1729, -1000, -1000, 113812, 1615, -1000, 1363, 1361, 3723, 2232,
	2345, 821, 2121, -1000, 1466, 1354, 3113, -1000, -1000, -63,
	3696, 3708, 1429, -1000, 3112, 1350, -1000, -1000, -1000, 3619,
	100297, 26675, 1662, 1660, 1652, 1897, 1349, -45, -1000, 3683,
	1724, -1000, 90292, 90292, 109703, 127353, 3766, 82649, -1000, 2601,
	-1000, -1000, -1000, 3584, 3583, -1000, -1000, 1346, 1345, -1000,
	1114, 7968, 3466, -1000, 139687, 1114, 1114, 2008, 3343, 2863,
	1779, -1000, 2912, 935, 2902, -1000, -1000, -1000, 935, -46,
	78466, 127353, 216, -1000, 111, 52294, 52294, 111, 52294, 111,
	-1000, 3658, 3340, 3336, 3969, -1000, -1000, -1000, -1000, -1000,
	3967, 2128, 2695, -1000, -1000, 652, 2562, 3107, 127353, 172,
	-1000, 100297, 3207, 3329, 139687, 2149, 2560, -1000, -1000, 92055,
	-1000, 3327, 525, 2559, -1000, 704, 3966, 3313, -1000, 133223,
	-1000, 3532, 1334, 3312, 1155, 481, 3734, -1000, 481, 71399,
	-1000, 127353, -1000, -34, 5604, 83823, -112, -115, 475, -1000,
	113225, 127353, 127353, 3478, 2160, 2151, -1000, 1057, 65484, -1000,
	65484, -117, -1000, -230, 2898, 1625, 65484, -1000, 1047, -128,
	935, -1000, 935, -1000, 100297, 3165, -1000, 82649, 65484, -1000,
	1047, 1047, 1047, -1000, -1000, -1000, -1000, 3965, 3961, 3959,
	3957, -1000, -1000, 1065, 100297, 127353, 100297, -1000, 2853, 1688,
	-1000, 213, -1000, 139687, -1000, 139687, 127353, 100297, -1000, 1065,
	127353, 1065, 127353, 1065, 127353, 1065, 1065, -1000, -1000, -1000,
	-1000, -1000, 111, -1000, -1000, 146369, -1000, 52294, -1000, -1000,
	1641, 3956, 1764, -1000, 3163, -1000, 3159, -1000, 14, -1000,
	-1000, 3832, 2011, -1000, 3875, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3954, 146369, -1000, 2015, -1000, -1000, -1000,
	-1000, 100297, 100297, 100297, 100297, 127353, 3465, -1000, 127353, 3462,
	3464, 100297, -1000, 3880, -1000, -1000, 90879, -1000, 2675, 3158,
	-1000, -1000, -1000, -1000, -1000, -1000, 1531, 2425, -1000, 2719,
	-1000, 1712, -1000, -1000, -1000, 146369, 57118, -1000, -1000, 146369,
	1989, -1000, 55309, 54706, -1000, -1000, 1851, 100297, 2793, -1000,
	2793, -89, -1000, 143565, 2716, 100297, -1000, -1000, -1000, -1000,
	-1000, 971, 1211, 1211, 1415, 1415, 1415, 1415, 3645, 8398,
	526, 7270, 13212, 13212, 608, 608, 608, 608, 608, 13212,
	5308, 761, 761, 5308, 5308, 5308, 5308, 5308, 761, 761,
	761, 13212, 13212, 13212, 761, 146787, 146579, 9822, 52294, 52294,
	1344, 2098, 563, 9196, 52294, 7229, 7229, 7229, 7229, -1000,
	2120, -1000, -1000, -1000, -1000, 3106, 650, 56515, 56515, -1000,
	-1000, -1000, -1000, 28527, 52294, -1000, -1000, -1000, -1000, 38968,
	-1000, -1000, 142442, -333, 474, -1000, 211, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	473, -86, -15, -1000, 52294, 52294, 52294, 472, -1000, 210,
	52294, 127353, -1000, 16020, 779, -118, -1000, -123, 1527, -1000,
	52294, -1000, -1000, 1342, -1000, 1341, 1338, 1326, -1000, 647,
	470, -1000, 204, -1000, 2364, 645, 639, 52294, -1000, -1000,
	-1000, -1000, -1000, 142234, -1000, -1000, 142026, -1000, -1000, 141818,
	-1000, -1000, 141610, -1000, -1000, -1000, -1000, -1000, 145953, 13289,
	12995, 12526, 5727, 11192, 10693, -125, 469, -126, 467, 970,
	967, 455, 452, 450, -135, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -136, 449, -1000,
	3105, -86, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	439, -1000, 436, -1000, 145745, -86, 424, 6521, -1000, 56515,
	56515, 56515, 56515, 423, -1000, 143357, -1000, 145314, 38365, 38365,
	38365, 422, 145284, 52294, -86, -145, -1000, -146, -1000, -1000,
	-1000, -1000, 541, -148, 1058, 37744, 60733, 26675, -1000, 1058,
	1058, 52294, -1000, 52294, 2728, -1000, -1000, -1000, -1000, 2727,
	2090, 2739, 61913, -1000, -1000, -1000, -1000, 112638, -1000, 3816,
	2846, -1000, 112638, -1000, -1000, 127353, 525, -1000, 112638, 112638,
	26675, 955, -1000, 955, 112638, 641, -1000, -1000, -1000, -1000,
	-1000, 415, 71989, -15, 203, 26675, 1066, -1000, -1000, 2877,
	2877, 2877, 2877, 2877, 100297, -1000, -1000, 139687, 1323, -52,
	-120, 2874, -1000, 3764, -1000, 2249, -1000, 74340, -1000, 794,
	1150, 26675, -1000, -1000, -1000, 637, -1000, 3824, 3824, -1000,
	3824, 139687, 3104, 284, 2868, -1000, 2448, -48, 186, 139687,
	3953, -1000, -1000, 252, -1000, 100297, 252, 252, -1000, 100297,
	100297, 2413, -1000, 255, -1000, 253, -1000, -1000, -90, -1000,
	1076, 35917, -1000, 1455, -1000, -1000, 1686, -1000, 2143, -1000,
	1303, -1000, -1000, 35917, -1000, 3481, -1000, 1801, -1000, -1000,
	-1000, -1000, 2467, 127353, 127353, 100297, -1000, 110877, 127353, -1000,
	2303, 139687, -1000, 2553, 132636, 2529, 132049, 74340, -1000, -1000,
	635, 990, 2715, 2711, 1146, 127353, 127353, 2709, 131462, 130875,
	-1000, 3951, 127353, 2252, 52294, 110877, 3615, 2319, 2117, 111,
	111, -1000, 111, -1000, -1000, 634, 1301, 100297, 100297, 127353,
	139687, 100297, 1980, -1000, -1000, -1000, -1000, -1000, 91466, -1000,
	-1000, 1498, -1000, -1000, -1000, 1498, -1000, 1498, 2149, 1918,
	127353, 139687, 100297, 139687, 130288, 2113, 129701, 2089, -1000, -1000,
	2070, 1885, 127353, -1000, -1000, -1000, -1000, 1587, -1000, 821,
	1318, 3100, 52294, 52294, 2258, 111, 111, -1000, 111, 632,
	26675, 2119, -1000, 3051, 127353, 3874, 129114, 3872, 127353, 127353,
	127353, 139687, 3542, 127353, -1000, -128, -51, -104, -1000, 932,
	929, -98, -1000, 3766, -1000, 927, 2200, 127353, 139687, -1000,
	128527, 7968, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2265,
	80255, 1171, 127353, 1395, -1000, -1000, 1863, 1313, 1311, 90879,
	2294, 1847, 1999, 139687, 65484, 1059, 65484, 2839, -1000, -1000,
	24266, -1000, 146369, 146369, -1000, 146369, -1000, 77290, 82649, 127353,
	-1000, -1000, 1107, 127353, 84410, 991, 3311, 70223, -98, 1047,
	90292, 82649, 3206, 127353, 127353, -1000, -1000, 2149, 3297, 525,
	2550, -1000, 139687, 3733, 3293, 631, 3949, 3947, -1000, 100297,
	2446, 2549, -1000, -1000, 127940, 3262, 821, 127353, 1058, 61913,
	2130, -1000, 68462, 1124, 127353, 1994, 183, -1000, -1000, -1000,
	-8, 127353, -1000, 806, -1000, -1000, 5604, 5604, 1047, -104,
	630, 66081, -156, -1000, 202, 629, 924, 920, -1000, 5101,
	-1000, -230, -1000, 82649, 1057, 65484, 3097, -230, 2865, 3092,
	-1000, -1000, 1074, -1000, 1559, 2864, 1047, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -35, -1000,
	1837, 1977, 127353, -90, -90, -71, -1000, -1000, 201, -52,
	-1000, 1065, -1000, 1065, -1000, 1065, -1000, -1000, -1000, 146369,
	-1000, -1000, -1000, 1760, 1742, 127353, -1000, 3155, -1000, 127353,
	-1000, -1000, 26675, 127353, 100297, 26675, 100297, 3154, 3153, -1000,
	-1000, -1000, 127353, -1000, -1000, 127353, -1000, -1000, -1000, -1000,
	-1000, -1000, 1196, -1000, 1989, 2423, -1000, 628, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2652, -1000, -53,
	34711, 954, -1000, -1000, 100297, -37, 52294, 52294, 8927, 8043,
	52294, 56515, 56515, -1000, 52294, 6430, -1000, -1000, -1000, -1000,
	-1000, 3087, 627, 52294, 74340, 6008, 5788, -1000, 413, 9489,
	5308, -1000, 52294, -1000, 5926, -1000, 412, 37141, -1000, 144189,
	-23, -159, -1000, 20014, -86, -161, -1000, -1000, 793, -1000,
	3335, -1000, 52294, 145021, 2622, 2185, 1973, 1768, 3824, 3871,
	23662, -1000, 72576, 1082, 2381, 141402, -1000, -1000, -1000, -1000,
	74340, 74340, 52294, 52294, -1000, 52294, 52294, 52294, -1000, -1000,
	-1000, 3824, 959, -1000, -1000, -1000, 959, -1000, -1000, 1498,
	-1000, 1498, -1000, 52294, -1000, -1000, 3086, 52294, -1000, 74340,
	74340, 56515, 56515, 56515, 56515, 56515, 56515, 56515, 56515, 56515,
	56515, 56515, 56515, 56515, 56515, 56515, 56515, 56515, 56515, 56515,
	56515, 2705, 56515, 3784, 3784, 3784, 1056, -1000, 3152, 3086,
	52294, 52294, 74340, 411, 382, 379, -1000, 52294, -86, -1000,
	-1000, 10452, 624, -1000, 2639, -1000, 2987, -1000, 52294, -1000,
	-133, -1000, 2701, -1000, -1000, 2987, 2987, -164, 146369, 61913,
	61913, -1000, 621, 52294, 2726, -1000, -1000, 769, -331, -1000,
	914, -1000, -1000, -1000, -1000, -1000, -1000, 908, -1000, 525,
	-1000, -1000, -1000, 200, 112638, 112638, 768, -1000, -169, -1000,
	-1000, -170, -1000, 3732, 377, 26675, -1000, 1058, 3239, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2750, -276, 139687, 139687,
	1835, 2407, 3870, -1000, 3830, 792, 766, 199, 3824, 374,
	370, 369, -90, 139687, 139687, 1828, 74937, 139687, -1000, -1000,
	-1000, 252, -1000, -1000, -1000, 247, -1000, -1000, -1000, -1000,
	2827, -1000, -56, -1000, -1000, -1000, 52294, -1000, 1006, -1000,
	-1000, 3530, 620, 1310, 1304, -1000, -172, -1000, 907, -1000,
	-1000, -1000, -1000, -1000, 3017, -1000, 3290, -1000, 2548, -1000,
	1129, 2547, 1690, -1000, 52294, 615, 2825, 612, 607, 3945,
	2278, 3943, 1154, 3288, 2413, 3284, 2413, -1000, -1000, -1000,
	986, -1000, 146369, -177, -1000, 2319, -1000, 606, 605, -1000,
	-61, 1726, 454, 1302, 1073, -1000, -1000, 52294, 52294, 112051,
	-1000, 496, 3525, -38, -1000, -1000, -1000, 1823, 1298, 1296,
	-1000, -1000, -1000, -1000, -1000, 2149, 1820, 1295, 1290, -1000,
	-1000, -1000, -1000, -1000, 2546, -1000, 127353, -1000, 3283, 127353,
	127353, 1071, -1000, 3214, 3212, 964, 127353, 52294, 52294, 144813,
	144605, -1000, 1068, -1000, -1000, 52294, -1000, -63, 1288, 3687,
	2542, 100297, -1000, 2413, 3259, 1287, -1000, 1286, -1000, -1000,
	-1000, 3681, 3675, 1299, -1000, 109703, 82649, 82649, 3766, 65484,
	-1000, -1000, -1000, 82649, -1000, -1000, 79658, -1000, -1000, 1114,
	127353, 139687, 100297, 1905, -1000, -1000, 89118, 89705, 127353, 2863,
	-90, 935, -1000, 2651, 935, 1059, 3076, -1000, 2773, -1000,
	1067, 100297, 3941, 361, -178, -65, 74340, -1000, -1000, -1000,
	-1000, 2529, 100297, 127353, 1380, 2823, 127353, 127353, 3731, -1000,
	2464, 644, 100297, 957, -1000, 3816, -1000, -1000, -1000, 127353,
	-1000, -1000, -1000, 3662, 100297, 3727, 3257, 1066, 111, 100297,
	3842, -1000, -1000, 3726, 100297, 3253, 2443, 2541, 2685, 821,
	83236, 1066, 2377, -77, -1000, 1994, 36520, 3520, -179, -1000,
	-1000, -1000, 1058, 71399, 61913, 52294, 3939, -180, -1000, -1000,
	-1000, -1000, -1000, 109703, 82649, 1047, 127353, 127353, 3937, 82649,
	82649, 82649, -66, 604, -1000, 906, 904, 903, -1000, -1000,
	-1000, -1000, -1000, -1000, 902, 900, 899, 885, 1057, -1000,
	-1000, -230, 65484, 1057, 65484, 111, -1000, 2393, 100297, 65484,
	-1000, 23058, 127353, 2853, -1000, 79054, -1000, -1000, -1000, -1000,
	-1000, 1065, 3868, -98, -1000, -1000, -1000, 2276, 2501, 2276,
	1979, 1958, -1000, -1000, -1000, 2422, -1000, -1000, -1000, -1000,
	2785, 3537, 26675, 3647, 7229, 52294, 52294, 400, 1113, 416,
	7229, 52294, 52294, 74340, 11232, -185, 52294, 52294, -1000, 52294,
	765, 146369, -1000, 3867, 52294, 360, 359, -1000, -1000, -1000,
	3821, -1000, -1000, -1000, 146369, 52294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 353, -1000, 195, -1000, -1000, -1000, 136158,
	-1000, 52294, 349, 3611, -1000, 343, 340, 8719, 316, 141194,
	140986, 140778, 333, -1000, -1000, 330, 329, 146369, 3152, 146369,
	-1000, -1000, 953, 953, 1462, 1462, 1462, 1462, 3784, 471,
	969, 862, 672, 672, 672, 782, 1056, 1056, 672, 672,
	672, 1056, 3067, 2713, 594, 6741, -1000, -1000, 146369, 146369,
	328, -1000, -1000, -1000, -86, 324, 10452, -1000, 2980, 3610,
	146369, -1000, 61913, 2980, 2980, -1000, -1000, 2090, 127353, 146369,
	61913, -1000, 2846, -1000, 21240, 20630, -1000, 26675, -1000, -1000,
	-1000, -1000, 3816, -1000, 71989, -1000, 588, -1000, 129, -1000,
	3239, -1000, 882, -1000, -1000, 82649, 82649, 3935, 3934, 3932,
	3866, 3865, 2271, 3863, 2877, -1000, 2996, -276, -175, 127353,
	-1000, -1000, 764, 3929, 791, 26675, 321, -1000, -1000, -1000,
	-90, -90, 127353, 3055, 100297, 127353, 1500, -90, -1000, -1000,
	-1000, 3476, 146369, 3151, 2970, 2866, 127353, 127353, -1000, 110877,
	35917, 1573, 111464, 127353, 3244, -1000, 3243, -1000, 1146, 2665,
	140570, 62503, -1000, 62503, 127353, -1000, -1000, -1000, -1000, 2019,
	1546, 3926, 1220, -1000, 3567, 127353, -1000, 127353, -1000, -1000,
	-1000, 110877, -1000, 127353, 127353, 100297, 127353, -1000, 139687, 3223,
	-186, 146369, -70, -1000, 861, -1000, 1427, -1000, 22454, 127353,
	139687, 100297, 127353, 139687, 100297, 3242, 1123, 127353, -1000, 1121,
	2309, -1000, -1000, 3211, -1000, 146369, 144397, 111, 52294, 3222,
	-188, 26675, -1000, 3860, 3858, 3241, 3576, -1000, 127353, 3857,
	127353, 100297, 3475, -1000, -1000, -1000, 1064, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1793, 1285, 1281, 2441, 2439, 2402,
	-71, 2294, 1059, -73, 587, -1000, 851, -1000, -1000, 850,
	847, 1059, -1000, 82649, 65484, 3925, 525, -1000, 2804, -1000,
	106760, 84410, 2440, -1000, -1000, 586, 127353, 127353, 583, -1000,
	111, -1000, 3924, 110877, 581, -1000, 2387, -1000, 762, -1000,
	139687, 2149, 111, 100297, -1000, 1055, 525, 313, -74, -1000,
	3256, 1142, 26675, 100297, 3237, 2689, 821, 83236, -1000, 1334,
	2783, -1000, -75, -1000, 699, 111, 2377, -1000, -77, 146369,
	-1000, 845, -191, 311, -1000, 3473, -1000, -1000, -193, -1000,
	-1000, 2686, 2686, 82649, 65484, 82649, 82649, 82649, 65484, 82649,
	-1000, 1057, 935, -1000, -230, -1000, 2575, -1000, 1047, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 26675, 1848, -1000,
	580, 579, -1000, -1000, -1000, -1000, 3537, 7229, 7229, 52294,
	52294, 52294, 7229, 11232, -196, -1000, 7229, 7229, -86, -1000,
	-1000, 144189, -1000, -1000, -1000, 146369, -1000, 21850, 2290, -1000,
	140307, -1000, 34711, -1000, -1000, 52294, 52294, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 56515, 3050, 577, 74340, -1000,
	-1000, 291, 1013, 52294, 54103, 2701, 1013, 1013, -1000, -208,
	-1000, -1000, -1000, 3816, -1000, 3816, 129, -1000, -1000, 3923,
	26675, -1000, 82649, -1000, -1000, -1000, -1000, -1000, -1000, 3922,
	3921, 2520, 3919, 3918, -1000, 2400, -1000, -1000, 3203, -198,
	790, -1000, 3917, -1000, -1000, 169, 139687, 3049, 128, 2852,
	-1000, 111, -1000, -1000, -1000, -1000, -1000, -1000, 2850, 3725,
	-1000, 2067, -1000, 127353, 127353, -1000, 127353, -1000, 26675, 127353,
	3010, 1332, -1000, 990, 2706, 575, 56515, 1190, 100297, 925,
	2953, 2951, -1000, 3752, 3608, 2928, -215, -1000, 127353, 52294,
	127353, -217, -220, 2519, -1000, -1000, 1188, 1331, 52294, 1186,
	-1000, -1000, -1000, 74340, 573, 2413, 2413, -1000, -223, -228,
	-1000, -1000, -1000, 52294, 1280, 127353, 35314, -1000, 3915, 3525,
	-1000, -1000, -1000, -1000, -1000, -1000, 127353, 127353, -1000, 127353,
	127353, -1000, 52294, -1000, 143981, 52294, 1276, -1000, -1000, -1000,
	3850, 2413, 26675, 2413, -1000, 2413, 3576, 1209, 2476, 127353,
	139687, 100297, 2009, 2009, 3144, -1000, -1000, -1000, 2551, 2551,
	82649, 65484, 65484, -1000, -78, 1059, -1000, 3724, 2280, 3907,
	-1000, -1000, -1000, -1000, 2704, -1000, -1000, -1000, 127353, 2703,
	2929, 62503, 570, 567, 127353, 1049, -1000, -229, 84410, 991,
	1008, -1000, -1000, -1000, -1000, 525, -1000, 2819, 3721, -1000,
	3849, 566, 565, 127353, 2437, 564, 26675, 3518, 821, 83236,
	-1000, 3262, 1994, -1000, 2527, 127353, 3513, -1000, 2783, 563,
	-1000, 1047, 562, 1047, -1000, -234, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3719, 1057, -79, -1000, 922, 916,
	-1000, -1000, -1000, 100297, 100297, 52294, 52294, -1000, 7229, 7229,
	7229, -1000, 290, -1000, -1000, 2377, 3607, -1000, -83, 140277,
	18655, 8424, 56515, 74340, -235, -1000, -1000, 127353, 146369, -84,
	-1000, 146369, 560, 558, 434, -1000, -1000, -1000, 759, 642,
	-1000, -1000, -1000, -1000, 3906, -1000, -1000, -1000, -1000, 139687,
	3902, -1000, 139687, -90, 139687, 139687, 1778, -1000, 110290, 127353,
	-1000, -1000, 1690, 1988, -1000, -1000, 127353, 2537, -1000, -1000,
	-1000, 1046, 52294, 6741, 56515, 557, 52294, -1000, 555, 554,
	3718, 3452, -1000, 2801, 3034, 2041, 62503, -1000, 3537, -1000,
	17925, -1000, 1140, 2065, -1000, -1000, -1000, -1000, 146369, 56515,
	3576, 62503, -1000, -1000, 544, 543, 146369, 540, 841, 3047,
	-1000, -1000, -1000, -1000, -98, -98, -1000, 146369, 111, 146369,
	539, 3687, -1000, -1000, -1000, -1000, 2413, 100297, 840, -1000,
	-1000, -1000, 1274, -1000, -1000, -1000, -1000, 3901, 3897, 3044,
	89118, -1000, -236, -1000, -1000, -1000, 2116, 111, 991, -1000,
	-1000, 2440, 538, -1000, 1025, 2638, 2638, -237, 62503, 62503,
	-243, 2431, 2814, -1000, 286, 3716, 1008, -1000, 3797, -1000,
	3711, 3471, -1000, 111, -1000, 3842, 62503, -1000, 100297, 62503,
	2435, 2206, 2666, 83236, -1000, 2685, -1000, -1000, -244, 127353,
	1994, -1000, -1000, 82649, -1000, -1000, -1000, 1484, -1000, 2575,
	-1000, 127353, -1000, 127353, -1000, -1000, -245, -246, -1000, 2267,
	52294, 34711, -1000, -1000, 8424, -252, -1000, -85, -1000, 3707,
	54103, 3892, 3891, 3889, -1000, -1000, -1000, -276, -1000, -90,
	-90, -90, 127353, -1000, 2043, -1000, 2529, -1000, -1000, 3236,
	-1000, 2977, 535, 17268, 6741, 2635, 127353, 16436, 2149, 2149,
	-1000, 3706, 3033, -1000, -1000, 2258, 528, -1000, -1000, -1000,
	-1000, 954, 127353, 1025, 2976, 100297, 6741, 1144, -257, 2276,
	2276, 52294, 34108, 2304, -1000, 52294, -1000, -1000, 3576, 65484,
	139687, -1000, -1000, 139687, 2434, -1000, 3013, 3800, -1000, 2431,
	127353, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1140, -260, -262, -1000, -1000, 3555, -1000,
	3470, 2804, 111, -1000, -1000, 111, 3888, 1055, 285, -265,
	1142, -267, 100297, 2173, -1000, 821, -1000, 2689, 1058, 3431,
	-1000, -270, 3812, -1000, -273, -275, -1000, -1000, 270, 53500,
	53500, 53500, -86, -89, -1000, 127353, 527, -1000, -1000, -1000,
	-1000, -1000, 127, -1000, -1000, 3205, 947, -1000, 867, 2107,
	244, 1170, 188, 185, -1000, -1000, -1000, 2928, -1000, 127353,
	-1000, -1000, -1000, 947, 525, -1000, 52294, 1140, -280, -1000,
	1120, -281, -1000, 1118, -288, -1000, 3037, -1000, -289, 2413,
	-1000, -276, 243, 2009, 1053, 3650, -1000, -1000, -1000, 2654,
	-294, -1000, -1000, 2041, 1140, 2258, 2461, -1000, 2280, 1049,
	-1000, -1000, -1000, -1000, 1140, 522, 2041, 512, 1612, 821,
	-1000, -1000, 1498, 3518, 3427, 1424, 1047, -1000, -1000, -1000,
	-1000, -1000, 3247, -1000, 57721, 2469, 1956, 143149, 3247, 3247,
	-1000, -1000, 139687, 127353, 1025, 3636, -1000, 870, 868, 1614,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1058, -295,
	-1000, 2635, 146369, 1025, -1000, 2276, 2849, -1000, 2276, 3035,
	-1000, 2295, -1000, -1000, -1000, -1000, 3020, -1000, 1910, 3777,
	-1000, -1000, 1025, 127353, 2258, 2041, 1025, 1931, 1924, 3887,
	991, 2431, 2041, 62503, 2258, 62503, 2256, -1000, 127353, -1000,
	2206, 1423, -1000, 1741, -1000, -1000, 2091, 3745, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -90, -1000, -1000, 839, -1000,
	3442, -1000, 1180, 2261, 2261, -1000, -1000, 867, -1000, -1000,
	490, -1000, 487, -1000, 139687, 2385, -1000, -1000, -1000, -1000,
	1025, 2258, 1058, -1000, 3886, -1000, 2431, -1000, 2258, -296,
	1025, -297, 2324, -1000, -1000, -98, 2173, -1000, 1734, 71399,
	1950, -1000, -1000, 2371, 52897, 52294, -1000, 3768, -1000, -1000,
	2738, -1000, 2928, 52294, 52294, 243, 69636, 1058, 1025, -1000,
	-1000, 2654, 1025, 1140, 1058, 2041, -1000, 821, 1612, 71399,
	-283, -1000, -1000, -1000, 146369, -1000, -1000, -1000, -1000, -308,
	-316, -1000, -104, 109703, -1000, 1058, -1000, 1058, 2041, -1000,
	2258, 139687, 2256, -283, -1000, 2258, 1262, -321, -1000, -1000,
	2258, 1025, -1000, -1000, -1000, -1000, -1000, 401, -1000, 1025,
	1058, 52294, 1058, -1000, -322, -1000, 2258, -1000,
}

var sqlPgo = [...]int{
	0, 4752, 4743, 4742, 4740, 4739, 4736, 4734, 4732, 4731,
	4729, 4722, 4714, 4712, 4711, 147, 4709, 4708, 4707, 4706,
	4705, 4704, 4703, 4694, 4692, 4691, 4688, 4686, 4685, 4682,
	4681, 4678, 4676, 4675, 4674, 4673, 4670, 4664, 4662, 4661,
	4660, 4658, 4657, 4656, 4647, 4645, 4644, 4643, 4642, 4636,
	4635, 4634, 4633, 4626, 4625, 4623, 4622, 4619, 4617, 4615,
	4614, 4613, 4612, 4610, 4609, 4608, 4607, 4606, 4605, 4603,
	4596, 4594, 4586, 61, 4584, 4580, 4573, 4570, 4567, 4565,
	4564, 4562, 4561, 4559, 4558, 4557, 4555, 4554, 4550, 4549,
	4548, 4547, 4546, 67, 4545, 293, 4544, 4543, 4542, 4541,
	4540, 4536, 4535, 4532, 4523, 4522, 4520, 4518, 292, 4517,
	138, 177, 4516, 4515, 4081, 4514, 4513, 291, 4512, 4511,
	4509, 4507, 4506, 304, 4504, 4503, 4502, 4501, 4500, 269,
	4499, 4498, 4496, 4494, 4493, 4491, 114, 141, 4490, 4488,
	2422, 4485, 4483, 4482, 4481, 4480, 4479, 4478, 267, 271,
	4477, 4476, 4475, 258, 181, 4474, 290, 4473, 4472, 4471,
	4470, 4469, 4468, 4466, 4465, 4461, 4457, 4456, 4453, 4451,
	4450, 4449, 4446, 4445, 4444, 4442, 4440, 4439, 4438, 4436,
	4435, 4434, 4433, 4432, 4431, 4430, 4429, 4427, 4426, 4423,
	4421, 4420, 4418, 4417, 4414, 4413, 4412, 4411, 4402, 256,
	224, 131, 4401, 4396, 288, 285, 4395, 4390, 4386, 4384,
	4379, 3668, 4378, 4376, 4374, 4372, 4370, 4367, 4365, 4364,
	4362, 150, 14, 56, 4359, 4358, 103, 86, 91, 85,
	106, 104, 4357, 4356, 125, 4355, 136, 119, 4354, 111,
	105, 22, 6, 281, 247, 14392, 245, 4353, 4352, 4351,
	252, 208, 4342, 249, 4340, 4337, 4336, 4335, 4333, 4332,
	78, 57, 219, 4331, 4328, 149, 185, 192, 190, 184,
	183, 25, 60, 108, 87, 65, 47, 16, 90, 226,
	20, 2, 275, 4327, 272, 13, 151, 21, 28, 4326,
	4323, 4322, 4321, 3778, 117, 4320, 279, 253, 182, 4319,
	4317, 4316, 723, 4315, 4314, 54, 230, 213, 97, 122,
	44, 137, 4310, 159, 174, 40, 4309, 187, 110, 4307,
	4305, 94, 96, 9792, 12052, 4302, 4300, 128, 82, 100,
	3179, 175, 166, 211, 295, 134, 173, 165, 4299, 88,
	4297, 218, 217, 186, 167, 4296, 266, 4295, 3704, 92,
	193, 163, 6160, 4294, 4293, 4292, 84, 4291, 113, 4290,
	4289, 73, 9, 1, 3, 153, 35, 39, 10, 4288,
	33, 133, 51, 32, 4286, 31, 4284, 4282, 4281, 4280,
	52, 4278, 53, 172, 4277, 4276, 303, 4273, 95, 62,
	29, 4269, 198, 232, 4268, 237, 135, 4267, 4266, 270,
	199, 4264, 83, 251, 4262, 4261, 4260, 4259, 4257, 4255,
	148, 7, 140, 4254, 4252, 157, 4251, 58, 250, 210,
	4249, 68, 4248, 4247, 189, 59, 152, 297, 200, 231,
	132, 236, 196, 241, 4245, 4244, 4243, 215, 4242, 4241,
	228, 161, 4240, 4239, 261, 305, 99, 48, 79, 248,
	81, 206, 168, 4237, 214, 4235, 4233, 302, 194, 225,
	45, 12, 4, 115, 112, 4228, 8, 240, 164, 242,
	129, 4217, 8448, 1922, 2953, 238, 4212, 158, 123, 77,
	142, 162, 277, 102, 4207, 4206, 3686, 4205, 4200, 4198,
	4197, 197, 4196, 4195, 4194, 154, 188, 209, 4191, 124,
	70, 55, 23, 130, 262, 298, 118, 229, 207, 265,
	4190, 4189, 4188, 195, 4187, 76, 178, 4186, 212, 260,
	66, 4184, 144, 4183, 160, 1844, 71, 176, 4182, 244,
	4179, 4176, 4173, 4171, 4170, 4169, 4168, 627, 259, 4167,
	4165, 4164, 38, 205, 4163, 276, 283, 203, 50, 63,
	4160, 93, 127, 4159, 201, 234, 69, 5, 4158, 72,
	4157, 2970, 64, 4156, 0, 14468, 10703, 13464, 14526, 4155,
	5630, 4154, 4151, 4150, 235, 74, 4149, 4146, 4145, 116,
	4144, 89, 4143, 4142, 75, 4140, 26, 18, 19, 34,
	27, 286, 280, 4139, 4138, 36, 146, 169, 4137, 296,
	233, 4135, 4134, 4133, 4132, 101, 4131, 46, 4130, 42,
	4127, 4126, 43, 15, 41, 4125, 4124, 156, 4123, 120,
	222, 179, 4122, 171, 4121, 98, 143, 4120, 4115, 274,
	223, 221, 109, 4114, 294, 4113, 220, 4112, 4111, 24,
	4109, 4108, 257, 126, 121, 49, 264, 145, 30, 4107,
	191, 227, 4104, 4103, 180, 4102, 4101, 4100, 284, 4099,
	3663, 278, 4097, 37, 4094, 4092, 4090, 11, 4089, 4088,
	216, 3392, 4087, 4085, 17, 4084, 202,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 628, 628, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 526, 526, 526, 557, 557, 557, 557, 559,
	559, 653, 653, 654, 654, 654, 654, 654, 139, 139,
	423, 423, 423, 61, 61, 61, 61, 61, 623, 623,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 649, 649, 649, 229,
	229, 229, 231, 231, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 236, 18, 18,
	18, 118, 118, 118, 118, 118, 118, 118, 113, 113,
	561, 561, 562, 562, 220, 220, 221, 221, 221, 221,
	222, 222, 223, 223, 223, 76, 76, 233, 233, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 67, 67, 74, 74, 74, 74, 74, 74, 74,
	74, 201, 201, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 81, 81, 81, 81, 81,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 656,
	656, 657, 657, 658, 658, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 90, 90, 384, 384, 347, 347, 91, 91, 91,
	92, 92, 93, 93, 78, 78, 620, 620, 621, 621,
	621, 621, 517, 517, 95, 95, 422, 422, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 105, 105, 105, 105, 105,
	106, 106, 106, 103, 103, 103, 100, 100, 100, 99,
	99, 99, 104, 104, 104, 619, 333, 333, 102, 102,
	102, 101, 101, 101, 400, 400, 107, 107, 107, 107,
	348, 108, 108, 108, 108, 108, 108, 108, 108, 111,
	111, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 519, 519, 4, 4, 263, 263,
	262, 262, 262, 262, 5, 5, 5, 266, 266, 265,
	264, 109, 109, 109, 484, 484, 114, 114, 114, 438,
	438, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 138, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 625, 625, 393,
	393, 296, 296, 296, 296, 127, 127, 127, 127, 128,
	128, 128, 128, 129, 129, 206, 206, 145, 145, 145,
	145, 144, 144, 144, 144, 144, 144, 144, 144, 68,
	68, 68, 69, 69, 70, 70, 71, 71, 72, 72,
	73, 73, 73, 73, 73, 148, 148, 31, 31, 31,
	31, 149, 149, 650, 650, 151, 147, 147, 147, 147,
	147, 146, 146, 150, 150, 150, 150, 152, 154, 154,
	154, 154, 154, 153, 153, 153, 153, 153, 155, 155,
	551, 551, 408, 408, 549, 549, 571, 571, 550, 550,
	354, 354, 354, 354, 354, 355, 355, 355, 560, 560,
	560, 560, 560, 560, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	207, 207, 207, 208, 208, 213, 213, 214, 214, 214,
	215, 215, 215, 212, 212, 212, 209, 209, 210, 210,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	218, 218, 216, 216, 217, 217, 661, 661, 660, 660,
	219, 219, 219, 219, 219, 182, 182, 182, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 409,
	409, 185, 185, 185, 169, 169, 157, 157, 157, 157,
	157, 157, 157, 157, 232, 232, 232, 232, 162, 162,
	162, 162, 162, 162, 162, 162, 163, 163, 163, 158,
	158, 171, 171, 171, 171, 171, 164, 164, 165, 165,
	165, 166, 166, 166, 166, 193, 193, 168, 168, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 159, 159,
	159, 159, 173, 173, 173, 173, 445, 445, 445, 199,
	199, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 196, 196, 196,
	196, 196, 196, 641, 641, 642, 642, 642, 189, 189,
	189, 189, 189, 189, 498, 498, 183, 183, 183, 183,
	188, 188, 188, 188, 191, 191, 191, 191, 428, 428,
	180, 180, 180, 181, 181, 181, 186, 186, 198, 187,
	385, 385, 184, 184, 190, 190, 190, 190, 192, 192,
	192, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	161, 161, 161, 161, 194, 194, 179, 179, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 662,
	662, 175, 175, 175, 174, 174, 174, 174, 177, 177,
	178, 178, 178, 178, 178, 178, 178, 176, 167, 197,
	622, 622, 617, 617, 617, 617, 617, 617, 617, 617,
	617, 618, 618, 618, 618, 618, 624, 624, 119, 119,
	119, 119, 119, 119, 119, 130, 130, 130, 130, 130,
	130, 130, 133, 133, 120, 120, 120, 120, 120, 120,
	120, 123, 123, 121, 121, 121, 121, 122, 122, 85,
	85, 85, 85, 85, 17, 17, 17, 86, 86, 287,
	287, 241, 241, 241, 372, 372, 242, 242, 362, 362,
	362, 362, 237, 237, 238, 238, 239, 240, 240, 87,
	87, 663, 663, 663, 634, 634, 634, 635, 635, 635,
	635, 635, 635, 356, 356, 357, 357, 464, 464, 464,
	464, 464, 360, 360, 360, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 370, 371, 371, 363, 363, 369,
	368, 368, 367, 367, 366, 366, 364, 365, 365, 365,
	374, 374, 373, 376, 376, 375, 463, 580, 580, 582,
	582, 582, 582, 582, 582, 582, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 446, 446, 664, 664, 665, 666, 578,
	578, 578, 579, 574, 574, 575, 575, 575, 575, 575,
	358, 358, 359, 359, 359, 359, 576, 577, 391, 391,
	502, 581, 581, 583, 583, 585, 667, 667, 667, 667,
	667, 667, 668, 668, 668, 462, 462, 461, 461, 460,
	460, 382, 382, 586, 586, 586, 586, 587, 587, 587,
	587, 587, 590, 589, 588, 588, 588, 588, 588, 89,
	89, 89, 425, 425, 424, 424, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 203, 203, 299, 299, 299, 83,
	83, 83, 14, 14, 14, 14, 14, 14, 14, 314,
	314, 15, 15, 15, 636, 636, 636, 88, 88, 88,
	88, 88, 88, 380, 380, 380, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 627, 627, 626, 626, 300, 300, 670, 670,
	94, 94, 94, 94, 94, 94, 94, 94, 520, 520,
	521, 521, 82, 82, 82, 82, 82, 447, 447, 444,
	444, 443, 443, 390, 390, 500, 500, 500, 501, 304,
	304, 305, 305, 260, 260, 260, 34, 33, 24, 24,
	28, 28, 29, 29, 286, 286, 286, 286, 286, 286,
	286, 286, 286, 30, 30, 54, 54, 54, 54, 55,
	55, 55, 55, 58, 58, 59, 59, 53, 53, 53,
	53, 56, 56, 50, 50, 60, 60, 60, 60, 60,
	643, 645, 645, 644, 644, 648, 648, 648, 648, 648,
	648, 646, 646, 335, 335, 647, 647, 651, 651, 652,
	652, 126, 126, 131, 131, 131, 131, 131, 132, 132,
	132, 132, 134, 134, 134, 134, 143, 143, 202, 202,
	202, 202, 202, 202, 202, 62, 62, 62, 62, 75,
	75, 75, 75, 141, 672, 672, 672, 142, 142, 142,
	671, 671, 297, 297, 457, 457, 458, 458, 673, 673,
	459, 459, 459, 459, 459, 290, 289, 291, 291, 292,
	292, 80, 80, 80, 280, 280, 279, 281, 281, 282,
	282, 277, 277, 563, 563, 284, 284, 284, 285, 285,
	273, 273, 274, 274, 275, 275, 276, 276, 288, 288,
	558, 558, 674, 674, 117, 117, 117, 205, 205, 346,
	346, 346, 454, 454, 454, 383, 383, 311, 311, 456,
	456, 456, 456, 456, 421, 421, 421, 204, 204, 398,
	398, 411, 411, 412, 412, 514, 514, 413, 124, 124,
	125, 125, 140, 140, 245, 245, 243, 243, 243, 243,
	243, 243, 243, 243, 250, 250, 251, 251, 252, 252,
	253, 254, 254, 254, 254, 401, 401, 255, 255, 255,
	244, 244, 244, 246, 246, 246, 246, 246, 246, 246,
	249, 249, 249, 249, 256, 256, 256, 248, 248, 597,
	597, 597, 599, 599, 601, 601, 600, 600, 596, 596,
	598, 598, 669, 669, 427, 427, 427, 379, 381, 377,
	377, 378, 378, 388, 388, 386, 387, 387, 389, 389,
	499, 499, 499, 261, 261, 261, 418, 418, 418, 418,
	419, 419, 450, 450, 448, 448, 448, 448, 449, 449,
	451, 451, 451, 452, 452, 453, 453, 415, 415, 416,
	416, 417, 417, 417, 417, 480, 480, 247, 247, 247,
	395, 395, 395, 396, 396, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 471, 471, 469, 469,
	469, 469, 503, 503, 503, 503, 503, 503, 503, 503,
	503, 504, 505, 505, 397, 397, 506, 455, 455, 615,
	615, 615, 616, 616, 497, 497, 507, 507, 507, 507,
	507, 507, 495, 495, 496, 496, 515, 516, 516, 431,
	431, 431, 431, 429, 429, 432, 432, 432, 432, 432,
	430, 430, 508, 508, 508, 508, 420, 420, 509, 509,
	509, 509, 510, 511, 511, 512, 512, 465, 466, 466,
	522, 522, 522, 522, 524, 394, 394, 394, 394, 394,
	573, 572, 572, 523, 523, 523, 523, 523, 523, 523,
	523, 523, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 539, 539, 539, 539, 539, 539,
	539, 525, 525, 525, 525, 525, 529, 529, 529, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	530, 530, 535, 535, 536, 536, 536, 531, 532, 537,
	537, 537, 537, 675, 675, 541, 541, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 527, 527, 527, 534,
	534, 534, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 439, 439, 441, 441, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	474, 474, 474, 474, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 591,
	591, 591, 591, 591, 591, 591, 591, 476, 476, 594,
	594, 595, 595, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 602, 602, 603, 603, 605, 605,
	606, 606, 607, 608, 608, 608, 609, 610, 610, 604,
	604, 611, 611, 611, 611, 612, 612, 613, 613, 613,
	613, 613, 614, 614, 614, 614, 614, 486, 486, 487,
	487, 493, 493, 493, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 353,
	353, 352, 301, 301, 301, 301, 301, 301, 406, 406,
	404, 404, 404, 407, 407, 405, 405, 403, 403, 402,
	402, 483, 483, 481, 481, 485, 485, 433, 433, 540,
	540, 540, 540, 540, 540, 540, 540, 434, 434, 434,
	442, 435, 435, 436, 436, 436, 436, 436, 477, 478,
	437, 437, 437, 479, 479, 488, 492, 492, 491, 490,
	490, 489, 489, 467, 467, 468, 468, 414, 414, 676,
	676, 410, 410, 513, 513, 513, 513, 350, 350, 399,
	399, 349, 349, 341, 341, 342, 342, 342, 342, 392,
	392, 494, 494, 542, 542, 543, 543, 544, 544, 545,
	545, 546, 547, 548, 482, 482, 322, 321, 308, 309,
	320, 319, 318, 307, 310, 315, 316, 317, 312, 313,
	329, 328, 327, 278, 283, 334, 336, 336, 339, 339,
	340, 338, 337, 337, 324, 325, 326, 518, 306, 343,
	343, 344, 344, 344, 345, 345, 345, 345, 302, 302,
	303, 303, 330, 330, 331, 332, 332, 323, 323, 323,
	293, 293, 293, 294, 294, 295, 295, 556, 556, 553,
	553, 553, 554, 554, 554, 555, 555, 555, 555, 552,
	552, 552, 552, 552, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 565, 565, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 567, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 570, 570,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	9, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 2, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 3, 2, 1,
	4, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	3, 2, 2, 2, 4, 6, 3, 1, 2, 2,
	7, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 5, 2, 6, 9, 4, 7, 7,
	10, 7, 10, 10, 13, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 4, 4, 3,
	4, 1, 1, 1, 1, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 1,
	2, 2, 2, 9, 2, 1, 0, 1, 1, 0,
	1, 2, 0, 2, 2, 0, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	3, 5, 7, 3, 3, 3, 4, 8, 6, 4,
	5, 5, 5, 3, 0, 1, 1, 1, 4, 4,
	3, 4, 4, 3, 4, 4, 1, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 5, 7,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 7, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 5, 3,
	3, 3, 4, 4, 4, 4, 4, 4, 4, 3,
	4, 5, 4, 4, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 4, 3, 4, 4, 5, 1,
	1, 10, 10, 3, 5, 5, 5, 3, 5, 6,
	4, 4, 5, 5, 2, 6, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 6, 1, 3,
	1, 2, 0, 1, 2, 3, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 3, 0, 4,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	8, 11, 5, 4, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 16, 19, 15, 18, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 5,
	2, 4, 6, 6, 8, 6, 7, 8, 9, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 8, 6, 6, 8, 8, 4,
	7, 3, 0, 7, 10, 1, 1, 1, 1, 2,
	2, 3, 0, 3, 0, 3, 0, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 14, 16, 3, 1, 0, 4, 1, 0, 2,
	2, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 635, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 454, 466, 421, 147,
	444, 426, -150, -151, 485, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -655, 106, -598, -98, -101, -134, -659, 168, 232,
	-120, -121, -122, 386, -128, -129, 447, -131, -132, -133,
	450, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 490, -187,
	-197, -165, -198, 555, 52, 506, 85, 152, 458, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-597, -99, -100, -103, -105, -106, -102, -104, 445, 607,
	-246, -244, 632, 571, -162, -21, -26, -22, -23, -25,
	-27, -24, -28, -29, -30, -46, -51, -48, -49, -47,
	-50, -52, -53, -54, -55, -56, -57, -58, -59, -33,
	-39, -40, -34, -35, -36, -37, -38, -41, -42, -43,
	-44, -45, -19, -20, -32, 594, 603, -249, -247, -248,
	-256, 477, 579, 528, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	-348, 2, -324, -330, -331, -332, -323, -293, -567, -570,
	4, -564, -568, 175, 242, 347, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 46,
	47, 48, 49, 50, 51, 52, 56, 58, 62, 63,
	64, 65, 66, 67, 71, 76, 77, 82, 83, 84,
	85, 86, 87, 88, 89, 95, 92, 93, 94, 96,
	98, 100, 101, 102, 103, 104, 105, 107, 108, 109,
	111, 112, 113, 121, 122, 123, 124, 125, 127, 133,
	128, 134, 137, 132, 136, 138, 140, 141, 142, 145,
	146, 147, 149, 150, 151, 153, 154, 155, 157, 158,
	160, 161, 162, 165, 163, 166, 164, 167, 168, 169,
	170, 173, 181, 182, 183, 188, 190, 191, 192, 194,
	195, 198, 199, 200, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 213, 217, 219, 220, 221, 222, 223,
	224, 225, 231, 232, 234, 235, 236, 237, 238, 243,
	244, 245, 249, 255, 256, 260, 261, 262, 264, 268,
	269, 270, 271, 272, 273, 275, 277, 276, 279, 282,
	283, 286, 287, 288, 289, 290, 291, 295, 296, 292,
	297, 298, 300, 301, 304, 302, 305, 306, 303, 307,
	310, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 321, 308, 309, 324, 322, 326, 327, 328, 329,
	330, 345, 340, 341, 342, 334, 335, 331, 336, 332,
	333, 337, 338, 344, 339, 349, 350, 351, 352, 355,
	229, 248, 357, 358, 361, 363, 380, 366, 367, 368,
	371, 372, 375, 378, 379, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 391, 392, 394, 395, 396, 398,
	399, 400, 402, 404, 405, 407, 408, 409, 411, 412,
	413, 414, 415, 416, 417, 418, 420, 421, 423, 422,
	424, 426, 428, 429, 430, 436, 437, 444, 438, 440,
	441, 442, 443, 445, 446, 447, 448, 449, 450, 452,
	453, 454, 456, 457, 458, 459, 460, 462, 464, 465,
	469, 470, 471, 487, 488, 509, 466, 467, 468, 472,
	473, 474, 475, 476, 480, 478, 479, 481, 482, 483,
	485, 486, 489, 490, 492, 493, 494, 495, 496, 497,
	498, 501, 503, 504, 505, 506, 507, 527, 508, 510,
	514, 515, 516, 517, 511, 512, 526, 519, 520, 521,
	523, 524, 529, 530, 531, 532, 533, 534, 536, 537,
	539, 547, 548, 549, 550, 552, 555, 556, 557, 558,
	545, 560, 561, 564, 565, 569, 566, 570, 567, 568,
	571, 573, 576, 577, 578, 584, 583, 585, 586, 587,
	589, 590, 595, 596, 598, 599, 600, 37, 53, 54,
	57, 59, 61, 72, 73, 74, 78, 129, 130, 159,
	171, 172, 184, 201, 202, 214, 216, 226, 227, 228,
	250, 251, 253, 258, 280, 354, 356, 373, 377, 393,
	397, 401, 403, 419, 461, 499, 513, 518, 540, 541,
	542, 543, 551, 553, 579, 580, 581, 588, 597, -348,
	2, -324, 364, -317, 2, -293, -293, 404, 29, 2,
	29, 392, 479, 531, 533, 2, -625, -393, 2, 29,
	-296, -293, 106, 212, 477, -317, 2, -625, 212, -393,
	26, 2, -293, 2, 378, 23, 28, 69, 80, 102,
	145, 170, 193, 198, -658, 380, 412, 464, 481, 526,
	537, 552, 2, 583, 301, 478, 528, 242, 124, 557,
	472, -636, 469, 470, 378, 410, 456, 215, 572, -297,
	2, 466, -293, 301, 2, 635, 98, 77, 461, 482,
	-153, 2, 291, 548, -154, -155, -152, 540, -551, 472,
	456, 324, -293, 635, 635, 635, 29, -306, 2, -293,
	-306, 2, -211, 2, -306, -660, -218, -217, -216, 22,
	437, 183, 273, 196, 233, 329, 407, 194, 50, -211,
	2, 528, 242, 472, 124, 524, 635, 635, 2, 528,
	383, 583, 478, 124, 416, 242, 557, 198, 145, 28,
	71, 48, 534, 611, 472, -636, 608, 609, 301, 131,
	-623, 2, -617, 4, -568, -564, -342, -341, 528, 534,
	124, -332, -323, 624, -331, 635, 635, 635, 635, 2,
	261, 262, 414, 413, 482, 483, 29, 635, 635, 635,
	635, 469, 2, 170, 23, 28, 69, 97, 102, 131,
	193, 198, 369, -656, 380, 412, 481, 526, 530, 537,
	552, -635, 508, 71, 472, -634, -636, 301, 557, 145,
	-443, 124, 291, 210, 565, 533, 531, 563, 137, 249,
	568, 567, 635, 635, -111, 2, 632, 33, 32, -110,
	-114, 147, 485, -236, 528, 254, 2, -293, 635, 635,
	635, 2, 261, 262, 469, 470, 29, 635, 635, 196,
	-617, 524, 2, 635, 635, 635, 2, 29, 261, 262,
	469, 470, 254, 2, 71, 474, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 2, -200, 482, 508, 222, 49, 48,
	77, 29, 411, 82, 384, 125, 131, 154, 558, 213,
	242, 243, 269, 97, 98, -445, 46, 262, 71, 261,
	470, -641, 469, -498, 529, 473, 479, 523, 89, 273,
	466, 548, 550, 106, 573, 457, 600, 416, 417, 521,
	430, 519, 292, 163, 197, 4, 124, 324, 456, 484,
	277, 276, 540, 291, 465, 387, 87, 635, -669, 2,
	528, -671, 2, 548, 548, 2, -671, 2, -671, 2,
	-671, 2, -672, 548, 597, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 635, 635, -244, -246, -245, 635, 635,
	635, 635, 635, 635, 635, -200, 482, 2, 77, 29,
	29, -386, -388, 562, 252, 156, 370, -243, -245, 2,
	-597, -549, 2, -472, -571, -474, 622, 623, 615, 525,
	70, -352, 346, 601, -486, 131, 563, 364, -570, -475,
	-488, 159, 380, 461, -407, 8, 9, 5, 6, 7,
	-302, -476, -482, 554, 174, 353, -345, 636, 10, 632,
	-594, -245, -487, 38, 216, 68, -553, -344, -303, -525,
	253, -343, -323, -591, -592, 4, -564, -565, -554, -528,
	-536, -532, -533, -539, -293, -567, 80, 115, 116, 114,
	119, 118, 294, 293, 120, 117, 484, 572, 69, 37,
	226, 227, 258, 354, 228, 78, -593, 146, -566, 250,
	251, 499, 54, 419, 184, 130, 129, 356, 59, 57,
	580, -537, 126, 540, 541, 542, 543, 201, 202, 61,
	171, 172, 377, 401, 518, 551, 553, 214, 280, 45,
	110, 197, 247, 230, 257, 259, 263, 281, 284, 325,
	343, 348, 374, 376, 455, 491, -675, 581, 513, 72,
	73, 189, -599, 422, -600, -317, -599, 635, 635, 637,
	635, -377, -379, -381, 2, 29, 143, 632, 2, -503,
	2, -504, -508, -245, 274, -507, 632, -505, 630, -324,
	365, -595, 462, -591, -592, -302, -323, -344, 4, -564,
	-566, 634, -382, 632, 124, 472, 528, 81, 242, 97,
	170, 198, -438, 632, -293, 29, 364, 544, 637, -378,
	409, -484, 632, 364, 367, 196, 367, 63, 305, 2,
	2, 2, 2, 2, 226, -293, 528, 123, 2, 272,
	2, 2, 2, 2, 2, 2, 2, -400, 226, 2,
	-324, 583, -400, 226, 2, -400, 226, 2, -444, 2,
	91, -307, 226, 2, -293, -333, 226, 2, -328, -330,
	-339, 226, 2, -336, -293, -559, 226, 2, -557, 4,
	-564, 120, 484, -472, 2, -140, 2, 63, -293, 583,
	2, 487, 2, 632, -153, 2, 74, 548, 45, 482,
	-154, 2, -458, 2, -459, -289, -290, -291, -515, -292,
	260, 408, 418, 604, 135, 346, 600, -650, 196, 614,
	544, -549, -549, -549, -408, 634, -213, 56, -306, -661,
	-660, -661, -547, 29, -542, 8, -543, 622, 623, -547,
	-547, -661, -661, 2, 2, 2, 2, 2, 2, -508,
	226, -324, 2, -321, -552, 4, -564, -568, -565, -569,
	-567, 29, 32, 33, 34, 36, 38, 39, 40, 42,
	60, 68, 69, 75, 79, 81, 91, 97, 106, 114,
	115, 117, 116, 118, 119, 120, 131, 135, 139, 143,
	144, 148, 152, 156, 174, 176, 189, 193, 196, 212,
	215, 218, 233, 246, 252, 254, 274, 278, 285, 293,
	294, 346, 353, 359, 364, 365, 369, 370, 390, 406,
	425, 451, 477, 484, 502, 522, 528, 538, 544, 546,
	554, 562, 563, 572, 574, 582, 591, 592, 593, 594,
	-570, 80, 2, -508, 226, 2, -327, 226, -508, -330,
	2, -307, 2, -472, -629, 536, 166, 438, 2, -349,
	226, -324, -326, -330, -328, 2, 2, 2, 2, -472,
	2, -561, 2, -556, 10, -555, 5, 4, -564, -568,
	-565, -475, 2, -486, 29, -336, 2, -557, 226, 2,
	29, 29, 583, 409, 254, 544, 637, -399, -341, -342,
	-548, 4, 8, -392, -293, 634, -472, 2, -140, -123,
	2, 189, -472, 226, 2, -140, 226, 2, -472, 226,
	2, -140, 226, 2, -293, 2, -637, 2, -561, 226,
	226, -293, 2, 305, 2, 2, 552, 2, 102, 528,
	123, 2, 442, -657, 464, 556, 2, 2, 2, 2,
	2, 2, 2, 528, -312, 2, -293, 189, -336, 226,
	-337, 2, 478, -670, 422, -557, 226, 2, 583, -328,
	226, 2, -328, 242, 256, -307, 226, 2, 533, 531,
	533, 531, 196, 2, 254, 2, 254, 2, -509, 2,
	-510, -504, -511, 630, 365, -519, 2, -518, -555, 579,
	-111, 632, -111, 632, 482, 632, -561, -324, -324, -472,
	2, -140, -123, 2, -472, 2, -140, 2, -293, 2,
	-137, -561, -136, 632, 196, 573, -293, 2, -472, 2,
	-140, -123, 2, -472, 2, -140, 2, -236, 189, 2,
	124, 528, -200, 2, 189, 574, 2, 8, 2, 233,
	-232, -561, 473, 181, 417, 2, 487, 2, 488, 77,
	-445, 600, 77, 196, 2, 196, 2, -428, 2, 594,
	409, 196, 2, 2, -622, 2, 364, 196, 2, 196,
	2, 196, 2, 196, 2, 196, 2, -199, 483, 549,
	527, 413, 262, 2, -140, 591, -123, 262, 261, -472,
	591, 2, -642, 189, 470, -472, 2, 547, 271, 164,
	196, -428, 2, 196, 2, 196, 2, 5, 2, 43,
	414, 509, 2, 260, 408, 509, 2, 507, 2, -324,
	528, 583, 478, 124, 29, 2, 469, 2, 2, 92,
	93, 196, 2, 196, 2, 211, 196, 2, 430, 196,
	528, -409, 634, 600, 2, -420, -508, -457, -458, -457,
	544, -386, -388, -200, 487, 2, -250, -418, -252, 189,
	-448, -449, -253, 285, 176, 359, -254, -427, 29, 143,
	-427, -427, 63, 633, 633, 11, 12, 79, 43, 622,
	623, 624, 625, 187, 626, 627, 620, 621, 619, 612,
	613, 617, 266, 267, 99, 616, 614, 90, 299, 463,
	177, 178, 179, 180, 439, 240, 35, 241, 14, 15,
	16, -352, 34, 369, 284, 601, 230, 491, 615, 17,
	18, 19, 257, 259, 348, 53, 233, -301, 380, -351,
	525, 70, -472, -472, -472, -472, -472, -472, -472, -472,
	376, 632, -414, -467, 630, -245, 632, 632, 632, 632,
	-548, -245, -472, -486, 633, -405, 632, -245, -486, -481,
	632, 461, 630, 632, -489, -472, 5, 5, 5, 632,
	634, -602, 595, 189, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	403, -530, 632, -529, 632, -529, -529, 584, -527, 632,
	603, 596, 632, -527, 632, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 584, 534, 637,
	-599, -382, 632, -410, -513, -472, 624, -410, -410, 364,
	-402, -472, 110, -431, 263, 325, 197, 281, 455, 247,
	-469, 636, -469, -497, 603, -245, -505, -323, -245, -507,
	632, -503, -497, -112, -548, -95, -108, -117, -140, -156,
	-204, -205, 624, -324, 632, 196, 632, 634, -552, 196,
	-392, -307, -336, -324, -343, -344, -349, -318, -293, 2,
	2, 142, -402, -617, 557, 472, 29, 478, -559, -296,
	39, -483, -522, -523, -573, 636, -572, -525, -535, -531,
	-534, 393, 397, -554, 57, 580, -537, 253, 4, -564,
	-566, 250, 251, 499, 54, 419, 184, 130, 129, 356,
	59, 540, 541, 542, 543, 201, 202, 61, 581, 513,
	72, 73, -617, 557, 472, 29, 478, 189, -559, 189,
	-559, 2, 2, 159, 2, 2, 2, -293, -271, 637,
	67, 448, 159, -400, 226, -271, 159, -271, 159, -350,
	226, -349, -271, 159, -271, 637, 159, -271, 637, 159,
	634, 637, 159, -559, 2, -444, -551, -402, 39, -458,
	2, 131, 4, 5, -673, 637, 283, -355, 298, 345,
	221, 365, 598, 357, 135, -560, 5, 4, -482, -494,
	131, 291, 253, -542, -544, 9, -545, 622, 623, -550,
	-549, 113, 634, -552, -214, 248, 41, -306, -306, -661,
	-661, 8, 8, -661, -661, -306, -306, -268, 440, 485,
	379, -267, 25, 30, 147, 244, 330, 577, 165, -367,
	245, 445, -364, 383, 159, 503, 566, -629, -632, 468,
	536, 166, 438, 94, 357, 485, 379, 440, 159, -424,
	-426, 39, 122, 330, 378, 64, 236, 303, 304, 506,
	446, 588, 159, 485, 379, 440, 379, -15, -282, 25,
	147, -284, -279, 485, 30, -632, 103, 440, 607, 445,
	389, 520, 406, -632, -629, 279, -631, 590, 344, -270,
	503, 566, -629, -632, 468, 440, -269, -369, -364, 383,
	159, 636, 25, 147, 440, 485, 379, -653, -654, 30,
	-263, -262, 25, 147, 485, 569, -266, 233, -265, 25,
	-149, -129, -148, 445, 485, -149, 2, 440, 379, -626,
	-314, -596, 233, 594, 159, -314, -314, -508, 226, -646,
	189, 2, -639, -136, 275, 5, 10, -561, -136, -399,
	637, 637, -552, 624, 470, 469, 159, 159, 159, 159,
	262, 189, 346, 346, 594, 2, 2, 2, 2, 2,
	198, -634, -658, 2, 2, -324, 226, -384, 364, -620,
	-621, 528, -324, 346, 45, -327, 226, 2, -330, 583,
	-626, 346, -329, 226, -324, 39, 632, 346, 2, -444,
	2, 242, -596, 346, -509, -346, -324, -504, -346, 485,
	-317, 39, -469, -324, 633, 637, -519, -519, -561, -223,
	594, 196, 632, -236, 594, 594, 262, -516, 637, -515,
	233, -562, -561, -137, -561, 443, 196, 262, -561, -620,
	-307, 2, -324, 2, 528, 264, -136, 196, 233, -223,
	-561, -561, -561, -551, 29, 488, 2, -199, 483, 549,
	93, 488, 2, -324, 528, 124, 242, 83, -646, 189,
	2, -293, -624, 189, -618, 456, 472, 557, -617, -324,
	124, -324, 124, -324, 124, -324, -324, 2, 2, 2,
	2, 2, 88, 2, -140, -472, 2, 88, 2, 48,
	504, -642, 189, 2, 547, 2, 547, 2, -293, -293,
	-293, 359, 508, 283, 594, -324, -324, -324, -325, -330,
	473, 529, 558, 470, -472, 2, -662, 2, 196, 189,
	2, 528, 242, 528, 242, 124, 196, 77, 124, 29,
	196, 528, 467, 634, 4, -271, 637, -297, -250, -418,
	-551, -419, -418, -251, -250, -253, 189, 418, 567, 330,
	489, 268, -449, -448, 29, -472, -453, 183, 329, -472,
	-451, -474, 622, 623, -543, -545, -401, 357, -244, -244,
	-244, -389, -499, -472, 406, 242, -524, -522, -522, -322,
	-552, 540, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, 284, 230,
	491, 53, 233, -472, 544, -472, -472, -472, -472, 322,
	346, 353, 554, 174, 564, 143, 357, -676, 522, 42,
	-479, -245, -406, 632, -493, 36, 502, 29, -486, 632,
	2, -467, -472, -468, -353, -351, -293, 622, 623, 624,
	625, 626, 627, 612, 613, 614, 14, 15, 16, 617,
	621, 619, 620, 187, 99, 616, 299, 463, 90, 177,
	178, 179, 180, 266, 267, 17, 18, 19, 35, 615,
	-403, -402, -402, 633, 582, 29, 143, 624, 2, 633,
	637, 39, 633, -472, -403, -485, -481, -402, -492, -491,
	591, -439, -440, 599, 308, 127, 224, 306, -441, 476,
	-546, 8, -552, 624, -603, 182, 215, 632, 633, 2,
	633, 2, 633, -472, 2, 633, -472, 2, 633, -472,
	2, 633, -472, 2, 633, 2, 633, 2, -472, -472,
	-472, -472, -472, -472, -472, -402, 8, -546, -546, 540,
	540, -546, -546, -546, -538, 393, 394, 395, 396, 286,
	287, 288, 289, 397, 398, 399, 400, 314, 315, 316,
	317, 310, 311, 312, 313, 318, 319, 320, 321, 206,
	207, 208, 209, 202, 203, 204, 205, -538, -433, 2,
	-540, -402, 4, 599, 308, 127, 224, 306, 476, 5,
	-433, 2, -434, 2, -472, -402, -435, -473, -474, 622,
	623, 615, -352, -436, 2, -472, -403, -472, 60, 278,
	546, -437, -472, 196, -402, -402, 2, -402, 2, -475,
	2, -600, 39, -402, -395, 637, 196, 39, 4, -395,
	-395, 632, 633, 637, -432, 219, 302, 297, 256, -432,
	-503, -431, 263, -429, 374, -429, -429, -497, -308, 630,
	638, -552, -497, -496, -495, 39, -317, 371, -497, -497,
	634, 633, -496, 631, -615, 632, 635, 635, 635, 635,
	635, -324, 632, -402, -552, 634, 510, 2, 633, 257,
	257, 257, 257, 257, 364, 462, 633, 544, -619, -333,
	-339, 529, 2, 594, -110, 366, 633, 637, -394, 38,
	630, 634, -546, 2, 2, -541, 584, 632, 632, -440,
	632, 196, -619, -339, 529, 2, -625, -393, -393, 544,
	-293, 2, -324, -400, -271, 159, -400, -400, -271, 637,
	159, -307, -328, -333, -336, -339, -293, -557, -559, -271,
	-329, -650, 633, 548, -459, -354, 418, 501, 441, 480,
	524, 9, 9, 637, -552, -215, 471, 330, -306, -306,
	-306, -306, 637, -651, 97, 544, 81, 632, 472, -286,
	292, 544, -463, 226, 81, -574, 97, -310, -575, -293,
	75, 563, 406, 193, 157, -651, 97, 406, -651, 97,
	2, 244, 97, 485, 508, 632, 29, 63, -508, 43,
	43, 29, -630, -631, 279, 196, 600, 528, 242, 472,
	544, 544, -508, -426, -522, 122, 303, 304, 63, -547,
	-547, 63, -547, -547, -547, 594, -547, 594, -327, -508,
	472, 544, 544, 544, 428, 519, 428, 519, -279, -154,
	519, 544, 544, 29, -200, 449, 131, -674, 614, 428,
	279, -631, 544, 196, 637, 43, 43, 29, -630, 196,
	544, -349, -308, 578, 44, 578, 44, 578, 544, 44,
	472, 544, 637, 44, -262, -620, -620, -222, -221, -293,
	5, -392, -265, -561, -264, 328, 77, 544, 544, -15,
	485, -627, -298, 109, 336, 296, 337, 101, 333, 100,
	332, 107, 334, 108, 335, 585, 349, 586, 350, 66,
	331, 307, 338, 505, 339, 587, 351, -299, -300, 150,
	385, 576, 124, -557, -15, -15, 485, 379, 440, 159,
	-647, 233, 29, -636, 233, -516, 233, -516, -341, -293,
	634, -140, -472, -472, -140, -472, -140, 48, 159, 159,
	2, 2, -670, 272, 632, -358, 346, 196, -392, -517,
	637, 254, -324, 175, 159, -557, -425, -424, 346, -329,
	226, 2, 159, -382, 346, 153, 632, 416, 2, 159,
	-309, 226, -294, -293, -444, -273, 532, 159, -422, 574,
	-454, -140, 632, 131, 39, -454, -411, -412, -514, -413,
	-310, 632, -317, -469, -111, -518, 633, 633, 633, -222,
	368, -236, -383, -311, -310, 123, 420, 420, -229, 594,
	-136, -137, 633, 637, -516, 233, 511, -137, -561, -223,
	-223, -516, -516, -324, 189, -561, -136, -223, -223, -223,
	2, 2, 2, 2, -428, -324, -307, -349, -324, -335,
	233, 29, 634, -559, -559, -339, -340, -338, -293, -333,
	-428, -307, -428, -307, -428, -307, -428, -428, -140, -472,
	508, 2, 482, 189, 189, 634, -428, 8, -385, 451,
	5, 2, 416, 124, 528, 383, 242, -324, -349, -324,
	-349, -307, 124, -307, 125, 124, -324, 4, -508, -419,
	-251, 365, 268, 489, -451, -452, -474, 461, 462, -452,
	461, 462, 8, 9, 8, 9, -255, 493, 352, -400,
	637, -260, 40, 139, 268, -324, 600, 155, -472, -472,
	544, -676, 522, -479, 155, -472, 322, 353, 554, 174,
	564, 143, 357, 196, 632, -473, -473, 633, -404, -472,
	-472, 631, 640, 633, 634, 633, -388, 637, -386, -472,
	-402, -402, 633, 634, -402, -392, 631, 631, 637, 633,
	-490, -491, 148, -472, 544, 544, 544, 544, 632, 633,
	634, -608, 375, 632, 632, -472, 633, 633, 633, 633,
	39, 637, 637, 637, 633, 637, 637, 637, 633, 633,
	633, 637, 633, 600, 600, 633, 633, 633, 633, 637,
	633, 637, 633, 196, 633, 633, -442, 390, 633, 11,
	12, 622, 623, 624, 625, 187, 626, 627, 620, 621,
	619, 612, 613, 614, 90, 299, 463, 14, 15, 16,
	-352, 257, 233, -473, -473, -473, -473, 633, -477, -478,
	196, 189, 39, -437, -437, -437, 633, 196, -402, 633,
	633, 632, -601, 301, 346, 633, -466, -465, 592, -513,
	-396, 2, -503, -319, -552, -466, -466, -402, -472, 263,
	263, -430, 574, 364, -432, -503, -496, -548, -471, -470,
	191, 40, 139, 340, 341, 342, 229, 192, -496, -317,
	-382, -496, -496, -552, -497, -497, -495, 633, -616, -548,
	633, -397, -506, -595, -388, 634, -552, -233, -596, -201,
	5, 353, -201, -201, -201, -201, -324, -559, 544, 544,
	233, 26, 391, -522, 630, 631, 8, -552, 632, -546,
	-546, -546, -559, 196, 196, 233, 364, 196, -557, 2,
	-271, -400, -271, -271, -349, -350, -271, -271, -271, -423,
	594, -549, -458, 561, 86, 418, 540, -549, 121, 471,
	-267, 440, 485, -310, -310, -324, -240, -239, -237, -293,
	5, -334, -293, 210, 429, -557, 346, -463, 226, -272,
	346, 226, -318, -522, 632, -446, 596, 268, 268, 574,
	-310, -318, 268, 226, -310, 226, -318, 2, -318, -628,
	418, 358, -472, -238, -237, 63, -365, 290, 416, 347,
	-268, 440, 485, 379, -140, -140, -140, 632, -650, 574,
	142, -324, -349, -324, -334, -557, -329, 485, 379, 440,
	343, -343, -547, -547, -547, -424, 485, 379, 440, -334,
	-557, -327, -557, -278, 226, -293, 428, -278, 226, 428,
	428, 472, -307, 428, 600, 47, -674, 544, 196, -472,
	-472, -269, -140, -140, -140, 632, -308, -270, 440, 5,
	226, -310, 5, -310, 226, 5, -293, -310, -334, -557,
	-654, 25, 147, -310, -223, 637, 614, 614, -266, 614,
	-334, -557, -298, 385, -561, 353, 570, -307, -626, -314,
	472, 544, 544, -508, -643, -644, 212, 454, 472, 457,
	-559, -136, -226, 594, -136, -220, 237, 624, -623, -561,
	-293, 583, -293, -356, -359, -357, -310, -464, -463, -578,
	-579, -574, 284, 242, 563, 256, 175, 97, -241, -242,
	596, 594, 159, -347, -324, 630, -223, -621, -561, 175,
	-315, -293, -336, -337, 159, -382, 346, -557, 39, 159,
	632, 2, 2, -328, 364, 346, -309, 226, -274, 149,
	-674, -307, -466, -396, -421, -456, 451, 364, -383, 579,
	-317, -421, -398, 637, 196, 614, 634, -383, -512, 624,
	-111, -111, -223, 632, 632, -561, 633, 637, 634, 632,
	614, 614, -231, 368, -230, 151, 270, 255, 495, 496,
	497, 498, 141, 494, 128, 327, 238, 534, -516, -561,
	-229, -137, 196, -516, 233, 196, -71, 594, 528, 233,
	-223, 636, 472, 457, -293, 634, -428, -428, -428, 482,
	482, -293, 189, -392, -320, -552, -307, -324, -321, -349,
	189, 189, -307, -307, 567, -452, 365, 295, -499, -261,
	602, -324, 636, -472, -472, 155, 155, -472, -473, -473,
	-472, 155, 196, 632, -472, -483, 34, 34, 633, 637,
	-468, -472, -351, 633, 582, -388, -388, 633, 624, -552,
	636, 633, -481, 152, -472, 538, 308, 224, 306, -441,
	306, -441, -441, -546, 5, -552, 624, -609, -313, 632,
	-293, 592, -387, 370, 633, -524, -522, -472, -472, -472,
	-472, -472, -546, -527, -527, -542, -542, -472, -477, -472,
	-524, -522, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, 143, 346, 357, -473, -478, -477, -472, -472,
	-522, 633, 633, 633, -402, -110, 632, 301, -415, 215,
	-472, -516, 637, -415, -415, 633, -503, -503, 632, -472,
	263, 631, 637, 639, 614, 614, -382, 634, -495, -496,
	631, 633, 637, 633, 637, -455, 39, 633, -552, -466,
	-235, -234, 140, 56, 111, 138, 353, 361, 195, 220,
	415, 155, 190, 149, 257, -645, 594, -559, -559, 472,
	367, 5, 8, 630, 631, 634, -546, 633, 633, 633,
	-559, -559, 472, -617, 557, 472, 29, -559, -271, -271,
	123, 330, -472, -212, 594, 596, 544, 544, 633, 637,
	614, 63, 233, 159, 346, 576, 346, -575, 157, -580,
	-472, 632, 242, 632, 632, 2, -257, -258, -259, 147,
	485, 25, -652, 2, 574, 159, -271, 159, -271, 598,
	633, 637, -365, 632, 632, 544, 472, -286, 544, 594,
	-402, -472, -224, 131, -551, -632, 636, -632, 636, 472,
	544, 544, 472, 544, 544, 346, -293, 159, -293, -293,
	594, 173, 173, 600, -278, -472, -472, 189, 544, 594,
	-402, 544, -526, 51, 27, 346, -328, -271, 159, 544,
	544, 557, 485, -221, -561, -561, -136, -561, -561, 353,
	-15, -334, -557, -329, 485, 379, 440, -625, -625, 212,
	-339, -647, -516, -228, 368, -227, 151, 453, 141, 270,
	238, -516, -226, 196, 254, 594, -329, 2, 633, 633,
	637, 637, -581, -272, -324, -309, 242, 242, -316, -294,
	39, 361, 361, 632, -324, -91, 594, -515, -548, -315,
	45, -327, 39, 159, -626, -140, -329, -520, -521, 5,
	39, -324, 159, 364, 346, -275, 277, -674, -556, -596,
	-388, -421, -410, 347, 95, 633, -466, -412, -396, -472,
	2, 633, -222, -561, -223, -236, -311, 2, -562, -561,
	-561, 637, 632, 614, 614, 614, 614, 614, 614, 614,
	-229, -516, -136, -229, -137, -140, 368, -324, -136, 624,
	-334, -335, 624, -428, 5, -371, -370, 383, 357, -371,
	461, 461, 365, 183, 273, -260, -308, -472, -472, 155,
	34, 34, -472, -472, -483, 633, -472, -472, -402, 631,
	5, -472, 633, 633, 8, -472, 633, 634, -610, -293,
	-472, 633, 63, 633, 633, 637, 637, 633, 633, 633,
	633, 633, 633, 633, -478, 196, 143, 357, 632, 633,
	633, -110, -480, 218, 63, -503, -480, -480, -430, -392,
	-503, -470, -308, 630, -308, 630, -552, -548, -506, 632,
	634, -234, 614, -561, -561, 2, 2, 2, 5, 5,
	415, 346, 353, 5, -201, 212, -645, -645, 594, -339,
	631, 2, 630, -552, 633, -339, 196, -619, -339, 529,
	123, 189, 223, 223, -310, -310, -239, -549, 528, 461,
	-278, 406, -463, 159, 159, -582, 97, -584, 79, 175,
	106, 346, 353, 563, 406, 75, 131, 364, 425, -664,
	-665, -666, 39, 605, 606, 633, -390, -500, -595, 632,
	-293, -390, -392, 346, 516, 131, 364, 346, 131, 364,
	589, 123, 2, 557, 82, -310, -318, -237, -392, -392,
	-324, -334, -557, 167, 633, 637, 614, 2, 624, 624,
	-334, -557, -329, -334, -557, -327, 159, 579, -278, 579,
	381, 173, 544, -140, -472, 167, 633, -308, 5, 5,
	159, -305, 79, -310, 5, -310, -328, 123, 594, 472,
	544, 544, 364, 364, 367, -643, -644, -226, 637, 632,
	614, 614, 614, -226, -562, -136, 2, -382, -372, 244,
	-310, -579, -576, -577, 406, -464, -583, -585, 175, 406,
	-360, 632, -309, -294, 632, -140, 2, -240, 632, -358,
	368, 631, -557, -425, -140, -329, -380, 594, -382, 633,
	637, 153, -447, 574, -308, -324, 159, -276, 276, -674,
	-556, -273, -450, -448, 144, 632, 364, -140, -388, 614,
	633, 633, 123, 633, -230, -231, -561, -136, -561, -561,
	-561, -136, -561, -229, -516, -516, -72, -73, 242, 97,
	388, -223, -321, 528, 242, 632, 632, -260, -472, -472,
	-472, 633, -388, -552, 624, -604, 383, 633, -499, -472,
	-472, -473, 196, 632, -483, 633, -605, 593, -472, -416,
	-417, -472, 459, 112, 216, -605, -605, 633, -548, -548,
	2, -561, 2, 2, 353, 2, 2, 367, 2, 544,
	630, 2, 196, -559, 196, 196, 233, -140, 233, 39,
	428, -463, -318, -318, -322, -315, 175, 226, 353, 589,
	-446, 268, 632, -473, 567, -324, 632, 2, 225, 225,
	31, 63, -667, 135, 246, 633, 637, -501, -304, -293,
	-472, -501, 633, 633, 353, 567, 353, 589, -472, 567,
	-522, 632, -271, -271, 633, 633, -472, 544, -551, 104,
	-549, 2, -632, -278, -392, -392, -307, -472, 189, -472,
	544, 5, -271, -322, -271, -271, -305, 557, 363, -334,
	-557, -329, -648, 529, 479, 558, 473, 199, 460, -648,
	189, -227, -228, -561, -136, -136, -226, 39, -366, -367,
	2, -581, 268, -315, 268, 235, 158, -390, 632, 632,
	-392, -663, 594, 633, -356, -241, -92, -93, 545, -515,
	-382, 330, 123, 39, 5, 632, 632, -293, 364, 632,
	-308, -288, 96, -674, -556, -274, -421, 347, -392, 97,
	-450, -479, -223, 632, -223, 633, -649, 39, -229, 637,
	29, 632, 29, 632, -324, -349, -402, -402, 633, -388,
	63, 637, 633, 633, -473, -483, 633, -606, -607, -313,
	637, 632, 632, 486, 631, 631, 2, -559, 2, -559,
	-559, -559, 472, -278, 406, -293, -575, -584, -315, 346,
	-242, 574, 594, -472, -473, -295, 632, -472, 632, 632,
	39, 131, 246, 136, 231, -462, -668, 105, 517, 234,
	-500, -260, 633, -461, 574, 425, -473, -305, -390, 632,
	632, 632, 614, 196, -140, 632, -526, -271, -328, 614,
	544, 2, 2, 196, -625, 633, -638, 423, -140, -241,
	632, -242, -361, 84, 98, 132, 225, 200, 243, 508,
	514, 29, -361, 633, -390, -390, 633, -362, 364, 123,
	330, 633, 39, -93, 9, 39, 123, -140, -520, -390,
	-324, -390, 364, -280, -279, 285, -556, -275, 633, -318,
	-421, -562, 534, -73, -392, -392, 633, 633, -611, 416,
	462, 217, -402, -389, 633, 637, 39, -417, 2, 2,
	2, -645, -339, 428, -272, 159, 219, 633, -586, 300,
	-293, 633, -425, -425, 39, 136, 231, -368, -364, 632,
	-261, -501, -242, 219, -324, -633, 574, 633, -374, -373,
	-370, -376, -375, -370, -402, -549, 104, 381, -402, -305,
	-136, -559, -559, 364, -640, 197, -639, 5, 10, -362,
	-391, -502, -310, -461, 633, 633, 85, 123, -372, -140,
	-140, 2, -380, 633, 633, -447, 633, -324, -277, -563,
	428, 430, -674, -276, -466, 144, 633, -548, 4, 633,
	633, 633, -612, -613, 53, 560, 113, -472, -612, -612,
	-607, -609, 196, 175, -460, 603, -587, -590, -589, 610,
	492, 197, 382, 633, 516, 588, 633, 633, -667, -392,
	-460, -382, -472, -461, 633, 637, 579, 633, 637, 579,
	633, 196, 633, -271, -645, -271, -648, -225, 594, 48,
	-287, -286, 633, 637, -462, -461, -368, 405, 137, 147,
	-366, -663, -461, 632, -462, 632, -285, -284, -674, -542,
	-288, 144, 347, 567, -223, -614, 157, -613, 402, 188,
	461, 402, 188, -614, -614, -559, -315, -242, 58, -589,
	610, -590, 610, 567, 137, -466, 633, -586, -242, -373,
	233, -375, 196, 381, 196, 469, -639, 31, -242, -502,
	-368, -462, -242, 462, 462, 2, -241, -362, -462, -390,
	-368, -390, -281, -282, -283, -392, -280, 347, 567, 485,
	113, 215, 539, 330, 34, 614, -588, 330, 448, 67,
	485, -588, -587, 632, 632, -559, 368, -242, -368, -466,
	2, -362, -368, 633, -242, 633, -558, 379, -277, 485,
	-411, 461, 372, -613, -472, 24, 353, 131, -667, -402,
	-402, -271, -222, 632, -466, -242, -287, -242, -461, -466,
	-462, -674, -285, -411, -466, 633, 633, -222, -466, -466,
	-462, -368, -557, -281, -466, -363, -364, 544, 633, -368,
	-242, 632, -242, -466, -402, -466, 633, -363,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 591, 592, 594, 595,
	596, 598, 599, 601, 603, 605, 606, 607, 609, 610,
	612, 613, 614, 615, 616, 618, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 707, 709, 0, 1558, 1560, 1562, 1564, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	375, 377, 379, 381, 0, 413, 415, 416, 418, 420,
	421, 423, -2, 0, 524, 525, 527, 529, -2, 0,
	1138, 1140, 1142, 0, 695, 697, 0, 1145, 1147, 1149,
	0, 0, 719, 720, 0, 1672, -2, 711, 713, 715,
	717, 794, 796, 798, 800, 802, 804, 806, 808, 810,
	812, 813, 815, 817, 819, 821, 823, 824, 826, 828,
	830, 831, 833, 834, 836, 838, 840, 842, 844, 846,
	848, 850, 852, 854, 856, 858, 860, 862, -2, 865,
	866, 867, 869, -2, -2, 0, -2, -2, -2, 1576,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 474, 476, 478, 480, 482, 485, 487, 489,
	1730, 531, 533, 535, 537, 539, 541, 543, 0, 0,
	-2, 1744, 0, 0, 956, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 82, 127, 128, 129, 130, 131,
	132, 133, 86, 87, 88, 90, 91, 92, 93, 97,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 107,
	108, 109, 124, 125, 84, 0, 0, 1703, 1705, 1707,
	1709, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 33, 35, 37, 39,
	593, 597, 600, 602, 604, 608, 611, 617, 619, 621,
	576, 577, 580, 2444, 2462, 2463, 2464, 2467, 2468, 2469,
	2470, 2471, 2472, 2957, 3038, 3039, 2494, 2495, 2496, 2497,
	2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517,
	2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527,
	2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537,
	2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547,
	2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557,
	2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567,
	2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577,
	2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587,
	2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597,
	2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607,
	2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617,
	2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627,
	2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637,
	2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647,
	2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657,
	2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667,
	2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677,
	2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687,
	2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697,
	2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707,
	2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717,
	2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727,
	2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887,
	2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897,
	2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907,
	2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917,
	2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927,
	2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 578,
	579, 1332, 0, 660, 658, 2427, 661, 2741, 663, 665,
	518, 519, 520, 521, 522, 523, 0, 688, 674, 1742,
	689, 691, 692, 693, 694, 655, 653, 0, 693, 688,
	2499, 686, 1556, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 453, 1394, 1395, 1396, 1541,
	1542, 2794, 1583, 0, 259, 708, -2, -2, 2922, -2,
	748, 749, -2, -2, 763, 767, 758, 2926, 0, 2797,
	2780, -2, 770, 1559, 1561, 1563, 870, 871, 872, 2448,
	876, 874, 886, 887, 890, 0, 907, -2, 0, 2495,
	2764, -2, -2, 908, 909, -2, -2, -2, -2, 888,
	889, 0, 0, 0, 0, 0, 44, 46, 48, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 269, -2, -2, -2, -2, 0, 0, 2845,
	2554, 2395, 2464, 2398, 2393, 376, 378, 380, 382, 383,
	0, 0, 0, 0, 0, 0, 0, 414, 417, 419,
	422, -2, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 1212, 1204, 1205, 1461, 0, 0,
	0, -2, 526, 528, 581, 582, 0, 1731, 1731, 589,
	590, -2, 0, 0, 0, 0, 337, 327, 1139, 1141,
	1143, 1144, 0, 0, 0, 0, 0, 696, 698, 0,
	0, 2839, 301, 1146, 1148, 1150, 1151, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 712, 714, 716, 718,
	795, 797, 799, 801, 803, 805, 807, 809, 811, 814,
	816, 818, 820, 822, 825, 827, 829, 832, 835, 837,
	839, 841, 843, 845, 847, 849, 851, 853, 855, 857,
	859, 861, 863, 864, 915, 0, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1025, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 0, 1117, 0, 0, 918, 921, 922, 923, 924,
	925, 926, 0, 998, 1023, 1024, 1034, 868, 0, 1375,
	1732, 1585, 1566, 1580, 1585, 1568, 1569, 1570, 1571, 1572,
	1577, 1579, 1573, 1574, 1575, 50, 52, 54, 56, 58,
	60, 62, 64, 66, 68, 70, 72, 475, 477, 479,
	481, 483, 486, 488, 490, -2, 1701, 1702, 532, 534,
	536, 538, 540, 542, 544, 699, 0, 702, 0, 920,
	701, -2, 0, 1736, 1736, 1736, 0, 0, 1702, 1700,
	0, 705, 706, 774, 775, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 2269, 2097, 0, 776, -2, 2130,
	2132, 2897, 2714, 2922, 2268, 2134, 2135, 2136, 2137, 2138,
	0, 2140, 2141, 2142, 2143, 2144, 2145, 0, 2147, 0,
	2152, 2153, 2154, 0, 2904, 2372, 2458, -2, 0, 0,
	2910, 2454, 0, 2235, 2170, -2, -2, 2481, 2460, 1941,
	1942, 1943, 1944, 1945, -2, -2, 2940, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 0, 2885,
	2905, 2906, 2911, 2913, 2907, 2894, 2195, 2568, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1968, 1977, -2, -2, -2, -2, -2, -2, -2,
	2898, 2899, 2916, 2919, 2925, 2930, 2931, 2903, 2912, 2939,
	2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950,
	2951, 2952, 2953, 2954, 2955, 2956, 1969, -2, -2, -2,
	-2, 0, 1719, 2757, 1722, 1332, 1720, 1704, 1706, 0,
	1708, 0, 0, 0, 1713, 1739, 1737, 0, 1788, 1717,
	1718, 1811, 1811, 1835, 0, 1816, 0, 1835, 1731, 1862,
	0, 1822, 2785, 2171, 2172, 0, 2464, 2459, -2, -2,
	2937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 656, 0, 662, 664, 0, 0, 0, 687,
	1741, 0, 0, 0, 0, 0, 0, 0, 0, 456,
	457, 458, 459, 460, 2905, 0, 0, 0, 465, 0,
	467, 468, 469, 470, 471, 472, 473, 229, 2905, 549,
	574, 0, 229, 2905, 552, 229, 2905, 555, 0, 558,
	1459, 229, 2905, 561, 2423, 229, 2905, 564, 566, 2431,
	229, 2905, 570, 2438, 2436, 571, 0, 573, 249, 245,
	246, 247, 248, 1552, 1553, 1554, 1555, 0, 1582, 1460,
	710, 0, 736, 0, 746, 747, 2893, -2, 0, 2806,
	751, 752, -2, 754, 1586, 1590, 1591, 1592, 1593, 1594,
	0, 0, 0, 0, 1599, 0, 0, 0, 0, 743,
	744, 761, 762, 768, 771, 0, 879, 875, 891, 0,
	906, 0, 907, 907, 2412, 2403, 2404, 0, 0, 907,
	907, 0, 0, 910, 911, 912, 913, 914, 83, 0,
	2905, 1862, 85, 0, 2417, 2489, 2490, 2491, 2492, 2493,
	2938, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966,
	2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
	2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986,
	2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996,
	2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006,
	3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016,
	3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026,
	3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036,
	3037, 2940, 89, 0, 2905, 94, 0, 2905, 0, -2,
	110, 0, 126, 0, 153, -2, -2, -2, 134, 0,
	2905, 0, 2392, -2, 0, 241, 328, 329, 330, 0,
	637, 0, 646, 340, 341, 2477, 2478, 2485, 2486, 2487,
	2488, 0, 739, 2269, 0, 0, 1176, -2, 0, 1388,
	1390, 1390, 0, -2, 0, 0, 0, 1127, 2389, 2394,
	1128, 1129, 2413, 1130, 2399, 0, 384, 385, 386, 387,
	388, 0, 389, 2905, 391, 392, 0, 394, 395, 2905,
	397, 398, 0, 400, 0, 402, 0, 281, 285, 2905,
	2905, 426, 429, 0, 431, 432, 0, 434, 0, 0,
	0, 438, -2, 454, 0, 451, 441, 442, 444, 445,
	446, 447, 448, 0, 494, 492, 2428, 0, -2, 2905,
	0, 1173, 0, 0, 1439, -2, 0, 1381, 0, 1446,
	2905, 1442, 0, -2, 0, 1729, 2905, 1603, 1208, 1209,
	1210, 1211, 1874, 515, 0, 1636, 0, 1638, 0, 1658,
	1868, 1811, 0, 0, 1873, 0, -2, 634, 2447, -2,
	584, 0, 585, 0, -2, 0, 354, 0, 0, 1154,
	1156, 1157, 1159, 1160, 1163, 1164, 1165, 1166, 0, 1168,
	1848, 302, 304, 0, 0, 0, 0, 1153, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 0, 0, 721,
	0, 0, 916, 917, 0, 0, 933, 934, 935, 0,
	0, 354, -2, -2, -2, 943, 0, 950, 953, -2,
	0, 0, 0, 0, 960, 0, 965, 966, 967, 0,
	-2, 0, 974, 976, 1137, 978, 0, 0, 980, 0,
	984, 0, 987, 0, 989, 0, 991, -2, -2, -2,
	999, 1000, -2, 1005, -2, 0, 1009, -2, 0, 1012,
	0, 1015, -2, 0, 1025, 1021, 1022, 0, 0, 0,
	0, 1042, 1043, 0, 1052, 0, 1055, 1056, 1057, 0,
	0, 1062, 1063, 0, 1065, 1066, 1067, 1069, 1070, 1071,
	0, 2874, 2803, 2554, 0, 1079, -2, 1085, 1087, 0,
	-2, 0, 1103, 0, 1107, 0, 0, 1116, 0, 0,
	0, 919, 0, 927, 928, 229, 1866, 1565, -2, 1567,
	0, -2, 0, 700, 0, 704, 1761, 1687, 1684, 0,
	1758, 1759, 1688, 0, 0, 0, 1695, 0, 1734, 1735,
	0, 0, 0, 1674, 1675, 0, 0, 0, 0, 2274,
	2275, 2276, 2277, 2290, 2278, 2279, 2289, 2287, 2288, 2280,
	2281, 2286, 2300, 2301, 2291, 2292, 2282, 2295, 2293, 2294,
	2296, 2297, 2298, 2299, 0, 0, 2305, 0, 2283, 2284,
	2285, 2313, 0, 0, 2314, 0, 2316, 0, 2306, 2302,
	2303, 2304, 0, 2076, 2078, 2380, 0, 0, 0, 2312,
	2307, 2308, 2014, 2015, 2016, 2017, 2018, 2051, 2055, 2056,
	0, 0, 2131, 2377, 2376, 2133, 0, 0, 2328, 0,
	2146, -2, 0, 2269, 2323, 0, 0, 2155, 2156, 2157,
	0, 0, 2328, 0, 0, 2371, 2167, 2168, 2006, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1955, 1954, 0, 1956, 0, 1957, 1958, 1965, 1978, 0,
	0, 0, 0, 1982, 0, 0, 0, 0, 0, 0,
	0, 2352, -2, 0, 0, 0, 0, 1970, 0, 0,
	1721, 0, 0, 1792, 2381, 2385, 2386, 1792, 1792, 0,
	0, 2329, 1859, 1859, 0, 0, 1854, 1854, 1854, 1852,
	1835, 0, 1835, 1845, 0, 1835, 1835, 0, -2, 1816,
	0, 0, 1845, 0, 1829, 622, 624, 626, 628, 629,
	630, 632, 1863, 1864, 0, 0, 0, 0, 2465, 0,
	0, 0, 0, 0, 0, 2450, 0, 0, 2422, 409,
	410, 0, 0, 0, 2856, 2797, 0, -2, 667, 690,
	1731, 0, 2331, 1889, 1893, 0, 1895, 1896, 1897, 1898,
	1899, 0, 0, 1890, -2, 1966, 1968, 1989, 2482, 2483,
	2484, 1949, 1950, 1951, 1952, 1953, 1961, 1948, 1948, 1948,
	1959, 1988, 1980, 1988, 1984, 1934, 1935, 1936, 1971, 1972,
	1973, 1974, 0, 2856, 2797, 0, -2, 0, 677, 0,
	0, 1669, 455, 0, 462, 463, 464, 0, 545, 0,
	227, 228, 0, 229, 2905, 550, 0, 553, 0, 229,
	2905, 2387, 559, 0, 562, 0, 0, 568, 0, 0,
	0, 0, 0, 229, 1671, 0, 0, 0, 0, -2,
	756, 764, 765, 766, 0, 1588, 0, 1595, 785, 786,
	787, 1597, 1598, 0, 1600, 759, 788, 789, 790, 791,
	792, 793, 0, 2401, 2402, 2407, 2408, 0, 0, 757,
	778, 760, 0, 772, 882, 877, 878, 892, 893, 0,
	0, 2405, 2406, 0, 0, 898, 899, 135, 1538, 0,
	0, 182, 0, 1538, 1538, 0, 0, 0, 0, 210,
	0, 0, 1242, 0, 0, 0, 0, 153, 167, 178,
	147, 148, 149, 0, 0, 0, 0, 0, 0, 95,
	1354, 0, 1357, 0, 0, 0, 0, 0, 0, 0,
	1370, 1373, 0, 0, 0, 0, 0, 112, 113, 0,
	0, 118, 119, 0, 0, 166, 0, 0, 0, 0,
	0, 1633, 0, 157, 153, 0, 0, 152, 154, 137,
	0, 0, 153, 168, 180, 0, 216, 218, 1239, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 251, 0,
	636, 638, 0, 0, 0, 0, 644, 0, 647, 0,
	737, 741, 742, 0, 0, 738, 740, 0, 0, 1382,
	0, 0, 0, 1728, 0, 0, 0, 0, 2905, 1536,
	0, 1519, 0, 1848, 2643, -2, -2, 302, 1848, 1126,
	0, 0, 2465, 2397, 0, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 430, 433, 435, 436, 437,
	0, 1438, 0, 443, 484, 1301, 2905, 0, 0, 513,
	506, 0, 509, 0, 0, 1353, 2905, 1351, 2432, 0,
	1379, 0, 1332, 2905, 2430, 0, 0, 0, 1447, 2474,
	1456, 1460, 1621, 0, 517, 0, 1639, 1641, 0, 0,
	1869, 0, 1871, 1811, 1731, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 1167, 311, 0, 1847,
	0, 0, 342, 1848, 302, 2770, 0, 1152, 354, 354,
	1848, 723, 1848, 725, 0, 0, 936, 0, 0, 939,
	354, 354, 354, 948, 949, 951, 952, -2, -2, -2,
	-2, 954, 955, 1049, 0, 0, 0, 1048, 1534, 0,
	970, 973, 977, 0, 1120, 2780, 2797, 2856, 1135, 1049,
	2554, 1049, 2554, 1049, 2554, 1049, 1049, 993, 1037, 1045,
	1004, 1011, 0, 1006, 1010, 1013, 1016, 0, 1018, 1026,
	0, -2, 0, 1029, 0, 1031, 0, 1033, 1049, 1050,
	1053, 0, 1061, 1064, 0, 1072, 1073, 1074, 1075, 2445,
	1076, 1077, 1078, -2, 1082, 1083, 0, 1094, 1099, 1100,
	1096, 0, 0, 0, 0, 0, 0, 1110, 1111, 0,
	0, 0, 1119, 0, 929, 1374, 0, 1578, 1761, 1687,
	703, 1678, 1760, 1679, 1686, 1689, 0, 0, 1691, 0,
	1693, 0, 1756, 1757, 1764, 1765, 0, 1775, 1776, 1768,
	0, -2, 0, 0, 1771, 1772, 1697, 0, 1714, 1715,
	1716, 1745, 1748, 1475, 0, 3038, 2010, 1884, 2011, 2012,
	2416, 0, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, -2, -2, -2, -2, -2, -2, -2, -2,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, -2, -2, -2, 2052, 2053, 2054, -2, 2315, 2317,
	0, 2380, 0, -2, 0, -2, -2, -2, -2, 2073,
	0, 2075, 2080, 2082, 2084, 0, 0, 0, 0, 2379,
	2094, 2363, 2364, 0, 0, 2271, 2272, 2273, 2079, 0,
	2098, 2378, 2375, 0, 0, 2309, 0, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	0, 2327, 1744, 2159, 0, 0, 0, 0, 2166, 2151,
	2325, 0, 2324, 0, 0, 0, 2335, 0, 2370, 2366,
	0, 2414, 2005, 1992, 1993, 1994, 1995, 1996, 1997, 2007,
	0, 2411, 2451, 2457, 2245, 0, 0, 0, 2196, 2197,
	2198, 2199, 2200, 0, 2202, 2203, 0, 2205, 2206, 0,
	2208, 2209, 0, 2211, 2212, 2213, 2214, 2215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 0, 0, 2217,
	0, 2338, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2219, 0, 2221, 2329, 2349, 0, 0, 2099, 0,
	0, 0, 0, 0, 2224, 2329, 2357, 0, 0, 0,
	0, 0, 2329, 0, 2362, 0, 2231, 0, 2233, 957,
	958, 1723, 0, 0, 1879, 0, 0, 0, 2384, 1879,
	1879, 0, 1787, 0, 0, 1855, 1856, 1857, 1858, 0,
	0, 1859, 0, 1849, 1853, 1850, 1851, 1845, 1808, 0,
	0, 2418, 1845, 1814, 1844, 0, 1332, 1834, 1845, 1845,
	0, -2, 1818, 1835, 0, 0, 623, 625, 627, 631,
	633, 0, 0, 1744, -2, 0, -2, 356, 1331, 0,
	0, 0, 0, 0, 0, 657, 659, 0, 0, 565,
	0, 0, 673, 0, 651, 0, 654, 0, 1880, 1883,
	0, 0, 1894, 1900, 1901, 0, -2, 0, 0, 1990,
	0, 0, 0, 0, 0, 685, 0, 688, 0, 0,
	0, 466, 575, 229, 547, 0, 229, 229, 556, 0,
	0, 229, 567, 229, 2439, 229, 2437, 250, 572, 1670,
	262, 0, 745, 0, 1587, 1596, 0, 782, 0, 784,
	0, 2409, 2410, 0, 773, 0, 880, 0, 894, 895,
	896, 897, 0, 0, 0, 0, 1537, 0, 0, 1482,
	0, 0, 186, 2905, 0, 231, 0, 0, 1294, 2424,
	0, 1284, 0, 0, 2576, 0, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 150, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 1355, 1356, 1358, 1365, 1367, 0, 1361,
	1362, 0, 1364, 1366, 1368, 0, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 1391,
	0, 0, 0, 1392, 1393, 1609, 1610, 0, 1632, 1633,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	0, 0, 2391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 354, 641, 642, 350, 347,
	349, 643, 648, 0, 649, 0, 0, 0, 0, 1384,
	0, 1434, 1432, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 0,
	0, 0, 0, -2, 1386, 1387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 345, 2390, 2400,
	0, 1161, 1162, 390, 393, 396, 399, 268, 0, 0,
	428, 439, 0, 0, 1214, 1186, 0, 0, 493, 354,
	0, 0, 508, 0, 2443, 1171, 1349, 1352, 0, 1332,
	2905, 1402, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 2905, 2419, 2473, 2474, 1623, 1633, 0, 1879, 0,
	1656, 1642, 0, 0, 0, 1656, 1660, 1661, 1663, 1664,
	0, 0, 1870, 1876, 583, 635, 1731, 1731, 354, 352,
	2717, 0, 0, 1645, 1647, 0, 0, 0, 294, 0,
	305, 1848, 303, 0, 311, 0, 0, 1848, 302, 0,
	505, 722, 727, 931, 0, 0, 354, 940, 941, 942,
	995, 1039, 1047, 1098, 959, 961, 962, 963, 0, 968,
	0, 0, 0, 1136, 1131, 1132, 1133, 2440, 2436, 1134,
	979, 1049, 982, 1049, 985, 1049, 988, 990, 1008, 1014,
	1027, 1020, 1028, 0, 0, 0, 1041, 0, 1059, 0,
	1068, 1081, 0, 0, 0, 0, 0, 0, 0, 1104,
	1105, 1106, 1108, 1113, 1112, 0, 1118, 930, 1867, 1682,
	1683, 1685, 0, 1694, 0, 0, 1770, -2, -2, 1769,
	1773, 1774, -2, -2, -2, -2, 1690, 0, 1699, 1696,
	0, 1755, 1473, 1474, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 2095, 0, -2, 2074, 2077, 2081, 2083,
	2085, 0, 0, 0, 0, 0, 0, 2318, 0, 2320,
	2096, 2373, 2376, 2311, 0, 2267, 0, 0, 1743, 1744,
	1744, 0, 2165, 0, 2326, 0, 2333, 2334, 0, 2158,
	0, 2367, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2169, 0, 0, 0, 0, 2201, 2204, 2207, 2210,
	0, 0, 0, 0, 2190, 0, 0, 0, 2194, 1960,
	1946, 0, 1988, 1986, 1987, 1981, 1988, 1985, 1938, 0,
	1937, 0, 2216, 0, 2218, 2220, 0, 0, 2222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2102, 2103, 2104, 2124, 2223, 2355, 2356,
	0, 0, 0, 0, 0, 0, 2229, 0, 2361, 2230,
	2232, 1731, 0, 1724, 0, 1789, 1778, 1878, 0, 2382,
	1848, 1791, 1793, 2383, 2421, 1778, 1778, 0, 2330, 0,
	0, 1839, 0, 0, 0, 1841, 1812, 0, 0, 1806,
	0, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1813, 1332,
	1843, 1815, 1819, 2451, 0, 1845, 0, 1830, 0, 1832,
	1865, 0, 1824, 1827, 0, 0, 2466, 1879, 0, 403,
	411, 412, 404, 405, 406, 407, 0, 1522, 0, 0,
	0, 0, 0, 2332, 0, 1885, 0, 1891, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 1668, 461,
	546, 229, 551, 554, 2388, 229, 560, 563, 569, 258,
	0, 735, -2, 780, 781, 783, 0, 779, 885, 881,
	183, 1538, 0, 0, 0, 1478, 0, 1197, 0, 1192,
	1193, 1480, 2435, 1484, 1490, 1493, 0, 188, 2905, 200,
	0, 2905, 0, 1258, 0, 0, 0, 0, 0, 0,
	1540, 0, 0, 2905, 229, 2905, 229, 204, 206, 209,
	0, 215, 211, 0, 1194, 0, 1246, 0, 0, 1249,
	136, 1538, 0, 0, 139, 143, 155, 0, 0, 0,
	165, 0, 0, 0, 1495, 1499, 1507, 0, 0, 0,
	1359, 1360, 1363, 1369, 1372, 96, 0, 0, 0, 1503,
	1505, 1511, 111, 114, 2905, 2433, 0, 116, 2905, 0,
	0, 0, 1477, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 141, 145, 156, 0, 1513, 138, 0, 244,
	0, 0, 234, 229, 2905, 0, 236, 0, 237, 238,
	252, 0, 0, 0, 640, 0, 0, 0, 645, 0,
	1174, 1175, 1433, 0, 1377, 1378, 0, 1389, 1383, 0,
	0, 0, 0, 0, 1515, 1516, 0, 0, 0, 1536,
	1531, 1848, 264, 0, 1848, 272, 0, 2396, 0, 286,
	425, 0, 0, 0, 0, 1213, 1312, 1215, 1217, 1218,
	1219, 231, 0, 2474, 1284, 2632, 2474, 0, 0, 1181,
	0, 0, 0, 499, 495, 0, 504, 507, 512, 0,
	511, 2425, -2, 0, 0, 0, 0, -2, 0, 0,
	1449, 1443, 1444, 0, 0, 0, 0, 2905, 1625, 1633,
	0, 1729, 1744, 516, 1634, 1656, 0, 0, 0, 1644,
	1640, 1637, 1879, 0, 0, 0, 0, 0, 1872, 1875,
	586, 587, 331, 0, 0, 354, 0, 0, 0, 0,
	0, 0, 309, 0, 312, 0, 0, 0, 317, 318,
	319, 320, 321, 322, 0, 0, 0, 0, 311, 343,
	296, 1848, 0, 311, 0, 0, 724, 0, 0, 0,
	938, 0, 0, 1534, 972, 0, 981, 983, 986, 1030,
	1032, 1049, 0, 1060, 1088, 2420, 1089, 1236, 0, 1236,
	0, 0, 1109, 1115, 1692, 0, 1767, 1698, 1749, 1750,
	0, 1475, 0, 2013, 2058, 0, 0, -2, 0, 0,
	2062, 0, 0, 0, -2, 0, 0, 0, 2319, 2321,
	0, 2375, 2310, 2160, 0, 0, 0, 2164, 2148, 2149,
	0, 2270, 2336, 2365, 2369, 0, 1998, 1999, 2000, 2001,
	2002, 2003, 2004, 0, 2415, 2452, 2456, 2243, 2244, 2248,
	2429, 0, 0, 0, 2173, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 1983, 0, 0, 2337, 2348, 2350,
	2100, 2101, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, -2, -2, -2, 2118, 2119, 2120, -2, -2,
	-2, 2125, 0, 0, 0, 2351, 2353, 2354, 2358, 2359,
	0, 2226, 2227, 2228, 2360, 0, 1731, 1725, 1786, 0,
	1877, 1790, 0, 1786, 1786, 1738, 1837, 0, 0, 1861,
	0, 1809, 0, 1810, 0, 0, 1842, 0, 1817, 1820,
	1821, 1831, 0, 1823, 0, 1826, 0, 2160, -2, 355,
	357, 359, 0, 362, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 1522, 1522, 0,
	668, 652, 0, 0, 1887, 0, 0, 1963, 1967, 1991,
	679, 681, 0, 0, 2856, 2797, 0, 678, 548, 557,
	260, 0, 1846, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 230, 0, 1293, 0, 1256,
	0, 0, 1283, 0, 0, 1299, 190, 191, 192, 0,
	0, 0, 0, 202, 0, 0, 198, 0, 208, 214,
	213, 0, 1243, 0, 0, 0, 0, 1483, 0, 0,
	0, 162, 163, 164, 0, 169, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 1615, 1616, 0, 1606, 159, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1472, 254, 0, 0,
	0, 0, 0, 351, 346, 348, 0, 1376, 1436, 1437,
	1385, 1496, 1500, 1508, 0, 0, 0, 0, 0, 693,
	1535, 0, 272, 270, 0, 273, 0, 276, 277, 0,
	0, 272, 266, 0, 0, 0, 1332, 440, 1184, 1300,
	0, 0, 1302, 1220, 1224, 0, 2474, 2474, 0, 2426,
	0, 1182, 0, 0, 1301, 491, 0, 498, 0, 510,
	0, 1353, 0, 0, 1380, 1405, 1332, 0, 1448, 1450,
	0, 1458, 0, 0, 0, 1627, 1633, 0, 1620, 1621,
	1763, 1635, 1654, -2, 0, 0, 1744, 1662, 1659, 1665,
	1666, 0, 0, 0, 334, 0, 1646, 1648, 0, 1155,
	1158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	295, 311, 1848, 298, 1848, 338, 0, 932, 354, 964,
	1533, 969, 2441, 1040, 1058, 1090, 1235, 0, 0, 1092,
	0, 0, 1766, 1753, 1754, 1751, 1475, 2060, 2064, 0,
	0, 0, 2066, -2, 0, 2088, -2, -2, 2322, 2374,
	2139, 1744, 2161, 2163, 2150, 2368, 2008, 0, 2250, 2247,
	0, 2234, 0, 2185, 2186, 0, 0, 2189, 2191, 2192,
	2193, 1947, 1940, 1939, 2347, 0, 0, 0, 0, 2225,
	1726, 0, 2239, 0, 0, 1794, 2239, 2239, 1838, 0,
	1840, 1807, 1795, 0, 1804, 0, 2452, 1833, 1825, 0,
	0, 360, 0, 364, 365, 366, 367, 368, 369, 0,
	0, 0, 0, 0, 408, 0, 669, 670, 0, 0,
	1881, 1886, 0, 1892, 1962, 0, 0, 0, 0, 0,
	261, 0, 883, 884, 184, 185, 1198, 1196, 1487, 1491,
	1488, 0, 187, 0, 0, 1257, 0, 1260, 0, 0,
	0, 0, 1267, 1284, 0, 0, 0, 0, 0, 0,
	1286, 0, 1285, 0, 0, 1316, 0, 1463, 1470, 0,
	-2, 0, 0, 0, 194, 220, 0, 0, 0, 0,
	223, 1539, 196, 0, 0, 229, 229, 1195, 0, 0,
	1479, 1481, 1494, 0, 0, 0, 0, 172, 0, 0,
	1497, 1501, 1509, 1504, 1506, 1512, 0, 0, 117, 0,
	0, 1617, 0, 158, 0, 0, 0, 1514, 242, 243,
	0, 229, 0, 229, 235, 229, 1472, 0, 0, 0,
	0, 0, 0, 0, 0, 1517, 1518, 263, 0, 0,
	0, 0, 0, 265, 344, 272, 427, 0, 1245, 0,
	1312, 1304, 1305, 1306, 0, 1216, 1311, 1313, 0, 0,
	1221, 0, 0, 0, 0, 1201, 1183, 0, 1214, 1186,
	0, 496, 1172, 1350, 1397, 1332, 1400, 0, 0, 1440,
	0, 0, 0, 0, 0, 0, 0, 1629, 1633, 0,
	1622, 1623, 1656, 1762, 0, 0, 0, 1643, 1763, 0,
	353, 354, 0, 354, 313, 0, 314, 315, 316, 323,
	324, 325, 326, 297, 308, 311, 726, 728, 0, 0,
	734, 937, 1234, 0, 0, 0, 0, 1752, 2068, -2,
	-2, 2089, 0, 2453, 2455, 1744, 0, 2236, 1746, 0,
	0, -2, 0, 0, 0, 1727, 1710, 0, 1785, 1777,
	1779, 1781, 2783, 2549, 2904, 1711, 1712, 1860, 0, 0,
	1828, 361, 370, 371, 0, 373, 374, 1521, 671, 0,
	0, 1888, 0, 676, 0, 0, 0, 873, 0, 0,
	1489, 189, 0, 0, 1261, 1262, 1264, 0, 1266, 1268,
	1269, 1186, 0, 1273, 0, 2476, 0, 1278, 1281, 1282,
	0, 0, 1295, 1317, 0, 1326, 0, 1465, 1475, 1469,
	0, 1467, 1328, 0, 193, 222, 195, 224, 219, 0,
	1472, 0, 197, 207, 0, 0, 140, 0, 0, 2543,
	175, 173, 171, 115, 121, 123, 1476, 161, 0, 142,
	0, 244, 253, 1471, 255, 239, 229, 0, 0, 1498,
	1502, 1510, 0, 1525, 1526, 1527, 1528, 0, 0, 0,
	0, 274, 0, 275, 278, 279, 0, 0, 1186, 1244,
	1185, 1303, 0, 1314, 1186, 0, 0, 0, 0, 0,
	0, 1188, 0, 1187, 0, 0, 497, 500, 0, 503,
	0, 0, 1404, 0, 1451, 1449, 0, 1457, 0, 0,
	0, 1605, 0, 0, 1624, 1625, 514, 1649, 0, 0,
	1656, 1667, 333, 0, 336, 310, 300, 0, 299, 0,
	730, 0, 732, 0, 1091, 1093, 0, 0, 2162, 2254,
	0, 0, 2187, 2188, -2, 0, 2128, 2238, 2240, 0,
	0, 0, 0, 0, 1796, 1805, 372, 1522, 1882, 683,
	680, 682, 0, 1485, 0, 1492, 231, 1259, 1263, 0,
	1270, 0, 0, 0, 1274, 1336, 0, 0, 1353, 1353,
	1287, 0, 0, 1320, 1321, 1241, 0, 1322, 1323, 1324,
	1464, 1755, 1470, 1186, 0, 0, 221, 226, 0, 0,
	0, 0, 0, 0, 160, 0, 233, 256, 1472, 0,
	0, 1529, 1530, 0, 0, 271, 290, 0, 1398, 1188,
	0, 1315, 1222, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1223, 1328, 0, 0, 1292, 1199, 0, 1202,
	0, 1184, 0, 501, 502, 0, 0, 1405, 0, 0,
	1458, 0, 0, 1612, 1604, 1633, 1626, 1627, 1879, 0,
	1657, 0, 0, 729, 0, 0, 1101, 1102, 0, 0,
	0, 0, 2249, 1747, 2129, 0, 0, 1780, 1782, 1783,
	1784, 672, 0, 1486, 201, 0, 1330, 1272, 1341, 0,
	0, 0, 0, 0, 1288, 1318, 1319, 1316, 1240, 0,
	1468, 1466, 1297, 1330, 1332, 199, 0, 1328, 0, 1250,
	0, 0, 1253, 0, 0, 176, 2543, 174, 0, 229,
	650, 1522, 229, 0, 293, 0, 284, 282, 283, 1180,
	0, 1308, 1310, 1326, 1328, 1241, 0, 1203, 1245, 1201,
	1399, 1403, 1401, 1441, 1328, 0, 1326, 0, 1619, 1633,
	1613, 1614, 0, 1629, 0, 0, 354, 306, 307, 731,
	733, 2246, 2266, 2255, -2, 2859, 2550, 0, 2266, 2266,
	2241, 2242, 0, 0, 1186, 0, 1275, 1337, 1338, 0,
	1333, 1334, 1335, 2475, 1276, 1277, 1279, 1280, 1879, 0,
	1327, 1336, 225, 1186, 1247, 0, 0, 1248, 0, 0,
	179, 0, 181, 257, 1520, 1523, 0, 280, 0, 0,
	1177, 1179, 1186, 0, 1241, 1326, 1186, 0, 0, 0,
	1186, 1188, 1326, 0, 1241, 0, 1608, 1618, 0, 1628,
	1605, 0, 1652, 0, 335, 2251, 0, 0, 2257, 2258,
	2259, 2260, 2261, 2252, 2253, 684, 1265, 1271, 0, 1339,
	0, 1340, 0, 0, 0, 1296, 1325, 1341, 205, 1251,
	0, 1254, 0, 177, 0, 0, 288, 289, 1307, 1309,
	1186, 1241, 1879, 1189, 0, 1191, 1188, 1200, 1241, 0,
	1186, 0, 1631, 1607, 1611, 2434, 1612, 1650, 0, 0,
	0, 2263, 2264, 0, 0, 0, 1342, 0, 1345, 1346,
	0, 1343, 1316, 0, 0, 229, 0, 1879, 1186, 1291,
	1190, 1180, 1186, 1328, 1879, 1326, 1601, 1633, 1619, 0,
	1879, 2262, 2265, 2256, 1329, 1344, 1347, 1348, 1298, 0,
	0, 1524, 291, 0, 1289, 1879, 1178, 1879, 1326, 1454,
	1241, 0, 1608, 1879, 1653, 1238, 0, 0, 1290, 1452,
	1241, 1186, 1630, 1602, 1651, 1252, 1237, 0, 292, 1186,
	1879, 0, 1879, 1455, 0, 1453, 1238, 1255,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 620, 3, 626, 621, 3,
	632, 633, 624, 622, 637, 623, 634, 625, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 640, 3,
	612, 614, 613, 617, 636, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 630, 3, 631, 627, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 638, 619, 639, 615,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 616,
	57955, 618, 57956, 628, 57957, 629, 57958, 635, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1578
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1596
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1605
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1606
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1611
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1612
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1709
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1723
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1787
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1798
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1810
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1837
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1863
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1928
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1960
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1974
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1978
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1984
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1993
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2014
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2022
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2032
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2036
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2058
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2069
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2081
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2102
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2151
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2173
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2184
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2192
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2203
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2213
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2223
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2232
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2243
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2249
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2275
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2280
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2327
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2371
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2415
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2428
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2434
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2441
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2465
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2486
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2559
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2681
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2685
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2688
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2740
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2765
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2772
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2784
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2869
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2877
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2889
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2904
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3031
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3041
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3133
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3162
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:     sqlDollar[8].union.asOfClause(),
				AsTenant: sqlDollar[9].union.asTenantClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3240
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3280
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3284
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3312
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3359
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3368
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3374
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3379
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3384
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3462
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3476
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = nil
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3492
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3516
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "header")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3570
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3574
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3594
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3595
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3661
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3724
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3745
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3746
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3750
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3755
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3773
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "CREATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3788
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3791
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3797
		{
			return unimplemented(sqllex, "create access method")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "create cast")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "create publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplemented(sqllex, "create rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "create server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3819
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3822
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3823
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3826
		{
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3827
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3836
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3841
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return unimplemented(sqllex, "drop server")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3858
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3939
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3974
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4026
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4030
		{

			sqlVAL.union.val = nil
		}
	case 514:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4058
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4139
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4198
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4237
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4289
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4307
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4350
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4366
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4374
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4382
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4401
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4428
		{
			return helpWith(sqllex, "DELETE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "INSERT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4572
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4643
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4646
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4696
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4700
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4712
		{
			return unimplementedWithIssueDetail(sqllex, 74780, "grant privileges on sequence")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "GRANT")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4808
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4821
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "RESET")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "RESET")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "USE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "USE")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5039
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5085
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5107
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5132
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return unimplemented(sqllex, "set from current")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5168
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5186
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5214
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = tree.Low
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = tree.Normal
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.High
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5307
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5337
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5339
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5340
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5342
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5343
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5357
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5363
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5366
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5367
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5368
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5372
		{
			return helpWith(sqllex, "SHOW")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = true
		}
	case 876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5423
		{
			sqlVAL.union.val = false
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = false
		}
	case 885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = false
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "FETCH")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "MOVE")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = int64(1)
		}
	case 901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = int64(-1)
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = int64(1)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = int64(1)
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = int64(-1)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5587
		{
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5588
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5591
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5592
		{
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5596
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5601
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5606
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5616
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5626
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5628
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.str = "client_encoding"
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.str = "timezone"
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5678
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5820
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5834
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5845
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5897
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5908
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5937
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5950
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5969
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5982
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6002
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6015
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6027
		{
			sqlVAL.union.val = true
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = true
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = false
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6059
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6078
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6105
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6121
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6129
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6137
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6151
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6178
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6180
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6184
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = true
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = false
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6196
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6199
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6204
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6250
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = true
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = false
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6275
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6297
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6307
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6318
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6340
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6354
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6368
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6384
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6399
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6404
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6415
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6433
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6444
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6473
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6481
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6502
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6512
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6516
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6525
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6548
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6560
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6626
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6636
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6649
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6782
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6825
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6836
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6882
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6913
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6914
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6960
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6967
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6999
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7018
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7118
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7133
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{

			sqlVAL.union.val = nil
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.str = ""
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7177
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = nil
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7200
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7240
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7253
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7267
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7268
		{
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7269
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7350
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7361
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7368
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.str = ""
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7506
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7613
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7652
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7658
		{

			sqlVAL.union.val = true
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = false
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7668
		{
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7672
		{
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7675
		{
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7772
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7783
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7800
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7810
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7825
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7832
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7893
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7894
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7895
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7896
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7898
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7980
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8065
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8074
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8082
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8089
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8093
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8106
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8120
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8128
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8130
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8132
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8133
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8135
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8146
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8149
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8180
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8214
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8248
		{

			sqlVAL.union.val = true
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = false
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8263
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8277
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8289
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8301
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8311
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8321
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8325
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = true
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = true
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8371
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8453
		{
			sqlVAL.union.val = nil
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8494
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8496
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8498
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8500
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8504
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8539
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8556
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8574
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8590
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8606
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = false
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = true
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8635
		{
			sqlVAL.union.val = false
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8664
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8670
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8684
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.str = ""
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.str = ""
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8743
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8749
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8808
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8833
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8974
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8980
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8992
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8998
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9012
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9018
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9042
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = true
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = false
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9102
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = tree.Types
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.str = ""
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9177
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9180
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9181
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9192
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9202
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9210
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9248
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9292
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9293
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9313
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9336
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9346
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9347
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9364
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9367
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9368
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9396
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9411
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9415
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.str = ""
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9533
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{

		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9565
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.str = ""
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.str = ""
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.str = ""
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.str = ""
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9620
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9638
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9645
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9646
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9693
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9755
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9826
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9870
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9891
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9906
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10009
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10050
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10086
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10087
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10148
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10208
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = true
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = false
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = nil
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10276
		{
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = false
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = true
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10306
		{
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10310
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10363
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10368
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10522
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10553
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10555
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10570
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10592
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10639
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10670
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10712
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10753
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10757
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10768
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10798
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10831
		{
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10833
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = nil
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = true
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10919
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.str = tree.AstFull
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10940
		{
			sqlVAL.str = tree.AstRight
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.str = tree.AstInner
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10950
		{
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10951
		{
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.str = tree.AstHash
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.str = ""
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11020
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11043
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11065
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = true
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = false
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = true
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = false
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11114
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11127
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11135
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11154
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11164
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11184
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11245
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11246
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = types.Geography
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11295
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11303
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11329
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11337
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = nil
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11352
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11356
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = types.Int2
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = types.Int
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = types.Float4
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = types.Float
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11380
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11388
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11396
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = types.Bool
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = types.Float
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11429
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11435
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11457
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = types.String
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = true
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = false
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = types.Date
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11506
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11514
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11528
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11537
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11545
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11562
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = true
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = false
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = false
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = types.Interval
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11586
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11685
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11691
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = nil
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11715
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11775
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11916
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11924
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11932
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12119
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12131
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12153
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12269
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12313
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12370
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12396
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12405
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12420
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12454
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12465
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12466
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12481
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12556
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12617
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12627
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12631
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12639
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12686
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12695
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12706
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12715
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12722
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12727
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12737
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12742
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12753
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12757
		{
			return unimplemented(sqllex, "treat")
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12778
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12814
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12830
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12838
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12842
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.str = ""
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12889
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12905
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12932
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12964
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12968
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12972
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12988
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12992
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12996
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13000
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13018
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13022
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13029
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13041
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13067
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13072
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13074
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13083
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13086
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13087
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13090
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13091
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13092
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13095
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13096
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13100
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13105
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13121
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13130
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13168
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13244
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13254
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13277
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13281
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13302
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13327
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13361
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13367
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13379
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13386
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13396
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13402
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13406
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13413
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13430
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13436
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13440
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13445
		{
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13446
		{
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13450
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13460
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13473
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13477
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13485
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13495
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13518
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13526
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13570
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13595
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13599
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13615
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13624
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13635
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13644
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13652
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13669
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13754
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13762
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13766
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13772
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13782
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13795
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13822
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13829
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13855
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13859
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13881
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13899
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13912
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13919
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.str = ""
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13950
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13954
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
