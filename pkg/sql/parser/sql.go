// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:76

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) regionAffinity() tree.RegionalAffinity {
	return u.val.(tree.RegionalAffinity)
}
func (u *sqlSymUnion) survive() tree.Survive {
	return u.val.(tree.Survive)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:713
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12388

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1413,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	254, 368,
	-2, 0,
	-1, 73,
	236, 221,
	496, 221,
	-2, 0,
	-1, 84,
	224, 1183,
	238, 1183,
	254, 364,
	380, 364,
	390, 963,
	425, 364,
	437, 963,
	480, 963,
	507, 364,
	533, 963,
	-2, 0,
	-1, 90,
	131, 1413,
	231, 1413,
	518, 1413,
	519, 1413,
	-2, 0,
	-1, 106,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1355,
	-1, 144,
	156, 835,
	253, 835,
	383, 804,
	442, 804,
	499, 835,
	501, 804,
	-2, 0,
	-1, 146,
	4, 1415,
	21, 1415,
	22, 1415,
	23, 1415,
	24, 1415,
	25, 1415,
	26, 1415,
	27, 1415,
	28, 1415,
	30, 1415,
	31, 1415,
	37, 1415,
	42, 1415,
	43, 1415,
	45, 1415,
	46, 1415,
	47, 1415,
	48, 1415,
	49, 1415,
	50, 1415,
	51, 1415,
	52, 1415,
	54, 1415,
	55, 1415,
	56, 1415,
	57, 1415,
	59, 1415,
	60, 1415,
	61, 1415,
	62, 1415,
	63, 1415,
	64, 1415,
	65, 1415,
	69, 1415,
	70, 1415,
	71, 1415,
	72, 1415,
	74, 1415,
	75, 1415,
	76, 1415,
	80, 1415,
	81, 1415,
	82, 1415,
	83, 1415,
	84, 1415,
	85, 1415,
	86, 1415,
	89, 1415,
	90, 1415,
	91, 1415,
	92, 1415,
	93, 1415,
	95, 1415,
	97, 1415,
	98, 1415,
	99, 1415,
	100, 1415,
	101, 1415,
	102, 1415,
	104, 1415,
	105, 1415,
	106, 1415,
	108, 1415,
	109, 1415,
	117, 1415,
	118, 1415,
	119, 1415,
	120, 1415,
	122, 1415,
	123, 1415,
	124, 1415,
	126, 1415,
	127, 1415,
	128, 1415,
	130, 1415,
	131, 1415,
	133, 1415,
	134, 1415,
	135, 1415,
	138, 1415,
	139, 1415,
	140, 1415,
	142, 1415,
	143, 1415,
	145, 1415,
	146, 1415,
	147, 1415,
	149, 1415,
	150, 1415,
	151, 1415,
	152, 1415,
	153, 1415,
	154, 1415,
	155, 1415,
	156, 1415,
	157, 1415,
	158, 1415,
	159, 1415,
	160, 1415,
	161, 1415,
	162, 1415,
	163, 1415,
	164, 1415,
	166, 1415,
	172, 1415,
	173, 1415,
	174, 1415,
	175, 1415,
	179, 1415,
	181, 1415,
	185, 1415,
	186, 1415,
	187, 1415,
	188, 1415,
	189, 1415,
	190, 1415,
	191, 1415,
	192, 1415,
	193, 1415,
	194, 1415,
	195, 1415,
	196, 1415,
	198, 1415,
	199, 1415,
	201, 1415,
	202, 1415,
	204, 1415,
	205, 1415,
	206, 1415,
	207, 1415,
	208, 1415,
	209, 1415,
	210, 1415,
	211, 1415,
	212, 1415,
	214, 1415,
	215, 1415,
	217, 1415,
	218, 1415,
	219, 1415,
	220, 1415,
	224, 1415,
	225, 1415,
	226, 1415,
	227, 1415,
	228, 1415,
	231, 1415,
	232, 1415,
	233, 1415,
	235, 1415,
	237, 1415,
	238, 1415,
	240, 1415,
	242, 1415,
	243, 1415,
	244, 1415,
	246, 1415,
	250, 1415,
	251, 1415,
	252, 1415,
	253, 1415,
	254, 1415,
	255, 1415,
	257, 1415,
	258, 1415,
	259, 1415,
	261, 1415,
	262, 1415,
	264, 1415,
	265, 1415,
	268, 1415,
	272, 1415,
	273, 1415,
	274, 1415,
	277, 1415,
	278, 1415,
	279, 1415,
	280, 1415,
	282, 1415,
	283, 1415,
	284, 1415,
	285, 1415,
	286, 1415,
	287, 1415,
	288, 1415,
	289, 1415,
	290, 1415,
	291, 1415,
	292, 1415,
	293, 1415,
	294, 1415,
	295, 1415,
	296, 1415,
	297, 1415,
	298, 1415,
	299, 1415,
	300, 1415,
	301, 1415,
	302, 1415,
	303, 1415,
	305, 1415,
	307, 1415,
	308, 1415,
	309, 1415,
	310, 1415,
	311, 1415,
	312, 1415,
	313, 1415,
	314, 1415,
	315, 1415,
	316, 1415,
	317, 1415,
	318, 1415,
	320, 1415,
	322, 1415,
	324, 1415,
	325, 1415,
	327, 1415,
	328, 1415,
	329, 1415,
	330, 1415,
	331, 1415,
	334, 1415,
	337, 1415,
	338, 1415,
	339, 1415,
	340, 1415,
	343, 1415,
	344, 1415,
	345, 1415,
	347, 1415,
	349, 1415,
	350, 1415,
	351, 1415,
	352, 1415,
	353, 1415,
	354, 1415,
	355, 1415,
	356, 1415,
	357, 1415,
	358, 1415,
	359, 1415,
	360, 1415,
	362, 1415,
	363, 1415,
	364, 1415,
	365, 1415,
	366, 1415,
	367, 1415,
	368, 1415,
	369, 1415,
	370, 1415,
	371, 1415,
	372, 1415,
	373, 1415,
	374, 1415,
	375, 1415,
	376, 1415,
	378, 1415,
	379, 1415,
	381, 1415,
	382, 1415,
	383, 1415,
	384, 1415,
	385, 1415,
	386, 1415,
	387, 1415,
	388, 1415,
	389, 1415,
	390, 1415,
	391, 1415,
	392, 1415,
	394, 1415,
	396, 1415,
	397, 1415,
	398, 1415,
	403, 1415,
	405, 1415,
	406, 1415,
	407, 1415,
	408, 1415,
	409, 1415,
	410, 1415,
	411, 1415,
	412, 1415,
	414, 1415,
	415, 1415,
	416, 1415,
	418, 1415,
	419, 1415,
	420, 1415,
	421, 1415,
	422, 1415,
	423, 1415,
	425, 1415,
	426, 1415,
	427, 1415,
	428, 1415,
	429, 1415,
	430, 1415,
	431, 1415,
	432, 1415,
	433, 1415,
	434, 1415,
	435, 1415,
	437, 1415,
	438, 1415,
	439, 1415,
	440, 1415,
	441, 1415,
	442, 1415,
	444, 1415,
	445, 1415,
	446, 1415,
	447, 1415,
	448, 1415,
	449, 1415,
	451, 1415,
	452, 1415,
	453, 1415,
	454, 1415,
	455, 1415,
	456, 1415,
	457, 1415,
	459, 1415,
	461, 1415,
	462, 1415,
	463, 1415,
	464, 1415,
	465, 1415,
	466, 1415,
	467, 1415,
	468, 1415,
	469, 1415,
	470, 1415,
	471, 1415,
	472, 1415,
	473, 1415,
	474, 1415,
	476, 1415,
	477, 1415,
	479, 1415,
	481, 1415,
	482, 1415,
	483, 1415,
	484, 1415,
	485, 1415,
	486, 1415,
	487, 1415,
	488, 1415,
	489, 1415,
	491, 1415,
	492, 1415,
	493, 1415,
	494, 1415,
	495, 1415,
	497, 1415,
	499, 1415,
	500, 1415,
	501, 1415,
	502, 1415,
	503, 1415,
	504, 1415,
	506, 1415,
	507, 1415,
	508, 1415,
	509, 1415,
	511, 1415,
	512, 1415,
	515, 1415,
	516, 1415,
	517, 1415,
	518, 1415,
	519, 1415,
	520, 1415,
	521, 1415,
	523, 1415,
	526, 1415,
	527, 1415,
	528, 1415,
	529, 1415,
	530, 1415,
	531, 1415,
	533, 1415,
	534, 1415,
	535, 1415,
	536, 1415,
	541, 1415,
	542, 1415,
	543, 1415,
	544, 1415,
	545, 1415,
	546, 1415,
	-2, 0,
	-1, 147,
	1, 1275,
	129, 1275,
	242, 1275,
	321, 1275,
	378, 1275,
	387, 1275,
	550, 1275,
	574, 1275,
	-2, 0,
	-1, 149,
	1, 1275,
	574, 1275,
	-2, 0,
	-1, 150,
	1, 1275,
	574, 1275,
	-2, 0,
	-1, 151,
	1, 1275,
	496, 1275,
	574, 1275,
	-2, 0,
	-1, 180,
	148, 1383,
	167, 1383,
	180, 1383,
	234, 1383,
	267, 1383,
	332, 1383,
	342, 1383,
	513, 1383,
	-2, 1358,
	-1, 222,
	4, 1422,
	5, 1422,
	6, 1422,
	7, 1422,
	8, 1422,
	9, 1422,
	10, 1422,
	21, 1422,
	22, 1422,
	23, 1422,
	24, 1422,
	25, 1422,
	26, 1422,
	27, 1422,
	28, 1422,
	30, 1422,
	31, 1422,
	37, 1422,
	38, 1422,
	42, 1422,
	43, 1422,
	44, 1422,
	45, 1422,
	46, 1422,
	47, 1422,
	48, 1422,
	49, 1422,
	50, 1422,
	51, 1422,
	52, 1422,
	54, 1422,
	55, 1422,
	56, 1422,
	57, 1422,
	59, 1422,
	60, 1422,
	61, 1422,
	62, 1422,
	63, 1422,
	64, 1422,
	65, 1422,
	66, 1422,
	67, 1422,
	68, 1422,
	69, 1422,
	70, 1422,
	71, 1422,
	72, 1422,
	74, 1422,
	75, 1422,
	76, 1422,
	78, 1422,
	80, 1422,
	81, 1422,
	82, 1422,
	83, 1422,
	84, 1422,
	85, 1422,
	86, 1422,
	89, 1422,
	90, 1422,
	91, 1422,
	92, 1422,
	93, 1422,
	95, 1422,
	97, 1422,
	98, 1422,
	99, 1422,
	100, 1422,
	101, 1422,
	102, 1422,
	104, 1422,
	105, 1422,
	106, 1422,
	107, 1422,
	108, 1422,
	109, 1422,
	110, 1422,
	111, 1422,
	112, 1422,
	113, 1422,
	114, 1422,
	115, 1422,
	116, 1422,
	117, 1422,
	118, 1422,
	119, 1422,
	120, 1422,
	121, 1422,
	122, 1422,
	123, 1422,
	124, 1422,
	125, 1422,
	126, 1422,
	127, 1422,
	128, 1422,
	130, 1422,
	131, 1422,
	133, 1422,
	134, 1422,
	135, 1422,
	138, 1422,
	139, 1422,
	140, 1422,
	142, 1422,
	143, 1422,
	145, 1422,
	146, 1422,
	147, 1422,
	149, 1422,
	150, 1422,
	151, 1422,
	152, 1422,
	153, 1422,
	154, 1422,
	155, 1422,
	156, 1422,
	157, 1422,
	158, 1422,
	159, 1422,
	160, 1422,
	161, 1422,
	162, 1422,
	163, 1422,
	164, 1422,
	165, 1422,
	166, 1422,
	172, 1422,
	173, 1422,
	174, 1422,
	175, 1422,
	179, 1422,
	181, 1422,
	184, 1422,
	185, 1422,
	186, 1422,
	187, 1422,
	188, 1422,
	189, 1422,
	190, 1422,
	191, 1422,
	192, 1422,
	193, 1422,
	194, 1422,
	195, 1422,
	196, 1422,
	198, 1422,
	199, 1422,
	201, 1422,
	202, 1422,
	204, 1422,
	205, 1422,
	206, 1422,
	207, 1422,
	208, 1422,
	209, 1422,
	210, 1422,
	211, 1422,
	212, 1422,
	213, 1422,
	214, 1422,
	215, 1422,
	217, 1422,
	218, 1422,
	219, 1422,
	220, 1422,
	224, 1422,
	225, 1422,
	226, 1422,
	227, 1422,
	228, 1422,
	230, 1422,
	231, 1422,
	232, 1422,
	233, 1422,
	235, 1422,
	237, 1422,
	238, 1422,
	239, 1422,
	240, 1422,
	241, 1422,
	242, 1422,
	243, 1422,
	244, 1422,
	245, 1422,
	246, 1422,
	250, 1422,
	251, 1422,
	252, 1422,
	253, 1422,
	254, 1422,
	255, 1422,
	257, 1422,
	258, 1422,
	259, 1422,
	261, 1422,
	262, 1422,
	263, 1422,
	264, 1422,
	265, 1422,
	266, 1422,
	268, 1422,
	272, 1422,
	273, 1422,
	274, 1422,
	275, 1422,
	276, 1422,
	277, 1422,
	278, 1422,
	279, 1422,
	280, 1422,
	282, 1422,
	283, 1422,
	284, 1422,
	285, 1422,
	286, 1422,
	287, 1422,
	288, 1422,
	289, 1422,
	290, 1422,
	291, 1422,
	292, 1422,
	293, 1422,
	294, 1422,
	295, 1422,
	296, 1422,
	297, 1422,
	298, 1422,
	299, 1422,
	300, 1422,
	301, 1422,
	302, 1422,
	303, 1422,
	305, 1422,
	306, 1422,
	307, 1422,
	308, 1422,
	309, 1422,
	310, 1422,
	311, 1422,
	312, 1422,
	313, 1422,
	314, 1422,
	315, 1422,
	316, 1422,
	317, 1422,
	318, 1422,
	319, 1422,
	320, 1422,
	321, 1422,
	322, 1422,
	323, 1422,
	324, 1422,
	325, 1422,
	326, 1422,
	327, 1422,
	328, 1422,
	329, 1422,
	330, 1422,
	331, 1422,
	334, 1422,
	338, 1422,
	339, 1422,
	340, 1422,
	343, 1422,
	344, 1422,
	345, 1422,
	346, 1422,
	347, 1422,
	348, 1422,
	349, 1422,
	350, 1422,
	351, 1422,
	352, 1422,
	353, 1422,
	354, 1422,
	355, 1422,
	356, 1422,
	357, 1422,
	358, 1422,
	359, 1422,
	360, 1422,
	362, 1422,
	363, 1422,
	364, 1422,
	365, 1422,
	366, 1422,
	367, 1422,
	368, 1422,
	369, 1422,
	370, 1422,
	371, 1422,
	372, 1422,
	373, 1422,
	374, 1422,
	375, 1422,
	376, 1422,
	378, 1422,
	379, 1422,
	381, 1422,
	382, 1422,
	383, 1422,
	384, 1422,
	385, 1422,
	386, 1422,
	387, 1422,
	388, 1422,
	389, 1422,
	390, 1422,
	391, 1422,
	392, 1422,
	394, 1422,
	396, 1422,
	397, 1422,
	398, 1422,
	403, 1422,
	405, 1422,
	406, 1422,
	407, 1422,
	408, 1422,
	409, 1422,
	410, 1422,
	411, 1422,
	412, 1422,
	414, 1422,
	415, 1422,
	416, 1422,
	417, 1422,
	418, 1422,
	419, 1422,
	420, 1422,
	421, 1422,
	422, 1422,
	423, 1422,
	425, 1422,
	426, 1422,
	427, 1422,
	428, 1422,
	429, 1422,
	430, 1422,
	431, 1422,
	432, 1422,
	433, 1422,
	434, 1422,
	435, 1422,
	437, 1422,
	438, 1422,
	439, 1422,
	440, 1422,
	441, 1422,
	442, 1422,
	443, 1422,
	444, 1422,
	445, 1422,
	446, 1422,
	447, 1422,
	448, 1422,
	449, 1422,
	450, 1422,
	451, 1422,
	452, 1422,
	453, 1422,
	454, 1422,
	455, 1422,
	456, 1422,
	457, 1422,
	459, 1422,
	461, 1422,
	462, 1422,
	463, 1422,
	464, 1422,
	465, 1422,
	466, 1422,
	467, 1422,
	468, 1422,
	469, 1422,
	470, 1422,
	471, 1422,
	472, 1422,
	473, 1422,
	474, 1422,
	476, 1422,
	477, 1422,
	478, 1422,
	479, 1422,
	481, 1422,
	482, 1422,
	483, 1422,
	484, 1422,
	485, 1422,
	486, 1422,
	487, 1422,
	488, 1422,
	489, 1422,
	491, 1422,
	492, 1422,
	493, 1422,
	494, 1422,
	495, 1422,
	497, 1422,
	499, 1422,
	500, 1422,
	501, 1422,
	502, 1422,
	503, 1422,
	504, 1422,
	505, 1422,
	506, 1422,
	507, 1422,
	508, 1422,
	509, 1422,
	511, 1422,
	512, 1422,
	514, 1422,
	515, 1422,
	516, 1422,
	517, 1422,
	518, 1422,
	519, 1422,
	520, 1422,
	521, 1422,
	522, 1422,
	523, 1422,
	526, 1422,
	527, 1422,
	528, 1422,
	529, 1422,
	530, 1422,
	531, 1422,
	533, 1422,
	534, 1422,
	535, 1422,
	536, 1422,
	541, 1422,
	542, 1422,
	543, 1422,
	544, 1422,
	545, 1422,
	546, 1422,
	547, 1422,
	555, 1422,
	562, 1422,
	563, 1422,
	564, 1422,
	571, 1422,
	575, 1422,
	-2, 0,
	-1, 708,
	4, 1181,
	21, 1181,
	22, 1181,
	23, 1181,
	24, 1181,
	25, 1181,
	26, 1181,
	27, 1181,
	28, 1181,
	30, 1181,
	31, 1181,
	37, 1181,
	42, 1181,
	43, 1181,
	45, 1181,
	46, 1181,
	47, 1181,
	48, 1181,
	49, 1181,
	50, 1181,
	51, 1181,
	52, 1181,
	54, 1181,
	55, 1181,
	56, 1181,
	57, 1181,
	59, 1181,
	60, 1181,
	61, 1181,
	62, 1181,
	63, 1181,
	64, 1181,
	65, 1181,
	69, 1181,
	70, 1181,
	71, 1181,
	72, 1181,
	74, 1181,
	75, 1181,
	76, 1181,
	80, 1181,
	81, 1181,
	82, 1181,
	83, 1181,
	84, 1181,
	85, 1181,
	86, 1181,
	89, 1181,
	90, 1181,
	91, 1181,
	92, 1181,
	93, 1181,
	95, 1181,
	97, 1181,
	98, 1181,
	99, 1181,
	100, 1181,
	101, 1181,
	102, 1181,
	104, 1181,
	105, 1181,
	106, 1181,
	108, 1181,
	109, 1181,
	117, 1181,
	118, 1181,
	119, 1181,
	120, 1181,
	122, 1181,
	123, 1181,
	124, 1181,
	126, 1181,
	127, 1181,
	128, 1181,
	130, 1181,
	131, 1181,
	133, 1181,
	134, 1181,
	135, 1181,
	138, 1181,
	139, 1181,
	140, 1181,
	142, 1181,
	143, 1181,
	145, 1181,
	146, 1181,
	147, 1181,
	149, 1181,
	150, 1181,
	151, 1181,
	152, 1181,
	153, 1181,
	154, 1181,
	155, 1181,
	156, 1181,
	157, 1181,
	158, 1181,
	159, 1181,
	160, 1181,
	161, 1181,
	162, 1181,
	163, 1181,
	164, 1181,
	166, 1181,
	172, 1181,
	173, 1181,
	174, 1181,
	175, 1181,
	179, 1181,
	181, 1181,
	185, 1181,
	186, 1181,
	187, 1181,
	188, 1181,
	189, 1181,
	190, 1181,
	191, 1181,
	192, 1181,
	193, 1181,
	194, 1181,
	195, 1181,
	196, 1181,
	198, 1181,
	199, 1181,
	201, 1181,
	202, 1181,
	204, 1181,
	205, 1181,
	206, 1181,
	207, 1181,
	208, 1181,
	209, 1181,
	210, 1181,
	211, 1181,
	212, 1181,
	214, 1181,
	215, 1181,
	217, 1181,
	218, 1181,
	219, 1181,
	220, 1181,
	224, 1181,
	225, 1181,
	226, 1181,
	227, 1181,
	228, 1181,
	231, 1181,
	232, 1181,
	233, 1181,
	235, 1181,
	237, 1181,
	238, 1181,
	240, 1181,
	242, 1181,
	243, 1181,
	244, 1181,
	246, 1181,
	250, 1181,
	251, 1181,
	252, 1181,
	253, 1181,
	254, 1181,
	255, 1181,
	257, 1181,
	258, 1181,
	259, 1181,
	261, 1181,
	262, 1181,
	264, 1181,
	265, 1181,
	268, 1181,
	272, 1181,
	273, 1181,
	274, 1181,
	277, 1181,
	278, 1181,
	279, 1181,
	280, 1181,
	282, 1181,
	283, 1181,
	284, 1181,
	285, 1181,
	286, 1181,
	287, 1181,
	288, 1181,
	289, 1181,
	290, 1181,
	291, 1181,
	292, 1181,
	293, 1181,
	294, 1181,
	295, 1181,
	296, 1181,
	297, 1181,
	298, 1181,
	299, 1181,
	300, 1181,
	301, 1181,
	302, 1181,
	303, 1181,
	305, 1181,
	307, 1181,
	308, 1181,
	309, 1181,
	310, 1181,
	311, 1181,
	312, 1181,
	313, 1181,
	314, 1181,
	315, 1181,
	316, 1181,
	317, 1181,
	318, 1181,
	320, 1181,
	322, 1181,
	324, 1181,
	325, 1181,
	327, 1181,
	328, 1181,
	329, 1181,
	330, 1181,
	331, 1181,
	334, 1181,
	338, 1181,
	339, 1181,
	340, 1181,
	343, 1181,
	344, 1181,
	345, 1181,
	347, 1181,
	349, 1181,
	350, 1181,
	351, 1181,
	352, 1181,
	353, 1181,
	354, 1181,
	355, 1181,
	356, 1181,
	357, 1181,
	358, 1181,
	359, 1181,
	360, 1181,
	362, 1181,
	363, 1181,
	364, 1181,
	365, 1181,
	366, 1181,
	367, 1181,
	368, 1181,
	369, 1181,
	370, 1181,
	371, 1181,
	372, 1181,
	373, 1181,
	374, 1181,
	375, 1181,
	376, 1181,
	378, 1181,
	379, 1181,
	381, 1181,
	382, 1181,
	383, 1181,
	384, 1181,
	385, 1181,
	386, 1181,
	387, 1181,
	388, 1181,
	389, 1181,
	390, 1181,
	391, 1181,
	392, 1181,
	394, 1181,
	396, 1181,
	397, 1181,
	398, 1181,
	403, 1181,
	405, 1181,
	406, 1181,
	407, 1181,
	408, 1181,
	409, 1181,
	410, 1181,
	411, 1181,
	412, 1181,
	414, 1181,
	415, 1181,
	416, 1181,
	418, 1181,
	419, 1181,
	420, 1181,
	421, 1181,
	422, 1181,
	423, 1181,
	425, 1181,
	426, 1181,
	427, 1181,
	428, 1181,
	429, 1181,
	430, 1181,
	431, 1181,
	432, 1181,
	433, 1181,
	434, 1181,
	435, 1181,
	437, 1181,
	438, 1181,
	439, 1181,
	440, 1181,
	441, 1181,
	442, 1181,
	444, 1181,
	445, 1181,
	446, 1181,
	447, 1181,
	448, 1181,
	449, 1181,
	451, 1181,
	452, 1181,
	453, 1181,
	454, 1181,
	455, 1181,
	456, 1181,
	457, 1181,
	459, 1181,
	461, 1181,
	462, 1181,
	463, 1181,
	464, 1181,
	465, 1181,
	466, 1181,
	467, 1181,
	468, 1181,
	469, 1181,
	470, 1181,
	471, 1181,
	472, 1181,
	473, 1181,
	474, 1181,
	476, 1181,
	477, 1181,
	479, 1181,
	481, 1181,
	482, 1181,
	483, 1181,
	484, 1181,
	485, 1181,
	486, 1181,
	487, 1181,
	488, 1181,
	489, 1181,
	491, 1181,
	492, 1181,
	493, 1181,
	494, 1181,
	495, 1181,
	497, 1181,
	499, 1181,
	500, 1181,
	501, 1181,
	502, 1181,
	503, 1181,
	504, 1181,
	506, 1181,
	507, 1181,
	508, 1181,
	509, 1181,
	511, 1181,
	512, 1181,
	515, 1181,
	516, 1181,
	517, 1181,
	518, 1181,
	519, 1181,
	520, 1181,
	521, 1181,
	523, 1181,
	526, 1181,
	527, 1181,
	528, 1181,
	529, 1181,
	530, 1181,
	531, 1181,
	533, 1181,
	534, 1181,
	535, 1181,
	536, 1181,
	541, 1181,
	542, 1181,
	543, 1181,
	544, 1181,
	545, 1181,
	546, 1181,
	-2, 0,
	-1, 727,
	183, 2179,
	496, 2179,
	554, 2179,
	573, 2179,
	-2, 0,
	-1, 728,
	183, 2279,
	496, 2279,
	554, 2279,
	573, 2279,
	-2, 0,
	-1, 729,
	183, 2166,
	496, 2166,
	554, 2166,
	573, 2166,
	-2, 0,
	-1, 731,
	183, 2408,
	496, 2408,
	554, 2408,
	573, 2408,
	-2, 0,
	-1, 733,
	183, 2445,
	496, 2445,
	554, 2445,
	573, 2445,
	-2, 0,
	-1, 740,
	183, 2306,
	496, 2306,
	554, 2306,
	573, 2306,
	-2, 642,
	-1, 769,
	573, 2114,
	576, 2114,
	-2, 896,
	-1, 770,
	573, 2116,
	576, 2116,
	-2, 897,
	-1, 771,
	573, 2115,
	576, 2115,
	-2, 898,
	-1, 772,
	576, 2041,
	-2, 899,
	-1, 795,
	180, 235,
	-2, 0,
	-1, 818,
	44, 2088,
	-2, 0,
	-1, 819,
	533, 1160,
	-2, 964,
	-1, 835,
	4, 1550,
	21, 1550,
	22, 1550,
	23, 1550,
	24, 1550,
	25, 1550,
	26, 1550,
	27, 1550,
	28, 1550,
	30, 1550,
	31, 1550,
	37, 1550,
	42, 1550,
	43, 1550,
	45, 1550,
	46, 1550,
	47, 1550,
	48, 1550,
	49, 1550,
	50, 1550,
	51, 1550,
	52, 1550,
	54, 1550,
	55, 1550,
	56, 1550,
	57, 1550,
	59, 1550,
	60, 1550,
	61, 1550,
	62, 1550,
	63, 1550,
	64, 1550,
	65, 1550,
	69, 1550,
	70, 1550,
	71, 1550,
	72, 1550,
	74, 1550,
	75, 1550,
	76, 1550,
	80, 1550,
	81, 1550,
	82, 1550,
	83, 1550,
	84, 1550,
	85, 1550,
	86, 1550,
	89, 1550,
	90, 1550,
	91, 1550,
	92, 1550,
	93, 1550,
	95, 1550,
	97, 1550,
	98, 1550,
	99, 1550,
	100, 1550,
	101, 1550,
	102, 1550,
	104, 1550,
	105, 1550,
	106, 1550,
	108, 1550,
	109, 1550,
	117, 1550,
	118, 1550,
	119, 1550,
	120, 1550,
	122, 1550,
	123, 1550,
	124, 1550,
	126, 1550,
	127, 1550,
	128, 1550,
	130, 1550,
	131, 1550,
	133, 1550,
	134, 1550,
	135, 1550,
	138, 1550,
	139, 1550,
	140, 1550,
	142, 1550,
	143, 1550,
	145, 1550,
	146, 1550,
	147, 1550,
	149, 1550,
	150, 1550,
	151, 1550,
	152, 1550,
	153, 1550,
	154, 1550,
	155, 1550,
	156, 1550,
	157, 1550,
	158, 1550,
	159, 1550,
	160, 1550,
	161, 1550,
	162, 1550,
	163, 1550,
	164, 1550,
	166, 1550,
	172, 1550,
	173, 1550,
	174, 1550,
	175, 1550,
	179, 1550,
	181, 1550,
	185, 1550,
	186, 1550,
	187, 1550,
	188, 1550,
	189, 1550,
	190, 1550,
	191, 1550,
	192, 1550,
	193, 1550,
	194, 1550,
	195, 1550,
	196, 1550,
	198, 1550,
	199, 1550,
	201, 1550,
	202, 1550,
	204, 1550,
	205, 1550,
	206, 1550,
	207, 1550,
	208, 1550,
	209, 1550,
	210, 1550,
	211, 1550,
	212, 1550,
	214, 1550,
	215, 1550,
	217, 1550,
	218, 1550,
	219, 1550,
	220, 1550,
	224, 1550,
	225, 1550,
	226, 1550,
	227, 1550,
	228, 1550,
	231, 1550,
	232, 1550,
	233, 1550,
	235, 1550,
	237, 1550,
	238, 1550,
	240, 1550,
	242, 1550,
	243, 1550,
	244, 1550,
	246, 1550,
	250, 1550,
	251, 1550,
	252, 1550,
	253, 1550,
	254, 1550,
	255, 1550,
	257, 1550,
	258, 1550,
	259, 1550,
	261, 1550,
	262, 1550,
	264, 1550,
	265, 1550,
	268, 1550,
	272, 1550,
	273, 1550,
	274, 1550,
	277, 1550,
	278, 1550,
	279, 1550,
	280, 1550,
	282, 1550,
	283, 1550,
	284, 1550,
	285, 1550,
	286, 1550,
	287, 1550,
	288, 1550,
	289, 1550,
	290, 1550,
	291, 1550,
	292, 1550,
	293, 1550,
	294, 1550,
	295, 1550,
	296, 1550,
	297, 1550,
	298, 1550,
	299, 1550,
	300, 1550,
	301, 1550,
	302, 1550,
	303, 1550,
	305, 1550,
	307, 1550,
	308, 1550,
	309, 1550,
	310, 1550,
	311, 1550,
	312, 1550,
	313, 1550,
	314, 1550,
	315, 1550,
	316, 1550,
	317, 1550,
	318, 1550,
	320, 1550,
	322, 1550,
	324, 1550,
	325, 1550,
	327, 1550,
	328, 1550,
	329, 1550,
	330, 1550,
	331, 1550,
	334, 1550,
	338, 1550,
	339, 1550,
	340, 1550,
	343, 1550,
	344, 1550,
	345, 1550,
	347, 1550,
	349, 1550,
	350, 1550,
	351, 1550,
	352, 1550,
	353, 1550,
	354, 1550,
	355, 1550,
	356, 1550,
	357, 1550,
	358, 1550,
	359, 1550,
	360, 1550,
	362, 1550,
	363, 1550,
	364, 1550,
	365, 1550,
	366, 1550,
	367, 1550,
	368, 1550,
	369, 1550,
	370, 1550,
	371, 1550,
	372, 1550,
	373, 1550,
	374, 1550,
	375, 1550,
	376, 1550,
	378, 1550,
	379, 1550,
	381, 1550,
	382, 1550,
	383, 1550,
	384, 1550,
	385, 1550,
	386, 1550,
	387, 1550,
	388, 1550,
	389, 1550,
	390, 1550,
	391, 1550,
	392, 1550,
	394, 1550,
	396, 1550,
	397, 1550,
	398, 1550,
	403, 1550,
	405, 1550,
	406, 1550,
	407, 1550,
	408, 1550,
	409, 1550,
	410, 1550,
	411, 1550,
	412, 1550,
	414, 1550,
	415, 1550,
	416, 1550,
	418, 1550,
	419, 1550,
	420, 1550,
	421, 1550,
	422, 1550,
	423, 1550,
	425, 1550,
	426, 1550,
	427, 1550,
	428, 1550,
	429, 1550,
	430, 1550,
	431, 1550,
	432, 1550,
	433, 1550,
	434, 1550,
	435, 1550,
	437, 1550,
	438, 1550,
	439, 1550,
	440, 1550,
	441, 1550,
	442, 1550,
	444, 1550,
	445, 1550,
	446, 1550,
	447, 1550,
	448, 1550,
	449, 1550,
	451, 1550,
	452, 1550,
	453, 1550,
	454, 1550,
	455, 1550,
	456, 1550,
	457, 1550,
	459, 1550,
	461, 1550,
	462, 1550,
	463, 1550,
	464, 1550,
	465, 1550,
	466, 1550,
	467, 1550,
	468, 1550,
	469, 1550,
	470, 1550,
	471, 1550,
	472, 1550,
	473, 1550,
	474, 1550,
	476, 1550,
	477, 1550,
	479, 1550,
	481, 1550,
	482, 1550,
	483, 1550,
	484, 1550,
	485, 1550,
	486, 1550,
	487, 1550,
	488, 1550,
	489, 1550,
	491, 1550,
	492, 1550,
	493, 1550,
	494, 1550,
	495, 1550,
	497, 1550,
	499, 1550,
	500, 1550,
	501, 1550,
	502, 1550,
	503, 1550,
	504, 1550,
	506, 1550,
	507, 1550,
	508, 1550,
	509, 1550,
	511, 1550,
	512, 1550,
	515, 1550,
	516, 1550,
	517, 1550,
	518, 1550,
	519, 1550,
	520, 1550,
	521, 1550,
	523, 1550,
	526, 1550,
	527, 1550,
	528, 1550,
	529, 1550,
	530, 1550,
	531, 1550,
	533, 1550,
	534, 1550,
	535, 1550,
	536, 1550,
	541, 1550,
	542, 1550,
	543, 1550,
	544, 1550,
	545, 1550,
	546, 1550,
	-2, 0,
	-1, 843,
	254, 368,
	-2, 0,
	-1, 913,
	383, 805,
	442, 805,
	501, 805,
	-2, 0,
	-1, 914,
	383, 804,
	442, 804,
	501, 804,
	-2, 746,
	-1, 918,
	1, 849,
	570, 849,
	572, 849,
	574, 849,
	-2, 0,
	-1, 919,
	1, 781,
	570, 781,
	572, 781,
	574, 781,
	-2, 0,
	-1, 920,
	1, 783,
	570, 783,
	572, 783,
	574, 783,
	-2, 0,
	-1, 921,
	1, 895,
	180, 895,
	570, 895,
	572, 895,
	574, 895,
	-2, 0,
	-1, 929,
	1, 808,
	570, 808,
	572, 808,
	574, 808,
	-2, 0,
	-1, 935,
	1, 849,
	570, 849,
	572, 849,
	574, 849,
	-2, 0,
	-1, 936,
	1, 851,
	570, 851,
	572, 851,
	574, 851,
	-2, 0,
	-1, 937,
	1, 854,
	570, 854,
	572, 854,
	574, 854,
	-2, 0,
	-1, 943,
	1, 871,
	570, 871,
	572, 871,
	574, 871,
	-2, 0,
	-1, 944,
	1, 873,
	570, 873,
	572, 873,
	574, 873,
	-2, 0,
	-1, 995,
	167, 1426,
	180, 1426,
	267, 1426,
	332, 1426,
	-2, 1362,
	-1, 1010,
	167, 1425,
	180, 1425,
	267, 1425,
	332, 1425,
	-2, 1359,
	-1, 1036,
	573, 2113,
	-2, 650,
	-1, 1064,
	5, 2105,
	571, 2103,
	-2, 2094,
	-1, 1072,
	5, 2126,
	571, 2123,
	-2, 2114,
	-1, 1073,
	5, 2127,
	571, 2124,
	-2, 2115,
	-1, 1081,
	573, 2111,
	-2, 2093,
	-1, 1082,
	571, 2527,
	-2, 2112,
	-1, 1105,
	571, 2526,
	-2, 2128,
	-1, 1106,
	5, 1625,
	-2, 2497,
	-1, 1107,
	5, 1626,
	-2, 2498,
	-1, 1108,
	5, 1627,
	-2, 2512,
	-1, 1109,
	5, 1628,
	-2, 2476,
	-1, 1110,
	5, 1629,
	-2, 2510,
	-1, 1111,
	5, 1637,
	-2, 2489,
	-1, 1112,
	5, 1624,
	-2, 2485,
	-1, 1113,
	5, 1624,
	-2, 2484,
	-1, 1114,
	5, 1624,
	-2, 2503,
	-1, 1115,
	5, 1635,
	-2, 2478,
	-1, 1116,
	5, 1640,
	-2, 2477,
	-1, 1117,
	5, 1642,
	-2, 2522,
	-1, 1120,
	5, 1664,
	-2, 2515,
	-1, 1121,
	5, 1656,
	-2, 2516,
	-1, 1122,
	5, 1664,
	-2, 2517,
	-1, 1123,
	5, 1660,
	-2, 2518,
	-1, 1124,
	5, 1610,
	-2, 2490,
	-1, 1125,
	5, 1611,
	-2, 2491,
	-1, 1126,
	5, 1612,
	-2, 2479,
	-1, 1154,
	5, 1647,
	-2, 2523,
	-1, 1155,
	5, 1648,
	-2, 2513,
	-1, 1156,
	5, 1649,
	534, 1649,
	-2, 2480,
	-1, 1157,
	5, 1650,
	534, 1650,
	-2, 2481,
	-1, 1194,
	571, 2123,
	-2, 2114,
	-1, 1195,
	571, 2124,
	-2, 2115,
	-1, 1294,
	183, 2445,
	496, 2445,
	554, 2445,
	573, 2445,
	-2, 0,
	-1, 1297,
	1, 628,
	574, 628,
	-2, 1283,
	-1, 1424,
	405, 2089,
	444, 2089,
	564, 2089,
	-2, 2079,
	-1, 1435,
	575, 2089,
	-2, 2090,
	-1, 1440,
	1, 1157,
	570, 1157,
	572, 1157,
	574, 1157,
	-2, 1411,
	-1, 1488,
	390, 963,
	533, 963,
	-2, 363,
	-1, 1504,
	44, 2087,
	-2, 931,
	-1, 1511,
	1, 1157,
	570, 1157,
	572, 1157,
	574, 1157,
	-2, 1411,
	-1, 1518,
	4, 1181,
	21, 1181,
	22, 1181,
	23, 1181,
	24, 1181,
	25, 1181,
	26, 1181,
	27, 1181,
	28, 1181,
	30, 1181,
	31, 1181,
	37, 1181,
	42, 1181,
	43, 1181,
	45, 1181,
	46, 1181,
	47, 1181,
	48, 1181,
	49, 1181,
	50, 1181,
	51, 1181,
	52, 1181,
	54, 1181,
	55, 1181,
	56, 1181,
	57, 1181,
	59, 1181,
	60, 1181,
	61, 1181,
	62, 1181,
	63, 1181,
	64, 1181,
	65, 1181,
	69, 1181,
	70, 1181,
	71, 1181,
	72, 1181,
	74, 1181,
	75, 1181,
	76, 1181,
	80, 1181,
	81, 1181,
	82, 1181,
	83, 1181,
	84, 1181,
	85, 1181,
	86, 1181,
	89, 1181,
	90, 1181,
	91, 1181,
	92, 1181,
	93, 1181,
	95, 1181,
	97, 1181,
	98, 1181,
	99, 1181,
	100, 1181,
	101, 1181,
	102, 1181,
	104, 1181,
	105, 1181,
	106, 1181,
	108, 1181,
	109, 1181,
	117, 1181,
	118, 1181,
	119, 1181,
	120, 1181,
	122, 1181,
	123, 1181,
	124, 1181,
	126, 1181,
	127, 1181,
	128, 1181,
	130, 1181,
	131, 1181,
	133, 1181,
	134, 1181,
	135, 1181,
	138, 1181,
	139, 1181,
	140, 1181,
	142, 1181,
	143, 1181,
	145, 1181,
	146, 1181,
	147, 1181,
	149, 1181,
	150, 1181,
	151, 1181,
	152, 1181,
	153, 1181,
	154, 1181,
	155, 1181,
	156, 1181,
	157, 1181,
	158, 1181,
	159, 1181,
	160, 1181,
	161, 1181,
	162, 1181,
	163, 1181,
	164, 1181,
	172, 1181,
	173, 1181,
	174, 1181,
	175, 1181,
	179, 1181,
	181, 1181,
	185, 1181,
	186, 1181,
	187, 1181,
	188, 1181,
	189, 1181,
	190, 1181,
	191, 1181,
	192, 1181,
	193, 1181,
	194, 1181,
	195, 1181,
	196, 1181,
	198, 1181,
	199, 1181,
	201, 1181,
	202, 1181,
	204, 1181,
	205, 1181,
	206, 1181,
	207, 1181,
	208, 1181,
	209, 1181,
	210, 1181,
	211, 1181,
	212, 1181,
	214, 1181,
	215, 1181,
	217, 1181,
	218, 1181,
	219, 1181,
	220, 1181,
	225, 1181,
	226, 1181,
	227, 1181,
	228, 1181,
	231, 1181,
	232, 1181,
	233, 1181,
	235, 1181,
	237, 1181,
	238, 1181,
	240, 1181,
	242, 1181,
	243, 1181,
	244, 1181,
	246, 1181,
	250, 1181,
	251, 1181,
	252, 1181,
	253, 1181,
	254, 1181,
	255, 1181,
	257, 1181,
	258, 1181,
	259, 1181,
	261, 1181,
	262, 1181,
	264, 1181,
	265, 1181,
	268, 1181,
	272, 1181,
	273, 1181,
	274, 1181,
	277, 1181,
	278, 1181,
	279, 1181,
	280, 1181,
	282, 1181,
	283, 1181,
	284, 1181,
	285, 1181,
	286, 1181,
	287, 1181,
	288, 1181,
	289, 1181,
	290, 1181,
	291, 1181,
	292, 1181,
	293, 1181,
	294, 1181,
	295, 1181,
	296, 1181,
	297, 1181,
	298, 1181,
	299, 1181,
	300, 1181,
	301, 1181,
	302, 1181,
	303, 1181,
	305, 1181,
	307, 1181,
	308, 1181,
	309, 1181,
	310, 1181,
	311, 1181,
	312, 1181,
	313, 1181,
	314, 1181,
	315, 1181,
	316, 1181,
	317, 1181,
	318, 1181,
	320, 1181,
	324, 1181,
	325, 1181,
	327, 1181,
	328, 1181,
	329, 1181,
	330, 1181,
	331, 1181,
	334, 1181,
	336, 1181,
	338, 1181,
	339, 1181,
	340, 1181,
	343, 1181,
	344, 1181,
	345, 1181,
	347, 1181,
	349, 1181,
	350, 1181,
	351, 1181,
	352, 1181,
	353, 1181,
	354, 1181,
	355, 1181,
	356, 1181,
	357, 1181,
	358, 1181,
	359, 1181,
	360, 1181,
	362, 1181,
	363, 1181,
	364, 1181,
	365, 1181,
	366, 1181,
	367, 1181,
	368, 1181,
	369, 1181,
	370, 1181,
	371, 1181,
	372, 1181,
	373, 1181,
	374, 1181,
	375, 1181,
	376, 1181,
	378, 1181,
	379, 1181,
	381, 1181,
	382, 1181,
	383, 1181,
	384, 1181,
	385, 1181,
	386, 1181,
	387, 1181,
	388, 1181,
	389, 1181,
	390, 1181,
	391, 1181,
	392, 1181,
	394, 1181,
	396, 1181,
	397, 1181,
	398, 1181,
	403, 1181,
	405, 1181,
	406, 1181,
	407, 1181,
	408, 1181,
	409, 1181,
	410, 1181,
	411, 1181,
	412, 1181,
	414, 1181,
	415, 1181,
	416, 1181,
	418, 1181,
	419, 1181,
	420, 1181,
	421, 1181,
	422, 1181,
	423, 1181,
	425, 1181,
	426, 1181,
	427, 1181,
	428, 1181,
	429, 1181,
	430, 1181,
	431, 1181,
	432, 1181,
	433, 1181,
	434, 1181,
	435, 1181,
	437, 1181,
	438, 1181,
	439, 1181,
	440, 1181,
	441, 1181,
	442, 1181,
	444, 1181,
	445, 1181,
	446, 1181,
	447, 1181,
	448, 1181,
	449, 1181,
	451, 1181,
	452, 1181,
	453, 1181,
	454, 1181,
	455, 1181,
	456, 1181,
	457, 1181,
	459, 1181,
	461, 1181,
	462, 1181,
	463, 1181,
	464, 1181,
	465, 1181,
	466, 1181,
	467, 1181,
	468, 1181,
	469, 1181,
	470, 1181,
	471, 1181,
	472, 1181,
	473, 1181,
	474, 1181,
	476, 1181,
	477, 1181,
	479, 1181,
	481, 1181,
	482, 1181,
	483, 1181,
	484, 1181,
	485, 1181,
	486, 1181,
	487, 1181,
	488, 1181,
	489, 1181,
	491, 1181,
	492, 1181,
	493, 1181,
	494, 1181,
	495, 1181,
	497, 1181,
	499, 1181,
	500, 1181,
	501, 1181,
	502, 1181,
	503, 1181,
	504, 1181,
	506, 1181,
	507, 1181,
	508, 1181,
	509, 1181,
	511, 1181,
	512, 1181,
	515, 1181,
	516, 1181,
	517, 1181,
	518, 1181,
	519, 1181,
	520, 1181,
	521, 1181,
	523, 1181,
	526, 1181,
	527, 1181,
	528, 1181,
	529, 1181,
	530, 1181,
	531, 1181,
	533, 1181,
	534, 1181,
	535, 1181,
	536, 1181,
	541, 1181,
	542, 1181,
	543, 1181,
	544, 1181,
	545, 1181,
	546, 1181,
	-2, 0,
	-1, 1541,
	1, 501,
	570, 501,
	572, 501,
	574, 501,
	-2, 1382,
	-1, 1544,
	4, 2521,
	11, 2521,
	12, 2521,
	14, 2521,
	15, 2521,
	16, 2521,
	17, 2521,
	18, 2521,
	19, 2521,
	21, 2521,
	22, 2521,
	23, 2521,
	24, 2521,
	25, 2521,
	26, 2521,
	27, 2521,
	28, 2521,
	30, 2521,
	31, 2521,
	34, 2521,
	35, 2521,
	37, 2521,
	39, 2521,
	42, 2521,
	43, 2521,
	45, 2521,
	46, 2521,
	47, 2521,
	48, 2521,
	49, 2521,
	50, 2521,
	51, 2521,
	52, 2521,
	54, 2521,
	55, 2521,
	56, 2521,
	57, 2521,
	59, 2521,
	60, 2521,
	61, 2521,
	62, 2521,
	63, 2521,
	64, 2521,
	65, 2521,
	69, 2521,
	70, 2521,
	71, 2521,
	72, 2521,
	74, 2521,
	75, 2521,
	76, 2521,
	77, 2521,
	80, 2521,
	81, 2521,
	82, 2521,
	83, 2521,
	84, 2521,
	85, 2521,
	86, 2521,
	87, 2521,
	89, 2521,
	90, 2521,
	91, 2521,
	92, 2521,
	93, 2521,
	95, 2521,
	96, 2521,
	97, 2521,
	98, 2521,
	99, 2521,
	100, 2521,
	101, 2521,
	102, 2521,
	104, 2521,
	105, 2521,
	106, 2521,
	107, 2521,
	108, 2521,
	109, 2521,
	117, 2521,
	118, 2521,
	119, 2521,
	120, 2521,
	122, 2521,
	123, 2521,
	124, 2521,
	126, 2521,
	127, 2521,
	128, 2521,
	130, 2521,
	131, 2521,
	133, 2521,
	134, 2521,
	135, 2521,
	138, 2521,
	139, 2521,
	140, 2521,
	142, 2521,
	143, 2521,
	145, 2521,
	146, 2521,
	147, 2521,
	149, 2521,
	150, 2521,
	151, 2521,
	152, 2521,
	153, 2521,
	154, 2521,
	155, 2521,
	156, 2521,
	157, 2521,
	158, 2521,
	159, 2521,
	160, 2521,
	161, 2521,
	162, 2521,
	163, 2521,
	164, 2521,
	168, 2521,
	169, 2521,
	170, 2521,
	171, 2521,
	172, 2521,
	173, 2521,
	174, 2521,
	175, 2521,
	178, 2521,
	179, 2521,
	181, 2521,
	184, 2521,
	185, 2521,
	186, 2521,
	187, 2521,
	188, 2521,
	189, 2521,
	190, 2521,
	191, 2521,
	192, 2521,
	193, 2521,
	194, 2521,
	195, 2521,
	196, 2521,
	198, 2521,
	199, 2521,
	201, 2521,
	202, 2521,
	204, 2521,
	205, 2521,
	206, 2521,
	207, 2521,
	208, 2521,
	209, 2521,
	210, 2521,
	211, 2521,
	212, 2521,
	213, 2521,
	214, 2521,
	215, 2521,
	216, 2521,
	217, 2521,
	218, 2521,
	219, 2521,
	220, 2521,
	222, 2521,
	223, 2521,
	225, 2521,
	226, 2521,
	227, 2521,
	228, 2521,
	230, 2521,
	231, 2521,
	232, 2521,
	233, 2521,
	235, 2521,
	237, 2521,
	238, 2521,
	239, 2521,
	240, 2521,
	241, 2521,
	242, 2521,
	243, 2521,
	244, 2521,
	245, 2521,
	246, 2521,
	248, 2521,
	249, 2521,
	250, 2521,
	251, 2521,
	252, 2521,
	253, 2521,
	254, 2521,
	255, 2521,
	257, 2521,
	258, 2521,
	259, 2521,
	261, 2521,
	262, 2521,
	263, 2521,
	264, 2521,
	265, 2521,
	266, 2521,
	268, 2521,
	272, 2521,
	273, 2521,
	274, 2521,
	277, 2521,
	278, 2521,
	279, 2521,
	280, 2521,
	281, 2521,
	282, 2521,
	283, 2521,
	284, 2521,
	285, 2521,
	286, 2521,
	287, 2521,
	288, 2521,
	289, 2521,
	290, 2521,
	291, 2521,
	292, 2521,
	293, 2521,
	294, 2521,
	295, 2521,
	296, 2521,
	297, 2521,
	298, 2521,
	299, 2521,
	300, 2521,
	301, 2521,
	302, 2521,
	303, 2521,
	305, 2521,
	306, 2521,
	307, 2521,
	308, 2521,
	309, 2521,
	310, 2521,
	311, 2521,
	312, 2521,
	313, 2521,
	314, 2521,
	315, 2521,
	316, 2521,
	317, 2521,
	318, 2521,
	320, 2521,
	323, 2521,
	324, 2521,
	325, 2521,
	327, 2521,
	328, 2521,
	329, 2521,
	330, 2521,
	331, 2521,
	334, 2521,
	338, 2521,
	339, 2521,
	340, 2521,
	341, 2521,
	343, 2521,
	344, 2521,
	345, 2521,
	347, 2521,
	349, 2521,
	350, 2521,
	351, 2521,
	352, 2521,
	353, 2521,
	354, 2521,
	355, 2521,
	356, 2521,
	357, 2521,
	358, 2521,
	359, 2521,
	360, 2521,
	362, 2521,
	363, 2521,
	364, 2521,
	365, 2521,
	366, 2521,
	367, 2521,
	368, 2521,
	369, 2521,
	370, 2521,
	371, 2521,
	372, 2521,
	373, 2521,
	374, 2521,
	375, 2521,
	376, 2521,
	378, 2521,
	379, 2521,
	381, 2521,
	382, 2521,
	383, 2521,
	384, 2521,
	385, 2521,
	386, 2521,
	387, 2521,
	388, 2521,
	389, 2521,
	390, 2521,
	391, 2521,
	392, 2521,
	394, 2521,
	396, 2521,
	397, 2521,
	398, 2521,
	403, 2521,
	404, 2521,
	405, 2521,
	406, 2521,
	407, 2521,
	408, 2521,
	409, 2521,
	410, 2521,
	411, 2521,
	412, 2521,
	414, 2521,
	415, 2521,
	416, 2521,
	417, 2521,
	418, 2521,
	419, 2521,
	420, 2521,
	421, 2521,
	422, 2521,
	423, 2521,
	424, 2521,
	425, 2521,
	426, 2521,
	427, 2521,
	428, 2521,
	429, 2521,
	430, 2521,
	431, 2521,
	432, 2521,
	433, 2521,
	434, 2521,
	435, 2521,
	437, 2521,
	438, 2521,
	439, 2521,
	440, 2521,
	441, 2521,
	442, 2521,
	444, 2521,
	445, 2521,
	446, 2521,
	447, 2521,
	448, 2521,
	449, 2521,
	450, 2521,
	451, 2521,
	452, 2521,
	453, 2521,
	454, 2521,
	455, 2521,
	456, 2521,
	457, 2521,
	459, 2521,
	461, 2521,
	462, 2521,
	463, 2521,
	464, 2521,
	465, 2521,
	466, 2521,
	467, 2521,
	468, 2521,
	469, 2521,
	470, 2521,
	471, 2521,
	472, 2521,
	473, 2521,
	474, 2521,
	476, 2521,
	477, 2521,
	479, 2521,
	481, 2521,
	482, 2521,
	483, 2521,
	484, 2521,
	485, 2521,
	486, 2521,
	487, 2521,
	488, 2521,
	489, 2521,
	491, 2521,
	492, 2521,
	493, 2521,
	494, 2521,
	495, 2521,
	497, 2521,
	499, 2521,
	500, 2521,
	501, 2521,
	502, 2521,
	503, 2521,
	504, 2521,
	506, 2521,
	507, 2521,
	508, 2521,
	509, 2521,
	511, 2521,
	512, 2521,
	515, 2521,
	516, 2521,
	517, 2521,
	518, 2521,
	519, 2521,
	520, 2521,
	521, 2521,
	523, 2521,
	526, 2521,
	527, 2521,
	528, 2521,
	529, 2521,
	530, 2521,
	531, 2521,
	533, 2521,
	534, 2521,
	535, 2521,
	536, 2521,
	541, 2521,
	542, 2521,
	543, 2521,
	544, 2521,
	545, 2521,
	546, 2521,
	547, 2521,
	549, 2521,
	552, 2521,
	553, 2521,
	554, 2521,
	555, 2521,
	556, 2521,
	557, 2521,
	559, 2521,
	560, 2521,
	561, 2521,
	562, 2521,
	563, 2521,
	564, 2521,
	565, 2521,
	566, 2521,
	567, 2521,
	569, 2521,
	572, 2521,
	573, 2521,
	575, 2521,
	576, 2521,
	-2, 0,
	-1, 1549,
	183, 2408,
	496, 2408,
	554, 2408,
	573, 2408,
	-2, 0,
	-1, 1598,
	383, 805,
	442, 805,
	501, 805,
	-2, 0,
	-1, 1624,
	1, 800,
	570, 800,
	572, 800,
	574, 800,
	-2, 0,
	-1, 1625,
	1, 836,
	570, 836,
	572, 836,
	574, 836,
	-2, 0,
	-1, 1626,
	1, 844,
	570, 844,
	572, 844,
	574, 844,
	-2, 0,
	-1, 1627,
	1, 807,
	570, 807,
	572, 807,
	574, 807,
	-2, 0,
	-1, 1629,
	1, 811,
	570, 811,
	572, 811,
	574, 811,
	-2, 0,
	-1, 1635,
	1, 818,
	570, 818,
	572, 818,
	574, 818,
	-2, 0,
	-1, 1663,
	1, 2467,
	570, 2467,
	572, 2467,
	573, 2467,
	574, 2467,
	-2, 869,
	-1, 1664,
	1, 2405,
	570, 2405,
	572, 2405,
	573, 2405,
	574, 2405,
	-2, 870,
	-1, 1680,
	1, 1278,
	574, 1278,
	-2, 1283,
	-1, 1683,
	167, 1425,
	180, 1425,
	267, 1425,
	332, 1425,
	-2, 1363,
	-1, 1777,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1825,
	-1, 1837,
	572, 1975,
	-2, 0,
	-1, 1872,
	148, 1384,
	167, 1384,
	180, 1384,
	234, 1384,
	267, 1384,
	332, 1384,
	342, 1384,
	513, 1384,
	-2, 1512,
	-1, 1921,
	571, 1652,
	-2, 1640,
	-1, 1999,
	1, 630,
	574, 630,
	-2, 1283,
	-1, 2118,
	216, 236,
	-2, 2122,
	-1, 2119,
	216, 237,
	-2, 279,
	-1, 2218,
	1, 802,
	570, 802,
	572, 802,
	574, 802,
	-2, 0,
	-1, 2219,
	1, 838,
	570, 838,
	572, 838,
	574, 838,
	-2, 0,
	-1, 2220,
	1, 846,
	570, 846,
	572, 846,
	574, 846,
	-2, 0,
	-1, 2253,
	1, 820,
	570, 820,
	572, 820,
	574, 820,
	-2, 0,
	-1, 2300,
	422, 1452,
	423, 1452,
	-2, 1685,
	-1, 2331,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1705,
	-1, 2332,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1706,
	-1, 2333,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1707,
	-1, 2334,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1708,
	-1, 2335,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1709,
	-1, 2336,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1710,
	-1, 2337,
	96, 0,
	248, 0,
	249, 0,
	556, 0,
	557, 0,
	-2, 1711,
	-1, 2338,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1712,
	-1, 2350,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1724,
	-1, 2351,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1725,
	-1, 2352,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1726,
	-1, 2355,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1731,
	-1, 2361,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1735,
	-1, 2363,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1743,
	-1, 2364,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1744,
	-1, 2365,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1745,
	-1, 2366,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1746,
	-1, 2502,
	5, 2126,
	183, 1986,
	571, 2123,
	-2, 2114,
	-1, 2503,
	183, 1987,
	-2, 2472,
	-1, 2504,
	183, 1988,
	-2, 2305,
	-1, 2505,
	183, 1989,
	-2, 2195,
	-1, 2506,
	183, 1990,
	-2, 2246,
	-1, 2507,
	183, 1991,
	-2, 2290,
	-1, 2508,
	183, 1992,
	-2, 2403,
	-1, 2509,
	183, 1993,
	-2, 1808,
	-1, 2578,
	1, 1513,
	2, 1513,
	107, 1513,
	148, 1513,
	167, 1513,
	180, 1513,
	184, 1513,
	200, 1513,
	203, 1513,
	230, 1513,
	234, 1513,
	245, 1513,
	263, 1513,
	267, 1513,
	306, 1513,
	332, 1513,
	336, 1513,
	342, 1513,
	413, 1513,
	417, 1513,
	513, 1513,
	524, 1513,
	538, 1513,
	539, 1513,
	540, 1513,
	550, 1513,
	570, 1513,
	572, 1513,
	574, 1513,
	576, 1513,
	-2, 1512,
	-1, 2591,
	571, 2095,
	-2, 2109,
	-1, 2593,
	54, 1411,
	133, 1411,
	-2, 295,
	-1, 2618,
	571, 1651,
	-2, 1641,
	-1, 2793,
	1, 1157,
	570, 1157,
	572, 1157,
	574, 1157,
	-2, 1411,
	-1, 2953,
	337, 1455,
	-2, 2511,
	-1, 2954,
	337, 1456,
	-2, 2389,
	-1, 2958,
	422, 2052,
	423, 2052,
	-2, 1806,
	-1, 2959,
	422, 2056,
	423, 2056,
	-2, 1807,
	-1, 2960,
	422, 2053,
	423, 2053,
	-2, 1806,
	-1, 2961,
	422, 2057,
	423, 2057,
	-2, 1807,
	-1, 2974,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1733,
	-1, 2975,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1737,
	-1, 2981,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1739,
	-1, 3221,
	1, 627,
	570, 627,
	572, 627,
	574, 627,
	-2, 1283,
	-1, 3362,
	44, 2087,
	-2, 932,
	-1, 3367,
	1, 1157,
	570, 1157,
	572, 1157,
	574, 1157,
	-2, 1411,
	-1, 3467,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1741,
	-1, 3474,
	239, 0,
	241, 0,
	323, 0,
	-2, 1760,
	-1, 3541,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1789,
	-1, 3542,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1790,
	-1, 3543,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1791,
	-1, 3547,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1795,
	-1, 3548,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1796,
	-1, 3549,
	14, 0,
	15, 0,
	16, 0,
	552, 0,
	553, 0,
	554, 0,
	-2, 1797,
	-1, 3595,
	571, 2096,
	-2, 2110,
	-1, 3746,
	573, 2628,
	-2, 1337,
	-1, 3802,
	239, 0,
	241, 0,
	323, 0,
	-2, 1761,
	-1, 3805,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1764,
	-1, 3806,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1766,
	-1, 3899,
	573, 2111,
	-2, 1191,
	-1, 4029,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1765,
	-1, 4030,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	213, 0,
	216, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 1767,
	-1, 4041,
	239, 0,
	-2, 1798,
	-1, 4202,
	239, 0,
	-2, 1799,
	-1, 4375,
	51, 0,
	213, 0,
	266, 0,
	450, 0,
	547, 0,
	555, 0,
	-2, 2475,
}

const sqlPrivate = 57344

const sqlLast = 118791

var sqlAct = [...]int{

	258, 4254, 2855, 3352, 4128, 4236, 4082, 2868, 4374, 3132,
	4258, 4357, 4385, 3351, 4491, 4228, 1187, 4275, 3785, 4346,
	2115, 4386, 1064, 4330, 2682, 4327, 4387, 4310, 4069, 2724,
	3895, 4155, 3506, 4135, 4206, 4373, 3986, 4438, 3981, 1198,
	3459, 3738, 3953, 4087, 3379, 4050, 2187, 4018, 1020, 2310,
	3384, 4144, 3935, 3246, 2967, 1259, 3880, 3967, 3680, 3896,
	1452, 1266, 1270, 4169, 1908, 2378, 1011, 1981, 2534, 3991,
	3627, 3377, 2196, 2756, 771, 1692, 3700, 3347, 3698, 3714,
	738, 2318, 2311, 3249, 2844, 4046, 2877, 3337, 2890, 2055,
	3422, 1878, 1330, 2879, 3424, 2826, 2672, 3155, 771, 1252,
	2816, 3598, 1019, 171, 3175, 4, 3147, 3115, 3138, 1564,
	3784, 3841, 2887, 2876, 1956, 2841, 1421, 2870, 845, 2161,
	2839, 2856, 2065, 1606, 2110, 1847, 2109, 3136, 2684, 3566,
	1272, 1823, 4207, 2420, 2391, 1428, 1785, 2315, 2570, 2104,
	1909, 2571, 252, 1563, 2886, 105, 766, 2770, 2723, 2095,
	2422, 3114, 251, 2573, 4255, 1264, 2088, 1506, 2827, 2035,
	2951, 1680, 2194, 1068, 2038, 1178, 1238, 1313, 2552, 1979,
	2411, 2282, 1071, 2375, 2025, 1867, 1848, 3182, 2299, 2280,
	3232, 1261, 2603, 3349, 1073, 1542, 1509, 772, 773, 2849,
	4276, 2149, 2667, 171, 1299, 2880, 838, 669, 2602, 2531,
	2414, 1857, 2560, 655, 1818, 1181, 2542, 677, 1160, 2498,
	1864, 2392, 1770, 180, 1693, 2464, 777, 1694, 1070, 768,
	181, 2148, 720, 1635, 732, 1195, 780, 2281, 2054, 2283,
	1249, 1540, 1177, 2173, 1447, 1533, 4358, 1957, 2304, 1954,
	777, 1049, 672, 1183, 44, 43, 41, 1193, 32, 30,
	780, 1158, 680, 28, 1699, 907, 3002, 1458, 1679, 3580,
	927, 3581, 1970, 2998, 695, 1970, 819, 4560, 3134, 1970,
	4550, 2551, 1970, 4537, 3403, 4536, 1970, 2551, 3403, 2551,
	1970, 1451, 1968, 4527, 152, 1015, 4509, 2123, 4507, 1628,
	4086, 3394, 4086, 72, 4457, 46, 45, 1015, 2123, 1047,
	4416, 1572, 3190, 4409, 4417, 4407, 3393, 2551, 4404, 2551,
	73, 4401, 4405, 147, 4371, 4402, 4370, 860, 2123, 4369,
	2123, 4364, 3205, 1991, 3204, 1991, 77, 4363, 1016, 2123,
	2966, 1991, 4355, 1175, 3087, 3088, 4086, 67, 4353, 4325,
	2544, 4300, 4086, 4086, 48, 2609, 149, 4293, 4292, 4287,
	4286, 2551, 2551, 4086, 4086, 1707, 1708, 1216, 1740, 1741,
	1742, 1750, 1751, 1752, 47, 4280, 84, 2551, 4250, 2123,
	1161, 1161, 3945, 4204, 4301, 3011, 4186, 2609, 1743, 1738,
	3773, 3012, 1988, 4183, 4180, 996, 1710, 2123, 4086, 4137,
	50, 68, 995, 4138, 2628, 1756, 4102, 1190, 51, 4208,
	2123, 4101, 4093, 57, 4092, 2123, 2123, 150, 4086, 4085,
	3102, 1209, 4057, 4086, 4031, 49, 2123, 104, 2609, 4199,
	4010, 1709, 90, 101, 1991, 3999, 3930, 2605, 4187, 3403,
	2551, 1729, 90, 3918, 1991, 1005, 1308, 2551, 1010, 1308,
	1726, 3804, 3754, 1189, 3748, 2609, 3419, 3712, 3419, 3087,
	3088, 3713, 3105, 3106, 3107, 3590, 1164, 3588, 1165, 3591,
	52, 3589, 2195, 2123, 3573, 3570, 3490, 1460, 2551, 1162,
	2123, 3486, 3800, 3418, 2627, 2551, 3410, 3419, 91, 1460,
	3411, 3131, 3126, 3125, 3078, 2551, 2551, 2551, 3079, 3052,
	3044, 1210, 3042, 3053, 3045, 1472, 2551, 3570, 3013, 2893,
	2866, 3093, 2551, 1991, 2183, 2865, 2651, 2608, 2543, 2183,
	2551, 2609, 1732, 1733, 1734, 1735, 3980, 3945, 1558, 2551,
	1707, 1708, 1715, 2600, 1191, 3102, 2594, 2551, 2550, 2182,
	2123, 3001, 2551, 2183, 3919, 222, 3773, 3411, 2417, 2747,
	2059, 3087, 3088, 2666, 3105, 3106, 3107, 2004, 1969, 1985,
	1988, 1710, 2822, 2122, 2764, 2664, 1843, 1747, 1446, 3670,
	1757, 3462, 3440, 1707, 1708, 1865, 1737, 1739, 2098, 2587,
	1608, 3395, 2586, 2585, 2584, 2583, 222, 1166, 1163, 224,
	1004, 1003, 1002, 1753, 1001, 1754, 1709, 1738, 1707, 1708,
	3396, 3857, 1724, 1725, 1710, 1000, 999, 998, 994, 993,
	992, 991, 839, 2930, 3103, 3087, 3088, 990, 1971, 989,
	1745, 1971, 988, 250, 1075, 1971, 3093, 3102, 1971, 1710,
	224, 94, 1971, 2418, 987, 1730, 1971, 986, 223, 1709,
	72, 985, 842, 841, 984, 983, 982, 981, 53, 216,
	3087, 3088, 980, 979, 978, 960, 905, 73, 217, 904,
	903, 902, 56, 901, 1709, 900, 899, 59, 898, 897,
	896, 895, 894, 77, 893, 892, 69, 1755, 891, 223,
	182, 58, 179, 97, 890, 100, 889, 3108, 888, 54,
	887, 886, 3816, 151, 3393, 1744, 885, 1715, 884, 883,
	55, 882, 881, 880, 3087, 3088, 1460, 879, 878, 222,
	877, 876, 1471, 84, 2419, 875, 2416, 62, 3093, 222,
	874, 182, 144, 1275, 1073, 1210, 873, 1988, 863, 3103,
	862, 858, 144, 222, 857, 851, 148, 850, 837, 1466,
	1715, 2447, 836, 2543, 794, 222, 793, 1073, 792, 791,
	843, 1073, 783, 224, 782, 781, 753, 3104, 1736, 744,
	1210, 743, 742, 224, 104, 1715, 726, 1333, 246, 90,
	101, 1333, 245, 244, 243, 1275, 242, 224, 1731, 146,
	241, 3608, 3093, 2638, 1737, 1739, 1969, 240, 3993, 224,
	1988, 1451, 239, 1985, 183, 1312, 1073, 2627, 1073, 1317,
	1073, 2275, 223, 238, 1748, 237, 1275, 236, 235, 234,
	233, 232, 223, 216, 231, 230, 1303, 3093, 229, 228,
	227, 3103, 217, 216, 226, 91, 223, 225, 1436, 3584,
	3420, 1275, 217, 3178, 1630, 3024, 3007, 216, 223, 1431,
	2803, 2613, 2592, 1730, 182, 2577, 217, 3, 2835, 216,
	1868, 1275, 3129, 1826, 182, 2033, 1275, 1459, 217, 2433,
	1825, 2421, 2431, 1990, 1073, 2190, 1073, 1891, 182, 1426,
	1275, 3093, 3104, 1706, 1787, 1796, 1073, 1450, 1073, 2852,
	182, 1454, 1829, 1243, 1246, 3103, 1319, 1197, 1515, 1517,
	3130, 4392, 3098, 3096, 3097, 3089, 3090, 3091, 3092, 3094,
	3095, 1746, 4372, 1256, 4265, 1297, 1721, 1722, 1728, 1749,
	1727, 1723, 4196, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 4190, 1275, 3087, 3088, 3826, 777, 4188, 1438,
	3825, 1326, 4211, 1418, 1423, 1520, 1826, 780, 4045, 222,
	4080, 1073, 4000, 1825, 1073, 2189, 1465, 3979, 3864, 3839,
	3838, 1707, 1708, 3832, 171, 171, 3831, 1545, 1547, 3830,
	3823, 3822, 222, 3820, 3104, 1824, 1292, 3815, 94, 3087,
	3088, 2415, 1449, 1448, 3103, 1738, 3812, 3811, 3711, 3612,
	3611, 1543, 1710, 224, 1504, 3610, 1731, 3995, 3594, 3561,
	3717, 3560, 3559, 3482, 3478, 3173, 1016, 2622, 1577, 3122,
	3099, 3100, 3101, 1576, 3113, 3086, 224, 3098, 3096, 3097,
	3089, 3090, 3091, 3092, 3094, 3095, 3083, 1709, 3082, 179,
	97, 1788, 100, 1786, 1174, 3080, 3051, 1729, 3104, 1707,
	1708, 2130, 223, 3050, 3668, 1460, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 216, 3049, 3046, 222, 1303, 2752, 3043,
	1303, 3023, 217, 1738, 844, 223, 3006, 2999, 1789, 144,
	1710, 2867, 1794, 2578, 2404, 1706, 216, 1073, 2128, 1644,
	1705, 1787, 1684, 1073, 182, 217, 2164, 4554, 1536, 4501,
	1562, 1711, 1712, 1713, 1714, 1716, 1717, 4500, 2837, 4469,
	224, 3093, 3099, 3100, 3101, 1709, 3718, 182, 4426, 3098,
	3096, 3097, 3089, 3090, 3091, 3092, 3094, 3095, 1732, 1733,
	1734, 1735, 4424, 2709, 1283, 1199, 146, 3104, 1715, 1018,
	3508, 4317, 1557, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	4257, 183, 4246, 4212, 1571, 4243, 3093, 1678, 4242, 223,
	3127, 4241, 3087, 3088, 4222, 4210, 4209, 4184, 4168, 4167,
	216, 1713, 1714, 1716, 1717, 2381, 1776, 4153, 3973, 217,
	4150, 4098, 1737, 1739, 3096, 3097, 3089, 3090, 3091, 3092,
	3094, 3095, 4076, 222, 1582, 1539, 4043, 4026, 1073, 1073,
	1073, 840, 4025, 4007, 1073, 1599, 4006, 3970, 3946, 3856,
	222, 1195, 3837, 1195, 3103, 3774, 1715, 1631, 3768, 3765,
	3657, 3089, 3090, 3091, 3092, 3094, 3095, 3656, 1333, 3643,
	3860, 1845, 1016, 1193, 3642, 1193, 1073, 224, 3640, 771,
	2387, 1730, 3994, 222, 3576, 1926, 771, 3718, 3564, 1275,
	3473, 1774, 3421, 3404, 224, 1898, 1681, 3370, 3309, 3278,
	1737, 1739, 3248, 996, 3198, 3028, 3196, 3027, 3022, 1689,
	995, 1688, 1854, 2990, 3097, 3089, 3090, 3091, 3092, 3094,
	3095, 2815, 1683, 1832, 1828, 1831, 223, 224, 1830, 1827,
	1894, 1819, 1685, 1817, 2836, 2620, 2619, 216, 1702, 1703,
	1905, 1899, 2589, 223, 1901, 2582, 217, 1952, 222, 2549,
	2429, 222, 1890, 1846, 216, 1275, 1841, 171, 1840, 1730,
	1839, 1875, 1073, 217, 1851, 1852, 1275, 1838, 182, 3093,
	1895, 2446, 1837, 1836, 1835, 1834, 223, 1833, 1814, 1813,
	1812, 1707, 1708, 1161, 1073, 2851, 1811, 216, 1820, 1821,
	1333, 1810, 224, 2191, 1260, 224, 217, 3104, 1016, 1809,
	1808, 1807, 1806, 1805, 1736, 1804, 1803, 1802, 1801, 1800,
	1789, 2022, 1710, 1775, 3808, 3170, 1773, 1768, 182, 1960,
	1291, 777, 1214, 1190, 1731, 1190, 1205, 3607, 777, 1876,
	1997, 780, 2031, 3587, 1534, 3579, 1897, 1303, 780, 3010,
	1996, 223, 1424, 2580, 223, 1435, 1260, 1709, 4061, 2016,
	2015, 3862, 216, 2024, 2026, 216, 3606, 2611, 1873, 1866,
	1788, 217, 3087, 3088, 217, 3194, 1771, 1538, 2024, 1189,
	2024, 1189, 3103, 3921, 3399, 1886, 4498, 4490, 3380, 1973,
	4244, 1844, 3281, 182, 1316, 1960, 182, 4140, 4139, 2432,
	3998, 3948, 2430, 3947, 1870, 3920, 1960, 222, 1902, 1885,
	1884, 1883, 1731, 1881, 1880, 1949, 1260, 1260, 1879, 3859,
	3777, 1809, 3776, 1868, 3775, 1275, 1275, 3582, 2024, 3406,
	3405, 3721, 4145, 1906, 4191, 1333, 1999, 1314, 1308, 3304,
	4189, 1308, 3098, 3096, 3097, 3089, 3090, 3091, 3092, 3094,
	3095, 224, 1315, 3460, 1676, 3048, 1826, 3047, 1809, 2972,
	1191, 2046, 1191, 1825, 2711, 1311, 3655, 976, 2010, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 3250, 4079,
	2019, 2728, 1598, 3414, 222, 1308, 3354, 4368, 3353, 1798,
	2188, 4136, 3091, 3092, 3094, 3095, 2083, 1995, 2087, 1607,
	223, 2092, 1645, 4412, 1993, 2059, 1975, 2210, 4397, 1977,
	977, 216, 4384, 2002, 3338, 1982, 2891, 1608, 222, 1984,
	217, 2111, 3677, 222, 1987, 3104, 3675, 1275, 224, 1275,
	2027, 1275, 4047, 2017, 2116, 2120, 3661, 3437, 3219, 3134,
	3510, 3016, 182, 2412, 4393, 2618, 1842, 1275, 1275, 1822,
	1711, 1712, 1713, 1714, 1716, 1717, 3345, 2158, 1275, 1514,
	2064, 1443, 224, 1173, 1286, 1242, 2096, 224, 4406, 777,
	1275, 4403, 1275, 1275, 1275, 3389, 2758, 223, 2165, 780,
	2761, 3635, 4237, 3982, 4324, 4219, 3253, 3650, 216, 2113,
	2021, 2874, 2848, 1586, 771, 3331, 2417, 217, 1795, 4455,
	4481, 4454, 3454, 3223, 4119, 2154, 3690, 3908, 2197, 4394,
	1482, 223, 2290, 2652, 1449, 1448, 223, 2209, 2159, 182,
	4549, 1444, 216, 2218, 974, 2170, 4112, 216, 2020, 4104,
	972, 217, 970, 4065, 2670, 968, 217, 3943, 3686, 3685,
	2091, 1642, 965, 2082, 2259, 2257, 3679, 2670, 832, 2668,
	3674, 1014, 2193, 182, 3672, 1118, 2214, 1543, 182, 1543,
	2202, 2121, 2668, 3089, 3090, 3091, 3092, 3094, 3095, 2178,
	3689, 2288, 1016, 2000, 1016, 2011, 1073, 3622, 1073, 1539,
	956, 2418, 2219, 1643, 3621, 1073, 1490, 3334, 1926, 1926,
	1333, 2198, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 2180, 1073, 2167,
	1073, 1073, 1073, 1073, 2141, 2140, 777, 1013, 1641, 3189,
	1536, 2220, 2175, 2172, 2175, 2176, 780, 2279, 833, 2292,
	1316, 1298, 1073, 1316, 1292, 1073, 1073, 4485, 2184, 1066,
	2185, 3021, 2419, 1073, 2416, 3020, 3019, 1073, 1491, 1073,
	1073, 1584, 3892, 1624, 2373, 3018, 3225, 1333, 3195, 2976,
	2201, 3280, 2768, 1073, 1073, 1073, 1073, 2460, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 4482, 1435, 2059, 2767,
	1309, 3250, 2763, 2371, 2754, 2743, 3888, 2290, 1315, 1920,
	2289, 1315, 2742, 2235, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 2393, 2394, 1309, 2737, 1073, 2316, 2317,
	2736, 2188, 1625, 2715, 2701, 2601, 2362, 2393, 2409, 1195,
	1682, 2253, 2056, 1435, 2459, 1015, 1333, 1717, 4486, 2320,
	2845, 1526, 2303, 1525, 1524, 1195, 1523, 2139, 3889, 3438,
	2273, 1193, 2206, 2455, 2271, 2226, 2288, 1499, 3869, 2659,
	2686, 1073, 1333, 4230, 2593, 2052, 962, 1193, 1309, 1486,
	2287, 1445, 2501, 2501, 2515, 2276, 2393, 2291, 2284, 2535,
	2537, 1626, 2278, 996, 2277, 2541, 996, 996, 2612, 1016,
	2307, 2057, 2058, 2308, 2309, 2408, 1579, 4024, 1016, 2421,
	2732, 1538, 1016, 1305, 2713, 2268, 2086, 2028, 2029, 2565,
	3087, 3088, 2700, 3105, 3106, 3107, 3868, 1228, 3095, 1658,
	2263, 2053, 2725, 2726, 2725, 2726, 1654, 2412, 1305, 2590,
	2274, 2367, 2949, 3799, 2286, 3922, 3638, 2557, 2377, 2964,
	2457, 2377, 4511, 1600, 3660, 2458, 2223, 4488, 2461, 2368,
	2462, 2463, 2389, 1875, 2369, 1687, 2673, 2385, 2374, 2270,
	2227, 3696, 1275, 1275, 2383, 1596, 3646, 1161, 1886, 2689,
	2406, 2217, 2725, 2726, 1640, 2699, 4454, 1290, 4232, 2177,
	171, 1305, 1310, 2606, 1856, 2579, 3102, 3445, 1675, 3444,
	1016, 2675, 3904, 2927, 2421, 2289, 2556, 4390, 1510, 3496,
	3695, 1190, 3499, 3942, 1333, 3673, 1012, 1310, 3671, 2415,
	2564, 2641, 2569, 1580, 2510, 2575, 2576, 1190, 2497, 2526,
	3659, 3222, 2539, 2760, 2647, 835, 834, 1608, 2547, 2548,
	1608, 2558, 2933, 2614, 2562, 2563, 3295, 1926, 4494, 1306,
	3333, 3658, 1828, 871, 3884, 1508, 1303, 1189, 1307, 3885,
	1873, 2757, 2049, 2640, 2669, 2759, 2604, 1583, 3301, 951,
	1310, 1860, 4472, 1189, 1306, 2287, 2963, 2762, 751, 1333,
	2066, 2735, 2714, 1307, 1637, 3294, 4466, 3093, 4471, 2674,
	3497, 2127, 2126, 1275, 1009, 2649, 2956, 2957, 2599, 4514,
	4443, 2099, 2157, 2070, 3872, 2621, 2678, 2106, 1073, 1073,
	3887, 1073, 2094, 2625, 2677, 1585, 1202, 1863, 1565, 2632,
	1820, 1821, 966, 2635, 2643, 2636, 3890, 1306, 966, 2624,
	966, 2626, 1858, 967, 1275, 2093, 1307, 754, 1191, 4487,
	966, 2258, 2256, 2370, 2650, 2755, 3288, 2936, 3108, 2642,
	1861, 2644, 3790, 2372, 1191, 830, 1200, 829, 2067, 2421,
	2795, 3789, 2049, 4023, 1275, 2078, 3386, 2717, 2089, 1655,
	2712, 2267, 2676, 2733, 2688, 2673, 1275, 4391, 2653, 1024,
	2062, 2833, 2859, 749, 952, 3287, 1488, 2718, 2819, 3387,
	3103, 1275, 3632, 1859, 2057, 2058, 2703, 2888, 3902, 2794,
	2727, 2729, 2730, 2731, 2077, 4540, 2987, 3631, 1970, 2716,
	2675, 3234, 3312, 2691, 2694, 2681, 3237, 2105, 2108, 2061,
	4238, 1308, 2734, 3149, 2090, 2269, 2225, 2896, 2897, 4252,
	667, 1073, 1510, 2745, 3224, 2985, 2633, 2421, 2903, 2904,
	2905, 1485, 2637, 4231, 3265, 777, 1308, 3886, 2825, 1652,
	864, 2738, 2741, 716, 759, 780, 2648, 662, 2829, 2798,
	2071, 1203, 4297, 2800, 1960, 171, 3386, 2739, 2863, 2740,
	2359, 2914, 2107, 2915, 4389, 2912, 1073, 784, 2935, 1212,
	3647, 3192, 1073, 1073, 3893, 2892, 2670, 852, 2873, 1227,
	1449, 2801, 4492, 4442, 1543, 3962, 1815, 2049, 2674, 1308,
	3264, 2692, 1920, 1920, 1862, 1656, 2911, 2813, 2932, 951,
	3786, 2687, 2746, 2861, 4465, 4419, 2938, 2919, 2940, 2921,
	4036, 2923, 2823, 2677, 4420, 4344, 2072, 2073, 2909, 4020,
	3432, 2517, 2671, 3104, 1009, 718, 685, 1073, 1073, 3425,
	2918, 2894, 2920, 1073, 2922, 2898, 2854, 2899, 3903, 2864,
	2068, 2941, 2942, 4335, 963, 2875, 1073, 1073, 3928, 761,
	3703, 1767, 1073, 1073, 2931, 2403, 3026, 2561, 1073, 3701,
	953, 4515, 2862, 2982, 2785, 1032, 2574, 1073, 1073, 1073,
	2843, 2676, 2978, 1073, 1581, 2376, 2655, 1015, 3512, 4502,
	750, 2069, 1657, 1073, 4493, 2916, 2983, 2917, 2384, 1653,
	2988, 2222, 3268, 2934, 3972, 2657, 2979, 2777, 2775, 1686,
	1073, 3148, 3235, 3780, 2779, 2781, 2771, 872, 765, 1595,
	1597, 2944, 3603, 1217, 952, 3791, 2216, 4495, 2102, 3456,
	2946, 1289, 2357, 3427, 2947, 2360, 752, 2945, 2658, 748,
	2955, 3000, 1612, 4259, 3009, 4295, 3004, 3005, 3426, 4388,
	2303, 3008, 3270, 2965, 2950, 4453, 3703, 4451, 2656, 4019,
	2080, 3099, 3100, 3101, 4274, 3701, 3716, 4152, 3098, 3096,
	3097, 3089, 3090, 3091, 3092, 3094, 3095, 3736, 3704, 1697,
	3373, 39, 2100, 4296, 2147, 2356, 1853, 4441, 1860, 1215,
	756, 865, 866, 1208, 654, 3550, 3835, 1260, 3787, 2306,
	1073, 1073, 1073, 2060, 2074, 2012, 3963, 1016, 954, 1073,
	1073, 1073, 4095, 2977, 1073, 3269, 4094, 1201, 785, 786,
	760, 2101, 4161, 4520, 1073, 1195, 1333, 2059, 853, 854,
	1073, 3183, 1073, 4218, 1863, 4073, 2084, 3141, 3142, 1696,
	1195, 2009, 3737, 3907, 1260, 3683, 3634, 1193, 3374, 2559,
	3906, 4541, 1691, 717, 1971, 3366, 3495, 955, 1333, 3244,
	4418, 3015, 1193, 2050, 3240, 2834, 763, 1861, 2828, 4260,
	1195, 2817, 758, 1333, 3704, 2984, 2081, 2075, 2171, 1260,
	1260, 2160, 3124, 2744, 2693, 2986, 3176, 1696, 2773, 2152,
	1926, 663, 1193, 3163, 1333, 4021, 2719, 2133, 3143, 2787,
	1479, 3618, 1219, 1007, 3565, 951, 2296, 725, 1275, 1275,
	953, 4311, 3457, 4277, 4064, 755, 2007, 3873, 3239, 1696,
	2786, 2778, 2776, 2780, 2782, 2772, 2774, 2788, 3238, 2264,
	1009, 1073, 2005, 3739, 2784, 3987, 2814, 3177, 3153, 1695,
	1230, 3702, 3188, 762, 4134, 1073, 3792, 4132, 3151, 3428,
	3429, 3430, 3431, 4075, 3172, 3256, 2008, 719, 788, 787,
	3252, 1920, 3699, 1926, 3202, 3251, 664, 2791, 757, 2358,
	1424, 2970, 3229, 3230, 1767, 2207, 1008, 867, 868, 3220,
	3551, 1073, 1275, 3152, 2948, 1627, 3213, 1695, 3161, 3552,
	3836, 1435, 3578, 3226, 3164, 3165, 3254, 1190, 3181, 3258,
	3135, 3146, 3145, 3169, 1697, 1303, 3162, 3150, 3119, 3120,
	3121, 665, 1190, 666, 855, 856, 789, 790, 1275, 1695,
	952, 1862, 3206, 3207, 4519, 1898, 3255, 3793, 2598, 3260,
	3193, 2597, 3262, 2051, 3167, 1333, 3168, 3702, 1960, 1960,
	2297, 2596, 1190, 1189, 1275, 2595, 3905, 3241, 954, 1275,
	3199, 3200, 1697, 3201, 3185, 3186, 3187, 3708, 1189, 1518,
	4261, 3283, 1013, 3315, 2720, 2721, 3318, 2821, 3157, 1532,
	3323, 3325, 1275, 1519, 4225, 1530, 1613, 870, 1275, 3299,
	1275, 3210, 3300, 4129, 1333, 3954, 4083, 2079, 1189, 3214,
	3432, 771, 3619, 2697, 3221, 3641, 3267, 955, 2553, 3425,
	3415, 2046, 1275, 3245, 2169, 3341, 4462, 4256, 3310, 4063,
	4071, 3227, 1960, 1275, 2895, 3286, 2799, 4314, 2797, 1589,
	3350, 1435, 3313, 3302, 1191, 4321, 4308, 4226, 1260, 1195,
	3842, 1269, 3298, 3297, 2039, 3567, 2792, 3382, 2046, 1191,
	2040, 2085, 2428, 3271, 4004, 2783, 4339, 3359, 1960, 3365,
	3274, 1193, 3184, 4072, 1275, 1275, 2888, 3291, 3320, 3279,
	3158, 3292, 1435, 3327, 1435, 2888, 3290, 4464, 1856, 1191,
	1923, 1672, 3293, 2555, 1960, 3285, 1275, 3305, 2554, 1960,
	1670, 4408, 2096, 1440, 3321, 3391, 4084, 3336, 724, 3339,
	2096, 4245, 3311, 3427, 3402, 3209, 3296, 3328, 3211, 3212,
	3332, 4315, 4042, 3215, 3834, 3216, 953, 3217, 3426, 3156,
	2086, 4227, 4003, 1333, 1475, 1649, 1333, 3707, 3116, 1647,
	1623, 1621, 1619, 3319, 1617, 1615, 3381, 1605, 3326, 3439,
	2717, 3472, 3435, 777, 3203, 1603, 1528, 3343, 3081, 1511,
	3160, 2989, 3335, 780, 3375, 1860, 2818, 1073, 171, 171,
	2041, 3400, 3401, 1073, 1073, 2753, 3383, 1073, 1073, 1073,
	3362, 1073, 3363, 3433, 1551, 2710, 2623, 2045, 1893, 1889,
	1073, 1926, 1674, 1673, 1914, 1567, 3388, 1016, 3117, 1073,
	3453, 3417, 1073, 3413, 3451, 3397, 2255, 3390, 1333, 3452,
	3676, 1863, 1691, 2929, 2928, 2901, 3423, 1073, 2285, 2266,
	1636, 1190, 2230, 1531, 2132, 1333, 1858, 1953, 3450, 1529,
	1799, 869, 1578, 3448, 1503, 1926, 1926, 1073, 1073, 3434,
	1073, 1073, 1073, 3441, 1861, 3442, 3314, 3443, 2427, 3458,
	4383, 1590, 3303, 3929, 3917, 3475, 2042, 2047, 4307, 3985,
	3934, 3877, 1006, 3735, 954, 3727, 3159, 1189, 3447, 3688,
	3484, 3485, 1671, 3653, 3651, 3633, 3369, 3364, 3355, 2846,
	2832, 1669, 1073, 3524, 4439, 2824, 1073, 1859, 1926, 1926,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073,
	1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 1073, 3525,
	1073, 3455, 2811, 955, 2796, 2704, 1648, 1073, 1073, 1926,
	1646, 1622, 1620, 1618, 1073, 1616, 1614, 2639, 1604, 3428,
	3429, 3430, 3431, 3480, 4178, 1073, 1602, 1527, 2634, 2043,
	2131, 2129, 2112, 964, 2097, 2076, 1195, 1195, 1191, 3491,
	1073, 2063, 1992, 3498, 3500, 3501, 1989, 1986, 1983, 3507,
	1978, 1976, 1972, 1963, 1081, 3492, 3378, 1170, 1193, 1193,
	4431, 3322, 3514, 3502, 1700, 2316, 3515, 2106, 3522, 1333,
	1900, 2048, 3523, 2968, 2254, 2049, 4455, 4170, 2013, 3600,
	3596, 2272, 3562, 4349, 1171, 4009, 3521, 4002, 1862, 4001,
	4171, 3941, 3583, 3865, 2889, 2032, 1484, 4163, 2698, 4156,
	254, 254, 254, 3747, 657, 658, 1282, 673, 657, 673,
	683, 2059, 3554, 723, 1920, 3529, 1073, 741, 2316, 3530,
	171, 4172, 747, 3563, 2221, 3272, 3527, 2168, 254, 1667,
	1668, 1251, 2670, 2670, 2250, 2249, 3909, 1250, 2228, 1073,
	3601, 3602, 1435, 1435, 3574, 3575, 849, 2668, 2695, 3558,
	4348, 712, 254, 3936, 3613, 3614, 3615, 3555, 3599, 1707,
	1708, 3571, 3572, 1601, 3273, 2969, 1707, 1708, 4198, 1073,
	1073, 1701, 3843, 3821, 3623, 2722, 2702, 2105, 1457, 1704,
	1464, 4174, 1470, 969, 971, 973, 4458, 1920, 1284, 3569,
	1710, 1172, 1218, 4449, 668, 247, 3682, 3586, 4413, 3585,
	1073, 2810, 3724, 4173, 2252, 2153, 1295, 2758, 1190, 1190,
	2766, 2765, 2748, 1251, 2705, 2750, 2707, 1435, 3681, 4302,
	4175, 2039, 1275, 1251, 764, 1709, 3875, 2040, 2749, 2706,
	4269, 4266, 1709, 4224, 4148, 4127, 820, 3662, 3726, 3609,
	2157, 1926, 651, 3715, 3593, 3368, 1556, 2044, 1561, 679,
	2853, 3666, 2540, 1998, 1189, 1189, 1907, 4489, 1570, 4081,
	1575, 3684, 3667, 3669, 4341, 3637, 3874, 3630, 3678, 4342,
	1275, 657, 657, 1923, 1923, 3236, 3191, 1073, 4518, 254,
	3087, 3088, 1707, 1708, 4341, 1195, 1073, 4268, 1451, 4342,
	4468, 3813, 3749, 2662, 2663, 1588, 1275, 1275, 1275, 2660,
	2661, 1587, 3756, 2423, 3605, 2662, 2717, 1193, 2859, 2660,
	2456, 1651, 1275, 3740, 1650, 4149, 4113, 3937, 3706, 3722,
	3933, 1629, 3932, 3809, 3733, 3604, 3744, 3503, 3316, 1793,
	1792, 1333, 3741, 4504, 2888, 1191, 1191, 2041, 4473, 3743,
	3723, 4306, 1779, 4305, 3694, 3760, 1784, 4304, 4213, 4130,
	4108, 4062, 4059, 1333, 2045, 3709, 1073, 1073, 3965, 3861,
	3771, 3753, 1073, 1073, 1926, 3710, 3649, 1073, 1073, 3644,
	1073, 3725, 3372, 3772, 1073, 3371, 3261, 1914, 1914, 3730,
	3208, 3245, 3077, 3616, 3728, 1073, 3076, 3617, 3075, 3697,
	3074, 3073, 3705, 3072, 3071, 3070, 3742, 3069, 3068, 3067,
	3066, 1073, 3745, 3065, 3693, 3750, 3794, 3064, 3063, 3062,
	3061, 3755, 3751, 3060, 3059, 3763, 3058, 3057, 3761, 3762,
	3056, 3767, 3770, 2042, 2047, 3766, 3795, 3769, 3803, 3055,
	3054, 3652, 2926, 3654, 2908, 2907, 2906, 2838, 3807, 2812,
	1435, 2696, 2630, 2616, 2615, 2388, 2251, 2248, 2247, 2246,
	2245, 2244, 3788, 2166, 2142, 2138, 2137, 1190, 2136, 4176,
	3783, 1195, 2135, 2134, 4177, 1966, 1965, 1964, 1962, 1195,
	1666, 1665, 1610, 1333, 1609, 1333, 1498, 1497, 1496, 1495,
	1494, 1493, 1195, 1193, 1492, 1487, 1483, 3778, 1481, 1480,
	1324, 1193, 1323, 1322, 1321, 1920, 3687, 1320, 3176, 1333,
	1288, 1287, 1237, 1189, 1193, 1236, 2043, 1235, 1234, 1233,
	1232, 1231, 1229, 1224, 1223, 1222, 1221, 1220, 1153, 2003,
	975, 961, 4229, 3891, 1660, 3833, 89, 3848, 1489, 807,
	83, 1195, 2103, 1195, 3648, 932, 3866, 3867, 4338, 1920,
	1920, 1473, 4251, 815, 4323, 3263, 3851, 3897, 2048, 3897,
	2769, 2229, 2049, 1193, 1611, 1193, 2231, 171, 3171, 2581,
	3840, 1333, 4294, 3900, 3817, 3025, 3910, 4205, 3850, 3844,
	1333, 3854, 3847, 3845, 3846, 4035, 1882, 3849, 2426, 2186,
	1797, 3128, 85, 1057, 1191, 3871, 3855, 1103, 3961, 3858,
	3960, 3878, 1920, 1920, 3901, 1269, 2199, 3911, 1275, 1275,
	3636, 3938, 3228, 3939, 2878, 3958, 2200, 3912, 3913, 3957,
	3876, 1911, 1913, 1023, 1336, 1275, 2014, 1063, 2208, 2030,
	2211, 2212, 2213, 1920, 2023, 2617, 1333, 2500, 3955, 1080,
	1077, 1275, 1923, 1190, 1915, 3940, 1917, 1079, 1078, 3952,
	1916, 1190, 1816, 3931, 1076, 1910, 3732, 3916, 2568, 3731,
	2820, 2857, 3398, 1537, 1190, 1535, 1195, 934, 2018, 3950,
	3978, 2382, 2410, 3014, 1790, 1038, 1275, 1275, 1275, 1059,
	2407, 1213, 3897, 1048, 3988, 3944, 1037, 1333, 1193, 1189,
	3154, 3927, 3925, 3949, 3133, 3385, 4005, 1189, 3592, 1073,
	1073, 1073, 2295, 3989, 824, 3084, 2413, 3956, 1204, 3983,
	1189, 2523, 2516, 1190, 2512, 1190, 3997, 1333, 3951, 3992,
	3971, 3975, 1073, 3218, 1206, 1073, 1073, 3990, 2847, 4008,
	1677, 4049, 1769, 2858, 2044, 1073, 1318, 1041, 1926, 3974,
	3915, 2380, 1781, 1073, 1073, 2994, 1914, 3977, 2305, 3392,
	4027, 3174, 3924, 2610, 3926, 1960, 4345, 1226, 1333, 1189,
	1275, 1189, 3511, 2146, 1169, 4012, 1168, 4016, 4011, 254,
	1191, 254, 254, 1211, 1255, 254, 1265, 4032, 1191, 4022,
	1167, 4329, 1333, 4326, 3764, 3348, 4014, 1285, 2006, 2654,
	1073, 1191, 1759, 3356, 1053, 1434, 741, 2300, 3139, 1073,
	3416, 1500, 4044, 746, 4038, 4088, 1065, 1073, 1758, 1926,
	2790, 2789, 4221, 1304, 1302, 1301, 1300, 4427, 1073, 3243,
	254, 1073, 254, 254, 1255, 4539, 254, 254, 1265, 1260,
	1073, 4055, 4056, 4067, 3645, 221, 2962, 1333, 1190, 254,
	1191, 1453, 1191, 4091, 4058, 1698, 1690, 218, 1275, 1275,
	220, 219, 3966, 3597, 3180, 4411, 3664, 3340, 23, 22,
	21, 109, 1477, 4068, 4066, 1920, 42, 20, 125, 4107,
	4074, 143, 142, 117, 141, 140, 139, 138, 2157, 145,
	137, 1502, 136, 1265, 1189, 4142, 1333, 254, 254, 1275,
	1255, 4133, 131, 4118, 135, 3350, 134, 133, 132, 130,
	4105, 129, 124, 128, 127, 126, 123, 1195, 1195, 741,
	122, 254, 254, 4109, 121, 120, 119, 4147, 4115, 118,
	116, 115, 4122, 3897, 3897, 4123, 1073, 1073, 4110, 1193,
	1193, 114, 4157, 113, 849, 4131, 2518, 4181, 4182, 4126,
	112, 111, 4160, 1073, 1926, 4146, 110, 4166, 4141, 4097,
	737, 4158, 734, 61, 60, 4162, 108, 4185, 4125, 4154,
	107, 19, 4159, 4121, 4165, 1191, 40, 4164, 4179, 14,
	65, 66, 18, 3992, 13, 35, 88, 1073, 99, 98,
	1073, 36, 96, 95, 34, 17, 16, 1195, 1920, 15,
	93, 92, 4193, 33, 4194, 4195, 31, 11, 9, 1195,
	4217, 8, 4197, 3897, 37, 1877, 12, 254, 4203, 1193,
	5, 176, 175, 178, 174, 3897, 177, 87, 173, 172,
	86, 1193, 29, 4120, 4216, 10, 254, 168, 4143, 4240,
	2646, 1269, 3720, 80, 4214, 170, 4215, 169, 167, 166,
	1073, 1073, 165, 4234, 81, 78, 4233, 164, 82, 163,
	4239, 1195, 79, 162, 1195, 27, 6, 64, 1275, 7,
	4017, 3436, 102, 2386, 103, 38, 76, 3897, 1275, 1275,
	3897, 75, 4247, 1193, 74, 4249, 1193, 26, 1779, 1190,
	1190, 4271, 63, 25, 4273, 1275, 4285, 206, 4263, 4264,
	205, 204, 203, 4099, 4100, 4267, 4262, 202, 201, 1073,
	1073, 4279, 196, 195, 200, 198, 197, 199, 194, 1073,
	209, 208, 213, 212, 211, 4282, 4146, 4281, 4114, 210,
	4278, 4116, 4117, 207, 215, 1189, 1189, 193, 192, 4283,
	4284, 190, 2522, 4316, 186, 4289, 185, 189, 191, 188,
	187, 4320, 184, 214, 1073, 1073, 4288, 1073, 160, 4299,
	4290, 2793, 4291, 161, 4303, 71, 159, 158, 157, 1190,
	4328, 4331, 156, 155, 154, 153, 70, 4298, 4343, 24,
	2, 1190, 1, 4340, 0, 4318, 0, 0, 0, 4319,
	0, 0, 4347, 0, 0, 1923, 0, 0, 2157, 0,
	4362, 4367, 4366, 4333, 0, 0, 1073, 1073, 1073, 0,
	0, 4365, 4337, 1260, 0, 1189, 1191, 1191, 4350, 0,
	0, 4354, 4332, 0, 0, 4336, 4361, 1189, 4395, 0,
	0, 4359, 4360, 1190, 657, 1073, 1190, 0, 0, 0,
	0, 4400, 4379, 4380, 0, 4382, 4381, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 254, 0, 2902,
	0, 254, 0, 0, 4414, 4421, 0, 0, 1923, 4423,
	0, 0, 4398, 0, 1453, 1255, 254, 0, 254, 1189,
	4434, 4425, 1189, 254, 1453, 673, 1073, 4436, 4396, 0,
	254, 1453, 4435, 256, 4440, 4422, 1191, 0, 0, 1914,
	4429, 0, 0, 4430, 0, 1967, 0, 0, 1191, 0,
	0, 4248, 4456, 0, 0, 4460, 0, 254, 0, 4452,
	4432, 4433, 4448, 4450, 254, 0, 4437, 4446, 4447, 0,
	4428, 4328, 0, 4474, 4331, 1195, 4459, 1195, 4461, 4463,
	4478, 0, 0, 4475, 4467, 0, 4483, 4470, 0, 4476,
	4484, 3897, 4347, 3897, 0, 0, 0, 1193, 4480, 1193,
	1191, 0, 1920, 1191, 741, 4477, 0, 4479, 0, 0,
	0, 0, 1914, 0, 0, 0, 4497, 0, 0, 0,
	4496, 0, 4499, 0, 0, 0, 72, 0, 0, 0,
	4508, 4506, 0, 0, 0, 0, 4513, 4512, 4505, 0,
	1073, 1073, 4510, 73, 0, 2952, 0, 0, 4516, 1073,
	0, 1073, 1073, 0, 0, 0, 4522, 0, 4529, 77,
	4525, 0, 4531, 4530, 4533, 1331, 4528, 4535, 0, 1429,
	0, 0, 4534, 1920, 0, 4532, 0, 0, 0, 0,
	4503, 0, 0, 4542, 4538, 0, 2859, 4545, 4548, 0,
	0, 4544, 0, 4546, 0, 4547, 4543, 4553, 4552, 84,
	1707, 1708, 4551, 0, 4555, 1073, 2708, 4556, 0, 4558,
	0, 0, 4562, 0, 0, 0, 4559, 1036, 4561, 4523,
	4524, 0, 0, 0, 1738, 2518, 2518, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, 2751, 0, 0, 0, 1190, 0, 1190,
	104, 0, 0, 0, 0, 90, 101, 0, 254, 0,
	0, 254, 0, 0, 0, 0, 1709, 0, 0, 0,
	4410, 0, 0, 4557, 0, 0, 0, 0, 2804, 0,
	0, 2807, 0, 2809, 0, 0, 0, 0, 1435, 0,
	0, 0, 0, 1189, 0, 1189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1920, 0,
	0, 91, 0, 0, 254, 0, 1923, 0, 254, 0,
	0, 0, 0, 254, 0, 2850, 72, 0, 2850, 254,
	0, 1707, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 2522, 0, 73, 254, 0, 254, 0, 0, 0,
	657, 0, 254, 0, 0, 1738, 0, 0, 0, 77,
	1923, 1923, 1710, 0, 741, 0, 0, 1715, 849, 2518,
	2518, 2518, 0, 0, 1191, 0, 1191, 2991, 2992, 0,
	0, 0, 0, 1260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 1255, 254, 1709, 0, 84,
	0, 2924, 0, 0, 0, 0, 0, 1729, 0, 0,
	741, 1737, 1739, 1923, 1923, 0, 1726, 254, 0, 0,
	1914, 2522, 2522, 0, 0, 0, 0, 0, 254, 254,
	0, 254, 0, 254, 2607, 254, 843, 254, 0, 0,
	0, 0, 0, 0, 1923, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 94, 90, 101, 0, 2260, 0,
	0, 2261, 0, 2262, 1914, 1914, 0, 3798, 0, 0,
	1730, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1735, 0, 0, 703, 0, 0, 723, 1715, 0,
	0, 741, 0, 0, 0, 179, 97, 0, 100, 0,
	0, 91, 0, 0, 686, 0, 0, 1914, 1914, 0,
	687, 3110, 3111, 3112, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	844, 0, 1737, 1739, 0, 144, 0, 0, 1914, 0,
	0, 0, 3892, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 0, 2522, 2522, 2522, 1724, 1725,
	689, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	3329, 0, 0, 0, 0, 0, 3888, 0, 0, 0,
	3881, 690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 146, 0, 0, 0, 1892, 3879, 0, 0,
	3360, 709, 0, 1731, 0, 0, 3883, 183, 0, 3087,
	3088, 3367, 3105, 3106, 3107, 223, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 216, 0, 3889, 0,
	0, 0, 3477, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 0, 692, 94, 0, 0, 0, 657, 0,
	0, 0, 3408, 3409, 0, 0, 0, 182, 0, 0,
	0, 0, 0, 254, 693, 0, 1923, 694, 0, 3882,
	0, 0, 657, 0, 0, 0, 0, 0, 0, 254,
	0, 657, 718, 0, 0, 3102, 0, 0, 0, 0,
	0, 0, 0, 254, 0, 179, 97, 0, 100, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 254, 1265,
	0, 0, 0, 0, 1736, 0, 0, 0, 2034, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 0, 0,
	844, 0, 0, 0, 1731, 144, 0, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 1265, 0, 673, 0,
	1036, 0, 0, 0, 1036, 705, 224, 0, 2629, 0,
	1914, 0, 0, 2039, 254, 0, 3093, 254, 0, 2040,
	1416, 254, 0, 254, 1416, 0, 0, 0, 1255, 1923,
	254, 254, 146, 1265, 1265, 2645, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 2518, 2518, 0,
	0, 0, 0, 0, 3884, 0, 216, 0, 0, 3885,
	0, 0, 715, 0, 696, 217, 0, 3108, 0, 0,
	0, 0, 0, 0, 2685, 0, 0, 3275, 3276, 0,
	0, 3277, 0, 2124, 0, 254, 0, 182, 0, 0,
	0, 0, 716, 0, 697, 0, 1727, 1723, 254, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 3103,
	3887, 254, 0, 0, 0, 0, 0, 0, 0, 2041,
	3306, 3307, 0, 1914, 3308, 0, 3890, 0, 0, 0,
	717, 0, 254, 0, 0, 0, 2045, 698, 0, 0,
	0, 713, 714, 711, 0, 0, 0, 0, 0, 706,
	0, 0, 699, 0, 0, 0, 0, 254, 2802, 2518,
	2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518,
	2518, 2518, 2518, 2518, 2518, 2518, 2518, 2518, 0, 2518,
	0, 0, 1453, 0, 0, 254, 0, 0, 0, 0,
	0, 700, 707, 254, 0, 0, 0, 0, 0, 3468,
	3469, 701, 2842, 0, 0, 2042, 2047, 1707, 1708, 0,
	0, 0, 2685, 0, 657, 702, 0, 0, 0, 0,
	710, 0, 0, 2871, 849, 0, 2685, 2685, 0, 0,
	0, 1738, 0, 0, 719, 0, 0, 0, 1710, 0,
	0, 254, 0, 2522, 2522, 704, 0, 3886, 0, 0,
	0, 0, 3104, 0, 0, 0, 0, 0, 0, 0,
	254, 1255, 254, 0, 0, 1453, 0, 1453, 1265, 254,
	0, 0, 1255, 1709, 1255, 0, 1255, 0, 0, 0,
	0, 0, 0, 1105, 3893, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 254, 254, 254, 1255, 1255, 254, 0,
	254, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539,
	3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549,
	2048, 3553, 0, 0, 2049, 0, 0, 0, 2319, 0,
	3691, 254, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522, 2522,
	2522, 2522, 2522, 2522, 1715, 2522, 1707, 1708, 0, 0,
	3099, 3100, 3101, 1923, 2036, 0, 0, 3098, 3096, 3097,
	3089, 3090, 3091, 3092, 3094, 3095, 0, 0, 3087, 3088,
	1738, 3105, 3106, 3107, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 3757, 3758, 3759, 0, 1737, 1739,
	0, 3476, 0, 2037, 0, 2424, 0, 0, 0, 0,
	1269, 0, 0, 0, 0, 0, 0, 0, 1453, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 1729, 0, 1923, 0, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 1708, 3102, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1914, 0, 0,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 2044, 0, 1196, 0,
	0, 0, 3471, 0, 0, 0, 0, 0, 0, 0,
	2591, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 0, 1709, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 1914, 0,
	0, 0, 0, 0, 0, 3093, 0, 1036, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 1737, 1739, 1923,
	0, 0, 0, 0, 254, 0, 0, 0, 0, 657,
	0, 0, 0, 0, 657, 0, 0, 657, 3466, 0,
	657, 657, 0, 1724, 1725, 0, 657, 0, 0, 0,
	1731, 0, 0, 0, 254, 0, 3108, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 1453, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1453, 0,
	0, 0, 2665, 0, 0, 0, 0, 0, 3103, 254,
	0, 0, 0, 254, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 1914, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 2685, 254, 0, 3233, 0, 1416, 1724,
	1725, 0, 0, 0, 0, 2685, 1269, 0, 3247, 0,
	0, 0, 0, 0, 0, 0, 2685, 3247, 0, 2685,
	3247, 0, 0, 3247, 0, 0, 0, 0, 0, 254,
	3729, 0, 1730, 0, 0, 0, 0, 254, 254, 3233,
	254, 0, 0, 0, 0, 0, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 0, 0, 0, 0, 1736,
	3233, 254, 0, 1453, 0, 0, 1453, 0, 1255, 0,
	0, 0, 0, 0, 4013, 0, 4015, 0, 0, 1731,
	0, 0, 0, 2685, 0, 3317, 2685, 3233, 0, 0,
	2685, 2685, 3233, 0, 0, 0, 0, 3779, 0, 0,
	0, 3104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 3344, 0, 0, 3346,
	2685, 0, 0, 254, 0, 0, 0, 254, 0, 1265,
	0, 0, 0, 0, 0, 1736, 0, 0, 4060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2842, 1855,
	0, 1255, 0, 254, 0, 1731, 2685, 0, 657, 0,
	0, 0, 0, 0, 0, 2685, 0, 0, 0, 0,
	0, 0, 0, 0, 2518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 2842, 0, 0,
	2842, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 0, 0, 0, 0, 0, 0, 3099,
	3100, 3101, 0, 0, 0, 0, 3098, 3096, 3097, 3089,
	3090, 3091, 3092, 3094, 3095, 0, 4124, 0, 0, 2518,
	0, 0, 0, 1416, 0, 3446, 0, 0, 1255, 254,
	0, 254, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750,
	1751, 1752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 1738, 0, 0,
	0, 0, 0, 0, 1710, 254, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	1196, 0, 0, 0, 1196, 0, 0, 0, 1196, 1729,
	1416, 0, 0, 0, 0, 0, 4041, 0, 1726, 0,
	0, 3509, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 3964, 0, 0,
	0, 0, 0, 0, 1707, 1708, 0, 0, 3976, 0,
	2522, 0, 0, 0, 1196, 0, 0, 0, 0, 0,
	0, 4077, 2518, 0, 0, 0, 0, 0, 1738, 1416,
	3996, 0, 0, 0, 1196, 1710, 0, 0, 0, 1196,
	1732, 1733, 1734, 1735, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 1196, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2522, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 3140, 1747, 1269, 1269, 1757, 1726,
	254, 254, 0, 0, 1737, 1739, 0, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 1196, 0, 0, 0,
	0, 0, 657, 657, 0, 0, 3166, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3179, 0, 0, 1453, 1453, 0, 0, 1745, 0,
	3465, 0, 0, 0, 0, 0, 0, 0, 1453, 1453,
	1453, 0, 3197, 1730, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 4202, 0, 0, 0, 0, 0,
	0, 3629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 1739, 0, 2522, 0,
	0, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 1736, 0, 3233, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 1731, 0, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 254, 0, 0, 0, 254, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2685, 254,
	0, 0, 3179, 0, 0, 0, 0, 0, 2871, 2871,
	0, 0, 0, 0, 849, 849, 2685, 0, 0, 2842,
	2842, 0, 0, 849, 2685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 1196, 0, 0, 0,
	0, 0, 0, 254, 0, 0, 0, 72, 0, 0,
	0, 1196, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 1927, 4253,
	0, 0, 1196, 0, 0, 0, 0, 1731, 0, 1746,
	77, 0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723,
	4270, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1708,
	0, 0, 0, 3818, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1429, 1738, 0, 1331, 0, 0, 0, 1196, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 1280, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 1196, 1709, 254, 90, 101, 0, 0,
	0, 1453, 0, 254, 1729, 0, 1022, 0, 0, 0,
	1022, 0, 0, 1726, 0, 0, 254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3488, 0, 4351, 1727,
	1723, 4352, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 3504, 0, 0, 2685, 2685, 0, 3629,
	0, 0, 91, 0, 0, 1455, 0, 1461, 2685, 1467,
	0, 0, 0, 0, 2980, 3899, 0, 3899, 1453, 0,
	0, 0, 0, 0, 0, 0, 2685, 0, 3247, 0,
	0, 1453, 1453, 254, 3233, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 3233, 254, 3233, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2685, 0, 2685, 254, 0, 0, 0, 1196, 1196,
	0, 0, 0, 1554, 0, 1559, 0, 0, 1196, 0,
	0, 0, 0, 0, 0, 1568, 0, 1573, 2685, 1737,
	1739, 0, 0, 3968, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 0, 0, 0, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3087, 3088, 0, 3105, 3106, 3107, 0, 1416,
	3899, 0, 0, 1453, 0, 94, 0, 3595, 1730, 0,
	1632, 0, 0, 1638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 1416, 1196, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	1196, 1196, 0, 0, 0, 0, 179, 97, 0, 100,
	0, 1196, 0, 0, 0, 0, 0, 1416, 3102, 0,
	0, 0, 0, 1196, 0, 1196, 1196, 1196, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 0,
	0, 844, 0, 0, 0, 0, 144, 0, 0, 0,
	0, 0, 0, 0, 1036, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 2685, 0, 3247, 0, 0, 4070, 1036, 0,
	0, 0, 0, 0, 0, 254, 0, 224, 0, 0,
	0, 1736, 4089, 0, 4089, 0, 1778, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 146, 741, 0, 0, 0, 0, 3093,
	0, 0, 0, 1255, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 223, 3233, 254, 1707,
	1708, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 1927, 1927, 1196, 0, 0, 217, 4070, 0, 0,
	0, 0, 0, 1738, 0, 2685, 0, 0, 1416, 0,
	1710, 0, 0, 0, 0, 0, 0, 4151, 1548, 0,
	3108, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3899, 3899, 0, 0, 1709, 0, 1849, 1849, 1849,
	0, 0, 0, 0, 0, 1729, 0, 1416, 254, 254,
	0, 0, 3103, 0, 1726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 0, 3509, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 0, 0, 3629, 0,
	3629, 0, 0, 0, 0, 0, 4070, 0, 0, 0,
	0, 0, 0, 0, 0, 2973, 0, 0, 0, 0,
	0, 3899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3899, 0, 0, 1732, 1733, 1734, 1735,
	0, 0, 1196, 0, 0, 0, 1715, 0, 0, 1196,
	0, 0, 0, 0, 254, 0, 3087, 3088, 1196, 3105,
	3106, 3107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3968, 0, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3899, 1416, 254, 3899, 1416,
	1737, 1739, 0, 1022, 0, 0, 0, 0, 3247, 0,
	0, 0, 0, 0, 0, 3104, 0, 0, 0, 0,
	0, 0, 0, 3853, 0, 0, 1724, 1725, 0, 0,
	0, 0, 0, 0, 1453, 0, 1453, 0, 0, 0,
	0, 0, 3102, 0, 0, 0, 0, 3863, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1730,
	0, 0, 0, 0, 0, 0, 0, 4312, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	4089, 0, 0, 254, 0, 1196, 1196, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 3093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3099, 3100, 3101, 3509, 0, 0, 0,
	3098, 3096, 3097, 3089, 3090, 3091, 3092, 3094, 3095, 0,
	1927, 0, 1453, 0, 0, 0, 0, 0, 0, 0,
	0, 3109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1736, 72, 0, 0, 0, 0, 0, 254,
	0, 0, 1196, 0, 3108, 0, 0, 0, 0, 0,
	73, 0, 1731, 0, 1453, 0, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 4070, 0,
	0, 0, 0, 0, 0, 0, 3103, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 4033, 84, 0, 0, 0,
	0, 0, 2685, 0, 0, 0, 0, 0, 0, 3899,
	0, 3899, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 843, 0, 0, 4033, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 0, 104, 0, 0,
	0, 0, 90, 101, 1453, 0, 0, 0, 0, 0,
	2319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 1723, 0, 1720, 1718, 1719,
	1711, 1712, 1713, 1714, 1716, 1717, 0, 2871, 0, 0,
	0, 0, 0, 0, 0, 0, 2685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 91, 0,
	0, 2871, 0, 0, 0, 2319, 0, 0, 0, 3104,
	0, 0, 0, 0, 0, 2294, 0, 2298, 0, 0,
	0, 0, 0, 0, 2312, 0, 0, 0, 0, 0,
	0, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 0, 2361, 0, 2363,
	2364, 2365, 2366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 0, 2405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2435, 2438, 2441, 2444, 0, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 1416, 0, 0, 3099, 3100, 3101,
	0, 94, 0, 0, 3098, 3096, 3097, 3089, 3090, 3091,
	3092, 3094, 3095, 0, 0, 2514, 1416, 2525, 2527, 2532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 97, 0, 100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 144, 0, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 1738, 0,
	0, 0, 0, 224, 0, 1710, 0, 0, 1196, 1196,
	0, 0, 0, 0, 1756, 0, 1416, 0, 1416, 0,
	0, 0, 0, 1196, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 1196, 1416, 0, 183, 0, 0, 0, 0, 0,
	1729, 0, 223, 1196, 0, 0, 1196, 0, 0, 1726,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 1927, 0, 0, 0, 1196, 0, 0,
	0, 1707, 1708, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 1196, 0, 1546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1738, 0, 0, 0, 0,
	0, 0, 1710, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1069, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 1927, 1709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 1196, 1726, 0, 0, 1416,
	253, 253, 253, 0, 0, 0, 1747, 0, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 2805, 2806, 0,
	2808, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	0, 1196, 1753, 0, 1754, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 0, 0, 0, 0, 1196, 0,
	1416, 0, 778, 0, 0, 0, 0, 1196, 0, 1745,
	0, 0, 1196, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1735, 0, 0, 1730, 0, 0, 0, 1715, 0,
	1416, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 1196, 0, 1196, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 1755, 0, 0, 0,
	0, 1416, 1737, 1739, 0, 0, 1196, 0, 0, 0,
	1707, 1708, 0, 0, 1744, 0, 1750, 1751, 1752, 0,
	2925, 0, 1196, 0, 0, 1416, 0, 0, 1724, 1725,
	0, 0, 0, 0, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 1196, 1196, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 1730, 0, 0, 1036, 0, 0, 0, 0, 1196,
	0, 1760, 1761, 0, 0, 0, 1709, 1736, 0, 0,
	1416, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 2974, 2975, 0, 1416,
	0, 0, 2981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2995, 2996, 0, 0, 0, 0, 2405, 0, 0,
	0, 0, 0, 0, 1927, 0, 3003, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 1196, 3017, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1196, 3029,
	0, 0, 0, 0, 1731, 0, 0, 0, 1927, 1927,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	1746, 1737, 1739, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 0, 3038, 0, 1724, 1725, 3039,
	2493, 2494, 2495, 2496, 2489, 2490, 2491, 2492, 0, 0,
	0, 1927, 1927, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 1036, 1036, 0, 0, 0, 0, 0,
	0, 0, 1927, 0, 0, 0, 0, 0, 2532, 2532,
	2532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 1196,
	1196, 3144, 0, 0, 0, 0, 0, 0, 0, 0,
	2469, 2470, 2471, 2472, 0, 0, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0,
	0, 0, 1196, 2481, 2482, 2483, 2484, 2477, 2478, 2479,
	2480, 2485, 2486, 2487, 2488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1022, 0, 0, 1731, 0, 0, 2465, 2466, 2467, 2468,
	2473, 2474, 2475, 2476, 1022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 253, 253, 0, 0, 253, 1746, 703, 0, 0,
	0, 0, 0, 1196, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 686, 1196, 0,
	0, 0, 0, 687, 0, 0, 0, 0, 0, 1196,
	1196, 1196, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 253, 253, 0, 1196, 253, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 778,
	0, 0, 688, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 0, 0,
	0, 0, 0, 0, 690, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 253, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 253, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 692, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 693, 0, 0,
	694, 0, 0, 0, 0, 0, 2312, 0, 0, 0,
	0, 0, 3463, 3464, 1196, 718, 3467, 0, 0, 0,
	3470, 0, 1196, 0, 0, 0, 1196, 0, 1196, 3474,
	0, 0, 0, 0, 0, 1196, 0, 0, 3481, 708,
	0, 3144, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 1196, 0, 1185, 0, 3493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3516, 3517, 0, 3518,
	3519, 3520, 0, 0, 1196, 0, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	249, 249, 653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 0, 0, 0, 0, 0,
	0, 3526, 0, 1196, 0, 3528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1196, 1196, 0, 0, 0, 3556, 3557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 696, 1196, 0,
	0, 0, 0, 0, 3568, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 1196, 0, 0, 0, 0, 3577,
	0, 0, 0, 0, 0, 716, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	1196, 1196, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	698, 0, 0, 0, 713, 714, 711, 0, 0, 0,
	0, 0, 706, 0, 0, 699, 0, 0, 0, 0,
	1196, 0, 0, 0, 0, 3620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1927, 0, 1082, 0, 1871, 0, 1192, 3639, 0,
	0, 253, 0, 0, 700, 707, 0, 0, 0, 0,
	0, 1196, 0, 1196, 701, 0, 253, 1871, 253, 0,
	0, 0, 0, 778, 0, 0, 0, 0, 702, 3663,
	778, 0, 0, 710, 0, 1196, 0, 0, 0, 255,
	255, 255, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 704, 0,
	0, 0, 1927, 0, 253, 0, 0, 255, 0, 0,
	0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 255, 0, 0, 0, 1743, 1738, 0, 0, 0,
	0, 1196, 1196, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 1709, 1196,
	0, 0, 1196, 0, 0, 3752, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	1196, 1196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3796, 3797, 0, 0, 0,
	0, 3801, 3802, 0, 0, 0, 3805, 3806, 0, 1732,
	1733, 1734, 1735, 3810, 0, 0, 0, 0, 0, 1715,
	1196, 0, 0, 0, 3814, 0, 0, 0, 0, 0,
	0, 0, 1196, 0, 0, 0, 0, 0, 253, 0,
	3819, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 1196, 0, 0, 1196, 0, 1724,
	1725, 1196, 0, 0, 253, 0, 0, 0, 253, 0,
	0, 1196, 1196, 253, 0, 0, 0, 1745, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 1196, 0,
	0, 0, 1730, 0, 253, 0, 253, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 253, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 253,
	0, 253, 0, 253, 0, 253, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 1241,
	0, 1241, 1241, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 0, 1433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4028, 4029,
	4030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2312, 0, 0, 4039, 4040, 0, 0, 1196, 0,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4048, 4051, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 1552, 1553, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 0, 2401, 0, 0, 0, 2402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4090, 0,
	0, 0, 0, 0, 0, 0, 4096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4103, 0, 0,
	1022, 0, 0, 1192, 0, 0, 0, 0, 0, 4111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	255, 255, 0, 253, 255, 0, 1278, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1278, 255, 255, 0, 1278, 255, 255, 0, 1278, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 253, 0, 1278,
	0, 253, 0, 253, 0, 0, 0, 0, 0, 0,
	253, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 1278, 0, 255, 255, 0, 0,
	0, 0, 0, 0, 0, 0, 4220, 0, 0, 4223,
	0, 0, 0, 0, 1278, 0, 0, 0, 0, 1278,
	255, 255, 0, 1058, 106, 0, 0, 0, 0, 0,
	0, 0, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1022,
	1022, 253, 0, 0, 0, 796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 253, 0, 0, 798, 0, 0, 0, 0,
	0, 799, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 255, 778, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2312,
	0, 1887, 0, 0, 0, 255, 0, 0, 4051, 0,
	800, 0, 817, 0, 0, 253, 1896, 0, 1433, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 0, 0,
	0, 0, 802, 0, 1022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 825, 0, 1433, 997, 0, 0, 803, 0,
	0, 253, 0, 0, 0, 0, 1017, 0, 0, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 253, 0, 0, 4378, 4378, 4378, 0, 253,
	0, 0, 0, 0, 797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1179, 0,
	0, 0, 0, 0, 4399, 804, 0, 0, 805, 0,
	0, 0, 253, 253, 253, 253, 0, 0, 253, 827,
	253, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 4378, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 821, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 0, 0, 0, 255, 255, 255, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 0, 255, 0, 0, 4378,
	4517, 0, 0, 255, 0, 808, 0, 0, 4521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2144, 0, 0, 0, 2151, 0,
	0, 0, 0, 0, 0, 809, 0, 0, 1278, 2163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 2174, 0, 2174, 0, 0, 0,
	0, 0, 2181, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 818, 0, 0, 0, 0, 0,
	0, 0, 0, 810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2151, 0, 0, 2204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 816, 0, 1192,
	0, 0, 0, 0, 0, 0, 0, 2224, 0, 0,
	0, 0, 811, 0, 1192, 812, 830, 0, 829, 2236,
	0, 2238, 813, 2240, 0, 2242, 0, 2243, 0, 0,
	0, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	0, 822, 0, 0, 1871, 0, 0, 831, 0, 828,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 1278, 1278,
	255, 0, 0, 0, 0, 0, 0, 0, 1278, 253,
	0, 0, 0, 253, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 255, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 255, 0, 255, 0, 253, 253, 0,
	253, 255, 0, 0, 0, 0, 0, 1871, 0, 0,
	1278, 0, 1278, 0, 1278, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 106, 0,
	1278, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 255, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 1278, 0, 1278, 1278, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 255, 0,
	255, 253, 255, 0, 255, 0, 255, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 0, 0,
	106, 0, 106, 253, 106, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2588, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1017, 106, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 106, 0,
	106, 0, 0, 1278, 0, 0, 0, 0, 0, 0,
	106, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2631, 0, 0, 1241, 0, 0,
	0, 1241, 0, 1241, 0, 0, 0, 0, 0, 253,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	2163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	1278, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 1738, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 259, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 1278,
	0, 0, 1433, 997, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 255, 1772, 0, 1278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	1777, 770, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2151, 0, 0, 0, 0,
	0, 0, 0, 2163, 0, 770, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	1192, 1192, 0, 255, 0, 0, 255, 0, 0, 0,
	255, 2900, 255, 0, 0, 0, 0, 0, 0, 255,
	255, 0, 0, 0, 0, 1278, 1278, 0, 0, 255,
	2910, 0, 2913, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 1869, 0, 1872, 1278, 106, 1724,
	1725, 0, 2937, 1433, 2939, 1433, 0, 0, 2943, 0,
	0, 0, 0, 0, 255, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	255, 1241, 0, 0, 0, 0, 0, 0, 0, 2971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1755, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 0, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 1278, 0, 253,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 1278, 0, 253,
	0, 0, 0, 0, 253, 1736, 0, 0, 253, 1278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 1278, 1731, 0, 0, 0, 1192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 255, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 255, 255, 255, 255, 0, 0, 255, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 3824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	1017, 0, 1017, 1192, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 1433, 1433, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 3282, 3284, 0,
	2163, 0, 0, 0, 0, 0, 0, 253, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	1276, 0, 253, 997, 0, 0, 997, 997, 0, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 3357, 1334, 0, 1278, 3361, 1334, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 2379, 0, 0, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 1278, 1278, 1276, 0, 0, 1777, 0, 255, 0,
	1777, 0, 255, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3412, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 1276, 0,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 0, 0,
	0, 0, 0, 0, 0, 1278, 0, 0, 255, 3449,
	0, 1433, 1179, 0, 0, 253, 255, 255, 0, 255,
	0, 0, 0, 0, 0, 0, 255, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 1278, 0, 0, 0, 3461, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	0, 106, 0, 0, 0, 0, 0, 1278, 253, 0,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1278, 0, 0, 0, 0,
	255, 1278, 0, 1278, 0, 0, 0, 1278, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 1278, 255, 0, 0, 0,
	0, 1871, 1871, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1278, 1278, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 255, 1278,
	255, 0, 0, 0, 253, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 1871, 0, 253, 1871, 0,
	106, 0, 0, 106, 0, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 1278, 0,
	106, 0, 0, 0, 0, 1334, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 770, 0, 0, 0,
	0, 0, 0, 770, 0, 0, 1276, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 1335, 0, 0, 0, 1277, 0, 253,
	0, 0, 0, 106, 0, 0, 0, 0, 0, 2163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2163, 0, 1276, 0, 0, 906, 0, 951, 1277, 0,
	3719, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2163, 0, 0, 0, 3734, 0,
	0, 0, 914, 1277, 0, 0, 0, 1334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 928, 253,
	912, 911, 0, 1277, 0, 0, 0, 0, 1277, 0,
	0, 0, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 913, 0,
	0, 0, 0, 916, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 3781, 2379, 0, 0, 925, 926, 0,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 952, 918, 0, 1277, 0, 0, 0, 1871,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 919,
	0, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 0, 1276, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 921, 0, 0, 0, 0, 0, 0, 0, 910,
	0, 0, 0, 0, 0, 1278, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 922, 923, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 930, 929, 255, 0,
	0, 0, 0, 255, 924, 0, 0, 255, 939, 0,
	0, 0, 0, 1278, 1276, 0, 1276, 0, 1276, 0,
	0, 0, 0, 0, 0, 0, 956, 949, 1179, 0,
	0, 0, 0, 0, 1276, 1276, 0, 0, 0, 1278,
	1278, 1278, 0, 1179, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1278, 0, 1276, 953, 1276,
	1276, 1276, 0, 3914, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 1278, 0, 0, 2163, 0, 0,
	0, 770, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 917,
	0, 0, 958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2163, 0, 915, 0, 0, 0, 946, 947,
	0, 3984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 948, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 0, 0, 1334, 0, 957,
	940, 1277, 933, 931, 0, 936, 0, 0, 0, 106,
	106, 937, 0, 106, 908, 0, 954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1278, 909, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 106, 106, 935, 0, 106, 0, 0, 0,
	0, 0, 1278, 0, 0, 955, 0, 1277, 0, 0,
	0, 0, 0, 941, 0, 0, 0, 0, 1277, 0,
	0, 0, 920, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 4078, 0, 0, 0, 945,
	0, 0, 0, 0, 1278, 0, 255, 0, 255, 0,
	0, 0, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 0,
	0, 0, 1179, 1334, 0, 1017, 0, 0, 0, 0,
	0, 1278, 1278, 0, 0, 0, 0, 0, 2163, 106,
	106, 0, 0, 0, 0, 0, 0, 0, 1278, 1334,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 1278,
	255, 0, 0, 0, 1278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1277, 1277, 1278,
	1278, 1278, 0, 0, 0, 0, 0, 1335, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 4192, 1433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 0, 1278, 0, 0, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 1277,
	0, 1277, 0, 1277, 0, 1278, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 1277,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 1277, 1277, 1277, 4272, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	1278, 0, 0, 0, 0, 0, 0, 255, 0, 0,
	1276, 1278, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 1278,
	0, 1276, 1278, 0, 0, 0, 0, 0, 0, 1179,
	1179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4322, 0, 0, 0, 0, 0, 0,
	0, 1276, 0, 0, 0, 0, 0, 255, 255, 0,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 1335, 0, 0, 0, 0, 0, 1276, 4356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 1738, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4415,
	0, 0, 0, 255, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 255, 0, 0, 0,
	0, 1278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1278, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 1335, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 1179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 1757, 0, 0, 0, 0, 255, 1737,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 1753, 0, 1754, 0,
	0, 0, 0, 0, 0, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1277, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 106, 0,
	0, 0, 0, 0, 1179, 0, 0, 0, 0, 0,
	1334, 1335, 1179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 0,
	0, 1334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1736, 0, 0, 0, 1276, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 1277, 1707, 1708, 0,
	1740, 1741, 1742, 1750, 1751, 1752, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	1743, 1738, 0, 0, 0, 0, 1277, 0, 1710, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 1277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 106,
	0, 0, 1726, 0, 0, 1276, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 106, 0, 1746, 0, 1276, 0, 0, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 0, 0, 0, 1276,
	0, 0, 0, 3479, 0, 1276, 0, 1276, 0, 0,
	0, 1334, 0, 0, 1732, 1733, 1734, 1735, 770, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 1757, 0, 0, 0, 0, 0, 1737, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1276, 1276, 0, 0, 1753, 0, 1754, 0, 0,
	0, 0, 0, 0, 1724, 1725, 0, 0, 0, 0,
	0, 0, 0, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 0, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 2379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	1736, 0, 0, 0, 0, 0, 0, 0, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 0, 0,
	1731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 1743, 1738, 0, 0, 0, 0, 0, 0, 1710,
	0, 0, 0, 0, 0, 1335, 1748, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	1277, 1277, 0, 0, 1729, 0, 0, 0, 0, 0,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1334, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 1721, 1722,
	1728, 1749, 1727, 1723, 1277, 1720, 1718, 1719, 1711, 1712,
	1713, 1714, 1716, 1717, 0, 1732, 1733, 1734, 1735, 0,
	0, 0, 3041, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	1747, 0, 0, 1757, 0, 0, 1277, 0, 0, 1737,
	1739, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 1754, 0,
	106, 0, 0, 106, 1277, 1724, 1725, 0, 0, 0,
	1277, 0, 1277, 0, 0, 0, 1335, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 1277, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 1277, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	0, 0, 0, 0, 0, 1335, 0, 0, 1335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 1736, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	1335, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 1335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1334, 0, 1334, 0, 1746, 0, 0, 0, 0, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 1334, 0, 0, 0,
	0, 0, 0, 3040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1334, 0,
	0, 1335, 1747, 0, 0, 1757, 0, 1334, 0, 0,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 1276, 1276, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1276, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 0, 0, 1276, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1276, 1276, 1276, 0, 0, 0, 0,
	0, 0, 1755, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1334, 0, 1276, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1277, 0, 0, 0, 0, 0, 0, 1334,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1277, 1277,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 1277, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1335, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 1276, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1334, 0, 0, 1276, 0, 1743, 1738,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 1709, 0, 0, 0, 3037, 0, 0, 0, 0,
	0, 1729, 0, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1335, 0, 1335, 1743, 1738,
	0, 0, 0, 0, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 1335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 1732, 1733, 1734, 1735, 0, 0, 0, 0,
	0, 1729, 1715, 0, 0, 0, 0, 0, 0, 0,
	1726, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 1335, 0, 1276, 1276, 1747, 0, 0,
	1757, 0, 1335, 0, 0, 0, 1737, 1739, 0, 0,
	0, 0, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 1754, 0, 0, 0, 0,
	1277, 1277, 1724, 1725, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 1733, 1734, 1735, 0, 1277, 0, 0,
	1745, 0, 1715, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 1277, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	1757, 0, 0, 0, 0, 0, 1737, 1739, 1277, 1277,
	1277, 0, 0, 0, 0, 0, 0, 1755, 0, 1335,
	0, 0, 0, 1753, 0, 1754, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1335, 0, 1277, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 1335, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1277, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 1277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	3036, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	3035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	1277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1277, 1277, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 1337, 271, 272, 1338, 1339, 1340, 1277, 1341, 599,
	1342, 1343, 1344, 1345, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	1346, 604, 283, 284, 285, 286, 287, 288, 1347, 1348,
	0, 289, 605, 606, 607, 1349, 290, 291, 608, 1350,
	1279, 1351, 292, 293, 294, 295, 296, 297, 298, 0,
	1352, 300, 301, 302, 299, 303, 1353, 304, 0, 305,
	306, 307, 308, 309, 310, 1354, 311, 312, 313, 1137,
	314, 315, 1355, 1356, 1358, 1357, 1359, 1360, 1361, 316,
	317, 318, 319, 0, 320, 609, 610, 1362, 324, 321,
	322, 1363, 325, 323, 1364, 326, 327, 328, 1365, 1366,
	329, 330, 331, 1367, 332, 333, 1368, 334, 335, 336,
	1369, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 1370, 260, 1371,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 1372, 355, 1373, 1374, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 1375,
	366, 617, 1376, 618, 367, 1377, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1140, 373, 374, 1378, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 1379, 1139, 382, 622, 623, 1380, 624, 1381, 384,
	385, 1141, 625, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1382, 396,
	398, 397, 1383, 399, 626, 1144, 400, 401, 1145, 1384,
	402, 0, 0, 0, 403, 404, 407, 1385, 1386, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 1387, 262, 1148, 446, 447, 1388, 627,
	448, 628, 450, 451, 1389, 0, 452, 0, 1390, 1391,
	454, 455, 456, 1392, 1393, 457, 458, 629, 1149, 459,
	1150, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 1394, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 1395,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 1396, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 1397, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 1398, 530,
	531, 529, 532, 533, 534, 1399, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 1400, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 1401, 558, 559,
	0, 556, 1402, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 1403, 568, 640, 641, 642, 643, 1404, 577,
	1405, 569, 570, 571, 644, 572, 645, 1406, 573, 574,
	575, 576, 0, 578, 579, 1407, 1408, 580, 581, 582,
	584, 585, 583, 586, 1409, 587, 1410, 0, 588, 589,
	590, 646, 647, 648, 1411, 592, 591, 593, 649, 1412,
	1413, 1414, 1415, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 2566, 0, 0, 0, 0, 0, 0, 0, 2567,
	263, 265, 264, 266, 267, 268, 269, 270, 1337, 271,
	272, 1338, 1339, 1340, 0, 1341, 599, 1342, 1343, 1344,
	1345, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 1346, 604, 283,
	284, 285, 286, 287, 288, 1347, 1348, 0, 289, 605,
	606, 607, 1349, 290, 291, 608, 1350, 1279, 1351, 292,
	293, 294, 295, 296, 297, 298, 0, 1352, 300, 301,
	302, 299, 303, 1353, 304, 0, 305, 306, 307, 308,
	309, 310, 1354, 311, 312, 313, 1137, 314, 315, 1355,
	1356, 1358, 1357, 1359, 1360, 1361, 316, 317, 318, 319,
	0, 320, 609, 610, 1362, 324, 321, 322, 1363, 325,
	323, 1364, 326, 327, 328, 1365, 1366, 329, 330, 331,
	1367, 332, 333, 1368, 334, 335, 336, 1369, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 1370, 260, 1371, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 1372,
	355, 1373, 1374, 1138, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 1375, 366, 617, 1376,
	618, 367, 1377, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1140, 373, 374, 1378, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 1379, 1139,
	382, 622, 623, 1380, 624, 1381, 384, 385, 1141, 625,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 1382, 396, 398, 397, 1383,
	399, 626, 1144, 400, 401, 1145, 1384, 402, 0, 0,
	0, 403, 404, 407, 1385, 1386, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1387, 262, 1148, 446, 447, 1388, 627, 448, 628, 450,
	451, 1389, 0, 452, 0, 1390, 1391, 454, 455, 456,
	1392, 1393, 457, 458, 629, 1149, 459, 1150, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	1394, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 1395, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 1396, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 1397, 507, 508, 509, 1151, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 1398, 530, 531, 529, 532,
	533, 534, 1399, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 1400,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 1401, 558, 559, 0, 556, 1402,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 1403,
	568, 640, 641, 642, 643, 1404, 577, 1405, 569, 570,
	571, 644, 572, 645, 1406, 573, 574, 575, 576, 0,
	578, 579, 1407, 1408, 580, 581, 582, 584, 585, 583,
	586, 1409, 587, 1410, 0, 588, 589, 590, 646, 647,
	648, 1411, 592, 591, 593, 649, 1412, 1413, 1414, 1415,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 3487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3489, 263, 265, 264, 266, 267,
	268, 269, 270, 1337, 271, 272, 1338, 1339, 1340, 0,
	1341, 599, 1342, 1343, 1344, 1345, 273, 274, 1136, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 1346, 604, 283, 284, 285, 286, 287, 288,
	1347, 1348, 0, 289, 605, 606, 607, 1349, 290, 291,
	608, 1350, 1279, 1351, 292, 293, 294, 295, 296, 297,
	298, 0, 1352, 300, 301, 302, 299, 303, 1353, 304,
	0, 305, 306, 307, 308, 309, 310, 1354, 311, 312,
	313, 1137, 314, 315, 1355, 1356, 1358, 1357, 1359, 1360,
	1361, 316, 317, 318, 319, 0, 320, 609, 610, 1362,
	324, 321, 322, 1363, 325, 323, 1364, 326, 327, 328,
	1365, 1366, 329, 330, 331, 1367, 332, 333, 1368, 334,
	335, 336, 1369, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 1370,
	260, 1371, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 1372, 355, 1373, 1374, 1138, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 1375, 366, 617, 1376, 618, 367, 1377, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1140, 373, 374,
	1378, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 1379, 1139, 382, 622, 623, 1380, 624,
	1381, 384, 385, 1141, 625, 1142, 386, 387, 388, 1143,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	1382, 396, 398, 397, 1383, 399, 626, 1144, 400, 401,
	1145, 1384, 402, 0, 0, 0, 403, 404, 407, 1385,
	1386, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1146, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1147, 436, 1387, 262, 1148, 446, 447,
	1388, 627, 448, 628, 450, 451, 1389, 0, 452, 0,
	1390, 1391, 454, 455, 456, 1392, 1393, 457, 458, 629,
	1149, 459, 1150, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 1394, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 1395, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 1396, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 1397, 507, 508,
	509, 1151, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	1398, 530, 531, 529, 532, 533, 534, 1399, 535, 536,
	519, 520, 537, 538, 1152, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 1400, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 1401,
	558, 559, 0, 556, 1402, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 1403, 568, 640, 641, 642, 643,
	1404, 577, 1405, 569, 570, 571, 644, 572, 645, 1406,
	573, 574, 575, 576, 0, 578, 579, 1407, 1408, 580,
	581, 582, 584, 585, 583, 586, 1409, 587, 1410, 0,
	588, 589, 590, 646, 647, 648, 1411, 592, 591, 593,
	649, 1412, 1413, 1414, 1415, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3852, 263, 265, 264, 266, 267, 268,
	269, 270, 1337, 271, 272, 1338, 1339, 1340, 0, 1341,
	599, 1342, 1343, 1344, 1345, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 1346, 604, 283, 284, 285, 286, 287, 288, 1347,
	1348, 0, 289, 605, 606, 607, 1349, 290, 291, 608,
	1350, 1279, 1351, 292, 293, 294, 295, 296, 297, 298,
	0, 1352, 300, 301, 302, 299, 303, 1353, 304, 0,
	305, 306, 307, 308, 309, 310, 1354, 311, 312, 313,
	1137, 314, 315, 1355, 1356, 1358, 1357, 1359, 1360, 1361,
	316, 317, 318, 319, 0, 320, 609, 610, 1362, 324,
	321, 322, 1363, 325, 323, 1364, 326, 327, 328, 1365,
	1366, 329, 330, 331, 1367, 332, 333, 1368, 334, 335,
	336, 1369, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 1370, 260,
	1371, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 1372, 355, 1373, 1374, 1138, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	1375, 366, 617, 1376, 618, 367, 1377, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1140, 373, 374, 1378,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 1379, 1139, 382, 622, 623, 1380, 624, 1381,
	384, 385, 1141, 625, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1382,
	396, 398, 397, 1383, 399, 626, 1144, 400, 401, 1145,
	1384, 402, 0, 0, 0, 403, 404, 407, 1385, 1386,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1387, 262, 1148, 446, 447, 1388,
	627, 448, 628, 450, 451, 1389, 0, 452, 0, 1390,
	1391, 454, 455, 456, 1392, 1393, 457, 458, 629, 1149,
	459, 1150, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 1394, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	1395, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 1396, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 1397, 507, 508, 509,
	1151, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 1398,
	530, 531, 529, 532, 533, 534, 1399, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 1400, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 1401, 558,
	559, 0, 556, 1402, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 1403, 568, 640, 641, 642, 643, 1404,
	577, 1405, 569, 570, 571, 644, 572, 645, 1406, 573,
	574, 575, 576, 0, 578, 579, 1407, 1408, 580, 581,
	582, 584, 585, 583, 586, 1409, 587, 1410, 0, 588,
	589, 590, 646, 647, 648, 1411, 592, 591, 593, 649,
	1412, 1413, 1414, 1415, 594, 595, 650, 596, 597, 598,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4034, 263, 265,
	264, 266, 267, 268, 269, 270, 1337, 271, 272, 1338,
	1339, 1340, 0, 1341, 599, 1342, 1343, 1344, 1345, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 1346, 604, 283, 284, 285,
	286, 287, 288, 1347, 1348, 0, 289, 605, 606, 607,
	1349, 290, 291, 608, 1350, 1279, 1351, 292, 293, 294,
	295, 296, 297, 298, 0, 1352, 300, 301, 302, 299,
	303, 1353, 304, 0, 305, 306, 307, 308, 309, 310,
	1354, 311, 312, 313, 1137, 314, 315, 1355, 1356, 1358,
	1357, 1359, 1360, 1361, 316, 317, 318, 319, 0, 320,
	609, 610, 1362, 324, 321, 322, 1363, 325, 323, 1364,
	326, 327, 328, 1365, 1366, 329, 330, 331, 1367, 332,
	333, 1368, 334, 335, 336, 1369, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 1370, 260, 1371, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 1372, 355, 1373,
	1374, 1138, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 1375, 366, 617, 1376, 618, 367,
	1377, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1140, 373, 374, 1378, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 1379, 1139, 382, 622,
	623, 1380, 624, 1381, 384, 385, 1141, 625, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 1382, 396, 398, 397, 1383, 399, 626,
	1144, 400, 401, 1145, 1384, 402, 0, 0, 0, 403,
	404, 407, 1385, 1386, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1387, 262,
	1148, 446, 447, 1388, 627, 448, 628, 450, 451, 1389,
	0, 452, 0, 1390, 1391, 454, 455, 456, 1392, 1393,
	457, 458, 629, 1149, 459, 1150, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 1394, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 1395, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	1396, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	1397, 507, 508, 509, 1151, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 1398, 530, 531, 529, 532, 533, 534,
	1399, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 1400, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 1401, 558, 559, 0, 556, 1402, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 1403, 568, 640,
	641, 642, 643, 1404, 577, 1405, 569, 570, 571, 644,
	572, 645, 1406, 573, 574, 575, 576, 0, 578, 579,
	1407, 1408, 580, 581, 582, 584, 585, 583, 586, 1409,
	587, 1410, 0, 588, 589, 590, 646, 647, 648, 1411,
	592, 591, 593, 649, 1412, 1413, 1414, 1415, 594, 595,
	650, 596, 597, 598, 0, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3923, 263, 265, 264, 266, 267, 268, 269, 270,
	1337, 271, 272, 1338, 1339, 1340, 0, 1341, 599, 1342,
	1343, 1344, 1345, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 1346,
	604, 283, 284, 285, 286, 287, 288, 1347, 1348, 0,
	289, 605, 606, 607, 1349, 290, 291, 608, 1350, 1279,
	1351, 292, 293, 294, 295, 296, 297, 298, 0, 1352,
	300, 301, 302, 299, 303, 1353, 304, 0, 305, 306,
	307, 308, 309, 310, 1354, 311, 312, 313, 1137, 314,
	315, 1355, 1356, 1358, 1357, 1359, 1360, 1361, 316, 317,
	318, 319, 0, 320, 609, 610, 1362, 324, 321, 322,
	1363, 325, 323, 1364, 326, 327, 328, 1365, 1366, 329,
	330, 331, 1367, 332, 333, 1368, 334, 335, 336, 1369,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 1370, 260, 1371, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 1372, 355, 1373, 1374, 1138, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 1375, 366,
	617, 1376, 618, 367, 1377, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1140, 373, 374, 1378, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	1379, 1139, 382, 622, 623, 1380, 624, 1381, 384, 385,
	1141, 625, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 1382, 396, 398,
	397, 1383, 399, 626, 1144, 400, 401, 1145, 1384, 402,
	0, 0, 0, 403, 404, 407, 1385, 1386, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1387, 262, 1148, 446, 447, 1388, 627, 448,
	628, 450, 451, 1389, 0, 452, 0, 1390, 1391, 454,
	455, 456, 1392, 1393, 457, 458, 629, 1149, 459, 1150,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 1394, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 1395, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 1396, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 1397, 507, 508, 509, 1151, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 1398, 530, 531,
	529, 532, 533, 534, 1399, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 1400, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 1401, 558, 559, 0,
	556, 1402, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 1403, 568, 640, 641, 642, 643, 1404, 577, 1405,
	569, 570, 571, 644, 572, 645, 1406, 573, 574, 575,
	576, 0, 578, 579, 1407, 1408, 580, 581, 582, 584,
	585, 583, 586, 1409, 587, 1410, 0, 588, 589, 590,
	646, 647, 648, 1411, 592, 591, 593, 649, 1412, 1413,
	1414, 1415, 594, 595, 650, 596, 597, 598, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3782, 263, 265, 264, 266,
	267, 268, 269, 270, 1337, 271, 272, 1338, 1339, 1340,
	0, 1341, 599, 1342, 1343, 1344, 1345, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 1346, 604, 283, 284, 285, 286, 287,
	288, 1347, 1348, 0, 289, 605, 606, 607, 1349, 290,
	291, 608, 1350, 1279, 1351, 292, 293, 294, 295, 296,
	297, 298, 0, 1352, 300, 301, 302, 299, 303, 1353,
	304, 0, 305, 306, 307, 308, 309, 310, 1354, 311,
	312, 313, 1137, 314, 315, 1355, 1356, 1358, 1357, 1359,
	1360, 1361, 316, 317, 318, 319, 0, 320, 609, 610,
	1362, 324, 321, 322, 1363, 325, 323, 1364, 326, 327,
	328, 1365, 1366, 329, 330, 331, 1367, 332, 333, 1368,
	334, 335, 336, 1369, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	1370, 260, 1371, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 1372, 355, 1373, 1374, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 1375, 366, 617, 1376, 618, 367, 1377, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1140, 373,
	374, 1378, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 1379, 1139, 382, 622, 623, 1380,
	624, 1381, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 1382, 396, 398, 397, 1383, 399, 626, 1144, 400,
	401, 1145, 1384, 402, 0, 0, 0, 403, 404, 407,
	1385, 1386, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1387, 262, 1148, 446,
	447, 1388, 627, 448, 628, 450, 451, 1389, 0, 452,
	0, 1390, 1391, 454, 455, 456, 1392, 1393, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 1394, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 1395, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 1396, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 1397, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 1398, 530, 531, 529, 532, 533, 534, 1399, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 1400, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	1401, 558, 559, 0, 556, 1402, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 1403, 568, 640, 641, 642,
	643, 1404, 577, 1405, 569, 570, 571, 644, 572, 645,
	1406, 573, 574, 575, 576, 0, 578, 579, 1407, 1408,
	580, 581, 582, 584, 585, 583, 586, 1409, 587, 1410,
	0, 588, 589, 590, 646, 647, 648, 1411, 592, 591,
	593, 649, 1412, 1413, 1414, 1415, 594, 595, 650, 596,
	597, 598, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3505,
	263, 265, 264, 266, 267, 268, 269, 270, 1337, 271,
	272, 1338, 1339, 1340, 0, 1341, 599, 1342, 1343, 1344,
	1345, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 1346, 604, 283,
	284, 285, 286, 287, 288, 1347, 1348, 0, 289, 605,
	606, 607, 1349, 290, 291, 608, 1350, 1279, 1351, 292,
	293, 294, 295, 296, 297, 298, 0, 1352, 300, 301,
	302, 299, 303, 1353, 304, 0, 305, 306, 307, 308,
	309, 310, 1354, 311, 312, 313, 1137, 314, 315, 1355,
	1356, 1358, 1357, 1359, 1360, 1361, 316, 317, 318, 319,
	0, 320, 609, 610, 1362, 324, 321, 322, 1363, 325,
	323, 1364, 326, 327, 328, 1365, 1366, 329, 330, 331,
	1367, 332, 333, 1368, 334, 335, 336, 1369, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 1370, 260, 1371, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 1372,
	355, 1373, 1374, 1138, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 1375, 366, 617, 1376,
	618, 367, 1377, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1140, 373, 374, 1378, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 1379, 1139,
	382, 622, 623, 1380, 624, 1381, 384, 385, 1141, 625,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 1382, 396, 398, 397, 1383,
	399, 626, 1144, 400, 401, 1145, 1384, 402, 0, 0,
	0, 403, 404, 407, 1385, 1386, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1387, 262, 1148, 446, 447, 1388, 627, 448, 628, 450,
	451, 1389, 0, 452, 0, 1390, 1391, 454, 455, 456,
	1392, 1393, 457, 458, 629, 1149, 459, 1150, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	1394, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 1395, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 1396, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 1397, 507, 508, 509, 1151, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 1398, 530, 531, 529, 532,
	533, 534, 1399, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 1400,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 1401, 558, 559, 0, 556, 1402,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 1403,
	568, 640, 641, 642, 643, 1404, 577, 1405, 569, 570,
	571, 644, 572, 645, 1406, 573, 574, 575, 576, 0,
	578, 579, 1407, 1408, 580, 581, 582, 584, 585, 583,
	586, 1409, 587, 1410, 0, 588, 589, 590, 646, 647,
	648, 1411, 592, 591, 593, 649, 1412, 1413, 1414, 1415,
	594, 595, 650, 596, 597, 598, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3342, 263, 265, 264, 266, 267, 268,
	269, 270, 1337, 271, 272, 1338, 1339, 1340, 0, 1341,
	599, 1342, 1343, 1344, 1345, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 1346, 604, 283, 284, 285, 286, 287, 288, 1347,
	1348, 0, 289, 605, 606, 607, 1349, 290, 291, 608,
	1350, 1279, 1351, 292, 293, 294, 295, 296, 297, 298,
	0, 1352, 300, 301, 302, 299, 303, 1353, 304, 0,
	305, 306, 307, 308, 309, 310, 1354, 311, 312, 313,
	1137, 314, 315, 1355, 1356, 1358, 1357, 1359, 1360, 1361,
	316, 317, 318, 319, 0, 320, 609, 610, 1362, 324,
	321, 322, 1363, 325, 323, 1364, 326, 327, 328, 1365,
	1366, 329, 330, 331, 1367, 332, 333, 1368, 334, 335,
	336, 1369, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 1370, 260,
	1371, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 1372, 355, 1373, 1374, 1138, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	1375, 366, 617, 1376, 618, 367, 1377, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1140, 373, 374, 1378,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 1379, 1139, 382, 622, 623, 1380, 624, 1381,
	384, 385, 1141, 625, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1382,
	396, 398, 397, 1383, 399, 626, 1144, 400, 401, 1145,
	1384, 402, 0, 0, 0, 403, 404, 407, 1385, 1386,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1387, 262, 1148, 446, 447, 1388,
	627, 448, 628, 450, 451, 1389, 0, 452, 0, 1390,
	1391, 454, 455, 456, 1392, 1393, 457, 458, 629, 1149,
	459, 1150, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 1394, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	1395, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 1396, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 1397, 507, 508, 509,
	1151, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 1398,
	530, 531, 529, 532, 533, 534, 1399, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 1400, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 1401, 558,
	559, 0, 556, 1402, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 1403, 568, 640, 641, 642, 643, 1404,
	577, 1405, 569, 570, 571, 644, 572, 645, 1406, 573,
	574, 575, 576, 0, 578, 579, 1407, 1408, 580, 581,
	582, 584, 585, 583, 586, 1409, 587, 1410, 0, 588,
	589, 590, 646, 647, 648, 1411, 592, 591, 593, 649,
	1412, 1413, 1414, 1415, 594, 595, 650, 596, 597, 598,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2425, 263, 265,
	264, 266, 267, 268, 269, 270, 1337, 271, 272, 1338,
	1339, 1340, 0, 1341, 599, 1342, 1343, 1344, 1345, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 1346, 604, 283, 284, 285,
	286, 287, 288, 1347, 1348, 0, 289, 605, 606, 607,
	1349, 290, 291, 608, 1350, 1279, 1351, 292, 293, 294,
	295, 296, 297, 298, 0, 1352, 300, 301, 302, 299,
	303, 1353, 304, 0, 305, 306, 307, 308, 309, 310,
	1354, 311, 312, 313, 1137, 314, 315, 1355, 1356, 1358,
	1357, 1359, 1360, 1361, 316, 317, 318, 319, 0, 320,
	609, 610, 1362, 324, 321, 322, 1363, 325, 323, 1364,
	326, 327, 328, 1365, 1366, 329, 330, 331, 1367, 332,
	333, 1368, 334, 335, 336, 1369, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 1370, 260, 1371, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 1372, 355, 1373,
	1374, 1138, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 1375, 366, 617, 1376, 618, 367,
	1377, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1140, 373, 374, 1378, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 1379, 1139, 382, 622,
	623, 1380, 624, 1381, 384, 385, 1141, 625, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 1382, 396, 398, 397, 1383, 399, 626,
	1144, 400, 401, 1145, 1384, 402, 0, 0, 0, 403,
	404, 407, 1385, 1386, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1387, 262,
	1148, 446, 447, 1388, 627, 448, 628, 450, 451, 1389,
	0, 452, 0, 1390, 1391, 454, 455, 456, 1392, 1393,
	457, 458, 629, 1149, 459, 1150, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 1394, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 1395, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	1396, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	1397, 507, 508, 509, 1151, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 1398, 530, 531, 529, 532, 533, 534,
	1399, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 1400, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 1401, 558, 559, 0, 556, 1402, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 1403, 568, 640,
	641, 642, 643, 1404, 577, 1405, 569, 570, 571, 644,
	572, 645, 1406, 573, 574, 575, 576, 0, 578, 579,
	1407, 1408, 580, 581, 582, 584, 585, 583, 586, 1409,
	587, 1410, 0, 588, 589, 590, 646, 647, 648, 1411,
	592, 591, 593, 649, 1412, 1413, 1414, 1415, 594, 595,
	650, 596, 597, 598, 1427, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 1337, 271, 272, 1338, 1339, 1340, 0, 1341, 599,
	1342, 1343, 1344, 1345, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	1346, 604, 283, 284, 285, 286, 287, 288, 1347, 1348,
	0, 289, 605, 606, 607, 1349, 290, 291, 608, 1350,
	1279, 1351, 292, 293, 294, 295, 296, 297, 298, 0,
	1352, 300, 301, 302, 299, 303, 1353, 304, 0, 305,
	306, 307, 308, 309, 310, 1354, 311, 312, 313, 1137,
	314, 315, 1355, 1356, 1358, 1357, 1359, 1360, 1361, 316,
	317, 318, 319, 0, 320, 609, 610, 1362, 324, 321,
	322, 1363, 325, 323, 1364, 326, 327, 328, 1365, 1366,
	329, 330, 331, 1367, 332, 333, 1368, 334, 335, 336,
	1369, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 1370, 260, 1371,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 1372, 355, 1373, 1374, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 1375,
	366, 617, 1376, 618, 367, 1377, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1140, 373, 374, 1378, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 1379, 1139, 382, 622, 623, 1380, 624, 1381, 384,
	385, 1141, 625, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 1382, 396,
	398, 397, 1383, 399, 626, 1144, 400, 401, 1145, 1384,
	402, 0, 0, 0, 403, 404, 407, 1385, 1386, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 1387, 262, 1148, 446, 447, 1388, 627,
	448, 628, 450, 451, 1389, 0, 452, 0, 1390, 1391,
	454, 455, 456, 1392, 1393, 457, 458, 629, 1149, 459,
	1150, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 1394, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 1395,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 1396, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 1397, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 1398, 530,
	531, 529, 532, 533, 534, 1399, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 1400, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 1401, 558, 559,
	0, 556, 1402, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 1403, 568, 640, 641, 642, 643, 1404, 577,
	1405, 569, 570, 571, 644, 572, 645, 1406, 573, 574,
	575, 576, 0, 578, 579, 1407, 1408, 580, 581, 582,
	584, 585, 583, 586, 1409, 587, 1410, 0, 588, 589,
	590, 646, 647, 648, 1411, 592, 591, 593, 649, 1412,
	1413, 1414, 1415, 594, 595, 650, 596, 597, 598, 1329,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 1337, 271, 272, 1338,
	1339, 1340, 0, 1341, 599, 1342, 1343, 1344, 1345, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 1346, 604, 283, 284, 285,
	286, 287, 288, 1347, 1348, 0, 289, 605, 606, 607,
	1349, 290, 291, 608, 1350, 1279, 1351, 292, 293, 294,
	295, 296, 297, 298, 0, 1352, 300, 301, 302, 299,
	303, 1353, 304, 0, 305, 306, 307, 308, 309, 310,
	1354, 311, 312, 313, 1137, 314, 315, 1355, 1356, 1358,
	1357, 1359, 1360, 1361, 316, 317, 318, 319, 0, 320,
	609, 610, 1362, 324, 321, 322, 1363, 325, 323, 1364,
	326, 327, 328, 1365, 1366, 329, 330, 331, 1367, 332,
	333, 1368, 334, 335, 336, 1369, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 1370, 260, 1371, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 1372, 355, 1373,
	1374, 1138, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 1375, 366, 617, 1376, 618, 367,
	1377, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1140, 373, 374, 1378, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 1379, 1139, 382, 622,
	623, 1380, 624, 1381, 384, 385, 1141, 625, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 1382, 396, 398, 397, 1383, 399, 626,
	1144, 400, 401, 1145, 1384, 402, 0, 0, 0, 403,
	404, 407, 1385, 1386, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1387, 262,
	1148, 446, 447, 1388, 627, 448, 628, 450, 451, 1389,
	0, 452, 0, 1390, 1391, 454, 455, 456, 1392, 1393,
	457, 458, 629, 1149, 459, 1150, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 1394, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 1395, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	1396, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	1397, 507, 508, 509, 1151, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 1398, 530, 531, 529, 532, 533, 534,
	1399, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 1400, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 1401, 558, 559, 0, 556, 1402, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 1403, 568, 640,
	641, 642, 643, 1404, 577, 1405, 569, 570, 571, 644,
	572, 645, 1406, 573, 574, 575, 576, 0, 578, 579,
	1407, 1408, 580, 581, 582, 584, 585, 583, 586, 1409,
	587, 1410, 0, 588, 589, 590, 646, 647, 648, 1411,
	592, 591, 593, 649, 1412, 1413, 1414, 1415, 594, 595,
	650, 596, 597, 598, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 1337,
	271, 272, 1338, 1339, 1340, 0, 1341, 599, 1342, 1343,
	1344, 1345, 273, 274, 1136, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 1346, 604,
	283, 284, 285, 286, 287, 288, 1347, 1348, 0, 289,
	605, 606, 607, 1349, 290, 291, 608, 1350, 1279, 1351,
	292, 293, 294, 295, 296, 297, 298, 0, 1352, 300,
	301, 302, 299, 303, 1353, 304, 0, 305, 306, 307,
	308, 309, 310, 1354, 311, 312, 313, 1137, 314, 315,
	1355, 1356, 1358, 1357, 1359, 1360, 1361, 316, 317, 318,
	319, 0, 320, 609, 610, 1362, 324, 321, 322, 1363,
	325, 323, 1364, 326, 327, 328, 1365, 1366, 329, 330,
	331, 1367, 332, 333, 1368, 334, 335, 336, 1369, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 1370, 260, 1371, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	1372, 355, 1373, 1374, 1138, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 1375, 366, 617,
	1376, 618, 367, 1377, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1140, 373, 374, 1378, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 1379,
	1139, 382, 622, 623, 1380, 624, 1381, 384, 385, 1141,
	625, 1142, 386, 387, 388, 1143, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1382, 396, 398, 397,
	1383, 399, 626, 1144, 400, 401, 1145, 1384, 402, 0,
	0, 0, 403, 404, 407, 1385, 1386, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1146, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1147,
	436, 1387, 262, 1148, 446, 447, 1388, 627, 448, 628,
	450, 451, 1389, 0, 452, 0, 1390, 1391, 454, 455,
	456, 1392, 1393, 457, 458, 629, 1149, 459, 1150, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 1394, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 1395, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 1396, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 1397, 507, 508, 509, 1151, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 1398, 530, 531, 529,
	532, 533, 534, 1399, 535, 536, 519, 520, 537, 538,
	1152, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	1400, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 1401, 558, 559, 0, 556,
	1402, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	1403, 568, 640, 641, 642, 643, 1404, 577, 1405, 569,
	570, 571, 644, 572, 645, 1406, 573, 574, 575, 576,
	0, 578, 579, 1407, 1408, 580, 581, 582, 584, 585,
	583, 586, 1409, 587, 1410, 0, 588, 589, 590, 646,
	647, 648, 1411, 592, 591, 593, 649, 1412, 1413, 1414,
	1415, 594, 595, 650, 596, 597, 598, 2400, 0, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 2397, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 2398, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 2396, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 2399,
	0, 0, 0, 0, 0, 0, 1056, 2395, 0, 1018,
	1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 222, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 224, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 1544, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 216, 594, 595,
	650, 596, 597, 598, 1031, 0, 217, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 1782, 1780,
	0, 0, 1054, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 222, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 224, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 1544, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 216, 594, 595,
	650, 596, 597, 598, 1031, 0, 217, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 1782, 2993,
	0, 0, 1054, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 222, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 224, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 1544, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 216, 594, 595,
	650, 596, 597, 598, 1031, 0, 217, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 1782, 1780,
	0, 0, 1054, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 2528, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	2533, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 2529, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 2530, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 646, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1031, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 2445, 1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 0, 0, 0, 0, 0, 0, 0,
	1056, 2443, 0, 2442, 1054, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1097, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 1056, 2440, 0, 2439, 1054, 1072, 1044, 1045,
	1046, 1042, 1043, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 320, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	0, 0, 0, 0, 1056, 2437, 0, 2436, 1054, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 0,
	0, 0, 0, 0, 0, 0, 1056, 2434, 0, 1634,
	1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 646, 1117, 1154, 0,
	592, 591, 593, 649, 1633, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1031, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 1021, 1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 1035, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	1056, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	4334, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 1035, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	1056, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 2314, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 2313, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	1056, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 1035, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	1056, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	4106, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 1035, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	1056, 0, 0, 0, 1054, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 3746, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 1850, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 1054, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1097, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 3483, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 1056, 0, 0, 0, 1054, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1097, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 1850, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 0, 1054, 1072, 1044, 1045,
	1046, 1042, 1043, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 320, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 2533, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 1072, 1044, 1045,
	1046, 1042, 1043, 1055, 1056, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 320, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	0, 0, 0, 0, 1056, 1780, 0, 2538, 1054, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 2536,
	1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 646, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1031, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 2524, 1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 2513, 1054, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1097, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 2511, 1054, 2502, 2509, 1045,
	1046, 1042, 1043, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 2505, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	2506, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 2507, 417, 2504, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 2508, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 2503, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 2499, 1054, 2502,
	2509, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 2505, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 2506, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 2507, 417, 2504, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	2508, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	2503, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 0,
	0, 0, 0, 0, 1788, 0, 1056, 0, 0, 0,
	1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 2293, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 646, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1031, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 1639, 1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 1574, 1054, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1097, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 1569, 1054, 1072, 1044, 1045,
	1046, 1042, 1043, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 320, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 1560, 1054, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 1555,
	1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 1096, 1060, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 1109,
	0, 281, 1116, 282, 1115, 0, 1126, 283, 284, 285,
	286, 287, 288, 1062, 1095, 1029, 289, 1156, 1157, 607,
	0, 290, 291, 1102, 0, 1083, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 1086, 1084, 1085,
	1092, 1088, 1087, 1091, 316, 317, 318, 319, 1119, 320,
	1113, 1112, 1033, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 1104, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 1039, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 1127,
	1128, 350, 1051, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 1111, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 1124, 1125, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 1134, 0, 1061, 367,
	0, 368, 369, 370, 371, 372, 1097, 1098, 1101, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 1139, 382, 1106,
	1107, 0, 1067, 0, 384, 385, 1141, 1099, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 1135,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 1090, 1089, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 1030, 262,
	1148, 446, 447, 1052, 1100, 448, 1114, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 1129, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 1130,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 1110, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 1040,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	1093, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 1108, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 1155, 551, 552, 553, 554,
	1131, 557, 0, 558, 559, 1028, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 1120,
	1121, 1122, 1123, 0, 577, 0, 569, 570, 571, 1132,
	572, 1133, 1050, 573, 574, 575, 576, 0, 578, 579,
	0, 1034, 580, 581, 582, 584, 585, 583, 586, 1094,
	587, 0, 0, 588, 589, 590, 646, 1117, 1154, 0,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 1031, 0, 0, 0, 0, 0,
	0, 0, 1027, 0, 0, 0, 0, 0, 0, 1025,
	1026, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 1469, 1054, 1072, 1044, 1045, 1046, 1042, 1043, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1060, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 1109, 0, 281, 1116, 282, 1115, 0, 1126, 283,
	284, 285, 286, 287, 288, 1062, 1095, 1029, 289, 1156,
	1157, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	1119, 320, 1113, 1112, 1033, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 1104, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	1039, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 1051, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 1111, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 1124, 1125, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	1061, 367, 0, 368, 369, 370, 371, 372, 1468, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 1106, 1107, 0, 1067, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	1030, 262, 1148, 446, 447, 1052, 1100, 448, 1114, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 1110, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 1040, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 1108, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 1155, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 1028, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 1120, 1121, 1122, 1123, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 1050, 573, 574, 575, 576, 0,
	578, 579, 0, 1034, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 1117,
	1154, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1031, 0, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 0, 0,
	0, 1025, 1026, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 1463, 1054, 1072, 1044, 1045, 1046, 1042,
	1043, 1055, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 1096, 1060,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 1109, 0, 281, 1116, 282, 1115, 0,
	1126, 283, 284, 285, 286, 287, 288, 1062, 1095, 1029,
	289, 1156, 1157, 607, 0, 290, 291, 1102, 0, 1083,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317,
	318, 319, 1119, 320, 1113, 1112, 1033, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	1104, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 1039, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 1127, 1128, 350, 1051, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 1111, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 1124, 1125,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	1134, 0, 1061, 367, 0, 368, 369, 370, 371, 372,
	1462, 1098, 1101, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 1139, 382, 1106, 1107, 0, 1067, 0, 384, 385,
	1141, 1099, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 1135, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 1090, 1089, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 1030, 262, 1148, 446, 447, 1052, 1100, 448,
	1114, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	1129, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 1130, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 1110,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 1040, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 1093, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 1108, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 1155,
	551, 552, 553, 554, 1131, 557, 0, 558, 559, 1028,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 1120, 1121, 1122, 1123, 0, 577, 0,
	569, 570, 571, 1132, 572, 1133, 1050, 573, 574, 575,
	576, 0, 578, 579, 0, 1034, 580, 581, 582, 584,
	585, 583, 586, 1094, 587, 0, 0, 588, 589, 590,
	646, 1117, 1154, 0, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 1031, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 1025, 1026, 0, 0, 0, 0, 0,
	0, 0, 1056, 0, 0, 1456, 1054, 1072, 1044, 1045,
	1046, 1042, 1043, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	1096, 1060, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 1109, 0, 281, 1116, 282,
	1115, 0, 1126, 283, 284, 285, 286, 287, 288, 1062,
	1095, 1029, 289, 1156, 1157, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 1119, 320, 1113, 1112, 1033, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 1039, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 1051, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 1111, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1124, 1125, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 1061, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 1106, 1107, 0, 1067, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 1030, 262, 1148, 446, 447, 1052,
	1100, 448, 1114, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1110, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 1040, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1108, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1155, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 1028, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1120, 1121, 1122, 1123, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 1050, 573,
	574, 575, 576, 0, 578, 579, 0, 1034, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 1117, 1154, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1031, 0, 0, 0, 0, 0, 0, 0, 1027, 0,
	0, 0, 0, 0, 0, 1025, 1026, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 1281, 1054, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 4377, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 4376, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 4375, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 4377, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 4376, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 4053, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 4054, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 4052, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 2960, 2961, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 2958, 2959, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 1025, 1026, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1031, 0, 0, 0, 0, 0, 0, 0,
	1027, 0, 0, 0, 0, 0, 0, 2301, 2302, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 0, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	2521, 0, 0, 0, 0, 0, 0, 2519, 2520, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 0, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 1141, 1099, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 262, 1148, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 2953, 2954, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 2029, 1072,
	1044, 1045, 1046, 1042, 1043, 1055, 1056, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 1096, 1060, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 0, 1109, 0, 281,
	1116, 282, 1115, 0, 1126, 283, 284, 285, 286, 287,
	288, 1062, 1095, 1029, 289, 1156, 1157, 607, 0, 290,
	291, 1102, 0, 1083, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 4377, 1086, 1084, 1085, 1092, 1088,
	1087, 1091, 316, 317, 318, 319, 1119, 320, 1113, 1112,
	1033, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 1104, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 1039, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 1127, 1128, 350,
	1051, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	1111, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 1124, 1125, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 1134, 0, 1061, 367, 0, 368,
	369, 370, 371, 372, 1097, 1098, 1101, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 1139, 382, 1106, 1107, 0,
	1067, 0, 384, 385, 0, 1099, 0, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 1135, 1144, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	1090, 1089, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 1030, 262, 0, 446,
	447, 1052, 1100, 448, 1114, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 1129, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 1130, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 1110, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 1040, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1093, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 1108, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 1155, 551, 552, 553, 554, 1131, 557,
	0, 558, 559, 1028, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 1120, 1121, 1122,
	1123, 0, 577, 0, 569, 570, 571, 1132, 572, 1133,
	1050, 573, 574, 575, 576, 0, 4376, 579, 0, 1034,
	580, 581, 582, 584, 585, 583, 586, 1094, 587, 0,
	0, 588, 589, 590, 646, 1117, 1154, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1018, 0, 1194, 0, 0, 1025, 1026, 0,
	0, 0, 0, 0, 0, 0, 1056, 0, 0, 0,
	1054, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 1096, 0, 0,
	0, 0, 273, 274, 1136, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 1095, 0, 289,
	605, 606, 607, 0, 290, 291, 1102, 0, 1083, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1137, 314, 315,
	1086, 1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 1127, 1128, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1138, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 1134,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1097,
	1098, 1101, 449, 1140, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	1139, 382, 622, 623, 0, 624, 0, 384, 385, 1141,
	1099, 1142, 386, 387, 388, 1143, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 1180, 396, 398, 397,
	0, 399, 1135, 1144, 400, 401, 1145, 0, 402, 0,
	0, 0, 403, 404, 407, 1090, 1089, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1146, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1147,
	436, 0, 262, 1148, 446, 447, 0, 1100, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 1186, 454, 455,
	456, 0, 0, 457, 458, 629, 1149, 459, 1150, 1129,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 1130, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1151, 510, 511,
	512, 513, 636, 1188, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 222, 530, 531, 529,
	532, 533, 534, 1093, 535, 536, 519, 520, 537, 538,
	1152, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 1131, 557, 0, 558, 559, 0, 556,
	224, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 1132, 572, 1133, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 1094, 587, 0, 0, 588, 589, 590, 1544,
	647, 648, 0, 592, 591, 593, 649, 1194, 0, 0,
	216, 594, 595, 650, 596, 597, 598, 0, 0, 217,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 1184,
	1096, 1874, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	1095, 0, 289, 605, 606, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 622, 623, 0, 624, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1180,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 0, 262, 1148, 446, 447, 0,
	1100, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	1186, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 636, 1188, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 222,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 0, 556, 224, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 1544, 647, 648, 0, 592, 591, 593, 649,
	3137, 0, 1194, 216, 594, 595, 650, 596, 597, 598,
	0, 0, 217, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 1184, 0, 1874, 1096, 0, 0, 0, 0,
	273, 274, 1136, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 1095, 0, 289, 605, 606,
	607, 0, 290, 291, 1102, 0, 1083, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1137, 314, 315, 1086, 1084,
	1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	1127, 1128, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1138, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 1134, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1097, 1098, 1101,
	449, 1140, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 1139, 382,
	622, 623, 0, 624, 0, 384, 385, 1141, 1099, 1142,
	386, 387, 388, 1143, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 1180, 396, 398, 397, 0, 399,
	1135, 1144, 400, 401, 1145, 0, 402, 0, 0, 0,
	403, 404, 407, 1090, 1089, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1146, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1147, 436, 0,
	262, 1148, 446, 447, 0, 1100, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 1186, 454, 455, 456, 0,
	0, 457, 458, 629, 1149, 459, 1150, 1129, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	1130, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1151, 510, 511, 512, 513,
	636, 1188, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 1093, 535, 536, 519, 520, 537, 538, 1152, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 1131, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	1132, 572, 1133, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	1094, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1176, 0, 1194, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 1184, 0, 1182,
	1096, 0, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	1095, 0, 289, 605, 606, 607, 0, 290, 291, 1102,
	0, 1083, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 1127, 1128, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 1134, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1097, 1098, 1101, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 1139, 382, 622, 623, 0, 624, 0,
	384, 385, 1141, 1099, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 1180,
	396, 398, 397, 0, 399, 1135, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 1090, 1089,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 0, 262, 1148, 446, 447, 0,
	1100, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	1186, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 1129, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 1130, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 636, 1188, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 1093, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 1131, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 1132, 572, 1133, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 1094, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1194, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 1184, 1096, 1182, 0, 0, 0, 273, 274,
	1136, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 1095, 0, 289, 605, 606, 607, 0,
	290, 291, 1102, 0, 1083, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1137, 314, 315, 1086, 1084, 1085, 1092,
	1088, 1087, 1091, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 1127, 1128,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1138, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 1134, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1097, 1098, 1101, 449, 1140,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 1139, 382, 622, 623,
	0, 624, 0, 384, 385, 1141, 1099, 1142, 386, 387,
	388, 1143, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 1180, 396, 398, 397, 0, 399, 1135, 1144,
	400, 401, 1145, 0, 402, 0, 0, 0, 403, 404,
	407, 1090, 1089, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1146, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1147, 436, 0, 262, 1148,
	446, 447, 0, 1100, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 1186, 454, 455, 456, 0, 0, 457,
	458, 629, 1149, 459, 1150, 1129, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 1130, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1151, 510, 511, 512, 513, 636, 1188,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1093,
	535, 536, 519, 520, 537, 538, 1152, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 1131,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 1132, 572,
	1133, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 1094, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1194, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 1184, 1096, 1182, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 1095, 0, 289, 605,
	606, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 622, 623, 0, 624, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	0, 262, 1148, 446, 447, 0, 1100, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1194, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 1096,
	3898, 0, 0, 0, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 1095,
	0, 289, 605, 606, 607, 0, 290, 291, 1102, 0,
	1083, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1137,
	314, 315, 1086, 1084, 1085, 1092, 1088, 1087, 1091, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 1127, 1128, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 1134, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 1097, 1098, 1101, 449, 1140, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 1139, 382, 622, 623, 0, 624, 0, 384,
	385, 1141, 1099, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 1135, 1144, 400, 401, 1145, 0,
	402, 0, 0, 0, 403, 404, 407, 1090, 1089, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 0, 262, 1148, 446, 447, 0, 1100,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1149, 459,
	1150, 1129, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 1130, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 1188, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 1093, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 1131, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 1132, 572, 1133, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 1094, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 1018,
	0, 1274, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 1773, 599, 0, 0, 0, 0, 273,
	274, 1136, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 1279, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 1137, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 1138, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	1140, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 1139, 382, 622,
	623, 0, 624, 0, 384, 385, 1141, 625, 1142, 386,
	387, 388, 1143, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	1144, 400, 401, 1145, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 1146, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 1147, 436, 0, 0,
	1148, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 1149, 459, 1150, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 1151, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 222, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 1152, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 224, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 1544, 647, 648, 0,
	592, 591, 593, 649, 1541, 0, 1274, 216, 594, 595,
	650, 596, 597, 598, 0, 0, 217, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 182, 599,
	0, 0, 0, 0, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1279, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1137,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1140, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1139, 382, 622, 623, 0, 624, 0, 384,
	385, 1141, 625, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1144, 400, 401, 1145, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 0, 0, 1148, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1149, 459,
	1150, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 222, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 224, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 1544, 647, 648, 0, 592, 591, 593, 649, 0,
	0, 0, 216, 594, 595, 650, 596, 597, 598, 0,
	0, 217, 0, 0, 0, 0, 0, 1274, 1273, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 1279, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 1139, 382, 622, 623, 0, 624, 0,
	384, 385, 1141, 625, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 0, 0, 1148, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 1149,
	459, 1150, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 1273,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 1136, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 1279, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1137, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1138, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1140, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1139, 382, 622, 623, 0, 624,
	0, 384, 385, 1141, 625, 1142, 386, 387, 388, 1143,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 1144, 400, 401,
	1145, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1146, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1147, 436, 0, 0, 1148, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1149, 459, 1150, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1151, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1152, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	2118, 0, 0, 0, 0, 2119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3407, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1279, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1139, 382, 622, 623, 0,
	624, 0, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 2117, 398, 397, 0, 399, 626, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 0, 1148, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 1273, 0, 0, 0, 0, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1136, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1279, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1137, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1138, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1140,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1139, 382, 622, 623,
	0, 624, 0, 384, 385, 1141, 625, 1142, 386, 387,
	388, 1143, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1144,
	400, 401, 1145, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1146, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1147, 436, 0, 0, 1148,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1149, 459, 1150, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1151, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 1152, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1194, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 1096, 1550, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 1095, 0, 289, 605,
	606, 607, 0, 290, 291, 1102, 0, 1083, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 1086,
	1084, 1085, 1092, 1088, 1087, 1091, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 1127, 1128, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 1134, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1097, 1098,
	1101, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 1139,
	382, 622, 623, 0, 624, 0, 384, 385, 1141, 1099,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 1135, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 1090, 1089, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	0, 262, 1148, 446, 447, 0, 1100, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 1129, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 1130, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 1093, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 1131, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 1132, 572, 1133, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 1094, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 1018, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	222, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 224, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 1544, 647, 648, 0, 592, 591, 593,
	649, 257, 0, 0, 216, 594, 595, 650, 596, 597,
	598, 0, 0, 217, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 182, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 262,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 257, 2872, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 1888, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 257, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 4526, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 3358, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	1538, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 257, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	2860, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 257,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 3508, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 861, 0, 769, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 2192, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 776,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 859, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	774, 560, 561, 562, 563, 564, 775, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 767, 0, 769,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 779, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 776, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 774, 560, 561, 562, 563,
	564, 775, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 1925, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 779,
	0, 0, 0, 0, 0, 273, 274, 1136, 275, 276,
	277, 278, 279, 280, 0, 1931, 0, 281, 1921, 282,
	1937, 0, 1944, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 1947, 1948, 0, 0, 290, 291, 0,
	0, 1279, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	1137, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 1119, 320, 1935, 1934, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 1104, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 0, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 1933, 0,
	0, 0, 354, 0, 355, 0, 0, 1138, 356, 357,
	1942, 1943, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 0, 0, 0, 367, 0, 368, 369, 370,
	371, 372, 0, 0, 0, 449, 1140, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 1139, 382, 1928, 1929, 0, 1924, 0,
	384, 385, 1141, 0, 1142, 386, 387, 388, 1143, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 0, 1144, 400, 401, 1145,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 1146,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 1147, 436, 0, 0, 1148, 446, 447, 0,
	0, 448, 1936, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 0, 1149,
	459, 1150, 0, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 1918, 472, 473,
	474, 1919, 475, 476, 477, 0, 478, 0, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 1932, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	1151, 510, 511, 512, 513, 0, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 1152, 539, 540, 541, 542, 543, 544,
	1930, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 1946, 551, 552, 553, 554, 0, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 1938, 1939, 1940, 1941, 0,
	577, 0, 569, 570, 571, 0, 572, 0, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 0, 1922, 1945, 0, 592, 591, 593, 0,
	0, 769, 0, 0, 594, 595, 0, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 1912, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 776, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 262,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 774, 560, 561,
	562, 563, 564, 775, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 769,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 779, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 776, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 2232, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 2233, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 774, 560, 561, 562, 563,
	564, 775, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 2234, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1994, 0, 1274, 1961, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 779,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 1136, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1279, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1137, 314, 315,
	0, 0, 0, 0, 0, 0, 1958, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1138, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 1140, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1139, 382, 622, 623, 0, 624, 0, 384, 385, 1141,
	625, 1142, 386, 387, 388, 1143, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1144, 400, 401, 1145, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1146, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1147,
	436, 0, 0, 1148, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1149, 459, 1150, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1151, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 1959, 535, 536, 519, 520, 537, 538,
	1152, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1955, 0, 1274,
	1961, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1279, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 0, 0, 0, 0, 0,
	0, 1958, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1139, 382, 622, 623, 0,
	624, 0, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 0, 1148, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 1959, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 769, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 776, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 1951, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 774, 560, 561, 562, 563, 564, 775,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 1950, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 769, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 779, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	776, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 1904, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 774, 560, 561, 562, 563, 564, 775, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 1903,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 0, 0,
	1274, 1961, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 779, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	1136, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 1279, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 1137, 314, 315, 0, 0, 0, 0,
	0, 0, 1958, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	1138, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 1140,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 1139, 382, 622, 623,
	0, 624, 0, 384, 385, 1141, 625, 1142, 386, 387,
	388, 1143, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 1144,
	400, 401, 1145, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 1146, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 1147, 436, 0, 0, 1148,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 1149, 459, 1150, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 1151, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 1959,
	535, 536, 519, 520, 537, 538, 1152, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 1274, 1273, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 1136, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 1279, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 1137, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 1138, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 1140, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 1139,
	382, 622, 623, 0, 624, 0, 384, 385, 1141, 625,
	1142, 386, 387, 388, 1143, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 1144, 400, 401, 1145, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 1146, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 1147, 436,
	0, 0, 1148, 446, 447, 3692, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 1149, 459, 1150, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 1151, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 1152,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 1274, 1273, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1279, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1137,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1140, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1139, 382, 622, 623, 0, 624, 0, 384,
	385, 1141, 625, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1144, 400, 401, 1145, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 0, 0, 1148, 446, 447, 3330, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1149, 459,
	1150, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1594, 0, 1274,
	1273, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 779, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1279, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 1593, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1139, 382, 622, 623, 0,
	624, 0, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 0, 1148, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 1592, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 1591, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1513, 0, 1274, 1273, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 1136, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1279, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1137, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1138, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1512,
	620, 621, 449, 1140, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1139, 382, 622, 623, 0, 624, 0, 384, 385, 1141,
	625, 1142, 386, 387, 388, 1143, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1144, 400, 401, 1145, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1146, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1147,
	436, 0, 0, 1148, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1149, 459, 1150, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1151, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	1152, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1474, 0, 1274,
	1273, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1279, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1139, 382, 622, 623, 0,
	624, 0, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 0, 1148, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1442, 0, 1274, 1273, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 1136, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 1279, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 1137, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 1138, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1441,
	620, 621, 449, 1140, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	1139, 382, 622, 623, 0, 624, 0, 384, 385, 1141,
	625, 1142, 386, 387, 388, 1143, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 1144, 400, 401, 1145, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 1146, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 1147,
	436, 0, 0, 1148, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 1149, 459, 1150, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 1151, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	1152, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 1268, 0, 1274,
	1273, 0, 0, 0, 0, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1136,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 1279, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 1137, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 1138,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1267, 620, 621, 449, 1140, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 1139, 382, 622, 623, 0,
	624, 0, 384, 385, 1141, 625, 1142, 386, 387, 388,
	1143, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 1144, 400,
	401, 1145, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 1146, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 1147, 436, 0, 0, 1148, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 1149, 459, 1150, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 1151, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 1152, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 1274, 1273, 0, 0, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 1136, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 1279, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 1137, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 1138, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 1140, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 1139, 382,
	622, 623, 0, 624, 0, 384, 385, 1141, 625, 1142,
	386, 387, 388, 1143, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 1144, 400, 401, 1145, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 1146, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 1147, 436, 0,
	0, 1148, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 1149, 459, 1150, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 1151, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 1152, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1274, 1961, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 1136, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 1279,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 1137, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 2001, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 1138, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 1140, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 1139, 382, 622, 623, 0, 624, 0, 384, 385,
	1141, 625, 1142, 386, 387, 388, 1143, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 1144, 400, 401, 1145, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 1146, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	1147, 436, 0, 0, 1148, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 1149, 459, 1150,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 1151, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 1152, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1274, 1273,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 1136, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 1279, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 1137, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 1138, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 1140, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 1139, 382, 622, 623, 0, 624,
	0, 384, 385, 1141, 625, 1142, 386, 387, 388, 1143,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 1144, 400, 401,
	1145, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	1146, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 1147, 436, 0, 0, 1148, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	1149, 459, 1150, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 1151, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 1152, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 1274, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 1136, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	1279, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 1137,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 1138, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 1140, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 1139, 382, 622, 623, 0, 624, 0, 384,
	385, 1141, 625, 1142, 386, 387, 388, 1143, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 1144, 400, 401, 1145, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 1146, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 1147, 436, 0, 0, 1148, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 1149, 459,
	1150, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 1151,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 1152, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 2686, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 2683, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 2690,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 2885, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 2689, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 2882, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 2884, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 2881, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 2688, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 2883, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 257, 592, 591, 593, 649, 0, 0, 0,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 2686, 290, 291, 608, 0, 0, 2680, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 2683, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 2690, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	2689, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 2679, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 2688, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 2687, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1661, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	1664, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 1662, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 1663, 591, 593, 649,
	1420, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1422, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 1186, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 1417, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 1419, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	1186, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	1325, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 260, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 1327, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 261, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	262, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 1186, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 682, 0, 257, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 265, 264, 266, 681, 268,
	269, 270, 671, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 674, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	675, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 676,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	670, 0, 257, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 671, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 674, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 675, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 676, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 260, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	261, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 262, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 1186, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 3289, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 0, 592, 591, 593,
	649, 2831, 0, 257, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 2830, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 262, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 2205, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	260, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 261, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 262, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 262, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 2150, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 2156,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 2155, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 262,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 2143, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 260, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 2145, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 261, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 262, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 2114,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 1186, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1516, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1437, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1430, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1432, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1258, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1257,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1248, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1247, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 1245, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 1244,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 1240, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 1239, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 652, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 260, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 261, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 262, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 0, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 248, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 674, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 675, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 676, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 2241, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 262, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 2239, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 260, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 261, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 262,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 2237, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 260, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 261,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 262, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 260,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 2162, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 261, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 262, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 260, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1980, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 261, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 262, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 260, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 1974, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 261, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 262, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 0, 592, 591, 593, 649, 848, 0, 257, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 0, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	847, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 846, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 2885, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 3959,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 257, 592, 591, 593, 649, 0,
	0, 0, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 3625, 274, 0, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 607, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 431, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 3626,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 3628, 514, 0, 515, 516, 522, 523, 517,
	518, 524, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 533, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 640, 641, 642, 643, 3624, 577, 0, 569,
	570, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 739, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 1295,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 1293, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	740, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 736, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 1296, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 735, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 739, 0, 257, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 265, 264, 266, 267, 268, 269, 270, 0,
	271, 272, 0, 0, 0, 0, 0, 599, 0, 0,
	0, 0, 273, 274, 1295, 275, 276, 277, 278, 279,
	280, 600, 601, 0, 281, 602, 282, 603, 0, 604,
	283, 284, 285, 286, 287, 288, 0, 0, 0, 289,
	605, 606, 1293, 0, 290, 291, 608, 0, 0, 0,
	292, 293, 294, 295, 296, 297, 298, 0, 0, 300,
	301, 302, 299, 303, 0, 304, 0, 305, 306, 307,
	308, 309, 310, 0, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 316, 317, 318,
	319, 0, 320, 609, 610, 0, 324, 321, 322, 0,
	325, 323, 0, 326, 327, 328, 0, 0, 329, 330,
	331, 0, 332, 333, 0, 334, 335, 336, 0, 337,
	338, 611, 339, 340, 341, 343, 345, 342, 346, 347,
	348, 349, 612, 613, 350, 0, 0, 0, 0, 0,
	0, 0, 351, 352, 353, 614, 0, 0, 0, 354,
	0, 355, 0, 0, 0, 356, 357, 615, 616, 358,
	359, 360, 361, 362, 363, 364, 365, 0, 366, 617,
	0, 618, 367, 0, 368, 369, 370, 371, 372, 619,
	620, 621, 449, 0, 373, 374, 0, 375, 376, 377,
	378, 0, 0, 0, 0, 379, 380, 381, 383, 0,
	0, 382, 622, 623, 0, 624, 0, 384, 385, 0,
	625, 0, 386, 387, 388, 0, 389, 0, 0, 0,
	390, 391, 392, 393, 394, 395, 0, 396, 398, 397,
	0, 399, 626, 0, 400, 401, 0, 0, 402, 0,
	0, 0, 403, 404, 407, 0, 0, 405, 406, 408,
	409, 0, 410, 411, 413, 416, 412, 414, 415, 417,
	430, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 432, 0, 740, 0, 433, 434, 435,
	440, 442, 443, 438, 439, 441, 444, 445, 437, 0,
	436, 0, 0, 0, 446, 447, 0, 627, 448, 628,
	450, 451, 0, 0, 452, 0, 0, 0, 454, 455,
	456, 0, 0, 457, 458, 629, 0, 459, 0, 630,
	460, 461, 453, 462, 463, 464, 465, 466, 467, 468,
	469, 0, 470, 471, 631, 472, 473, 474, 632, 475,
	476, 477, 633, 478, 634, 479, 480, 0, 481, 482,
	0, 483, 484, 485, 486, 487, 488, 489, 635, 490,
	492, 491, 493, 0, 494, 0, 495, 496, 497, 0,
	0, 0, 0, 498, 0, 500, 501, 502, 499, 503,
	504, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 513, 636, 514, 0, 515, 516, 522, 523, 517,
	518, 736, 525, 526, 527, 528, 0, 530, 531, 529,
	532, 1296, 534, 0, 535, 536, 519, 520, 537, 538,
	0, 539, 540, 541, 542, 543, 544, 637, 0, 545,
	0, 546, 547, 548, 549, 521, 550, 555, 638, 551,
	552, 553, 554, 639, 557, 0, 558, 559, 0, 556,
	0, 560, 561, 562, 563, 564, 565, 566, 344, 567,
	0, 568, 735, 641, 642, 643, 0, 577, 0, 569,
	1294, 571, 644, 572, 645, 0, 573, 574, 575, 576,
	0, 578, 579, 0, 0, 580, 581, 582, 584, 585,
	583, 586, 0, 587, 0, 0, 588, 589, 590, 646,
	647, 648, 0, 592, 591, 593, 649, 661, 0, 257,
	0, 594, 595, 650, 596, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 660, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	659, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 257, 2872, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 456, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	0, 592, 591, 593, 649, 257, 3969, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 3870, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 3665, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 2572, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 0, 592, 591,
	593, 649, 257, 2872, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 263,
	265, 264, 266, 267, 268, 269, 270, 0, 271, 272,
	0, 0, 0, 0, 0, 599, 0, 0, 0, 0,
	273, 274, 0, 275, 276, 277, 278, 279, 280, 600,
	601, 0, 281, 602, 282, 603, 0, 604, 283, 284,
	285, 286, 287, 288, 0, 0, 0, 289, 605, 606,
	607, 0, 290, 291, 608, 0, 0, 0, 292, 293,
	294, 295, 296, 297, 298, 0, 0, 300, 301, 302,
	299, 303, 0, 304, 0, 305, 306, 307, 308, 309,
	310, 0, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 316, 317, 318, 319, 0,
	320, 609, 610, 0, 324, 321, 322, 0, 325, 323,
	0, 326, 327, 328, 0, 0, 329, 330, 331, 0,
	332, 333, 0, 334, 335, 336, 0, 337, 338, 611,
	339, 340, 341, 343, 345, 342, 346, 347, 348, 349,
	612, 613, 350, 0, 0, 0, 0, 0, 0, 0,
	351, 352, 353, 614, 0, 0, 0, 354, 0, 355,
	0, 0, 0, 356, 357, 615, 616, 358, 359, 360,
	361, 362, 363, 364, 365, 0, 366, 617, 0, 618,
	367, 0, 368, 369, 370, 371, 372, 619, 620, 621,
	449, 0, 373, 374, 0, 375, 376, 377, 378, 0,
	0, 0, 0, 379, 380, 381, 383, 0, 0, 382,
	622, 623, 0, 624, 0, 384, 385, 0, 625, 0,
	386, 387, 388, 0, 389, 0, 0, 0, 390, 391,
	392, 393, 394, 395, 0, 396, 398, 397, 0, 399,
	626, 0, 400, 401, 0, 0, 402, 0, 0, 0,
	403, 404, 407, 0, 0, 405, 406, 408, 409, 0,
	410, 411, 413, 416, 412, 414, 415, 417, 430, 418,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 432, 0, 431, 0, 433, 434, 435, 440, 442,
	443, 438, 439, 441, 444, 445, 437, 0, 436, 0,
	0, 0, 446, 447, 0, 627, 448, 628, 450, 451,
	0, 0, 452, 0, 0, 0, 454, 455, 2869, 0,
	0, 457, 458, 629, 0, 459, 0, 630, 460, 461,
	453, 462, 463, 464, 465, 466, 467, 468, 469, 0,
	470, 471, 631, 472, 473, 474, 632, 475, 476, 477,
	633, 478, 634, 479, 480, 0, 481, 482, 0, 483,
	484, 485, 486, 487, 488, 489, 635, 490, 492, 491,
	493, 0, 494, 0, 495, 496, 497, 0, 0, 0,
	0, 498, 0, 500, 501, 502, 499, 503, 504, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 513,
	636, 514, 0, 515, 516, 522, 523, 517, 518, 524,
	525, 526, 527, 528, 0, 530, 531, 529, 532, 533,
	534, 0, 535, 536, 519, 520, 537, 538, 0, 539,
	540, 541, 542, 543, 544, 637, 0, 545, 0, 546,
	547, 548, 549, 521, 550, 555, 638, 551, 552, 553,
	554, 639, 557, 0, 558, 559, 0, 556, 0, 560,
	561, 562, 563, 564, 565, 566, 344, 567, 0, 568,
	640, 641, 642, 643, 0, 577, 0, 569, 570, 571,
	644, 572, 645, 0, 573, 574, 575, 576, 0, 578,
	579, 0, 0, 580, 581, 582, 584, 585, 583, 586,
	0, 587, 0, 0, 588, 589, 590, 646, 647, 648,
	257, 592, 591, 593, 649, 0, 0, 0, 0, 594,
	595, 650, 596, 597, 598, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 2215, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 2203, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 739, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 729, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 740, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 736, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 1549, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 735, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1522, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1521, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1507, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1505, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1501, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1478, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1476, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1439, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1425, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 619, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 0, 592,
	591, 593, 649, 1263, 0, 257, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	1262, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 0, 592, 591, 593, 649, 1254, 0,
	257, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 265, 264,
	266, 267, 268, 269, 270, 0, 271, 272, 0, 0,
	0, 0, 0, 599, 0, 0, 0, 0, 273, 274,
	0, 275, 276, 277, 278, 279, 280, 600, 601, 0,
	281, 602, 282, 603, 0, 604, 283, 284, 285, 286,
	287, 288, 0, 0, 0, 289, 605, 606, 607, 0,
	290, 291, 608, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 298, 0, 0, 300, 301, 302, 299, 303,
	0, 304, 0, 305, 306, 307, 308, 309, 310, 0,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 316, 317, 318, 319, 0, 320, 609,
	610, 0, 324, 321, 322, 0, 325, 323, 0, 326,
	327, 328, 0, 0, 329, 330, 331, 0, 332, 333,
	0, 334, 335, 336, 0, 337, 338, 611, 339, 340,
	341, 343, 345, 342, 346, 347, 348, 349, 612, 613,
	350, 0, 0, 0, 0, 0, 0, 0, 351, 352,
	353, 614, 0, 0, 0, 354, 0, 355, 0, 0,
	0, 356, 357, 615, 616, 358, 359, 360, 361, 362,
	363, 364, 365, 0, 366, 617, 0, 618, 367, 0,
	368, 369, 370, 371, 372, 1253, 620, 621, 449, 0,
	373, 374, 0, 375, 376, 377, 378, 0, 0, 0,
	0, 379, 380, 381, 383, 0, 0, 382, 622, 623,
	0, 624, 0, 384, 385, 0, 625, 0, 386, 387,
	388, 0, 389, 0, 0, 0, 390, 391, 392, 393,
	394, 395, 0, 396, 398, 397, 0, 399, 626, 0,
	400, 401, 0, 0, 402, 0, 0, 0, 403, 404,
	407, 0, 0, 405, 406, 408, 409, 0, 410, 411,
	413, 416, 412, 414, 415, 417, 430, 418, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 432,
	0, 431, 0, 433, 434, 435, 440, 442, 443, 438,
	439, 441, 444, 445, 437, 0, 436, 0, 0, 0,
	446, 447, 0, 627, 448, 628, 450, 451, 0, 0,
	452, 0, 0, 0, 454, 455, 456, 0, 0, 457,
	458, 629, 0, 459, 0, 630, 460, 461, 453, 462,
	463, 464, 465, 466, 467, 468, 469, 0, 470, 471,
	631, 472, 473, 474, 632, 475, 476, 477, 633, 478,
	634, 479, 480, 0, 481, 482, 0, 483, 484, 485,
	486, 487, 488, 489, 635, 490, 492, 491, 493, 0,
	494, 0, 495, 496, 497, 0, 0, 0, 0, 498,
	0, 500, 501, 502, 499, 503, 504, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 513, 636, 514,
	0, 515, 516, 522, 523, 517, 518, 524, 525, 526,
	527, 528, 0, 530, 531, 529, 532, 533, 534, 0,
	535, 536, 519, 520, 537, 538, 0, 539, 540, 541,
	542, 543, 544, 637, 0, 545, 0, 546, 547, 548,
	549, 521, 550, 555, 638, 551, 552, 553, 554, 639,
	557, 0, 558, 559, 0, 556, 0, 560, 561, 562,
	563, 564, 565, 566, 344, 567, 0, 568, 640, 641,
	642, 643, 0, 577, 0, 569, 570, 571, 644, 572,
	645, 0, 573, 574, 575, 576, 0, 578, 579, 0,
	0, 580, 581, 582, 584, 585, 583, 586, 0, 587,
	0, 0, 588, 589, 590, 646, 647, 648, 257, 592,
	591, 593, 649, 0, 0, 0, 0, 594, 595, 650,
	596, 597, 598, 0, 0, 263, 265, 264, 266, 267,
	268, 269, 270, 1207, 271, 272, 0, 0, 0, 0,
	0, 599, 0, 0, 0, 0, 273, 274, 0, 275,
	276, 277, 278, 279, 280, 600, 601, 0, 281, 602,
	282, 603, 0, 604, 283, 284, 285, 286, 287, 288,
	0, 0, 0, 289, 605, 606, 607, 0, 290, 291,
	608, 0, 0, 0, 292, 293, 294, 295, 296, 297,
	298, 0, 0, 300, 301, 302, 299, 303, 0, 304,
	0, 305, 306, 307, 308, 309, 310, 0, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 316, 317, 318, 319, 0, 320, 609, 610, 0,
	324, 321, 322, 0, 325, 323, 0, 326, 327, 328,
	0, 0, 329, 330, 331, 0, 332, 333, 0, 334,
	335, 336, 0, 337, 338, 611, 339, 340, 341, 343,
	345, 342, 346, 347, 348, 349, 612, 613, 350, 0,
	0, 0, 0, 0, 0, 0, 351, 352, 353, 614,
	0, 0, 0, 354, 0, 355, 0, 0, 0, 356,
	357, 615, 616, 358, 359, 360, 361, 362, 363, 364,
	365, 0, 366, 617, 0, 618, 367, 0, 368, 369,
	370, 371, 372, 619, 620, 621, 449, 0, 373, 374,
	0, 375, 376, 377, 378, 0, 0, 0, 0, 379,
	380, 381, 383, 0, 0, 382, 622, 623, 0, 624,
	0, 384, 385, 0, 625, 0, 386, 387, 388, 0,
	389, 0, 0, 0, 390, 391, 392, 393, 394, 395,
	0, 396, 398, 397, 0, 399, 626, 0, 400, 401,
	0, 0, 402, 0, 0, 0, 403, 404, 407, 0,
	0, 405, 406, 408, 409, 0, 410, 411, 413, 416,
	412, 414, 415, 417, 430, 418, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 432, 0, 431,
	0, 433, 434, 435, 440, 442, 443, 438, 439, 441,
	444, 445, 437, 0, 436, 0, 0, 0, 446, 447,
	0, 627, 448, 628, 450, 451, 0, 0, 452, 0,
	0, 0, 454, 455, 456, 0, 0, 457, 458, 629,
	0, 459, 0, 630, 460, 461, 453, 462, 463, 464,
	465, 466, 467, 468, 469, 0, 470, 471, 631, 472,
	473, 474, 632, 475, 476, 477, 633, 478, 634, 479,
	480, 0, 481, 482, 0, 483, 484, 485, 486, 487,
	488, 489, 635, 490, 492, 491, 493, 0, 494, 0,
	495, 496, 497, 0, 0, 0, 0, 498, 0, 500,
	501, 502, 499, 503, 504, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 513, 636, 514, 0, 515,
	516, 522, 523, 517, 518, 524, 525, 526, 527, 528,
	0, 530, 531, 529, 532, 533, 534, 0, 535, 536,
	519, 520, 537, 538, 0, 539, 540, 541, 542, 543,
	544, 637, 0, 545, 0, 546, 547, 548, 549, 521,
	550, 555, 638, 551, 552, 553, 554, 639, 557, 0,
	558, 559, 0, 556, 0, 560, 561, 562, 563, 564,
	565, 566, 344, 567, 0, 568, 640, 641, 642, 643,
	0, 577, 0, 569, 570, 571, 644, 572, 645, 0,
	573, 574, 575, 576, 0, 578, 579, 0, 0, 580,
	581, 582, 584, 585, 583, 586, 0, 587, 0, 0,
	588, 589, 590, 646, 647, 648, 257, 592, 591, 593,
	649, 0, 0, 0, 0, 594, 595, 650, 596, 597,
	598, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 745, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 739,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 729, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 727, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	728, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 740, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 730,
	514, 0, 515, 516, 522, 523, 517, 518, 736, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 731, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 735,
	641, 642, 643, 0, 577, 0, 569, 733, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 721, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 722,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 684,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 0,
	592, 591, 593, 649, 678, 0, 257, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 265, 264, 266, 267, 268, 269,
	270, 0, 271, 272, 0, 0, 0, 0, 0, 599,
	0, 0, 0, 0, 273, 274, 0, 275, 276, 277,
	278, 279, 280, 600, 601, 0, 281, 602, 282, 603,
	0, 604, 283, 284, 285, 286, 287, 288, 0, 0,
	0, 289, 605, 606, 607, 0, 290, 291, 608, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 298, 0,
	0, 300, 301, 302, 299, 303, 0, 304, 0, 305,
	306, 307, 308, 309, 310, 0, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 316,
	317, 318, 319, 0, 320, 609, 610, 0, 324, 321,
	322, 0, 325, 323, 0, 326, 327, 328, 0, 0,
	329, 330, 331, 0, 332, 333, 0, 334, 335, 336,
	0, 337, 338, 611, 339, 340, 341, 343, 345, 342,
	346, 347, 348, 349, 612, 613, 350, 0, 0, 0,
	0, 0, 0, 0, 351, 352, 353, 614, 0, 0,
	0, 354, 0, 355, 0, 0, 0, 356, 357, 615,
	616, 358, 359, 360, 361, 362, 363, 364, 365, 0,
	366, 617, 0, 618, 367, 0, 368, 369, 370, 371,
	372, 619, 620, 621, 449, 0, 373, 374, 0, 375,
	376, 377, 378, 0, 0, 0, 0, 379, 380, 381,
	383, 0, 0, 382, 622, 623, 0, 624, 0, 384,
	385, 0, 625, 0, 386, 387, 388, 0, 389, 0,
	0, 0, 390, 391, 392, 393, 394, 395, 0, 396,
	398, 397, 0, 399, 626, 0, 400, 401, 0, 0,
	402, 0, 0, 0, 403, 404, 407, 0, 0, 405,
	406, 408, 409, 0, 410, 411, 413, 416, 412, 414,
	415, 417, 430, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 432, 0, 431, 0, 433,
	434, 435, 440, 442, 443, 438, 439, 441, 444, 445,
	437, 0, 436, 0, 0, 0, 446, 447, 0, 627,
	448, 628, 450, 451, 0, 0, 452, 0, 0, 0,
	454, 455, 456, 0, 0, 457, 458, 629, 0, 459,
	0, 630, 460, 461, 453, 462, 463, 464, 465, 466,
	467, 468, 469, 0, 470, 471, 631, 472, 473, 474,
	632, 475, 476, 477, 633, 478, 634, 479, 480, 0,
	481, 482, 0, 483, 484, 485, 486, 487, 488, 489,
	635, 490, 492, 491, 493, 0, 494, 0, 495, 496,
	497, 0, 0, 0, 0, 498, 0, 500, 501, 502,
	499, 503, 504, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 513, 636, 514, 0, 515, 516, 522,
	523, 517, 518, 524, 525, 526, 527, 528, 0, 530,
	531, 529, 532, 533, 534, 0, 535, 536, 519, 520,
	537, 538, 0, 539, 540, 541, 542, 543, 544, 637,
	0, 545, 0, 546, 547, 548, 549, 521, 550, 555,
	638, 551, 552, 553, 554, 639, 557, 0, 558, 559,
	0, 556, 0, 560, 561, 562, 563, 564, 565, 566,
	344, 567, 0, 568, 640, 641, 642, 643, 0, 577,
	0, 569, 570, 571, 644, 572, 645, 0, 573, 574,
	575, 576, 0, 578, 579, 0, 0, 580, 581, 582,
	584, 585, 583, 586, 0, 587, 0, 0, 588, 589,
	590, 646, 647, 648, 0, 592, 591, 593, 649, 656,
	0, 257, 0, 594, 595, 650, 596, 597, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 619, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 3376, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	3324, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 522, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 0, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 3259, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 535, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 3257, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 3242, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 492, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 367, 0, 368, 369, 370,
	371, 372, 2840, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 464, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 487, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 514, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 257, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	0, 0, 263, 265, 264, 266, 267, 268, 269, 270,
	0, 271, 272, 0, 0, 0, 0, 0, 599, 0,
	0, 0, 0, 273, 274, 0, 275, 276, 277, 278,
	279, 280, 600, 601, 0, 281, 602, 282, 603, 0,
	604, 283, 284, 285, 286, 287, 288, 0, 0, 0,
	289, 605, 606, 607, 0, 290, 291, 608, 0, 0,
	0, 292, 293, 294, 295, 296, 297, 298, 0, 0,
	300, 301, 302, 299, 303, 0, 304, 0, 305, 306,
	307, 308, 309, 310, 0, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 0, 0, 316, 317,
	318, 319, 0, 320, 609, 610, 0, 324, 321, 322,
	0, 325, 323, 0, 326, 327, 328, 0, 0, 329,
	330, 331, 0, 332, 333, 0, 334, 335, 336, 0,
	337, 338, 611, 339, 340, 341, 343, 345, 342, 346,
	347, 348, 349, 612, 613, 350, 0, 0, 0, 0,
	0, 0, 0, 351, 352, 353, 614, 0, 0, 0,
	354, 0, 355, 0, 0, 0, 356, 357, 615, 616,
	358, 359, 360, 361, 362, 363, 364, 365, 0, 366,
	617, 0, 618, 367, 0, 368, 369, 370, 371, 372,
	619, 620, 621, 449, 0, 373, 374, 0, 375, 376,
	377, 378, 0, 0, 0, 0, 379, 380, 381, 383,
	0, 0, 382, 622, 623, 0, 624, 0, 384, 385,
	0, 625, 0, 386, 387, 388, 0, 389, 0, 0,
	0, 390, 391, 392, 393, 394, 395, 0, 396, 398,
	397, 0, 399, 626, 0, 400, 401, 0, 0, 402,
	0, 0, 0, 403, 404, 407, 0, 0, 405, 406,
	408, 409, 0, 410, 411, 413, 416, 412, 414, 415,
	417, 430, 418, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 432, 0, 431, 0, 433, 434,
	435, 440, 442, 443, 438, 439, 441, 444, 445, 437,
	0, 436, 0, 0, 0, 446, 447, 0, 627, 448,
	628, 450, 451, 0, 0, 452, 0, 0, 0, 454,
	455, 456, 0, 0, 457, 458, 629, 0, 459, 0,
	630, 460, 461, 453, 462, 463, 464, 465, 466, 467,
	468, 469, 0, 470, 471, 631, 472, 473, 474, 632,
	475, 476, 477, 633, 478, 634, 479, 480, 0, 481,
	482, 0, 483, 484, 485, 486, 487, 488, 489, 635,
	490, 492, 491, 493, 0, 494, 0, 495, 496, 497,
	0, 0, 0, 0, 498, 0, 500, 501, 502, 499,
	503, 504, 505, 506, 0, 507, 508, 509, 0, 510,
	511, 512, 513, 636, 514, 0, 515, 516, 722, 523,
	517, 518, 524, 525, 526, 527, 528, 0, 530, 531,
	529, 532, 533, 534, 0, 535, 536, 519, 520, 537,
	538, 0, 539, 540, 541, 542, 543, 544, 637, 0,
	545, 0, 546, 547, 548, 549, 521, 550, 555, 638,
	551, 552, 553, 554, 639, 557, 0, 558, 559, 0,
	556, 0, 560, 561, 562, 563, 564, 565, 566, 344,
	567, 0, 568, 640, 641, 642, 643, 0, 577, 0,
	569, 570, 571, 644, 572, 645, 0, 573, 574, 575,
	576, 0, 578, 579, 0, 0, 580, 581, 582, 584,
	585, 583, 586, 0, 587, 0, 0, 588, 589, 590,
	646, 647, 648, 257, 592, 591, 593, 649, 0, 0,
	0, 0, 594, 595, 650, 596, 597, 598, 0, 0,
	263, 265, 264, 266, 267, 268, 269, 270, 0, 271,
	272, 0, 0, 0, 0, 0, 599, 0, 2179, 0,
	0, 273, 274, 0, 275, 276, 277, 278, 279, 280,
	600, 601, 0, 281, 602, 282, 603, 0, 604, 283,
	284, 285, 286, 287, 288, 0, 0, 0, 289, 605,
	606, 607, 0, 290, 291, 608, 0, 0, 0, 292,
	293, 294, 295, 296, 297, 298, 0, 0, 300, 301,
	302, 299, 303, 0, 304, 0, 305, 306, 307, 308,
	309, 310, 0, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 0, 0, 316, 317, 318, 319,
	0, 320, 609, 610, 0, 324, 321, 322, 0, 325,
	323, 0, 326, 327, 328, 0, 0, 329, 330, 331,
	0, 332, 333, 0, 334, 335, 336, 0, 337, 338,
	611, 339, 340, 341, 343, 345, 342, 346, 347, 348,
	349, 612, 613, 350, 0, 0, 0, 0, 0, 0,
	0, 351, 352, 353, 614, 0, 0, 0, 354, 0,
	355, 0, 0, 0, 356, 357, 615, 616, 358, 359,
	360, 361, 362, 363, 364, 365, 0, 366, 617, 0,
	618, 367, 0, 368, 369, 370, 371, 372, 619, 620,
	621, 449, 0, 373, 374, 0, 375, 376, 377, 378,
	0, 0, 0, 0, 379, 380, 381, 383, 0, 0,
	382, 622, 623, 0, 624, 0, 384, 385, 0, 625,
	0, 386, 387, 388, 0, 389, 0, 0, 0, 390,
	391, 392, 393, 394, 395, 0, 396, 398, 397, 0,
	399, 626, 0, 400, 401, 0, 0, 402, 0, 0,
	0, 403, 404, 407, 0, 0, 405, 406, 408, 409,
	0, 410, 411, 413, 416, 412, 414, 415, 417, 430,
	418, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 432, 0, 431, 0, 433, 434, 435, 440,
	442, 443, 438, 439, 441, 444, 445, 437, 0, 436,
	0, 0, 0, 446, 447, 0, 627, 448, 628, 450,
	451, 0, 0, 452, 0, 0, 0, 454, 455, 456,
	0, 0, 457, 458, 629, 0, 459, 0, 630, 460,
	461, 453, 462, 463, 464, 465, 466, 467, 468, 469,
	0, 470, 471, 631, 472, 473, 474, 632, 475, 476,
	477, 633, 478, 634, 479, 480, 0, 481, 482, 0,
	483, 484, 485, 486, 487, 488, 489, 635, 490, 492,
	491, 493, 0, 494, 0, 495, 496, 497, 0, 0,
	0, 0, 498, 0, 500, 501, 502, 499, 503, 504,
	505, 506, 0, 507, 508, 509, 0, 510, 511, 512,
	513, 636, 514, 0, 515, 516, 522, 523, 517, 518,
	524, 525, 526, 527, 528, 0, 530, 531, 529, 532,
	533, 534, 0, 0, 536, 519, 520, 537, 538, 0,
	539, 540, 541, 542, 543, 544, 637, 0, 545, 0,
	546, 547, 548, 549, 521, 550, 555, 638, 551, 552,
	553, 554, 639, 557, 0, 558, 559, 0, 556, 0,
	560, 561, 562, 563, 564, 565, 566, 344, 567, 0,
	568, 640, 641, 642, 643, 0, 577, 0, 569, 570,
	571, 644, 572, 645, 0, 573, 574, 575, 576, 0,
	578, 579, 0, 0, 580, 581, 582, 584, 585, 583,
	586, 0, 587, 0, 0, 588, 589, 590, 646, 647,
	648, 257, 592, 591, 593, 649, 0, 0, 0, 0,
	594, 595, 650, 596, 597, 598, 0, 0, 263, 265,
	264, 266, 267, 268, 269, 270, 0, 271, 272, 0,
	0, 0, 0, 0, 599, 0, 0, 0, 0, 273,
	274, 0, 275, 276, 277, 278, 279, 280, 600, 601,
	0, 281, 602, 282, 603, 0, 604, 283, 284, 285,
	286, 287, 288, 0, 0, 0, 289, 605, 606, 607,
	0, 290, 291, 608, 0, 0, 0, 292, 293, 294,
	295, 296, 297, 298, 0, 0, 300, 301, 302, 299,
	303, 0, 304, 0, 305, 306, 307, 308, 309, 310,
	0, 311, 312, 313, 0, 314, 315, 0, 0, 0,
	0, 0, 0, 0, 316, 317, 318, 319, 0, 320,
	609, 610, 0, 324, 321, 322, 0, 325, 323, 0,
	326, 327, 328, 0, 0, 329, 330, 331, 0, 332,
	333, 0, 334, 335, 336, 0, 337, 338, 611, 339,
	340, 341, 343, 345, 342, 346, 347, 348, 349, 612,
	613, 350, 0, 0, 0, 0, 0, 0, 0, 351,
	352, 353, 614, 0, 0, 0, 354, 0, 355, 0,
	0, 0, 356, 357, 615, 616, 358, 359, 360, 361,
	362, 363, 364, 365, 0, 366, 617, 0, 618, 367,
	0, 368, 369, 370, 371, 372, 1225, 620, 621, 449,
	0, 373, 374, 0, 375, 376, 377, 378, 0, 0,
	0, 0, 379, 380, 381, 383, 0, 0, 382, 622,
	623, 0, 624, 0, 384, 385, 0, 625, 0, 386,
	387, 388, 0, 389, 0, 0, 0, 390, 391, 392,
	393, 394, 395, 0, 396, 398, 397, 0, 399, 626,
	0, 400, 401, 0, 0, 402, 0, 0, 0, 403,
	404, 407, 0, 0, 405, 406, 408, 409, 0, 410,
	411, 413, 416, 412, 414, 415, 417, 430, 418, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	432, 0, 431, 0, 433, 434, 435, 440, 442, 443,
	438, 439, 441, 444, 445, 437, 0, 436, 0, 0,
	0, 446, 447, 0, 627, 448, 628, 450, 451, 0,
	0, 452, 0, 0, 0, 454, 455, 456, 0, 0,
	457, 458, 629, 0, 459, 0, 630, 460, 461, 453,
	462, 463, 464, 465, 466, 467, 468, 469, 0, 470,
	471, 631, 472, 473, 474, 632, 475, 476, 477, 633,
	478, 634, 479, 480, 0, 481, 482, 0, 483, 484,
	485, 486, 487, 488, 489, 635, 490, 492, 491, 493,
	0, 494, 0, 495, 496, 497, 0, 0, 0, 0,
	498, 0, 500, 501, 502, 499, 503, 504, 505, 506,
	0, 507, 508, 509, 0, 510, 511, 512, 513, 636,
	514, 0, 515, 516, 522, 523, 517, 518, 524, 525,
	526, 527, 528, 0, 530, 531, 529, 532, 533, 534,
	0, 535, 536, 519, 520, 537, 538, 0, 539, 540,
	541, 542, 543, 544, 637, 0, 545, 0, 546, 547,
	548, 549, 521, 550, 555, 638, 551, 552, 553, 554,
	639, 557, 0, 558, 559, 0, 556, 0, 560, 561,
	562, 563, 564, 565, 566, 344, 567, 0, 568, 640,
	641, 642, 643, 0, 577, 0, 569, 570, 571, 644,
	572, 645, 0, 573, 574, 575, 576, 0, 578, 579,
	0, 0, 580, 581, 582, 584, 585, 583, 586, 0,
	587, 0, 0, 588, 589, 590, 646, 647, 648, 257,
	592, 591, 593, 649, 0, 0, 0, 0, 594, 595,
	650, 596, 597, 598, 0, 0, 263, 265, 264, 266,
	267, 268, 269, 270, 0, 271, 272, 0, 0, 0,
	0, 0, 599, 0, 0, 0, 0, 273, 274, 0,
	275, 276, 277, 278, 279, 280, 600, 601, 0, 281,
	602, 282, 603, 0, 604, 283, 284, 285, 286, 287,
	288, 0, 0, 0, 289, 605, 606, 607, 0, 290,
	291, 608, 0, 0, 0, 292, 293, 294, 295, 296,
	297, 298, 0, 0, 300, 301, 302, 299, 303, 0,
	304, 0, 305, 306, 307, 308, 309, 310, 0, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	0, 0, 316, 317, 318, 319, 0, 320, 609, 610,
	0, 324, 321, 322, 0, 325, 323, 0, 326, 327,
	328, 0, 0, 329, 330, 331, 0, 332, 333, 0,
	334, 335, 336, 0, 337, 338, 611, 339, 340, 341,
	343, 345, 342, 346, 347, 348, 349, 612, 613, 350,
	0, 0, 0, 0, 0, 0, 0, 351, 352, 353,
	614, 0, 0, 0, 354, 0, 355, 0, 0, 0,
	356, 357, 615, 616, 358, 359, 360, 361, 362, 363,
	364, 365, 0, 366, 617, 0, 618, 367, 0, 368,
	369, 370, 371, 372, 619, 620, 621, 449, 0, 373,
	374, 0, 375, 376, 377, 378, 0, 0, 0, 0,
	379, 380, 381, 383, 0, 0, 382, 622, 623, 0,
	624, 0, 384, 385, 0, 625, 0, 386, 387, 388,
	0, 389, 0, 0, 0, 390, 391, 392, 393, 394,
	395, 0, 396, 398, 397, 0, 399, 626, 0, 400,
	401, 0, 0, 402, 0, 0, 0, 403, 404, 407,
	0, 0, 405, 406, 408, 409, 0, 410, 411, 413,
	416, 412, 414, 415, 417, 430, 418, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 432, 0,
	431, 0, 433, 434, 435, 440, 442, 443, 438, 439,
	441, 444, 445, 437, 0, 436, 0, 0, 0, 446,
	447, 0, 627, 448, 628, 450, 451, 0, 0, 452,
	0, 0, 0, 454, 455, 456, 0, 0, 457, 458,
	629, 0, 459, 0, 630, 460, 461, 453, 462, 463,
	464, 465, 466, 467, 468, 469, 0, 470, 471, 631,
	472, 473, 474, 632, 475, 476, 477, 633, 478, 634,
	479, 480, 0, 481, 482, 0, 483, 484, 485, 486,
	487, 488, 489, 635, 490, 1159, 491, 493, 0, 494,
	0, 495, 496, 497, 0, 0, 0, 0, 498, 0,
	500, 501, 502, 499, 503, 504, 505, 506, 0, 507,
	508, 509, 0, 510, 511, 512, 513, 636, 514, 0,
	515, 516, 522, 523, 517, 518, 524, 525, 526, 527,
	528, 0, 530, 531, 529, 532, 533, 534, 0, 535,
	536, 519, 520, 537, 538, 0, 539, 540, 541, 542,
	543, 544, 637, 0, 545, 0, 546, 547, 548, 549,
	521, 550, 555, 638, 551, 552, 553, 554, 639, 557,
	0, 558, 559, 0, 556, 0, 560, 561, 562, 563,
	564, 565, 566, 344, 567, 0, 568, 640, 641, 642,
	643, 0, 577, 0, 569, 570, 571, 644, 572, 645,
	0, 573, 574, 575, 576, 0, 578, 579, 0, 0,
	580, 581, 582, 584, 585, 583, 586, 0, 587, 0,
	0, 588, 589, 590, 646, 647, 648, 257, 592, 591,
	593, 649, 0, 0, 0, 0, 594, 595, 650, 596,
	597, 598, 0, 0, 263, 265, 264, 266, 267, 268,
	269, 270, 0, 271, 272, 0, 0, 0, 0, 0,
	599, 0, 0, 0, 0, 273, 274, 0, 275, 276,
	277, 278, 279, 280, 600, 601, 0, 281, 602, 282,
	603, 0, 604, 283, 284, 285, 286, 287, 288, 0,
	0, 0, 289, 605, 606, 607, 0, 290, 291, 608,
	0, 0, 0, 292, 293, 294, 295, 296, 297, 298,
	0, 0, 300, 301, 302, 299, 303, 0, 304, 0,
	305, 306, 307, 308, 309, 310, 0, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 0, 0,
	316, 317, 318, 319, 0, 320, 609, 610, 0, 324,
	321, 322, 0, 325, 323, 0, 326, 327, 328, 0,
	0, 329, 330, 331, 0, 332, 333, 0, 334, 335,
	336, 0, 337, 338, 611, 339, 340, 341, 343, 345,
	342, 346, 347, 348, 349, 612, 613, 350, 0, 0,
	0, 0, 0, 0, 0, 351, 352, 353, 614, 0,
	0, 0, 354, 0, 355, 0, 0, 0, 356, 357,
	615, 616, 358, 359, 360, 361, 362, 363, 364, 365,
	0, 366, 617, 0, 618, 0, 0, 368, 369, 370,
	371, 372, 619, 620, 621, 449, 0, 373, 374, 0,
	375, 376, 377, 378, 0, 0, 0, 0, 379, 380,
	381, 383, 0, 0, 382, 622, 623, 0, 624, 0,
	384, 385, 0, 625, 0, 386, 387, 388, 0, 389,
	0, 0, 0, 390, 391, 392, 393, 394, 395, 0,
	396, 398, 397, 0, 399, 626, 0, 400, 401, 0,
	0, 402, 0, 0, 0, 403, 404, 407, 0, 0,
	405, 406, 408, 409, 0, 410, 411, 413, 416, 412,
	414, 415, 417, 430, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 432, 0, 431, 0,
	433, 434, 435, 440, 442, 443, 438, 439, 441, 444,
	445, 437, 0, 436, 0, 0, 0, 446, 447, 0,
	627, 448, 628, 450, 451, 0, 0, 452, 0, 0,
	0, 454, 455, 456, 0, 0, 457, 458, 629, 0,
	459, 0, 630, 460, 461, 453, 462, 463, 0, 465,
	466, 467, 468, 469, 0, 470, 471, 631, 472, 473,
	474, 632, 475, 476, 477, 633, 478, 634, 479, 480,
	0, 481, 482, 0, 483, 484, 485, 486, 0, 488,
	489, 635, 490, 492, 491, 493, 0, 494, 0, 495,
	496, 497, 0, 0, 0, 0, 498, 0, 500, 501,
	502, 499, 503, 504, 505, 506, 0, 507, 508, 509,
	0, 510, 511, 512, 513, 636, 0, 0, 515, 516,
	522, 523, 517, 518, 524, 525, 526, 527, 528, 0,
	530, 531, 529, 532, 533, 534, 0, 535, 536, 519,
	520, 537, 538, 0, 539, 540, 541, 542, 543, 544,
	637, 0, 545, 0, 546, 547, 548, 549, 521, 550,
	555, 638, 551, 552, 553, 554, 639, 557, 0, 558,
	559, 0, 556, 0, 560, 561, 562, 563, 564, 565,
	566, 344, 567, 0, 568, 640, 641, 642, 643, 0,
	577, 0, 569, 570, 571, 644, 572, 645, 0, 573,
	574, 575, 576, 0, 578, 579, 0, 0, 580, 581,
	582, 584, 585, 583, 586, 0, 587, 0, 0, 588,
	589, 590, 646, 647, 648, 0, 592, 591, 593, 649,
	0, 0, 0, 0, 594, 595, 650, 596, 597, 598,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 0, 0,
	0, 1710, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1743, 1738, 1709, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 1729, 0, 0, 0,
	0, 1756, 0, 0, 0, 1726, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 1729, 0, 0,
	0, 1710, 0, 0, 0, 0, 1726, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 1729, 1715, 0, 0,
	0, 0, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1732, 1733,
	1734, 1735, 1747, 0, 0, 1757, 0, 0, 1715, 0,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 0, 0, 1747, 0, 0, 1757, 1732, 1733, 1734,
	1735, 0, 1737, 1739, 0, 1745, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1753,
	1730, 1754, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 1757, 1745, 0, 0, 0,
	0, 1737, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 1755, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1736, 0, 0, 0, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 0, 0, 0, 0, 1748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1731, 1707, 1708, 0, 1740, 1741,
	1742, 1750, 1751, 1752, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1743, 1738,
	1748, 0, 0, 1736, 0, 0, 1710, 0, 0, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1709, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 1729, 0, 0, 0, 0, 1746, 0, 0, 0,
	1726, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 2402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0,
	0, 0, 4313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1732, 1733, 1734, 1735, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	0, 4309, 0, 0, 0, 0, 0, 1747, 0, 0,
	1757, 0, 0, 0, 0, 0, 1737, 1739, 0, 0,
	0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 0, 1753, 0, 1754, 0, 0, 0, 0,
	0, 0, 1724, 1725, 0, 1743, 1738, 0, 0, 0,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	1745, 0, 1756, 1707, 1708, 0, 1740, 1741, 1742, 1750,
	1751, 1752, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 1738, 1709, 0,
	0, 0, 0, 0, 1710, 0, 0, 0, 1729, 0,
	0, 0, 0, 1756, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1755, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1709,
	0, 0, 0, 0, 0, 1744, 0, 0, 0, 1729,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1731, 0,
	1732, 1733, 1734, 1735, 1747, 0, 0, 1757, 0, 0,
	1715, 0, 0, 1737, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 1747, 0, 0, 1757, 0,
	0, 0, 0, 0, 1737, 1739, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 1730, 1754, 0, 0, 0, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1730, 1755, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749,
	1727, 1723, 1744, 1720, 1718, 1719, 1711, 1712, 1713, 1714,
	1716, 1717, 0, 0, 0, 0, 4235, 0, 0, 0,
	0, 0, 0, 0, 0, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750,
	1751, 1752, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 1743, 1738, 0, 0,
	0, 0, 0, 0, 1710, 0, 1731, 0, 0, 0,
	0, 0, 0, 1756, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 1743, 1738, 1709,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 1729,
	0, 0, 0, 0, 1756, 0, 0, 0, 1726, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	1729, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 1726,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 0, 4201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	1732, 1733, 1734, 1735, 1721, 1722, 1728, 1749, 1727, 1723,
	1715, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	0, 0, 0, 0, 4200, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 1747, 0, 0, 1757, 0,
	0, 1715, 0, 0, 1737, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1753, 0, 1754, 0, 0, 0, 0, 0, 0,
	1724, 1725, 0, 0, 0, 0, 1747, 0, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 0, 1745, 0,
	0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752,
	0, 0, 1753, 1730, 1754, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 1743, 1738, 0, 0, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 1745,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1709, 0, 0,
	0, 0, 0, 1744, 0, 0, 0, 1729, 0, 0,
	0, 0, 0, 0, 0, 0, 1726, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 0, 1732, 1733,
	1734, 1735, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 1748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 1747, 0, 0, 1757, 0, 0, 0,
	0, 0, 1737, 1739, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 1753,
	0, 1754, 0, 0, 0, 0, 0, 0, 1724, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1730, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723,
	0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717,
	0, 0, 0, 0, 4037, 0, 0, 0, 0, 0,
	0, 0, 0, 1755, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 1744, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 0, 3894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	1738, 0, 0, 0, 0, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 1736, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 1708, 1731, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 1743, 1738, 0, 0, 0,
	1748, 1726, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720,
	1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1747, 0,
	0, 1757, 3829, 0, 0, 0, 0, 1737, 1739, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 1738, 0,
	0, 0, 1744, 0, 0, 1710, 0, 0, 0, 1736,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 1743, 1738, 1748, 0, 0, 0, 1726,
	0, 1710, 0, 0, 0, 1736, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 1748, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1721, 1722, 1728,
	1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 0, 0, 0, 1747, 3828, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 1753, 0, 1754, 0, 0, 0, 1746, 0,
	0, 1724, 1725, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1745,
	0, 0, 1747, 3827, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 1738, 0, 0, 0,
	1744, 0, 0, 1710, 0, 0, 0, 1736, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 1743, 1738, 1748, 0, 0, 0, 1726, 0, 1710,
	0, 0, 0, 1736, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 1748,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 1747, 3513, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 1746, 0, 0, 1724,
	1725, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1745, 0, 0,
	1747, 3033, 0, 1757, 0, 0, 0, 0, 0, 1737,
	1739, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 1754, 0,
	0, 0, 0, 0, 0, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 1744, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 1744, 0,
	0, 1710, 0, 0, 0, 1736, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 1743,
	1738, 1748, 0, 0, 0, 1726, 0, 1710, 0, 0,
	0, 1736, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 1748, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 1747, 3032, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 1746, 0, 0, 1724, 1725, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 1745, 0, 0, 1747, 3031,
	0, 1757, 0, 0, 0, 0, 0, 1737, 1739, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 1738, 0, 0, 0, 1744, 0, 0, 1710,
	0, 0, 0, 1736, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 1708, 1709, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 0, 0, 1729, 0, 0, 0, 0, 1748,
	0, 0, 0, 1726, 0, 1743, 1738, 0, 0, 1736,
	0, 0, 0, 1710, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 1748, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 4445, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	1747, 3030, 0, 1757, 0, 0, 0, 0, 0, 1737,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 1753, 0, 1754, 1715,
	0, 3117, 1746, 0, 3116, 1724, 1725, 1721, 1722, 1728,
	1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 1745, 0, 2997, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 1757, 1730, 0,
	0, 0, 0, 1737, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4444, 0, 0, 0, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1743, 1738, 0,
	0, 1736, 1744, 2968, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 1731, 0, 2546, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1709, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	1729, 0, 0, 1743, 1738, 0, 0, 0, 2545, 1726,
	0, 1710, 0, 0, 0, 1736, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2969, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 0,
	0, 1748, 0, 0, 0, 1726, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 1746, 0, 0, 0, 0, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 1753, 0, 1754, 0, 0, 0, 1746, 0,
	0, 1724, 1725, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1745,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 0, 0, 0, 1724, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1730, 0, 0, 0, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1743, 1738, 0, 0, 0,
	1744, 0, 0, 1710, 0, 0, 0, 1736, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 1743, 1738, 1748, 0, 0, 0, 1726, 0, 1710,
	0, 0, 0, 1736, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 0, 0, 1748,
	0, 0, 0, 1726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 0, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 1746, 0, 0, 1724,
	1725, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 1745, 0, 0,
	1747, 0, 0, 1757, 0, 0, 0, 0, 0, 1737,
	1739, 0, 1730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1753, 0, 1754, 0,
	0, 0, 0, 0, 0, 1724, 1725, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 1744, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 1708, 0, 1740, 1741, 1742, 1750, 1751, 1752, 0,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1743, 1738, 0, 0, 0, 1744, 0,
	0, 1710, 0, 0, 0, 1736, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 0, 1709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 0, 0, 1743,
	1738, 1748, 0, 0, 3118, 1726, 0, 1710, 0, 0,
	0, 1736, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 0, 0, 1748, 0, 0,
	0, 1726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 3123, 0, 0, 0, 0, 3494, 1746, 0,
	0, 0, 0, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 0,
	0, 0, 1747, 0, 0, 1757, 0, 0, 0, 0,
	0, 1737, 1739, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 1753, 0,
	1754, 0, 0, 0, 1746, 0, 0, 1724, 1725, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 1745, 0, 0, 1747, 0,
	0, 1757, 0, 0, 0, 0, 0, 1737, 1739, 0,
	1730, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	0, 0, 0, 1724, 1725, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1730, 0, 0, 0,
	1744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1707, 1708,
	0, 1740, 1741, 1742, 1750, 1751, 1752, 0, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 1738, 0, 0, 0, 1744, 0, 0, 1710,
	0, 0, 0, 1736, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1731, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 1709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1729, 0, 0, 1743, 1738, 1748,
	0, 0, 3034, 1726, 0, 1710, 0, 0, 0, 1736,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 1748, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1732, 1733, 1734, 1735, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 1721, 1722, 1728, 1749, 1727, 1723, 0, 1720, 1718,
	1719, 1711, 1712, 1713, 1714, 1716, 1717, 0, 0, 0,
	1747, 0, 0, 1757, 0, 0, 0, 0, 0, 1737,
	1739, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 1753, 0, 1754, 0,
	0, 0, 1746, 0, 0, 1724, 1725, 1721, 1722, 1728,
	1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 1745, 0, 0, 1747, 0, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 1754, 0, 0, 0, 0, 0,
	0, 1724, 1725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3085, 0,
	0, 0, 0, 0, 0, 0, 1707, 1708, 0, 1740,
	1741, 1742, 1750, 1751, 1752, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	1738, 0, 0, 0, 1744, 0, 0, 1710, 0, 0,
	0, 1736, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1731, 1707, 1708, 0, 1740, 1741, 1742, 1750, 1751,
	1752, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1729, 0, 0, 1743, 1738, 1748, 0, 0,
	0, 1726, 0, 1710, 0, 0, 0, 1736, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 1748, 0, 0, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1732, 1733, 1734, 1735, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 1721,
	1722, 1728, 1749, 1727, 1723, 0, 1720, 1718, 1719, 1711,
	1712, 1713, 1714, 1716, 1717, 0, 0, 0, 1747, 0,
	0, 1757, 0, 0, 0, 0, 0, 1737, 1739, 1732,
	1733, 1734, 1735, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 1753, 0, 1754, 0, 0, 0,
	1746, 0, 0, 1724, 1725, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717, 1745, 0, 0, 1747, 0, 0, 1757, 0, 0,
	0, 0, 0, 1737, 1739, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1753, 0, 1754, 0, 0, 0, 0, 0, 0, 1724,
	1725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1730, 0, 0, 0, 1744, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 1708, 0, 1740, 1741, 1742,
	1750, 1751, 1752, 0, 1755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 1736,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 1748, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 1736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1734, 1735, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 0, 1721, 1722, 1728,
	1749, 1727, 1723, 0, 1720, 1718, 1719, 1711, 1712, 1713,
	1714, 1716, 1717, 0, 0, 0, 1747, 0, 0, 1757,
	0, 0, 0, 0, 0, 1737, 1739, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1753, 0, 1754, 0, 0, 0, 1746, 0,
	0, 1724, 1725, 1721, 1722, 1728, 1749, 1727, 1723, 0,
	1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716, 1717, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1730, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 1721, 1722, 1728, 1749, 1727,
	1723, 0, 1720, 1718, 1719, 1711, 1712, 1713, 1714, 1716,
	1717,
}
var sqlPact = [...]int{

	263, -1000, -1000, -1000, -1000, 243, -1000, -1000, 240, 236,
	235, 234, 231, 230, 227, 226, 225, 224, 223, -1000,
	-1000, -1000, -1000, -1000, -1000, 221, -1000, -1000, 219, -1000,
	208, 203, 196, -1000, -1000, 192, -1000, 190, -1000, -1000,
	-1000, -1000, 189, 188, 184, 85845, 85310, 86373, 2178, 106057,
	93265, 2248, 76778, 105522, 76243, 104987, 2006, 4842, 104452, 2625,
	182, -1000, 103917, 178, 177, 175, -1000, 103382, -1000, 1979,
	-1000, 172, 2155, 61785, 171, 170, 168, 2295, 165, -1000,
	164, 162, 160, -1000, 10153, 1537, -1000, 158, 154, -1000,
	600, 90604, 153, 151, 2305, 150, 147, 61250, 146, 144,
	2268, 2795, -1000, -1000, 2004, -1000, -1000, 142, 136, 131,
	127, 126, 124, 123, 119, 118, 117, 115, -1000, 114,
	112, 107, 106, 104, -1000, 102, 100, 94, -1000, 91,
	90, 88, 87, 86, 85, 84, 82, 81, 79, 77,
	76, 75, 72, -1000, 12373, 71, 1894, 1660, 1653, 1650,
	1648, 1642, 987, 70, 69, 68, 63, 62, 61, 60,
	57, 53, -1000, 50, 38, 35, 33, 27, 26, 25,
	24, 140, 23, 22, 21, 10, 8, 7, 6, 2621,
	-1000, 1523, 1107, 28519, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 111865, 106585, 4, -118,
	3, -1000, 3165, 1012, 51053, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 304, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 534, 2057, 785, -1000, -1000, -1000, 102854,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2177, -85,
	-1000, 1920, -1000, -1000, -1000, -1000, -1000, 781, -1000, 2173,
	174, 2104, -1000, -1000, -1000, 3241, 2335, 3625, 3624, 3623,
	3622, 3621, 111337, 1829, 3620, 2406, 3619, 3618, 3617, 3616,
	3615, 3613, 3610, -1000, 84775, 1052, 84240, 83705, 3245, 102326,
	83170, 101791, 70375, 43295, 1102, 3237, -1000, -1000, -1000, -1000,
	-1000, -1000, 106585, -1000, 1051, -1000, -1000, 3609, 3608, 2005,
	779, 92730, -1000, 1769, -1000, 939, 30199, -1000, 1274, -1000,
	30199, 303, -1000, -1000, -1000, -1000, -1000, -1000, 3605, 3602,
	3601, 3600, 3598, -1000, -1000, 75708, 21747, 75173, 74638, 101256,
	21202, 82635, 82100, 100721, 69830, 1048, 1405, -1000, -1000, -1000,
	-1000, -1000, -1000, -18, 67650, 3390, 106585, -1000, 298, -1000,
	-1000, -1000, -1000, -1000, -1000, 42723, 845, 42151, 727, 41579,
	493, -1000, -1000, -1000, -1000, 69285, -1000, 100186, 2333, 3597,
	3596, 1127, 3594, 3107, 1781, 3593, 1799, 1281, 3592, 3589,
	3588, 3587, 3586, 3585, 3584, 1407, 99651, 2854, 99116, 1638,
	68740, 1046, 81565, 86373, 2555, 98581, 1391, 1388, -1000, -1000,
	-1000, -1000, 2954, 2793, 2787, 1362, -1000, -1000, -1000, -1000,
	53722, 7473, 6577, 8785, 98046, 55926, 86373, 86373, -1000, -1000,
	-1000, -1000, -1000, 41007, 516, 40435, 1068, -1000, -1000, 54273,
	2812, -1000, -1000, -1000, -1000, 39863, 299, 39291, 991, 106585,
	-1000, 2852, 1924, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2085, 1611,
	3403, 2623, 68195, 1993, 1427, 3198, 2953, 2945, 1517, 3582,
	3580, 2460, 2943, 2942, 2940, 2939, 2938, 1410, 2461, 287,
	27947, 2840, 1674, 38719, 1505, 1520, 2937, 2933, 3419, 1885,
	1954, 1947, 74103, 3579, 3578, 3150, 2898, 2889, 2810, -1000,
	2809, -1000, -1000, -1000, -1000, 1472, -1000, -1000, -1000, -1000,
	-1000, 77306, -1000, -1000, 1716, -1000, -1000, 1716, -1000, -1000,
	-1000, -1000, -1000, 1364, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1523, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2325, -1000, 1983, -1000,
	-1000, 2392, 3145, 3145, 3145, 3228, 488, 483, -1000, 140,
	-1000, -1000, 117865, -1000, -1000, 43855, 43855, 43855, 43855, 43855,
	43855, 43855, 2033, -1000, 776, -1000, -1000, 827, -1000, 775,
	650, -1000, -1000, -1000, -1000, -1000, -1000, 772, -1000, -1000,
	-1000, -1000, -1000, -1000, 3390, -1000, 24527, -1000, -1000, -1000,
	442, 769, 43855, -1000, -1000, 3435, 3434, 1047, -1000, 292,
	968, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2850, 768, 767, -1000, 766, 765, 764,
	762, 761, -1000, -1000, -1000, 760, 759, 758, 750, 745,
	739, 738, 737, -1000, 1942, -1000, -1000, -1000, -1000, -1000,
	-1000, 692, 690, 690, 690, -1000, 1035, -1000, -1000, -1000,
	384, 688, 301, 687, 684, 682, -1000, 736, 734, 733,
	732, 731, 726, 719, 717, 715, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1032, -1000, -1000, -1000, -1000, -20, 106585,
	-1000, 534, -20, -1000, -1000, 712, -1000, 32451, 32451, 32451,
	-1000, -1000, 2170, 43855, -1000, 2781, -1000, -10, -10, 894,
	52652, -1000, 49983, 894, 273, 841, 57527, -1000, 2806, -1000,
	-1000, 711, 284, -1000, -1000, -1000, -1000, 22290, 2805, 106585,
	106585, 86373, 86373, 86373, 3045, 43855, -1000, -1000, 65501, 106585,
	86901, -1000, -1000, 3327, 62313, 64973, 106585, 2847, 64445, 3576,
	-1000, -1000, -1000, -1000, -1000, 3012, 3575, 3574, 3573, -1000,
	106585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 200, 3011,
	-1000, -1000, 90069, 200, 3010, -1000, 200, 3009, -1000, 89541,
	-1000, -1000, 2163, 3007, -1000, -1000, 207, 3006, -1000, -1000,
	-1000, 204, 3005, -1000, -1000, 280, -142, 3001, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	117865, -1000, -1000, -1000, 63910, -1000, 3153, -1000, -1000, 106585,
	-1000, 43855, -1000, 3324, 1691, 71451, 3272, -29, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2387, 2356, 1151, 2195, -1000,
	3059, 1375, -1000, 30199, 3096, -1000, -1000, -1000, 272, 22290,
	-1000, -1000, -1000, -1000, -1000, -1000, 5109, 2432, 1434, -1000,
	2193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1795, 3000,
	-1000, 2061, 2994, 1780, -1000, -1000, 2456, -1000, 3130, -1000,
	-1000, 1727, 2993, -7, -1000, -1000, 2097, -1000, 1887, -1000,
	1001, 2991, -1000, 81030, 55375, 54273, 67650, -23, -1000, -1000,
	-1000, -1000, -247, -1000, 20657, 117865, -1000, -1000, -1000, -1000,
	1682, 117865, 907, -1000, -1000, 2990, -1000, 117865, 870, -1000,
	-1000, 2989, -1000, 2844, -1000, -1000, 2296, -1000, -1000, 3571,
	-1000, -1000, 3570, -1000, 3566, 3564, 3563, -1000, 1692, 1893,
	3562, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 80502,
	2168, -1000, -1000, 79432, -1000, 2288, 3271, -1000, 79967, 1044,
	-1000, 1001, 2280, -1000, 89013, 1027, -1000, 3561, 3235, 2600,
	1001, 2277, -1000, -1000, -1000, -1000, -1000, 828, -1000, 59121,
	-1000, 59121, -1000, 1565, -1000, 110809, -10, 86373, 3390, -1000,
	-43, -1000, -1000, -1000, 1012, -1000, 53187, -1000, 53187, 92195,
	70918, 970, 752, 60715, 117865, -1000, -1000, -1000, -1000, 117865,
	-1000, -1000, -1000, -114, -1000, -1000, 70918, 54273, 117865, -1000,
	-1000, -1000, -1000, 117865, -1000, -1000, -1000, 70918, 79432, -1000,
	97511, 78904, -1000, -1000, 1402, 2449, -1000, -1000, -1000, 70918,
	1311, 70918, 70918, 70918, -1000, 96976, -1000, -1000, 1999, 1260,
	3144, 1974, 86373, -1000, 1766, -1000, -1000, -1000, 3167, -1000,
	-1000, 2842, -1000, 63375, 88485, -1000, 87957, -1000, 87429, -1000,
	86373, -1000, 86373, -1000, 3559, 3558, 3557, 3556, -1000, 3555,
	3159, -1000, 117865, 3158, -1000, 3554, 3267, 2840, 117865, -1000,
	3004, 1663, 1662, 106585, -1000, -1000, 106585, -1000, 106585, -1000,
	-1000, -1000, 1486, -1000, -1000, 2384, -1000, -1000, -1000, -1000,
	86373, -1000, -1000, -1000, -1000, -1000, -1000, 2839, -1000, 1711,
	-1000, 1765, -1000, 3072, 1400, -1000, -1000, 215, -1000, -1000,
	-29, -1000, 110281, -1000, 2392, -1000, 106585, -1000, 2440, 2832,
	2838, 1577, 2167, 2472, -1000, 38147, 2452, 47215, 2189, 140,
	-1000, -1000, 140, 140, 29639, -1000, -1000, 62313, 62313, 22290,
	1377, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855,
	43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855,
	43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855, 43855,
	43855, 43855, 43855, 43855, 43855, 43855, 2239, 43855, 1360, 43855,
	43855, 43855, 43855, 1658, -1000, -1000, 1930, 574, 1958, -1000,
	3381, 3381, 3381, 509, 509, 118223, 118223, 639, 3553, 827,
	-1000, 43855, -1000, 99, 43855, 22835, -1000, 483, 9321, 2346,
	-1000, 482, 23407, -1000, -1000, -1000, 24527, 650, 37575, 43855,
	1026, 117865, -1000, -1000, 1494, 3405, 20113, 2875, 2662, 709,
	850, 847, 27375, 26803, 26231, 25659, 729, 43855, 43855, 43855,
	43855, 43855, 43855, 43855, 43855, -1000, -1000, 3412, -1000, 3405,
	-1000, -1000, -1000, -1000, 3405, 1372, 1315, 3405, -1000, 3405,
	3405, 8302, 8302, 37015, 36443, 35871, 47775, 35299, 43855, 25087,
	34727, 34155, -1000, 106585, -20, 3323, 43855, 157, -1000, 116489,
	-1000, 157, 157, 708, -44, 117865, 2614, 2614, 51586, 2324,
	2041, 2041, 2041, -1000, 894, 15732, 894, 95915, 2053, 894,
	894, 262, 291, 481, 49450, 2781, 95915, 803, 704, 1,
	0, -1, -1000, -1000, -2, -5, -1000, -1000, 86373, 701,
	22835, 22290, 259, 1428, -46, 2526, 2522, 2512, -1000, 2509,
	1695, -49, 1359, 86373, 106585, -113, -1000, 4446, -65, -1000,
	1349, 258, 3405, -1000, -1000, -1000, -1000, -1000, 3552, 3551,
	-1000, 1031, 695, 694, 416, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 692, 690, 690, 690, -1000, 384, 688,
	301, 687, 684, 682, -1000, -1000, -1000, -1000, -1000, 2803,
	86373, 106585, -247, 86901, -102, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 106585, -1000, -1000, -1000, 3550, -1000, 86373,
	-1000, -1000, 86373, 200, 2987, -1000, 86373, -1000, 86373, 197,
	2976, -1000, -1000, 106585, -1000, 86373, 86373, -1000, 106585, 106585,
	106585, 70918, 70918, 211, -1000, 86373, 918, -66, 1133, -29,
	-1000, -1000, -1000, 1716, -1000, 2019, -1000, -1000, -1000, -1000,
	-1000, -1000, 1412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1047, -1000, -1000, -1000, -1000, -1000, -1000, 3401, 3395,
	-21, -1000, -1000, 22290, -1000, -33, 1588, 1921, -1000, 73568,
	2227, 3164, 3549, 2587, 3114, 1561, -1000, 1478, 1358, 3225,
	77306, 2964, 3282, 3297, 842, -1000, 2802, -1000, -1000, 938,
	1710, 1671, 1357, 77306, 2061, -1000, 62313, -1000, 2499, 3224,
	1392, 1440, 1392, 1392, 1390, -1000, 77306, 1670, 1354, 1350,
	1891, 1891, -1000, -1000, 1336, 1329, 2207, -1000, -37, 3280,
	3296, 777, -1000, 2792, 1328, -1000, -1000, 86373, 22290, 1553,
	1557, 1666, 1326, -22, -1000, 3278, 3277, 1323, 1306, -1000,
	2330, -1000, 70918, 1775, 2963, 2622, 908, 2620, -1000, -1000,
	908, -23, 67650, 106585, 257, -1000, 99, 43855, 43855, 99,
	43855, 99, 3264, 2961, -1000, -1000, -1000, -1000, -1000, 3547,
	1862, 2402, -1000, -1000, 680, 2270, 2783, 106585, 2551, -24,
	86373, -1000, 2934, 66036, 2061, 2267, -1000, -1000, 78369, -1000,
	2929, 534, 2264, -1000, 693, 3545, -1000, 109753, -1000, 3153,
	1386, 2928, 1088, 744, 3321, -1000, 744, 59649, -1000, 106585,
	-1000, -10, 4646, 72512, -67, -72, 479, -1000, 96448, 106585,
	1087, 73040, 106585, 3086, 996, 54273, -1000, -73, -114, 2618,
	970, 970, 908, -1000, 908, -1000, 86373, 2835, -1000, -1000,
	70918, 970, 970, 970, -1000, -1000, -1000, -1000, 3544, 3543,
	3542, -1000, -1000, -1000, 997, 86373, 106585, 86373, -1000, -1000,
	106585, -1000, 106585, 106585, 86373, -1000, 997, 106585, 997, 106585,
	997, 106585, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 99,
	43855, -1000, -1000, 3540, 1582, -1000, 2834, -1000, 2833, -1000,
	30, -1000, -1000, -1000, -1000, -1000, 1943, 86373, 86373, 86373,
	86373, 106585, 106585, 86373, -1000, 77306, -1000, 2440, 2832, -1000,
	-1000, -1000, -1000, -1000, -1000, 1382, 2117, -1000, 2454, -1000,
	1514, -1000, -1000, -1000, 117865, 48335, -1000, -1000, 117865, 1694,
	-1000, 46655, 46095, -1000, -1000, 1644, 86373, 2548, -1000, 2548,
	-246, -1000, 116433, 2441, 86373, -1000, -1000, -1000, -1000, -1000,
	933, 577, 577, 1300, 1300, 1300, 1300, 3258, 552, 1008,
	5326, 8239, 8239, 930, 930, 930, 930, 930, 8239, 4539,
	509, 509, 4539, 4539, 4539, 4539, 4539, 509, 509, 509,
	8239, 8239, 8239, 118223, 117921, 7098, 43855, 43855, 1303, 1927,
	574, 6657, 43855, 8020, 8020, 8020, 8020, -1000, 2090, -1000,
	-1000, -1000, -1000, 2778, 672, 47775, 47775, -1000, -1000, -1000,
	-1000, 23967, 43855, -1000, -1000, -1000, -1000, 33583, -1000, -1000,
	115765, -316, 475, -209, -45, -1000, 43855, 43855, 43855, 474,
	-1000, 253, 43855, 106585, -1000, 112929, 799, -195, -1000, -74,
	1420, -1000, 43855, -1000, -1000, 1299, -1000, 1290, 1289, 1285,
	-1000, 667, 469, -1000, 252, -1000, 2039, 666, 664, 43855,
	-1000, -1000, -1000, -1000, -1000, 115709, -1000, -1000, 115407, -1000,
	-1000, 115351, -1000, -1000, 115049, -1000, -1000, -1000, 117563, 15134,
	15044, 14549, 7913, 14127, 13726, -80, 467, -82, 463, 931,
	929, 462, 451, 444, -83, -1000, 3538, 3537, 3528, -1000,
	3525, 3524, 3522, -1000, 3521, 3518, 3517, -1000, 3516, 3515,
	3511, -1000, 3508, 3507, 3506, -1000, 3505, 3503, 3502, -1000,
	3501, 3499, 3498, -1000, 3496, 3494, 3490, -88, 443, -1000,
	2775, -209, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	436, -1000, 434, -1000, 117507, -209, 423, 7275, -1000, 47775,
	47775, 47775, -1000, 422, -1000, 116131, -1000, 117205, 33023, 33023,
	33023, 417, 117149, 43855, -209, -89, -1000, -90, -1000, -1000,
	559, -91, 1021, 32451, 50518, 22290, -1000, 1021, 1021, 43855,
	-1000, 43855, 2477, -1000, -1000, -1000, 2476, 1907, 2614, 51586,
	-1000, -1000, -1000, -1000, 95915, -1000, 3390, 2748, -1000, 95915,
	-1000, -1000, 106585, 534, -1000, 95915, 95915, 22290, 894, -1000,
	894, 95915, 773, -1000, -1000, -1000, -1000, -1000, 413, 56459,
	-45, 250, 22290, 1001, -1000, 2546, 2546, 2546, 2546, -1000,
	-1000, 106585, 1263, -27, -194, 3361, -1000, 1939, -1000, 62313,
	-1000, 826, 1228, 22290, -1000, -1000, -1000, 663, -1000, 3405,
	3405, -1000, 3405, 106585, 2771, 141, 139, 66036, 66036, 3488,
	-1000, -1000, 200, -1000, 86373, 200, 200, -1000, 86373, 86373,
	2163, -1000, 207, -1000, 204, -1000, -1000, -142, -1000, 1018,
	30199, -1000, 1716, -1000, -1000, 1539, -1000, 1867, -1000, 1304,
	-1000, -1000, -1000, -1000, 30199, -1000, 3307, 106585, 106585, 86373,
	-1000, 106585, -1000, 2035, 3359, 1839, 2383, 2373, -1000, 2263,
	109225, 2258, 62313, 106585, -1000, -1000, 661, 956, 2435, 2430,
	1082, 106585, 106585, 2425, 108697, 108169, -1000, 3484, 106585, 1933,
	43855, 66036, 2150, 2830, 77306, 99, 99, -1000, -1000, 99,
	658, 1277, 86373, 86373, 106585, 86373, 1761, -1000, -1000, -1000,
	-1000, -1000, 77834, -1000, -1000, 3411, 3407, -1000, 1392, -1000,
	-1000, -1000, 1392, 2061, 1661, 106585, 86373, 66036, 106585, -1000,
	-1000, 106585, 1657, 106585, 2888, 913, -1000, 1962, 99, 99,
	-1000, -1000, 99, 657, 22290, 1827, -1000, 2837, 106585, 3433,
	106585, 106585, 106585, 66036, 3147, 107641, 106585, 106585, 66036, 2330,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 67122, 1095, 1001, 1639, 1211, 77306, 54273, 994, 54273,
	2605, -1000, -1000, 19569, -1000, 117865, 117865, -1000, 117865, -1000,
	62847, 106585, -1000, 1043, 106585, 73040, 966, 2927, 58593, -247,
	970, 70918, 86373, -24, 106585, -1000, -1000, 2061, 2926, 534,
	2254, -1000, 70918, 3316, 2925, 656, 3483, 3480, -1000, 2164,
	2247, -1000, -1000, 107113, 3024, 854, 106585, 1021, 51586, 1873,
	-1000, 56994, 1066, 106585, 1773, 108, -1000, -1000, -1000, 17,
	106585, -1000, 840, -1000, -1000, 4646, 4646, 970, -298, 652,
	-1000, 896, 895, 54824, 70918, -96, -1000, -1000, -1000, -1000,
	-1000, 86373, 106585, 1279, 2596, 106585, -99, -1000, 247, 651,
	-1000, 2676, -1000, -1000, 996, 54273, 2769, -1000, -1000, 1017,
	-1000, 1399, 970, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -13, -247, -247, -26, -27, -1000, 997,
	-1000, 997, -1000, 997, -1000, 117865, -1000, -1000, 1578, 1576,
	106585, -1000, 22290, 106585, 86373, 22290, 86373, 2829, 2820, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1104, -1000,
	1694, 2112, -1000, 650, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2355, -1000, -28, 29639, 925, -1000, -1000,
	86373, -14, 43855, 43855, 6213, 5591, 43855, 47775, 47775, -1000,
	43855, 5495, -1000, -1000, -1000, -1000, -1000, 2768, 649, 43855,
	62313, 5517, 4958, -1000, 412, 13307, 4539, -1000, 43855, -1000,
	411, 31891, -1000, 116791, -57, -101, -1000, 16289, -209, -106,
	-1000, -1000, 821, -1000, 3021, -1000, 43855, 116847, 2286, 1822,
	1744, 1589, 3405, 3432, 19025, -1000, 60182, 1022, 2066, 114993,
	-1000, -1000, -1000, -1000, 62313, 62313, 43855, 43855, -1000, 43855,
	43855, 43855, -1000, -1000, -1000, 3405, 934, -1000, -1000, -1000,
	934, -1000, -1000, 1392, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1392,
	-1000, 43855, -1000, -1000, 2755, 43855, -1000, 62313, 62313, 47775,
	47775, 47775, 47775, 47775, 47775, 47775, 47775, 47775, 47775, 47775,
	47775, 47775, 47775, 47775, 47775, 47775, 47775, 47775, 2379, 47775,
	3379, 3379, 3379, -1000, 2818, 2755, 43855, 43855, 62313, 410,
	409, 407, -1000, 43855, -209, -1000, -1000, 4646, 647, -1000,
	2341, -1000, 2655, -1000, 43855, -1000, -111, -1000, 2781, -1000,
	-1000, 2655, 2655, -108, 117865, 51586, 51586, -1000, 643, 43855,
	2467, -1000, -1000, 795, -317, -1000, 893, -1000, -1000, -1000,
	-1000, -1000, 534, -1000, -1000, -1000, 246, 95915, 95915, 793,
	-1000, -115, -1000, -1000, -117, -1000, 3315, 406, 22290, -1000,
	1021, 3135, -1000, -1000, -1000, -1000, -1000, -1000, -247, 106585,
	106585, 2103, 3430, -1000, 3406, 817, 787, 198, 3405, 403,
	398, 397, -247, 106585, 106585, 106585, -1000, -1000, -1000, -1000,
	200, -1000, -1000, -1000, 197, -1000, -1000, -1000, -1000, 2503,
	-1000, -29, -1000, -1000, -1000, 43855, -1000, -1000, 3163, 1208,
	1201, -1000, -1000, -1000, -1000, 3223, 91660, 3351, 1830, 1815,
	2924, -1000, 2245, -1000, 1075, -1000, 1817, -1000, 43855, 637,
	2591, 633, 628, 3477, 1856, 3474, 1083, 2923, 2163, 2922,
	2163, -1000, -1000, -1000, 942, -1000, 117865, -1000, 626, 619,
	-1000, -33, 1575, 1619, 1530, 1016, -1000, -1000, 43855, 43855,
	95387, -1000, 449, 3130, -16, -1000, -1000, 1607, 1178, -1000,
	-1000, -1000, -1000, 2061, 1604, 1174, -1000, -1000, -1000, -247,
	-247, 1006, -1000, -1000, 2846, -1000, 1002, -1000, -1000, 43855,
	-1000, -37, 1170, 3279, 2244, 86373, 1163, -1000, 1162, -1000,
	-1000, -1000, 3274, 2163, 2918, 1182, -1000, -1000, -1000, -1000,
	-1000, 66579, -1000, 106585, 86373, 1586, 908, -1000, 2342, 908,
	994, 2754, -1000, 2541, -1000, 86373, 3473, 396, -125, -39,
	62313, 3314, -1000, 2152, 646, 86373, 911, -1000, 3390, -1000,
	-1000, -1000, -1000, 3268, 86373, 3309, 2914, 1001, 99, 86373,
	3429, -1000, -1000, 86373, 2912, 2161, 2241, 2394, 854, 71984,
	-1000, 1001, 2065, -79, -1000, 1773, 31319, 3121, -128, -1000,
	-1000, -1000, 1021, 59649, 51586, 43855, 3469, -130, -1000, -1000,
	-1000, -1000, -1000, 93798, 93798, 70918, 70918, 70918, 970, 106585,
	106585, 73040, -1000, 618, 106585, 106585, 617, -1000, 106585, 106585,
	3468, 70918, -40, 614, -1000, 890, 888, 886, -1000, -1000,
	-1000, -1000, -1000, -1000, -114, 99, -1000, 2093, 86373, -1000,
	18481, -1000, -1000, -1000, -1000, -1000, 997, -1000, -1000, 1975,
	2188, 1975, 1759, 1750, -1000, 2108, -1000, -1000, -1000, -1000,
	2492, 3143, 22290, 3265, 8020, 43855, 43855, 4670, 1929, 438,
	8020, 43855, 43855, 62313, 6092, -131, 43855, 43855, -1000, 43855,
	774, 117865, 3428, 43855, 395, 394, -1000, -1000, -1000, 3393,
	-1000, -1000, -1000, 117865, 43855, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 385, -1000, 109, -1000, -1000, -1000, 112393, -1000,
	43855, 381, 3222, -1000, 379, 378, 11041, 344, 114691, 114635,
	114280, 377, -1000, -1000, 374, 371, 117865, 2818, 117865, -1000,
	-1000, 948, 948, 1381, 1381, 1381, 1381, 3379, 683, 1121,
	594, 323, 323, 323, 903, 629, 629, 323, 323, 323,
	2741, 2380, 611, 6911, -1000, -1000, 117865, 117865, 368, -1000,
	-1000, -1000, -209, 367, 4646, -1000, 2647, 3221, 117865, -1000,
	51586, 2647, 2647, -1000, -1000, 1907, 106585, 117865, 51586, -1000,
	2748, -1000, 16844, -1000, 22290, -1000, -1000, -1000, -1000, 3390,
	-1000, 56459, -1000, 608, -1000, 18, -1000, 3135, -1000, 885,
	-1000, -247, -247, -1000, -1000, 630, 3467, 812, 22290, 366,
	-1000, -1000, -1000, -247, -247, -247, -1000, -1000, -1000, 3085,
	117865, 106585, 106585, 1466, 94859, 1702, -1000, -1000, 2372, -1000,
	-1000, 3350, 3310, 106585, 2910, -1000, 4863, -1000, 1082, 114063,
	52119, -1000, 52119, 106585, -1000, -1000, 1897, 2445, 1119, -1000,
	3166, 106585, -1000, 106585, -1000, -1000, 106585, 106585, 86373, 106585,
	1712, 2896, -139, 117865, -42, -1000, 871, -1000, 1401, -1000,
	17937, 106585, 86373, 106585, 86373, 2025, -1000, 2895, -146, 22290,
	-1000, 3427, 3425, 2909, 3186, 3422, 106585, -1000, 106585, 86373,
	3083, -1000, -1000, -1000, -1000, 1602, 1161, 994, -59, 607,
	-1000, 869, -1000, -1000, 867, 994, -1000, 70918, 54273, 534,
	-1000, 2579, -1000, 91132, 2149, 99, -1000, 3466, 94331, 606,
	-1000, 2084, -1000, 578, 66036, 2061, 99, 86373, -1000, -1000,
	534, 365, -60, -1000, 1079, 22290, 86373, 2908, 2397, 854,
	71984, -1000, 1386, 2472, -1000, -68, -1000, 641, 99, 2065,
	-1000, -79, 117865, -1000, 866, -1000, -147, -1000, -1000, 360,
	-1000, 3081, 3079, -1000, 2714, 52119, 605, 602, 106585, 3077,
	-1000, -1000, -152, 2216, 2216, 70918, 54273, 70918, 996, -1000,
	2255, -1000, -1000, -1000, -1000, -1000, 22290, 1703, -1000, 601,
	596, -1000, -1000, -1000, -1000, 3143, 8020, 8020, 43855, 43855,
	43855, 8020, 6092, -158, -1000, 8020, 8020, -209, -1000, -1000,
	116791, -1000, -1000, -1000, 117865, -1000, 17393, 1985, -1000, 114022,
	-1000, 29639, -1000, -1000, 43855, 43855, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 47775, 2739, 595, 62313, -1000, -1000,
	356, 1013, 43855, 45535, 2781, 1013, 1013, -1000, -160, -1000,
	-1000, -1000, 3390, 18, -1000, -1000, 3460, 22290, -1000, 70918,
	809, -1000, 3459, -1000, -1000, -1000, -1000, -1000, 2613, -1000,
	-1000, -1000, 2369, -1000, 1157, -1000, -1000, 106585, -1000, 106585,
	-1000, 22290, 106585, 2664, 2229, -1000, 956, 2423, 591, 47775,
	86373, 928, -1000, 3338, 2677, -163, -1000, 106585, 43855, 106585,
	-168, -170, 2210, -1000, -1000, 2206, 43855, -1000, 62313, 580,
	2163, 2163, -171, -176, -1000, -1000, -1000, 43855, 1153, 106585,
	30759, -1000, 3458, 3130, -1000, -1000, -1000, -1000, 106585, 43855,
	1150, -1000, -1000, -1000, 3421, 2163, 22290, -1000, 2163, 2163,
	3186, 1116, 106585, 86373, -1000, 2246, 2246, 70918, 54273, -1000,
	-142, 994, 3306, 2575, 3457, -1000, -1000, -1000, -1000, 2417,
	-1000, -1000, 106585, 2414, 971, -1000, -183, -1000, 864, 863,
	73040, 966, 955, -1000, -1000, -1000, -1000, 534, 3305, -1000,
	3420, 579, 106585, 2151, 576, 22290, 3116, 854, 71984, -1000,
	3024, 1773, -1000, 2220, 106585, 3113, -1000, 2472, 574, -1000,
	970, 568, 567, 3105, 3105, -188, 52119, 52119, -189, 566,
	970, -1000, -196, -1000, -1000, -1000, -1000, -148, -1000, 889,
	883, -1000, -1000, 86373, 86373, 43855, 43855, -1000, 8020, 8020,
	8020, -1000, 330, -1000, -1000, 2065, 3217, -1000, -157, 113642,
	113601, 530, 47775, 62313, -199, -1000, -1000, 106585, 117865, -177,
	-1000, 117865, 565, 564, 477, -1000, -1000, -1000, 553, -1000,
	-1000, 3456, -1000, 106585, -1000, 106585, -1000, 1753, -1000, -1000,
	-1000, 106585, 2232, -1000, -1000, 1081, 43855, 6911, 563, 43855,
	-1000, 3304, -1000, 2565, 2717, 1791, 52119, -1000, 3143, -1000,
	113384, -1000, 1078, 1847, -1000, -1000, 117865, 3186, 52119, -1000,
	-1000, 560, 557, 117865, 554, 856, 2728, -1000, -1000, -1000,
	-1000, 117865, 551, 3279, -1000, -1000, -1000, -1000, 2163, 86373,
	-1000, -1000, -1000, -204, -1000, -1000, 1858, 99, 1962, 2611,
	-1000, 2149, 549, -1000, -1000, 2127, 2471, -1000, 94331, 30199,
	30199, 322, 3302, 955, -1000, 3388, -1000, 3301, 99, -1000,
	52119, -1000, 86373, 52119, 2148, 1891, 2366, 71984, -1000, 2394,
	-1000, -1000, -207, 106585, 1773, -1000, -1000, 70918, 70918, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1078, -222, -223, -1000, 70918, -1000, -1000, 2255, -1000, 106585,
	-1000, 106585, -1000, -1000, -224, -225, -1000, 2080, 43855, 29639,
	-1000, -1000, 530, -231, -1000, -202, -1000, 3290, 45535, 3455,
	3451, 3449, -1000, -1000, -1000, -1000, -1000, -1000, 2907, 2642,
	113019, 2349, 106585, 112970, -1000, 2707, -1000, -1000, 2575, 540,
	-1000, -1000, -1000, -1000, 925, 106585, 2575, 2641, 86373, 1080,
	-233, 1975, 1975, 43855, 29079, 2020, 43855, -1000, -1000, 3186,
	-1000, 2682, 3389, -1000, 966, -1000, 1992, 106585, -1000, 3177,
	-1000, 3075, -1000, -1000, -1000, 2579, 99, -1000, -1000, 99,
	-1000, -234, 1079, -240, 86373, 1462, 854, 854, -1000, 2397,
	1021, -1000, -1000, -245, -251, 1791, 1078, 967, -253, -1000,
	-256, -258, -1000, -1000, 320, 44975, 44975, 44975, -209, -246,
	-1000, 106585, 539, -1000, -1000, -1000, -1000, 2884, 992, -1000,
	2133, 1843, 309, 1093, -1000, -1000, 1962, 106585, -1000, -1000,
	-1000, 988, 534, -1000, 43855, 1078, -261, -1000, 1062, -264,
	-1000, 1059, -267, -1000, 2718, -1000, -269, 2163, 983, 3261,
	-1000, -1000, -1000, 2127, 86373, -272, -1000, -1000, 2204, -1000,
	2575, 971, -1000, 1078, 531, 1791, 517, -1000, -1000, 106585,
	1392, 3116, 3033, 970, 970, 2575, 1791, 1021, 515, 970,
	-1000, -1000, -1000, 2935, -1000, 48895, 2134, 1698, 116067, 2935,
	2935, -1000, -1000, 106585, 3247, -1000, 2141, 2139, 1488, -1000,
	-1000, -1000, -1000, -1000, -1000, 2677, -278, 3240, 2349, 117865,
	2575, -1000, 1975, 2610, -1000, 1975, 2704, -1000, 1981, -1000,
	-1000, -1000, 1677, 3369, -1000, 508, -1000, 106585, 1685, 1669,
	3446, 1962, 2127, 1791, 52119, 2575, 52119, -1000, -247, -1000,
	1891, 1298, -1000, -1000, 1962, 2575, -1000, -1000, -1000, 1668,
	3333, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 853,
	-1000, 3055, -1000, 1103, 2003, 2003, 1021, -1000, 852, 2133,
	-1000, -1000, 506, -1000, 498, -1000, 2069, -1000, -1000, 106585,
	-1000, -1000, 3441, -1000, 966, -1000, 2575, -284, 1962, -286,
	1462, -1000, 1528, 967, 1962, 1697, -1000, -1000, 2047, 44415,
	43855, -1000, 3365, -1000, -1000, 2418, -1000, -1000, 43855, 2677,
	43855, 43855, 58060, -289, -1000, 2127, 1962, 1078, 967, 1791,
	-1000, 59649, 1021, 967, -1000, -1000, -1000, 117865, -1000, -1000,
	-1000, 117865, -1000, -297, -299, -298, 93798, 2160, -1000, 967,
	1791, 1021, 2575, -270, -1000, 1021, 1962, 1144, -302, -1000,
	-1000, -1000, 1021, 2575, -1000, 1962, -1000, -1000, -1000, 496,
	-1000, -1000, 1962, 967, 43855, 967, 1021, -305, 1021, -1000,
	1962, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4272, 4270, 4269, 4266, 4265, 4264, 4263, 4262, 4258,
	4257, 4256, 4255, 4253, 4248, 4243, 4242, 4240, 4239, 4238,
	4237, 4236, 4234, 4231, 4228, 4227, 4224, 4223, 4219, 4214,
	4213, 4212, 4211, 4210, 4208, 4207, 4206, 4205, 4204, 4203,
	4202, 4198, 4197, 4192, 4191, 4190, 4187, 4183, 4182, 4177,
	4174, 4171, 4166, 4165, 4164, 4162, 4161, 4160, 47, 4159,
	4157, 4156, 4155, 4153, 4152, 4149, 4148, 4147, 4145, 4144,
	4142, 4139, 4138, 4137, 4135, 4133, 4132, 4128, 51, 4127,
	253, 4125, 4122, 4120, 4119, 4118, 4117, 4116, 4114, 4113,
	4112, 4111, 4110, 249, 4106, 105, 4105, 4104, 4101, 4098,
	4097, 248, 4096, 4093, 4091, 4090, 257, 4089, 4086, 4085,
	4084, 4083, 4082, 4081, 4079, 4078, 4076, 4075, 109, 143,
	4074, 4072, 2501, 4071, 4070, 4069, 4066, 4061, 4060, 4056,
	4054, 4053, 4052, 224, 4050, 246, 4046, 4041, 4040, 4033,
	4031, 4021, 4020, 4019, 4016, 4015, 4014, 4010, 4006, 4005,
	4004, 4003, 4002, 4001, 3999, 3998, 3997, 3996, 3994, 3992,
	3982, 3980, 3979, 3977, 3976, 3975, 3974, 3973, 3972, 3971,
	3968, 255, 177, 3967, 3966, 245, 244, 3961, 3960, 3959,
	3958, 3957, 117, 7, 46, 3956, 3955, 87, 76, 78,
	88, 94, 90, 3954, 101, 3953, 118, 57, 3952, 13,
	3, 145, 220, 10103, 213, 3951, 3950, 3947, 229, 171,
	3946, 217, 3945, 3936, 3935, 3934, 54, 40, 164, 159,
	149, 156, 282, 3925, 3919, 84, 71, 41, 36, 17,
	70, 3917, 236, 11, 96, 31, 3916, 3915, 3914, 3913,
	3164, 115, 3912, 242, 222, 147, 3911, 3910, 3908, 299,
	3906, 3905, 52, 3903, 99, 73, 120, 24, 112, 3901,
	132, 28, 3900, 153, 53, 3898, 135, 92, 81, 8074,
	9024, 3895, 116, 55, 119, 613, 152, 142, 182, 180,
	155, 157, 181, 188, 187, 163, 22, 3894, 233, 3893,
	3305, 67, 169, 3892, 3889, 3888, 77, 183, 100, 3885,
	3884, 63, 10, 4, 1, 154, 18, 110, 42, 25,
	3883, 23, 3881, 3880, 3873, 3866, 3864, 39, 144, 3863,
	256, 3862, 66, 49, 30, 3856, 60, 197, 3853, 206,
	127, 3851, 3849, 234, 191, 166, 3848, 68, 211, 3845,
	3842, 3841, 3837, 3836, 125, 2, 121, 3833, 3832, 129,
	3831, 45, 227, 179, 3830, 50, 3828, 3823, 158, 95,
	122, 254, 123, 202, 106, 201, 168, 209, 3814, 3812,
	3811, 199, 3808, 3806, 200, 133, 3805, 3804, 230, 260,
	83, 38, 75, 214, 69, 178, 160, 3802, 189, 3798,
	3795, 258, 161, 194, 5, 15, 86, 113, 3794, 9,
	212, 134, 210, 97, 3790, 6009, 2351, 2199, 3786, 3783,
	151, 107, 65, 111, 136, 241, 64, 3781, 3780, 2395,
	3779, 3775, 3774, 3773, 170, 3772, 3771, 3768, 141, 138,
	175, 3767, 82, 59, 43, 19, 108, 232, 243, 104,
	205, 165, 235, 3765, 3763, 3762, 176, 3761, 72, 162,
	3760, 185, 231, 3759, 3756, 140, 3755, 137, 1779, 58,
	131, 3754, 204, 3752, 3750, 3748, 3747, 3746, 3744, 3740,
	1675, 215, 3739, 3737, 3735, 29, 174, 3734, 238, 150,
	148, 91, 48, 3729, 80, 3758, 3727, 614, 130, 62,
	237, 114, 239, 3726, 2138, 61, 190, 0, 11582, 5413,
	9253, 11087, 3724, 4383, 3723, 3722, 3721, 195, 128, 3719,
	3715, 3714, 93, 3710, 79, 3701, 3700, 56, 3698, 27,
	12, 14, 26, 21, 218, 172, 3697, 3693, 16, 124,
	102, 3692, 251, 208, 3691, 3690, 3688, 3685, 85, 3677,
	34, 3675, 32, 3674, 3672, 35, 8, 37, 3669, 3668,
	219, 3666, 198, 221, 3664, 146, 3661, 3304, 126, 3660,
	3655, 228, 89, 3654, 266, 3653, 3261, 3652, 3651, 20,
	3648, 3645, 223, 167, 192, 3644, 3642, 139, 3640, 3639,
	3638, 264, 3636, 3634, 33, 3633, 6, 3632, 3631, 186,
	3143, 3630, 3629, 44, 3628, 173,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 11,
	11, 7, 7, 7, 8, 8, 8, 8, 45, 45,
	9, 9, 9, 9, 9, 9, 9, 9, 33, 29,
	30, 31, 496, 496, 10, 10, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 16, 16, 34, 34, 17,
	17, 36, 36, 18, 18, 37, 37, 561, 561, 21,
	39, 22, 40, 15, 562, 562, 562, 562, 32, 23,
	41, 26, 26, 26, 26, 26, 185, 185, 185, 185,
	20, 20, 35, 35, 219, 219, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 560, 560, 221, 221, 220, 215, 215, 563, 563,
	222, 222, 222, 224, 224, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 459, 459, 459, 492, 492, 491,
	491, 491, 490, 490, 576, 576, 577, 577, 577, 577,
	577, 121, 121, 357, 357, 357, 47, 47, 47, 47,
	47, 555, 555, 187, 187, 187, 189, 189, 188, 188,
	188, 188, 69, 69, 568, 568, 569, 569, 567, 570,
	570, 570, 186, 186, 186, 117, 117, 117, 117, 118,
	118, 119, 119, 190, 190, 190, 192, 192, 191, 191,
	191, 191, 191, 191, 191, 191, 196, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 97, 97, 494, 494,
	495, 495, 181, 181, 182, 182, 182, 182, 183, 183,
	184, 184, 184, 61, 193, 193, 195, 195, 194, 194,
	49, 49, 49, 49, 49, 49, 49, 50, 50, 50,
	50, 50, 51, 51, 51, 51, 51, 51, 52, 52,
	52, 52, 52, 52, 59, 59, 59, 59, 172, 172,
	62, 62, 62, 62, 62, 62, 62, 62, 62, 62,
	62, 66, 66, 66, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 579, 579, 580, 580, 581, 581, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 582, 582,
	582, 582, 582, 582, 582, 582, 582, 582, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 75, 75, 319, 319,
	289, 289, 76, 76, 76, 77, 77, 78, 78, 63,
	63, 553, 553, 334, 334, 450, 450, 80, 80, 356,
	356, 81, 81, 81, 81, 81, 81, 82, 82, 82,
	82, 82, 82, 82, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 90, 90,
	90, 90, 90, 91, 91, 91, 88, 88, 88, 85,
	85, 85, 84, 84, 84, 89, 89, 89, 552, 278,
	278, 87, 87, 87, 86, 86, 86, 335, 335, 92,
	92, 92, 92, 290, 93, 93, 93, 93, 93, 93,
	93, 93, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 95, 95,
	95, 95, 95, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 452, 452, 94, 94, 94,
	417, 417, 98, 98, 98, 372, 372, 99, 99, 99,
	99, 99, 100, 100, 100, 100, 100, 100, 120, 120,
	120, 120, 120, 120, 557, 557, 327, 327, 243, 243,
	243, 243, 110, 110, 110, 110, 111, 111, 111, 112,
	112, 177, 177, 127, 127, 127, 127, 127, 126, 126,
	126, 126, 126, 126, 53, 53, 53, 54, 54, 55,
	55, 56, 56, 57, 57, 58, 58, 58, 58, 58,
	129, 129, 573, 573, 131, 128, 128, 128, 130, 130,
	130, 130, 132, 133, 133, 133, 133, 133, 133, 133,
	133, 134, 134, 484, 484, 343, 343, 482, 482, 504,
	504, 483, 483, 294, 294, 294, 294, 294, 295, 295,
	295, 493, 493, 493, 493, 493, 493, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 178, 178, 179, 180, 180, 180,
	180, 180, 157, 157, 157, 171, 171, 171, 171, 171,
	171, 171, 160, 160, 160, 145, 145, 136, 136, 136,
	136, 136, 136, 136, 140, 140, 140, 140, 140, 140,
	140, 140, 137, 137, 147, 147, 147, 147, 147, 141,
	141, 142, 142, 167, 167, 144, 144, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 138, 138, 138, 138,
	149, 149, 149, 149, 379, 379, 379, 148, 148, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 170, 170,
	170, 170, 170, 170, 571, 571, 572, 572, 164, 164,
	164, 164, 164, 164, 431, 431, 158, 158, 158, 158,
	163, 163, 163, 163, 166, 166, 166, 166, 362, 362,
	155, 155, 155, 156, 156, 156, 161, 161, 162, 159,
	159, 165, 165, 165, 165, 139, 139, 139, 583, 583,
	583, 168, 168, 154, 154, 169, 169, 169, 169, 169,
	169, 169, 169, 151, 151, 151, 150, 150, 150, 150,
	153, 153, 152, 143, 554, 554, 550, 550, 550, 550,
	550, 550, 550, 550, 551, 551, 551, 551, 556, 556,
	103, 103, 103, 103, 103, 113, 113, 113, 113, 113,
	104, 104, 104, 104, 104, 106, 106, 105, 105, 105,
	105, 70, 70, 70, 70, 70, 14, 14, 14, 71,
	71, 199, 199, 199, 308, 308, 200, 200, 302, 302,
	302, 302, 197, 197, 198, 198, 72, 72, 584, 584,
	584, 564, 564, 564, 565, 565, 565, 565, 565, 565,
	296, 296, 297, 297, 397, 397, 397, 397, 397, 300,
	300, 300, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 303, 303, 223, 223, 223, 306, 307, 307, 304,
	304, 305, 305, 305, 310, 310, 309, 312, 312, 311,
	396, 513, 513, 515, 515, 515, 515, 515, 515, 515,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 380, 380, 585, 585, 511, 511, 511, 512, 507,
	507, 508, 508, 508, 508, 508, 298, 298, 299, 299,
	299, 299, 509, 510, 325, 325, 435, 514, 514, 516,
	516, 518, 586, 586, 586, 586, 586, 586, 587, 587,
	587, 395, 395, 394, 394, 317, 317, 519, 519, 519,
	519, 520, 520, 520, 520, 520, 523, 522, 521, 521,
	521, 521, 521, 74, 74, 74, 359, 359, 358, 358,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 174, 174, 246, 246, 68,
	68, 68, 12, 12, 12, 566, 566, 566, 73, 73,
	73, 73, 73, 73, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 559, 559, 558, 558, 247, 247,
	589, 589, 79, 79, 79, 79, 79, 79, 79, 453,
	453, 454, 454, 67, 67, 67, 67, 67, 381, 381,
	378, 378, 377, 377, 324, 324, 433, 433, 433, 434,
	251, 251, 252, 252, 216, 216, 216, 28, 27, 19,
	19, 24, 24, 25, 25, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 43, 43, 43,
	43, 46, 46, 42, 42, 42, 42, 44, 44, 38,
	38, 574, 574, 575, 575, 109, 109, 114, 114, 114,
	114, 114, 115, 115, 115, 115, 116, 116, 116, 116,
	125, 125, 173, 173, 173, 173, 173, 173, 173, 48,
	48, 48, 48, 60, 60, 60, 60, 123, 591, 591,
	591, 124, 124, 124, 590, 590, 244, 244, 391, 391,
	392, 392, 592, 592, 393, 393, 393, 393, 393, 237,
	236, 238, 238, 239, 239, 65, 65, 65, 229, 229,
	232, 232, 232, 233, 233, 225, 225, 226, 226, 227,
	227, 228, 228, 235, 235, 593, 593, 101, 101, 101,
	176, 176, 288, 288, 288, 388, 388, 388, 318, 318,
	258, 258, 390, 390, 390, 390, 355, 355, 355, 175,
	175, 332, 332, 345, 345, 346, 346, 447, 447, 347,
	107, 107, 108, 108, 122, 122, 203, 203, 201, 201,
	201, 201, 201, 201, 201, 201, 208, 208, 209, 209,
	210, 210, 211, 212, 212, 212, 212, 336, 336, 213,
	213, 213, 202, 202, 202, 204, 204, 204, 204, 204,
	204, 204, 207, 207, 207, 207, 214, 214, 214, 206,
	206, 530, 530, 530, 532, 532, 534, 534, 533, 533,
	529, 529, 531, 531, 588, 588, 361, 361, 361, 315,
	316, 313, 313, 314, 314, 322, 322, 320, 321, 321,
	323, 323, 432, 432, 432, 217, 217, 217, 352, 352,
	352, 352, 353, 353, 384, 384, 382, 382, 382, 382,
	383, 383, 385, 385, 385, 386, 386, 387, 387, 349,
	349, 350, 350, 351, 351, 351, 351, 413, 413, 205,
	205, 205, 329, 329, 329, 330, 330, 403, 403, 403,
	403, 403, 403, 404, 404, 402, 402, 402, 402, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 437, 438,
	438, 331, 331, 439, 389, 389, 548, 548, 548, 549,
	549, 430, 430, 440, 440, 440, 440, 440, 440, 428,
	428, 429, 429, 448, 449, 449, 365, 365, 365, 365,
	363, 363, 366, 366, 366, 366, 364, 364, 441, 441,
	441, 441, 354, 354, 442, 442, 442, 442, 443, 444,
	444, 445, 445, 398, 399, 399, 455, 455, 455, 455,
	457, 328, 328, 328, 328, 328, 506, 505, 505, 456,
	456, 456, 456, 456, 456, 456, 456, 456, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	472, 472, 472, 472, 472, 472, 472, 458, 458, 458,
	458, 458, 462, 462, 462, 461, 461, 461, 461, 461,
	461, 461, 461, 461, 461, 461, 463, 463, 468, 468,
	469, 469, 469, 464, 465, 470, 470, 470, 470, 594,
	594, 474, 474, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 460, 460, 460, 467, 467, 467, 374, 374,
	374, 374, 374, 374, 374, 374, 374, 374, 374, 374,
	374, 373, 373, 375, 375, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 406, 406, 406, 406, 406, 406, 406, 406,
	406, 406, 407, 407, 407, 407, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	408, 524, 524, 524, 524, 524, 524, 524, 524, 409,
	409, 527, 527, 528, 528, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 525, 525,
	525, 525, 525, 525, 525, 525, 525, 525, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 535, 535, 536, 536, 538, 538,
	539, 539, 540, 541, 541, 541, 542, 543, 543, 537,
	537, 544, 544, 544, 544, 545, 545, 546, 546, 546,
	546, 546, 547, 547, 547, 547, 547, 419, 419, 420,
	420, 426, 426, 426, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	248, 248, 248, 248, 248, 341, 341, 339, 339, 339,
	342, 342, 340, 340, 338, 338, 337, 337, 416, 416,
	414, 414, 418, 418, 367, 367, 473, 473, 473, 473,
	473, 473, 473, 473, 368, 368, 368, 376, 369, 369,
	370, 370, 370, 370, 370, 410, 411, 371, 371, 371,
	412, 412, 421, 425, 425, 424, 423, 423, 422, 422,
	400, 400, 401, 401, 348, 348, 595, 595, 344, 344,
	446, 446, 446, 446, 292, 292, 333, 333, 291, 291,
	283, 283, 284, 284, 284, 284, 326, 326, 427, 427,
	475, 475, 476, 476, 477, 477, 478, 478, 479, 480,
	481, 415, 415, 268, 267, 255, 256, 266, 265, 264,
	254, 257, 261, 262, 263, 259, 260, 274, 273, 272,
	230, 231, 279, 280, 280, 282, 282, 281, 281, 270,
	271, 451, 253, 285, 285, 286, 286, 286, 287, 287,
	287, 287, 249, 249, 250, 250, 275, 275, 276, 277,
	277, 269, 269, 269, 240, 240, 240, 241, 241, 242,
	242, 489, 489, 486, 486, 486, 487, 487, 487, 488,
	488, 488, 488, 485, 485, 485, 485, 485, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 498, 498, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 500, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 503, 503,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 1, 3, 1, 1, 1, 3, 4, 6,
	1, 1, 1, 1, 1, 1, 1, 3, 6, 6,
	6, 4, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 5,
	5, 6, 6, 4, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 6, 5, 6, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	3, 2, 1, 1, 3, 1, 3, 2, 2, 0,
	1, 1, 0, 2, 0, 7, 10, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 6, 8, 2, 1,
	3, 1, 3, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 6, 4, 9,
	7, 12, 12, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 7, 2, 0, 1, 2, 3, 1,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 6, 3, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 9, 3, 2,
	0, 2, 2, 2, 2, 2, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 6,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 1, 1,
	3, 4, 6, 3, 3, 5, 3, 1, 3, 2,
	2, 2, 2, 1, 2, 2, 5, 3, 3, 6,
	6, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 6, 4, 7, 7, 7, 2, 6, 4,
	7, 7, 7, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 2, 3, 3, 1, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	2, 2, 5, 7, 3, 3, 3, 4, 4, 6,
	5, 5, 5, 3, 4, 4, 3, 4, 4, 3,
	4, 4, 5, 3, 5, 5, 5, 7, 3, 3,
	3, 2, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 4, 3, 4, 3,
	3, 4, 4, 5, 0, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 3, 4, 10, 10, 3, 5, 5, 5, 3,
	2, 5, 2, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 6, 5, 8, 3, 6, 6, 3, 12,
	15, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 1, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 9, 9, 3, 1, 3, 7, 1, 3, 11,
	3, 2, 0, 3, 1, 2, 2, 3, 2, 6,
	2, 1, 2, 2, 8, 4, 2, 5, 5, 5,
	2, 2, 0, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 10, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 17, 20, 16, 19, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 8, 2, 6, 4, 4, 4,
	5, 3, 3, 4, 3, 6, 4, 6, 7, 8,
	9, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 11, 14, 3, 3, 0,
	3, 4, 2, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 574, -95, -92, -61, -59, -98, -99,
	-81, -100, -94, -120, -125, -107, -108, -109, -121, -127,
	-173, -178, -179, -180, -3, -47, -49, -62, -80, -82,
	-93, -102, -101, -103, -110, -117, -113, -97, -53, -122,
	-126, -135, -174, -175, -176, 33, 32, 101, 81, 152,
	127, 135, 197, 375, 416, 427, 389, 140, 408, 394,
	-130, -131, 444, -48, -60, -124, -123, 74, 128, 403,
	-4, -12, 30, 47, -50, -51, -52, 63, -68, -64,
	-75, -69, -66, -578, 103, -531, -83, -86, -116, -582,
	159, 215, -104, -105, 358, -111, -112, 410, -114, -115,
	412, 160, -55, -54, 154, -201, -203, -128, -129, -177,
	-136, -137, -138, -139, -140, -141, -142, -167, -143, -144,
	-145, -146, -147, -148, -152, -170, -149, -150, -151, -153,
	-154, -159, -155, -156, -157, -158, -160, -161, -163, -164,
	-165, -166, -168, -169, 449, -162, 506, 50, 463, 83,
	144, 420, 21, -5, -6, -7, -8, -9, -10, -11,
	-14, -13, -63, -65, -67, -70, -71, -72, -79, -73,
	-74, -530, -84, -85, -88, -90, -91, -87, -89, 409,
	-204, -202, 571, 521, -16, -21, -22, -17, -18, -20,
	-23, -19, -24, -25, -34, -39, -40, -36, -37, -35,
	-38, -41, -42, -43, -44, -45, -46, -27, -32, -33,
	-28, -29, -30, -31, -15, -26, 540, 549, -207, -205,
	-206, -214, 436, 529, 480, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, -290, 2, -270,
	-275, -276, -277, -269, -240, -500, -503, 4, -497, -501,
	166, 224, 322, 21, 23, 22, 24, 25, 26, 27,
	28, 30, 31, 42, 43, 45, 46, 47, 48, 49,
	50, 54, 56, 60, 61, 62, 63, 64, 65, 69,
	74, 75, 80, 81, 82, 83, 84, 85, 86, 92,
	89, 90, 91, 93, 95, 97, 98, 99, 100, 101,
	102, 104, 105, 106, 108, 109, 117, 118, 119, 120,
	122, 127, 128, 131, 126, 130, 133, 134, 135, 138,
	139, 140, 142, 143, 145, 146, 147, 149, 150, 152,
	153, 154, 157, 155, 488, 156, 158, 159, 160, 161,
	164, 172, 173, 174, 179, 181, 185, 186, 189, 190,
	191, 192, 193, 194, 195, 196, 198, 202, 204, 205,
	206, 207, 208, 214, 215, 217, 218, 219, 220, 225,
	226, 227, 231, 228, 237, 238, 242, 243, 244, 246,
	250, 251, 252, 253, 254, 255, 257, 259, 258, 261,
	264, 265, 268, 272, 273, 277, 278, 274, 279, 280,
	282, 283, 286, 284, 287, 288, 285, 289, 291, 292,
	293, 294, 295, 296, 297, 298, 299, 300, 301, 302,
	290, 305, 303, 307, 308, 309, 320, 318, 313, 314,
	310, 315, 311, 312, 316, 317, 324, 325, 328, 212,
	330, 331, 334, 352, 338, 339, 340, 343, 344, 347,
	350, 351, 353, 354, 355, 356, 357, 358, 359, 360,
	362, 363, 365, 366, 367, 369, 370, 371, 373, 375,
	376, 378, 379, 381, 382, 383, 384, 385, 386, 387,
	389, 391, 390, 392, 394, 396, 397, 398, 403, 408,
	405, 406, 407, 409, 410, 411, 412, 414, 415, 416,
	418, 419, 420, 421, 423, 425, 426, 429, 430, 446,
	447, 465, 427, 428, 431, 432, 433, 434, 435, 439,
	437, 438, 440, 441, 442, 444, 445, 448, 449, 451,
	452, 453, 454, 455, 456, 459, 461, 462, 463, 464,
	466, 469, 470, 471, 472, 467, 479, 474, 476, 477,
	481, 482, 483, 484, 485, 486, 487, 489, 491, 499,
	500, 501, 503, 506, 507, 508, 509, 497, 511, 512,
	515, 516, 517, 520, 518, 519, 521, 523, 526, 527,
	528, 534, 533, 535, 541, 542, 544, 545, 546, 37,
	51, 52, 55, 57, 59, 70, 71, 72, 76, 123,
	124, 151, 162, 163, 175, 187, 188, 199, 201, 209,
	210, 211, 232, 233, 235, 240, 262, 327, 329, 345,
	349, 364, 368, 372, 374, 388, 422, 457, 468, 473,
	492, 493, 494, 495, 502, 504, 529, 530, 531, 536,
	543, -290, 2, -270, 336, -263, 2, -240, -240, 375,
	29, 2, 29, 363, 438, 483, 485, 2, -557, -327,
	2, 29, -243, -240, 103, 197, 436, -263, 2, -557,
	-327, 25, 2, -240, 2, 350, 22, 28, 67, 78,
	99, 138, 161, 182, 185, -581, 352, 382, 425, 440,
	479, 489, 503, 2, 533, 283, 437, 480, 224, 119,
	508, 431, -566, 429, 430, 350, 380, 418, 200, 522,
	-244, 2, 427, -240, 283, 2, 574, 95, 273, 75,
	422, 441, -133, 500, -132, 492, 431, -134, -484, 2,
	305, -240, 574, 574, 574, 29, -253, -240, 480, 224,
	431, 119, 477, 574, 2, 480, 355, 533, 437, 119,
	385, 224, 508, 431, -566, 283, -555, 2, -550, 4,
	-501, -497, -284, -283, 480, 486, 119, -277, -269, 564,
	-276, 574, 574, 574, 2, 243, 244, 384, 383, 441,
	442, 574, 574, 574, 574, 429, 2, 161, 22, 28,
	67, 94, 99, 125, 182, 185, 341, -579, 352, 382,
	440, 479, 482, 489, 503, -565, 464, 69, 431, -564,
	-566, 283, 508, 138, -377, 119, 273, 196, 516, 485,
	483, 514, 131, 231, 519, 518, 574, 574, -95, 2,
	571, 33, 32, 140, 444, -196, 480, 236, 2, -240,
	574, 574, 2, 243, 244, 429, 430, 574, 574, 183,
	-550, 2, 574, 574, 2, 243, 244, 429, 430, 236,
	2, 69, 433, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 2, -171, 441, 464,
	206, 48, 47, 75, 29, 381, 80, 356, 120, 146,
	509, 198, 224, 225, 251, 94, 95, -379, 45, 244,
	243, 430, -571, 429, -431, 481, 432, 438, 476, 255,
	427, 500, 103, 523, 419, 546, 385, 386, 398, 274,
	155, 4, 119, 305, 443, 492, 273, 426, 359, 85,
	574, -588, 2, 480, -590, 2, 500, 500, 2, -590,
	2, -590, 2, -590, 2, -591, 500, 543, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 574, -202, -204, -203, 574, 574,
	574, 574, 574, 574, 574, -171, 441, 2, 75, 29,
	-320, -322, 513, 234, 148, 342, -201, -203, 2, -530,
	-482, 2, -405, -504, -407, 562, 563, 555, 478, 68,
	321, 547, -419, 125, 514, 336, -503, -408, -421, 151,
	422, -342, 8, 9, 5, 6, 7, -249, -409, -415,
	505, 165, 326, -287, 575, 10, 571, -527, -203, -420,
	38, 201, 66, -486, -286, -250, -458, 235, -285, -269,
	-524, -525, 4, -497, -498, -487, -461, -469, -465, -466,
	-472, -240, -500, 78, 111, 112, 110, 115, 114, 276,
	275, 116, 113, 443, 522, 67, 37, 209, 210, 240,
	327, 211, 76, -526, 139, -499, 232, 233, 457, 52,
	388, 175, 124, 123, 329, 57, 55, 530, -470, 121,
	492, 493, 494, 495, 187, 188, 59, 162, 163, 349,
	372, 473, 502, 504, 199, 262, 44, 107, 184, 230,
	213, 239, 241, 245, 263, 266, 306, 319, 323, 346,
	348, 417, 450, -594, 531, 468, 70, 71, -532, 390,
	-533, -263, -532, 574, 574, 576, 574, -313, -315, -316,
	2, 29, 136, 571, 2, -436, 2, -437, -441, -203,
	256, -440, 571, -438, 569, -270, 337, -528, 423, -524,
	-525, -249, -269, -286, 4, -497, -499, 573, -317, 571,
	119, 480, 79, 224, -372, 571, -240, 29, 336, 496,
	576, -314, 379, -417, 571, 336, 183, 339, 61, 287,
	2, 2, 2, 2, 2, 209, -240, 480, 118, 2,
	254, 2, 2, 2, 2, 2, 2, 2, -335, 209,
	2, -270, 533, -335, 209, 2, -335, 209, 2, -378,
	2, 88, -254, 209, 2, -240, -278, 209, 2, -273,
	-275, -282, 209, 2, -280, -240, -495, 209, 2, -494,
	-489, 10, -488, 5, 4, -497, -501, -498, -500, 78,
	-405, 2, -122, 2, 61, -240, 533, 2, 2, 446,
	2, 571, -133, 72, 500, 44, 441, -392, 2, -393,
	-236, -237, -238, -448, -239, 242, 378, 387, 550, 129,
	321, 546, -482, -573, 183, 554, 496, -482, -343, 573,
	2, 2, 2, 2, 2, 2, -441, 209, -270, 2,
	-267, -485, 4, -497, -501, -498, -502, 29, 32, 33,
	34, 36, 38, 39, 40, 41, 58, 66, 67, 73,
	77, 79, 88, 94, 103, 110, 111, 113, 112, 114,
	115, 116, 125, 129, 132, 136, 137, 141, 144, 148,
	165, 167, 180, 182, 183, 197, 200, 203, 216, 229,
	234, 236, 256, 260, 267, 275, 276, 321, 326, 332,
	336, 337, 341, 342, 361, 377, 393, 413, 436, 443,
	460, 475, 480, 490, 496, 498, 505, 513, 514, 522,
	524, 532, 537, 538, 539, 540, -503, 2, -441, 209,
	2, -272, 209, -441, -275, 2, -254, 2, -266, -485,
	2, -291, 209, -270, -271, -275, -273, 2, -280, 2,
	-494, 209, 2, 533, 236, 496, 576, -333, -283, -284,
	-481, 8, -326, -240, 573, -405, 2, -122, -106, 2,
	180, -405, 209, 2, -122, 209, 2, -405, 209, 2,
	-122, 209, 2, -568, 2, -494, 209, -240, 2, 287,
	2, 2, 503, 2, 99, 480, 118, 2, 407, -580,
	425, 507, 2, 2, 2, 2, 2, 2, 2, 480,
	-259, 2, -240, 180, -280, 209, -281, 2, 437, -589,
	390, -494, 209, 2, 533, -273, 2, -273, 224, 238,
	-254, 209, 2, 485, 483, 485, 483, 183, 2, 236,
	2, 236, 2, -442, 2, -443, -437, -444, 569, 337,
	-452, 2, -451, -488, 529, -95, 571, -95, 571, 441,
	571, -494, -270, -270, -405, 2, -122, -106, 2, -405,
	2, -122, 2, -119, -118, -494, 571, 183, -405, 2,
	-122, -106, 2, -405, 2, -122, 2, -196, 180, 2,
	119, 480, -171, 2, 180, 524, 2, 8, 2, 216,
	-494, 432, 386, 172, 2, 446, 2, 447, 75, -379,
	546, 75, 183, 2, 183, 2, -362, 2, 540, 2,
	2, -554, 2, 336, 183, 2, 183, 2, 183, 2,
	183, 2, 183, 2, 383, 442, 501, 244, 2, -122,
	537, -106, -405, 537, 2, -572, 180, 430, -405, 2,
	499, 253, 156, 183, -362, 2, 183, 2, 183, 2,
	5, 2, 384, 465, 2, 242, 378, 465, 2, -270,
	-583, 2, 480, 533, 437, 2, 2, 89, 90, 183,
	2, 183, 2, 183, 183, 546, 2, -354, -441, -391,
	-392, -391, 496, -320, -322, -171, 446, 2, -208, -352,
	-210, 180, -382, -383, -211, 267, 167, 332, -212, -361,
	29, 136, -361, -361, 61, 572, 572, 11, 12, 77,
	42, 562, 563, 564, 565, 178, 566, 567, 560, 561,
	559, 552, 553, 557, 248, 249, 96, 556, 554, 87,
	281, 424, 168, 169, 170, 171, 404, 222, 35, 223,
	14, 15, 16, 34, 341, 266, 547, 213, 450, 555,
	17, 18, 19, 239, 241, 323, 51, 216, -248, -293,
	-405, -405, -405, -405, -405, -405, -405, 348, 571, -348,
	-400, 569, -203, 571, 571, 571, -481, -203, -405, -419,
	572, -340, 571, -203, -419, -414, 571, 422, 569, 571,
	-422, -405, 5, 5, 5, 571, 573, -535, 541, 180,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 571, 571, 571, 374, -463, 571, -462, 571,
	-462, -462, 534, -460, 571, 549, 542, 571, -460, 571,
	571, 571, 571, 571, 571, 571, 571, 571, 571, 571,
	571, 571, 534, 576, -532, -317, 571, -344, -446, -405,
	564, -344, -344, 336, -337, -405, 107, -365, 245, 306,
	184, 263, 417, 230, -402, 575, -402, -430, 549, -203,
	-438, -269, -203, -440, 571, -436, -430, -96, -481, -80,
	-93, -101, -122, -135, -175, -176, 564, -270, 571, 183,
	571, 573, -485, 183, -326, -254, -270, -285, -286, -291,
	135, -337, -550, 508, 431, -326, -243, 39, -416, -455,
	-456, -506, 575, -505, -458, -468, -464, -467, 364, 368,
	-487, 55, 530, -470, 235, 4, -497, -499, 232, 233,
	457, 52, 388, 175, 124, 123, 329, 57, 492, 493,
	494, 495, 187, 188, 59, 531, 468, 70, 71, -550,
	508, 431, -326, 180, -492, 2, -491, -490, 116, 443,
	-488, 5, 2, 151, 2, 2, 2, -240, -222, 576,
	65, 411, 151, -335, 209, -222, 151, -222, 151, -292,
	209, -291, -222, 151, -222, 576, 151, -222, 576, 151,
	573, 576, 151, -492, 2, -378, -484, -337, 39, -392,
	2, 125, -490, -592, 576, 265, -295, 280, 320, 205,
	337, 544, 330, 129, -493, 5, 4, -415, -427, 125,
	273, 235, -475, -477, 8, -476, 9, -478, 562, 563,
	-483, -482, 109, 573, -485, -219, 405, 444, -218, 24,
	30, 140, 226, 309, 527, 157, -305, 227, 351, 355,
	151, 321, 461, 517, -561, -562, 428, 487, 488, 91,
	330, 444, 405, 151, -358, -360, 39, 117, 309, 350,
	62, 219, 285, 286, 463, 536, 151, 444, 405, 351,
	24, 140, -232, -562, 100, 405, 474, -562, -221, 461,
	517, -561, -562, 428, 405, -220, -305, 151, 575, 24,
	405, 444, 351, -576, -577, 140, 30, 405, 351, -558,
	-529, 540, 151, -441, 209, -569, -118, 257, 5, 10,
	-118, -333, 576, 576, -485, 564, 430, 429, 151, 151,
	151, 151, 180, 321, 2, 2, 2, 2, 2, 185,
	-564, -581, 2, 2, -270, 209, -319, 336, -553, -334,
	480, -270, 321, 44, -272, 209, 2, -275, 533, -558,
	321, -274, 209, -270, 39, 571, 2, -378, 2, 224,
	-529, 321, -442, -288, -270, -437, -288, 444, -263, 39,
	-402, -270, 572, 576, -452, -452, -494, -184, 540, 183,
	103, 571, 571, -196, -449, 576, -448, -495, -119, -494,
	-494, -553, -254, 2, -270, 2, 480, 246, -494, -184,
	216, -494, -494, -494, -484, 29, 447, 2, 383, 442,
	501, 90, 447, 2, -270, 480, 119, 224, 81, -556,
	180, -551, 418, 431, 508, -550, -270, 119, -270, 119,
	-270, 119, -270, -270, 2, 2, 2, 2, 2, 86,
	86, 2, 47, -572, 180, 2, 499, 2, 499, 2,
	-240, -240, -240, 464, 265, -270, 180, 480, 224, 480,
	224, 119, 119, 480, -222, 576, -244, -208, -352, -484,
	-353, -352, -209, -208, -211, 180, 387, 518, 309, 448,
	250, -383, -382, 29, -405, -387, 174, 308, -405, -385,
	-407, 562, 563, -476, -478, -336, 330, -202, -202, -202,
	-323, -432, -405, 377, 224, -457, -455, -455, -268, -485,
	492, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, -405, -405, -405, -405,
	-405, -405, -405, -405, -405, -405, 266, 213, 450, 51,
	216, -405, 496, -405, -405, -405, -405, 303, 321, 326,
	505, 165, 515, 136, 330, -595, 475, 41, -412, -203,
	-341, 571, -426, 36, 460, 29, -419, 571, 2, -400,
	-405, -401, -338, -337, -337, 572, 532, 29, 136, 564,
	2, 572, 576, 39, 572, -405, -338, -418, -414, -337,
	-425, -424, 537, -373, -374, 545, 290, 122, 207, 288,
	-375, 435, -479, 8, -485, 564, -536, 173, 200, 571,
	572, 2, 572, 2, 572, -405, 2, 572, -405, 2,
	572, -405, 2, 572, -405, 2, 572, 2, -405, -405,
	-405, -405, -405, -405, -405, -337, 8, -479, -479, 492,
	492, -479, -479, -479, -471, 364, 365, 366, 367, 268,
	269, 270, 271, 368, 369, 370, 371, 295, 296, 297,
	298, 291, 292, 293, 294, 299, 300, 301, 302, 192,
	193, 194, 195, 188, 189, 190, 191, -471, -367, 2,
	-473, -337, 4, 545, 290, 122, 207, 288, 435, 5,
	-367, 2, -368, 2, -405, -337, -369, -406, -407, 562,
	563, 555, -419, -370, 2, -405, -338, -405, 58, 260,
	498, -371, -405, 183, -337, -337, 2, -337, 2, -533,
	39, -337, -329, 576, 183, 39, 4, -329, -329, 571,
	572, 576, -366, 204, 284, 279, -366, -436, -365, 245,
	-363, 346, -363, -363, -430, -255, 569, 577, -485, -430,
	-429, -428, 39, -263, 343, -430, -430, 573, 572, -429,
	570, -548, 571, 574, 574, 574, 574, 574, -270, 571,
	-337, -485, 573, 466, 572, 239, 239, 239, 239, 423,
	572, 496, -552, -278, -282, 540, -95, 338, 572, 576,
	-328, 38, 569, 573, -479, 2, 2, -474, 534, 571,
	571, -374, 571, 183, -552, -282, -327, 576, 496, -240,
	2, -270, -335, -222, 151, -335, -335, -222, 576, 151,
	-254, -273, -278, -280, -282, -240, -494, -495, -222, -274,
	-573, 572, 500, -393, -294, 387, 459, 406, 439, 477,
	8, 9, 8, 9, 576, -485, 576, -574, 94, 496,
	79, 431, -234, 274, 397, 309, 480, 422, -396, 209,
	79, -507, -257, 94, -508, -240, 73, 514, 377, 182,
	149, -574, 94, 377, -574, 94, 2, 226, 94, 444,
	464, 496, 61, -441, 151, 42, 42, 29, -122, 261,
	183, 546, 480, 224, 431, 496, -441, -360, -455, 117,
	285, 286, 61, -480, -475, 562, 563, -480, 61, -480,
	-480, -480, 540, -272, -441, 431, 496, 496, -496, 396,
	398, -496, 496, 496, 396, 46, 125, 576, 42, 42,
	29, -122, 261, 183, 496, -291, -255, 528, 43, 528,
	496, 43, 431, 496, 576, 43, 43, 496, 496, -559,
	-245, 106, 315, 278, 316, 98, 312, 97, 311, 104,
	313, 105, 314, 535, 324, 64, 310, 289, 317, -246,
	-247, 357, 526, -494, 444, 405, 151, 216, -449, 216,
	-449, -283, -240, 573, -122, -405, -405, -122, -405, -122,
	47, 151, 2, -589, 254, 571, -298, 321, 183, -326,
	-450, 236, 576, -334, 151, -491, -359, -358, 321, -274,
	209, 2, 151, -317, 321, 145, 571, 385, 2, -256,
	209, -241, -240, -378, -225, 484, 151, -356, 524, -388,
	-122, 571, 125, 39, -388, -345, -346, -447, -347, -257,
	571, -263, -402, -95, -451, 572, 572, 572, -183, 340,
	-182, -240, 5, -196, 524, -297, -397, -396, -511, -512,
	-507, 266, 224, 514, 238, 166, -318, -258, -257, 118,
	-190, 540, -118, 572, -449, 216, -184, -184, -449, -449,
	-270, 180, -494, -184, -184, -184, 2, 2, 2, -362,
	-270, -254, -291, -270, -326, -326, -282, -278, -362, -254,
	-362, -254, -362, -254, -122, -405, 2, 441, 180, 180,
	573, -362, 385, 119, 480, 355, 224, -270, -291, -270,
	-291, -254, -254, -270, -441, -353, -209, 337, 250, 448,
	-385, -386, -407, 422, 423, -386, 422, 423, 8, 9,
	8, 9, -213, 452, 325, -335, 576, -216, 40, 132,
	250, -270, 546, 147, -405, -405, 496, -595, 475, -412,
	147, -405, 303, 326, 505, 165, 515, 136, 330, 183,
	571, -406, -406, 572, -339, -405, -405, 570, 579, 572,
	-322, 576, -320, -405, -337, -337, 572, 573, -337, -326,
	570, 570, 576, 572, -423, -424, 141, -405, 496, 496,
	496, 496, 571, 572, 573, -541, 347, 571, 571, -405,
	572, 572, 572, 572, 39, 576, 576, 576, 572, 576,
	576, 576, 572, 572, 572, 576, 572, 546, 546, 572,
	572, 572, 572, 576, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 572, 576,
	572, 183, 572, 572, -376, 361, 572, 11, 12, 562,
	563, 564, 565, 178, 566, 567, 560, 561, 559, 552,
	553, 554, 87, 281, 424, 14, 15, 16, 239, 216,
	-406, -406, -406, 572, -410, -411, 183, 180, 39, -371,
	-371, -371, 572, 183, -337, 572, 572, 571, -534, 283,
	321, 572, -399, -398, 538, -446, -330, 2, -436, -265,
	-485, -399, -399, -337, -405, 245, 245, -364, 524, 336,
	-366, -436, -429, -481, -404, -403, 181, 40, 132, 318,
	212, -429, -263, -317, -429, -429, -485, -430, -430, -428,
	572, -549, -481, 572, -331, -439, -528, -322, 573, -485,
	-193, -529, -172, 5, 326, -172, -172, -172, -326, 496,
	496, 25, 362, -455, 569, 570, 8, -485, 571, -479,
	-479, -479, -326, 183, 183, 183, -491, -491, 2, -222,
	-335, -222, -222, -291, -292, -222, -222, -222, -357, 540,
	-482, -392, 512, 84, 387, 492, -482, -218, 405, -257,
	-257, -270, -279, -240, 196, 397, 26, 397, 265, 265,
	321, -396, 209, -224, 321, -455, -264, -240, 571, -380,
	542, 250, 250, 524, -257, -264, 250, 209, -257, 209,
	-264, 2, -264, -560, 387, 331, -405, -491, 272, 385,
	322, -219, 405, 444, -441, -122, -122, -122, 571, -573,
	524, 135, -270, -291, -270, -279, -274, 444, 405, 319,
	-285, -480, -480, -358, 444, 405, -279, -272, -491, -326,
	-326, 431, -254, 164, 546, -220, -122, -122, -122, 571,
	-255, -221, 405, 5, 209, -257, 5, -240, -257, -279,
	-491, -577, 24, -257, 209, -257, -279, -491, -245, -494,
	326, 520, -558, 431, 496, -441, -118, -187, 540, -118,
	-181, 220, 564, -555, -240, 533, -240, -296, -299, -297,
	-257, -199, -200, 542, 540, 151, -289, -270, 569, -184,
	-494, -270, -280, -281, 151, -317, 321, -494, 39, 151,
	571, 2, 2, 336, 321, -256, 209, -226, 142, -593,
	554, -254, -399, -330, -355, -390, 413, 336, -318, 529,
	-263, -355, -332, 576, 183, 554, 573, -318, -445, 564,
	-95, -95, -184, 576, 571, 554, 554, 571, -494, -494,
	572, 576, -270, -256, 224, 224, -262, -241, 572, 576,
	573, 571, -192, 340, -191, 143, 252, 237, 453, 454,
	455, 456, 134, -190, -119, 183, -56, 540, 480, -184,
	575, -362, -362, -362, 441, 441, -240, -266, -254, -270,
	-267, -291, 180, 180, 518, -386, 337, 277, -432, -217,
	548, -270, 575, -405, -405, 147, 147, -405, -406, -406,
	-405, 147, 183, 571, -405, -416, 34, 34, 572, 576,
	-401, -405, 572, 532, -322, -322, 572, 564, -485, 575,
	572, -414, 144, -405, 490, 290, 207, 288, -375, 288,
	-375, -375, -479, 5, -485, 564, -542, -260, 571, -240,
	538, -321, 342, 572, -457, -455, -405, -405, -405, -405,
	-405, -479, -460, -460, -475, -475, -405, -410, -405, -457,
	-455, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	-406, -406, -406, -406, -406, -406, -406, -406, -406, -406,
	136, 321, 330, -406, -411, -410, -405, -405, -455, 572,
	572, 572, -337, -95, 571, 283, -349, 200, -405, -449,
	576, -349, -349, 572, -436, -436, 571, -405, 245, 570,
	576, 578, 554, -317, 573, -428, -429, 570, 572, 576,
	572, 576, -389, 39, 572, -485, -399, -195, -194, 133,
	54, -326, -326, 339, 5, 8, 569, 570, 573, -479,
	572, 572, 572, -326, -326, -326, -222, -222, 118, 309,
	-405, 496, 496, 61, 496, 42, 319, -230, 422, -240,
	26, 397, 397, 151, 321, 526, -513, -508, 149, -405,
	571, 224, 571, 571, 2, -215, 140, 444, -575, 2,
	524, 151, -222, 151, -222, 544, 571, 571, 496, 431,
	444, 540, -337, -405, -185, 125, -484, -562, 575, -562,
	575, 431, 496, 431, 496, 540, 164, 540, -337, 496,
	-459, 49, 27, 321, -273, 496, 496, -222, 151, 508,
	444, -494, 326, -279, -274, 444, 405, -449, -189, 340,
	-188, 143, 415, 134, 252, -449, -187, 183, 236, -274,
	2, 572, 572, 576, -514, 39, 334, 334, 571, -270,
	-76, 540, -448, -481, 44, -272, 39, 151, -558, -122,
	-274, -453, -454, 5, -270, 151, 336, 321, -227, 259,
	-593, -489, -529, -322, -355, -344, 322, 92, 572, -399,
	-346, -330, -405, 2, 572, -182, -183, -494, -494, -494,
	-184, -196, -196, -397, -300, 571, -256, -241, 571, -196,
	-258, 2, -495, 576, 571, 554, 554, 554, -449, -122,
	340, -270, 564, -362, -307, -306, 355, 330, -307, 422,
	422, 337, 174, 255, -216, -255, -405, -405, 147, 34,
	34, -405, -405, -416, 572, -405, -405, -337, 570, 5,
	-405, 572, 572, 8, -405, 572, 573, -543, -240, -405,
	572, 61, 572, 572, 576, 576, 572, 572, 572, 572,
	572, 572, 572, -411, 183, 136, 330, 571, 572, 572,
	-95, -413, 203, 61, -436, -413, -413, -364, -326, -436,
	-403, -255, 569, -485, -481, -439, 571, 573, -194, 554,
	570, 2, 569, -485, 572, 118, -257, -257, 480, 422,
	319, -230, 422, 265, 26, 26, -396, 151, -515, 94,
	-517, 77, 166, 103, 321, 326, 514, 377, 73, 125,
	393, -585, 39, 551, 572, -324, -433, -528, 571, -240,
	-324, -326, 321, 471, 125, 321, 125, 118, 508, 80,
	-257, -264, -326, -326, -270, -279, -234, 158, 572, 576,
	554, 2, 564, 564, -279, -274, -279, -272, 353, 158,
	572, -255, 5, 5, 151, -252, 77, 5, -257, -257,
	-273, 118, 431, 496, -187, 576, 571, 554, 554, -187,
	-495, -118, -317, -308, 226, -257, -512, -509, -510, 377,
	-516, -518, 166, 377, -122, 2, -198, -197, -240, 5,
	571, -298, 340, 570, -491, -359, -122, -274, -317, 572,
	576, -381, 524, -255, -270, 151, -228, 258, -593, -489,
	-225, -384, -382, 137, 571, 336, -122, -322, 554, 572,
	572, 118, 118, 218, 150, -324, 571, 571, -326, 118,
	572, -191, -192, -494, -118, -494, -190, -57, -58, 224,
	94, 360, -267, 480, 224, 571, 571, -216, -405, -405,
	-405, 572, -322, -485, 564, -537, 355, 572, -432, -405,
	-405, -406, 183, 571, -416, 572, -538, 539, -405, -350,
	-351, -405, 421, 108, 201, -538, -538, 572, -481, 2,
	-494, 569, 2, 216, 265, 496, -396, -264, -268, -261,
	-240, 166, 209, 326, -380, 250, 571, -406, -270, 571,
	2, 31, -586, 129, 229, 572, 576, -434, -251, -240,
	-405, -434, 572, 572, 326, 326, -405, -455, 571, -222,
	-222, 572, 572, -405, 496, -484, 101, -482, 2, -562,
	-254, -405, 496, 5, -222, -268, -222, -222, -252, 508,
	-279, -274, -188, -189, -494, -118, -187, 39, -303, 228,
	2, -514, 250, -261, 250, -584, 540, 572, 576, 554,
	554, -296, -199, -77, -78, 497, -448, -317, 39, 5,
	571, -240, 336, 571, -255, -235, 93, -593, -489, -226,
	-355, 322, -326, 94, -384, -412, -184, 571, 571, -301,
	82, 95, 126, 208, 186, 225, 464, 469, 29, -301,
	572, -324, -324, 572, 571, -184, 572, 576, 29, 571,
	29, 571, -270, -291, -337, -337, 572, -322, 61, 576,
	572, 572, -406, -416, 572, -539, -540, -260, 576, 571,
	571, 445, 570, 2, -230, -230, -517, -261, 321, 524,
	-405, -242, 571, -405, 39, 229, 130, 214, -395, -587,
	102, 472, 217, -433, -216, 572, -394, 524, 393, -252,
	-324, 571, 571, 571, 554, 183, 571, -459, -222, -273,
	572, -567, 391, -122, -304, -305, 216, 571, -302, 336,
	118, 309, -197, -482, -482, 572, 39, -78, 9, 39,
	-122, -324, -270, -324, 336, -229, -496, 267, -489, -227,
	572, -264, -355, -495, -495, -394, 572, 572, -495, -58,
	-326, -326, 572, 572, -544, 385, 423, 202, -337, -323,
	572, 576, 39, -351, 2, 2, 2, 151, 204, 572,
	-519, 282, -240, 572, 130, 214, -303, 571, -217, -434,
	-303, 204, -270, -563, 524, 572, -310, -309, -306, -312,
	-311, -306, -337, -482, 101, 353, -337, -252, -570, 184,
	-569, 5, 10, -199, 353, -325, -435, -257, 83, 118,
	-308, -122, -122, 572, -381, 572, -270, -233, -232, -593,
	-593, -228, -399, 572, 572, -395, -394, -200, 540, 572,
	572, 572, 572, -545, -546, 51, 511, 109, -405, -545,
	-545, -540, -542, 166, 540, -520, -523, -522, 336, 451,
	184, 354, 572, 471, 536, -304, -326, 540, -317, -405,
	-394, 572, 576, 529, 572, 576, 529, 572, 183, 572,
	-222, -186, 540, 47, -302, -270, 572, 576, 376, 131,
	140, -303, -584, -394, 571, -395, 571, -231, -326, -475,
	-235, 137, -184, -184, -303, -395, -399, -184, -547, 149,
	-546, 373, 179, 422, 373, 179, -547, -547, -261, 56,
	-522, 336, -523, 336, 518, 131, -586, 572, 56, -519,
	-303, -309, 216, -311, 183, 353, 429, -569, 31, 571,
	-435, 423, 423, 2, -304, -302, -395, -324, -303, -324,
	-229, 322, 518, -304, -303, 109, 200, 491, 309, 34,
	554, -521, 309, 411, 65, 444, -521, -399, 554, -520,
	571, 571, 340, -326, 2, -199, -303, 572, -304, 572,
	-233, 444, -200, -304, 422, 344, -546, -405, 23, 326,
	125, -405, -586, -337, -337, -183, 571, 572, -302, -304,
	-394, -200, -395, -345, -399, -200, 572, 572, -183, -223,
	65, 411, -200, -395, -399, -303, -399, -399, -304, 496,
	572, -399, -303, -304, 571, -304, -200, -337, -200, -399,
	572, -399, -304,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 502, 503, 505, 506, 507, 509,
	510, 512, 514, 516, 517, 518, 520, 521, 523, 524,
	525, 526, 527, 529, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	593, 595, 0, 1252, 1254, 1256, 1258, 0, 736, 0,
	36, 37, 0, -2, 300, 302, 304, 0, 330, 332,
	333, 335, 337, 339, -2, 0, 437, 438, 440, 442,
	-2, 0, 910, 912, 0, 582, 584, 0, 915, 917,
	0, 0, 604, 605, 0, 1354, -2, 598, 600, 602,
	667, 669, 671, 673, 675, 677, 679, 681, 683, 684,
	686, 688, 690, 692, 694, 695, 697, 699, 701, 702,
	704, 706, 708, 710, 712, 714, 716, 718, 720, 722,
	724, 726, 728, 730, -2, 732, -2, -2, 0, -2,
	-2, -2, 1270, 40, 42, 44, 46, 48, 50, 52,
	54, 56, 388, 389, 391, 393, 395, 397, 400, 402,
	404, 1412, 444, 446, 448, 450, 452, 454, 456, 0,
	-2, 1426, 0, 0, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 96, 97, 98, 99, 100, 101,
	102, 103, 71, 72, 74, 75, 76, 80, 81, 82,
	83, 84, 85, 86, 94, 69, 0, 0, 1385, 1387,
	1389, 1391, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 504, 508, 511,
	513, 515, 519, 522, 528, 530, 532, 489, 490, 493,
	2089, 2106, 2107, 2108, 2111, 2112, 2113, 2114, 2115, 2116,
	2546, 2627, 2628, 2138, 2139, 2140, 2141, 2142, 2143, 2144,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184,
	2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194,
	2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204,
	2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244,
	2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284,
	2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304,
	2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314,
	2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324,
	2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334,
	2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344,
	2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354,
	2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364,
	2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374,
	2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384,
	2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424,
	2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434,
	2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444,
	2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454,
	2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464,
	2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474,
	2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484,
	2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494,
	2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524,
	2525, 491, 492, 1076, 0, 556, 554, 2074, 557, 2354,
	559, 561, 431, 432, 433, 434, 435, 436, 0, 575,
	567, 1424, 576, 578, 579, 580, 581, 551, 549, 0,
	575, 2142, 573, 1250, 1251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 367, 1125, 1126, 1127,
	1235, 1236, 2397, 1277, 0, 212, 594, -2, -2, -2,
	2511, -2, 626, -2, 633, 2515, 2399, 638, 0, 640,
	-2, 643, 1253, 1255, 1257, 734, 735, 2092, 0, 0,
	0, 0, 0, 38, 39, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 222, -2,
	-2, -2, -2, 0, 0, 2440, 2193, 2042, 2108, 2045,
	2040, 301, 303, 305, 306, 0, 0, 0, 0, 0,
	0, 331, 334, 336, 338, -2, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 969, 961,
	962, 1182, 0, 0, 0, -2, 439, 441, 494, 495,
	0, 1413, 1413, -2, 0, 0, 0, 0, 275, 266,
	911, 913, 914, 0, 0, 0, 0, 583, 585, 0,
	0, 248, 916, 918, 919, 0, 0, 0, 0, 0,
	277, 0, 0, 599, 601, 603, 668, 670, 672, 674,
	676, 678, 680, 682, 685, 687, 689, 691, 693, 696,
	698, 700, 703, 705, 707, 709, 711, 713, 715, 717,
	719, 721, 723, 725, 727, 729, 731, 742, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, -2, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 826, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 890, 892,
	0, 745, 747, 748, 749, 0, 806, 824, 825, 834,
	733, 0, 1116, 1414, 1279, 1260, 1274, 1279, 1262, 1263,
	1264, 1265, 1266, 1271, 1273, 1267, 1268, 1269, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 390, 392, 394,
	396, 398, 401, 403, 405, -2, 1383, 1384, 445, 447,
	449, 451, 453, 455, 457, 586, 0, 588, 0, 746,
	-2, 0, 1418, 1418, 1418, 0, 0, 1384, 1382, 0,
	591, 592, 647, 648, 1685, 0, 0, 0, 0, 0,
	0, 0, 1939, 1771, 0, 649, -2, 1802, 1804, 2486,
	2511, 1938, 1806, 1807, 1808, 1809, 1810, 0, 1812, 1813,
	1814, 1815, 1816, 1817, 0, 1819, 0, 1824, 1825, 1826,
	0, 2493, 2019, 2102, -2, 0, 0, 2499, 2098, 0,
	1905, 1842, -2, -2, 2125, 2104, 1617, 1618, 1619, 1620,
	1621, -2, -2, 2529, 1846, 1847, 1848, 1849, 1850, 1851,
	1852, 1853, 1854, 1855, 1856, 0, 2474, 2494, 2495, 2500,
	2502, 2496, 2483, 1867, 2205, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1644, 1653,
	-2, -2, -2, -2, -2, -2, -2, 2487, 2488, 2505,
	2508, 2514, 2519, 2520, 2492, 2501, 2528, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 1645, -2, -2, -2, -2, 1401, 2367,
	1404, 1076, 1402, 1386, 1388, 0, 1390, 0, 0, 0,
	1395, 1421, 1419, 0, 1470, 1399, 1400, 1488, 1488, 1512,
	0, 1493, 0, 1512, 1413, 1538, 0, 1499, 2389, 1843,
	1844, 0, 2108, 2103, -2, -2, 2526, 0, 0, 0,
	0, 0, 0, 0, 552, 0, 558, 560, 0, 0,
	0, 574, 1423, 0, 0, 0, 0, 0, 0, 0,
	370, 371, 372, 373, 374, 2494, 0, 0, 0, 379,
	0, 381, 382, 383, 384, 385, 386, 387, 182, 2494,
	462, 487, 0, 182, 2494, 465, 182, 2494, 468, 0,
	471, 1180, 182, 2494, 474, 2070, 182, 2494, 477, 479,
	2078, 182, 2494, 483, 2085, 2083, 484, 2494, 486, 280,
	278, 279, 2121, 2122, 2129, 2130, 2131, 2132, 2527, 2529,
	1246, 1247, 1248, 1249, 0, 1276, 1181, 596, 597, 0,
	621, 0, 625, 2482, -2, 0, 2408, -2, 629, 1280,
	1284, 1285, 1286, 1287, 1288, 0, 0, 0, 0, 1293,
	0, 0, 635, 0, 0, 622, 623, 641, 644, 0,
	737, 738, 739, 740, 741, 68, 0, 2494, 1538, 70,
	0, 2064, 2133, 2134, 2135, 2136, 2137, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 73, 0, 2494,
	77, 0, 2494, 0, -2, 87, 0, 95, 0, 2067,
	104, 0, 2494, 0, 2039, -2, 0, 193, 0, 938,
	-2, 2494, 1124, 0, 0, 0, 0, 901, 2036, 2041,
	902, 2060, 903, 2046, 0, 307, 308, 309, 310, 311,
	0, 312, 2494, 314, 315, 0, 317, 318, 2494, 320,
	321, 0, 323, 0, 233, 234, 2494, 342, 343, 0,
	345, 346, 0, 348, 0, 0, 0, 352, -2, 368,
	0, 365, 355, 356, 358, 359, 360, 361, 362, 0,
	409, 407, 2075, 0, -2, 2494, 0, 935, 0, 0,
	1161, -2, 2494, 1121, 0, 1167, 1163, 0, -2, 0,
	1411, 2494, 1297, 965, 966, 967, 968, 1550, 428, 0,
	1319, 0, 1321, 0, 1340, 1544, 1488, 0, 0, 1549,
	0, -2, 545, 2091, -2, 497, 0, 498, 0, -2,
	0, 292, 0, 0, 920, 921, 922, 923, 924, 927,
	928, 929, 930, 1525, 251, 249, 0, 0, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 0, 0, 606,
	0, 0, 743, 744, 0, 0, 754, 755, 756, 0,
	292, 2400, 2363, 2226, 763, 0, 766, 769, -2, 0,
	0, 0, 0, 773, 0, 778, 779, 780, 0, 782,
	784, 909, 786, 0, 0, 788, 0, 792, 0, 795,
	0, 797, 0, 799, -2, -2, -2, -2, 810, -2,
	0, 813, 815, 0, 817, -2, 0, 826, 822, 823,
	0, 0, 0, 0, 842, 843, 0, 852, 0, 855,
	856, 857, 0, 859, 860, 0, 862, 863, 864, 865,
	0, 867, 868, -2, -2, 872, 874, 0, 881, 0,
	885, 0, 889, 0, 0, 750, 751, 182, 1542, 1259,
	-2, 1261, 0, -2, 0, 587, 0, 590, 1443, 1369,
	1366, 0, 1440, 1441, 1370, 0, 0, 0, 1377, 0,
	1416, 1417, 0, 0, 0, 1356, 1357, 0, 0, 0,
	0, 1944, 1945, 1946, 1947, 1948, 1949, 1952, 1953, 1950,
	1951, 1954, 1955, 0, 0, 0, 0, 0, 1956, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1957, 1958, 1959, 0, 0, 1961, 0, 1963, 0, 0,
	0, 0, 0, 0, 1750, 1752, 2027, 0, 0, 1960,
	1690, 1691, 1692, 1693, 1694, 1729, 1730, 0, 0, 1803,
	2024, 2023, 1805, 0, 1975, 0, 1818, -2, 0, 1939,
	1970, 0, 0, 1827, 1828, 1829, 0, 0, 1975, 0,
	0, 2018, 1839, 1840, 1682, 0, 0, 1907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1631, 1630, 0, 1632, 0,
	1633, 1634, 1641, 1654, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 1999, -2, 0, 0,
	0, 0, 1646, 0, 1403, 0, 0, 1474, 2028, 2032,
	2033, 1474, 1474, 0, 0, 1976, 1535, 1535, 0, 0,
	1531, 1531, 1531, 1529, 1512, 0, 1512, 1522, 0, 1512,
	1512, 0, -2, 1493, 0, 0, 1522, 0, 1506, 533,
	535, 537, 539, 540, 541, 543, 1539, 1540, 0, 0,
	0, 0, 2109, 0, 0, 0, 0, 0, 2094, 0,
	0, 0, 0, 2450, 2399, 563, 577, 1413, 0, 1978,
	1565, 1569, 0, 1571, 1572, 1573, 1574, 1575, 0, 0,
	1566, -2, 1642, 1644, 1665, 2126, 2127, 2128, 1625, 1626,
	1627, 1628, 1629, 1637, 1624, 1624, 1624, 1635, 1664, 1656,
	1664, 1660, 1610, 1611, 1612, 1647, 1648, 1649, 1650, 0,
	2450, 2399, 569, 0, 0, 1351, 197, 199, 200, 201,
	202, 203, 369, 0, 376, 377, 378, 0, 458, 0,
	180, 181, 0, 182, 2494, 463, 0, 466, 0, 182,
	2494, 2034, 472, 0, 475, 0, 0, 481, 0, 0,
	0, 0, 0, 182, 1353, 0, 0, 0, 0, -2,
	631, 636, 637, 0, 1282, 0, 1289, 658, 659, 660,
	1291, 1292, 0, 1294, 634, 661, 662, 663, 664, 665,
	666, 0, 2048, 2049, 2050, 2051, 2054, 2055, 0, 0,
	632, 651, 639, 0, 645, 105, 1232, 0, 144, 0,
	1232, 1232, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 140, 117, 118, 0,
	0, 0, 0, 0, 78, 1098, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 1114, 0, 0, 0, 0,
	0, 0, 91, 128, 0, 0, 0, 123, 107, 0,
	0, 0, 130, 142, 0, 173, 175, 0, 0, 0,
	0, 0, 0, 192, 204, 0, 0, 0, 0, 1122,
	0, 1410, 0, 0, 2494, 0, 1525, 2271, -2, -2,
	1525, 900, 0, 0, 2109, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 344, 347, 349, 350, 351, 0,
	1160, 0, 357, 399, 1047, 2494, 0, 0, 426, 421,
	0, 423, 0, 0, 1097, 2494, 1095, 2079, 0, 1119,
	0, 1076, 2494, 2077, 0, 0, 1168, 2118, 1177, 1181,
	1306, 0, 430, 0, 1322, 1324, 0, 0, 1545, 0,
	1547, 1488, 1413, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 255, 0, 1524, 0, 1525, 249,
	292, 292, 1525, 608, 1525, 610, 0, 0, 757, 758,
	0, 292, 292, 292, 764, 765, 767, 768, -2, -2,
	-2, 882, 770, 771, 849, 0, 0, 0, 848, 785,
	0, 894, 2385, 2399, 2450, 907, 849, 2193, 849, 2193,
	849, 2193, 796, 798, 801, 837, 845, 809, 814, 0,
	0, 819, 827, -2, 0, 829, 0, 831, 0, 833,
	849, 850, 853, 858, 861, 866, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 1272, 1443, 1369, 589,
	1360, 1442, 1361, 1368, 1371, 0, 0, 1373, 0, 1375,
	0, 1438, 1439, 1446, 1447, 0, 1457, 1458, 1450, 0,
	-2, 0, 0, 1453, 1454, 1379, 0, 1396, 1397, 1398,
	1427, 1430, 1196, 0, 2627, 1686, 1560, 1687, 1688, 2063,
	0, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703,
	1704, -2, -2, -2, -2, -2, -2, -2, -2, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723,
	-2, -2, -2, 1727, 1728, -2, 1962, 1964, 0, 2027,
	0, -2, 0, -2, -2, -2, -2, 1747, 0, 1749,
	1754, 1756, 1758, 0, 0, 0, 0, 2026, 1768, 2010,
	2011, 0, 0, 1941, 1942, 1943, 1753, 0, 1772, 2025,
	2022, 0, 0, 1974, 1426, 1831, 0, 0, 0, 0,
	1838, 1823, 1972, 0, 1971, 0, 0, 0, 1982, 0,
	2017, 2013, 0, 2061, 1681, 1668, 1669, 1670, 1671, 1672,
	1673, 1683, 0, 2058, 2095, 2101, 1915, 0, 0, 0,
	1868, 1869, 1870, 1871, 1872, 0, 1874, 1875, 0, 1877,
	1878, 0, 1880, 1881, 0, 1883, 1884, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1578, 0, 0, 0, 1582,
	0, 0, 0, 1586, 0, 0, 0, 1590, 0, 0,
	0, 1594, 0, 0, 0, 1598, 0, 0, 0, 1602,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 1887,
	0, 1985, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1889, 0, 1891, 1976, 1996, 0, 0, 1773, 0,
	0, 0, 1939, 0, 1894, 1976, 2004, 0, 0, 0,
	0, 0, 1976, 0, 2009, 0, 1901, 0, 1903, 1405,
	0, 0, 1555, 0, 0, 0, 2031, 1555, 1555, 0,
	1469, 0, 0, 1532, 1533, 1534, 0, 0, 1535, 0,
	1526, 1530, 1527, 1528, 1522, 1485, 0, 0, 2065, 1522,
	1491, 1521, 0, 1076, 1511, 1522, 1522, 0, -2, 1495,
	1512, 0, 0, 534, 536, 538, 542, 544, 0, 0,
	1426, -2, 0, -2, 1075, 0, 0, 0, 0, 553,
	555, 0, 0, 478, 0, 0, 547, 0, 550, 0,
	1556, 1559, 0, 0, 1570, 1576, 1577, 0, -2, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 488, 182, 460, 0, 182, 182, 469, 0, 0,
	182, 480, 182, 2086, 182, 2084, 281, 485, 1352, 215,
	0, 624, 0, 1281, 1290, 0, 655, 0, 657, 0,
	2052, 2056, 2053, 2057, 0, 646, 0, 0, 0, 0,
	1231, 0, 1203, 0, 0, 0, 0, 0, 148, 2494,
	0, 184, 0, 0, 1040, 2071, 0, 1032, 0, 0,
	2212, 0, 0, 0, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 114, 119, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 1100, 1102,
	1109, 1111, 0, 1105, 2059, 0, 0, 1106, 0, 1108,
	1110, 1112, 0, 0, 0, 0, 0, 0, 0, 92,
	93, 0, 0, 0, 0, 0, 1302, 0, 0, 0,
	116, 120, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1156,
	1154, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 0, 0, -2, 0, 0, 0, 0, 225, 0,
	283, 2037, 2047, 0, 925, 926, 313, 316, 319, 322,
	221, 0, 353, 0, 0, 971, 946, 0, 0, 408,
	292, 0, 0, 422, 2088, 933, 1093, 1096, 0, 1076,
	2494, 1133, 0, 0, 0, 0, 0, 0, 1166, 0,
	2494, 2066, 2117, 2118, 1308, 1316, 0, 1555, 0, 1338,
	1325, 0, 0, 0, 1338, 1342, 1343, 1345, 1346, 0,
	0, 1546, 1552, 496, 546, 1413, 1413, 292, 290, 2331,
	288, 285, 287, 0, 0, 0, 972, 974, 975, 976,
	977, 0, 2118, 1032, 2260, 2118, 0, 1328, 1330, 0,
	245, 0, 252, 250, 255, 0, 0, 420, 607, 612,
	752, 0, 292, 760, 761, 762, 803, 839, 847, 772,
	774, 775, 776, 0, 908, 904, 905, 906, 787, 849,
	790, 849, 793, 849, 812, 816, 821, 828, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 886,
	887, 888, 891, 893, 1543, 1364, 1365, 1367, 0, 1376,
	0, 0, 1452, -2, -2, 1451, 1455, 1456, -2, -2,
	-2, -2, 1372, 0, 1381, 1378, 0, 1437, 1194, 1195,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1769,
	0, -2, 1748, 1751, 1755, 1757, 1759, 0, 0, 0,
	0, 0, 0, 1965, 0, 1967, 1770, 2020, 2023, 1937,
	0, 0, 1425, 1426, 1426, 0, 1837, 0, 1973, 0,
	1980, 1981, 0, 1830, 0, 2014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	1873, 1876, 1879, 1882, 0, 0, 0, 0, 1862, 0,
	0, 0, 1866, 1636, 1622, 0, 1664, 1662, 1663, 1657,
	1664, 1661, 1614, 0, 1579, 1580, 1581, 1583, 1584, 1585,
	1587, 1588, 1589, 1591, 1592, 1593, 1595, 1596, 1597, 1599,
	1600, 1601, 1603, 1604, 1605, 1607, 1608, 1609, 1613, 0,
	1886, 0, 1888, 1890, 0, 0, 1892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 1777, 1778, 1893, 2002, 2003, 0, 0, 0, 0,
	0, 0, 1899, 0, 2008, 1900, 1902, 1413, 0, 1406,
	0, 1471, 1460, 1554, 0, 2029, 1525, 1473, 1475, 2030,
	2068, 1460, 1460, 0, 1977, 0, 0, 1516, 0, 0,
	0, 1518, 1489, 0, 0, 1483, 0, 1479, 1480, 1481,
	1482, 1490, 1076, 1520, 1492, 1496, 2095, 0, 1522, 0,
	1507, 0, 1509, 1541, 0, 1501, 1504, 0, 0, 2110,
	1555, 0, 324, 328, 329, 325, 326, 327, 562, 0,
	0, 0, 0, 1979, 0, 1561, 0, 1567, 0, 0,
	0, 0, 568, 0, 0, 0, 198, 1350, 375, 459,
	182, 464, 467, 2035, 182, 473, 476, 482, 211, 0,
	620, -2, 653, 654, 656, 0, 652, 145, 1232, 0,
	0, 1199, 1201, 2082, 1205, 0, 0, 0, 0, 0,
	0, 150, 2494, 159, 0, 1012, 0, 2069, 0, 0,
	0, 0, 0, 0, 1234, 0, 0, 2494, 182, 2494,
	182, 162, 164, 167, 0, 172, 169, 170, 0, 0,
	1003, 106, 1232, 0, 0, 109, 113, 121, 0, 0,
	0, 127, 0, 0, 0, 1217, 1223, 0, 0, 1103,
	1104, 1107, 1113, 79, 0, 0, 1221, 1227, 88, 89,
	90, 0, 1198, 1300, 0, 174, 111, 115, 122, 0,
	1229, 108, 0, 196, 0, 0, 0, 188, 0, 189,
	190, 205, 0, 182, 2494, 0, 936, 937, 1155, 1117,
	1118, 0, 1123, 0, 0, 0, 1525, 217, 0, 1525,
	225, 0, 2043, 0, 341, 0, 0, 0, 0, 970,
	1058, 0, 941, 0, 0, 0, 414, 410, 0, 419,
	425, 424, -2, 0, 0, 0, 0, -2, 0, 0,
	1170, 1164, 1165, 0, 0, 0, 2494, 1310, 1316, 0,
	1315, 1411, 1426, 429, 1317, 1338, 0, 0, 0, 1327,
	1323, 1320, 1555, 0, 0, 0, 0, 0, 1548, 1551,
	499, 500, 267, 0, 0, 0, 0, 0, 292, 0,
	0, 0, 981, 0, 2118, 2118, 0, 2073, 0, 0,
	0, 0, 253, 0, 256, 0, 0, 0, 261, 262,
	263, 264, 265, 246, 1525, 0, 609, 0, 0, 759,
	0, 789, 791, 794, 830, 832, 849, 875, 876, 998,
	0, 998, 0, 0, 1374, 0, 1449, 1380, 1431, 1432,
	0, 1196, 0, 1689, 1732, 0, 0, -2, 0, 0,
	1736, 0, 0, 0, -2, 0, 0, 0, 1966, 1968,
	0, 2022, 1832, 0, 0, 0, 1836, 1820, 1821, 0,
	1940, 1983, 2012, 2016, 0, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 0, 2062, 2096, 2100, 1913, 1914, 1918, 2076,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1655, 1659, 0, 0, 1984, 1995, 1997, 1774,
	1775, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, -2, -2, -2, 1792, 1793, 1794, -2, -2, -2,
	0, 0, 0, 1998, 2000, 2001, 2005, 2006, 0, 1896,
	1897, 1898, 2007, 0, 1413, 1407, 1468, 0, 1553, 1472,
	0, 1468, 1468, 1420, 1514, 0, 0, 1537, 0, 1486,
	0, 1487, 0, 1519, 0, 1494, 1497, 1498, 1508, 0,
	1500, 0, 1503, 0, 1832, -2, 293, 294, 296, 0,
	299, 565, 566, 564, 548, 0, 0, 1563, 0, 0,
	1639, 1643, 1667, 571, 572, 570, 461, 470, 213, 0,
	1523, 0, 0, 0, 0, 2148, 1211, 1212, 2511, 2080,
	1214, 0, 0, 0, 0, 183, 1010, 1039, 0, 0,
	0, 1031, 0, 0, 1045, 152, 0, 0, 0, 160,
	0, 0, 157, 0, 166, 171, 0, 0, 0, 0,
	0, 0, 0, 124, 125, 126, 0, 131, 0, 132,
	0, 0, 0, 0, 0, 0, 1301, 0, 0, 0,
	185, 0, 0, 0, 1193, 0, 0, 207, 0, 0,
	0, 1158, 1159, 1218, 1224, 0, 0, 225, 223, 0,
	226, 0, 229, 230, 0, 225, 219, 0, 0, 1076,
	354, 944, 1046, 0, 1048, 0, 942, 0, 0, 1047,
	406, 0, 413, 0, 0, 1097, 0, 0, 1120, 1131,
	1076, 0, 1169, 1171, 1179, 0, 0, 0, 1312, 1316,
	0, 1305, 1306, 1445, 1318, 1336, -2, 0, 0, 1426,
	1344, 1341, 1347, 1348, 0, 289, 0, 284, 286, 0,
	270, 0, 0, 973, 978, 0, 0, 0, 0, 0,
	1329, 1331, 0, 0, 0, 0, 0, 0, 255, 276,
	0, 753, 777, 840, 877, 997, 0, 0, 879, 0,
	0, 1448, 1435, 1436, 1433, 1196, 1734, 1738, 0, 0,
	0, 1740, -2, 0, 1762, -2, -2, 1969, 2021, 1811,
	1426, 1833, 1835, 1822, 2015, 1684, 0, 1920, 1917, 0,
	1904, 0, 1857, 1858, 0, 0, 1861, 1863, 1864, 1865,
	1623, 1616, 1615, 1994, 0, 0, 0, 0, 1895, 1408,
	0, 1909, 0, 0, 1476, 1909, 1909, 1515, 0, 1517,
	1484, 1477, 0, 2096, 1510, 1502, 0, 0, 297, 0,
	1557, 1562, 0, 1568, 1638, 214, 146, 147, 0, 1207,
	1208, 1209, 0, 1213, 0, 1216, 149, 0, 1011, 0,
	1014, 0, 0, 0, 0, 1021, 1032, 0, 0, 0,
	0, 0, 1033, 0, 1062, 0, 1184, 1191, 0, -2,
	0, 0, 0, 154, 177, 0, 0, 1233, 0, 0,
	182, 182, 0, 0, 1200, 1202, 1204, 0, 0, 0,
	0, 134, 0, 0, 1219, 1225, 1222, 1228, 0, 0,
	0, 1230, 194, 195, 0, 182, 0, 187, 182, 182,
	1193, 0, 0, 0, 216, 0, 0, 0, 0, 218,
	282, 225, 0, 992, 0, 1058, 1050, 1051, 1052, 0,
	1057, 1059, 0, 0, 958, 943, 0, 954, 0, 0,
	971, 946, 0, 411, 934, 1094, 1128, 1076, 0, 1162,
	0, 0, 0, 0, 0, 0, 1314, 1316, 0, 1307,
	1308, 1338, 1444, 0, 0, 0, 1326, 1445, 0, 291,
	292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	292, 257, 0, 258, 259, 260, 247, 611, 613, 0,
	0, 619, 996, 0, 0, 0, 0, 1434, 1742, -2,
	-2, 1763, 0, 2097, 2099, 1426, 0, 1906, 1428, 0,
	0, -2, 0, 0, 0, 1409, 1392, 0, 1467, 1459,
	1461, 1463, 2388, 2189, 2493, 1393, 1394, 1536, 0, 1505,
	298, 0, 1564, 0, 1210, 0, 151, 0, 1015, 1016,
	2072, 1018, 0, 1020, 1022, 1023, 0, 1026, 2120, 0,
	1030, 0, 1041, 1063, 0, 1072, 0, 1186, 1196, 1190,
	0, 1188, 1074, 0, 153, 155, 176, 1193, 0, 156,
	165, 0, 0, 110, 0, 0, 2184, 137, 135, 133,
	1197, 112, 0, 196, 206, 1192, 191, 208, 182, 0,
	1220, 1226, 227, 0, 228, 231, 0, 0, 1000, 0,
	945, 1049, 0, 1060, 1061, 948, 0, 947, 0, 0,
	0, 0, 0, 412, 415, 0, 418, 0, 0, 1172,
	0, 1178, 0, 0, 0, 1299, 0, 0, 1309, 1310,
	427, 1332, 0, 0, 1338, 1349, 269, 0, 0, 979,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 980,
	1074, 0, 0, 1038, 0, 274, 254, 0, 615, 0,
	617, 0, 878, 880, 0, 0, 1834, 1924, 0, 0,
	1859, 1860, -2, 0, 1800, 1908, 1910, 0, 0, 0,
	0, 0, 1478, 1558, 1206, 1215, 1013, 1017, 0, 0,
	0, 1080, 0, 0, 1034, 0, 1066, 1067, 992, 0,
	1068, 1069, 1070, 1185, 1437, 1191, 992, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 186, 209, 1193,
	224, 241, 0, 1129, 946, 999, 0, 0, 956, 0,
	959, 0, 955, 952, 953, 944, 0, 416, 417, 0,
	1132, 0, 1179, 0, 0, 1304, 1316, 1316, 1311, 1312,
	1555, 1335, 1339, 0, 0, 1072, 1074, 946, 0, 614,
	0, 0, 883, 884, 0, 0, 0, 0, 1919, 1429,
	1801, 0, 0, 1462, 1464, 1465, 1466, 0, 0, 1025,
	1085, 0, 0, 0, 1064, 1065, 1000, 0, 1189, 1187,
	1043, 0, 1076, 158, 0, 1074, 0, 1004, 0, 0,
	1007, 0, 0, 138, 2184, 136, 0, 182, 244, 0,
	238, 236, 237, 948, 0, 0, 1054, 1056, 0, 960,
	992, 958, 1130, 1074, 0, 1072, 0, 1295, 1303, 0,
	0, 1314, 0, 292, 292, 992, 1072, 1555, 0, 292,
	616, 618, 1916, 1936, 1925, -2, 2453, 2190, 0, 1936,
	1936, 1911, 1912, 0, 0, 1027, 1081, 1082, 0, 1077,
	1078, 1079, 2119, 1028, 1029, 1062, 0, 0, 1080, 178,
	992, 1001, 0, 0, 1002, 0, 0, 141, 0, 143,
	210, 232, 0, 0, 939, 0, 1053, 0, 0, 0,
	0, 1000, 948, 1072, 0, 992, 0, 1298, 2081, 1313,
	1299, 0, 271, 272, 1000, 992, 1037, 273, 1921, 0,
	0, 1927, 1928, 1929, 1930, 1931, 1922, 1923, 1019, 0,
	1083, 0, 1084, 0, 0, 0, 1555, 1071, 0, 1085,
	163, 1005, 0, 1008, 0, 139, 0, 239, 240, 0,
	1055, 949, 0, 951, 946, 957, 992, 0, 1000, 0,
	1304, 1333, 0, 946, 1000, 0, 1933, 1934, 0, 0,
	0, 1086, 0, 1089, 1090, 0, 1087, 1042, 0, 1062,
	0, 0, 0, 0, 950, 948, 1000, 1074, 946, 1072,
	1296, 0, 1555, 946, 1932, 1935, 1926, 1024, 1088, 1091,
	1092, 1073, 1044, 0, 0, 242, 0, 995, 940, 946,
	1072, 1555, 992, 1555, 1035, 1555, 1000, 0, 0, 991,
	993, 994, 1555, 992, 1175, 1000, 1334, 1036, 1006, 0,
	243, 1173, 1000, 946, 0, 946, 1555, 0, 1555, 1176,
	1000, 1174, 1009,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 560, 3, 566, 561, 3,
	571, 572, 564, 562, 576, 563, 573, 565, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 579, 3,
	552, 554, 553, 557, 575, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 569, 3, 570, 567, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 577, 559, 578, 555,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 556,
	57895, 558, 57896, 568, 57897, 574, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1279
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1286
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1289
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1290
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1291
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1292
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1293
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1294
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1295
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1296
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1297
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1298
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1299
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1306
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "ALTER")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1324
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1325
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1326
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1327
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1385
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1424
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1441
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1445
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1449
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 88:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 89:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 90:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:    tree.Name(sqlDollar[3].str),
				Regions: sqlDollar[6].union.nameList(),
			}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvive{
				Name:    tree.Name(sqlDollar[3].str),
				Survive: sqlDollar[4].union.survive(),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1561
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1565
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1569
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1575
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1579
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1585
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1594
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1609
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1615
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1633
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1637
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1647
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1658
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1665
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1677
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1692
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1712
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1731
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1741
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1751
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1760
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1771
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 135:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1777
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1803
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1808
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1823
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1928
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1931
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1937
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 163:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1989
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].union.user(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = nil
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = nil
		}
	case 180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2102
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2150
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2192
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2197
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2204
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2212
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2243
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2247
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2251
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2255
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2326
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2330
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2334
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2357
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2361
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = nil
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2525
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = nil
		}
	case 245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2612
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2631
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2711
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2720
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2726
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2731
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2736
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2741
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2746
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2766
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2777
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = nil
		}
	case 293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2853
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2883
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2988
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3017
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3041
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3053
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3056
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3058
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3059
		{
			return helpWith(sqllex, "CREATE")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3072
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3075
		{
			return unimplemented(sqllex, "create access method")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3076
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			return unimplemented(sqllex, "create cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3078
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3080
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3081
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3082
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3084
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3085
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return unimplemented(sqllex, "create operator")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return unimplemented(sqllex, "create publication")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3088
		{
			return unimplemented(sqllex, "create rule")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3089
		{
			return unimplemented(sqllex, "create server")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3093
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3097
		{
		}
	case 365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
		}
	case 366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3101
		{
		}
	case 367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3105
		{
		}
	case 369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3108
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3109
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3113
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3116
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3117
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3119
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3121
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			return unimplemented(sqllex, "drop server")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3124
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3125
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3132
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3133
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3184
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3207
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3246
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3281
		{

			sqlVAL.union.val = nil
		}
	case 427:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3305
		{
			return helpWith(sqllex, "DELETE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3308
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3309
		{
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3320
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3321
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3322
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3324
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3333
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3335
		{
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "DROP")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3339
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3340
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3341
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3345
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3353
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3408
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3463
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3471
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3516
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3535
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3540
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3565
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3591
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3608
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3632
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "DELETE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3653
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "INSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3659
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3674
		{
			return helpWith(sqllex, "DELETE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3675
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return helpWith(sqllex, "INSERT")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3721
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3742
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "GRANT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3886
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "RESET")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			return helpWith(sqllex, "RESET")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3941
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "USE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3960
		{
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3961
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3966
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3967
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "USE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3984
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4148
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4179
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return unimplemented(sqllex, "set from current")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4190
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = tree.Low
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = tree.Normal
		}
	case 660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = tree.High
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4336
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4339
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4340
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4344
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4351
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4354
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4359
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4362
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4366
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4370
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4375
		{
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4379
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4398
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.str = "client_encoding"
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.str = "timezone"
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4448
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4471
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4511
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4520
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4559
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4637
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = true
		}
	case 805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = true
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = false
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4750
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4839
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = true
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4881
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4906
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = true
		}
	case 849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = false
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4948
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4959
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4972
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4980
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4985
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4990
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5006
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5049
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5057
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5094
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowRegions{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowRegions{
				Database: tree.Name(sqlDollar[5].str),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5156
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5292
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5348
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5380
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "RESUME")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5435
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5580
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[9].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[10].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[11].union.storageParams(),
				OnCommit:      sqlDollar[12].union.createTableOnCommitSetting(),
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5595
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[12].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[13].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[14].union.storageParams(),
				OnCommit:      sqlDollar[15].union.createTableOnCommitSetting(),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = nil
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.str = ""
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5629
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = nil
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 950:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5652
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5656
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 956:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5682
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5696
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5711
		{
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5752
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5785
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5791
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5796
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5799
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5802
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5809
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5830
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.str = ""
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5875
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5881
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5925
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6002
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6021
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6031
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6035
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = true
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = false
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[4].union.idxElems(),
					Storing:     sqlDollar[6].union.nameList(),
					Interleave:  sqlDollar[7].union.interleave(),
					PartitionBy: sqlDollar[8].union.partitionBy(),
					Predicate:   sqlDollar[10].union.expr(),
				},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6145
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6157
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6168
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6185
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6195
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6275
		{
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6276
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6298
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6352
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6436
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6445
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6464
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6479
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6482
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6486
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6489
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6492
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6532
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = true
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6557
		{

			sqlVAL.union.val = true
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = false
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6572
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6586
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6598
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6610
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6620
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6630
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6670
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = nil
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6731
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6740
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6741
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6757
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6759
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6761
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6763
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6765
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6767
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6771
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6805
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6823
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6842
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6859
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6876
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6880
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = true
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = false
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = true
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = false
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6934
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6940
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6946
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6954
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.str = ""
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.str = ""
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7013
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7019
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[3].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[5].union.regionAffinity(),
				IfExists:         false,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.AlterTableRegionalAffinity{
				Name:             sqlDollar[6].union.unresolvedObjectName(),
				RegionalAffinity: sqlDollar[8].union.regionAffinity(),
				IfExists:         true,
			}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7065
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[4].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[3].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelGlobal,
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				TableRegion:           tree.Name(sqlDollar[6].str),
				RegionalAffinityLevel: tree.RegionalAffinityLevelTable,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7129
		{
			sqlVAL.union.val = tree.RegionalAffinity{
				RegionalAffinityLevel: tree.RegionalAffinityLevelRowLevel,
			}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7185
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7191
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7203
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7209
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7223
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7229
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7251
		{
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7280
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7289
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7310
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7318
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7339
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7383
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7406
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7417
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7434
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7437
		{
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7438
		{
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7466
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7481
		{
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				Regions:         sqlDollar[10].union.nameList(),
				Survive:         sqlDollar[11].union.survive(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				Regions:         sqlDollar[13].union.nameList(),
				Survive:         sqlDollar[14].union.survive(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7570
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = tree.SurviveRegionFailure
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = tree.SurviveAvailabilityZoneFailure
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = tree.SurviveDefault
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.str = ""
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.str = ""
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.str = ""
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.str = ""
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7645
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7659
		{
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7688
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7706
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7719
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7795
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7799
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7890
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7905
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7987
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7991
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7995
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8044
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8084
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8085
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8086
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8147
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = true
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = false
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8260
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = nil
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8274
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8275
		{
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = true
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = false
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = false
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = true
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8304
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8305
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8308
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8309
		{
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8329
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8350
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8371
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8376
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8405
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8493
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8494
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8533
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8564
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8566
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8578
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8603
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8613
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8636
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8655
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8694
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8704
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8750
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8780
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8813
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8815
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = nil
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8820
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = true
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = false
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.str = tree.AstFull
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.str = tree.AstRight
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.str = tree.AstInner
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8933
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.str = tree.AstHash
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.str = ""
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8989
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8995
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9018
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9024
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9030
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9040
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = true
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = false
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = true
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9089
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9102
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9110
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9111
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9129
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9139
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9159
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9168
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9208
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9220
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9221
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9225
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9229
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9234
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9235
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9237
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9238
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9239
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9241
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9244
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9245
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9248
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9249
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9250
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9251
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9253
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9254
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = types.Geography
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9270
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9278
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9312
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = nil
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = types.Int2
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = types.Int
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = types.Float4
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = types.Float
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9355
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9363
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = types.Bool
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = types.Float
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9404
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9410
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9432
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = types.String
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = true
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = false
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = types.Date
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9481
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9489
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9503
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9512
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9520
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9537
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = true
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = false
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = false
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = types.Interval
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9561
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9645
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = nil
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9690
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9750
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9755
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9911
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9915
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9919
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9923
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10289
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10339
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10369
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10380
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10381
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10405
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10471
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10601
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10619
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10647
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10652
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10667
		{
			return unimplemented(sqllex, "treat")
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10688
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10720
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10740
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.str = ""
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10842
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10878
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10939
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.Any
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = tree.Some
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = tree.All
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = tree.Div
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = tree.LT
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10975
		{
			sqlVAL.union.val = tree.GT
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.LE
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = tree.GE
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.NE
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.Like
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11300
		{
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11301
		{
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11373
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11381
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11479
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11499
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11507
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11519
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11745
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11752
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.str = ""
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
