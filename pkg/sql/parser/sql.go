// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:866
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13477

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1549,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 402,
	-2, 0,
	-1, 74,
	242, 240,
	513, 240,
	-2, 0,
	-1, 87,
	230, 1285,
	244, 1285,
	260, 398,
	389, 398,
	399, 1046,
	437, 398,
	450, 1046,
	497, 1046,
	524, 398,
	550, 1046,
	-2, 0,
	-1, 93,
	132, 1549,
	237, 1549,
	535, 1549,
	536, 1549,
	-2, 0,
	-1, 109,
	150, 1520,
	169, 1520,
	182, 1520,
	240, 1520,
	273, 1520,
	340, 1520,
	350, 1520,
	530, 1520,
	-2, 1491,
	-1, 149,
	158, 897,
	259, 897,
	392, 859,
	455, 859,
	496, 859,
	516, 897,
	518, 859,
	-2, 0,
	-1, 152,
	4, 1551,
	21, 1551,
	22, 1551,
	23, 1551,
	24, 1551,
	25, 1551,
	26, 1551,
	27, 1551,
	29, 1551,
	30, 1551,
	36, 1551,
	41, 1551,
	42, 1551,
	44, 1551,
	45, 1551,
	46, 1551,
	47, 1551,
	48, 1551,
	49, 1551,
	50, 1551,
	51, 1551,
	53, 1551,
	54, 1551,
	55, 1551,
	56, 1551,
	58, 1551,
	59, 1551,
	60, 1551,
	61, 1551,
	62, 1551,
	63, 1551,
	64, 1551,
	68, 1551,
	69, 1551,
	70, 1551,
	71, 1551,
	73, 1551,
	74, 1551,
	75, 1551,
	79, 1551,
	80, 1551,
	81, 1551,
	82, 1551,
	83, 1551,
	84, 1551,
	85, 1551,
	88, 1551,
	89, 1551,
	90, 1551,
	91, 1551,
	92, 1551,
	94, 1551,
	96, 1551,
	97, 1551,
	98, 1551,
	99, 1551,
	100, 1551,
	101, 1551,
	103, 1551,
	104, 1551,
	105, 1551,
	107, 1551,
	108, 1551,
	109, 1551,
	117, 1551,
	118, 1551,
	119, 1551,
	120, 1551,
	121, 1551,
	123, 1551,
	124, 1551,
	125, 1551,
	127, 1551,
	128, 1551,
	129, 1551,
	131, 1551,
	132, 1551,
	133, 1551,
	135, 1551,
	136, 1551,
	137, 1551,
	140, 1551,
	141, 1551,
	142, 1551,
	144, 1551,
	145, 1551,
	147, 1551,
	148, 1551,
	149, 1551,
	151, 1551,
	152, 1551,
	153, 1551,
	154, 1551,
	155, 1551,
	156, 1551,
	157, 1551,
	158, 1551,
	159, 1551,
	160, 1551,
	161, 1551,
	162, 1551,
	163, 1551,
	164, 1551,
	165, 1551,
	166, 1551,
	168, 1551,
	174, 1551,
	175, 1551,
	176, 1551,
	177, 1551,
	181, 1551,
	183, 1551,
	184, 1551,
	188, 1551,
	189, 1551,
	190, 1551,
	191, 1551,
	192, 1551,
	193, 1551,
	194, 1551,
	195, 1551,
	196, 1551,
	197, 1551,
	198, 1551,
	199, 1551,
	200, 1551,
	201, 1551,
	203, 1551,
	204, 1551,
	206, 1551,
	207, 1551,
	209, 1551,
	210, 1551,
	211, 1551,
	212, 1551,
	213, 1551,
	214, 1551,
	215, 1551,
	216, 1551,
	217, 1551,
	219, 1551,
	220, 1551,
	222, 1551,
	223, 1551,
	224, 1551,
	225, 1551,
	226, 1551,
	230, 1551,
	231, 1551,
	232, 1551,
	233, 1551,
	234, 1551,
	237, 1551,
	238, 1551,
	239, 1551,
	241, 1551,
	243, 1551,
	244, 1551,
	246, 1551,
	248, 1551,
	249, 1551,
	250, 1551,
	252, 1551,
	256, 1551,
	257, 1551,
	258, 1551,
	259, 1551,
	260, 1551,
	261, 1551,
	263, 1551,
	264, 1551,
	265, 1551,
	267, 1551,
	268, 1551,
	270, 1551,
	271, 1551,
	274, 1551,
	278, 1551,
	279, 1551,
	280, 1551,
	283, 1551,
	284, 1551,
	285, 1551,
	286, 1551,
	288, 1551,
	289, 1551,
	290, 1551,
	291, 1551,
	292, 1551,
	293, 1551,
	294, 1551,
	295, 1551,
	296, 1551,
	297, 1551,
	298, 1551,
	299, 1551,
	300, 1551,
	301, 1551,
	302, 1551,
	303, 1551,
	304, 1551,
	305, 1551,
	306, 1551,
	307, 1551,
	308, 1551,
	309, 1551,
	311, 1551,
	313, 1551,
	314, 1551,
	315, 1551,
	316, 1551,
	317, 1551,
	318, 1551,
	319, 1551,
	320, 1551,
	321, 1551,
	322, 1551,
	323, 1551,
	324, 1551,
	325, 1551,
	327, 1551,
	328, 1551,
	330, 1551,
	332, 1551,
	333, 1551,
	335, 1551,
	336, 1551,
	337, 1551,
	338, 1551,
	339, 1551,
	342, 1551,
	345, 1551,
	346, 1551,
	347, 1551,
	348, 1551,
	351, 1551,
	352, 1551,
	353, 1551,
	355, 1551,
	357, 1551,
	358, 1551,
	359, 1551,
	360, 1551,
	361, 1551,
	362, 1551,
	363, 1551,
	364, 1551,
	365, 1551,
	366, 1551,
	367, 1551,
	368, 1551,
	369, 1551,
	371, 1551,
	372, 1551,
	373, 1551,
	374, 1551,
	375, 1551,
	376, 1551,
	377, 1551,
	378, 1551,
	379, 1551,
	380, 1551,
	381, 1551,
	382, 1551,
	383, 1551,
	384, 1551,
	385, 1551,
	387, 1551,
	388, 1551,
	390, 1551,
	391, 1551,
	392, 1551,
	393, 1551,
	394, 1551,
	395, 1551,
	396, 1551,
	397, 1551,
	398, 1551,
	399, 1551,
	400, 1551,
	401, 1551,
	403, 1551,
	405, 1551,
	406, 1551,
	407, 1551,
	412, 1551,
	414, 1551,
	415, 1551,
	416, 1551,
	417, 1551,
	418, 1551,
	419, 1551,
	420, 1551,
	421, 1551,
	422, 1551,
	423, 1551,
	425, 1551,
	426, 1551,
	427, 1551,
	429, 1551,
	430, 1551,
	431, 1551,
	432, 1551,
	433, 1551,
	434, 1551,
	435, 1551,
	437, 1551,
	438, 1551,
	439, 1551,
	440, 1551,
	441, 1551,
	442, 1551,
	443, 1551,
	444, 1551,
	445, 1551,
	446, 1551,
	447, 1551,
	448, 1551,
	450, 1551,
	451, 1551,
	452, 1551,
	453, 1551,
	454, 1551,
	455, 1551,
	457, 1551,
	458, 1551,
	459, 1551,
	460, 1551,
	461, 1551,
	462, 1551,
	464, 1551,
	465, 1551,
	466, 1551,
	467, 1551,
	468, 1551,
	469, 1551,
	470, 1551,
	471, 1551,
	473, 1551,
	475, 1551,
	476, 1551,
	477, 1551,
	478, 1551,
	479, 1551,
	480, 1551,
	481, 1551,
	482, 1551,
	483, 1551,
	484, 1551,
	485, 1551,
	486, 1551,
	487, 1551,
	488, 1551,
	489, 1551,
	490, 1551,
	492, 1551,
	493, 1551,
	495, 1551,
	496, 1551,
	498, 1551,
	499, 1551,
	500, 1551,
	501, 1551,
	502, 1551,
	503, 1551,
	504, 1551,
	505, 1551,
	506, 1551,
	508, 1551,
	509, 1551,
	510, 1551,
	511, 1551,
	512, 1551,
	514, 1551,
	516, 1551,
	517, 1551,
	518, 1551,
	519, 1551,
	520, 1551,
	521, 1551,
	523, 1551,
	524, 1551,
	525, 1551,
	526, 1551,
	528, 1551,
	529, 1551,
	532, 1551,
	533, 1551,
	534, 1551,
	535, 1551,
	536, 1551,
	537, 1551,
	538, 1551,
	540, 1551,
	543, 1551,
	544, 1551,
	545, 1551,
	546, 1551,
	547, 1551,
	548, 1551,
	550, 1551,
	551, 1551,
	552, 1551,
	553, 1551,
	555, 1551,
	560, 1551,
	561, 1551,
	562, 1551,
	563, 1551,
	564, 1551,
	565, 1551,
	-2, 0,
	-1, 153,
	1, 1402,
	130, 1402,
	248, 1402,
	329, 1402,
	387, 1402,
	396, 1402,
	569, 1402,
	596, 1402,
	-2, 0,
	-1, 155,
	1, 1402,
	596, 1402,
	-2, 0,
	-1, 156,
	1, 1402,
	596, 1402,
	-2, 0,
	-1, 157,
	1, 1402,
	513, 1402,
	596, 1402,
	-2, 0,
	-1, 186,
	150, 1519,
	169, 1519,
	182, 1519,
	240, 1519,
	273, 1519,
	340, 1519,
	350, 1519,
	530, 1519,
	-2, 1494,
	-1, 233,
	4, 1558,
	5, 1558,
	6, 1558,
	7, 1558,
	8, 1558,
	9, 1558,
	10, 1558,
	21, 1558,
	22, 1558,
	23, 1558,
	24, 1558,
	25, 1558,
	26, 1558,
	27, 1558,
	29, 1558,
	30, 1558,
	36, 1558,
	37, 1558,
	41, 1558,
	42, 1558,
	43, 1558,
	44, 1558,
	45, 1558,
	46, 1558,
	47, 1558,
	48, 1558,
	49, 1558,
	50, 1558,
	51, 1558,
	53, 1558,
	54, 1558,
	55, 1558,
	56, 1558,
	58, 1558,
	59, 1558,
	60, 1558,
	61, 1558,
	62, 1558,
	63, 1558,
	64, 1558,
	65, 1558,
	66, 1558,
	67, 1558,
	68, 1558,
	69, 1558,
	70, 1558,
	71, 1558,
	73, 1558,
	74, 1558,
	75, 1558,
	77, 1558,
	79, 1558,
	80, 1558,
	81, 1558,
	82, 1558,
	83, 1558,
	84, 1558,
	85, 1558,
	88, 1558,
	89, 1558,
	90, 1558,
	91, 1558,
	92, 1558,
	94, 1558,
	96, 1558,
	97, 1558,
	98, 1558,
	99, 1558,
	100, 1558,
	101, 1558,
	103, 1558,
	104, 1558,
	105, 1558,
	106, 1558,
	107, 1558,
	108, 1558,
	109, 1558,
	110, 1558,
	111, 1558,
	112, 1558,
	113, 1558,
	114, 1558,
	115, 1558,
	116, 1558,
	117, 1558,
	118, 1558,
	119, 1558,
	120, 1558,
	121, 1558,
	122, 1558,
	123, 1558,
	124, 1558,
	125, 1558,
	126, 1558,
	127, 1558,
	128, 1558,
	129, 1558,
	131, 1558,
	132, 1558,
	133, 1558,
	135, 1558,
	136, 1558,
	137, 1558,
	140, 1558,
	141, 1558,
	142, 1558,
	144, 1558,
	145, 1558,
	147, 1558,
	148, 1558,
	149, 1558,
	151, 1558,
	152, 1558,
	153, 1558,
	154, 1558,
	155, 1558,
	156, 1558,
	157, 1558,
	158, 1558,
	159, 1558,
	160, 1558,
	161, 1558,
	162, 1558,
	163, 1558,
	164, 1558,
	165, 1558,
	166, 1558,
	167, 1558,
	168, 1558,
	174, 1558,
	175, 1558,
	176, 1558,
	177, 1558,
	181, 1558,
	183, 1558,
	184, 1558,
	187, 1558,
	188, 1558,
	189, 1558,
	190, 1558,
	191, 1558,
	192, 1558,
	193, 1558,
	194, 1558,
	195, 1558,
	196, 1558,
	197, 1558,
	198, 1558,
	199, 1558,
	200, 1558,
	201, 1558,
	203, 1558,
	204, 1558,
	206, 1558,
	207, 1558,
	209, 1558,
	210, 1558,
	211, 1558,
	212, 1558,
	213, 1558,
	214, 1558,
	215, 1558,
	216, 1558,
	217, 1558,
	218, 1558,
	219, 1558,
	220, 1558,
	222, 1558,
	223, 1558,
	224, 1558,
	225, 1558,
	226, 1558,
	230, 1558,
	231, 1558,
	232, 1558,
	233, 1558,
	234, 1558,
	236, 1558,
	237, 1558,
	238, 1558,
	239, 1558,
	241, 1558,
	243, 1558,
	244, 1558,
	245, 1558,
	246, 1558,
	247, 1558,
	248, 1558,
	249, 1558,
	250, 1558,
	251, 1558,
	252, 1558,
	256, 1558,
	257, 1558,
	258, 1558,
	259, 1558,
	260, 1558,
	261, 1558,
	263, 1558,
	264, 1558,
	265, 1558,
	267, 1558,
	268, 1558,
	269, 1558,
	270, 1558,
	271, 1558,
	272, 1558,
	274, 1558,
	278, 1558,
	279, 1558,
	280, 1558,
	281, 1558,
	282, 1558,
	283, 1558,
	284, 1558,
	285, 1558,
	286, 1558,
	288, 1558,
	289, 1558,
	290, 1558,
	291, 1558,
	292, 1558,
	293, 1558,
	294, 1558,
	295, 1558,
	296, 1558,
	297, 1558,
	298, 1558,
	299, 1558,
	300, 1558,
	301, 1558,
	302, 1558,
	303, 1558,
	304, 1558,
	305, 1558,
	306, 1558,
	307, 1558,
	308, 1558,
	309, 1558,
	311, 1558,
	312, 1558,
	313, 1558,
	314, 1558,
	315, 1558,
	316, 1558,
	317, 1558,
	318, 1558,
	319, 1558,
	320, 1558,
	321, 1558,
	322, 1558,
	323, 1558,
	324, 1558,
	325, 1558,
	326, 1558,
	327, 1558,
	328, 1558,
	329, 1558,
	330, 1558,
	331, 1558,
	332, 1558,
	333, 1558,
	334, 1558,
	335, 1558,
	336, 1558,
	337, 1558,
	338, 1558,
	339, 1558,
	342, 1558,
	346, 1558,
	347, 1558,
	348, 1558,
	351, 1558,
	352, 1558,
	353, 1558,
	354, 1558,
	355, 1558,
	356, 1558,
	357, 1558,
	358, 1558,
	359, 1558,
	360, 1558,
	361, 1558,
	362, 1558,
	363, 1558,
	364, 1558,
	365, 1558,
	366, 1558,
	367, 1558,
	368, 1558,
	369, 1558,
	371, 1558,
	372, 1558,
	373, 1558,
	374, 1558,
	375, 1558,
	376, 1558,
	377, 1558,
	378, 1558,
	379, 1558,
	380, 1558,
	381, 1558,
	382, 1558,
	383, 1558,
	384, 1558,
	385, 1558,
	387, 1558,
	388, 1558,
	390, 1558,
	391, 1558,
	392, 1558,
	393, 1558,
	394, 1558,
	395, 1558,
	396, 1558,
	397, 1558,
	398, 1558,
	399, 1558,
	400, 1558,
	401, 1558,
	403, 1558,
	405, 1558,
	406, 1558,
	407, 1558,
	412, 1558,
	414, 1558,
	415, 1558,
	416, 1558,
	417, 1558,
	418, 1558,
	419, 1558,
	420, 1558,
	421, 1558,
	422, 1558,
	423, 1558,
	425, 1558,
	426, 1558,
	427, 1558,
	428, 1558,
	429, 1558,
	430, 1558,
	431, 1558,
	432, 1558,
	433, 1558,
	434, 1558,
	435, 1558,
	437, 1558,
	438, 1558,
	439, 1558,
	440, 1558,
	441, 1558,
	442, 1558,
	443, 1558,
	444, 1558,
	445, 1558,
	446, 1558,
	447, 1558,
	448, 1558,
	450, 1558,
	451, 1558,
	452, 1558,
	453, 1558,
	454, 1558,
	455, 1558,
	456, 1558,
	457, 1558,
	458, 1558,
	459, 1558,
	460, 1558,
	461, 1558,
	462, 1558,
	463, 1558,
	464, 1558,
	465, 1558,
	466, 1558,
	467, 1558,
	468, 1558,
	469, 1558,
	470, 1558,
	471, 1558,
	473, 1558,
	475, 1558,
	476, 1558,
	477, 1558,
	478, 1558,
	479, 1558,
	480, 1558,
	481, 1558,
	482, 1558,
	483, 1558,
	484, 1558,
	485, 1558,
	486, 1558,
	487, 1558,
	488, 1558,
	489, 1558,
	490, 1558,
	492, 1558,
	493, 1558,
	494, 1558,
	495, 1558,
	496, 1558,
	498, 1558,
	499, 1558,
	500, 1558,
	501, 1558,
	502, 1558,
	503, 1558,
	504, 1558,
	505, 1558,
	506, 1558,
	508, 1558,
	509, 1558,
	510, 1558,
	511, 1558,
	512, 1558,
	514, 1558,
	516, 1558,
	517, 1558,
	518, 1558,
	519, 1558,
	520, 1558,
	521, 1558,
	522, 1558,
	523, 1558,
	524, 1558,
	525, 1558,
	526, 1558,
	528, 1558,
	529, 1558,
	531, 1558,
	532, 1558,
	533, 1558,
	534, 1558,
	535, 1558,
	536, 1558,
	537, 1558,
	538, 1558,
	539, 1558,
	540, 1558,
	543, 1558,
	544, 1558,
	545, 1558,
	546, 1558,
	547, 1558,
	548, 1558,
	550, 1558,
	551, 1558,
	552, 1558,
	553, 1558,
	555, 1558,
	560, 1558,
	561, 1558,
	562, 1558,
	563, 1558,
	564, 1558,
	565, 1558,
	566, 1558,
	577, 1558,
	584, 1558,
	585, 1558,
	586, 1558,
	593, 1558,
	597, 1558,
	-2, 0,
	-1, 737,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	168, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	230, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	325, 1283,
	327, 1283,
	328, 1283,
	330, 1283,
	332, 1283,
	333, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	339, 1283,
	342, 1283,
	346, 1283,
	347, 1283,
	348, 1283,
	351, 1283,
	352, 1283,
	353, 1283,
	355, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	369, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	385, 1283,
	387, 1283,
	388, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	401, 1283,
	403, 1283,
	405, 1283,
	406, 1283,
	407, 1283,
	412, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	423, 1283,
	425, 1283,
	426, 1283,
	427, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	435, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	448, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	455, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	462, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	471, 1283,
	473, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	490, 1283,
	492, 1283,
	493, 1283,
	495, 1283,
	496, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	506, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	512, 1283,
	514, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	521, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	526, 1283,
	528, 1283,
	529, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	538, 1283,
	540, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	548, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	553, 1283,
	555, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	565, 1283,
	-2, 0,
	-1, 756,
	186, 2344,
	513, 2344,
	576, 2344,
	595, 2344,
	-2, 0,
	-1, 757,
	186, 2451,
	513, 2451,
	576, 2451,
	595, 2451,
	-2, 0,
	-1, 758,
	186, 2331,
	513, 2331,
	576, 2331,
	595, 2331,
	-2, 0,
	-1, 760,
	186, 2587,
	513, 2587,
	576, 2587,
	595, 2587,
	-2, 0,
	-1, 762,
	186, 2628,
	513, 2628,
	576, 2628,
	595, 2628,
	-2, 0,
	-1, 770,
	186, 2478,
	513, 2478,
	576, 2478,
	595, 2478,
	-2, 691,
	-1, 805,
	595, 2280,
	598, 2280,
	-2, 977,
	-1, 806,
	595, 2282,
	598, 2282,
	-2, 978,
	-1, 807,
	595, 2281,
	598, 2281,
	-2, 979,
	-1, 808,
	598, 2206,
	-2, 980,
	-1, 831,
	182, 255,
	-2, 0,
	-1, 855,
	43, 2253,
	-2, 0,
	-1, 856,
	550, 1261,
	-2, 1047,
	-1, 872,
	4, 1688,
	21, 1688,
	22, 1688,
	23, 1688,
	24, 1688,
	25, 1688,
	26, 1688,
	27, 1688,
	29, 1688,
	30, 1688,
	36, 1688,
	41, 1688,
	42, 1688,
	44, 1688,
	45, 1688,
	46, 1688,
	47, 1688,
	48, 1688,
	49, 1688,
	50, 1688,
	51, 1688,
	53, 1688,
	54, 1688,
	55, 1688,
	56, 1688,
	58, 1688,
	59, 1688,
	60, 1688,
	61, 1688,
	62, 1688,
	63, 1688,
	64, 1688,
	68, 1688,
	69, 1688,
	70, 1688,
	71, 1688,
	73, 1688,
	74, 1688,
	75, 1688,
	79, 1688,
	80, 1688,
	81, 1688,
	82, 1688,
	83, 1688,
	84, 1688,
	85, 1688,
	88, 1688,
	89, 1688,
	90, 1688,
	91, 1688,
	92, 1688,
	94, 1688,
	96, 1688,
	97, 1688,
	98, 1688,
	99, 1688,
	100, 1688,
	101, 1688,
	103, 1688,
	104, 1688,
	105, 1688,
	107, 1688,
	108, 1688,
	109, 1688,
	117, 1688,
	118, 1688,
	119, 1688,
	120, 1688,
	121, 1688,
	123, 1688,
	124, 1688,
	125, 1688,
	127, 1688,
	128, 1688,
	129, 1688,
	131, 1688,
	132, 1688,
	133, 1688,
	135, 1688,
	136, 1688,
	137, 1688,
	140, 1688,
	141, 1688,
	142, 1688,
	144, 1688,
	145, 1688,
	147, 1688,
	148, 1688,
	149, 1688,
	151, 1688,
	152, 1688,
	153, 1688,
	154, 1688,
	155, 1688,
	156, 1688,
	157, 1688,
	158, 1688,
	159, 1688,
	160, 1688,
	161, 1688,
	162, 1688,
	163, 1688,
	164, 1688,
	165, 1688,
	166, 1688,
	168, 1688,
	174, 1688,
	175, 1688,
	176, 1688,
	177, 1688,
	181, 1688,
	183, 1688,
	184, 1688,
	188, 1688,
	189, 1688,
	190, 1688,
	191, 1688,
	192, 1688,
	193, 1688,
	194, 1688,
	195, 1688,
	196, 1688,
	197, 1688,
	198, 1688,
	199, 1688,
	200, 1688,
	201, 1688,
	203, 1688,
	204, 1688,
	206, 1688,
	207, 1688,
	209, 1688,
	210, 1688,
	211, 1688,
	212, 1688,
	213, 1688,
	214, 1688,
	215, 1688,
	216, 1688,
	217, 1688,
	219, 1688,
	220, 1688,
	222, 1688,
	223, 1688,
	224, 1688,
	225, 1688,
	226, 1688,
	230, 1688,
	231, 1688,
	232, 1688,
	233, 1688,
	234, 1688,
	237, 1688,
	238, 1688,
	239, 1688,
	241, 1688,
	243, 1688,
	244, 1688,
	246, 1688,
	248, 1688,
	249, 1688,
	250, 1688,
	252, 1688,
	256, 1688,
	257, 1688,
	258, 1688,
	259, 1688,
	260, 1688,
	261, 1688,
	263, 1688,
	264, 1688,
	265, 1688,
	267, 1688,
	268, 1688,
	270, 1688,
	271, 1688,
	274, 1688,
	278, 1688,
	279, 1688,
	280, 1688,
	283, 1688,
	284, 1688,
	285, 1688,
	286, 1688,
	288, 1688,
	289, 1688,
	290, 1688,
	291, 1688,
	292, 1688,
	293, 1688,
	294, 1688,
	295, 1688,
	296, 1688,
	297, 1688,
	298, 1688,
	299, 1688,
	300, 1688,
	301, 1688,
	302, 1688,
	303, 1688,
	304, 1688,
	305, 1688,
	306, 1688,
	307, 1688,
	308, 1688,
	309, 1688,
	311, 1688,
	313, 1688,
	314, 1688,
	315, 1688,
	316, 1688,
	317, 1688,
	318, 1688,
	319, 1688,
	320, 1688,
	321, 1688,
	322, 1688,
	323, 1688,
	324, 1688,
	325, 1688,
	327, 1688,
	328, 1688,
	330, 1688,
	332, 1688,
	333, 1688,
	335, 1688,
	336, 1688,
	337, 1688,
	338, 1688,
	339, 1688,
	342, 1688,
	346, 1688,
	347, 1688,
	348, 1688,
	351, 1688,
	352, 1688,
	353, 1688,
	355, 1688,
	357, 1688,
	358, 1688,
	359, 1688,
	360, 1688,
	361, 1688,
	362, 1688,
	363, 1688,
	364, 1688,
	365, 1688,
	366, 1688,
	367, 1688,
	368, 1688,
	369, 1688,
	371, 1688,
	372, 1688,
	373, 1688,
	374, 1688,
	375, 1688,
	376, 1688,
	377, 1688,
	378, 1688,
	379, 1688,
	380, 1688,
	381, 1688,
	382, 1688,
	383, 1688,
	384, 1688,
	385, 1688,
	387, 1688,
	388, 1688,
	390, 1688,
	391, 1688,
	392, 1688,
	393, 1688,
	394, 1688,
	395, 1688,
	396, 1688,
	397, 1688,
	398, 1688,
	399, 1688,
	400, 1688,
	401, 1688,
	403, 1688,
	405, 1688,
	406, 1688,
	407, 1688,
	412, 1688,
	414, 1688,
	415, 1688,
	416, 1688,
	417, 1688,
	418, 1688,
	419, 1688,
	420, 1688,
	421, 1688,
	422, 1688,
	423, 1688,
	425, 1688,
	426, 1688,
	427, 1688,
	429, 1688,
	430, 1688,
	431, 1688,
	432, 1688,
	433, 1688,
	434, 1688,
	435, 1688,
	437, 1688,
	438, 1688,
	439, 1688,
	440, 1688,
	441, 1688,
	442, 1688,
	443, 1688,
	444, 1688,
	445, 1688,
	446, 1688,
	447, 1688,
	448, 1688,
	450, 1688,
	451, 1688,
	452, 1688,
	453, 1688,
	454, 1688,
	455, 1688,
	457, 1688,
	458, 1688,
	459, 1688,
	460, 1688,
	461, 1688,
	462, 1688,
	464, 1688,
	465, 1688,
	466, 1688,
	467, 1688,
	468, 1688,
	469, 1688,
	470, 1688,
	471, 1688,
	473, 1688,
	475, 1688,
	476, 1688,
	477, 1688,
	478, 1688,
	479, 1688,
	480, 1688,
	481, 1688,
	482, 1688,
	483, 1688,
	484, 1688,
	485, 1688,
	486, 1688,
	487, 1688,
	488, 1688,
	489, 1688,
	490, 1688,
	492, 1688,
	493, 1688,
	495, 1688,
	496, 1688,
	498, 1688,
	499, 1688,
	500, 1688,
	501, 1688,
	502, 1688,
	503, 1688,
	504, 1688,
	505, 1688,
	506, 1688,
	508, 1688,
	509, 1688,
	510, 1688,
	511, 1688,
	512, 1688,
	514, 1688,
	516, 1688,
	517, 1688,
	518, 1688,
	519, 1688,
	520, 1688,
	521, 1688,
	523, 1688,
	524, 1688,
	525, 1688,
	526, 1688,
	528, 1688,
	529, 1688,
	532, 1688,
	533, 1688,
	534, 1688,
	535, 1688,
	536, 1688,
	537, 1688,
	538, 1688,
	540, 1688,
	543, 1688,
	544, 1688,
	545, 1688,
	546, 1688,
	547, 1688,
	548, 1688,
	550, 1688,
	551, 1688,
	552, 1688,
	553, 1688,
	555, 1688,
	560, 1688,
	561, 1688,
	562, 1688,
	563, 1688,
	564, 1688,
	565, 1688,
	-2, 0,
	-1, 882,
	260, 402,
	-2, 0,
	-1, 954,
	392, 860,
	455, 860,
	496, 860,
	518, 860,
	-2, 0,
	-1, 955,
	392, 859,
	455, 859,
	496, 859,
	518, 859,
	-2, 799,
	-1, 959,
	1, 911,
	592, 911,
	594, 911,
	596, 911,
	-2, 0,
	-1, 960,
	1, 834,
	592, 834,
	594, 834,
	596, 834,
	-2, 0,
	-1, 961,
	1, 838,
	592, 838,
	594, 838,
	596, 838,
	-2, 0,
	-1, 962,
	1, 976,
	182, 976,
	592, 976,
	594, 976,
	596, 976,
	-2, 0,
	-1, 970,
	1, 865,
	592, 865,
	594, 865,
	596, 865,
	-2, 0,
	-1, 977,
	1, 911,
	592, 911,
	594, 911,
	596, 911,
	-2, 0,
	-1, 978,
	1, 913,
	592, 913,
	594, 913,
	596, 913,
	-2, 0,
	-1, 979,
	1, 916,
	592, 916,
	594, 916,
	596, 916,
	-2, 0,
	-1, 985,
	1, 940,
	592, 940,
	594, 940,
	596, 940,
	-2, 0,
	-1, 986,
	1, 942,
	592, 942,
	594, 942,
	596, 942,
	-2, 0,
	-1, 991,
	1, 970,
	592, 970,
	594, 970,
	596, 970,
	-2, 0,
	-1, 1039,
	169, 1562,
	182, 1562,
	273, 1562,
	340, 1562,
	-2, 1498,
	-1, 1054,
	169, 1561,
	182, 1561,
	273, 1561,
	340, 1561,
	-2, 1495,
	-1, 1081,
	595, 2279,
	-2, 699,
	-1, 1110,
	5, 2271,
	593, 2269,
	-2, 2260,
	-1, 1118,
	5, 2292,
	593, 2289,
	-2, 2280,
	-1, 1119,
	5, 2293,
	593, 2290,
	-2, 2281,
	-1, 1127,
	595, 2277,
	-2, 2259,
	-1, 1128,
	593, 2711,
	-2, 2278,
	-1, 1151,
	593, 2710,
	-2, 2294,
	-1, 1152,
	5, 1763,
	-2, 2681,
	-1, 1153,
	5, 1764,
	-2, 2682,
	-1, 1154,
	5, 1765,
	-2, 2696,
	-1, 1155,
	5, 1766,
	-2, 2660,
	-1, 1156,
	5, 1767,
	-2, 2694,
	-1, 1157,
	5, 1775,
	-2, 2673,
	-1, 1158,
	5, 1762,
	-2, 2669,
	-1, 1159,
	5, 1762,
	-2, 2668,
	-1, 1160,
	5, 1762,
	-2, 2687,
	-1, 1161,
	5, 1773,
	-2, 2662,
	-1, 1162,
	5, 1778,
	-2, 2661,
	-1, 1163,
	5, 1780,
	-2, 2706,
	-1, 1166,
	5, 1802,
	-2, 2699,
	-1, 1167,
	5, 1794,
	-2, 2700,
	-1, 1168,
	5, 1802,
	-2, 2701,
	-1, 1169,
	5, 1798,
	-2, 2702,
	-1, 1170,
	5, 1748,
	-2, 2674,
	-1, 1171,
	5, 1749,
	-2, 2675,
	-1, 1172,
	5, 1750,
	-2, 2663,
	-1, 1200,
	5, 1785,
	-2, 2707,
	-1, 1201,
	5, 1786,
	-2, 2697,
	-1, 1202,
	5, 1787,
	551, 1787,
	-2, 2664,
	-1, 1203,
	5, 1788,
	551, 1788,
	-2, 2665,
	-1, 1240,
	593, 2289,
	-2, 2280,
	-1, 1241,
	593, 2290,
	-2, 2281,
	-1, 1341,
	186, 2628,
	513, 2628,
	576, 2628,
	595, 2628,
	-2, 0,
	-1, 1344,
	1, 676,
	596, 676,
	-2, 1410,
	-1, 1472,
	359, 2254,
	414, 2254,
	457, 2254,
	586, 2254,
	-2, 2244,
	-1, 1483,
	597, 2254,
	-2, 2256,
	-1, 1491,
	1, 1258,
	419, 1222,
	457, 1222,
	571, 1222,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1547,
	-1, 1497,
	202, 1355,
	221, 1355,
	427, 1355,
	-2, 0,
	-1, 1542,
	399, 1046,
	550, 1046,
	-2, 397,
	-1, 1559,
	43, 2252,
	-2, 1012,
	-1, 1566,
	1, 1258,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1547,
	-1, 1574,
	4, 1283,
	21, 1283,
	22, 1283,
	23, 1283,
	24, 1283,
	25, 1283,
	26, 1283,
	27, 1283,
	29, 1283,
	30, 1283,
	36, 1283,
	41, 1283,
	42, 1283,
	44, 1283,
	45, 1283,
	46, 1283,
	47, 1283,
	48, 1283,
	49, 1283,
	50, 1283,
	51, 1283,
	53, 1283,
	54, 1283,
	55, 1283,
	56, 1283,
	58, 1283,
	59, 1283,
	60, 1283,
	61, 1283,
	62, 1283,
	63, 1283,
	64, 1283,
	68, 1283,
	69, 1283,
	70, 1283,
	71, 1283,
	73, 1283,
	74, 1283,
	75, 1283,
	79, 1283,
	80, 1283,
	81, 1283,
	82, 1283,
	83, 1283,
	84, 1283,
	85, 1283,
	88, 1283,
	89, 1283,
	90, 1283,
	91, 1283,
	92, 1283,
	94, 1283,
	96, 1283,
	97, 1283,
	98, 1283,
	99, 1283,
	100, 1283,
	101, 1283,
	103, 1283,
	104, 1283,
	105, 1283,
	107, 1283,
	108, 1283,
	109, 1283,
	117, 1283,
	118, 1283,
	119, 1283,
	120, 1283,
	121, 1283,
	123, 1283,
	124, 1283,
	125, 1283,
	127, 1283,
	128, 1283,
	129, 1283,
	131, 1283,
	132, 1283,
	133, 1283,
	135, 1283,
	136, 1283,
	137, 1283,
	140, 1283,
	141, 1283,
	142, 1283,
	144, 1283,
	145, 1283,
	147, 1283,
	148, 1283,
	149, 1283,
	151, 1283,
	152, 1283,
	153, 1283,
	154, 1283,
	155, 1283,
	156, 1283,
	157, 1283,
	158, 1283,
	159, 1283,
	160, 1283,
	161, 1283,
	162, 1283,
	163, 1283,
	164, 1283,
	165, 1283,
	166, 1283,
	174, 1283,
	175, 1283,
	176, 1283,
	177, 1283,
	181, 1283,
	183, 1283,
	184, 1283,
	188, 1283,
	189, 1283,
	190, 1283,
	191, 1283,
	192, 1283,
	193, 1283,
	194, 1283,
	195, 1283,
	196, 1283,
	197, 1283,
	198, 1283,
	199, 1283,
	200, 1283,
	201, 1283,
	203, 1283,
	204, 1283,
	206, 1283,
	207, 1283,
	209, 1283,
	210, 1283,
	211, 1283,
	212, 1283,
	213, 1283,
	214, 1283,
	215, 1283,
	216, 1283,
	217, 1283,
	219, 1283,
	220, 1283,
	222, 1283,
	223, 1283,
	224, 1283,
	225, 1283,
	226, 1283,
	231, 1283,
	232, 1283,
	233, 1283,
	234, 1283,
	237, 1283,
	238, 1283,
	239, 1283,
	241, 1283,
	243, 1283,
	244, 1283,
	246, 1283,
	248, 1283,
	249, 1283,
	250, 1283,
	252, 1283,
	256, 1283,
	257, 1283,
	258, 1283,
	259, 1283,
	260, 1283,
	261, 1283,
	263, 1283,
	264, 1283,
	265, 1283,
	267, 1283,
	268, 1283,
	270, 1283,
	271, 1283,
	274, 1283,
	278, 1283,
	279, 1283,
	280, 1283,
	283, 1283,
	284, 1283,
	285, 1283,
	286, 1283,
	288, 1283,
	289, 1283,
	290, 1283,
	291, 1283,
	292, 1283,
	293, 1283,
	294, 1283,
	295, 1283,
	296, 1283,
	297, 1283,
	298, 1283,
	299, 1283,
	300, 1283,
	301, 1283,
	302, 1283,
	303, 1283,
	304, 1283,
	305, 1283,
	306, 1283,
	307, 1283,
	308, 1283,
	309, 1283,
	311, 1283,
	313, 1283,
	314, 1283,
	315, 1283,
	316, 1283,
	317, 1283,
	318, 1283,
	319, 1283,
	320, 1283,
	321, 1283,
	322, 1283,
	323, 1283,
	324, 1283,
	325, 1283,
	327, 1283,
	328, 1283,
	332, 1283,
	333, 1283,
	335, 1283,
	336, 1283,
	337, 1283,
	338, 1283,
	339, 1283,
	342, 1283,
	344, 1283,
	346, 1283,
	347, 1283,
	348, 1283,
	351, 1283,
	352, 1283,
	353, 1283,
	355, 1283,
	357, 1283,
	358, 1283,
	359, 1283,
	360, 1283,
	361, 1283,
	362, 1283,
	363, 1283,
	364, 1283,
	365, 1283,
	366, 1283,
	367, 1283,
	368, 1283,
	369, 1283,
	371, 1283,
	372, 1283,
	373, 1283,
	374, 1283,
	375, 1283,
	376, 1283,
	377, 1283,
	378, 1283,
	379, 1283,
	380, 1283,
	381, 1283,
	382, 1283,
	383, 1283,
	384, 1283,
	385, 1283,
	387, 1283,
	388, 1283,
	390, 1283,
	391, 1283,
	392, 1283,
	393, 1283,
	394, 1283,
	395, 1283,
	396, 1283,
	397, 1283,
	398, 1283,
	399, 1283,
	400, 1283,
	401, 1283,
	403, 1283,
	405, 1283,
	406, 1283,
	407, 1283,
	412, 1283,
	414, 1283,
	415, 1283,
	416, 1283,
	417, 1283,
	418, 1283,
	419, 1283,
	420, 1283,
	421, 1283,
	422, 1283,
	423, 1283,
	425, 1283,
	426, 1283,
	427, 1283,
	429, 1283,
	430, 1283,
	431, 1283,
	432, 1283,
	433, 1283,
	434, 1283,
	435, 1283,
	437, 1283,
	438, 1283,
	439, 1283,
	440, 1283,
	441, 1283,
	442, 1283,
	443, 1283,
	444, 1283,
	445, 1283,
	446, 1283,
	447, 1283,
	448, 1283,
	450, 1283,
	451, 1283,
	452, 1283,
	453, 1283,
	454, 1283,
	455, 1283,
	457, 1283,
	458, 1283,
	459, 1283,
	460, 1283,
	461, 1283,
	462, 1283,
	464, 1283,
	465, 1283,
	466, 1283,
	467, 1283,
	468, 1283,
	469, 1283,
	470, 1283,
	471, 1283,
	473, 1283,
	475, 1283,
	476, 1283,
	477, 1283,
	478, 1283,
	479, 1283,
	480, 1283,
	481, 1283,
	482, 1283,
	483, 1283,
	484, 1283,
	485, 1283,
	486, 1283,
	487, 1283,
	488, 1283,
	489, 1283,
	490, 1283,
	492, 1283,
	493, 1283,
	495, 1283,
	496, 1283,
	498, 1283,
	499, 1283,
	500, 1283,
	501, 1283,
	502, 1283,
	503, 1283,
	504, 1283,
	505, 1283,
	506, 1283,
	508, 1283,
	509, 1283,
	510, 1283,
	511, 1283,
	512, 1283,
	514, 1283,
	516, 1283,
	517, 1283,
	518, 1283,
	519, 1283,
	520, 1283,
	521, 1283,
	523, 1283,
	524, 1283,
	525, 1283,
	526, 1283,
	528, 1283,
	529, 1283,
	532, 1283,
	533, 1283,
	534, 1283,
	535, 1283,
	536, 1283,
	537, 1283,
	538, 1283,
	540, 1283,
	543, 1283,
	544, 1283,
	545, 1283,
	546, 1283,
	547, 1283,
	548, 1283,
	550, 1283,
	551, 1283,
	552, 1283,
	553, 1283,
	555, 1283,
	560, 1283,
	561, 1283,
	562, 1283,
	563, 1283,
	564, 1283,
	565, 1283,
	-2, 0,
	-1, 1597,
	1, 542,
	592, 542,
	594, 542,
	596, 542,
	-2, 1518,
	-1, 1600,
	4, 2705,
	11, 2705,
	12, 2705,
	14, 2705,
	15, 2705,
	16, 2705,
	17, 2705,
	18, 2705,
	19, 2705,
	21, 2705,
	22, 2705,
	23, 2705,
	24, 2705,
	25, 2705,
	26, 2705,
	27, 2705,
	29, 2705,
	30, 2705,
	33, 2705,
	34, 2705,
	36, 2705,
	38, 2705,
	41, 2705,
	42, 2705,
	44, 2705,
	45, 2705,
	46, 2705,
	47, 2705,
	48, 2705,
	49, 2705,
	50, 2705,
	51, 2705,
	53, 2705,
	54, 2705,
	55, 2705,
	56, 2705,
	58, 2705,
	59, 2705,
	60, 2705,
	61, 2705,
	62, 2705,
	63, 2705,
	64, 2705,
	67, 2705,
	68, 2705,
	69, 2705,
	70, 2705,
	71, 2705,
	73, 2705,
	74, 2705,
	75, 2705,
	76, 2705,
	79, 2705,
	80, 2705,
	81, 2705,
	82, 2705,
	83, 2705,
	84, 2705,
	85, 2705,
	86, 2705,
	88, 2705,
	89, 2705,
	90, 2705,
	91, 2705,
	92, 2705,
	94, 2705,
	95, 2705,
	96, 2705,
	97, 2705,
	98, 2705,
	99, 2705,
	100, 2705,
	101, 2705,
	103, 2705,
	104, 2705,
	105, 2705,
	106, 2705,
	107, 2705,
	108, 2705,
	109, 2705,
	117, 2705,
	118, 2705,
	119, 2705,
	120, 2705,
	121, 2705,
	123, 2705,
	124, 2705,
	125, 2705,
	127, 2705,
	128, 2705,
	129, 2705,
	131, 2705,
	132, 2705,
	133, 2705,
	135, 2705,
	136, 2705,
	137, 2705,
	140, 2705,
	141, 2705,
	142, 2705,
	144, 2705,
	145, 2705,
	147, 2705,
	148, 2705,
	149, 2705,
	151, 2705,
	152, 2705,
	153, 2705,
	154, 2705,
	155, 2705,
	156, 2705,
	157, 2705,
	158, 2705,
	159, 2705,
	160, 2705,
	161, 2705,
	162, 2705,
	163, 2705,
	164, 2705,
	165, 2705,
	166, 2705,
	170, 2705,
	171, 2705,
	172, 2705,
	173, 2705,
	174, 2705,
	175, 2705,
	176, 2705,
	177, 2705,
	180, 2705,
	181, 2705,
	183, 2705,
	184, 2705,
	187, 2705,
	188, 2705,
	189, 2705,
	190, 2705,
	191, 2705,
	192, 2705,
	193, 2705,
	194, 2705,
	195, 2705,
	196, 2705,
	197, 2705,
	198, 2705,
	199, 2705,
	200, 2705,
	201, 2705,
	203, 2705,
	204, 2705,
	206, 2705,
	207, 2705,
	209, 2705,
	210, 2705,
	211, 2705,
	212, 2705,
	213, 2705,
	214, 2705,
	215, 2705,
	216, 2705,
	217, 2705,
	218, 2705,
	219, 2705,
	220, 2705,
	221, 2705,
	222, 2705,
	223, 2705,
	224, 2705,
	225, 2705,
	226, 2705,
	228, 2705,
	229, 2705,
	231, 2705,
	232, 2705,
	233, 2705,
	234, 2705,
	236, 2705,
	237, 2705,
	238, 2705,
	239, 2705,
	241, 2705,
	243, 2705,
	244, 2705,
	245, 2705,
	246, 2705,
	247, 2705,
	248, 2705,
	249, 2705,
	250, 2705,
	251, 2705,
	252, 2705,
	254, 2705,
	255, 2705,
	256, 2705,
	257, 2705,
	258, 2705,
	259, 2705,
	260, 2705,
	261, 2705,
	263, 2705,
	264, 2705,
	265, 2705,
	267, 2705,
	268, 2705,
	269, 2705,
	270, 2705,
	271, 2705,
	272, 2705,
	274, 2705,
	278, 2705,
	279, 2705,
	280, 2705,
	283, 2705,
	284, 2705,
	285, 2705,
	286, 2705,
	287, 2705,
	288, 2705,
	289, 2705,
	290, 2705,
	291, 2705,
	292, 2705,
	293, 2705,
	294, 2705,
	295, 2705,
	296, 2705,
	297, 2705,
	298, 2705,
	299, 2705,
	300, 2705,
	301, 2705,
	302, 2705,
	303, 2705,
	304, 2705,
	305, 2705,
	306, 2705,
	307, 2705,
	308, 2705,
	309, 2705,
	311, 2705,
	312, 2705,
	313, 2705,
	314, 2705,
	315, 2705,
	316, 2705,
	317, 2705,
	318, 2705,
	319, 2705,
	320, 2705,
	321, 2705,
	322, 2705,
	323, 2705,
	324, 2705,
	325, 2705,
	327, 2705,
	328, 2705,
	331, 2705,
	332, 2705,
	333, 2705,
	335, 2705,
	336, 2705,
	337, 2705,
	338, 2705,
	339, 2705,
	342, 2705,
	346, 2705,
	347, 2705,
	348, 2705,
	349, 2705,
	351, 2705,
	352, 2705,
	353, 2705,
	355, 2705,
	357, 2705,
	358, 2705,
	359, 2705,
	360, 2705,
	361, 2705,
	362, 2705,
	363, 2705,
	364, 2705,
	365, 2705,
	366, 2705,
	367, 2705,
	368, 2705,
	369, 2705,
	371, 2705,
	372, 2705,
	373, 2705,
	374, 2705,
	375, 2705,
	376, 2705,
	377, 2705,
	378, 2705,
	379, 2705,
	380, 2705,
	381, 2705,
	382, 2705,
	383, 2705,
	384, 2705,
	385, 2705,
	387, 2705,
	388, 2705,
	390, 2705,
	391, 2705,
	392, 2705,
	393, 2705,
	394, 2705,
	395, 2705,
	396, 2705,
	397, 2705,
	398, 2705,
	399, 2705,
	400, 2705,
	401, 2705,
	403, 2705,
	405, 2705,
	406, 2705,
	407, 2705,
	412, 2705,
	413, 2705,
	414, 2705,
	415, 2705,
	416, 2705,
	417, 2705,
	418, 2705,
	419, 2705,
	420, 2705,
	421, 2705,
	422, 2705,
	423, 2705,
	425, 2705,
	426, 2705,
	427, 2705,
	428, 2705,
	429, 2705,
	430, 2705,
	431, 2705,
	432, 2705,
	433, 2705,
	434, 2705,
	435, 2705,
	436, 2705,
	437, 2705,
	438, 2705,
	439, 2705,
	440, 2705,
	441, 2705,
	442, 2705,
	443, 2705,
	444, 2705,
	445, 2705,
	446, 2705,
	447, 2705,
	448, 2705,
	450, 2705,
	451, 2705,
	452, 2705,
	453, 2705,
	454, 2705,
	455, 2705,
	457, 2705,
	458, 2705,
	459, 2705,
	460, 2705,
	461, 2705,
	462, 2705,
	463, 2705,
	464, 2705,
	465, 2705,
	466, 2705,
	467, 2705,
	468, 2705,
	469, 2705,
	470, 2705,
	471, 2705,
	473, 2705,
	475, 2705,
	476, 2705,
	477, 2705,
	478, 2705,
	479, 2705,
	480, 2705,
	481, 2705,
	482, 2705,
	483, 2705,
	484, 2705,
	485, 2705,
	486, 2705,
	487, 2705,
	488, 2705,
	489, 2705,
	490, 2705,
	492, 2705,
	493, 2705,
	494, 2705,
	495, 2705,
	496, 2705,
	498, 2705,
	499, 2705,
	500, 2705,
	501, 2705,
	502, 2705,
	503, 2705,
	504, 2705,
	505, 2705,
	506, 2705,
	508, 2705,
	509, 2705,
	510, 2705,
	511, 2705,
	512, 2705,
	514, 2705,
	516, 2705,
	517, 2705,
	518, 2705,
	519, 2705,
	520, 2705,
	521, 2705,
	523, 2705,
	524, 2705,
	525, 2705,
	526, 2705,
	528, 2705,
	529, 2705,
	532, 2705,
	533, 2705,
	534, 2705,
	535, 2705,
	536, 2705,
	537, 2705,
	538, 2705,
	540, 2705,
	543, 2705,
	544, 2705,
	545, 2705,
	546, 2705,
	547, 2705,
	548, 2705,
	550, 2705,
	551, 2705,
	552, 2705,
	553, 2705,
	555, 2705,
	560, 2705,
	561, 2705,
	562, 2705,
	563, 2705,
	564, 2705,
	565, 2705,
	566, 2705,
	568, 2705,
	574, 2705,
	575, 2705,
	576, 2705,
	577, 2705,
	578, 2705,
	579, 2705,
	581, 2705,
	582, 2705,
	583, 2705,
	584, 2705,
	585, 2705,
	586, 2705,
	587, 2705,
	588, 2705,
	589, 2705,
	591, 2705,
	594, 2705,
	595, 2705,
	597, 2705,
	598, 2705,
	-2, 0,
	-1, 1605,
	186, 2587,
	513, 2587,
	576, 2587,
	595, 2587,
	-2, 0,
	-1, 1654,
	392, 860,
	455, 860,
	496, 860,
	518, 860,
	-2, 0,
	-1, 1681,
	1, 855,
	592, 855,
	594, 855,
	596, 855,
	-2, 0,
	-1, 1682,
	1, 898,
	592, 898,
	594, 898,
	596, 898,
	-2, 0,
	-1, 1683,
	1, 906,
	592, 906,
	594, 906,
	596, 906,
	-2, 0,
	-1, 1686,
	1, 864,
	592, 864,
	594, 864,
	596, 864,
	-2, 0,
	-1, 1688,
	1, 870,
	592, 870,
	594, 870,
	596, 870,
	-2, 0,
	-1, 1691,
	1, 866,
	592, 866,
	594, 866,
	596, 866,
	-2, 0,
	-1, 1696,
	1, 880,
	592, 880,
	594, 880,
	596, 880,
	-2, 0,
	-1, 1727,
	1, 2570,
	592, 2570,
	594, 2570,
	595, 2570,
	596, 2570,
	-2, 0,
	-1, 1731,
	1, 951,
	592, 951,
	594, 951,
	596, 951,
	-2, 0,
	-1, 1746,
	1, 1405,
	596, 1405,
	-2, 1410,
	-1, 1749,
	169, 1561,
	182, 1561,
	273, 1561,
	340, 1561,
	-2, 1499,
	-1, 1849,
	150, 1520,
	169, 1520,
	182, 1520,
	240, 1520,
	273, 1520,
	340, 1520,
	350, 1520,
	530, 1520,
	-2, 1967,
	-1, 1909,
	594, 2140,
	-2, 0,
	-1, 1944,
	150, 1520,
	169, 1520,
	182, 1520,
	240, 1520,
	273, 1520,
	340, 1520,
	350, 1520,
	530, 1520,
	-2, 1649,
	-1, 1979,
	513, 2584,
	595, 2584,
	598, 2584,
	-2, 0,
	-1, 1996,
	593, 1790,
	-2, 1778,
	-1, 2028,
	186, 2584,
	595, 2584,
	598, 2584,
	-2, 0,
	-1, 2076,
	1, 678,
	596, 678,
	-2, 1410,
	-1, 2209,
	221, 256,
	-2, 2288,
	-1, 2210,
	221, 257,
	-2, 305,
	-1, 2314,
	1, 857,
	592, 857,
	594, 857,
	596, 857,
	-2, 0,
	-1, 2315,
	1, 900,
	592, 900,
	594, 900,
	596, 900,
	-2, 0,
	-1, 2316,
	1, 908,
	592, 908,
	594, 908,
	596, 908,
	-2, 0,
	-1, 2317,
	1, 953,
	592, 953,
	594, 953,
	596, 953,
	-2, 0,
	-1, 2354,
	1, 882,
	592, 882,
	594, 882,
	596, 882,
	-2, 0,
	-1, 2372,
	1, 936,
	592, 936,
	594, 936,
	596, 936,
	-2, 0,
	-1, 2417,
	434, 1588,
	435, 1588,
	-2, 1823,
	-1, 2448,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1843,
	-1, 2449,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1844,
	-1, 2450,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1845,
	-1, 2451,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1846,
	-1, 2452,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1847,
	-1, 2453,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1848,
	-1, 2454,
	95, 0,
	254, 0,
	255, 0,
	578, 0,
	579, 0,
	-2, 1849,
	-1, 2455,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1850,
	-1, 2467,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1862,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1863,
	-1, 2469,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1864,
	-1, 2473,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1871,
	-1, 2479,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1875,
	-1, 2481,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1883,
	-1, 2482,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1884,
	-1, 2483,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1885,
	-1, 2484,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1886,
	-1, 2656,
	5, 2292,
	186, 2151,
	593, 2289,
	-2, 2280,
	-1, 2657,
	186, 2152,
	-2, 2656,
	-1, 2658,
	186, 2153,
	-2, 2477,
	-1, 2659,
	186, 2154,
	-2, 2362,
	-1, 2660,
	186, 2155,
	-2, 2417,
	-1, 2661,
	186, 2156,
	-2, 2462,
	-1, 2662,
	186, 2157,
	-2, 2582,
	-1, 2663,
	186, 2158,
	-2, 1950,
	-1, 2734,
	1, 1650,
	2, 1650,
	106, 1650,
	150, 1650,
	169, 1650,
	182, 1650,
	187, 1650,
	205, 1650,
	208, 1650,
	236, 1650,
	240, 1650,
	251, 1650,
	269, 1650,
	273, 1650,
	312, 1650,
	340, 1650,
	344, 1650,
	350, 1650,
	424, 1650,
	428, 1650,
	530, 1650,
	541, 1650,
	557, 1650,
	558, 1650,
	559, 1650,
	569, 1650,
	592, 1650,
	594, 1650,
	596, 1650,
	598, 1650,
	-2, 1649,
	-1, 2747,
	593, 2261,
	-2, 2275,
	-1, 2749,
	1, 322,
	557, 322,
	-2, 1547,
	-1, 2777,
	593, 1789,
	-2, 1779,
	-1, 2962,
	1, 1258,
	419, 1222,
	457, 1222,
	571, 1222,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1547,
	-1, 3140,
	345, 1591,
	-2, 2695,
	-1, 3141,
	345, 1592,
	-2, 2567,
	-1, 3145,
	434, 2217,
	435, 2217,
	-2, 1948,
	-1, 3146,
	434, 2221,
	435, 2221,
	-2, 1949,
	-1, 3147,
	434, 2218,
	435, 2218,
	-2, 1948,
	-1, 3148,
	434, 2222,
	435, 2222,
	-2, 1949,
	-1, 3161,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1873,
	-1, 3162,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1877,
	-1, 3168,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1879,
	-1, 3391,
	1, 675,
	592, 675,
	594, 675,
	596, 675,
	-2, 1410,
	-1, 3561,
	43, 2252,
	-2, 1013,
	-1, 3566,
	1, 1258,
	592, 1258,
	594, 1258,
	596, 1258,
	-2, 1547,
	-1, 3673,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1881,
	-1, 3680,
	245, 0,
	247, 0,
	331, 0,
	-2, 1900,
	-1, 3748,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1929,
	-1, 3749,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1930,
	-1, 3750,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1931,
	-1, 3754,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1935,
	-1, 3755,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1936,
	-1, 3756,
	14, 0,
	15, 0,
	16, 0,
	574, 0,
	575, 0,
	576, 0,
	-2, 1937,
	-1, 3803,
	593, 2262,
	-2, 2276,
	-1, 3976,
	595, 2813,
	-2, 1473,
	-1, 4034,
	245, 0,
	247, 0,
	331, 0,
	-2, 1901,
	-1, 4037,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1904,
	-1, 4038,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1906,
	-1, 4132,
	595, 2277,
	-2, 1293,
	-1, 4283,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1905,
	-1, 4284,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 1907,
	-1, 4295,
	245, 0,
	-2, 1940,
	-1, 4476,
	245, 0,
	-2, 1941,
	-1, 4668,
	50, 0,
	218, 0,
	272, 0,
	463, 0,
	566, 0,
	577, 0,
	-2, 2659,
}

const sqlPrivate = 57344

const sqlLast = 130348

var sqlAct = [...]int{
	269, 4783, 3550, 2045, 4862, 3299, 3046, 4770, 4724, 3033,
	4340, 3549, 4649, 4660, 4505, 4661, 2840, 4678, 4667, 4540,
	4799, 4561, 4513, 2124, 4017, 1233, 4536, 4597, 4680, 4128,
	2206, 4398, 3713, 4636, 4617, 4679, 4614, 2884, 4429, 4405,
	4326, 4737, 4383, 4480, 1244, 4239, 2906, 1110, 2281, 4666,
	4234, 4200, 4175, 4345, 2427, 3665, 4304, 4272, 4223, 1064,
	3968, 4221, 3413, 1317, 3960, 4414, 1306, 3896, 697, 4214,
	3154, 1313, 3583, 2689, 4129, 807, 2290, 3475, 4113, 4443,
	2496, 267, 3545, 2058, 3577, 3941, 3923, 2919, 4244, 3416,
	3925, 1758, 3402, 2132, 3535, 4300, 1984, 3055, 2428, 768,
	1055, 807, 1377, 3622, 3022, 1950, 3068, 2435, 3624, 3003,
	1983, 1621, 2992, 1469, 3057, 3528, 2288, 3343, 1121, 3527,
	3806, 3282, 3314, 708, 4016, 3322, 3305, 1308, 4073, 3017,
	3048, 3065, 3054, 1919, 3034, 1662, 3303, 2969, 884, 1063,
	177, 2195, 2933, 2193, 3019, 2254, 4771, 880, 4, 3435,
	2842, 2143, 1117, 3774, 2727, 2432, 2574, 4481, 1895, 2509,
	3281, 1857, 3138, 2726, 1827, 1476, 2996, 1311, 3064, 3410,
	1561, 2729, 875, 2194, 948, 802, 2938, 1224, 2189, 2177,
	763, 1114, 2170, 263, 2883, 3004, 1359, 1299, 2112, 2576,
	1119, 2116, 1746, 2707, 2056, 3350, 2686, 2399, 2102, 2565,
	1285, 2033, 1920, 2493, 1619, 2416, 2397, 1939, 2760, 1598,
	2241, 3027, 3547, 1564, 808, 809, 741, 2865, 804, 4784,
	108, 684, 4562, 262, 1346, 706, 3058, 3917, 1936, 2828,
	2568, 1164, 1890, 177, 1227, 2716, 1241, 2697, 2618, 1929,
	2759, 1296, 1206, 2546, 2652, 186, 1760, 1841, 1116, 1759,
	2398, 187, 1696, 749, 761, 2240, 1223, 2267, 813, 1681,
	1596, 2400, 1589, 2131, 1501, 4725, 2421, 1095, 2031, 2034,
	724, 1081, 701, 44, 43, 41, 32, 30, 1204, 856,
	698, 28, 709, 1239, 813, 968, 1229, 1765, 3191, 1745,
	797, 3185, 3788, 1512, 3789, 3301, 4705, 2047, 816, 1687,
	2047, 4875, 1355, 1059, 857, 2706, 1505, 2047, 2047, 4865,
	4849, 2047, 4319, 3602, 2706, 2047, 2047, 4848, 4838, 899,
	4316, 2706, 2215, 4819, 816, 4817, 4756, 4344, 4713, 4344,
	2215, 2289, 4714, 4702, 4700, 2215, 3592, 2706, 2706, 4697,
	4694, 4664, 4663, 4698, 4695, 2215, 2215, 4662, 4657, 4656,
	4647, 2068, 2068, 2068, 4344, 4645, 3593, 4642, 1059, 4344,
	1049, 4417, 1221, 1355, 3375, 4612, 1773, 1774, 876, 4344,
	4586, 4579, 4578, 4573, 2768, 2706, 2706, 4344, 4572, 4566,
	4532, 4478, 4344, 2215, 4191, 2768, 4460, 4457, 1236, 4454,
	4003, 2215, 3778, 4344, 3373, 73, 1776, 879, 878, 1207,
	1207, 1628, 4407, 4361, 4360, 2065, 4408, 2215, 2215, 1060,
	4351, 4350, 74, 4343, 2215, 4344, 4311, 4344, 4285, 3358,
	2215, 4263, 2768, 1040, 3602, 2068, 4252, 4094, 78, 1039,
	3602, 1775, 2215, 4170, 2699, 1773, 1774, 2706, 1806, 1807,
	1808, 1817, 1818, 1819, 4153, 4036, 3984, 3978, 2706, 2768,
	3619, 3619, 3939, 3153, 3200, 2789, 3940, 1810, 1804, 93,
	3201, 1263, 2764, 3252, 3253, 1776, 2215, 3798, 87, 3796,
	1256, 3799, 2706, 3797, 1823, 4587, 1054, 3781, 3697, 1514,
	4482, 2706, 2215, 3693, 1235, 4473, 4461, 2706, 3618, 3252,
	3253, 1829, 3619, 3609, 3298, 3293, 4417, 3610, 2706, 2706,
	1775, 2215, 2068, 3778, 2065, 3252, 3253, 1208, 882, 3292,
	1795, 3243, 3241, 2706, 3233, 3244, 3242, 3231, 3234, 1792,
	49, 2706, 107, 2698, 4232, 3202, 3072, 93, 104, 2706,
	2068, 4191, 3044, 3043, 2812, 1781, 2277, 2277, 2706, 2767,
	2788, 233, 2065, 2768, 2757, 1773, 1774, 1257, 2706, 2751,
	2705, 2706, 2276, 2215, 2706, 1257, 2277, 1210, 4154, 1211,
	1773, 1774, 4003, 3610, 3267, 2909, 2827, 2081, 1804, 2046,
	2062, 3252, 3253, 2998, 2214, 1776, 2929, 2825, 2136, 3252,
	3253, 1514, 1915, 1804, 1500, 3879, 94, 3668, 3643, 235,
	1776, 1937, 2182, 3594, 1798, 1799, 1800, 1801, 1773, 1774,
	1664, 1829, 2743, 2742, 1781, 2741, 3190, 2740, 2739, 1212,
	1775, 1209, 3595, 233, 1048, 1047, 1829, 1046, 1045, 1044,
	1795, 1043, 1042, 1038, 1037, 1775, 1036, 1035, 1776, 1034,
	1033, 1032, 3258, 1031, 1030, 1795, 3112, 4089, 234, 1029,
	1028, 1027, 1814, 1026, 1792, 1824, 1025, 1024, 1023, 1022,
	1021, 227, 1803, 1805, 2048, 946, 945, 2048, 3258, 944,
	228, 235, 943, 1775, 2048, 2048, 942, 941, 2048, 1820,
	940, 1821, 2048, 2048, 3258, 939, 938, 937, 1790, 1791,
	936, 935, 934, 933, 932, 188, 931, 930, 4338, 929,
	928, 927, 926, 925, 924, 923, 1812, 922, 4030, 921,
	920, 919, 918, 917, 1798, 1799, 1800, 1801, 916, 915,
	234, 1796, 914, 913, 1781, 1826, 912, 902, 901, 1798,
	1799, 1800, 1801, 1614, 2065, 1093, 897, 896, 890, 1781,
	889, 874, 97, 1513, 873, 830, 829, 828, 1526, 3268,
	3258, 827, 1322, 1119, 1520, 819, 233, 233, 3258, 818,
	817, 783, 774, 773, 772, 1822, 755, 188, 257, 256,
	149, 255, 1803, 1805, 254, 3268, 4048, 1781, 3592, 253,
	1119, 1119, 252, 1811, 2601, 251, 1257, 1803, 1805, 250,
	249, 3268, 248, 247, 1826, 185, 100, 1380, 3030, 103,
	246, 1380, 245, 244, 235, 235, 2347, 243, 1322, 242,
	241, 240, 239, 1790, 1791, 238, 2065, 1632, 237, 236,
	3820, 4246, 1826, 3792, 3620, 233, 3346, 3213, 1505, 3196,
	3187, 1796, 1119, 883, 1119, 1618, 1119, 3095, 149, 1363,
	1364, 2215, 1322, 2979, 2799, 2772, 1796, 1802, 1826, 1350,
	2748, 2046, 2065, 234, 234, 2062, 2698, 3268, 233, 2788,
	2392, 1081, 1081, 1689, 1826, 3268, 227, 227, 1322, 1484,
	1797, 3296, 2733, 235, 2587, 228, 228, 3012, 1464, 2585,
	1898, 1940, 1464, 1257, 1898, 1479, 2110, 1897, 1322, 2067,
	1963, 1897, 1868, 1508, 2284, 1322, 1366, 1815, 3269, 152,
	188, 188, 4485, 1119, 1826, 1119, 235, 1772, 4685, 1322,
	1330, 3297, 1901, 1514, 189, 1119, 1896, 1119, 4665, 1826,
	1062, 1243, 234, 1514, 3269, 4644, 4547, 1504, 1828, 4470,
	1826, 4299, 4253, 4464, 4231, 227, 1570, 1573, 1826, 1859,
	3269, 4462, 4100, 4071, 228, 4070, 1290, 1293, 4064, 1777,
	1778, 1779, 1780, 1782, 1783, 234, 4063, 1802, 1303, 3944,
	1525, 4062, 4055, 4054, 1322, 1344, 1519, 4052, 227, 877,
	1866, 1237, 1802, 1373, 1489, 1466, 1471, 228, 2283, 4047,
	1797, 4044, 4043, 1119, 3938, 3824, 1119, 1474, 3823, 3822,
	3802, 3769, 3768, 3767, 3689, 1797, 3684, 3341, 3289, 3280,
	1813, 3251, 188, 1220, 813, 3248, 3269, 3247, 1787, 1788,
	1794, 1816, 1793, 1789, 3269, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 3245, 1339, 4248, 2571, 177, 177,
	3252, 3253, 4056, 1559, 3240, 1503, 1502, 1861, 1828, 3239,
	3238, 3235, 3232, 3212, 816, 3262, 3254, 3255, 3256, 3257,
	3259, 3260, 3195, 1828, 3188, 3186, 1859, 1633, 3045, 2734,
	1576, 1601, 1603, 2558, 3252, 3253, 1772, 2222, 2257, 3263,
	3261, 3262, 3254, 3255, 3256, 3257, 3259, 3260, 1771, 4869,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 3254, 3255,
	3256, 3257, 3259, 3260, 1350, 3877, 1860, 1350, 1858, 3252,
	3253, 2220, 3270, 3271, 3272, 4809, 4808, 3945, 1060, 4772,
	4723, 4721, 1245, 1119, 3715, 4604, 2572, 4539, 1506, 1119,
	4523, 233, 4520, 1705, 3014, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 1638, 4519, 4518, 1793, 1789, 1592,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 4499,
	1750, 3263, 3261, 3262, 3254, 3255, 3256, 3257, 3259, 3260,
	3261, 3262, 3254, 3255, 3256, 3257, 3259, 3260, 4484, 235,
	4483, 3365, 4458, 4442, 3267, 3294, 4441, 2499, 4427, 4424,
	233, 4423, 4418, 1779, 1780, 1782, 1783, 4357, 4334, 4297,
	233, 4280, 1744, 4279, 4260, 233, 4259, 1613, 2573, 3258,
	2570, 233, 4217, 4192, 4088, 4069, 4004, 3998, 3995, 1627,
	3945, 3865, 3864, 3848, 3847, 2505, 1848, 3845, 234, 3784,
	1112, 3772, 3679, 1846, 1119, 1119, 1119, 3621, 235, 3603,
	1119, 227, 3569, 3258, 3492, 1751, 3448, 1241, 235, 1241,
	228, 3415, 3367, 235, 3217, 3216, 3211, 3177, 2991, 235,
	1904, 1655, 1903, 233, 1380, 1902, 1899, 1891, 1889, 2779,
	2778, 2745, 1917, 1119, 233, 3029, 807, 2738, 3258, 2704,
	2583, 1845, 2001, 807, 1690, 4247, 1322, 234, 1962, 1918,
	1913, 1912, 233, 1911, 1239, 1910, 1239, 234, 1909, 4337,
	227, 1908, 234, 1907, 1906, 1905, 1886, 1885, 234, 228,
	227, 235, 1884, 1926, 2052, 227, 1970, 2054, 1883, 228,
	1747, 227, 235, 2059, 228, 1882, 1755, 2061, 1881, 1040,
	228, 1880, 2064, 3013, 188, 1039, 1879, 1754, 1878, 1877,
	235, 1876, 1875, 1060, 188, 1464, 1974, 1900, 1749, 188,
	1874, 1873, 1322, 1971, 1872, 188, 1861, 1847, 1844, 1119,
	234, 1839, 2575, 1322, 1590, 1768, 1769, 233, 1923, 1924,
	1338, 234, 1261, 227, 1252, 1947, 4486, 233, 1773, 1774,
	1119, 4220, 228, 4096, 227, 3268, 2600, 1380, 4040, 234,
	177, 3819, 3795, 228, 2770, 2285, 3787, 1207, 3199, 1236,
	1995, 1236, 227, 2736, 4317, 4156, 4098, 188, 1776, 2126,
	1595, 228, 1892, 1893, 3818, 235, 2099, 1860, 188, 3252,
	3253, 1362, 3363, 1826, 3338, 235, 1842, 3598, 2101, 4806,
	1958, 4798, 2074, 2907, 2101, 4521, 188, 4419, 1350, 2108,
	2101, 4410, 4409, 1775, 4251, 4194, 4193, 4155, 4091, 4007,
	1969, 4006, 4005, 3790, 1967, 3605, 2073, 1948, 1826, 813,
	1360, 1081, 3604, 4415, 234, 3948, 813, 2936, 1464, 1060,
	1355, 1940, 1898, 1938, 234, 1355, 2586, 227, 2569, 1897,
	2888, 2584, 3451, 1945, 1361, 1742, 228, 227, 3666, 3484,
	3891, 3237, 3236, 2087, 1975, 1235, 228, 1235, 3159, 816,
	2870, 2024, 1358, 1654, 1916, 2934, 816, 2781, 4465, 2211,
	2050, 188, 1019, 1998, 3862, 2179, 4463, 1881, 1355, 1322,
	1322, 188, 2571, 3614, 1957, 1956, 1955, 1953, 1952, 1380,
	3417, 2196, 1951, 1942, 3269, 3552, 4735, 3551, 2306, 1706,
	1870, 1663, 2282, 4406, 4709, 4690, 4677, 3536, 3069, 1664,
	1981, 1881, 2197, 3952, 2076, 3935, 3893, 1020, 3888, 3870,
	3640, 3389, 4301, 3301, 2136, 3717, 2566, 4141, 1867, 2915,
	4353, 4686, 4330, 3205, 4139, 2777, 1914, 1894, 3543, 3840,
	2251, 1569, 1496, 1333, 1289, 4699, 4514, 4696, 2164, 3588,
	2169, 4235, 4611, 2174, 2923, 2072, 4496, 2926, 1642, 2921,
	3420, 3857, 3052, 3026, 1219, 2867, 3519, 4753, 3660, 3393,
	1464, 2572, 2971, 4379, 4143, 3256, 3257, 3259, 3260, 2935,
	2070, 4754, 3906, 1322, 1536, 1322, 1017, 1322, 4125, 2914,
	2207, 2212, 2079, 2258, 1544, 1685, 2093, 2092, 4687, 1015,
	2101, 2103, 2077, 1322, 1322, 2104, 2094, 3254, 3255, 3256,
	3257, 3259, 3260, 1058, 1322, 1685, 1594, 1013, 2813, 39,
	1011, 2844, 4121, 4864, 1008, 2866, 1322, 1077, 1322, 1322,
	1322, 2360, 3264, 3265, 3266, 2142, 1498, 4527, 2358, 3263,
	3261, 3262, 3254, 3255, 3256, 3257, 3259, 3260, 2199, 2200,
	3905, 807, 1703, 2573, 2201, 2570, 4372, 2247, 2315, 4363,
	4184, 4183, 3904, 4788, 813, 3903, 4388, 1595, 1000, 3895,
	3395, 2088, 2831, 1119, 2292, 2305, 4122, 2163, 1682, 3885,
	3884, 1545, 2831, 1704, 3882, 3881, 3869, 2829, 3835, 3834,
	2252, 3525, 3524, 3357, 3210, 1503, 1502, 2829, 2264, 1684,
	3843, 869, 1345, 1057, 816, 3209, 2491, 3208, 1119, 2231,
	3207, 3023, 3163, 2932, 2931, 2928, 2614, 2917, 2096, 1684,
	2162, 2316, 2905, 2173, 2904, 3364, 2898, 2391, 2287, 2897,
	1356, 2310, 2896, 2875, 2847, 2489, 2785, 4138, 1640, 2874,
	2835, 1683, 1119, 2272, 1119, 2213, 2758, 1362, 2480, 747,
	4354, 1119, 4331, 1702, 2001, 2001, 1380, 1748, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 2233, 1119, 2261, 1119, 1119, 1119,
	1119, 2274, 2232, 1060, 2298, 1060, 870, 2575, 2293, 3482,
	1361, 2613, 2437, 1059, 3417, 1635, 4793, 2868, 1362, 2407,
	1592, 2372, 2269, 1119, 2269, 2270, 2266, 1119, 1119, 2197,
	1356, 2409, 2396, 2098, 813, 1119, 2282, 1464, 2762, 1119,
	1339, 1119, 1119, 2278, 4278, 2279, 3450, 1005, 1352, 1380,
	2433, 2434, 1582, 2868, 1581, 1119, 1119, 1119, 1119, 1540,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 4789, 2332,
	2297, 2097, 1995, 1995, 816, 2133, 2371, 2485, 2405, 4117,
	2820, 1361, 3641, 1580, 4118, 1579, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 2314, 1356, 2486, 2872, 1119,
	2547, 2548, 2487, 2384, 2381, 2136, 2492, 1499, 2771, 2129,
	4389, 1241, 4794, 1594, 2547, 2563, 1783, 2322, 1380, 1275,
	2389, 696, 4387, 2569, 2302, 3118, 1740, 1241, 4385, 1357,
	1464, 2354, 1237, 1636, 1237, 2846, 4120, 1553, 2134, 2135,
	2609, 2495, 2420, 1119, 1380, 2892, 2566, 691, 1352, 4157,
	2167, 3075, 4123, 2407, 1656, 2495, 1248, 3260, 1239, 2655,
	2655, 2669, 4140, 2547, 2885, 2886, 2690, 2692, 2130, 3483,
	2885, 2886, 2696, 746, 1239, 4384, 2885, 2886, 2858, 4106,
	4137, 2395, 2393, 2401, 4753, 1998, 1998, 1353, 2408, 3174,
	2511, 1040, 2394, 1056, 1040, 1040, 1354, 2424, 1246, 1464,
	2425, 2426, 2562, 4386, 1639, 2721, 995, 1558, 1741, 781,
	1701, 2750, 2405, 2383, 1352, 3392, 2746, 1715, 3172, 1719,
	1958, 867, 4796, 866, 2406, 1464, 2364, 2323, 2925, 1357,
	1053, 4683, 3151, 3136, 2794, 3121, 2503, 2713, 1753, 4821,
	2798, 1250, 4105, 2501, 1337, 1060, 2857, 2271, 1565, 1322,
	1322, 995, 2319, 1947, 2809, 1060, 1664, 2922, 1664, 1060,
	2924, 2611, 2920, 1236, 3649, 2313, 2612, 1207, 2507, 2615,
	3648, 2616, 2617, 2117, 3109, 1053, 2575, 1652, 2118, 1236,
	2845, 4119, 4182, 748, 2560, 2761, 2671, 1353, 910, 2183,
	2488, 1380, 2735, 2403, 2190, 1357, 1354, 1641, 2404, 1563,
	2490, 1009, 177, 2712, 872, 871, 3883, 3866, 1249, 2802,
	2765, 4277, 4507, 2834, 1009, 4802, 3880, 2830, 3914, 779,
	4126, 2808, 996, 2651, 2720, 2001, 2725, 3827, 3814, 2731,
	2732, 2664, 1009, 2681, 2784, 1010, 3854, 1350, 2694, 1009,
	1319, 2702, 2703, 2219, 2218, 2359, 3531, 1060, 3523, 2718,
	2719, 2714, 2357, 1353, 1900, 3480, 2927, 2773, 2406, 1235,
	3169, 1945, 1354, 1380, 3150, 2871, 2834, 996, 3120, 1355,
	2895, 2380, 1464, 3915, 2805, 1235, 2105, 2106, 2180, 1322,
	3467, 2873, 1698, 4135, 3703, 3170, 2816, 4767, 1051, 3175,
	995, 2119, 3706, 820, 3459, 2836, 2390, 4775, 2810, 3117,
	1119, 1119, 2966, 1119, 4774, 2818, 4684, 2184, 2123, 2156,
	2780, 1316, 2756, 2804, 1053, 4795, 3913, 2477, 3143, 3144,
	4824, 2878, 4742, 1892, 1893, 807, 2117, 1322, 2801, 2176,
	2793, 2118, 2404, 4509, 2796, 3468, 2797, 1539, 2787, 3532,
	2811, 2833, 2819, 1995, 1464, 2918, 2783, 3585, 2893, 3460,
	4022, 4021, 2803, 3115, 3852, 3474, 2175, 2967, 1322, 3404,
	1052, 4852, 3529, 2817, 2157, 1716, 3704, 1491, 3037, 1355,
	1322, 903, 1322, 2160, 2877, 3586, 2139, 3867, 3466, 3010,
	2382, 2120, 2125, 3066, 4583, 2814, 2861, 1322, 1542, 4593,
	2171, 692, 3458, 2047, 2321, 2192, 891, 1274, 4322, 2876,
	2965, 1529, 3119, 4534, 2974, 2908, 996, 2155, 4682, 2976,
	1637, 2903, 2894, 997, 2887, 2889, 2890, 2891, 2144, 2134,
	2135, 2180, 2963, 2964, 2839, 3076, 3077, 1566, 2849, 2852,
	2832, 2140, 1119, 780, 1966, 1355, 3083, 3084, 3085, 2136,
	4136, 2148, 1006, 2902, 2119, 1980, 2575, 4515, 2165, 2172,
	2191, 4651, 2029, 4652, 1607, 3585, 1998, 3432, 997, 2899,
	1565, 2123, 2900, 1329, 2121, 3394, 4800, 1713, 1620, 745,
	693, 2913, 3495, 3171, 2138, 1247, 1497, 3006, 813, 1928,
	1259, 3070, 782, 3173, 4716, 2475, 778, 3093, 2478, 4209,
	3073, 2161, 3165, 1119, 4717, 3078, 177, 3079, 2145, 1119,
	1119, 2972, 3051, 2901, 1717, 3436, 2494, 2831, 813, 1503,
	2977, 2168, 2127, 2901, 3431, 1887, 3361, 2180, 816, 694,
	2575, 695, 2850, 1646, 2187, 3039, 2989, 4741, 3002, 3041,
	2168, 2127, 4018, 2999, 2120, 2125, 3090, 4290, 3098, 2474,
	821, 822, 1511, 3000, 1518, 3123, 1524, 3125, 816, 3100,
	4764, 3102, 1989, 3104, 4634, 1119, 1119, 3438, 998, 4622,
	1932, 1119, 3032, 3398, 2117, 3405, 911, 3042, 4167, 2118,
	2557, 4581, 4801, 714, 1119, 1119, 3071, 3113, 3053, 2185,
	1119, 1119, 2502, 3215, 3040, 3021, 1119, 3530, 4274, 2749,
	3092, 1838, 2717, 4825, 1714, 1752, 1718, 997, 4508, 2730,
	1059, 1336, 3101, 998, 3103, 2149, 3105, 3719, 4803, 1935,
	2318, 999, 4582, 1612, 4812, 1617, 4219, 2121, 904, 905,
	3099, 3437, 2186, 2312, 1930, 1626, 4012, 1631, 4810, 4224,
	4187, 1119, 1119, 1119, 1651, 1653, 3815, 1119, 1932, 3166,
	3928, 1264, 1933, 892, 893, 3928, 4023, 1119, 4225, 3926,
	3131, 3473, 3126, 3662, 3926, 3128, 999, 3134, 4541, 3142,
	4681, 3442, 4752, 4750, 1119, 2127, 1669, 4627, 1928, 3853,
	3632, 2150, 2151, 3133, 4560, 4426, 4186, 4185, 3966, 3625,
	3573, 3132, 2119, 824, 823, 1931, 2239, 1935, 1925, 1262,
	1688, 2420, 1255, 2122, 683, 2146, 3943, 1763, 3137, 2123,
	1762, 4067, 2715, 4019, 3152, 3193, 3194, 4210, 2158, 3758,
	3197, 4830, 1762, 1757, 2423, 2137, 3440, 3316, 4853, 2089,
	1933, 3351, 4352, 4435, 4495, 4273, 3967, 3930, 4740, 3189,
	2476, 3899, 3930, 3886, 3839, 2168, 1237, 4715, 2147, 3411,
	1050, 3574, 998, 2086, 3565, 825, 826, 3407, 3011, 1932,
	2048, 3005, 1237, 3808, 1119, 1119, 1119, 1119, 2413, 3441,
	2993, 3164, 3929, 2166, 1119, 1119, 1119, 3929, 2265, 1119,
	2259, 2253, 2120, 2125, 2245, 2225, 3702, 3627, 4542, 1119,
	1241, 1380, 1533, 2708, 1266, 1119, 3831, 1119, 3308, 3309,
	3632, 3773, 3626, 4598, 754, 999, 1241, 3663, 1935, 3625,
	1060, 1934, 2834, 1762, 1761, 4240, 2159, 3809, 4563, 1068,
	2879, 906, 907, 1930, 1380, 2851, 1761, 2365, 2711, 2084,
	2082, 3969, 4404, 4402, 2990, 1277, 1241, 1239, 4024, 1380,
	1851, 1933, 4333, 3810, 1856, 3807, 894, 895, 2167, 3423,
	3419, 3786, 3291, 1239, 3204, 3418, 2122, 3157, 3135, 2001,
	2303, 3344, 3924, 1380, 3331, 2121, 3313, 2152, 3310, 2710,
	4222, 2085, 1464, 4275, 2709, 3312, 1692, 1691, 1686, 1322,
	1322, 1763, 2755, 1239, 1931, 2754, 2753, 3379, 2752, 1934,
	3381, 3382, 3623, 1763, 3934, 3385, 2997, 3386, 1838, 3387,
	1574, 1057, 1119, 4502, 1588, 1464, 2414, 3627, 1586, 2115,
	3759, 4068, 909, 2127, 1575, 4399, 1119, 1761, 3320, 3760,
	1464, 4201, 3626, 4025, 3315, 2855, 1322, 261, 3846, 4829,
	4341, 2001, 3318, 2126, 3340, 3399, 3400, 3345, 3615, 2263,
	3927, 3539, 1236, 2153, 1464, 3927, 3836, 3324, 4761, 1119,
	4257, 4538, 4320, 2970, 3374, 3362, 3421, 3359, 1236, 3425,
	1954, 3390, 3074, 2975, 2113, 1322, 2973, 2126, 2291, 2196,
	3286, 3287, 3288, 3383, 3319, 3396, 1645, 1995, 3496, 3329,
	1350, 3349, 3337, 1081, 4543, 3332, 3333, 1322, 1236, 1322,
	3330, 3302, 3832, 2880, 2881, 4601, 4608, 1081, 3317, 4503,
	1934, 4328, 4595, 3422, 4074, 4765, 3427, 2114, 1380, 3429,
	3633, 3628, 3629, 3630, 3631, 2179, 3775, 2582, 1670, 1322,
	1970, 1736, 4256, 1322, 2179, 4629, 3408, 3412, 3498, 4766,
	3500, 1738, 3335, 3504, 3336, 4342, 4763, 3510, 1235, 3353,
	3354, 3355, 3325, 4701, 3811, 3485, 3453, 4329, 4530, 1995,
	1322, 2376, 4522, 1735, 1235, 4296, 3455, 4066, 3368, 3369,
	3352, 3370, 3933, 1733, 1322, 1710, 1322, 3283, 3678, 3638,
	1380, 3478, 2581, 3637, 1989, 1989, 3372, 807, 3469, 1708,
	3376, 3377, 1680, 4602, 1235, 3384, 3380, 4504, 1322, 1464,
	1998, 753, 3323, 1678, 2122, 3493, 3391, 3246, 3548, 1676,
	1322, 3471, 1674, 3176, 2994, 2916, 1672, 3837, 2869, 3397,
	3505, 3457, 2782, 2385, 3511, 1666, 1965, 1241, 1961, 1661,
	1739, 3581, 1623, 4452, 4391, 3328, 1659, 3406, 1599, 2356,
	3633, 3628, 3629, 3630, 3631, 3557, 3066, 3284, 1584, 3658,
	3439, 3564, 1322, 1322, 1587, 3066, 3657, 3449, 1585, 1757,
	2205, 1464, 908, 3111, 3462, 4676, 3110, 3081, 2402, 1697,
	3579, 2327, 1998, 3463, 1239, 1322, 3456, 3464, 2244, 3465,
	2224, 2030, 1871, 3572, 1634, 3534, 4444, 3537, 1557, 3486,
	4168, 3890, 3889, 3481, 3601, 4169, 2280, 3497, 3470, 4445,
	3472, 3494, 4152, 4594, 4238, 3590, 3521, 4174, 3507, 4165,
	4110, 3515, 1316, 2294, 3516, 3513, 3965, 3956, 1380, 3902,
	3887, 1380, 3860, 2296, 4233, 1737, 3578, 3858, 3838, 3568,
	3506, 3642, 4446, 3563, 3512, 2304, 3522, 2307, 2308, 2309,
	4738, 2378, 3326, 3327, 3553, 2377, 3526, 1734, 3024, 3520,
	3016, 3575, 1007, 3009, 1119, 3001, 2877, 1732, 3699, 1709,
	1119, 1119, 3541, 3582, 1119, 1119, 1119, 3560, 1119, 3561,
	813, 2987, 3562, 1707, 2968, 2800, 1679, 1119, 2001, 1236,
	3635, 2795, 2223, 177, 177, 2221, 1119, 1677, 3634, 2198,
	3613, 1119, 2181, 1675, 2154, 4448, 1673, 1380, 3587, 1464,
	1671, 2141, 1464, 3589, 2128, 3656, 1119, 3596, 3617, 1665,
	816, 4729, 3580, 1660, 1380, 2069, 3599, 3600, 4447, 2355,
	1658, 2066, 2063, 3655, 2001, 2001, 1119, 1119, 3611, 1119,
	1119, 1119, 1583, 2060, 2055, 2053, 4449, 3645, 2049, 3646,
	2204, 3647, 2040, 1766, 3508, 1973, 3155, 1119, 4754, 2190,
	1060, 1119, 3664, 2001, 2001, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119, 1119,
	1119, 1119, 1119, 1119, 1119, 1235, 1119, 1216, 1464, 3636,
	3731, 2090, 3732, 3652, 1119, 1119, 2001, 3129, 3681, 2388,
	3127, 1119, 4224, 3691, 3692, 1464, 1995, 2961, 4639, 4262,
	3661, 4255, 1119, 1217, 4254, 4181, 3653, 4102, 1012, 1014,
	1016, 4225, 3067, 1241, 1241, 3659, 1538, 1119, 2109, 2831,
	2433, 3722, 2831, 4437, 2856, 4430, 3977, 2136, 1730, 1731,
	2262, 2348, 2317, 1297, 2829, 2386, 1298, 2853, 2351, 2346,
	4638, 3156, 1995, 1995, 2324, 3686, 4144, 1380, 2995, 2433,
	3737, 1657, 3688, 1767, 3804, 1989, 4176, 4125, 1773, 1774,
	1239, 1239, 3509, 3698, 3770, 3705, 3707, 3708, 2859, 4472,
	4075, 1995, 1995, 3714, 4053, 3791, 3434, 2860, 2882, 3721,
	1770, 2387, 3766, 1331, 3829, 1265, 258, 4757, 3830, 1773,
	1774, 4121, 4748, 3953, 3729, 4114, 1119, 4710, 3730, 2986,
	2860, 3709, 2353, 3762, 1995, 3898, 2246, 1342, 3736, 1998,
	3734, 2923, 4112, 1218, 2921, 1298, 1119, 2930, 1298, 1776,
	3777, 4116, 2912, 1775, 3728, 1237, 2037, 3897, 1464, 3859,
	2910, 3861, 2862, 680, 177, 2911, 3096, 4588, 3097, 3782,
	3783, 1237, 3771, 3763, 2864, 4122, 4554, 4548, 4501, 1119,
	1119, 4421, 4397, 4321, 1775, 1998, 1998, 2863, 3963, 3955,
	3942, 3801, 3779, 3780, 3567, 1236, 1236, 3031, 2695, 2075,
	1982, 1237, 4797, 4631, 4339, 3514, 1495, 1494, 4632, 3360,
	1127, 4828, 4550, 4450, 1998, 1998, 2504, 4115, 1505, 4451,
	3793, 3962, 2037, 1119, 3252, 3253, 1773, 1774, 4769, 1644,
	3794, 4631, 1851, 2037, 3901, 1643, 4632, 2823, 2824, 2821,
	2822, 4045, 2577, 3817, 2823, 2821, 2610, 1998, 1712, 4422,
	1322, 1711, 3871, 4373, 4178, 1322, 265, 265, 265, 4173,
	686, 687, 4172, 702, 686, 702, 712, 4041, 3816, 752,
	3710, 3502, 3499, 771, 1865, 1864, 3876, 3878, 777, 2001,
	3875, 4814, 4776, 4592, 4591, 265, 2677, 3821, 2807, 1316,
	4590, 1235, 1235, 3892, 3842, 3900, 3894, 4529, 4528, 4488,
	4400, 4367, 4318, 4315, 4313, 888, 4212, 1307, 4198, 4142,
	1322, 265, 4097, 4001, 3863, 3983, 1119, 3937, 3868, 3856,
	3849, 3571, 3570, 3428, 1241, 1119, 3378, 3979, 3916, 3918,
	3116, 3108, 3089, 3088, 3087, 1322, 1322, 1322, 3086, 3037,
	3986, 3015, 2988, 2854, 2791, 2724, 3910, 2877, 2786, 2775,
	2774, 2763, 1322, 2506, 2379, 3970, 1472, 2352, 2345, 1483,
	1307, 3949, 2344, 3932, 2343, 2342, 3066, 2341, 1322, 2260,
	2234, 1239, 2230, 3971, 1380, 3412, 2229, 2228, 4117, 2227,
	2226, 3922, 2043, 4118, 3931, 2042, 3990, 3974, 2041, 3920,
	2039, 1972, 3950, 1729, 1728, 3909, 3198, 1995, 1667, 1380,
	3921, 3912, 1119, 1119, 1552, 1551, 1550, 3954, 1119, 1119,
	2001, 1549, 3973, 1119, 1119, 1548, 1119, 1547, 2962, 3936,
	1546, 1119, 1541, 4002, 1537, 1535, 1534, 1307, 1307, 1488,
	1487, 1486, 1119, 1371, 1370, 4120, 1369, 1368, 686, 686,
	3957, 1367, 1335, 1334, 3959, 1284, 265, 1283, 1119, 3975,
	1282, 4123, 3972, 1281, 1280, 1464, 3911, 3980, 1279, 1278,
	3981, 1276, 1271, 3985, 1270, 1269, 1268, 1267, 4026, 881,
	8, 4008, 1199, 3993, 3996, 2080, 1236, 3991, 3992, 4010,
	1464, 4000, 1237, 4009, 1018, 1004, 4027, 3999, 4506, 4039,
	3997, 4124, 2375, 1599, 92, 1599, 1543, 843, 86, 2188,
	3855, 2203, 4704, 974, 4628, 1527, 4533, 851, 4610, 1241,
	1998, 4020, 3951, 3430, 2937, 2326, 4015, 1241, 1668, 2328,
	4035, 1380, 3339, 1380, 2737, 4580, 3082, 4049, 1995, 3214,
	1241, 4479, 4289, 2580, 1869, 3295, 88, 1103, 1149, 4208,
	4207, 1322, 1322, 4111, 3841, 3056, 4205, 4204, 1986, 1988,
	1067, 1380, 1383, 4650, 2091, 3344, 1239, 1109, 2107, 2100,
	2776, 2654, 1126, 1123, 1239, 1990, 1992, 1125, 1124, 1991,
	1888, 1122, 1235, 1985, 3961, 3035, 1241, 1239, 1241, 3597,
	4119, 4103, 4104, 1593, 1591, 976, 4065, 2095, 2980, 2500,
	2564, 2983, 3203, 2985, 1862, 1083, 1105, 3356, 2561, 1260,
	1322, 4130, 1464, 4130, 1464, 4145, 1094, 4133, 4083, 1082,
	1380, 3321, 1322, 3300, 3584, 1322, 3800, 2412, 861, 4126,
	3249, 3371, 2567, 1239, 1251, 1239, 1380, 2678, 2670, 2666,
	3388, 3025, 1464, 4086, 1743, 4076, 4079, 3028, 4077, 4078,
	3028, 1998, 177, 4081, 4082, 4107, 4303, 4087, 1840, 4177,
	4072, 4179, 3036, 4146, 1365, 1087, 4090, 2498, 1853, 3181,
	2422, 1236, 3591, 3342, 1322, 1322, 4109, 2769, 4635, 1236,
	3718, 3114, 4095, 2238, 1215, 1214, 1258, 1213, 4616, 4613,
	2178, 3994, 1236, 3546, 1322, 4101, 2083, 4202, 2815, 2510,
	4150, 1464, 3554, 1099, 1482, 4166, 1380, 2369, 3306, 3616,
	1554, 1322, 4180, 4159, 776, 4346, 4162, 1464, 1111, 1989,
	1825, 4199, 2958, 4171, 2957, 4498, 3106, 1351, 1349, 1348,
	1347, 4785, 4851, 3851, 3850, 232, 1241, 3149, 1236, 4164,
	1236, 1764, 1756, 229, 4230, 4196, 1322, 1322, 1322, 231,
	230, 4213, 3805, 3348, 4708, 3873, 4241, 4190, 3538, 1380,
	23, 4130, 22, 21, 112, 4258, 4195, 1235, 4161, 42,
	20, 1119, 1119, 1119, 4242, 1235, 151, 4189, 1237, 1237,
	129, 4188, 148, 1239, 147, 121, 4197, 1464, 1235, 1380,
	146, 1989, 145, 4236, 1119, 4203, 144, 1119, 1119, 4218,
	2677, 143, 150, 142, 4227, 4245, 141, 1119, 136, 140,
	2001, 4151, 139, 138, 137, 1119, 1119, 4243, 135, 133,
	4250, 3533, 134, 4160, 128, 132, 4163, 1483, 131, 130,
	1380, 127, 1322, 126, 1235, 125, 1235, 124, 4281, 123,
	1464, 122, 4229, 120, 119, 118, 117, 116, 4265, 115,
	114, 113, 4264, 764, 766, 1380, 4269, 61, 4267, 60,
	111, 4276, 110, 1119, 19, 40, 14, 4270, 65, 66,
	1464, 18, 1119, 13, 1483, 35, 91, 102, 101, 36,
	1119, 2677, 2677, 4286, 2001, 99, 98, 34, 1236, 4358,
	4359, 17, 4292, 1119, 16, 4226, 1119, 15, 96, 95,
	33, 31, 11, 9, 37, 1949, 12, 5, 182, 1253,
	1119, 1464, 181, 4309, 4310, 4324, 184, 1380, 180, 4374,
	4298, 4376, 183, 4377, 1322, 90, 4349, 179, 1995, 178,
	4312, 89, 29, 10, 1322, 1322, 1464, 174, 4413, 3947,
	81, 176, 1273, 175, 173, 172, 171, 82, 4323, 4332,
	79, 170, 85, 169, 265, 4366, 265, 265, 80, 1302,
	265, 1312, 4325, 84, 3651, 83, 27, 6, 64, 4390,
	4412, 7, 1332, 4378, 3548, 4271, 3639, 1081, 105, 1380,
	4356, 771, 1322, 4369, 1235, 106, 38, 77, 76, 75,
	4403, 26, 4368, 63, 4364, 25, 168, 215, 1464, 214,
	1241, 1241, 1995, 213, 212, 211, 265, 210, 265, 265,
	1302, 209, 265, 265, 4420, 4380, 208, 1312, 203, 4393,
	1119, 1119, 4392, 202, 4375, 4130, 4130, 4431, 4401, 4455,
	4456, 265, 4396, 1507, 207, 205, 4416, 1119, 2001, 204,
	4411, 1998, 4440, 206, 201, 4432, 4395, 1239, 1239, 224,
	218, 217, 4459, 223, 1531, 222, 221, 4434, 220, 1237,
	1464, 2677, 2677, 2677, 2677, 219, 4428, 216, 4433, 226,
	4382, 200, 4439, 1556, 199, 1119, 1312, 4453, 1119, 4438,
	265, 265, 4245, 1302, 198, 1241, 196, 192, 191, 195,
	197, 194, 193, 4468, 4469, 4370, 190, 225, 1241, 72,
	166, 167, 4467, 71, 771, 165, 265, 265, 164, 4494,
	4130, 163, 162, 161, 160, 1998, 159, 70, 24, 2,
	1, 0, 4525, 4130, 0, 4381, 0, 4517, 1989, 888,
	4471, 0, 1239, 0, 0, 0, 0, 0, 4490, 0,
	0, 2250, 1378, 4493, 0, 1239, 1477, 2037, 4477, 4516,
	1119, 1119, 1236, 1236, 2126, 0, 1995, 4511, 0, 4510,
	1119, 0, 4537, 0, 0, 1241, 0, 0, 1241, 0,
	0, 0, 1322, 0, 1989, 1989, 0, 0, 1599, 0,
	0, 4524, 1322, 1322, 0, 0, 4526, 0, 0, 3517,
	4130, 0, 0, 4130, 4557, 0, 0, 4559, 0, 1322,
	4531, 0, 0, 1989, 1989, 265, 3812, 3813, 0, 4545,
	4546, 0, 1239, 1119, 1119, 1239, 4551, 4571, 4544, 4549,
	4552, 3825, 3826, 1119, 3828, 265, 0, 3558, 4556, 0,
	4416, 1081, 1081, 2417, 4565, 4564, 1989, 1236, 0, 3566,
	4567, 0, 3443, 3444, 1237, 3445, 3446, 3447, 1235, 1235,
	1236, 4568, 1237, 4569, 4570, 0, 0, 0, 0, 4575,
	0, 1119, 1119, 0, 1119, 1237, 0, 0, 4585, 1998,
	4574, 0, 0, 0, 0, 0, 0, 4603, 0, 4589,
	0, 3607, 3608, 4615, 4618, 4607, 4584, 0, 4633, 0,
	3487, 3488, 0, 3489, 3490, 3491, 4637, 0, 0, 0,
	0, 0, 2370, 0, 0, 4630, 4606, 4605, 0, 0,
	0, 1237, 4655, 1237, 0, 0, 0, 1236, 0, 4624,
	1236, 4620, 1119, 1119, 1119, 0, 4658, 0, 0, 0,
	0, 0, 0, 1235, 4619, 4659, 0, 4623, 0, 4640,
	3178, 3179, 0, 1081, 0, 0, 1235, 0, 0, 4646,
	4653, 4654, 1119, 0, 0, 0, 0, 4688, 0, 0,
	0, 4675, 0, 0, 0, 0, 0, 0, 4703, 0,
	4706, 4674, 4672, 4673, 0, 4693, 0, 0, 2672, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4711, 4691, 0, 0, 0, 0, 0,
	0, 0, 4722, 4734, 0, 0, 0, 0, 4720, 1119,
	4707, 0, 4718, 1235, 4733, 0, 1235, 0, 0, 0,
	0, 4719, 0, 0, 0, 0, 686, 4739, 0, 0,
	4732, 4727, 0, 4728, 0, 0, 0, 4726, 0, 4755,
	0, 0, 0, 0, 0, 4730, 4731, 265, 4749, 265,
	0, 4736, 0, 265, 4745, 4746, 4751, 4747, 0, 4758,
	4615, 1237, 1241, 4618, 1241, 4759, 1507, 1302, 265, 0,
	265, 4637, 4760, 4762, 2126, 4779, 265, 1507, 702, 4778,
	4792, 4768, 4537, 265, 1507, 4777, 4790, 4130, 4773, 4130,
	4787, 4780, 0, 4782, 4781, 0, 0, 0, 2044, 1989,
	0, 4805, 0, 0, 0, 4791, 0, 0, 0, 1239,
	265, 1239, 0, 0, 0, 4804, 4807, 265, 0, 0,
	3276, 3277, 3278, 3279, 0, 0, 0, 0, 0, 4815,
	0, 0, 0, 4822, 0, 4818, 0, 0, 1119, 1119,
	4820, 0, 0, 0, 0, 4823, 0, 1119, 0, 1119,
	1119, 4816, 2677, 2677, 1307, 4835, 4826, 771, 4832, 4836,
	0, 4842, 0, 0, 0, 0, 4847, 0, 4846, 4844,
	4840, 4845, 0, 0, 4843, 4839, 0, 0, 3037, 0,
	4841, 0, 0, 4855, 4850, 0, 4859, 4854, 4857, 0,
	0, 4860, 0, 4861, 0, 0, 4856, 0, 0, 1964,
	0, 4866, 0, 1307, 4863, 0, 0, 0, 0, 0,
	1119, 4871, 4868, 4873, 1236, 4858, 1236, 4874, 0, 4876,
	4877, 4870, 4833, 4834, 0, 0, 0, 0, 4867, 0,
	1989, 4863, 0, 4080, 0, 0, 0, 0, 0, 0,
	1307, 1307, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677,
	2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677, 2677,
	2677, 2677, 0, 2677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4872, 0, 0, 0, 0, 0, 2037,
	2037, 0, 0, 0, 0, 0, 0, 4134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1235, 0, 1235, 4147, 4148, 0, 0, 265, 0, 0,
	0, 265, 2111, 0, 0, 1237, 1237, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3907,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 2037, 0, 0, 265, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 2037, 0, 2037,
	0, 0, 0, 0, 0, 0, 265, 0, 265, 0,
	1237, 0, 686, 0, 265, 1773, 1774, 0, 0, 0,
	0, 0, 0, 1237, 0, 0, 771, 0, 0, 2037,
	888, 0, 0, 2037, 3987, 3988, 3989, 0, 1804, 0,
	0, 0, 0, 0, 0, 1776, 0, 4261, 0, 0,
	0, 1316, 0, 0, 0, 265, 0, 1302, 265, 0,
	0, 0, 0, 0, 2216, 0, 0, 0, 0, 0,
	0, 1829, 771, 0, 0, 0, 0, 0, 0, 265,
	1775, 0, 3139, 0, 0, 0, 2325, 0, 0, 0,
	1237, 265, 265, 1237, 265, 0, 265, 0, 265, 0,
	265, 1483, 0, 0, 0, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2361, 0, 0, 2362, 0,
	2363, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 265, 265, 265, 0, 3958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 1483, 0, 2672, 2672, 0, 0, 0, 0, 752,
	0, 0, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3674, 3675, 0, 1773, 1774, 1804, 0, 4011, 0,
	1989, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 1804, 0, 0,
	4092, 4093, 0, 0, 1776, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 2512, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 3252, 3253, 0, 3270, 3271, 3272, 1795,
	0, 1796, 0, 0, 1989, 0, 4436, 0, 1792, 0,
	0, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746,
	3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756,
	3757, 0, 3761, 0, 0, 0, 0, 0, 0, 0,
	0, 2436, 0, 0, 0, 0, 686, 3252, 3253, 0,
	3270, 3271, 3272, 2672, 2672, 2672, 2672, 0, 0, 0,
	0, 265, 3677, 0, 0, 0, 0, 0, 3267, 4032,
	686, 0, 1781, 1316, 1826, 4487, 0, 265, 4489, 686,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	0, 265, 0, 1781, 0, 0, 0, 1237, 2953, 1237,
	0, 0, 0, 0, 0, 0, 0, 265, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 1805, 3267, 0, 0, 0, 0, 0, 0, 0,
	0, 2945, 2943, 0, 2578, 0, 0, 0, 2947, 2949,
	2939, 1803, 1805, 0, 0, 4266, 0, 4268, 0, 0,
	1797, 0, 0, 0, 0, 0, 265, 1312, 1989, 0,
	0, 702, 3258, 0, 0, 0, 0, 1790, 1791, 0,
	0, 2790, 0, 0, 0, 0, 0, 265, 0, 1796,
	265, 0, 0, 0, 265, 0, 265, 0, 0, 0,
	0, 1302, 0, 265, 265, 0, 1312, 1312, 2806, 0,
	1796, 0, 0, 265, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 3258, 0, 0, 0,
	0, 0, 4576, 0, 4577, 0, 0, 3274, 0, 2747,
	0, 4314, 4211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4228, 0, 0, 2843, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 4249, 3268,
	0, 0, 265, 1826, 0, 0, 0, 0, 0, 0,
	0, 3274, 0, 0, 0, 265, 4625, 1483, 1483, 4626,
	0, 0, 0, 0, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 2941,
	0, 0, 0, 3268, 0, 0, 1802, 0, 1797, 0,
	2955, 1074, 0, 4394, 0, 2037, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 265, 2978, 0, 0, 1797,
	0, 2954, 2946, 2944, 2948, 2950, 2940, 2942, 2956, 0,
	1483, 0, 0, 4689, 2677, 0, 0, 2952, 0, 0,
	1507, 0, 0, 265, 0, 265, 2826, 0, 1773, 1774,
	0, 0, 265, 0, 0, 2250, 1828, 0, 0, 0,
	0, 0, 3020, 0, 0, 0, 1826, 0, 0, 0,
	2959, 1804, 2843, 0, 686, 0, 0, 1828, 1776, 0,
	0, 0, 0, 3049, 888, 0, 2843, 2843, 3269, 0,
	2677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 1302, 265, 0, 0, 0, 1507, 0,
	1507, 1312, 265, 0, 0, 1302, 0, 1302, 0, 1302,
	0, 0, 3269, 0, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 0, 4786, 0, 0, 0, 0,
	0, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 1307, 0, 0, 0, 0, 0,
	0, 265, 265, 265, 265, 1302, 0, 0, 1302, 0,
	265, 0, 0, 265, 0, 4811, 0, 0, 0, 0,
	0, 4813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2672, 2672, 0, 1781, 0, 0,
	0, 0, 0, 0, 265, 0, 3264, 3265, 3266, 0,
	0, 0, 265, 3263, 3261, 3262, 3254, 3255, 3256, 3257,
	3259, 3260, 0, 0, 0, 0, 0, 0, 2960, 0,
	0, 1316, 1316, 0, 0, 0, 0, 2951, 0, 0,
	0, 0, 0, 0, 2677, 1803, 1805, 0, 1316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	3264, 3265, 3266, 0, 0, 0, 0, 3263, 3261, 3262,
	3254, 3255, 3256, 3257, 3259, 3260, 0, 0, 0, 0,
	0, 0, 0, 0, 2672, 2672, 2672, 2672, 2672, 2672,
	2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672, 2672,
	2672, 2672, 2672, 2672, 1796, 2672, 73, 0, 0, 0,
	1773, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 1804, 0, 0, 0, 4535, 1507, 78,
	1776, 0, 2037, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4555, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 1826, 0, 87,
	0, 1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 2037, 0, 0, 0, 0, 882,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 49, 0, 107, 0, 0, 0, 1829, 93, 104,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 1795, 0, 0, 0,
	0, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 4295, 0, 0, 0, 0, 0, 1781,
	265, 0, 3252, 3253, 0, 3270, 3271, 3272, 4641, 0,
	0, 0, 0, 0, 4643, 0, 265, 94, 0, 0,
	0, 686, 0, 0, 4031, 0, 686, 0, 0, 686,
	0, 1828, 686, 686, 0, 0, 0, 0, 686, 0,
	0, 0, 0, 0, 0, 0, 265, 1803, 1805, 4335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1798, 1799, 1800, 1801, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 3267, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	265, 265, 0, 0, 0, 0, 1796, 0, 1814, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 1803, 1805,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 2843,
	2843, 265, 0, 3403, 0, 0, 3307, 0, 0, 2843,
	0, 0, 3414, 0, 1790, 1791, 0, 0, 0, 0,
	2843, 3414, 0, 2843, 3414, 0, 1307, 3414, 0, 0,
	0, 0, 1812, 97, 2037, 0, 0, 0, 0, 3334,
	0, 3258, 265, 265, 3403, 0, 265, 1796, 0, 1826,
	0, 0, 0, 0, 3347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3403, 0, 265, 0,
	0, 0, 0, 3477, 3477, 0, 1302, 0, 3366, 0,
	0, 0, 0, 0, 0, 0, 185, 100, 0, 0,
	103, 2250, 2843, 4476, 2843, 0, 3503, 2843, 3403, 0,
	0, 2843, 3403, 0, 0, 771, 3274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	1826, 0, 0, 0, 883, 1797, 0, 0, 0, 149,
	0, 0, 1302, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 1507, 0, 0, 0, 0, 3268, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 3542, 0,
	0, 3544, 2843, 0, 235, 265, 0, 0, 73, 265,
	0, 0, 1312, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 74, 0, 265, 0, 0,
	152, 0, 3020, 0, 0, 1302, 1797, 265, 0, 0,
	2843, 78, 686, 0, 0, 189, 0, 0, 0, 2843,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 1815, 0, 0, 227, 0, 0, 0,
	265, 3020, 0, 0, 3020, 228, 0, 0, 0, 0,
	0, 87, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 3644, 0, 0, 0,
	0, 0, 0, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 882, 0, 3650, 0, 3347, 1507, 0, 0, 1302,
	265, 0, 265, 0, 0, 107, 0, 3269, 1302, 0,
	93, 104, 3252, 3253, 0, 3270, 3271, 3272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3683, 0, 1813, 0, 265, 0,
	0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3267, 0, 0,
	0, 0, 0, 0, 0, 0, 3716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2250, 0, 0, 0, 0, 0, 0,
	0, 795, 0, 1477, 0, 0, 1378, 0, 0, 0,
	0, 0, 0, 1307, 0, 3264, 3265, 3266, 1809, 0,
	0, 0, 3263, 3261, 3262, 3254, 3255, 3256, 3257, 3259,
	3260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 265, 2766, 2672, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3695, 0, 0, 97, 686, 686, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 0, 3711,
	801, 0, 0, 0, 0, 0, 0, 0, 1507, 1507,
	0, 0, 0, 0, 794, 0, 3274, 0, 0, 0,
	0, 0, 2672, 1507, 1507, 0, 1507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 100,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3268, 0,
	0, 0, 793, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 883, 0, 0, 747,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 771, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 0, 235, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 1826, 3803, 0, 0, 0, 3477, 0, 0, 0,
	0, 0, 152, 0, 0, 1829, 0, 0, 0, 265,
	0, 0, 0, 0, 1775, 0, 0, 189, 0, 0,
	0, 0, 0, 800, 1795, 234, 0, 0, 0, 0,
	0, 0, 0, 1792, 3403, 0, 265, 0, 227, 1809,
	702, 702, 1312, 0, 0, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 265, 0, 2672, 0, 0, 0,
	0, 0, 0, 73, 265, 0, 0, 3269, 0, 0,
	0, 0, 188, 0, 265, 0, 0, 0, 0, 265,
	74, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 786, 0, 0,
	0, 0, 0, 2843, 265, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 3049, 3049, 0, 0, 0, 1781, 888,
	888, 2843, 0, 0, 0, 3020, 3020, 0, 790, 888,
	2843, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 0, 746, 0, 0, 1803, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 796, 0,
	0, 0, 0, 1820, 788, 1821, 0, 0, 49, 0,
	107, 0, 1790, 1791, 0, 93, 104, 0, 0, 0,
	0, 0, 0, 0, 0, 3264, 3265, 3266, 0, 0,
	1812, 0, 3263, 3261, 3262, 3254, 3255, 3256, 3257, 3259,
	3260, 1809, 0, 0, 0, 1796, 4050, 1809, 0, 0,
	0, 785, 0, 1809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 73, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 748, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 787, 0, 0, 1811, 0, 265,
	78, 0, 0, 0, 0, 1507, 0, 265, 1826, 0,
	0, 0, 0, 0, 0, 0, 798, 799, 0, 0,
	265, 0, 0, 0, 2522, 2523, 2524, 2541, 2542, 2543,
	0, 0, 1809, 0, 0, 1312, 0, 1809, 0, 0,
	87, 0, 0, 0, 2544, 0, 1809, 0, 1312, 0,
	0, 1809, 0, 0, 0, 2843, 2843, 0, 3477, 2843,
	0, 1802, 0, 0, 0, 0, 4132, 0, 4132, 1507,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 2843,
	882, 3414, 0, 0, 1797, 1507, 1507, 265, 3403, 0,
	0, 0, 49, 0, 107, 0, 2534, 0, 0, 93,
	104, 3403, 0, 265, 3403, 2530, 265, 0, 3477, 0,
	97, 1815, 0, 0, 0, 1809, 0, 0, 0, 0,
	0, 1809, 0, 2843, 0, 2843, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 4085, 0,
	0, 0, 0, 0, 0, 0, 1927, 0, 94, 0,
	0, 2843, 0, 185, 100, 0, 4215, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 4099, 265, 0, 0,
	2535, 2536, 2537, 2538, 0, 0, 0, 265, 0, 0,
	2529, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 883, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 4132, 0, 0, 1507,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 235, 4058, 0, 0, 0, 4057, 0, 0, 0,
	0, 0, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	0, 0, 0, 0, 2539, 2540, 0, 152, 0, 0,
	0, 0, 1809, 158, 0, 0, 0, 0, 0, 0,
	0, 73, 189, 46, 45, 1809, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 2532, 74, 0,
	0, 153, 0, 227, 97, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 0, 0,
	2676, 2843, 48, 3414, 155, 0, 4327, 1604, 0, 0,
	0, 0, 0, 1809, 265, 0, 1066, 0, 0, 1809,
	0, 4347, 47, 4347, 87, 0, 0, 185, 100, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 771, 0, 0, 0, 0,
	50, 68, 0, 0, 0, 0, 3477, 233, 1302, 51,
	0, 0, 0, 0, 57, 883, 0, 0, 156, 0,
	149, 0, 0, 3403, 4287, 265, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4327, 0, 0, 0, 0, 235, 0, 0, 2843, 0,
	0, 0, 0, 0, 0, 4287, 2533, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 4425, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 1507, 0,
	2436, 0, 94, 0, 0, 0, 189, 0, 0, 0,
	4132, 4132, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 227, 265, 265,
	0, 0, 0, 0, 1828, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3716, 0, 0, 0, 0, 0, 0, 0,
	0, 1602, 2436, 0, 0, 0, 0, 1507, 0, 0,
	1507, 3477, 4492, 0, 0, 0, 0, 0, 0, 4327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4132, 0,
	0, 0, 0, 0, 2519, 2520, 2521, 2545, 2531, 2525,
	0, 2527, 2528, 2526, 2513, 2514, 2515, 2516, 2517, 2518,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4215,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 4132, 0, 265, 4132, 0,
	56, 0, 0, 0, 0, 59, 0, 0, 3414, 0,
	0, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	58, 185, 100, 0, 0, 103, 0, 0, 0, 54,
	0, 0, 0, 157, 1507, 0, 1507, 0, 0, 0,
	0, 55, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 62,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	4599, 0, 0, 0, 0, 0, 0, 0, 0, 154,
	0, 0, 0, 4347, 0, 0, 265, 0, 0, 0,
	3252, 3253, 0, 3270, 3271, 3272, 0, 0, 1507, 235,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 1231,
	2843, 0, 3682, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 0, 0, 0, 152, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 1809, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 260, 260, 682, 3716, 0,
	0, 227, 0, 0, 0, 3267, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 1507, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 3, 0,
	0, 1809, 0, 0, 0, 265, 0, 0, 0, 0,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 1809, 1809, 1809, 1809, 1809, 0, 4327, 0, 1327,
	0, 1809, 0, 1809, 1809, 1809, 1809, 0, 0, 3258,
	0, 0, 0, 0, 0, 2676, 2676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 1066, 0, 0,
	1809, 0, 0, 0, 0, 2843, 0, 0, 0, 0,
	73, 0, 4132, 0, 4132, 0, 0, 1507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 74, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 3274, 0, 1151, 0, 1509, 0,
	1515, 1809, 1521, 0, 0, 0, 0, 1507, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 3253, 0, 3270, 3271, 3272,
	0, 1809, 0, 87, 1809, 0, 3268, 1809, 0, 0,
	1809, 0, 0, 0, 1809, 1809, 1809, 1809, 1809, 1809,
	1809, 0, 0, 3049, 0, 0, 0, 0, 0, 0,
	0, 0, 2843, 0, 0, 0, 0, 0, 0, 1610,
	0, 1615, 0, 882, 0, 0, 0, 0, 3049, 0,
	0, 1624, 0, 1629, 0, 0, 0, 107, 0, 0,
	0, 0, 93, 104, 0, 0, 0, 0, 0, 3267,
	0, 0, 1773, 1774, 0, 0, 0, 0, 0, 1826,
	1809, 0, 0, 3273, 0, 2676, 2676, 2676, 2676, 0,
	0, 0, 1809, 0, 1809, 1804, 0, 0, 0, 1809,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	0, 94, 1699, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 3269, 1792, 0, 0, 0,
	0, 0, 0, 3258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1804, 0, 0, 0,
	0, 0, 1242, 1776, 3275, 0, 0, 0, 0, 0,
	3672, 0, 1823, 1773, 1774, 0, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 0, 0, 0, 0, 3274, 1829,
	0, 1798, 1799, 1800, 1801, 0, 1804, 0, 1775, 0,
	0, 1781, 0, 1776, 0, 0, 0, 0, 1795, 1850,
	0, 0, 0, 0, 0, 1863, 0, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 1829,
	3268, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 1803,
	1805, 0, 0, 3264, 3265, 3266, 0, 1792, 0, 0,
	3263, 3261, 3262, 3254, 3255, 3256, 3257, 3259, 3260, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	185, 100, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 1826, 0, 0, 0, 0, 1796, 0,
	233, 3671, 0, 0, 0, 0, 0, 0, 883, 0,
	1921, 1921, 1921, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	1814, 0, 1781, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 0, 1809, 1809, 0, 1809, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1821,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 3269,
	0, 1826, 0, 0, 152, 0, 0, 0, 0, 0,
	1803, 1805, 0, 0, 1812, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 1796,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 1288, 0, 1288, 1288, 0, 0, 1796,
	0, 0, 0, 1822, 188, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	0, 1481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 3264, 3265, 3266,
	0, 0, 1826, 0, 3263, 3261, 3262, 3254, 3255, 3256,
	3257, 3259, 3260, 1809, 1809, 1802, 2676, 2676, 0, 0,
	1809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3273, 3273, 0, 0, 1809, 1809, 0, 0, 1797, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 1809, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 1608, 1609, 0, 1797, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676, 2676,
	2676, 2676, 2676, 2676, 2676, 2676, 0, 2676, 3273, 3273,
	3273, 3273, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 1720, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 1242, 0, 0, 3227, 1242, 0, 0,
	3228, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2349,
	0, 0, 0, 0, 1242, 1809, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 2373, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2411, 0,
	2415, 0, 0, 0, 0, 0, 0, 2429, 0, 0,
	1242, 0, 0, 0, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	0, 2479, 0, 2481, 2482, 2483, 2484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 0, 0, 0, 0, 0, 0, 2508,
	0, 0, 0, 0, 0, 0, 0, 1968, 0, 1481,
	0, 1850, 0, 0, 0, 2559, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2589, 2592, 2595, 2598, 0, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 0, 0, 0, 0, 0, 0, 1288,
	0, 0, 0, 0, 0, 0, 1481, 0, 0, 0,
	0, 0, 0, 0, 2668, 0, 2680, 2682, 2687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 1809, 0, 0, 1809, 3273, 3273, 1809, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1809, 1809, 1809, 1809,
	0, 0, 0, 0, 0, 1809, 0, 1809, 0, 0,
	3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273,
	3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273, 3273,
	0, 0, 0, 3273, 0, 0, 1809, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1809, 0,
	0, 0, 0, 1242, 0, 1242, 0, 1809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 1809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 1829,
	0, 0, 0, 2236, 0, 0, 0, 2243, 1775, 1242,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 2256,
	0, 0, 0, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 1242, 0, 2268, 0, 2268, 0, 0,
	0, 0, 0, 2275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2981, 2982, 0, 2984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3167, 0, 0, 2243, 0, 0, 2300, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 2320, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 2333, 0, 2335, 0, 2337, 0, 2339, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 1809, 0, 0, 0, 1809, 1809, 0, 0, 1809,
	1809, 0, 0, 0, 1809, 0, 0, 0, 1809, 0,
	1803, 1805, 0, 1809, 0, 1242, 1242, 0, 0, 0,
	0, 2366, 2367, 2368, 0, 1242, 0, 0, 2676, 0,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 1830, 1831, 0, 0, 1242,
	0, 1242, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 0, 0, 0, 716, 0, 1242,
	1242, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 1242, 1242, 1242, 0, 0, 0,
	0, 3161, 3162, 0, 0, 0, 717, 3168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 1802, 3182, 3183, 0, 0,
	0, 0, 2559, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1809, 1809, 1809, 3192, 0, 0,
	720, 0, 0, 0, 0, 1809, 1809, 3273, 2676, 0,
	2744, 0, 0, 3206, 1809, 0, 0, 1809, 0, 0,
	0, 0, 0, 721, 0, 0, 1828, 0, 0, 0,
	3218, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2002, 1242, 0, 0, 722, 0, 3273, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 0, 0, 747, 0, 1809, 0, 0,
	0, 0, 0, 0, 1809, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 2792, 0, 0, 1288,
	0, 0, 0, 1288, 0, 1288, 0, 0, 0, 0,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 2256, 0, 0, 0, 0, 0, 0, 0,
	2687, 2687, 2687, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1921, 0, 0, 0, 734,
	0, 0, 0, 3311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3273, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 1809,
	0, 0, 1809, 1242, 0, 0, 0, 0, 744, 0,
	725, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 1481, 0, 0, 1773, 1774, 0, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 745,
	0, 726, 0, 0, 0, 0, 1810, 1804, 1066, 0,
	0, 0, 0, 0, 1776, 1809, 0, 0, 0, 0,
	0, 0, 1066, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	1829, 0, 2243, 0, 0, 0, 0, 727, 0, 1775,
	0, 2256, 742, 743, 740, 3433, 0, 0, 0, 1795,
	735, 0, 0, 728, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3080, 0, 0, 729, 0, 736, 0, 0,
	0, 1115, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 3091, 0, 3094, 0, 0, 0, 1242, 0, 0,
	731, 0, 0, 1809, 0, 739, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 748,
	0, 0, 0, 1781, 1809, 0, 0, 264, 264, 264,
	733, 2002, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3122, 1481, 3124, 1481, 0, 0, 814, 0, 0, 3130,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 1242,
	0, 1803, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 0, 0, 1242, 0, 0, 1820, 0,
	1821, 0, 0, 1288, 0, 0, 0, 1790, 1791, 0,
	0, 3158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 1809, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1822, 0, 1242, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1238, 0, 0,
	2429, 0, 0, 0, 0, 0, 3669, 3670, 0, 0,
	3673, 0, 0, 0, 3676, 0, 0, 0, 0, 0,
	0, 0, 0, 3680, 0, 0, 0, 0, 0, 0,
	0, 0, 3687, 0, 0, 0, 1802, 3311, 0, 0,
	0, 0, 0, 0, 2647, 2648, 2649, 2650, 2643, 2644,
	2645, 2646, 3700, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3723, 3724, 0, 3725, 3726, 3727, 0, 0,
	0, 0, 0, 0, 0, 0, 1815, 0, 0, 0,
	0, 0, 0, 3733, 0, 0, 0, 3735, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	834, 0, 0, 0, 0, 835, 2623, 2624, 2625, 2626,
	3764, 3765, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3776, 2635,
	2636, 2637, 2638, 2631, 2632, 2633, 2634, 2639, 2640, 2641,
	2642, 0, 0, 3785, 836, 0, 853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 837, 0, 0, 0, 0, 838, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 2555, 862, 0,
	0, 2556, 0, 0, 839, 2619, 2620, 2621, 2622, 2627,
	2628, 2629, 2630, 0, 1773, 1774, 0, 0, 860, 0,
	0, 0, 3833, 0, 0, 1288, 0, 0, 0, 1481,
	1481, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 833, 3844, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3401, 0, 0, 840, 0, 0, 841, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 3872, 0, 864, 1775,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 1795,
	0, 0, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 3452, 3454, 0, 0, 2256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 1242, 0, 0,
	0, 0, 3160, 0, 0, 0, 0, 863, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	1242, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 0, 0, 2002, 0, 0, 0, 1242,
	0, 3982, 0, 0, 3555, 0, 0, 842, 3559, 0,
	0, 1803, 1805, 0, 0, 1242, 1242, 0, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 845,
	0, 0, 0, 0, 0, 264, 0, 264, 264, 0,
	0, 264, 1242, 0, 0, 0, 0, 2002, 0, 3612,
	1796, 0, 0, 0, 0, 854, 0, 0, 4028, 4029,
	0, 0, 0, 0, 4033, 4034, 0, 746, 0, 4037,
	4038, 0, 0, 0, 0, 0, 0, 4042, 0, 0,
	831, 1242, 855, 0, 0, 0, 0, 264, 4046, 264,
	264, 846, 0, 264, 264, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 4051, 1242, 0, 0, 0, 3654,
	0, 1481, 814, 0, 0, 0, 852, 0, 0, 0,
	0, 0, 0, 1826, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 847, 0, 1242, 0, 848, 867, 1242,
	866, 0, 0, 0, 849, 0, 0, 3667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 264, 264, 859, 0, 0, 1242, 0, 0, 868,
	0, 865, 0, 0, 0, 0, 1802, 748, 0, 0,
	1242, 0, 1242, 0, 0, 0, 1242, 264, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 0, 0, 1242, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1810, 1804, 0,
	0, 0, 0, 1242, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 1242, 1242,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 1242, 0, 0, 0, 0, 264, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 0, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2002, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 1814, 0, 0, 1824, 0, 4282, 4283, 4284,
	1242, 0, 1803, 1805, 0, 0, 0, 0, 0, 0,
	2002, 2002, 0, 0, 0, 0, 0, 0, 0, 1820,
	2429, 1821, 0, 4293, 4294, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2002, 4302, 4305, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2256, 0, 0, 4348, 1242,
	1242, 0, 0, 0, 0, 1822, 4355, 0, 1943, 0,
	1238, 0, 0, 2256, 264, 0, 0, 0, 0, 4362,
	0, 0, 1066, 3946, 0, 0, 0, 0, 0, 264,
	1943, 264, 0, 1242, 1826, 0, 4371, 814, 2256, 0,
	0, 0, 0, 3964, 814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 4013, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4497, 0, 0, 4500, 0, 1242, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 1066, 264, 0,
	1242, 0, 814, 0, 0, 0, 4553, 0, 0, 0,
	0, 1242, 1242, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 264, 4149, 0, 0, 264,
	2429, 0, 0, 0, 0, 264, 0, 0, 0, 4305,
	0, 264, 2256, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 264, 0, 264,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 2256, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4237, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 4671, 4671,
	4671, 0, 814, 264, 0, 264, 0, 264, 0, 264,
	0, 264, 0, 0, 1128, 1242, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 0, 1242, 4692, 1242,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1242, 1242, 0,
	0, 0, 0, 264, 264, 264, 264, 1242, 0, 0,
	266, 266, 266, 0, 0, 0, 0, 0, 0, 1773,
	1774, 0, 0, 0, 0, 1817, 1818, 1819, 0, 0,
	0, 0, 1242, 0, 1242, 4671, 0, 0, 0, 266,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 1242, 0, 1823, 0,
	0, 0, 0, 0, 0, 266, 1242, 0, 1242, 0,
	0, 1242, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1242, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 4336, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 715, 1242, 0, 2256, 0, 716, 1242, 0, 0,
	0, 0, 0, 0, 4671, 4827, 0, 0, 0, 0,
	0, 0, 0, 4831, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 1242, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 1242, 1242, 1242, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1242, 718, 0, 0, 0,
	0, 0, 1238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 719, 1238, 1824,
	0, 0, 0, 0, 0, 1242, 1803, 1805, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 4466, 1481, 738,
	0, 0, 0, 0, 0, 0, 2002, 0, 264, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 1242, 0, 1242, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 0, 0, 1796, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 722, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	2002, 264, 0, 0, 747, 264, 0, 264, 0, 0,
	0, 0, 0, 0, 264, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 0, 0, 0, 737,
	0, 0, 0, 1242, 0, 0, 0, 0, 1826, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 734, 0,
	0, 1802, 0, 264, 0, 1242, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 1242, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1773, 1774,
	0, 0, 0, 0, 2002, 4609, 0, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	0, 1804, 1828, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 0,
	726, 0, 0, 0, 264, 0, 814, 0, 0, 0,
	4648, 1242, 0, 264, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 746, 0,
	0, 0, 1792, 0, 0, 0, 727, 0, 0, 0,
	0, 742, 743, 740, 1813, 0, 0, 0, 0, 735,
	0, 0, 728, 0, 264, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 0, 264, 4712, 264, 0, 0, 0, 0,
	0, 1242, 0, 264, 1242, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 729, 0, 736, 0, 1242, 1242,
	0, 0, 0, 0, 0, 730, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 1242, 0, 1781, 0, 731,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 264, 264, 264, 264, 0, 0, 748, 0,
	0, 264, 0, 0, 264, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 1104, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 266, 0,
	266, 266, 0, 0, 266, 264, 1325, 0, 0, 0,
	0, 0, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 1325, 266, 266, 1796, 1325, 266, 266, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 109, 0,
	0, 1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 1810, 1804, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 1325, 0, 266, 266, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 1325, 0, 0, 0, 1775, 0, 0, 1325,
	266, 266, 0, 0, 0, 0, 1795, 0, 0, 0,
	0, 0, 1041, 1325, 0, 1792, 0, 0, 0, 0,
	0, 0, 0, 1061, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 0, 0, 1242, 0,
	1242, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1798, 1799, 1800, 1801, 0, 0, 0, 0, 0, 266,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1238, 0, 0, 0, 0, 0, 0, 1814, 0,
	0, 1824, 0, 0, 0, 0, 0, 1238, 1803, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1820, 0, 1821, 0, 0,
	0, 0, 0, 0, 1790, 1791, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 264, 264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 264, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 1325, 0,
	0, 0, 266, 266, 266, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	1325, 0, 0, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 1828, 0, 0, 0, 814, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 1238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 264, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 3685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 1325, 1325, 266, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 109,
	0, 109, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 266, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 1061, 109, 109, 0, 0, 1325, 0, 1325,
	0, 1325, 0, 0, 0, 0, 0, 0, 109, 0,
	109, 0, 0, 0, 0, 0, 0, 1325, 1325, 0,
	109, 0, 109, 0, 1238, 1238, 0, 0, 1325, 266,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 1325, 1325, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 266, 0, 266, 0,
	266, 0, 266, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 266, 266, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 1041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 270, 0, 1849, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 1941, 0, 1944, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 266, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 266, 0, 0, 0, 266, 0,
	266, 0, 0, 0, 0, 0, 0, 266, 266, 0,
	0, 0, 0, 1325, 1325, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1238, 0, 0, 0, 0, 0, 0, 0, 1238, 0,
	0, 0, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 1943, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 1943, 0, 1943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 1325, 264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 264, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 266,
	0, 1325, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 264, 0,
	0, 0, 0, 0, 1325, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 1325, 0, 0, 0, 0, 0, 1943, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 1061, 266, 1061,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 266, 266, 266, 0,
	0, 0, 0, 0, 266, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 0, 1041, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 1061,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	1120, 1943, 1943, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 0, 0, 1381, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1225, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 1943,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 1323, 0, 1325, 0, 109, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 1943, 0, 264, 1943,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1325, 0, 1323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 1325, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 266, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 264, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 266, 0, 1325,
	266, 0, 264, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 266, 1325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 1325, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 0, 0,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 1325, 0,
	1325, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 266, 109, 0, 0, 109, 0, 0, 0, 266,
	0, 109, 1325, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1943, 0, 1943, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 1325, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 1381,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 806, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817,
	1818, 1819, 1325, 0, 266, 1325, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 1810, 1804, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 1323, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 1381, 0, 0, 0, 0, 1792, 0, 0,
	0, 1325, 0, 2497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 1324, 1824, 1323, 1323, 0, 0, 0, 0,
	1803, 1805, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 1821,
	0, 1325, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 1382, 0, 0, 1812, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1225, 0, 0, 0, 1323, 0,
	1323, 0, 1323, 1822, 0, 0, 0, 0, 1324, 0,
	1225, 0, 0, 0, 0, 0, 0, 0, 1323, 1323,
	0, 1811, 0, 0, 0, 0, 0, 0, 1324, 1323,
	0, 0, 1826, 0, 0, 1324, 0, 0, 0, 0,
	0, 1323, 0, 1323, 1323, 1323, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 1325,
	266, 0, 0, 0, 1324, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 1815, 0, 0, 266, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 1325, 0, 0, 109, 109, 0,
	109, 109, 109, 0, 0, 0, 1828, 0, 0, 0,
	0, 1381, 0, 0, 0, 0, 0, 0, 0, 1325,
	1325, 1325, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 1325, 0, 0, 0, 266, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 1325, 0, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 1381, 0, 0, 0, 0, 0,
	3230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1225, 0, 0, 1061, 0, 0, 0, 0, 0,
	0, 0, 0, 1381, 0, 0, 0, 0, 109, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 1325, 0, 1325, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1325, 1325, 0, 0, 0,
	0, 0, 0, 0, 1382, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1325, 0, 1325, 266, 0, 1325,
	266, 0, 0, 0, 1323, 1323, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 0, 1325, 1325,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 266, 0, 0, 0, 1325, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1381, 0,
	1325, 1325, 1325, 0, 0, 0, 947, 0, 995, 109,
	0, 0, 0, 1325, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1225, 0,
	0, 0, 955, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 969, 0,
	953, 952, 0, 0, 0, 0, 0, 0, 0, 0,
	806, 0, 1323, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 971, 0, 0, 0, 0, 0, 954, 1382,
	0, 0, 0, 957, 1325, 0, 1325, 0, 1003, 0,
	0, 0, 0, 1323, 0, 0, 0, 966, 967, 0,
	0, 0, 0, 0, 0, 1323, 984, 1323, 0, 1325,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 1323, 0, 996, 959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 993, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1325, 0, 1324, 0, 1324, 0, 1324, 1325, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 1325, 1325,
	0, 994, 0, 1324, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 962, 0, 0,
	0, 0, 0, 0, 0, 951, 1324, 0, 1324, 1324,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1325, 963, 964, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 972, 970, 0, 0, 0, 0, 0,
	0, 965, 0, 1773, 1774, 981, 1806, 1807, 1808, 1817,
	1818, 1819, 266, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 1000, 992, 1810, 1804, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 1225, 0,
	0, 0, 0, 0, 0, 997, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 0, 0, 0, 0, 1382, 1792, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 958, 0,
	0, 1002, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 956, 0, 0, 0, 988, 989,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 1798, 1799, 1800, 1801, 1325, 0, 0, 0,
	0, 0, 1781, 0, 986, 0, 1325, 1325, 0, 1382,
	0, 0, 1001, 982, 0, 0, 975, 973, 0, 978,
	0, 0, 0, 1325, 0, 979, 0, 0, 949, 0,
	998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 950, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 1225, 990, 0, 980, 1820, 0, 1821,
	0, 1225, 977, 0, 0, 0, 1790, 1791, 1382, 0,
	266, 0, 0, 999, 0, 0, 1381, 0, 0, 0,
	0, 983, 0, 0, 1812, 0, 0, 0, 0, 0,
	961, 0, 0, 0, 1382, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 985, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 1381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 1323, 1323, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1323, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 0, 0, 1797, 0,
	1323, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 1323, 1815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 1828, 0, 1323, 0,
	0, 0, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	0, 1323, 0, 0, 0, 1381, 0, 0, 0, 0,
	0, 0, 806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 1324, 1813, 0,
	0, 0, 0, 0, 0, 1323, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 0, 0, 0, 0, 1324, 0,
	3229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 1324, 0, 0, 0, 0, 1323, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1381, 0, 0, 1381, 0, 0, 0,
	0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1804, 2497, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1381, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1803,
	1805, 0, 1381, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 109, 0, 0, 0, 0, 0, 109,
	0, 1382, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 0, 0,
	1323, 0, 0, 1382, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	1324, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1323, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 1323, 1323, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 1381,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 1324,
	0, 0, 0, 1324, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 3226,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 1324, 0, 0, 0,
	1382, 0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 1810, 1804, 0, 0, 0,
	1324, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1381, 0, 1381, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 1324, 1324, 0, 0, 1323, 1323, 1795, 0,
	0, 0, 0, 0, 0, 0, 1381, 1792, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 1382, 0,
	0, 1382, 0, 0, 0, 1381, 0, 1323, 0, 0,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1323,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 1824, 0, 0, 0, 1382, 0, 1323,
	1803, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1381, 0, 0, 1382, 0, 1323, 1820, 0, 1821,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 1323, 1323, 1323, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 1381, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1381, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1381, 0, 0, 0, 0, 0, 0, 1323,
	0, 0, 0, 0, 0, 1815, 0, 0, 0, 1323,
	1323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 0, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 1324, 0, 0, 1810, 1804,
	0, 0, 0, 0, 0, 0, 1776, 0, 1813, 0,
	0, 0, 0, 0, 0, 1823, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 1829, 0, 0, 0, 0, 0, 0, 0,
	3225, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 1324, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 1800, 1801, 1382,
	0, 0, 0, 0, 0, 1781, 0, 1323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 1323, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1323, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 1803, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 1821, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 1382, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 1382, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 1324, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 1324, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 0, 1815, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 1324, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0, 0,
	1382, 0, 1324, 3224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1379,
	0, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 1324, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 1384, 281, 282, 1385, 1386, 1387, 1324,
	1388, 628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 1393, 633, 293, 294, 295, 296, 297, 298,
	1394, 1395, 0, 299, 634, 635, 636, 1396, 300, 301,
	637, 1397, 1326, 1398, 302, 303, 304, 305, 306, 307,
	308, 0, 1399, 310, 311, 312, 309, 313, 1400, 314,
	0, 315, 316, 317, 318, 319, 320, 1401, 321, 322,
	323, 1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406,
	1407, 1408, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 1409, 336, 333, 334, 1410, 337, 335, 338, 1411,
	339, 340, 341, 1412, 1413, 342, 343, 344, 1414, 345,
	346, 1415, 347, 348, 349, 1416, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 1417, 271, 1418, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 1419, 368, 369,
	1420, 1421, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 1422, 382, 646,
	1423, 647, 383, 1424, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 1425, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	1426, 1185, 399, 651, 652, 1427, 653, 1428, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1429, 413, 415,
	414, 1430, 416, 655, 1190, 417, 418, 1191, 1431, 419,
	0, 0, 0, 420, 421, 424, 1432, 1433, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1434, 273, 1194, 465, 466, 1435,
	656, 467, 657, 469, 470, 1436, 0, 471, 0, 1437,
	1438, 473, 474, 475, 1439, 1440, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 1441, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 1442, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 1443, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 1444,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 1445, 554, 555, 553, 556, 557,
	558, 1446, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 1447,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 1448, 586, 587, 0,
	583, 574, 1449, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 1450, 596, 669, 670, 671, 672, 1451, 605,
	1452, 597, 598, 599, 673, 600, 674, 1453, 601, 602,
	603, 604, 0, 606, 607, 1454, 1455, 608, 609, 610,
	612, 613, 611, 614, 1456, 615, 1457, 0, 616, 617,
	618, 675, 676, 677, 1458, 620, 619, 621, 678, 1459,
	622, 1460, 1461, 1462, 1463, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1379, 0,
	0, 0, 0, 0, 0, 0, 2722, 0, 0, 0,
	0, 0, 0, 0, 2723, 274, 276, 275, 277, 278,
	279, 280, 1384, 281, 282, 1385, 1386, 1387, 0, 1388,
	628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 1393, 633, 293, 294, 295, 296, 297, 298, 1394,
	1395, 0, 299, 634, 635, 636, 1396, 300, 301, 637,
	1397, 1326, 1398, 302, 303, 304, 305, 306, 307, 308,
	0, 1399, 310, 311, 312, 309, 313, 1400, 314, 0,
	315, 316, 317, 318, 319, 320, 1401, 321, 322, 323,
	1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406, 1407,
	1408, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	1409, 336, 333, 334, 1410, 337, 335, 338, 1411, 339,
	340, 341, 1412, 1413, 342, 343, 344, 1414, 345, 346,
	1415, 347, 348, 349, 1416, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 1417, 271, 1418, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 1419, 368, 369, 1420,
	1421, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1422, 382, 646, 1423,
	647, 383, 1424, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 1425, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 1426,
	1185, 399, 651, 652, 1427, 653, 1428, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 1429, 413, 415, 414,
	1430, 416, 655, 1190, 417, 418, 1191, 1431, 419, 0,
	0, 0, 420, 421, 424, 1432, 1433, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1434, 273, 1194, 465, 466, 1435, 656,
	467, 657, 469, 470, 1436, 0, 471, 0, 1437, 1438,
	473, 474, 475, 1439, 1440, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 1441, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	1442, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 1443, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 1444, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 1445, 554, 555, 553, 556, 557, 558,
	1446, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 1447, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 1448, 586, 587, 0, 583,
	574, 1449, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 1450, 596, 669, 670, 671, 672, 1451, 605, 1452,
	597, 598, 599, 673, 600, 674, 1453, 601, 602, 603,
	604, 0, 606, 607, 1454, 1455, 608, 609, 610, 612,
	613, 611, 614, 1456, 615, 1457, 0, 616, 617, 618,
	675, 676, 677, 1458, 620, 619, 621, 678, 1459, 622,
	1460, 1461, 1462, 1463, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	3694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3696, 274, 276, 275, 277, 278, 279, 280, 1384,
	281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390,
	1391, 1392, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 1393, 633,
	293, 294, 295, 296, 297, 298, 1394, 1395, 0, 299,
	634, 635, 636, 1396, 300, 301, 637, 1397, 1326, 1398,
	302, 303, 304, 305, 306, 307, 308, 0, 1399, 310,
	311, 312, 309, 313, 1400, 314, 0, 315, 316, 317,
	318, 319, 320, 1401, 321, 322, 323, 1183, 324, 325,
	326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 1409, 336, 333,
	334, 1410, 337, 335, 338, 1411, 339, 340, 341, 1412,
	1413, 342, 343, 344, 1414, 345, 346, 1415, 347, 348,
	349, 1416, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 1417, 271,
	1418, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 1419, 368, 369, 1420, 1421, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1422, 382, 646, 1423, 647, 383, 1424,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 1425, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 1426, 1185, 399, 651,
	652, 1427, 653, 1428, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1429, 413, 415, 414, 1430, 416, 655,
	1190, 417, 418, 1191, 1431, 419, 0, 0, 0, 420,
	421, 424, 1432, 1433, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1434, 273, 1194, 465, 466, 1435, 656, 467, 657, 469,
	470, 1436, 0, 471, 0, 1437, 1438, 473, 474, 475,
	1439, 1440, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 1441, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 1442, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 1443, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 1444, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	1445, 554, 555, 553, 556, 557, 558, 1446, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 1447, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 1448, 586, 587, 0, 583, 574, 1449, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 1450, 596,
	669, 670, 671, 672, 1451, 605, 1452, 597, 598, 599,
	673, 600, 674, 1453, 601, 602, 603, 604, 0, 606,
	607, 1454, 1455, 608, 609, 610, 612, 613, 611, 614,
	1456, 615, 1457, 0, 616, 617, 618, 675, 676, 677,
	1458, 620, 619, 621, 678, 1459, 622, 1460, 1461, 1462,
	1463, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4084, 274, 276, 275, 277, 278, 279, 280,
	1384, 281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389,
	1390, 1391, 1392, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 1393,
	633, 293, 294, 295, 296, 297, 298, 1394, 1395, 0,
	299, 634, 635, 636, 1396, 300, 301, 637, 1397, 1326,
	1398, 302, 303, 304, 305, 306, 307, 308, 0, 1399,
	310, 311, 312, 309, 313, 1400, 314, 0, 315, 316,
	317, 318, 319, 320, 1401, 321, 322, 323, 1183, 324,
	325, 326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 1409, 336,
	333, 334, 1410, 337, 335, 338, 1411, 339, 340, 341,
	1412, 1413, 342, 343, 344, 1414, 345, 346, 1415, 347,
	348, 349, 1416, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 1417,
	271, 1418, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 1419, 368, 369, 1420, 1421, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1422, 382, 646, 1423, 647, 383,
	1424, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	1186, 389, 390, 1425, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 1426, 1185, 399,
	651, 652, 1427, 653, 1428, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1429, 413, 415, 414, 1430, 416,
	655, 1190, 417, 418, 1191, 1431, 419, 0, 0, 0,
	420, 421, 424, 1432, 1433, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1434, 273, 1194, 465, 466, 1435, 656, 467, 657,
	469, 470, 1436, 0, 471, 0, 1437, 1438, 473, 474,
	475, 1439, 1440, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 1441, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 1442, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 1443, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 1444, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 1445, 554, 555, 553, 556, 557, 558, 1446, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 1447, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 1448, 586, 587, 0, 583, 574, 1449,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 1450,
	596, 669, 670, 671, 672, 1451, 605, 1452, 597, 598,
	599, 673, 600, 674, 1453, 601, 602, 603, 604, 0,
	606, 607, 1454, 1455, 608, 609, 610, 612, 613, 611,
	614, 1456, 615, 1457, 0, 616, 617, 618, 675, 676,
	677, 1458, 620, 619, 621, 678, 1459, 622, 1460, 1461,
	1462, 1463, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4288, 274,
	276, 275, 277, 278, 279, 280, 1384, 281, 282, 1385,
	1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 1393, 633, 293, 294, 295,
	296, 297, 298, 1394, 1395, 0, 299, 634, 635, 636,
	1396, 300, 301, 637, 1397, 1326, 1398, 302, 303, 304,
	305, 306, 307, 308, 0, 1399, 310, 311, 312, 309,
	313, 1400, 314, 0, 315, 316, 317, 318, 319, 320,
	1401, 321, 322, 323, 1183, 324, 325, 326, 1402, 1403,
	1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 1409, 336, 333, 334, 1410, 337,
	335, 338, 1411, 339, 340, 341, 1412, 1413, 342, 343,
	344, 1414, 345, 346, 1415, 347, 348, 349, 1416, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 1417, 271, 1418, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	1419, 368, 369, 1420, 1421, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1422, 382, 646, 1423, 647, 383, 1424, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 1425,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1426, 1185, 399, 651, 652, 1427, 653,
	1428, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1429, 413, 415, 414, 1430, 416, 655, 1190, 417, 418,
	1191, 1431, 419, 0, 0, 0, 420, 421, 424, 1432,
	1433, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1434, 273, 1194,
	465, 466, 1435, 656, 467, 657, 469, 470, 1436, 0,
	471, 0, 1437, 1438, 473, 474, 475, 1439, 1440, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 1441, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 1442, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	1443, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 1444, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 1445, 554, 555,
	553, 556, 557, 558, 1446, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 1447, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 1448,
	586, 587, 0, 583, 574, 1449, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 1450, 596, 669, 670, 671,
	672, 1451, 605, 1452, 597, 598, 599, 673, 600, 674,
	1453, 601, 602, 603, 604, 0, 606, 607, 1454, 1455,
	608, 609, 610, 612, 613, 611, 614, 1456, 615, 1457,
	0, 616, 617, 618, 675, 676, 677, 1458, 620, 619,
	621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4158, 274, 276, 275, 277, 278,
	279, 280, 1384, 281, 282, 1385, 1386, 1387, 0, 1388,
	628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 1393, 633, 293, 294, 295, 296, 297, 298, 1394,
	1395, 0, 299, 634, 635, 636, 1396, 300, 301, 637,
	1397, 1326, 1398, 302, 303, 304, 305, 306, 307, 308,
	0, 1399, 310, 311, 312, 309, 313, 1400, 314, 0,
	315, 316, 317, 318, 319, 320, 1401, 321, 322, 323,
	1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406, 1407,
	1408, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	1409, 336, 333, 334, 1410, 337, 335, 338, 1411, 339,
	340, 341, 1412, 1413, 342, 343, 344, 1414, 345, 346,
	1415, 347, 348, 349, 1416, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 1417, 271, 1418, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 1419, 368, 369, 1420,
	1421, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1422, 382, 646, 1423,
	647, 383, 1424, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 1425, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 1426,
	1185, 399, 651, 652, 1427, 653, 1428, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 1429, 413, 415, 414,
	1430, 416, 655, 1190, 417, 418, 1191, 1431, 419, 0,
	0, 0, 420, 421, 424, 1432, 1433, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1434, 273, 1194, 465, 466, 1435, 656,
	467, 657, 469, 470, 1436, 0, 471, 0, 1437, 1438,
	473, 474, 475, 1439, 1440, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 1441, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	1442, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 1443, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 1444, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 1445, 554, 555, 553, 556, 557, 558,
	1446, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 1447, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 1448, 586, 587, 0, 583,
	574, 1449, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 1450, 596, 669, 670, 671, 672, 1451, 605, 1452,
	597, 598, 599, 673, 600, 674, 1453, 601, 602, 603,
	604, 0, 606, 607, 1454, 1455, 608, 609, 610, 612,
	613, 611, 614, 1456, 615, 1457, 0, 616, 617, 618,
	675, 676, 677, 1458, 620, 619, 621, 678, 1459, 622,
	1460, 1461, 1462, 1463, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4014, 274, 276, 275, 277, 278, 279, 280, 1384, 281,
	282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390, 1391,
	1392, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 1393, 633, 293,
	294, 295, 296, 297, 298, 1394, 1395, 0, 299, 634,
	635, 636, 1396, 300, 301, 637, 1397, 1326, 1398, 302,
	303, 304, 305, 306, 307, 308, 0, 1399, 310, 311,
	312, 309, 313, 1400, 314, 0, 315, 316, 317, 318,
	319, 320, 1401, 321, 322, 323, 1183, 324, 325, 326,
	1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 1409, 336, 333, 334,
	1410, 337, 335, 338, 1411, 339, 340, 341, 1412, 1413,
	342, 343, 344, 1414, 345, 346, 1415, 347, 348, 349,
	1416, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 1417, 271, 1418,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 1419, 368, 369, 1420, 1421, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1422, 382, 646, 1423, 647, 383, 1424, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 1186, 389,
	390, 1425, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 1426, 1185, 399, 651, 652,
	1427, 653, 1428, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 1429, 413, 415, 414, 1430, 416, 655, 1190,
	417, 418, 1191, 1431, 419, 0, 0, 0, 420, 421,
	424, 1432, 1433, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1434,
	273, 1194, 465, 466, 1435, 656, 467, 657, 469, 470,
	1436, 0, 471, 0, 1437, 1438, 473, 474, 475, 1439,
	1440, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	1441, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 1442, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 1443, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 1444, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 1445,
	554, 555, 553, 556, 557, 558, 1446, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 1447, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 1448, 586, 587, 0, 583, 574, 1449, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 1450, 596, 669,
	670, 671, 672, 1451, 605, 1452, 597, 598, 599, 673,
	600, 674, 1453, 601, 602, 603, 604, 0, 606, 607,
	1454, 1455, 608, 609, 610, 612, 613, 611, 614, 1456,
	615, 1457, 0, 616, 617, 618, 675, 676, 677, 1458,
	620, 619, 621, 678, 1459, 622, 1460, 1461, 1462, 1463,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	1379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3712, 274, 276, 275,
	277, 278, 279, 280, 1384, 281, 282, 1385, 1386, 1387,
	0, 1388, 628, 1389, 1390, 1391, 1392, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 1393, 633, 293, 294, 295, 296, 297,
	298, 1394, 1395, 0, 299, 634, 635, 636, 1396, 300,
	301, 637, 1397, 1326, 1398, 302, 303, 304, 305, 306,
	307, 308, 0, 1399, 310, 311, 312, 309, 313, 1400,
	314, 0, 315, 316, 317, 318, 319, 320, 1401, 321,
	322, 323, 1183, 324, 325, 326, 1402, 1403, 1405, 1404,
	1406, 1407, 1408, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 1409, 336, 333, 334, 1410, 337, 335, 338,
	1411, 339, 340, 341, 1412, 1413, 342, 343, 344, 1414,
	345, 346, 1415, 347, 348, 349, 1416, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 1417, 271, 1418, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 1419, 368,
	369, 1420, 1421, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1422, 382,
	646, 1423, 647, 383, 1424, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 1425, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 1426, 1185, 399, 651, 652, 1427, 653, 1428, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 1429, 413,
	415, 414, 1430, 416, 655, 1190, 417, 418, 1191, 1431,
	419, 0, 0, 0, 420, 421, 424, 1432, 1433, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1434, 273, 1194, 465, 466,
	1435, 656, 467, 657, 469, 470, 1436, 0, 471, 0,
	1437, 1438, 473, 474, 475, 1439, 1440, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 1441, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 1442, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 1443, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	1444, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 1445, 554, 555, 553, 556,
	557, 558, 1446, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	1447, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 1448, 586, 587,
	0, 583, 574, 1449, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 1450, 596, 669, 670, 671, 672, 1451,
	605, 1452, 597, 598, 599, 673, 600, 674, 1453, 601,
	602, 603, 604, 0, 606, 607, 1454, 1455, 608, 609,
	610, 612, 613, 611, 614, 1456, 615, 1457, 0, 616,
	617, 618, 675, 676, 677, 1458, 620, 619, 621, 678,
	1459, 622, 1460, 1461, 1462, 1463, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 1379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3540, 274, 276, 275, 277, 278, 279, 280,
	1384, 281, 282, 1385, 1386, 1387, 0, 1388, 628, 1389,
	1390, 1391, 1392, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 1393,
	633, 293, 294, 295, 296, 297, 298, 1394, 1395, 0,
	299, 634, 635, 636, 1396, 300, 301, 637, 1397, 1326,
	1398, 302, 303, 304, 305, 306, 307, 308, 0, 1399,
	310, 311, 312, 309, 313, 1400, 314, 0, 315, 316,
	317, 318, 319, 320, 1401, 321, 322, 323, 1183, 324,
	325, 326, 1402, 1403, 1405, 1404, 1406, 1407, 1408, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 1409, 336,
	333, 334, 1410, 337, 335, 338, 1411, 339, 340, 341,
	1412, 1413, 342, 343, 344, 1414, 345, 346, 1415, 347,
	348, 349, 1416, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 1417,
	271, 1418, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 1419, 368, 369, 1420, 1421, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1422, 382, 646, 1423, 647, 383,
	1424, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	1186, 389, 390, 1425, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 1426, 1185, 399,
	651, 652, 1427, 653, 1428, 401, 402, 1187, 654, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1429, 413, 415, 414, 1430, 416,
	655, 1190, 417, 418, 1191, 1431, 419, 0, 0, 0,
	420, 421, 424, 1432, 1433, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1434, 273, 1194, 465, 466, 1435, 656, 467, 657,
	469, 470, 1436, 0, 471, 0, 1437, 1438, 473, 474,
	475, 1439, 1440, 476, 477, 658, 1195, 478, 1196, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 1441, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 1442, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 1443, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 1444, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 1445, 554, 555, 553, 556, 557, 558, 1446, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 1447, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 1448, 586, 587, 0, 583, 574, 1449,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 1450,
	596, 669, 670, 671, 672, 1451, 605, 1452, 597, 598,
	599, 673, 600, 674, 1453, 601, 602, 603, 604, 0,
	606, 607, 1454, 1455, 608, 609, 610, 612, 613, 611,
	614, 1456, 615, 1457, 0, 616, 617, 618, 675, 676,
	677, 1458, 620, 619, 621, 678, 1459, 622, 1460, 1461,
	1462, 1463, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2579, 274,
	276, 275, 277, 278, 279, 280, 1384, 281, 282, 1385,
	1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 1393, 633, 293, 294, 295,
	296, 297, 298, 1394, 1395, 0, 299, 634, 635, 636,
	1396, 300, 301, 637, 1397, 1326, 1398, 302, 303, 304,
	305, 306, 307, 308, 0, 1399, 310, 311, 312, 309,
	313, 1400, 314, 0, 315, 316, 317, 318, 319, 320,
	1401, 321, 322, 323, 1183, 324, 325, 326, 1402, 1403,
	1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 1409, 336, 333, 334, 1410, 337,
	335, 338, 1411, 339, 340, 341, 1412, 1413, 342, 343,
	344, 1414, 345, 346, 1415, 347, 348, 349, 1416, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 1417, 271, 1418, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	1419, 368, 369, 1420, 1421, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1422, 382, 646, 1423, 647, 383, 1424, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 1425,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1426, 1185, 399, 651, 652, 1427, 653,
	1428, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1429, 413, 415, 414, 1430, 416, 655, 1190, 417, 418,
	1191, 1431, 419, 0, 0, 0, 420, 421, 424, 1432,
	1433, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1434, 273, 1194,
	465, 466, 1435, 656, 467, 657, 469, 470, 1436, 0,
	471, 0, 1437, 1438, 473, 474, 475, 1439, 1440, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 1441, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 1442, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	1443, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 1444, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 1445, 554, 555,
	553, 556, 557, 558, 1446, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 1447, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 1448,
	586, 587, 0, 583, 574, 1449, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 1450, 596, 669, 670, 671,
	672, 1451, 605, 1452, 597, 598, 599, 673, 600, 674,
	1453, 601, 602, 603, 604, 0, 606, 607, 1454, 1455,
	608, 609, 610, 612, 613, 611, 614, 1456, 615, 1457,
	0, 616, 617, 618, 675, 676, 677, 1458, 620, 619,
	621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624,
	679, 625, 626, 627, 0, 0, 1475, 0, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 274, 276, 275, 277, 278,
	279, 280, 1384, 281, 282, 1385, 1386, 1387, 0, 1388,
	628, 1389, 1390, 1391, 1392, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 1393, 633, 293, 294, 295, 296, 297, 298, 1394,
	1395, 0, 299, 634, 635, 636, 1396, 300, 301, 637,
	1397, 1326, 1398, 302, 303, 304, 305, 306, 307, 308,
	0, 1399, 310, 311, 312, 309, 313, 1400, 314, 0,
	315, 316, 317, 318, 319, 320, 1401, 321, 322, 323,
	1183, 324, 325, 326, 1402, 1403, 1405, 1404, 1406, 1407,
	1408, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	1409, 336, 333, 334, 1410, 337, 335, 338, 1411, 339,
	340, 341, 1412, 1413, 342, 343, 344, 1414, 345, 346,
	1415, 347, 348, 349, 1416, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 1417, 271, 1418, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 1419, 368, 369, 1420,
	1421, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1422, 382, 646, 1423,
	647, 383, 1424, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 1186, 389, 390, 1425, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 1426,
	1185, 399, 651, 652, 1427, 653, 1428, 401, 402, 1187,
	654, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 1429, 413, 415, 414,
	1430, 416, 655, 1190, 417, 418, 1191, 1431, 419, 0,
	0, 0, 420, 421, 424, 1432, 1433, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1434, 273, 1194, 465, 466, 1435, 656,
	467, 657, 469, 470, 1436, 0, 471, 0, 1437, 1438,
	473, 474, 475, 1439, 1440, 476, 477, 658, 1195, 478,
	1196, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 1441, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	1442, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 1443, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 1444, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 1445, 554, 555, 553, 556, 557, 558,
	1446, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 1447, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 1448, 586, 587, 0, 583,
	574, 1449, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 1450, 596, 669, 670, 671, 672, 1451, 605, 1452,
	597, 598, 599, 673, 600, 674, 1453, 601, 602, 603,
	604, 0, 606, 607, 1454, 1455, 608, 609, 610, 612,
	613, 611, 614, 1456, 615, 1457, 0, 616, 617, 618,
	675, 676, 677, 1458, 620, 619, 621, 678, 1459, 622,
	1460, 1461, 1462, 1463, 623, 624, 679, 625, 626, 627,
	1376, 0, 1379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 1384, 281, 282, 1385,
	1386, 1387, 0, 1388, 628, 1389, 1390, 1391, 1392, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 1393, 633, 293, 294, 295,
	296, 297, 298, 1394, 1395, 0, 299, 634, 635, 636,
	1396, 300, 301, 637, 1397, 1326, 1398, 302, 303, 304,
	305, 306, 307, 308, 0, 1399, 310, 311, 312, 309,
	313, 1400, 314, 0, 315, 316, 317, 318, 319, 320,
	1401, 321, 322, 323, 1183, 324, 325, 326, 1402, 1403,
	1405, 1404, 1406, 1407, 1408, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 1409, 336, 333, 334, 1410, 337,
	335, 338, 1411, 339, 340, 341, 1412, 1413, 342, 343,
	344, 1414, 345, 346, 1415, 347, 348, 349, 1416, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 1417, 271, 1418, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	1419, 368, 369, 1420, 1421, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1422, 382, 646, 1423, 647, 383, 1424, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 1186, 389, 390, 1425,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 1426, 1185, 399, 651, 652, 1427, 653,
	1428, 401, 402, 1187, 654, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1429, 413, 415, 414, 1430, 416, 655, 1190, 417, 418,
	1191, 1431, 419, 0, 0, 0, 420, 421, 424, 1432,
	1433, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1434, 273, 1194,
	465, 466, 1435, 656, 467, 657, 469, 470, 1436, 0,
	471, 0, 1437, 1438, 473, 474, 475, 1439, 1440, 476,
	477, 658, 1195, 478, 1196, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 1441, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 1442, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	1443, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 1444, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 1445, 554, 555,
	553, 556, 557, 558, 1446, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 1447, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 1448,
	586, 587, 0, 583, 574, 1449, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 1450, 596, 669, 670, 671,
	672, 1451, 605, 1452, 597, 598, 599, 673, 600, 674,
	1453, 601, 602, 603, 604, 0, 606, 607, 1454, 1455,
	608, 609, 610, 612, 613, 611, 614, 1456, 615, 1457,
	0, 616, 617, 618, 675, 676, 677, 1458, 620, 619,
	621, 678, 1459, 622, 1460, 1461, 1462, 1463, 623, 624,
	679, 625, 626, 627, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 1384, 281,
	282, 1385, 1386, 1387, 0, 1388, 628, 1389, 1390, 1391,
	1392, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 1393, 633, 293,
	294, 295, 296, 297, 298, 1394, 1395, 0, 299, 634,
	635, 636, 1396, 300, 301, 637, 1397, 1326, 1398, 302,
	303, 304, 305, 306, 307, 308, 0, 1399, 310, 311,
	312, 309, 313, 1400, 314, 0, 315, 316, 317, 318,
	319, 320, 1401, 321, 322, 323, 1183, 324, 325, 326,
	1402, 1403, 1405, 1404, 1406, 1407, 1408, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 1409, 336, 333, 334,
	1410, 337, 335, 338, 1411, 339, 340, 341, 1412, 1413,
	342, 343, 344, 1414, 345, 346, 1415, 347, 348, 349,
	1416, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 1417, 271, 1418,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 1419, 368, 369, 1420, 1421, 1184, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1422, 382, 646, 1423, 647, 383, 1424, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 1186, 389,
	390, 1425, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 1426, 1185, 399, 651, 652,
	1427, 653, 1428, 401, 402, 1187, 654, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 1429, 413, 415, 414, 1430, 416, 655, 1190,
	417, 418, 1191, 1431, 419, 0, 0, 0, 420, 421,
	424, 1432, 1433, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1434,
	273, 1194, 465, 466, 1435, 656, 467, 657, 469, 470,
	1436, 0, 471, 0, 1437, 1438, 473, 474, 475, 1439,
	1440, 476, 477, 658, 1195, 478, 1196, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	1441, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 1442, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 1443, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 1444, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 1445,
	554, 555, 553, 556, 557, 558, 1446, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 1447, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 1448, 586, 587, 0, 583, 574, 1449, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 1450, 596, 669,
	670, 671, 672, 1451, 605, 1452, 597, 598, 599, 673,
	600, 674, 1453, 601, 602, 603, 604, 0, 606, 607,
	1454, 1455, 608, 609, 610, 612, 613, 611, 614, 1456,
	615, 1457, 0, 616, 617, 618, 675, 676, 677, 1458,
	620, 619, 621, 678, 1459, 622, 1460, 1461, 1462, 1463,
	623, 624, 679, 625, 626, 627, 2554, 0, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 2551, 281, 282, 0, 0, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 2552, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 2550, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	2553, 0, 0, 0, 0, 0, 0, 1102, 2549, 0,
	1062, 1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 233, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 235, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 1600, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 227, 623, 624,
	679, 625, 626, 627, 1076, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 1854, 1852, 0, 0, 1100, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 233,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 235, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 1600, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 227,
	623, 624, 679, 625, 626, 627, 1076, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 1854, 3180, 0, 0, 1100, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 233, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 235,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 1600, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 227, 623, 624, 679, 625, 626, 627, 1076, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 1854, 1852, 0, 0, 1100,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 2683, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	2688, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	2684, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 2685,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 2599, 0, 1118, 1090, 1091, 1092, 1088, 1089, 1101,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	274, 276, 275, 277, 278, 279, 280, 1102, 281, 282,
	0, 1100, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 332, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 1163, 1200, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1076, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 0, 0, 0, 0, 0,
	0, 0, 1102, 2597, 0, 2596, 1100, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 0,
	0, 0, 0, 0, 0, 0, 1102, 2594, 0, 2593,
	1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 0, 0, 0, 0, 0, 0, 0,
	1102, 2591, 0, 2590, 1100, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 0, 0, 0,
	0, 0, 0, 0, 1102, 2588, 0, 1695, 1100, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 273, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 1694, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1076, 1065, 0, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 274, 276, 275, 277, 278, 279, 280, 1102, 281,
	282, 0, 1100, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 1080, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 675, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1076, 0, 0, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 274, 276, 275, 277,
	278, 279, 280, 1102, 281, 282, 0, 1100, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 4621, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 273, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 1080,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 274, 276, 275, 277, 278, 279, 280, 1102, 281,
	282, 0, 1100, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	2431, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 2430, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 675, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1076, 0, 0, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 274, 276, 275, 277,
	278, 279, 280, 1102, 281, 282, 0, 1100, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 273, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 1080,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088, 1089,
	1101, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 274, 276, 275, 277, 278, 279, 280, 1102, 281,
	282, 0, 1100, 0, 0, 0, 1142, 1106, 0, 0,
	0, 283, 284, 1182, 285, 286, 287, 288, 289, 290,
	629, 1155, 0, 291, 1162, 292, 1161, 0, 1172, 293,
	294, 295, 296, 297, 298, 1108, 1141, 1073, 299, 1202,
	1203, 636, 0, 300, 301, 1148, 0, 1129, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	4365, 320, 0, 321, 322, 323, 1183, 324, 325, 326,
	1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329,
	330, 331, 1165, 332, 1159, 1158, 1078, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 1150, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 1084, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 1173, 1174, 363, 1097, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 1157, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 1184, 370, 371,
	372, 1170, 1171, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 1180, 0, 1107, 383, 0, 384,
	385, 386, 387, 388, 1143, 1144, 1147, 468, 1186, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 1185, 399, 1152, 1153,
	0, 1113, 0, 401, 402, 1187, 1145, 1188, 403, 404,
	405, 1189, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 1181, 1190,
	417, 418, 1191, 0, 419, 0, 0, 0, 420, 421,
	424, 1136, 1135, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 1192, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 1193, 464, 453, 1075,
	273, 1194, 465, 466, 1098, 1146, 467, 1160, 469, 470,
	0, 0, 471, 0, 1080, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 1195, 478, 1196, 1175, 479, 480,
	1085, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 1176, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 1156, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 1197, 532,
	533, 534, 535, 536, 1086, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 1139, 559, 560, 542,
	543, 561, 562, 1198, 563, 564, 565, 566, 567, 568,
	569, 1154, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 1201, 577, 578, 579, 580, 1177, 584,
	585, 0, 586, 587, 1072, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 1166,
	1167, 1168, 1169, 0, 605, 0, 597, 598, 599, 1178,
	600, 1179, 1096, 601, 602, 603, 604, 0, 606, 607,
	0, 1079, 608, 609, 610, 612, 613, 611, 614, 1140,
	615, 0, 0, 616, 617, 618, 675, 1163, 1200, 0,
	620, 619, 621, 678, 0, 622, 0, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 1076, 0, 0, 1118,
	1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0,
	0, 0, 0, 0, 1069, 1070, 274, 276, 275, 277,
	278, 279, 280, 1102, 281, 282, 0, 1100, 0, 0,
	0, 1142, 1106, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 1155, 0, 291, 1162,
	292, 1161, 0, 1172, 293, 294, 295, 296, 297, 298,
	1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 1165, 332, 1159,
	1158, 1078, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 1150, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 1084, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 1097, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 1157, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 1170, 1171, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 1107, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 1152, 1153, 0, 1113, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 1075, 3976, 1194, 465, 466, 1098,
	1146, 467, 1160, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 1085, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 1156, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 1086,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 1154, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 1201, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 1072,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 1166, 1167, 1168, 1169, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 1096, 601, 602,
	603, 604, 0, 606, 607, 0, 1079, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 1163, 1200, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1076, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 0, 1069,
	1070, 1922, 0, 0, 0, 0, 0, 0, 1102, 0,
	0, 0, 1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 1142, 1106, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	1155, 0, 291, 1162, 292, 1161, 0, 1172, 293, 294,
	295, 296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203,
	636, 0, 300, 301, 1148, 0, 1129, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 1132,
	1130, 1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330,
	331, 1165, 332, 1159, 1158, 1078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	1150, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 1084, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 1173, 1174, 363, 1097, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 1157, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	1170, 1171, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 1180, 0, 1107, 383, 0, 384, 385,
	386, 387, 388, 1143, 1144, 1147, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 1185, 399, 1152, 1153, 0,
	1113, 0, 401, 402, 1187, 1145, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 1181, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	1136, 1135, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 1075, 273,
	1194, 465, 466, 1098, 1146, 467, 1160, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 1175, 479, 480, 1085,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	1176, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 1156, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 1086, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 1139, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	1154, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 1201, 577, 578, 579, 580, 1177, 584, 585,
	0, 586, 587, 1072, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 1166, 1167,
	1168, 1169, 0, 605, 0, 597, 598, 599, 1178, 600,
	1179, 1096, 601, 602, 603, 604, 0, 606, 607, 0,
	1079, 608, 609, 610, 612, 613, 611, 614, 1140, 615,
	0, 0, 616, 617, 618, 675, 1163, 1200, 3690, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1076, 0, 0, 1118, 1090,
	1091, 1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0,
	0, 0, 0, 1069, 1070, 274, 276, 275, 277, 278,
	279, 280, 1102, 281, 282, 0, 1100, 0, 0, 0,
	1142, 1106, 0, 0, 0, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 1155, 0, 291, 1162, 292,
	1161, 0, 1172, 293, 294, 295, 296, 297, 298, 1108,
	1141, 1073, 299, 1202, 1203, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 1165, 332, 1159, 1158,
	1078, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 1150, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 1084, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 1097, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 1157, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 1170, 1171, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	1107, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 1152, 1153, 0, 1113, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 1075, 273, 1194, 465, 466, 1098, 1146,
	467, 1160, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 1085, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 1156, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 1086, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 1154, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 1201, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 1072, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 1166, 1167, 1168, 1169, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 1096, 601, 602, 603,
	604, 0, 606, 607, 0, 1079, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 1163, 1200, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	1076, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 0, 1069, 1070,
	1922, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 1106, 0, 0, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 1155,
	0, 291, 1162, 292, 1161, 0, 1172, 293, 294, 295,
	296, 297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	1165, 332, 1159, 1158, 1078, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 1150,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 1084, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 1097, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 1157, 0, 0, 0, 367,
	0, 368, 369, 0, 2688, 1184, 370, 371, 372, 1170,
	1171, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 1107, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 1152, 1153, 0, 1113,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 1075, 273, 1194,
	465, 466, 1098, 1146, 467, 1160, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 1085, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 1156, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 1086, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 1154,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 1201, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 1072, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 1166, 1167, 1168,
	1169, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	1096, 601, 602, 603, 604, 0, 606, 607, 0, 1079,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 1163, 1200, 0, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 1076, 0, 0, 1118, 1090, 1091,
	1092, 1088, 1089, 1101, 0, 1071, 0, 0, 0, 0,
	0, 0, 1069, 1070, 274, 276, 275, 277, 278, 279,
	280, 1102, 281, 282, 0, 1100, 0, 0, 0, 1142,
	1106, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 1155, 0, 291, 1162, 292, 1161,
	0, 1172, 293, 294, 295, 296, 297, 298, 1108, 1141,
	1073, 299, 1202, 1203, 636, 0, 300, 301, 1148, 0,
	1129, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137,
	327, 328, 329, 330, 331, 1165, 332, 1159, 1158, 1078,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 1150, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 1084, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 1173, 1174, 363,
	1097, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	1157, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 1170, 1171, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 1180, 0, 1107,
	383, 0, 384, 385, 386, 387, 388, 1143, 1144, 1147,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 1185,
	399, 1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 1181, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 1136, 1135, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 1075, 273, 1194, 465, 466, 1098, 1146, 467,
	1160, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	1175, 479, 480, 1085, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 1176, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	1156, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 1086, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 1139,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 1154, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 1201, 577, 578, 579,
	580, 1177, 584, 585, 0, 586, 587, 1072, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 1166, 1167, 1168, 1169, 0, 605, 0, 597,
	598, 599, 1178, 600, 1179, 1096, 601, 602, 603, 604,
	0, 606, 607, 0, 1079, 608, 609, 610, 612, 613,
	611, 614, 1140, 615, 0, 0, 616, 617, 618, 675,
	1163, 1200, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 0, 1069, 1070, 0,
	0, 0, 0, 0, 0, 0, 1102, 1852, 0, 2693,
	1100, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 2691, 0, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 2679,
	0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 2667, 0, 1118, 1090, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 332, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 1076, 2665,
	0, 2656, 2663, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	2659, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 2660,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 2661, 434, 2658, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 2662, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 2657, 627, 1076, 2653, 0, 2656, 2663, 1091, 1092,
	1088, 1089, 1101, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 274, 276, 275, 277, 278, 279, 280,
	1102, 281, 282, 0, 1100, 0, 0, 0, 1142, 1106,
	0, 0, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 1155, 0, 291, 1162, 292, 1161, 0,
	1172, 293, 294, 295, 296, 297, 298, 1108, 1141, 1073,
	299, 1202, 1203, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 1165, 2659, 1159, 1158, 1078, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 1150, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 1084, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 1097,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 1157,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 1170, 1171, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 1107, 383,
	0, 384, 385, 386, 2660, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	1152, 1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 2661, 434, 2658, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 1085, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 1156,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 1086, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	2662, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 1154, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 1201, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 1072, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 1166, 1167, 1168, 1169, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 1096, 601, 602, 603, 604, 0,
	606, 607, 0, 1079, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 1163,
	1200, 0, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 2657, 627, 1076, 0,
	0, 1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071,
	0, 0, 0, 0, 0, 0, 1069, 1070, 274, 276,
	275, 277, 278, 279, 280, 1102, 281, 282, 0, 1100,
	0, 0, 0, 1142, 1106, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 1155, 0,
	291, 1162, 292, 1161, 0, 1172, 293, 294, 295, 296,
	297, 298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0,
	300, 301, 1148, 0, 1129, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 1132, 1130, 1131,
	1138, 1134, 1133, 1137, 327, 328, 329, 330, 331, 1165,
	332, 1159, 1158, 1078, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 1150, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	1084, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 1173, 1174, 363, 1097, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 1157, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 1170, 1171,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 1180, 0, 1107, 383, 0, 384, 385, 386, 387,
	388, 1143, 1144, 1147, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 1185, 399, 1152, 1153, 0, 1113, 0,
	401, 402, 1187, 1145, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 1181, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 1136, 1135,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 1075, 273, 1194, 465,
	466, 1098, 1146, 467, 1160, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 1175, 479, 480, 1085, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 1176, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 1156, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 1086, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 1139, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 1154, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	1201, 577, 578, 579, 580, 1177, 584, 585, 0, 586,
	587, 1072, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 1166, 1167, 1168, 1169,
	0, 605, 0, 597, 598, 599, 1178, 600, 1179, 1096,
	601, 602, 603, 604, 0, 606, 607, 0, 1079, 608,
	609, 610, 612, 613, 611, 614, 1140, 615, 0, 0,
	616, 617, 618, 675, 1163, 1200, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1076, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 1069, 1070, 0, 0, 0, 0, 0, 1860, 0,
	1102, 0, 0, 0, 1100, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 2410,
	281, 282, 0, 0, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 2374, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 2350, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 1700, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 1630, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 1625, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 1616, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 1611, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 1523, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1522, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 1517, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1516, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 1510, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 1328, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 4670, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 4669, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 4668, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	4670, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 4669,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 4307, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 4308, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 4306, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092, 3147,
	3148, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	1118, 1090, 1091, 1092, 3145, 3146, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 1069, 1070, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 1076, 0, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 1071, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 1073, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 1078, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	1075, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 1085, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 1086, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 1072, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 1079, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1076, 0, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 1071, 0,
	0, 0, 0, 0, 0, 2418, 2419, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 0, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 1187, 1145, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 273, 1194, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 1118, 1090, 1091, 1092, 1088,
	1089, 1101, 0, 2675, 0, 0, 0, 0, 0, 0,
	2673, 2674, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 1106, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 1155, 0, 291, 1162, 292, 1161, 0, 1172,
	293, 294, 295, 296, 297, 298, 1108, 1141, 0, 299,
	1202, 1203, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 1165, 332, 1159, 1158, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 1150, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 1084, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 1097, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 1157, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 1170, 1171, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 1107, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 1152,
	1153, 0, 1113, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 273, 1194, 465, 466, 1098, 1146, 467, 1160, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 1156, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 3140, 3141, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 1154, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 1201, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	1166, 1167, 1168, 1169, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 1096, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 1163, 1200,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	1118, 1090, 1091, 1092, 1088, 1089, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 2105, 2106, 274, 276, 275,
	277, 278, 279, 280, 1102, 281, 282, 0, 1100, 0,
	0, 0, 1142, 1106, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 0, 1155, 0, 291,
	1162, 292, 1161, 0, 1172, 293, 294, 295, 296, 297,
	298, 1108, 1141, 1073, 299, 1202, 1203, 636, 0, 300,
	301, 1148, 0, 1129, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 4670, 1132, 1130, 1131, 1138,
	1134, 1133, 1137, 327, 328, 329, 330, 331, 1165, 332,
	1159, 1158, 1078, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 1084,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	1173, 1174, 363, 1097, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 1157, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 1170, 1171, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	1180, 0, 1107, 383, 0, 384, 385, 386, 387, 388,
	1143, 1144, 1147, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 1185, 399, 1152, 1153, 0, 1113, 0, 401,
	402, 0, 1145, 0, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 1181, 1190, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 1136, 1135, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 1075, 273, 0, 465, 466,
	1098, 1146, 467, 1160, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 1175, 479, 480, 1085, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 1176, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 1156, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	1086, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 1139, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 1154, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 1201,
	577, 578, 579, 580, 1177, 584, 585, 0, 586, 587,
	1072, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 1166, 1167, 1168, 1169, 0,
	605, 0, 597, 598, 599, 1178, 600, 1179, 1096, 601,
	602, 603, 604, 0, 4669, 607, 0, 1079, 608, 609,
	610, 612, 613, 611, 614, 1140, 615, 0, 0, 616,
	617, 618, 675, 1163, 1200, 0, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 1062, 0, 1240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1069, 1070, 274, 276, 275, 277, 278, 279, 280, 1102,
	281, 282, 0, 1100, 0, 0, 0, 1142, 0, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 1141, 0, 299,
	634, 635, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 1226, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 273, 1194, 465, 466, 0, 1146, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 1232, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 1234, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	233, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 0, 583, 574, 235, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 1600, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 1240, 0,
	227, 623, 624, 679, 625, 626, 627, 0, 0, 228,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1142, 0, 1230, 0, 1946, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	1141, 0, 299, 634, 635, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 1226, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 273, 1194, 465, 466, 0, 1146,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 1232,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 1234,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 233, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 0, 583,
	574, 235, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	1600, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	3304, 0, 1240, 227, 623, 624, 679, 625, 626, 627,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 1230, 0, 1946, 0, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 1141, 0, 299, 634, 635, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	1226, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 273, 1194,
	465, 466, 0, 1146, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 1232, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 1234, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 1222, 0, 1240, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 1142, 1230,
	0, 1228, 0, 283, 284, 1182, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 1141, 0,
	299, 634, 635, 636, 0, 300, 301, 1148, 0, 1129,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 1183, 324,
	325, 326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 1173, 1174, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 1184,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 1180, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 1143, 1144, 1147, 468,
	1186, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 1185, 399,
	651, 652, 0, 653, 0, 401, 402, 1187, 1145, 1188,
	403, 404, 405, 1189, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 1226, 413, 415, 414, 0, 416,
	1181, 1190, 417, 418, 1191, 0, 419, 0, 0, 0,
	420, 421, 424, 1136, 1135, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 1192, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 1193, 464,
	453, 0, 273, 1194, 465, 466, 0, 1146, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 1232, 473, 474,
	475, 0, 0, 476, 477, 658, 1195, 478, 1196, 1175,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 1176, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	1197, 532, 533, 534, 535, 536, 665, 1234, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 1139, 559,
	560, 542, 543, 561, 562, 1198, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	1177, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 1178, 600, 1179, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 1140, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 0, 1240,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 1142, 0, 1230, 0, 1228, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 1141, 0, 299, 634, 635, 636, 0, 300, 301,
	1148, 0, 1129, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134,
	1133, 1137, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 1173,
	1174, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 1180,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1143,
	1144, 1147, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 1145, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 1226, 413, 415,
	414, 0, 416, 1181, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 1136, 1135, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 273, 1194, 465, 466, 0,
	1146, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	1232, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 1175, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 1176, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	1234, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 1139, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 1177, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 1178, 600, 1179, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 1140, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 0, 1240, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 1142, 0, 1230, 0, 1228, 283,
	284, 1182, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 1141, 0, 299, 634, 635, 636,
	0, 300, 301, 1148, 0, 1129, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 1183, 324, 325, 326, 1132, 1130,
	1131, 1138, 1134, 1133, 1137, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 1173, 1174, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 1184, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 1180, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1143, 1144, 1147, 468, 1186, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 1185, 399, 651, 652, 0, 653,
	0, 401, 402, 1187, 1145, 1188, 403, 404, 405, 1189,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 1181, 1190, 417, 418,
	1191, 0, 419, 0, 0, 0, 420, 421, 424, 1136,
	1135, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	1192, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 1193, 464, 453, 0, 273, 1194,
	465, 466, 0, 1146, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 1195, 478, 1196, 1175, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 1176,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 1197, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 1139, 559, 560, 542, 543, 561,
	562, 1198, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 1177, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 1178, 600, 1179,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 1140, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 0, 622, 0, 1240, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 1142, 0, 0,
	0, 4131, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 1141, 0, 299,
	634, 635, 636, 0, 300, 301, 1148, 0, 1129, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 1132, 1130, 1131, 1138, 1134, 1133, 1137, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 1173, 1174, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 1180, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1143, 1144, 1147, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 1145, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 1181,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 1136, 1135, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 273, 1194, 465, 466, 0, 1146, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 1175, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 1176, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 1234, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 1139, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 1177,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	1178, 600, 1179, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	1140, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 268, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 2522, 2523,
	2524, 2541, 2542, 2543, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 2544, 0,
	628, 0, 0, 0, 1844, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 1829, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	2534, 0, 310, 311, 312, 309, 313, 0, 314, 2530,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 2535, 2536, 2537, 2538, 364, 365,
	366, 643, 0, 0, 2529, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 2539, 2540,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 2532, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	2533, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 1828, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 1062, 0, 1321, 2519, 2520,
	2521, 2545, 2531, 2525, 0, 2527, 2528, 2526, 2513, 2514,
	2515, 2516, 2517, 2518, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 651, 652, 0, 653, 0, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 233, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	235, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 1600,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 1597,
	0, 1321, 227, 623, 624, 679, 625, 626, 627, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 188, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 1326, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1185, 399, 651, 652, 0, 653, 0,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 0, 0, 1194, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 233, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 235, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 1600, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 227, 623, 624, 679,
	625, 626, 627, 1321, 1320, 228, 0, 0, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	188, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 1326, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1185, 399, 651, 652, 0,
	653, 0, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 0, 0,
	1194, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1321, 1320, 0, 0, 0,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 1622, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 1326, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 0, 1194, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1321, 1320, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 3606, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 651, 652, 0, 653, 0, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	2295, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1321,
	2209, 0, 0, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 1622, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 1326, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 2208, 415,
	414, 0, 416, 655, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 0, 1194, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1321, 1320, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 1622, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 1326, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1185, 399, 651, 652, 0, 653, 0,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 0, 0, 1194, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 1062, 0, 268, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	1606, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	233, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 235, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 1600, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 1240, 0,
	227, 623, 624, 679, 625, 626, 627, 0, 0, 228,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	1142, 0, 0, 0, 188, 283, 284, 1182, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	1141, 0, 299, 634, 635, 636, 0, 300, 301, 1148,
	0, 1129, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	1183, 324, 325, 326, 1132, 1130, 1131, 1138, 1134, 1133,
	1137, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 1173, 1174,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 1184, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 1180, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 1143, 1144,
	1147, 468, 1186, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	1185, 399, 651, 652, 0, 653, 0, 401, 402, 1187,
	1145, 1188, 403, 404, 405, 1189, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 1181, 1190, 417, 418, 1191, 0, 419, 0,
	0, 0, 420, 421, 424, 1136, 1135, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 1192, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	1193, 464, 453, 0, 273, 1194, 465, 466, 0, 1146,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 1195, 478,
	1196, 1175, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 1176, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 1197, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	1139, 559, 560, 542, 543, 561, 562, 1198, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 1177, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 1178, 600, 1179, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 1140, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 268, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 0, 268, 3050, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 1960, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 0, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 268, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 4837, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 3556, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 0, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 1594, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	268, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 3038,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	268, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 3715,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	0, 622, 900, 0, 805, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 2286,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	812, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 898, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 810, 588, 589,
	590, 591, 592, 811, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 0, 622, 805, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	2027, 281, 282, 0, 0, 0, 815, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 812, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 2026, 549, 550, 551,
	552, 0, 2028, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 810,
	588, 589, 590, 591, 592, 811, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 2025, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 0, 622, 805, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 1978, 281, 282, 0, 0, 0, 815, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 812, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 1977, 549,
	550, 551, 552, 0, 1979, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 810, 588, 589, 590, 591, 592, 811, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 1976,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 803, 622,
	805, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	815, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 812, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 810, 588, 589, 590, 591, 592, 811,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	2000, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 815, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 0, 2006, 0, 291,
	1996, 292, 2012, 0, 2019, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 2022, 2023, 0, 0, 300,
	301, 0, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 1165, 332,
	2010, 2009, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 1150, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 0,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	0, 0, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 2008, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 2017, 2018, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	0, 0, 0, 383, 0, 384, 385, 386, 387, 388,
	0, 0, 0, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 2003, 2004, 0, 1999, 0, 401,
	402, 1187, 0, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 0, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 0, 467, 2011, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 0,
	1195, 478, 1196, 0, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 1993,
	492, 493, 494, 1994, 495, 496, 497, 0, 498, 0,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 2007, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	0, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 2005, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 2021,
	577, 578, 579, 580, 0, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 2013, 2014, 2015, 2016, 0,
	605, 0, 597, 598, 599, 0, 600, 0, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 0, 1997, 2020, 805, 620, 619, 621, 0,
	0, 622, 0, 0, 0, 0, 623, 624, 0, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 1987, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 812, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 810, 588,
	589, 590, 591, 592, 811, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 805, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 815, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 812, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 273, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 2329, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 2330, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	810, 588, 589, 590, 591, 592, 811, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 2331, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 815,
	0, 628, 0, 0, 0, 0, 283, 284, 0, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 272, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 273, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 2071,
	622, 1321, 2038, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 815, 0, 628, 0, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 1326, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 2035, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1185, 399, 651, 652, 0, 653, 0,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 0, 0, 1194, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 2036, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 2032, 622, 1321, 2038, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 1326, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 2035, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1185, 399, 651, 652, 0,
	653, 0, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 0, 0,
	1194, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 2036, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 1321, 2038, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 1326, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 2035, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 0, 1194, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 2036, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1321, 1320, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 651, 652, 0, 653, 0, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 3908, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1321,
	1320, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 1326, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 0, 1194, 465, 466, 3518,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1650, 0, 1321, 1320, 0, 0, 0, 0, 1318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 1326, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 1649, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1185, 399, 651, 652, 0,
	653, 0, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 0, 0,
	1194, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 1648, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 1647, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 1568, 0, 1321, 1320, 0,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1182, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	1326, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 1183,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	1184, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 1567, 649, 650,
	468, 1186, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 1185,
	399, 651, 652, 0, 653, 0, 401, 402, 1187, 654,
	1188, 403, 404, 405, 1189, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 1190, 417, 418, 1191, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 1192, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 1193,
	464, 453, 0, 0, 1194, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 1195, 478, 1196,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 1197, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 1198, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1528,
	0, 1321, 1320, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 1326, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1185, 399, 651, 652, 0, 653, 0,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 0, 0, 1194, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 0, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 1493, 0, 1321, 1320, 0, 0, 0,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 1326, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 1492, 649, 650, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 0, 1194, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 1315, 0, 1321,
	1320, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 1182, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 636, 0, 300, 301,
	637, 0, 1326, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 1183, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 271, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 1184, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 1314,
	649, 650, 468, 1186, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 1185, 399, 651, 652, 0, 653, 0, 401, 402,
	1187, 654, 1188, 403, 404, 405, 1189, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 1190, 417, 418, 1191, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 448, 1192, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 1193, 464, 453, 0, 0, 1194, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 1195,
	478, 1196, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 1197, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 548,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 557,
	558, 0, 559, 560, 542, 543, 561, 562, 1198, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 669, 670, 671, 672, 0, 605,
	0, 597, 598, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 0,
	622, 0, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 1321, 1320, 0, 0, 0, 0, 1318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	1182, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 1326, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 1183, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 1184, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 1186, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 1185, 399, 651, 652, 0, 653, 0,
	401, 402, 1187, 654, 1188, 403, 404, 405, 1189, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 1190, 417, 418, 1191,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 1192,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 1193, 464, 453, 0, 0, 1194, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 1195, 478, 1196, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 1197, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	1198, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 1321, 2038, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 1182, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 1326, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 1183, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 2078, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 1184, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 1186, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 1185, 399, 651, 652, 0,
	653, 0, 401, 402, 1187, 654, 1188, 403, 404, 405,
	1189, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 1190, 417,
	418, 1191, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 1192, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 1193, 464, 453, 0, 0,
	1194, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 1195, 478, 1196, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 1197, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 1198, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 1321, 1320, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 1182, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 1326, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 1183, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 1184, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 1186,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 1185, 399, 651,
	652, 0, 653, 0, 401, 402, 1187, 654, 1188, 403,
	404, 405, 1189, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	1190, 417, 418, 1191, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 1192, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 1193, 464, 453,
	0, 0, 1194, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 1195, 478, 1196, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 1197,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 1198, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	1321, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 1182,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 1326, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 1183, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 1184, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 1186, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 1185, 399, 651, 652, 0, 653, 0, 401,
	402, 1187, 654, 1188, 403, 404, 405, 1189, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 1190, 417, 418, 1191, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 1192, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 1193, 464, 453, 0, 0, 1194, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	1195, 478, 1196, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 1197, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 1198,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 2844, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 2841, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 2848, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 3063,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 2847, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 3060, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 3062, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 3059, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 2846, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 3061, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 2844, 300,
	301, 637, 0, 0, 2838, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 2841,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 2848, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 2847, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	2837, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 2846, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 2845, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	1726, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 1725, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 1724, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	1727, 541, 548, 549, 550, 551, 552, 0, 1723, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 1721, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 1722, 619,
	621, 678, 1468, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 1470, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 1232, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 1465, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 1467, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 1232, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 1372, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 1374, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 1232,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 711, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 710, 279, 280, 700, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 703, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 704, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 705, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	699, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 700, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	703, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	704, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 705, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 700, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 703, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 704, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 705, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 700, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	703, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	3919, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 705, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 271, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 272, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 273, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 1232, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 3461, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 3008, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 3007, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 2301, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 268, 620, 619, 621, 678, 0, 622, 0, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 274, 276,
	275, 277, 278, 279, 280, 0, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 271, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 272, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 273, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 499, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 2242, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 2249, 622, 268, 0, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 2248, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 2235, 622, 268, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 271,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 2237, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 272, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 273, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	2202, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 1232, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	1572, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1571, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 1485, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 1478, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 1480, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 1305, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 1304, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 1295, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 271, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	1294, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 272, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 273, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	1292, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 271, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1291, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 272, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 273, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 1287, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 271, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 1286, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	272, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	273, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 681, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	271, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 272, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 273, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 259, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 268, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 268, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 703, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 704, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 705, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 268, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 2338,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 268, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 2336, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 268, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 2334,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 268, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 2255, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 268, 620, 619, 621, 678, 0, 622,
	0, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 271, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 2057, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 272,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 273,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 268, 620,
	619, 621, 678, 0, 622, 0, 0, 0, 0, 623,
	624, 679, 625, 626, 627, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 271, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 2051, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 272, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 273, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 887, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 886, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 885, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 3063,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 4206, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 765, 622, 268, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 1342, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 1340, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 770, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 769, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 1343, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 767, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 765, 622, 268,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 0,
	0, 0, 0, 0, 0, 0, 274, 276, 275, 277,
	278, 279, 280, 0, 281, 282, 0, 0, 0, 0,
	0, 628, 0, 0, 0, 0, 283, 284, 1342, 285,
	286, 287, 288, 289, 290, 629, 630, 0, 291, 631,
	292, 632, 0, 633, 293, 294, 295, 296, 297, 298,
	0, 0, 0, 299, 634, 635, 1340, 0, 300, 301,
	637, 0, 0, 0, 302, 303, 304, 305, 306, 307,
	308, 0, 0, 310, 311, 312, 309, 313, 0, 314,
	0, 315, 316, 317, 318, 319, 320, 0, 321, 322,
	323, 0, 324, 325, 326, 0, 0, 0, 0, 0,
	0, 0, 327, 328, 329, 330, 331, 0, 332, 638,
	639, 0, 336, 333, 334, 0, 337, 335, 338, 0,
	339, 340, 341, 0, 0, 342, 343, 344, 0, 345,
	346, 0, 347, 348, 349, 0, 350, 351, 640, 352,
	353, 354, 356, 358, 355, 359, 360, 361, 362, 641,
	642, 363, 0, 0, 0, 0, 0, 0, 0, 364,
	365, 366, 643, 0, 0, 0, 367, 0, 368, 369,
	0, 0, 0, 370, 371, 372, 644, 645, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 382, 646,
	0, 647, 383, 0, 384, 385, 386, 387, 388, 648,
	649, 650, 468, 0, 389, 390, 0, 391, 392, 393,
	394, 395, 0, 0, 0, 0, 396, 397, 398, 400,
	0, 0, 399, 651, 652, 0, 653, 0, 401, 402,
	0, 654, 0, 403, 404, 405, 0, 406, 0, 0,
	0, 407, 408, 409, 410, 411, 412, 0, 413, 415,
	414, 0, 416, 655, 0, 417, 418, 0, 0, 419,
	0, 0, 0, 420, 421, 424, 0, 0, 422, 423,
	425, 426, 0, 427, 428, 430, 433, 429, 431, 432,
	434, 447, 435, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 449, 0, 770, 0, 450, 451,
	452, 458, 460, 461, 456, 457, 459, 462, 463, 454,
	455, 0, 464, 453, 0, 0, 0, 465, 466, 0,
	656, 467, 657, 469, 470, 0, 0, 471, 0, 0,
	0, 473, 474, 475, 0, 0, 476, 477, 658, 0,
	478, 0, 659, 479, 480, 472, 481, 482, 483, 484,
	485, 486, 487, 488, 489, 0, 490, 491, 660, 492,
	493, 494, 661, 495, 496, 497, 662, 498, 663, 499,
	500, 0, 501, 502, 0, 503, 504, 505, 506, 507,
	508, 509, 664, 510, 512, 511, 513, 0, 514, 0,
	515, 516, 517, 0, 0, 0, 0, 518, 0, 520,
	521, 522, 523, 519, 524, 525, 526, 527, 528, 0,
	529, 530, 531, 0, 532, 533, 534, 535, 536, 665,
	537, 0, 538, 539, 545, 546, 547, 540, 541, 769,
	549, 550, 551, 552, 0, 554, 555, 553, 556, 1343,
	558, 0, 559, 560, 542, 543, 561, 562, 0, 563,
	564, 565, 566, 567, 568, 569, 666, 0, 570, 0,
	571, 572, 573, 575, 544, 576, 581, 582, 667, 577,
	578, 579, 580, 668, 584, 585, 0, 586, 587, 0,
	583, 574, 0, 588, 589, 590, 591, 592, 593, 594,
	357, 595, 0, 596, 767, 670, 671, 672, 0, 605,
	0, 597, 1341, 599, 673, 600, 674, 0, 601, 602,
	603, 604, 0, 606, 607, 0, 0, 608, 609, 610,
	612, 613, 611, 614, 0, 615, 0, 0, 616, 617,
	618, 675, 676, 677, 0, 620, 619, 621, 678, 690,
	622, 268, 0, 0, 0, 623, 624, 679, 625, 626,
	627, 0, 0, 0, 0, 0, 0, 0, 274, 276,
	275, 277, 278, 279, 280, 689, 281, 282, 0, 0,
	0, 0, 0, 628, 0, 0, 0, 0, 283, 284,
	0, 285, 286, 287, 288, 289, 290, 629, 630, 0,
	291, 631, 292, 632, 0, 633, 293, 294, 295, 296,
	297, 298, 0, 0, 0, 299, 634, 635, 636, 0,
	300, 301, 637, 0, 0, 0, 302, 303, 304, 305,
	306, 307, 308, 0, 0, 310, 311, 312, 309, 313,
	0, 314, 0, 315, 316, 317, 318, 319, 320, 0,
	321, 322, 323, 0, 324, 325, 326, 0, 0, 0,
	0, 0, 0, 0, 327, 328, 329, 330, 331, 0,
	332, 638, 639, 0, 336, 333, 334, 0, 337, 335,
	338, 0, 339, 340, 341, 0, 0, 342, 343, 344,
	0, 345, 346, 0, 347, 348, 349, 0, 350, 351,
	640, 352, 353, 354, 356, 358, 355, 359, 360, 361,
	362, 641, 642, 363, 0, 0, 0, 0, 0, 0,
	0, 364, 365, 366, 643, 0, 0, 0, 367, 0,
	368, 369, 0, 0, 0, 370, 371, 372, 644, 645,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	382, 646, 0, 647, 383, 0, 384, 385, 386, 387,
	388, 648, 649, 650, 468, 0, 389, 390, 0, 391,
	392, 393, 394, 395, 0, 0, 0, 0, 396, 397,
	398, 400, 0, 0, 399, 651, 652, 0, 653, 0,
	401, 402, 0, 654, 0, 403, 404, 405, 0, 406,
	0, 0, 0, 407, 408, 409, 410, 411, 412, 0,
	413, 415, 414, 0, 416, 655, 0, 417, 418, 0,
	0, 419, 0, 0, 0, 420, 421, 424, 0, 0,
	422, 423, 425, 426, 0, 427, 428, 430, 433, 429,
	431, 432, 434, 447, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 449, 0, 448, 0,
	450, 451, 452, 458, 460, 461, 456, 457, 459, 462,
	463, 454, 455, 0, 464, 453, 0, 0, 0, 465,
	466, 0, 656, 467, 657, 469, 470, 0, 0, 471,
	0, 0, 0, 473, 474, 475, 0, 0, 476, 477,
	658, 0, 478, 0, 659, 479, 480, 472, 481, 482,
	483, 484, 485, 486, 487, 488, 489, 0, 490, 491,
	660, 492, 493, 494, 661, 495, 496, 497, 662, 498,
	663, 688, 500, 0, 501, 502, 0, 503, 504, 505,
	506, 507, 508, 509, 664, 510, 512, 511, 513, 0,
	514, 0, 515, 516, 517, 0, 0, 0, 0, 518,
	0, 520, 521, 522, 523, 519, 524, 525, 526, 527,
	528, 0, 529, 530, 531, 0, 532, 533, 534, 535,
	536, 665, 537, 0, 538, 539, 545, 546, 547, 540,
	541, 548, 549, 550, 551, 552, 0, 554, 555, 553,
	556, 557, 558, 0, 559, 560, 542, 543, 561, 562,
	0, 563, 564, 565, 566, 567, 568, 569, 666, 0,
	570, 0, 571, 572, 573, 575, 544, 576, 581, 582,
	667, 577, 578, 579, 580, 668, 584, 585, 0, 586,
	587, 0, 583, 574, 0, 588, 589, 590, 591, 592,
	593, 594, 357, 595, 0, 596, 669, 670, 671, 672,
	0, 605, 0, 597, 598, 599, 673, 600, 674, 0,
	601, 602, 603, 604, 0, 606, 607, 0, 0, 608,
	609, 610, 612, 613, 611, 614, 0, 615, 0, 0,
	616, 617, 618, 675, 676, 677, 0, 620, 619, 621,
	678, 0, 622, 268, 3050, 0, 0, 623, 624, 679,
	625, 626, 627, 0, 0, 0, 0, 0, 0, 0,
	274, 276, 275, 277, 278, 279, 280, 0, 281, 282,
	0, 0, 0, 0, 0, 628, 0, 0, 0, 0,
	283, 284, 0, 285, 286, 287, 288, 289, 290, 629,
	630, 0, 291, 631, 292, 632, 0, 633, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 634, 635,
	636, 0, 300, 301, 637, 0, 0, 0, 302, 303,
	304, 305, 306, 307, 308, 0, 0, 310, 311, 312,
	309, 313, 0, 314, 0, 315, 316, 317, 318, 319,
	320, 0, 321, 322, 323, 0, 324, 325, 326, 0,
	0, 0, 0, 0, 0, 0, 327, 328, 329, 330,
	331, 0, 332, 638, 639, 0, 336, 333, 334, 0,
	337, 335, 338, 0, 339, 340, 341, 0, 0, 342,
	343, 344, 0, 345, 346, 0, 347, 348, 349, 0,
	350, 351, 640, 352, 353, 354, 356, 358, 355, 359,
	360, 361, 362, 641, 642, 363, 0, 0, 0, 0,
	0, 0, 0, 364, 365, 366, 643, 0, 0, 0,
	367, 0, 368, 369, 0, 0, 0, 370, 371, 372,
	644, 645, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 382, 646, 0, 647, 383, 0, 384, 385,
	386, 387, 388, 648, 649, 650, 468, 0, 389, 390,
	0, 391, 392, 393, 394, 395, 0, 0, 0, 0,
	396, 397, 398, 400, 0, 0, 399, 651, 652, 0,
	653, 0, 401, 402, 0, 654, 0, 403, 404, 405,
	0, 406, 0, 0, 0, 407, 408, 409, 410, 411,
	412, 0, 413, 415, 414, 0, 416, 655, 0, 417,
	418, 0, 0, 419, 0, 0, 0, 420, 421, 424,
	0, 0, 422, 423, 425, 426, 0, 427, 428, 430,
	433, 429, 431, 432, 434, 447, 435, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 449, 0,
	448, 0, 450, 451, 452, 458, 460, 461, 456, 457,
	459, 462, 463, 454, 455, 0, 464, 453, 0, 0,
	0, 465, 466, 0, 656, 467, 657, 469, 470, 0,
	0, 471, 0, 0, 0, 473, 474, 475, 0, 0,
	476, 477, 658, 0, 478, 0, 659, 479, 480, 472,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	490, 491, 660, 492, 493, 494, 661, 495, 496, 497,
	662, 498, 663, 499, 500, 0, 501, 502, 0, 503,
	504, 505, 506, 507, 508, 509, 664, 510, 512, 511,
	513, 0, 514, 0, 515, 516, 517, 0, 0, 0,
	0, 518, 0, 520, 521, 522, 523, 519, 524, 525,
	526, 527, 528, 0, 529, 530, 531, 0, 532, 533,
	534, 535, 536, 665, 537, 0, 538, 539, 545, 546,
	547, 540, 541, 548, 549, 550, 551, 552, 0, 554,
	555, 553, 556, 557, 558, 0, 559, 560, 542, 543,
	561, 562, 0, 563, 564, 565, 566, 567, 568, 569,
	666, 0, 570, 0, 571, 572, 573, 575, 544, 576,
	581, 582, 667, 577, 578, 579, 580, 668, 584, 585,
	0, 586, 587, 0, 583, 574, 0, 588, 589, 590,
	591, 592, 593, 594, 357, 595, 0, 596, 669, 670,
	671, 672, 0, 605, 0, 597, 598, 599, 673, 600,
	674, 0, 601, 602, 603, 604, 0, 606, 607, 0,
	0, 608, 609, 610, 612, 613, 611, 614, 0, 615,
	0, 0, 616, 617, 618, 675, 676, 677, 0, 620,
	619, 621, 678, 0, 622, 268, 4216, 0, 0, 623,
	624, 679, 625, 626, 627, 0, 0, 0, 0, 0,
	0, 0, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 4491, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 0,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 4108, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	268, 620, 619, 621, 678, 0, 622, 0, 0, 0,
	0, 623, 624, 679, 625, 626, 627, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 3874, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 268, 620, 619, 621, 678,
	0, 622, 0, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 274, 276, 275, 277, 278, 279, 280, 0,
	281, 282, 0, 0, 0, 0, 0, 628, 0, 2728,
	0, 0, 283, 284, 0, 285, 286, 287, 288, 289,
	290, 629, 630, 0, 291, 631, 292, 632, 0, 633,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	634, 635, 636, 0, 300, 301, 637, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 0, 0, 310,
	311, 312, 309, 313, 0, 314, 0, 315, 316, 317,
	318, 319, 320, 0, 321, 322, 323, 0, 324, 325,
	326, 0, 0, 0, 0, 0, 0, 0, 327, 328,
	329, 330, 331, 0, 332, 638, 639, 0, 336, 333,
	334, 0, 337, 335, 338, 0, 339, 340, 341, 0,
	0, 342, 343, 344, 0, 345, 346, 0, 347, 348,
	349, 0, 350, 351, 640, 352, 353, 354, 356, 358,
	355, 359, 360, 361, 362, 641, 642, 363, 0, 0,
	0, 0, 0, 0, 0, 364, 365, 366, 643, 0,
	0, 0, 367, 0, 368, 369, 0, 0, 0, 370,
	371, 372, 644, 645, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 382, 646, 0, 647, 383, 0,
	384, 385, 386, 387, 388, 648, 649, 650, 468, 0,
	389, 390, 0, 391, 392, 393, 394, 395, 0, 0,
	0, 0, 396, 397, 398, 400, 0, 0, 399, 651,
	652, 0, 653, 0, 401, 402, 0, 654, 0, 403,
	404, 405, 0, 406, 0, 0, 0, 407, 408, 409,
	410, 411, 412, 0, 413, 415, 414, 0, 416, 655,
	0, 417, 418, 0, 0, 419, 0, 0, 0, 420,
	421, 424, 0, 0, 422, 423, 425, 426, 0, 427,
	428, 430, 433, 429, 431, 432, 434, 447, 435, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	449, 0, 448, 0, 450, 451, 452, 458, 460, 461,
	456, 457, 459, 462, 463, 454, 455, 0, 464, 453,
	0, 0, 0, 465, 466, 0, 656, 467, 657, 469,
	470, 0, 0, 471, 0, 0, 0, 473, 474, 475,
	0, 0, 476, 477, 658, 0, 478, 0, 659, 479,
	480, 472, 481, 482, 483, 484, 485, 486, 487, 488,
	489, 0, 490, 491, 660, 492, 493, 494, 661, 495,
	496, 497, 662, 498, 663, 499, 500, 0, 501, 502,
	0, 503, 504, 505, 506, 507, 508, 509, 664, 510,
	512, 511, 513, 0, 514, 0, 515, 516, 517, 0,
	0, 0, 0, 518, 0, 520, 521, 522, 523, 519,
	524, 525, 526, 527, 528, 0, 529, 530, 531, 0,
	532, 533, 534, 535, 536, 665, 537, 0, 538, 539,
	545, 546, 547, 540, 541, 548, 549, 550, 551, 552,
	0, 554, 555, 553, 556, 557, 558, 0, 559, 560,
	542, 543, 561, 562, 0, 563, 564, 565, 566, 567,
	568, 569, 666, 0, 570, 0, 571, 572, 573, 575,
	544, 576, 581, 582, 667, 577, 578, 579, 580, 668,
	584, 585, 0, 586, 587, 0, 583, 574, 0, 588,
	589, 590, 591, 592, 593, 594, 357, 595, 0, 596,
	669, 670, 671, 672, 0, 605, 0, 597, 598, 599,
	673, 600, 674, 0, 601, 602, 603, 604, 0, 606,
	607, 0, 0, 608, 609, 610, 612, 613, 611, 614,
	0, 615, 0, 0, 616, 617, 618, 675, 676, 677,
	0, 620, 619, 621, 678, 0, 622, 268, 3050, 0,
	0, 623, 624, 679, 625, 626, 627, 0, 0, 0,
	0, 0, 0, 0, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 3047, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 2311, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 2299, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 765, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 758, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 770, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 0, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 769, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 1605, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 767, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 1578, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 1577, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 1562, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	1560, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	1555, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 1532, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 301, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 314, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 1530, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 421,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 448, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 665, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 548, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 557, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 669,
	670, 671, 672, 0, 605, 0, 597, 598, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 1490, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 0, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 545, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 1473, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 1310, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	1309, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	1301, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 1300, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 1254, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 775, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 0, 620, 619,
	621, 678, 765, 622, 268, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 0, 0, 0, 0, 0, 0,
	0, 274, 276, 275, 277, 278, 279, 280, 0, 281,
	282, 0, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 283, 284, 0, 285, 286, 287, 288, 289, 290,
	629, 630, 0, 291, 631, 292, 632, 0, 633, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 634,
	635, 636, 0, 300, 758, 637, 0, 0, 0, 302,
	303, 304, 305, 306, 307, 308, 0, 0, 310, 311,
	312, 309, 313, 0, 756, 0, 315, 316, 317, 318,
	319, 320, 0, 321, 322, 323, 0, 324, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 327, 328, 329,
	330, 331, 0, 332, 638, 639, 0, 336, 333, 334,
	0, 337, 335, 338, 0, 339, 340, 341, 0, 0,
	342, 343, 344, 0, 345, 346, 0, 347, 348, 349,
	0, 350, 351, 640, 352, 353, 354, 356, 358, 355,
	359, 360, 361, 362, 641, 642, 363, 0, 0, 0,
	0, 0, 0, 0, 364, 365, 366, 643, 0, 0,
	0, 367, 0, 368, 369, 0, 0, 0, 370, 371,
	372, 644, 645, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 382, 646, 0, 647, 383, 0, 384,
	385, 386, 387, 388, 648, 649, 650, 468, 0, 389,
	390, 0, 391, 392, 393, 394, 395, 0, 0, 0,
	0, 396, 397, 398, 400, 0, 0, 399, 651, 652,
	0, 653, 0, 401, 402, 0, 654, 0, 403, 404,
	405, 0, 406, 0, 0, 0, 407, 408, 409, 410,
	411, 412, 0, 413, 415, 414, 0, 416, 655, 0,
	417, 418, 0, 0, 419, 0, 0, 0, 420, 757,
	424, 0, 0, 422, 423, 425, 426, 0, 427, 428,
	430, 433, 429, 431, 432, 434, 447, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 449,
	0, 770, 0, 450, 451, 452, 458, 460, 461, 456,
	457, 459, 462, 463, 454, 455, 0, 464, 453, 0,
	0, 0, 465, 466, 0, 656, 467, 657, 469, 470,
	0, 0, 471, 0, 0, 0, 473, 474, 475, 0,
	0, 476, 477, 658, 0, 478, 0, 659, 479, 480,
	472, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	0, 490, 491, 660, 492, 493, 494, 661, 495, 496,
	497, 662, 498, 663, 499, 500, 0, 501, 502, 0,
	503, 504, 505, 506, 507, 508, 509, 664, 510, 512,
	511, 513, 0, 514, 0, 515, 516, 517, 0, 0,
	0, 0, 518, 0, 520, 521, 522, 523, 519, 524,
	525, 526, 527, 528, 0, 529, 530, 531, 0, 532,
	533, 534, 535, 536, 759, 537, 0, 538, 539, 545,
	546, 547, 540, 541, 769, 549, 550, 551, 552, 0,
	554, 555, 553, 556, 760, 558, 0, 559, 560, 542,
	543, 561, 562, 0, 563, 564, 565, 566, 567, 568,
	569, 666, 0, 570, 0, 571, 572, 573, 575, 544,
	576, 581, 582, 667, 577, 578, 579, 580, 668, 584,
	585, 0, 586, 587, 0, 583, 574, 0, 588, 589,
	590, 591, 592, 593, 594, 357, 595, 0, 596, 767,
	670, 671, 672, 0, 605, 0, 597, 762, 599, 673,
	600, 674, 0, 601, 602, 603, 604, 0, 606, 607,
	0, 0, 608, 609, 610, 612, 613, 611, 614, 0,
	615, 0, 0, 616, 617, 618, 675, 676, 677, 0,
	620, 619, 621, 678, 750, 622, 268, 0, 0, 0,
	623, 624, 679, 625, 626, 627, 0, 0, 0, 0,
	0, 0, 0, 274, 276, 275, 277, 278, 279, 280,
	0, 281, 282, 0, 0, 0, 0, 0, 628, 0,
	0, 0, 0, 283, 284, 0, 285, 286, 287, 288,
	289, 290, 629, 630, 0, 291, 631, 292, 632, 0,
	633, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 634, 635, 636, 0, 300, 301, 637, 0, 0,
	0, 302, 303, 304, 305, 306, 307, 308, 0, 0,
	310, 311, 312, 309, 313, 0, 314, 0, 315, 316,
	317, 318, 319, 320, 0, 321, 322, 323, 0, 324,
	325, 326, 0, 0, 0, 0, 0, 0, 0, 327,
	328, 329, 330, 331, 0, 332, 638, 639, 0, 336,
	333, 334, 0, 337, 335, 338, 0, 339, 340, 341,
	0, 0, 342, 343, 344, 0, 345, 346, 0, 347,
	348, 349, 0, 350, 351, 640, 352, 353, 354, 356,
	358, 355, 359, 360, 361, 362, 641, 642, 363, 0,
	0, 0, 0, 0, 0, 0, 364, 365, 366, 643,
	0, 0, 0, 367, 0, 368, 369, 0, 0, 0,
	370, 371, 372, 644, 645, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 382, 646, 0, 647, 383,
	0, 384, 385, 386, 387, 388, 648, 649, 650, 468,
	0, 389, 390, 0, 391, 392, 393, 394, 395, 0,
	0, 0, 0, 396, 397, 398, 400, 0, 0, 399,
	651, 652, 0, 653, 0, 401, 402, 0, 654, 0,
	403, 404, 405, 0, 406, 0, 0, 0, 407, 408,
	409, 410, 411, 412, 0, 413, 415, 414, 0, 416,
	655, 0, 417, 418, 0, 0, 419, 0, 0, 0,
	420, 421, 424, 0, 0, 422, 423, 425, 426, 0,
	427, 428, 430, 433, 429, 431, 432, 434, 447, 435,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 449, 0, 448, 0, 450, 451, 452, 458, 460,
	461, 456, 457, 459, 462, 463, 454, 455, 0, 464,
	453, 0, 0, 0, 465, 466, 0, 656, 467, 657,
	469, 470, 0, 0, 471, 0, 0, 0, 473, 474,
	475, 0, 0, 476, 477, 658, 0, 478, 0, 659,
	479, 480, 472, 481, 482, 483, 484, 485, 486, 487,
	488, 489, 0, 490, 491, 660, 492, 493, 494, 661,
	495, 496, 497, 662, 498, 663, 499, 500, 0, 501,
	502, 0, 503, 504, 505, 506, 507, 508, 509, 664,
	510, 512, 511, 513, 0, 514, 0, 515, 516, 517,
	0, 0, 0, 0, 518, 0, 520, 521, 522, 523,
	519, 524, 525, 526, 527, 528, 0, 529, 530, 531,
	0, 532, 533, 534, 535, 536, 665, 537, 0, 538,
	539, 751, 546, 547, 540, 541, 548, 549, 550, 551,
	552, 0, 554, 555, 553, 556, 557, 558, 0, 559,
	560, 542, 543, 561, 562, 0, 563, 564, 565, 566,
	567, 568, 569, 666, 0, 570, 0, 571, 572, 573,
	575, 544, 576, 581, 582, 667, 577, 578, 579, 580,
	668, 584, 585, 0, 586, 587, 0, 583, 574, 0,
	588, 589, 590, 591, 592, 593, 594, 357, 595, 0,
	596, 669, 670, 671, 672, 0, 605, 0, 597, 598,
	599, 673, 600, 674, 0, 601, 602, 603, 604, 0,
	606, 607, 0, 0, 608, 609, 610, 612, 613, 611,
	614, 0, 615, 0, 0, 616, 617, 618, 675, 676,
	677, 0, 620, 619, 621, 678, 713, 622, 268, 0,
	0, 0, 623, 624, 679, 625, 626, 627, 0, 0,
	0, 0, 0, 0, 0, 274, 276, 275, 277, 278,
	279, 280, 0, 281, 282, 0, 0, 0, 0, 0,
	628, 0, 0, 0, 0, 283, 284, 0, 285, 286,
	287, 288, 289, 290, 629, 630, 0, 291, 631, 292,
	632, 0, 633, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 634, 635, 636, 0, 300, 301, 637,
	0, 0, 0, 302, 303, 304, 305, 306, 307, 308,
	0, 0, 310, 311, 312, 309, 313, 0, 314, 0,
	315, 316, 317, 318, 319, 320, 0, 321, 322, 323,
	0, 324, 325, 326, 0, 0, 0, 0, 0, 0,
	0, 327, 328, 329, 330, 331, 0, 332, 638, 639,
	0, 336, 333, 334, 0, 337, 335, 338, 0, 339,
	340, 341, 0, 0, 342, 343, 344, 0, 345, 346,
	0, 347, 348, 349, 0, 350, 351, 640, 352, 353,
	354, 356, 358, 355, 359, 360, 361, 362, 641, 642,
	363, 0, 0, 0, 0, 0, 0, 0, 364, 365,
	366, 643, 0, 0, 0, 367, 0, 368, 369, 0,
	0, 0, 370, 371, 372, 644, 645, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 382, 646, 0,
	647, 383, 0, 384, 385, 386, 387, 388, 648, 649,
	650, 468, 0, 389, 390, 0, 391, 392, 393, 394,
	395, 0, 0, 0, 0, 396, 397, 398, 400, 0,
	0, 399, 651, 652, 0, 653, 0, 401, 402, 0,
	654, 0, 403, 404, 405, 0, 406, 0, 0, 0,
	407, 408, 409, 410, 411, 412, 0, 413, 415, 414,
	0, 416, 655, 0, 417, 418, 0, 0, 419, 0,
	0, 0, 420, 421, 424, 0, 0, 422, 423, 425,
	426, 0, 427, 428, 430, 433, 429, 431, 432, 434,
	447, 435, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 449, 0, 448, 0, 450, 451, 452,
	458, 460, 461, 456, 457, 459, 462, 463, 454, 455,
	0, 464, 453, 0, 0, 0, 465, 466, 0, 656,
	467, 657, 469, 470, 0, 0, 471, 0, 0, 0,
	473, 474, 475, 0, 0, 476, 477, 658, 0, 478,
	0, 659, 479, 480, 472, 481, 482, 483, 484, 485,
	486, 487, 488, 489, 0, 490, 491, 660, 492, 493,
	494, 661, 495, 496, 497, 662, 498, 663, 499, 500,
	0, 501, 502, 0, 503, 504, 505, 506, 507, 508,
	509, 664, 510, 512, 511, 513, 0, 514, 0, 515,
	516, 517, 0, 0, 0, 0, 518, 0, 520, 521,
	522, 523, 519, 524, 525, 526, 527, 528, 0, 529,
	530, 531, 0, 532, 533, 534, 535, 536, 665, 537,
	0, 538, 539, 545, 546, 547, 540, 541, 548, 549,
	550, 551, 552, 0, 554, 555, 553, 556, 557, 558,
	0, 559, 560, 542, 543, 561, 562, 0, 563, 564,
	565, 566, 567, 568, 569, 666, 0, 570, 0, 571,
	572, 573, 575, 544, 576, 581, 582, 667, 577, 578,
	579, 580, 668, 584, 585, 0, 586, 587, 0, 583,
	574, 0, 588, 589, 590, 591, 592, 593, 594, 357,
	595, 0, 596, 669, 670, 671, 672, 0, 605, 0,
	597, 598, 599, 673, 600, 674, 0, 601, 602, 603,
	604, 0, 606, 607, 0, 0, 608, 609, 610, 612,
	613, 611, 614, 0, 615, 0, 0, 616, 617, 618,
	675, 676, 677, 0, 620, 619, 621, 678, 707, 622,
	268, 0, 0, 0, 623, 624, 679, 625, 626, 627,
	0, 0, 0, 0, 0, 0, 0, 274, 276, 275,
	277, 278, 279, 280, 0, 281, 282, 0, 0, 0,
	0, 0, 628, 0, 0, 0, 0, 283, 284, 0,
	285, 286, 287, 288, 289, 290, 629, 630, 0, 291,
	631, 292, 632, 0, 633, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 634, 635, 636, 0, 300,
	301, 637, 0, 0, 0, 302, 303, 304, 305, 306,
	307, 308, 0, 0, 310, 311, 312, 309, 313, 0,
	314, 0, 315, 316, 317, 318, 319, 320, 0, 321,
	322, 323, 0, 324, 325, 326, 0, 0, 0, 0,
	0, 0, 0, 327, 328, 329, 330, 331, 0, 332,
	638, 639, 0, 336, 333, 334, 0, 337, 335, 338,
	0, 339, 340, 341, 0, 0, 342, 343, 344, 0,
	345, 346, 0, 347, 348, 349, 0, 350, 351, 640,
	352, 353, 354, 356, 358, 355, 359, 360, 361, 362,
	641, 642, 363, 0, 0, 0, 0, 0, 0, 0,
	364, 365, 366, 643, 0, 0, 0, 367, 0, 368,
	369, 0, 0, 0, 370, 371, 372, 644, 645, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 382,
	646, 0, 647, 383, 0, 384, 385, 386, 387, 388,
	648, 649, 650, 468, 0, 389, 390, 0, 391, 392,
	393, 394, 395, 0, 0, 0, 0, 396, 397, 398,
	400, 0, 0, 399, 651, 652, 0, 653, 0, 401,
	402, 0, 654, 0, 403, 404, 405, 0, 406, 0,
	0, 0, 407, 408, 409, 410, 411, 412, 0, 413,
	415, 414, 0, 416, 655, 0, 417, 418, 0, 0,
	419, 0, 0, 0, 420, 421, 424, 0, 0, 422,
	423, 425, 426, 0, 427, 428, 430, 433, 429, 431,
	432, 434, 447, 435, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 449, 0, 448, 0, 450,
	451, 452, 458, 460, 461, 456, 457, 459, 462, 463,
	454, 455, 0, 464, 453, 0, 0, 0, 465, 466,
	0, 656, 467, 657, 469, 470, 0, 0, 471, 0,
	0, 0, 473, 474, 475, 0, 0, 476, 477, 658,
	0, 478, 0, 659, 479, 480, 472, 481, 482, 483,
	484, 485, 486, 487, 488, 489, 0, 490, 491, 660,
	492, 493, 494, 661, 495, 496, 497, 662, 498, 663,
	499, 500, 0, 501, 502, 0, 503, 504, 505, 506,
	507, 508, 509, 664, 510, 512, 511, 513, 0, 514,
	0, 515, 516, 517, 0, 0, 0, 0, 518, 0,
	520, 521, 522, 523, 519, 524, 525, 526, 527, 528,
	0, 529, 530, 531, 0, 532, 533, 534, 535, 536,
	665, 537, 0, 538, 539, 545, 546, 547, 540, 541,
	548, 549, 550, 551, 552, 0, 554, 555, 553, 556,
	557, 558, 0, 559, 560, 542, 543, 561, 562, 0,
	563, 564, 565, 566, 567, 568, 569, 666, 0, 570,
	0, 571, 572, 573, 575, 544, 576, 581, 582, 667,
	577, 578, 579, 580, 668, 584, 585, 0, 586, 587,
	0, 583, 574, 0, 588, 589, 590, 591, 592, 593,
	594, 357, 595, 0, 596, 669, 670, 671, 672, 0,
	605, 0, 597, 598, 599, 673, 600, 674, 0, 601,
	602, 603, 604, 0, 606, 607, 0, 0, 608, 609,
	610, 612, 613, 611, 614, 0, 615, 0, 0, 616,
	617, 618, 675, 676, 677, 0, 620, 619, 621, 678,
	685, 622, 268, 0, 0, 0, 623, 624, 679, 625,
	626, 627, 0, 0, 0, 0, 0, 0, 0, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 3576, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 769, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 767, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 3501, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 3479, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 3476, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 3426, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 3424, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 3409, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 3018, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 751, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 2273, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 512, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 0, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	383, 0, 384, 385, 386, 387, 388, 1272, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 507, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 537, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 268, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 274,
	276, 275, 277, 278, 279, 280, 0, 281, 282, 0,
	0, 0, 0, 0, 628, 0, 0, 0, 0, 283,
	284, 0, 285, 286, 287, 288, 289, 290, 629, 630,
	0, 291, 631, 292, 632, 0, 633, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 634, 635, 636,
	0, 300, 301, 637, 0, 0, 0, 302, 303, 304,
	305, 306, 307, 308, 0, 0, 310, 311, 312, 309,
	313, 0, 314, 0, 315, 316, 317, 318, 319, 320,
	0, 321, 322, 323, 0, 324, 325, 326, 0, 0,
	0, 0, 0, 0, 0, 327, 328, 329, 330, 331,
	0, 332, 638, 639, 0, 336, 333, 334, 0, 337,
	335, 338, 0, 339, 340, 341, 0, 0, 342, 343,
	344, 0, 345, 346, 0, 347, 348, 349, 0, 350,
	351, 640, 352, 353, 354, 356, 358, 355, 359, 360,
	361, 362, 641, 642, 363, 0, 0, 0, 0, 0,
	0, 0, 364, 365, 366, 643, 0, 0, 0, 367,
	0, 368, 369, 0, 0, 0, 370, 371, 372, 644,
	645, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 382, 646, 0, 647, 383, 0, 384, 385, 386,
	387, 388, 648, 649, 650, 468, 0, 389, 390, 0,
	391, 392, 393, 394, 395, 0, 0, 0, 0, 396,
	397, 398, 400, 0, 0, 399, 651, 652, 0, 653,
	0, 401, 402, 0, 654, 0, 403, 404, 405, 0,
	406, 0, 0, 0, 407, 408, 409, 410, 411, 412,
	0, 413, 415, 414, 0, 416, 655, 0, 417, 418,
	0, 0, 419, 0, 0, 0, 420, 421, 424, 0,
	0, 422, 423, 425, 426, 0, 427, 428, 430, 433,
	429, 431, 432, 434, 447, 435, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 449, 0, 448,
	0, 450, 451, 452, 458, 460, 461, 456, 457, 459,
	462, 463, 454, 455, 0, 464, 453, 0, 0, 0,
	465, 466, 0, 656, 467, 657, 469, 470, 0, 0,
	471, 0, 0, 0, 473, 474, 475, 0, 0, 476,
	477, 658, 0, 478, 0, 659, 479, 480, 472, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 0, 490,
	491, 660, 492, 493, 494, 661, 495, 496, 497, 662,
	498, 663, 499, 500, 0, 501, 502, 0, 503, 504,
	505, 506, 507, 508, 509, 664, 510, 1205, 511, 513,
	0, 514, 0, 515, 516, 517, 0, 0, 0, 0,
	518, 0, 520, 521, 522, 523, 519, 524, 525, 526,
	527, 528, 0, 529, 530, 531, 0, 532, 533, 534,
	535, 536, 665, 537, 0, 538, 539, 545, 546, 547,
	540, 541, 548, 549, 550, 551, 552, 0, 554, 555,
	553, 556, 557, 558, 0, 559, 560, 542, 543, 561,
	562, 0, 563, 564, 565, 566, 567, 568, 569, 666,
	0, 570, 0, 571, 572, 573, 575, 544, 576, 581,
	582, 667, 577, 578, 579, 580, 668, 584, 585, 0,
	586, 587, 0, 583, 574, 0, 588, 589, 590, 591,
	592, 593, 594, 357, 595, 0, 596, 669, 670, 671,
	672, 0, 605, 0, 597, 598, 599, 673, 600, 674,
	0, 601, 602, 603, 604, 0, 606, 607, 0, 0,
	608, 609, 610, 612, 613, 611, 614, 0, 615, 0,
	0, 616, 617, 618, 675, 676, 677, 268, 620, 619,
	621, 678, 0, 622, 0, 0, 0, 0, 623, 624,
	679, 625, 626, 627, 274, 276, 275, 277, 278, 279,
	280, 0, 281, 282, 0, 0, 0, 0, 0, 628,
	0, 0, 0, 0, 283, 284, 0, 285, 286, 287,
	288, 289, 290, 629, 630, 0, 291, 631, 292, 632,
	0, 633, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 634, 635, 636, 0, 300, 301, 637, 0,
	0, 0, 302, 303, 304, 305, 306, 307, 308, 0,
	0, 310, 311, 312, 309, 313, 0, 314, 0, 315,
	316, 317, 318, 319, 320, 0, 321, 322, 323, 0,
	324, 325, 326, 0, 0, 0, 0, 0, 0, 0,
	327, 328, 329, 330, 331, 0, 332, 638, 639, 0,
	336, 333, 334, 0, 337, 335, 338, 0, 339, 340,
	341, 0, 0, 342, 343, 344, 0, 345, 346, 0,
	347, 348, 349, 0, 350, 351, 640, 352, 353, 354,
	356, 358, 355, 359, 360, 361, 362, 641, 642, 363,
	0, 0, 0, 0, 0, 0, 0, 364, 365, 366,
	643, 0, 0, 0, 367, 0, 368, 369, 0, 0,
	0, 370, 371, 372, 644, 645, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 382, 646, 0, 647,
	0, 0, 384, 385, 386, 387, 388, 648, 649, 650,
	468, 0, 389, 390, 0, 391, 392, 393, 394, 395,
	0, 0, 0, 0, 396, 397, 398, 400, 0, 0,
	399, 651, 652, 0, 653, 0, 401, 402, 0, 654,
	0, 403, 404, 405, 0, 406, 0, 0, 0, 407,
	408, 409, 410, 411, 412, 0, 413, 415, 414, 0,
	416, 655, 0, 417, 418, 0, 0, 419, 0, 0,
	0, 420, 421, 424, 0, 0, 422, 423, 425, 426,
	0, 427, 428, 430, 433, 429, 431, 432, 434, 447,
	435, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 449, 0, 448, 0, 450, 451, 452, 458,
	460, 461, 456, 457, 459, 462, 463, 454, 455, 0,
	464, 453, 0, 0, 0, 465, 466, 0, 656, 467,
	657, 469, 470, 0, 0, 471, 0, 0, 0, 473,
	474, 475, 0, 0, 476, 477, 658, 0, 478, 0,
	659, 479, 480, 472, 481, 482, 0, 484, 485, 486,
	487, 488, 489, 0, 490, 491, 660, 492, 493, 494,
	661, 495, 496, 497, 662, 498, 663, 499, 500, 0,
	501, 502, 0, 503, 504, 505, 506, 0, 508, 509,
	664, 510, 512, 511, 513, 0, 514, 0, 515, 516,
	517, 0, 0, 0, 0, 518, 0, 520, 521, 522,
	523, 519, 524, 525, 526, 527, 528, 0, 529, 530,
	531, 0, 532, 533, 534, 535, 536, 665, 0, 0,
	538, 539, 545, 546, 547, 540, 541, 548, 549, 550,
	551, 552, 0, 554, 555, 553, 556, 557, 558, 0,
	559, 560, 542, 543, 561, 562, 0, 563, 564, 565,
	566, 567, 568, 569, 666, 0, 570, 0, 571, 572,
	573, 575, 544, 576, 581, 582, 667, 577, 578, 579,
	580, 668, 584, 585, 0, 586, 587, 0, 583, 574,
	0, 588, 589, 590, 591, 592, 593, 594, 357, 595,
	0, 596, 669, 670, 671, 672, 0, 605, 0, 597,
	598, 599, 673, 600, 674, 0, 601, 602, 603, 604,
	0, 606, 607, 0, 0, 608, 609, 610, 612, 613,
	611, 614, 0, 615, 0, 0, 616, 617, 618, 675,
	676, 677, 0, 620, 619, 621, 678, 0, 622, 0,
	0, 0, 0, 623, 624, 679, 625, 626, 627, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1810, 1804, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 1795, 0, 0, 0, 0, 0,
	0, 0, 0, 1792, 1810, 1804, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 0, 0, 0, 1781, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 0, 0, 1796, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 0, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 1810, 1804,
	0, 0, 0, 0, 1802, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1795, 0, 0, 1815, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 2556, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 1799, 1800, 1801, 0,
	0, 0, 0, 0, 0, 1781, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 1814, 0, 4600, 1824, 0, 0, 0,
	0, 0, 0, 1803, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 0, 1821, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1812, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 1810, 1804, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 1822, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 1811, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 1797, 1773, 1774, 1781, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1804, 0, 0, 1815, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 1829, 1828,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 1795, 1790, 1791,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 1822, 0, 0, 0, 4596,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1802, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1773, 1774, 1812, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 1810, 1804, 0, 0, 1815, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1828, 0,
	0, 0, 1822, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	1811, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 1802, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 0, 0, 4512, 0,
	1798, 1799, 1800, 1801, 0, 0, 0, 1797, 1773, 1774,
	1781, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1804, 0, 0, 1815, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1814, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 1803, 1805,
	0, 0, 0, 0, 1829, 1828, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 1820, 0, 1821, 0, 0,
	0, 0, 0, 1795, 1790, 1791, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 1822, 0, 0, 0, 4475, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 0, 0, 1781, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1802, 1821, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1773, 1774, 1812,
	1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1810,
	1804, 0, 0, 1815, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1828, 0, 0, 0, 1822, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 1811, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	1802, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	0, 0, 0, 0, 4474, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 1797, 1773, 1774, 1781, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1810, 1804, 0, 0,
	1815, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 1814, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 1803, 1805, 0, 0, 0, 0,
	1829, 1828, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 1820, 0, 1821, 0, 0, 0, 0, 0, 1795,
	1790, 1791, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 1822, 0, 0,
	0, 4291, 0, 1798, 1799, 1800, 1801, 0, 0, 0,
	0, 0, 0, 1781, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 1803, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1802,
	1821, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1773, 1774, 1812, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 1810, 1804, 0, 0, 1815,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1828, 0, 0, 0, 1822, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1795, 0,
	0, 0, 1811, 0, 0, 0, 0, 1792, 0, 0,
	0, 0, 0, 1826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 1802, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0,
	4127, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 1797,
	1773, 1774, 1781, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1804, 0, 0, 1815, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1814, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 0, 0, 0, 0, 1829, 1828, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 1820, 0, 1821,
	0, 0, 0, 0, 0, 1795, 1790, 1791, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 1822, 0, 0, 0, 4061, 0, 1798,
	1799, 1800, 1801, 0, 0, 0, 0, 0, 0, 1781,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1814, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 1803, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1802, 1821, 0, 0, 0,
	0, 0, 0, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1773,
	1774, 1812, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 1810, 1804, 0, 0, 1815, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1828, 0, 0, 0,
	1822, 0, 0, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 0, 0, 0, 1811, 0,
	0, 0, 0, 1792, 0, 0, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 0, 0, 0, 0, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 1802, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 0, 0, 4060, 0, 1798, 1799,
	1800, 1801, 0, 0, 0, 1797, 1773, 1774, 1781, 1806,
	1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1810, 1804,
	0, 0, 1815, 0, 0, 0, 1776, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1814, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 0,
	0, 0, 1829, 1828, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 1795, 1790, 1791, 0, 0, 0, 0, 0, 0,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 1822,
	0, 0, 0, 4059, 0, 1798, 1799, 1800, 1801, 0,
	0, 0, 0, 0, 0, 1781, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1814, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 1803, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1802, 1821, 0, 0, 0, 0, 0, 0, 1790,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1773, 1774, 1812, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 1810, 1804, 0,
	0, 1815, 0, 0, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1828, 0, 0, 0, 1822, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 0, 1811, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 1826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 1802, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0,
	0, 0, 3720, 0, 1798, 1799, 1800, 1801, 0, 0,
	0, 1797, 1773, 1774, 1781, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1804, 0, 0, 1815, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1814, 0, 0, 1824, 0, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 0, 0, 1829, 1828,
	0, 0, 0, 0, 0, 0, 0, 1775, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 1795, 1790, 1791,
	0, 0, 0, 0, 0, 0, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1813, 0, 0, 0, 0, 0, 0, 0, 1787,
	1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777,
	1778, 1779, 1780, 1782, 1783, 1822, 0, 0, 0, 3222,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 0, 0,
	0, 1781, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 0, 0, 0, 0, 0, 0, 1803,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1802, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1773, 1774, 1812, 1806, 1807, 1808, 1817, 1818, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 1810, 1804, 0, 0, 1815, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1828, 0,
	0, 0, 1822, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 0,
	1811, 0, 0, 0, 0, 1792, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 1802, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 0, 0, 3221, 0,
	1798, 1799, 1800, 1801, 0, 0, 0, 1797, 1773, 1774,
	1781, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1810, 1804, 0, 0, 1815, 0, 0, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1814, 0,
	0, 1824, 0, 0, 0, 0, 0, 0, 1803, 1805,
	0, 0, 0, 0, 1829, 1828, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 1820, 0, 1821, 0, 0,
	0, 0, 0, 1795, 1790, 1791, 0, 0, 0, 0,
	0, 0, 1792, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 1822, 0, 0, 0, 3220, 0, 1798, 1799, 1800,
	1801, 0, 0, 0, 0, 0, 0, 1781, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 0, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1802, 1821, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1773, 1774, 1812,
	1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 1810,
	1804, 0, 0, 1815, 0, 0, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1828, 0, 0, 0, 1822, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 1811, 0, 0, 0,
	0, 1792, 0, 0, 0, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789,
	1802, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
	0, 0, 0, 0, 3219, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 1797, 0, 0, 1781, 4744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1810, 1804, 1814, 0, 0, 1824, 0, 0,
	1776, 0, 0, 0, 1803, 1805, 0, 0, 0, 1823,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1821, 0, 0, 1829, 0, 0, 0,
	1790, 1791, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 1812, 0,
	0, 0, 0, 0, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 1822, 0, 3184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 1798,
	1799, 1800, 1801, 0, 0, 0, 1826, 0, 0, 1781,
	0, 3284, 0, 0, 0, 3283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4743, 0,
	0, 0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817,
	1818, 1819, 0, 0, 0, 0, 0, 1814, 0, 0,
	1824, 0, 0, 0, 0, 1810, 1804, 1803, 1805, 1802,
	0, 3155, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 1820, 0, 1821, 0, 0, 0,
	0, 0, 1797, 1790, 1791, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 1795, 1815,
	0, 0, 0, 0, 0, 0, 1796, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3156, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	0, 0, 1798, 1799, 1800, 1801, 0, 0, 0, 0,
	0, 0, 1781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0,
	1814, 0, 1802, 1824, 0, 0, 0, 0, 0, 0,
	1803, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 1820, 0, 1821,
	0, 0, 0, 0, 0, 0, 1790, 1791, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2701, 0,
	0, 0, 1815, 0, 1812, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 1810, 1804, 0,
	0, 0, 2700, 1828, 0, 1776, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 1822, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 1811, 0, 0, 0, 0, 0, 0, 0, 1792,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 0, 0, 0, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 0,
	0, 0, 1773, 1774, 0, 1806, 1807, 1808, 1817, 1818,
	1819, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 1810, 1804, 0, 0, 0, 0,
	0, 0, 1776, 0, 1798, 1799, 1800, 1801, 1797, 0,
	0, 1823, 0, 0, 1781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 1815, 0, 1775, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1795, 0, 0,
	0, 0, 1814, 0, 0, 1824, 1792, 0, 0, 0,
	0, 0, 1803, 1805, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1798, 1799, 1800, 1801, 0, 0, 0, 1813, 0,
	0, 1781, 0, 0, 0, 0, 1787, 1788, 1794, 1816,
	1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780,
	1782, 1783, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 1824, 1811, 0, 0, 0, 0, 0, 1803,
	1805, 0, 0, 0, 1826, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1821, 0,
	0, 0, 0, 0, 0, 1790, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1773, 1774, 0, 1806, 1807, 1808,
	1817, 1818, 1819, 0, 0, 0, 0, 1802, 1796, 0,
	0, 0, 0, 0, 0, 0, 1810, 1804, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 0,
	1797, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 1822, 0, 0, 0, 0, 1815, 0, 1775,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1795,
	1811, 1059, 0, 0, 0, 0, 0, 0, 1792, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 1799, 1800, 1801, 1797, 0, 0,
	1813, 0, 0, 1781, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 1815, 0, 0, 1773, 1774, 0,
	1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0,
	0, 1814, 0, 0, 1824, 0, 0, 0, 0, 1810,
	1804, 1803, 1805, 0, 0, 1828, 0, 1776, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 0, 1820, 0,
	1821, 0, 0, 0, 0, 0, 0, 1790, 1791, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 0, 0, 0,
	1796, 1792, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 1787, 1788, 1794, 1816, 1793,
	1789, 0, 1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782,
	1783, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 0, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 0, 0, 0, 1781, 0, 0, 0,
	0, 0, 3290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 0, 1806, 1807,
	1808, 1817, 1818, 1819, 1814, 0, 1802, 1824, 0, 0,
	0, 0, 0, 0, 1803, 1805, 0, 1810, 1804, 0,
	0, 0, 3285, 0, 0, 1776, 0, 0, 0, 1797,
	0, 1820, 0, 1821, 1823, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 1815, 0, 1812, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 0, 1796, 0, 0, 0, 0, 0, 1792,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3701, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 1798, 1799, 1800, 1801, 0, 1813,
	0, 0, 0, 0, 1781, 0, 0, 1787, 1788, 1794,
	1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778, 1779,
	1780, 1782, 1783, 0, 0, 0, 0, 0, 1773, 1774,
	0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 1802,
	0, 0, 1814, 0, 0, 1824, 0, 0, 0, 0,
	1810, 1804, 1803, 1805, 0, 0, 0, 0, 1776, 0,
	0, 0, 1797, 0, 0, 0, 0, 1823, 0, 1820,
	0, 1821, 0, 0, 0, 0, 0, 0, 1790, 1791,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 1815,
	0, 0, 0, 1775, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 1795, 0, 0, 0, 0, 0, 0,
	0, 1796, 1792, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 0, 0, 1798, 1799, 1800,
	1801, 0, 1813, 0, 0, 0, 0, 1781, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1814, 0, 1802, 1824, 0,
	0, 0, 0, 0, 0, 1803, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 1820, 0, 1821, 0, 0, 0, 0, 0,
	0, 1790, 1791, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 0, 1812,
	1773, 1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 1810, 1804, 0, 0, 0, 3223, 1828, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1822, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 1811, 0, 0, 0,
	0, 0, 0, 0, 1792, 0, 0, 1826, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3250, 0, 0,
	1813, 0, 0, 0, 0, 0, 0, 0, 1787, 1788,
	1794, 1816, 1793, 1789, 0, 1786, 1784, 1785, 1777, 1778,
	1779, 1780, 1782, 1783, 0, 0, 0, 1773, 1774, 0,
	1806, 1807, 1808, 1817, 1818, 1819, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	1804, 0, 0, 0, 0, 0, 0, 1776, 0, 1798,
	1799, 1800, 1801, 1797, 0, 0, 1823, 0, 0, 1781,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	1815, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 0, 0, 0, 0, 1814, 0, 0,
	1824, 1792, 0, 0, 0, 0, 0, 1803, 1805, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 1821, 0, 0, 0,
	0, 0, 0, 1790, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1798, 1799, 1800, 1801,
	0, 0, 0, 1813, 0, 0, 1781, 0, 0, 0,
	0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784,
	1785, 1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 0, 1824, 1811, 0,
	0, 0, 0, 0, 1803, 1805, 0, 0, 0, 1826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1821, 0, 0, 0, 0, 0, 0,
	1790, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 1773,
	1774, 0, 1806, 1807, 1808, 1817, 1818, 1819, 0, 0,
	0, 0, 1802, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 0, 1797, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1822, 0, 0,
	0, 0, 1815, 0, 1775, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1795, 1811, 0, 0, 0, 0,
	0, 0, 0, 1792, 0, 0, 1826, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 1799,
	1800, 1801, 1797, 0, 0, 1813, 0, 0, 1781, 0,
	0, 0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0,
	1786, 1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 1803, 1805, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 1821, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1813, 0, 0, 0, 0, 0, 0, 0,
	1787, 1788, 1794, 1816, 1793, 1789, 0, 1786, 1784, 1785,
	1777, 1778, 1779, 1780, 1782, 1783, 0, 0, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1813, 0, 0, 0, 0, 0,
	0, 0, 1787, 1788, 1794, 1816, 1793, 1789, 0, 1786,
	1784, 1785, 1777, 1778, 1779, 1780, 1782, 1783,
}

var sqlPact = [...]int{
	7512, -1000, -1000, -1000, -1000, 213, -1000, -1000, 212, 209,
	206, 205, 204, 203, 201, 197, 196, 194, 187, -1000,
	-1000, -1000, -1000, -1000, -1000, 186, -1000, -1000, 184, -1000,
	183, 179, 176, -1000, -1000, 173, -1000, 168, -1000, -1000,
	-1000, -1000, 165, 163, 162, 94224, 93672, 94769, 2270, 115088,
	101337, 1939, 83778, 114536, 83226, 113984, 2135, 9830, 113432, 2712,
	160, -1000, 112880, 158, 157, 156, -1000, 112328, -1000, 1909,
	-1000, 155, -1000, 6704, 69366, 154, 153, 149, 2211, 145,
	-1000, 141, 140, -1000, -1000, 139, -1000, 10668, 1589, -1000,
	138, 135, -1000, 366, 99136, 134, 132, 2314, 131, 130,
	67710, 122, 121, 2289, 2820, -1000, -1000, 2040, -1000, -1000,
	120, 117, 116, 113, 112, 107, 106, 105, 104, 103,
	101, 99, -1000, 98, 97, 96, 95, 94, -1000, 93,
	91, 90, -1000, 88, -1000, 87, 86, 85, 84, 81,
	80, 79, 74, 71, 70, 66, 63, 60, 59, 16024,
	-1000, -1000, 1865, 1642, 1638, 1635, 1617, 1604, 975, 54,
	53, 52, 51, 50, 47, 45, 44, 43, 38, 37,
	35, 34, 33, 31, 30, 28, 27, 164, 26, 25,
	23, 22, 21, 19, 18, 2206, -1000, 1483, 908, 32240,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 122718, 115633, 15,
	-39, 13, -1000, 3275, 991, 56052, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 316, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 509, 1898, 761, -1000, -1000, -1000, 111783, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2268, -43, -1000,
	2012, -1000, -1000, -1000, -1000, -1000, 759, -1000, 2265, 275,
	2214, -1000, -1000, -1000, 3325, 2411, 3735, 3734, 3733, 3732,
	3730, 122173, 1820, 3729, 2485, 3727, 3726, 3722, 3721, 3718,
	3715, 3713, -1000, 93120, 1014, 92568, 92016, 3331, 111238, 91464,
	110686, 77165, 48176, 898, 3323, -1000, -1000, -1000, -1000, -1000,
	-1000, 115633, -1000, 1013, -1000, -1000, 3711, 3710, 2062, 757,
	100785, -1000, 1720, -1000, -1000, -1000, -1000, 917, 1254, 33935,
	33935, 291, -1000, -1000, -1000, -1000, -1000, -1000, 3709, 3705,
	3704, 3702, 3701, -1000, -1000, 82674, 25268, 82122, 81570, 110134,
	24704, 90912, 90360, 3699, 3698, 3697, 109582, 76601, 3449, 3448,
	1012, 2008, 1414, -1000, -1000, -1000, -1000, -1000, -1000, -14,
	71565, 3480, 115633, -1000, 288, -1000, -1000, -1000, -1000, -1000,
	-1000, 47611, 731, 47046, 742, 46481, 736, -1000, -1000, -1000,
	-1000, 76037, -1000, 109030, 2409, 3694, 3693, 1084, 3692, 3218,
	1760, 3690, 1892, 1177, 3688, 3685, 3683, 3679, 3674, 3673,
	3672, 1460, 108478, 2906, 1546, 107926, 1669, 75473, 1011, 89808,
	94769, 2580, 107374, 1403, 1372, -1000, -1000, -1000, -1000, 3046,
	2816, 2812, 1342, -1000, -1000, -1000, -1000, 59387, 7198, 7004,
	-1000, -1000, 12179, 106822, 62197, 94769, 94769, -1000, -1000, -1000,
	-1000, -1000, 45916, 721, 45351, 823, -1000, -1000, 59949, 2846,
	-1000, -1000, -1000, -1000, 44786, 399, 44221, 805, 115633, -1000,
	2902, 1833, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2022,
	1576, 3497, 2665, 74909, 2095, 1409, 3277, 3034, 3027, 1519,
	3023, 3666, 2584, 3014, 3010, 3007, 3001, 2990, 1243, 2538,
	297, 2537, 31675, 2887, 1759, 43656, 1514, 1517, 2987, 2973,
	3516, 1994, 2035, 2037, 81018, 3662, 3661, 3240, 2971, 2961,
	2730, 2939, -1000, 2844, 1449, -1000, -1000, -1000, -1000, 1463,
	-1000, -1000, -1000, -1000, 85413, -1000, -1000, 1786, -1000, -1000,
	1786, -1000, -1000, -1000, -1000, -1000, 1264, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1483,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2067, -1000, 2056, -1000, -1000, 2451, 3215, 3215, 3215, 3320,
	474, 462, -1000, 164, -1000, -1000, 129496, -1000, -1000, 48741,
	48741, 48741, 48741, 48741, 48741, 48741, 48741, 2155, -1000, 748,
	-1000, -1000, 815, -1000, 745, 668, 620, -1000, -1000, -1000,
	-1000, -1000, -1000, 744, -1000, -1000, -1000, -1000, -1000, -1000,
	3480, -1000, 28152, -1000, -1000, -1000, 495, 743, 48741, -1000,
	-1000, 3540, 3539, 955, -1000, 287, 960, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2900,
	741, 738, -1000, 737, 729, 728, 726, 725, -1000, -1000,
	-1000, 723, 718, 715, 712, 705, 699, 694, 693, -1000,
	2052, -1000, -1000, -1000, -1000, -1000, -1000, 655, 654, 654,
	654, -1000, 1006, -1000, -1000, -1000, 313, 653, 309, 652,
	649, 647, -1000, 692, 691, 690, 688, 685, 682, 680,
	678, 677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1005,
	-1000, -1000, -1000, -1000, -16, 115633, -1000, 509, -16, -1000,
	-1000, 676, -1000, 36224, 36224, 36224, -1000, -1000, 2264, 48741,
	-1000, 2482, -1000, -6, -6, 883, 57711, -1000, 54944, 883,
	298, 824, 63849, -1000, 2842, -1000, -1000, 675, 285, -1000,
	-1000, -1000, -1000, 25830, 2840, 115633, 115633, 94769, 94769, 94769,
	3659, 3108, 48741, -1000, -1000, 68814, 115633, 95314, -1000, -1000,
	3432, 69916, 68262, 115633, 2899, 72669, 3658, -1000, -1000, -1000,
	-1000, -1000, 3089, 3656, 3653, 3650, -1000, 115633, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 243, 3085, -1000, -1000, 98584,
	243, 3082, -1000, 243, 3081, -1000, 98039, -1000, -1000, 2249,
	3080, -1000, -1000, 247, 3069, -1000, -1000, -1000, 244, 3068,
	-1000, -1000, 284, -96, 3062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 129496, -1000, -1000,
	-1000, 72117, -1000, 3249, -1000, -1000, 115633, -1000, 48741, -1000,
	3431, 1620, 78279, 3364, -31, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2469, 2453, 1128, 2301, -1000, 3151, 1612, 33935,
	3209, -1000, -1000, -1000, -1000, 281, 25830, -1000, -1000, -1000,
	-1000, -1000, -1000, 2460, 3051, 1454, -1000, 2297, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1937, 3048, -1000, 2300,
	3041, 1870, -1000, -1000, 2269, -1000, 3237, -1000, -1000, 1835,
	3039, -5, -1000, -1000, 2085, -1000, -1000, -1000, -1000, 1956,
	-1000, 1290, 3036, -1000, 2658, 2658, 89256, 3058, 61635, 59949,
	71565, -24, -1000, -1000, -1000, -1000, -166, -1000, 24138, 129496,
	-1000, -1000, -1000, -1000, 1721, 129496, 938, -1000, -1000, 3032,
	-1000, 129496, 904, -1000, -1000, 3029, -1000, 2898, -1000, -1000,
	2366, -1000, -1000, 3648, -1000, -1000, 3647, -1000, 3645, 3644,
	3640, -1000, 1541, 2000, 3638, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 88711, 2262, -1000, -1000, 87607, 2896, -1000,
	2365, 3363, -1000, 88159, 1010, -1000, 973, 2362, -1000, 97494,
	1020, 2361, -1000, 3637, 3328, 2619, 973, 2359, -1000, -1000,
	-1000, -1000, -1000, 1045, -1000, 65504, -1000, 65504, -1000, 1610,
	-1000, 121628, -6, 94769, 3480, -1000, -42, -1000, -1000, -1000,
	991, -1000, 58833, -1000, 58833, 100233, 77727, 963, 782, 67156,
	129496, -1000, -1000, -1000, -1000, 129496, -1000, -1000, -1000, -267,
	2657, -1000, 77727, 61073, 129496, -1000, -1000, -1000, -1000, 129496,
	-1000, -1000, -1000, 77727, 87607, -1000, 106270, 87062, -1000, -1000,
	1447, 2518, -1000, -1000, -1000, 77727, 1297, 77727, 77727, 77727,
	-1000, 105718, -1000, -1000, 2083, 1223, 3243, 2070, 94769, -1000,
	1817, -1000, -1000, -1000, 3264, 115633, -1000, -1000, 2889, -1000,
	71013, 96949, -1000, 96404, -1000, 95859, -1000, 94769, -1000, 94769,
	-1000, 3635, 3633, 3632, -1000, -1000, 3630, -1000, 3626, 3254,
	-1000, 794, 43091, 129496, 3253, -1000, 3625, 3356, 2887, 129496,
	-1000, 3037, 1656, 1649, 115633, -1000, -1000, 115633, -1000, 115633,
	-1000, -1000, -1000, 1568, -1000, -1000, 2466, -1000, -1000, -1000,
	-1000, 94769, 94769, 94769, 94769, 1398, -1000, 42526, -1000, -1000,
	2959, 3622, 1694, -1000, 1803, -1000, 2837, 3261, -1000, 1443,
	1776, -1000, -1000, 252, -1000, -1000, -31, -1000, 121083, -1000,
	2451, -1000, 115633, -1000, 2463, 2877, 2886, 1717, 2277, 2554,
	-1000, 41961, 2502, 52131, 2296, 164, -1000, -1000, 164, 164,
	33370, -1000, -1000, 69916, 69916, 25830, 1323, 48741, 48741, 48741,
	48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741,
	48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741,
	48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741, 48741,
	48741, 48741, 48741, 2187, 48741, 1255, 48741, 48741, 48741, 48741,
	1588, -1000, -1000, 1935, 574, 2028, 668, -1000, -1000, -1000,
	3485, 3485, 3485, 355, 355, 355, 129758, 129758, 612, 3621,
	815, -1000, 48741, -1000, 92, 58264, 48741, 26394, -1000, 462,
	10193, 2452, -1000, 459, 26988, -1000, -1000, -1000, 28152, 620,
	41367, 48741, 990, 129496, -1000, -1000, 1379, 3504, 23572, 2807,
	2722, 667, 867, 862, 31081, 30487, 29893, 29299, 772, 48741,
	48741, 48741, 48741, 48741, 48741, 48741, 48741, -1000, -1000, 3508,
	-1000, 3504, -1000, -1000, -1000, -1000, 3504, 1322, 1227, 3504,
	-1000, 3504, 3504, 10422, 10422, 40802, 40237, 39672, 52696, 39107,
	48741, 28734, 38542, 37977, -1000, 115633, -16, 3430, 48741, 248,
	-1000, 128134, -1000, 248, 248, 666, -44, 129496, 2494, 2494,
	56605, 2371, 2158, 2158, 2158, -1000, 883, 19015, 883, 104621,
	2168, 883, 883, 267, 303, 455, 54391, 2482, 104621, 791,
	664, 12, 11, 9, -1000, -1000, 7, 6, -1000, -1000,
	94769, 658, 26394, 25830, 245, 2029, -45, 2553, 2551, 2550,
	-1000, 2547, -1000, 1797, -50, 1253, 94769, 115633, 1360, 3619,
	-97, -1000, 6449, -55, -1000, 1337, 240, 3504, -1000, -1000,
	-1000, -1000, -1000, 3618, 3617, -1000, 1004, 657, 656, 894,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 655, 654,
	654, 654, -1000, 313, 653, 309, 652, 649, 647, -1000,
	-1000, -1000, -1000, -1000, 2836, 94769, 115633, 1258, 3616, -166,
	95314, -58, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	115633, -1000, -1000, -1000, 3612, -1000, 94769, -1000, -1000, 94769,
	243, 3028, -1000, 94769, -1000, 94769, 236, 3022, -1000, -1000,
	115633, -1000, 94769, 94769, -1000, 115633, 115633, 115633, 77727, 77727,
	251, -1000, 94769, 888, -60, 1121, -31, -1000, -1000, -1000,
	1786, -1000, 1810, -1000, -1000, -1000, -1000, -1000, -1000, 1407,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 955, -1000,
	-1000, -1000, -1000, -1000, -1000, 3501, 3499, -21, -1000, -1000,
	25830, -1000, -32, 1624, 1906, 1247, -1000, 80466, 2349, 3244,
	3611, 2603, 3231, 1609, -1000, 1520, -1000, 3340, 85413, 3391,
	3416, 1318, -1000, 2832, -1000, -1000, 915, 1688, 1757, 1246,
	1240, 85413, 2300, -1000, 69916, -1000, 2612, 3318, 1412, 1400,
	1412, 1412, 1406, -1000, 85413, 1746, 1239, 1236, 1233, 2064,
	1958, 1926, -1000, -1000, -1000, 1231, 1229, 837, 1920, -1000,
	-33, 3389, 3394, 1282, -1000, 2829, 1224, -1000, -1000, -1000,
	3317, 94769, 25830, 1537, 1532, 1535, 1732, 1222, -22, -1000,
	3375, 1221, 1220, -1000, 1028, 5385, 3177, -1000, 77727, 1028,
	1028, 1863, 3021, 2642, 1564, -1000, 2655, 881, 2652, -1000,
	-1000, -1000, 881, -24, 71565, 115633, 238, -1000, 92, 48741,
	48741, 92, 48741, 92, 3353, 3018, -1000, -1000, -1000, -1000,
	-1000, 3610, 1981, 2484, -1000, -1000, 645, 2351, 2828, 115633,
	2564, -25, 94769, -1000, 70461, 3002, 73221, 2300, 2342, -1000,
	-1000, 86510, -1000, 3000, 509, 2339, -1000, 720, 3609, 2997,
	-1000, 120538, -1000, 3249, 1230, 2995, 1042, 662, 3429, -1000,
	662, 66056, -1000, 115633, -1000, -6, 5977, 79376, -61, -62,
	454, -1000, 105173, 115633, 1041, 79921, 115633, 3193, 969, 59949,
	-1000, 59949, -68, -267, 2651, 1490, 963, 963, 881, -1000,
	881, -1000, 94769, 2885, -1000, -1000, 77727, 963, 963, 963,
	-1000, -1000, -1000, -1000, 3606, 3602, 3601, 3600, -1000, -1000,
	970, 94769, 115633, 94769, -1000, 232, -1000, 115633, -1000, 115633,
	115633, 94769, -1000, 970, 115633, 970, 115633, 970, 115633, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 92, -1000, -1000, 129496,
	-1000, 48741, -1000, -1000, 3599, 1640, -1000, 2884, -1000, 2881,
	-1000, 41, -1000, -1000, 1849, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3598, 129496, -1000, 1825, -1000, -1000, -1000, -1000,
	94769, 94769, 94769, 94769, 115633, 3170, -1000, 115633, 3166, 94769,
	-1000, -1000, 85413, -1000, 2463, 2877, -1000, -1000, -1000, -1000,
	-1000, -1000, 1583, 2232, -1000, 2512, -1000, 1592, -1000, -1000,
	-1000, 129496, 53261, -1000, -1000, 129496, 1804, -1000, 51566, 51001,
	-1000, -1000, 1719, 94769, 2571, -1000, 2571, -145, -1000, 127872,
	2511, 94769, -1000, -1000, -1000, -1000, -1000, 913, 587, 587,
	1347, 1347, 1347, 1347, 3378, 5717, 5999, 5242, 12058, 12058,
	534, 534, 534, 534, 534, 12058, 5064, 355, 355, 5064,
	5064, 5064, 5064, 5064, 355, 355, 355, 12058, 12058, 12058,
	355, 129758, 11224, 10793, 48741, 48741, 1219, 1921, 574, 9502,
	48741, 12517, 12517, 12517, 12517, -1000, 1871, -1000, -1000, -1000,
	-1000, 2827, 644, 52696, 52696, -1000, -1000, -1000, -1000, 27570,
	48741, -1000, -1000, -1000, -1000, 37383, -1000, -1000, 127237, -310,
	451, -1000, 225, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 450, -126, 8, -1000,
	48741, 48741, 48741, 448, -1000, 224, 48741, 115633, -1000, 123818,
	786, -138, -1000, -69, 1410, -1000, 48741, -1000, -1000, 1217,
	-1000, 1214, 1212, 1201, -1000, 643, 439, -1000, 222, -1000,
	2148, 642, 641, 48741, -1000, -1000, -1000, -1000, -1000, 127070,
	-1000, -1000, 126811, -1000, -1000, 126644, -1000, -1000, 126385, -1000,
	-1000, -1000, 129369, 18085, 17562, 16951, 8432, 16272, 15112, -77,
	438, -80, 437, 907, 906, 436, 435, 430, -82, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -83, 420, -1000, 2821, -126, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 403, -1000, 401, -1000, 129107, -126,
	397, 8253, -1000, 52696, 52696, 52696, 52696, -1000, 395, -1000,
	127679, -1000, 128914, 36818, 36818, 36818, 394, 128716, 48741, -126,
	-85, -1000, -99, -1000, -1000, 572, -100, 986, 36224, 55498,
	25830, -1000, 986, 986, 48741, -1000, 48741, 2534, -1000, -1000,
	-1000, -1000, 2525, 2293, 2494, 56605, -1000, -1000, -1000, -1000,
	104621, -1000, 3480, 2818, -1000, 104621, -1000, -1000, 115633, 509,
	-1000, 104621, 104621, 25830, 883, -1000, 883, 104621, 810, -1000,
	-1000, -1000, -1000, -1000, 393, 63304, 8, 221, 25830, 973,
	-1000, -1000, 2636, 2636, 2636, 2636, -1000, -1000, 115633, 1200,
	-28, -94, 2646, -1000, 3454, -1000, 2065, -1000, 69916, -1000,
	811, 1153, 25830, -1000, -1000, -1000, 639, -1000, 3504, 3504,
	-1000, 3504, 115633, 2800, 208, 2643, -1000, 178, 73221, 73221,
	3594, -1000, -1000, 243, -1000, 94769, 243, 243, -1000, 94769,
	94769, 2249, -1000, 247, -1000, 244, -1000, -1000, -96, -1000,
	982, 33935, -1000, 1786, -1000, -1000, 1506, -1000, 1989, -1000,
	1181, -1000, -1000, -1000, -1000, 33935, -1000, 2069, 115633, 115633,
	94769, -1000, 115633, -1000, 2079, 73221, -1000, 2338, 119993, 2330,
	69916, 115633, -1000, -1000, 638, 949, 2509, 2504, 1039, 115633,
	115633, 2503, 119448, 118903, -1000, 3591, 115633, 2038, 48741, 3316,
	2147, 2222, 92, 92, -1000, 92, 92, 92, -1000, 633,
	1325, 94769, 94769, 115633, 73221, 94769, 1855, -1000, -1000, -1000,
	-1000, -1000, 85958, -1000, -1000, 3507, 3506, -1000, 1412, -1000,
	-1000, -1000, 1412, 2300, 1841, 115633, 73221, 94769, 73221, -1000,
	-1000, 2149, 118358, 117813, 1731, 115633, 1424, -1000, 837, 2074,
	92, 92, -1000, 92, 92, 92, 631, 25830, 1978, -1000,
	2883, 115633, 3537, 117268, 3536, 115633, 115633, 115633, 73221, 3220,
	115633, 115633, 73221, -1000, 116723, 3447, 2067, 5385, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 74345,
	1049, 115633, 1290, -1000, -1000, 1724, 1199, 1198, 85413, 2080,
	1722, 1829, 115633, 59949, 968, 59949, 2625, -1000, -1000, 23006,
	-1000, 129496, 129496, -1000, 129496, -1000, 70461, 115633, -1000, 1008,
	115633, 79921, 956, 2991, 64952, -166, 963, 77727, 94769, -25,
	2564, 115633, -1000, -1000, 2300, 2980, 509, 2335, -1000, 77727,
	3426, 2976, 629, 3590, 3589, -1000, 94769, 2256, 2332, -1000,
	-1000, 116178, 2982, 837, 115633, 986, 56605, 1951, -1000, 62751,
	1023, 115633, 1843, 170, -1000, -1000, -1000, 17, 115633, -1000,
	821, -1000, -1000, 5977, 5977, 963, -174, 626, -1000, 866,
	859, 60511, 77727, -101, -1000, -1000, -1000, -1000, 2330, 94769,
	115633, 1273, 2618, 115633, -106, -1000, 219, 624, -1000, 2454,
	-1000, -267, -1000, 969, 59949, 2797, 2793, -1000, -1000, 981,
	-1000, 1405, 963, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -9, 115633, -166, -166, -56, -28,
	-1000, 970, -1000, 970, -1000, 970, -1000, 129496, -1000, -1000,
	1636, 1630, 115633, -1000, -1000, 115633, -1000, 25830, 115633, 94769,
	25830, 94769, 2874, 2867, -1000, -1000, -1000, 115633, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1053, -1000, 1804, 2228, -1000,
	620, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2434, -1000, -29, 33370, 901, -1000, -1000, 94769, -10, 48741,
	48741, 8472, 8331, 48741, 52696, 52696, -1000, 48741, 5263, -1000,
	-1000, -1000, -1000, -1000, 2792, 619, 48741, 69916, 7989, 6601,
	-1000, 392, 12820, 5064, -1000, 48741, -1000, 7270, -1000, 390,
	35659, -1000, 128261, -47, -111, -1000, 19594, -126, -116, -1000,
	-1000, 806, -1000, 3012, -1000, 48741, 128523, 2400, 1992, 1918,
	1648, 3504, 3535, 22440, -1000, 66606, 988, 2177, 126218, -1000,
	-1000, -1000, -1000, 69916, 69916, 48741, 48741, -1000, 48741, 48741,
	48741, -1000, -1000, -1000, 3504, 891, -1000, -1000, -1000, 891,
	-1000, -1000, 1412, -1000, 1412, -1000, 48741, -1000, -1000, 2791,
	48741, -1000, 69916, 69916, 52696, 52696, 52696, 52696, 52696, 52696,
	52696, 52696, 52696, 52696, 52696, 52696, 52696, 52696, 52696, 52696,
	52696, 52696, 52696, 52696, 2491, 52696, 3483, 3483, 3483, 1043,
	-1000, 2865, 2791, 48741, 48741, 69916, 389, 388, 387, -1000,
	48741, -126, -1000, -1000, 8171, 618, -1000, 2422, -1000, 2721,
	-1000, 48741, -1000, -206, -1000, 2482, -1000, -1000, 2721, 2721,
	-117, 129496, 56605, 56605, -1000, 616, 48741, 2510, -1000, -1000,
	784, -306, -1000, 857, -1000, -1000, -1000, -1000, -1000, -1000,
	509, -1000, -1000, -1000, 218, 104621, 104621, 780, -1000, -125,
	-1000, -1000, -127, -1000, 3423, 386, 25830, -1000, 986, 2620,
	-1000, -1000, -1000, -1000, -1000, -1000, -166, 115633, 115633, 1704,
	2209, 3533, -1000, 3505, 803, 779, 215, 3504, 385, 384,
	381, -166, 115633, 115633, 1703, 115633, -1000, -1000, -1000, -1000,
	243, -1000, -1000, -1000, 236, -1000, -1000, -1000, -1000, 2587,
	-1000, -31, -1000, -1000, -1000, 48741, -1000, -1000, 3241, 1196,
	1195, -1000, -1000, -1000, -1000, 2796, -1000, 2975, -1000, 2325,
	-1000, 1016, -1000, 1569, -1000, 48741, 614, 2608, 611, 610,
	3588, 2132, 3587, 1040, 2974, 2249, 2969, 2249, -1000, -1000,
	-1000, 931, -1000, 129496, 2147, -1000, 609, 608, -1000, -32,
	1614, 1853, 1193, 980, -1000, -1000, -1000, -1000, 48741, 48741,
	104076, -1000, 488, 3237, -12, -1000, -1000, -1000, 1692, 1192,
	1191, -1000, -1000, -1000, -1000, 2300, 1682, 1187, 1186, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2324, -1000, -1000, 2967,
	979, -1000, 2926, 2925, 905, 115633, -1000, 977, -1000, -1000,
	-1000, -1000, 48741, -1000, -33, 1176, 3379, 2322, 94769, -1000,
	2249, 2966, 1172, -1000, 1169, -1000, -1000, -1000, 3372, 3369,
	1145, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73783,
	-1000, -1000, 1028, 115633, 73221, 94769, 1779, -1000, -1000, 84323,
	84868, 115633, 2642, -166, 881, -1000, 2424, 881, 968, 2786,
	-1000, 2562, 976, 94769, 3585, 380, -142, -35, 69916, 3422,
	-1000, 2274, 607, 94769, 886, -1000, 3480, -1000, -1000, -1000,
	974, -1000, 3350, 94769, 3421, 2964, 973, 92, 94769, 3486,
	-1000, -1000, 3420, 94769, 2963, 2254, 2317, 2476, 837, 78831,
	973, 2170, -95, -1000, 1843, 35065, 3235, -147, -1000, -1000,
	-1000, 986, 66056, 56605, 48741, 3583, -148, -1000, -1000, -1000,
	-1000, -1000, 101889, 101889, 77727, 77727, 77727, 963, 115633, 115633,
	79921, -1000, -1000, 605, 115633, 115633, 604, -1000, 115633, 115633,
	3581, 77727, -36, 603, -1000, 856, 855, 853, -1000, -1000,
	-1000, -1000, -1000, -1000, 969, -1000, -267, 59949, 92, -1000,
	2198, 94769, -1000, 21874, -1000, -1000, -1000, -1000, -1000, -1000,
	970, -166, -1000, -1000, 2089, 2285, 2089, 1837, 1836, -1000,
	-1000, 2221, -1000, -1000, -1000, -1000, 2572, 3207, 25830, 3347,
	12517, 48741, 48741, 549, 6171, 5386, 12517, 48741, 48741, 69916,
	6070, -149, 48741, 48741, -1000, 48741, 776, 129496, -1000, 3532,
	48741, 378, 377, -1000, -1000, -1000, 3503, -1000, -1000, -1000,
	129496, 48741, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 375,
	-1000, 171, -1000, -1000, -1000, 123263, -1000, 48741, 363, 3314,
	-1000, 359, 358, 424, 6908, 125959, 125792, 125533, 357, -1000,
	-1000, 352, 344, 129496, 2865, 129496, -1000, -1000, 1009, 1009,
	1388, 1388, 1388, 1388, 3483, 452, 494, 568, 478, 478,
	478, 560, 1043, 1043, 478, 478, 478, 1043, 2781, 2483,
	602, 5332, -1000, -1000, 129496, 129496, 341, -1000, -1000, -1000,
	-126, 339, 8171, -1000, 2706, 3310, 129496, -1000, 56605, 2706,
	2706, -1000, -1000, 2293, 115633, 129496, 56605, -1000, 2818, -1000,
	20171, -1000, 25830, -1000, -1000, -1000, -1000, 3480, -1000, 63304,
	-1000, 601, -1000, 42, -1000, 2620, -1000, 852, -1000, -1000,
	77727, 77727, -166, -132, 115633, -1000, -1000, 771, 3580, 795,
	25830, 338, -1000, -1000, -1000, -166, -166, 115633, -166, -1000,
	-1000, -1000, 3188, 129496, 115633, 115633, 1565, 103531, 115633, 2957,
	-1000, 3319, -1000, 1039, 125366, 57158, -1000, 57158, 115633, -1000,
	-1000, -1000, 1874, 1428, 3577, 1069, -1000, 3267, 115633, -1000,
	115633, -1000, -1000, -1000, 115633, 115633, 94769, 115633, -1000, 73221,
	2942, -150, 129496, -40, -1000, 851, -1000, 1383, -1000, 21308,
	115633, 73221, 94769, 115633, 73221, 94769, 2956, 115633, 2127, -1000,
	-1000, 2924, -1000, 2935, -161, 25830, -1000, 3527, 3524, 2954,
	3280, -1000, 115633, 3519, 115633, 94769, 3186, -1000, -1000, -1000,
	-1000, -1000, -1000, 1658, 1168, 1167, 2253, -51, 2252, 2203,
	-56, 2080, 968, -67, 600, -1000, 850, -1000, -1000, 849,
	-1000, 968, -1000, 77727, 59949, 3576, 509, -1000, 2599, -1000,
	99681, 2241, 92, -1000, 3574, 102441, 599, -1000, 2188, -1000,
	769, -1000, 2432, 73221, 2300, 92, 94769, -1000, -1000, 509,
	330, -74, -1000, 2977, 1030, 25830, 94769, 2951, 2461, 837,
	78831, -1000, 1230, 2554, -1000, -75, -1000, 672, 92, 2170,
	-1000, -95, 129496, -1000, 848, -1000, -168, -1000, -1000, 328,
	-1000, 3185, 3182, -1000, 2708, 57158, 593, 591, 115633, 3180,
	-1000, -1000, -173, 2574, 2574, 77727, 59949, 77727, -1000, 969,
	881, -1000, 2415, -1000, -1000, -1000, -1000, -1000, 25830, 1634,
	-1000, 590, 588, -1000, -1000, -1000, -1000, 3207, 12517, 12517,
	48741, 48741, 48741, 12517, 6070, -176, -1000, 12517, 12517, -126,
	-1000, -1000, 128261, -1000, -1000, -1000, 129496, -1000, 20742, 2094,
	-1000, 125107, -1000, 33370, -1000, -1000, 48741, 48741, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 52696, 2779, 586, 69916,
	-1000, -1000, 327, 984, 48741, 50436, 2482, 984, 984, -1000,
	-178, -1000, -1000, -1000, 3480, 42, -1000, -1000, 3572, 25830,
	-1000, 77727, -1000, -1000, 3571, -193, 793, -1000, 3570, -1000,
	-1000, 126, -1000, -1000, -1000, 2641, 3415, -1000, 1913, -1000,
	115633, -1000, 115633, -1000, 25830, 115633, 2743, 1218, -1000, 949,
	2496, 585, 52696, 94769, 686, -1000, 3444, 2710, -181, -1000,
	115633, 48741, 115633, -183, -184, 2308, -1000, -1000, 1216, 48741,
	-1000, -1000, -1000, 69916, 584, 2249, 2249, -190, -191, -1000,
	-1000, -1000, 48741, 1166, 115633, 34500, -1000, 3569, 3237, -1000,
	-1000, -1000, -1000, -1000, -1000, 115633, -1000, 115633, -1000, 48741,
	1163, -1000, -1000, -1000, 3518, 2249, 25830, 2249, -1000, 2249,
	3280, 1068, 115633, 73221, 94769, 1497, 1497, 2852, -1000, -1000,
	-1000, 2429, 2429, 77727, 59949, -1000, -96, 968, -1000, 3414,
	2591, 3568, -1000, -1000, -1000, -1000, 2487, -1000, -1000, 115633,
	2486, 964, -1000, -192, -1000, 846, 845, 79921, 956, 929,
	-1000, -102, 579, -1000, 841, -1000, -1000, -1000, -1000, 509,
	3413, -1000, 3514, 578, 576, 115633, 2251, 575, 25830, 3233,
	837, 78831, -1000, 2982, 1843, -1000, 2313, 115633, 3230, -1000,
	2554, 574, -1000, 963, 573, 570, 3005, 3005, -205, 57158,
	57158, -207, 569, 963, -1000, -208, -1000, -1000, -1000, -1000,
	-1000, -112, -1000, 903, 895, -1000, -1000, 94769, 94769, 48741,
	48741, -1000, 12517, 12517, 12517, -1000, 325, -1000, -1000, 2170,
	3309, -1000, -113, 124940, 124681, 1078, 52696, 69916, -213, -1000,
	-1000, 115633, 129496, -118, -1000, 129496, 567, 565, 434, -1000,
	-1000, -1000, 764, -1000, -1000, -1000, 115633, 3567, -1000, 115633,
	102986, 115633, -1000, -1000, 1570, -1000, -1000, -1000, 115633, 2315,
	-1000, -1000, -1000, 1035, 48741, 5332, 546, 48741, -1000, 3410,
	-1000, 2578, 2778, 2031, 57158, -1000, 3207, -1000, 124514, -1000,
	1025, 1965, -1000, -1000, -1000, 129496, 3280, 57158, -1000, -1000,
	533, 532, 129496, 519, 839, 2776, -1000, -1000, -1000, -1000,
	-1000, 129496, 517, 3379, -1000, -1000, -1000, -1000, 2249, 94769,
	-1000, -1000, -1000, 1144, -1000, -1000, -1000, -1000, 3566, 3565,
	2772, 84323, -1000, -214, -1000, -1000, 1923, 92, 2088, 2640,
	-1000, 2241, 514, -1000, -1000, 2234, 2579, -1000, 102441, 33935,
	33935, 322, 3409, 929, -1000, 3473, -1000, 3175, 3175, 48741,
	3408, 92, -1000, 3486, 57158, -1000, 94769, 57158, 2250, 2045,
	2455, 78831, -1000, 2476, -1000, -1000, -215, 115633, 1843, -1000,
	-1000, 77727, 77727, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1025, -216, -221, -1000, 77727, -1000,
	-1000, 2415, -1000, 115633, -1000, 115633, -1000, -1000, -222, -223,
	-1000, 2097, 48741, 33370, -1000, -1000, 1078, -224, -1000, -123,
	-1000, 3399, 50436, 3558, 3552, 3551, -1000, -166, -1000, -166,
	-1000, 1904, -1000, -1000, -1000, 2950, 2703, 124255, 2425, 115633,
	123881, -1000, 2774, -1000, -1000, 2591, 512, -1000, -1000, -1000,
	-1000, 901, 115633, 2591, 2697, 94769, 1031, -229, 2089, 2089,
	48741, 32805, 2118, 48741, -1000, -1000, 3280, 115633, -1000, -1000,
	115633, 2243, -1000, 2748, 3496, -1000, 956, -1000, 2113, 115633,
	-1000, 3258, -1000, 3179, -1000, -1000, -1000, 2599, 92, -1000,
	-1000, -1000, -237, 129496, 92, -1000, 321, -239, 1030, -244,
	94769, 1966, -1000, 837, -1000, 2461, 986, -1000, -1000, -245,
	-246, 2031, 1025, 2074, -247, -1000, -252, -253, -1000, -1000,
	314, 49871, 49871, 49871, -126, -145, -1000, 115633, 511, -1000,
	-1000, -1000, -1000, -1000, 2897, 967, -1000, 2236, 1864, 304,
	1065, -1000, -1000, 2074, 115633, -1000, -1000, -1000, 966, 509,
	-1000, 48741, 1025, -254, -1000, 1021, -255, -1000, 1019, -260,
	-1000, 2767, -1000, -261, 2249, -263, 233, 1497, 965, 3351,
	-1000, -1000, -1000, 2234, 94769, -266, -1000, -1000, 2272, -1000,
	2591, 964, -1000, -1000, -1000, 1025, 508, 2031, 507, 1481,
	837, -1000, -1000, 1412, 3233, 3072, 963, 963, 2591, 2031,
	957, -1000, 963, -1000, -1000, -1000, 2989, -1000, 53826, 2266,
	1808, 127496, 2989, 2989, -1000, -1000, 115633, 3337, -1000, 2239,
	2238, 1469, -1000, -1000, -1000, -1000, -1000, -1000, 2710, -268,
	3332, 2425, 129496, 2591, -1000, 2089, 2637, -1000, 2089, 2760,
	-1000, 2109, -1000, -1000, -1000, 2713, -1000, 2753, -1000, 1765,
	3468, 2442, 506, -1000, 115633, 1789, 1782, 3550, 2088, 2234,
	2031, 57158, 2591, 57158, 2054, -1000, 115633, -1000, 2045, 1353,
	-1000, -1000, 2074, 2591, 986, 504, -1000, -1000, 1727, 3439,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 835, -1000,
	3116, -1000, 1052, 2071, 2071, 986, -1000, 833, 2236, -1000,
	-1000, 503, -1000, 502, -1000, 2201, 115633, 2186, -1000, -1000,
	-1000, -1000, 115633, -1000, -1000, 3549, -1000, 956, -1000, 2591,
	-269, 2074, -271, -1000, -1000, -1000, -166, 1966, -1000, 1602,
	957, 2074, -1000, 1806, -1000, -1000, 2161, 49306, 48741, -1000,
	3458, -1000, -1000, 2505, -1000, -1000, 48741, 2710, 48741, 48741,
	-1000, 233, 64402, -276, -1000, 2234, 2074, 1025, 957, 2031,
	1481, 66056, 986, 957, -1000, -1000, -1000, 129496, -1000, -1000,
	-1000, 129496, -1000, -277, -284, -1000, -174, 101889, 2217, 2442,
	957, 2031, 986, 2591, 2054, -262, -1000, 986, 2074, 1130,
	-285, -1000, -1000, -1000, -1000, 986, 2591, -1000, 2074, -1000,
	-1000, -1000, -1000, -1000, 476, -1000, -1000, 2074, 957, 48741,
	957, 986, -293, 986, -1000, 2074, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4380, 4379, 4378, 4377, 4376, 4374, 4373, 4372, 4371,
	4368, 4365, 4363, 142, 4361, 4360, 4359, 4357, 4356, 4352,
	4351, 4350, 4349, 4348, 4347, 4346, 4344, 4334, 4331, 4329,
	4327, 4325, 4318, 4316, 4315, 4313, 4311, 4310, 4309, 4304,
	4303, 4299, 4295, 4294, 4283, 4278, 4276, 4271, 4267, 4265,
	4264, 4263, 4259, 4257, 4256, 4255, 4253, 4251, 4249, 4248,
	4247, 4246, 4245, 4238, 4236, 4235, 57, 4231, 4228, 4227,
	4226, 4225, 4223, 4218, 4213, 4212, 4211, 4210, 4207, 4206,
	4205, 4204, 4203, 4201, 4200, 4199, 4198, 65, 4197, 281,
	4193, 4192, 4191, 4189, 4187, 4185, 4182, 4178, 4176, 4172,
	4168, 4167, 277, 4166, 147, 172, 4165, 4164, 3739, 4163,
	4162, 276, 4161, 4160, 4159, 4158, 293, 4157, 4154, 4151,
	4147, 4146, 4145, 4139, 4138, 4137, 4136, 4135, 111, 204,
	4133, 4131, 1639, 4129, 4128, 4126, 4125, 4124, 4122, 4120,
	4119, 4117, 4114, 254, 180, 4113, 275, 4111, 4110, 4109,
	4107, 4106, 4105, 4104, 4103, 4101, 4099, 4097, 4095, 4093,
	4091, 4089, 4088, 4085, 4084, 4082, 4079, 4078, 4074, 4073,
	4072, 4069, 4068, 4066, 4063, 4062, 4061, 4056, 4052, 4050,
	4045, 4044, 4042, 4040, 4036, 259, 174, 195, 4030, 4029,
	274, 273, 4024, 4023, 4022, 4020, 4018, 130, 6, 48,
	4015, 4014, 94, 90, 86, 106, 108, 103, 4013, 120,
	4012, 138, 69, 4011, 11, 2, 220, 251, 12734, 245,
	4010, 4009, 4003, 261, 197, 4002, 246, 4001, 3997, 3995,
	3994, 3993, 70, 55, 191, 188, 179, 182, 3, 3992,
	169, 104, 84, 60, 45, 12, 77, 222, 21, 1,
	219, 3991, 265, 8, 146, 7, 38, 3990, 3989, 3988,
	3987, 3480, 144, 3985, 272, 253, 176, 3984, 3982, 3980,
	725, 3978, 3975, 52, 3974, 187, 87, 129, 16, 131,
	3970, 157, 173, 40, 3969, 171, 62, 3968, 165, 102,
	107, 10331, 8019, 3967, 3964, 113, 66, 145, 2837, 223,
	183, 208, 92, 167, 170, 127, 215, 214, 181, 47,
	3963, 257, 3962, 3386, 83, 194, 164, 5681, 3959, 3958,
	3956, 82, 212, 112, 3953, 3951, 79, 19, 31, 4,
	15, 149, 26, 23, 13, 3950, 24, 124, 51, 36,
	3949, 34, 3948, 3947, 3946, 3945, 3944, 44, 168, 3943,
	3941, 288, 3940, 100, 54, 29, 3938, 1108, 227, 3937,
	237, 136, 3933, 3932, 264, 210, 200, 3930, 73, 243,
	3929, 3928, 3927, 3925, 3924, 133, 9, 134, 3922, 3918,
	153, 3916, 56, 250, 206, 3904, 72, 3901, 3900, 185,
	109, 151, 287, 135, 235, 122, 239, 193, 244, 3899,
	3898, 3897, 196, 3894, 3892, 230, 156, 3890, 3888, 241,
	285, 89, 50, 91, 249, 88, 205, 162, 3887, 211,
	3886, 3884, 289, 192, 224, 22, 14, 97, 132, 3883,
	5, 247, 159, 228, 125, 3881, 7416, 2106, 2729, 3879,
	3876, 160, 121, 80, 128, 161, 267, 110, 3869, 3868,
	1647, 3866, 3865, 3864, 3862, 199, 3860, 3859, 3857, 154,
	163, 207, 3855, 98, 74, 53, 33, 126, 256, 286,
	117, 234, 177, 262, 3854, 3853, 3849, 202, 3845, 76,
	116, 166, 209, 260, 64, 3844, 96, 3843, 155, 1210,
	67, 158, 3841, 232, 3840, 3839, 3838, 3837, 3836, 3835,
	3833, 231, 238, 3832, 3831, 3830, 37, 198, 3829, 266,
	189, 184, 105, 59, 3828, 99, 3615, 3827, 118, 2160,
	63, 269, 201, 268, 3824, 1489, 71, 3823, 0, 14590,
	8236, 12014, 13835, 3822, 81, 3820, 3819, 3818, 226, 150,
	3817, 3816, 3815, 114, 3814, 85, 3813, 3810, 78, 3809,
	27, 17, 20, 28, 35, 248, 152, 3808, 3807, 25,
	141, 139, 3806, 278, 242, 3805, 3804, 3803, 3802, 95,
	3801, 43, 3799, 32, 3797, 3795, 49, 18, 41, 3794,
	3792, 218, 3789, 240, 255, 3788, 175, 3785, 68, 143,
	3784, 3783, 3782, 58, 61, 263, 93, 3778, 279, 3777,
	216, 3776, 3775, 30, 3774, 3773, 252, 119, 115, 3772,
	3771, 137, 42, 217, 186, 229, 3770, 3769, 178, 3768,
	3767, 3766, 270, 3764, 3762, 39, 3761, 10, 3758, 3755,
	213, 3152, 3754, 3745, 46, 3742, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 595, 595,
	613, 613, 23, 23, 44, 44, 24, 45, 17, 596,
	596, 596, 596, 36, 25, 46, 29, 29, 29, 29,
	29, 200, 200, 200, 200, 22, 22, 40, 40, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 591, 591, 237,
	237, 236, 230, 230, 231, 231, 597, 597, 238, 238,
	238, 240, 240, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 490, 490, 490, 523, 523, 522, 522,
	522, 521, 521, 617, 617, 618, 618, 618, 618, 618,
	131, 131, 388, 388, 388, 55, 55, 55, 55, 55,
	586, 586, 202, 202, 202, 204, 204, 203, 203, 203,
	203, 203, 78, 78, 602, 602, 603, 603, 601, 604,
	604, 604, 201, 201, 201, 127, 127, 127, 127, 127,
	127, 128, 128, 129, 129, 205, 205, 205, 207, 207,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 211,
	16, 16, 16, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 107, 107, 525, 525, 526, 526, 196, 196,
	197, 197, 197, 197, 198, 198, 199, 199, 199, 69,
	69, 208, 208, 210, 210, 209, 209, 209, 209, 209,
	57, 57, 57, 57, 57, 57, 57, 58, 58, 58,
	58, 58, 59, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 67, 67, 67, 67, 67, 187,
	187, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 75, 75, 75, 75, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 619, 619, 619,
	619, 619, 619, 619, 619, 619, 619, 620, 620, 621,
	621, 622, 622, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 623,
	623, 623, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 84,
	84, 349, 349, 312, 312, 85, 85, 85, 86, 86,
	87, 87, 71, 71, 584, 584, 365, 365, 481, 481,
	72, 592, 592, 592, 594, 594, 593, 593, 89, 89,
	387, 387, 90, 90, 90, 90, 90, 90, 91, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 99,
	99, 99, 99, 99, 100, 100, 100, 97, 97, 97,
	94, 94, 94, 93, 93, 93, 98, 98, 98, 583,
	301, 301, 96, 96, 96, 95, 95, 95, 366, 366,
	101, 101, 101, 101, 313, 102, 102, 102, 102, 102,
	102, 102, 102, 105, 105, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 483, 483,
	103, 103, 103, 448, 448, 108, 108, 108, 403, 403,
	109, 109, 109, 109, 109, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 130, 130, 130, 130, 130, 130,
	130, 130, 588, 588, 358, 358, 264, 264, 264, 264,
	120, 120, 120, 120, 121, 121, 121, 122, 122, 192,
	192, 137, 137, 137, 137, 137, 136, 136, 136, 136,
	136, 136, 61, 61, 61, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 66, 66, 66, 139, 139,
	614, 614, 141, 138, 138, 138, 140, 140, 140, 140,
	142, 144, 144, 144, 144, 143, 143, 143, 143, 143,
	145, 145, 515, 515, 374, 374, 513, 513, 535, 535,
	514, 514, 319, 319, 319, 319, 319, 320, 320, 320,
	524, 524, 524, 524, 524, 524, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 193, 193, 194,
	195, 195, 195, 195, 195, 170, 170, 170, 186, 186,
	186, 186, 186, 186, 186, 173, 173, 173, 157, 157,
	147, 147, 147, 147, 147, 147, 147, 152, 152, 152,
	152, 152, 152, 152, 152, 148, 148, 159, 159, 159,
	159, 159, 153, 153, 154, 154, 154, 154, 180, 180,
	156, 156, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 149, 149, 149, 149, 161, 161, 161, 161, 410,
	410, 410, 185, 185, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	183, 183, 183, 183, 183, 183, 605, 605, 606, 606,
	177, 177, 177, 177, 177, 177, 462, 462, 171, 171,
	171, 171, 176, 176, 176, 176, 179, 179, 179, 179,
	393, 393, 168, 168, 168, 169, 169, 169, 174, 174,
	175, 350, 350, 172, 172, 178, 178, 178, 178, 150,
	150, 150, 150, 150, 150, 150, 151, 151, 151, 151,
	181, 181, 167, 167, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 624, 624, 163, 163, 163,
	162, 162, 162, 162, 165, 165, 166, 166, 166, 166,
	166, 166, 164, 155, 184, 585, 585, 581, 581, 581,
	581, 581, 581, 581, 581, 582, 582, 582, 582, 587,
	587, 113, 113, 113, 113, 113, 123, 123, 123, 123,
	123, 114, 114, 114, 114, 114, 116, 116, 115, 115,
	115, 115, 79, 79, 79, 79, 79, 15, 15, 15,
	80, 80, 255, 255, 214, 214, 214, 338, 338, 215,
	215, 327, 327, 327, 327, 212, 212, 213, 213, 81,
	81, 625, 625, 625, 598, 598, 598, 599, 599, 599,
	599, 599, 599, 321, 321, 322, 322, 428, 428, 428,
	428, 428, 325, 325, 325, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 328, 328, 239, 239, 239, 336,
	337, 337, 329, 329, 335, 334, 334, 333, 333, 332,
	332, 330, 331, 331, 331, 340, 340, 339, 342, 342,
	341, 427, 544, 544, 546, 546, 546, 546, 546, 546,
	546, 548, 548, 548, 548, 548, 548, 548, 548, 548,
	548, 548, 548, 411, 411, 626, 626, 542, 542, 542,
	543, 538, 538, 539, 539, 539, 539, 539, 323, 323,
	324, 324, 324, 324, 540, 541, 356, 356, 466, 545,
	545, 547, 547, 549, 627, 627, 627, 627, 627, 627,
	628, 628, 628, 426, 426, 425, 425, 347, 347, 550,
	550, 550, 550, 551, 551, 551, 551, 551, 554, 553,
	552, 552, 552, 552, 552, 83, 83, 83, 390, 390,
	389, 389, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 189, 189, 267,
	267, 77, 77, 77, 12, 12, 12, 12, 12, 12,
	12, 282, 282, 13, 13, 13, 600, 600, 600, 82,
	82, 82, 82, 82, 82, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 590, 590, 589, 589, 268,
	268, 630, 630, 88, 88, 88, 88, 88, 88, 88,
	88, 484, 484, 485, 485, 76, 76, 76, 76, 76,
	412, 412, 409, 409, 408, 408, 355, 355, 464, 464,
	464, 465, 272, 272, 273, 273, 232, 232, 232, 31,
	30, 21, 21, 26, 26, 27, 27, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 28, 28, 48, 48,
	48, 48, 49, 49, 49, 49, 52, 52, 53, 53,
	47, 47, 47, 47, 50, 50, 43, 43, 54, 54,
	54, 54, 54, 607, 609, 609, 608, 608, 612, 612,
	612, 612, 612, 612, 610, 610, 611, 611, 615, 615,
	616, 616, 119, 119, 124, 124, 124, 124, 124, 125,
	125, 125, 125, 126, 126, 126, 126, 135, 135, 188,
	188, 188, 188, 188, 188, 188, 56, 56, 56, 56,
	68, 68, 68, 68, 133, 632, 632, 632, 134, 134,
	134, 631, 631, 265, 265, 422, 422, 423, 423, 633,
	633, 424, 424, 424, 424, 424, 258, 257, 259, 259,
	260, 260, 74, 74, 74, 248, 248, 247, 249, 249,
	250, 250, 245, 245, 527, 527, 252, 252, 252, 253,
	253, 241, 241, 242, 242, 243, 243, 244, 244, 256,
	256, 634, 634, 111, 111, 111, 191, 191, 311, 311,
	311, 419, 419, 419, 348, 348, 279, 279, 421, 421,
	421, 421, 386, 386, 386, 190, 190, 363, 363, 376,
	376, 377, 377, 478, 478, 378, 117, 117, 118, 118,
	132, 132, 218, 218, 216, 216, 216, 216, 216, 216,
	216, 216, 223, 223, 224, 224, 225, 225, 226, 227,
	227, 227, 227, 367, 367, 228, 228, 228, 217, 217,
	217, 219, 219, 219, 219, 219, 219, 219, 222, 222,
	222, 222, 229, 229, 229, 221, 221, 561, 561, 561,
	563, 563, 565, 565, 564, 564, 560, 560, 562, 562,
	629, 629, 392, 392, 392, 345, 346, 343, 343, 344,
	344, 353, 353, 351, 352, 352, 354, 354, 463, 463,
	463, 233, 233, 233, 383, 383, 383, 383, 384, 384,
	415, 415, 413, 413, 413, 413, 414, 414, 416, 416,
	416, 417, 417, 418, 418, 380, 380, 381, 381, 382,
	382, 382, 382, 444, 444, 220, 220, 220, 360, 360,
	360, 361, 361, 434, 434, 434, 434, 434, 434, 434,
	435, 435, 433, 433, 433, 433, 467, 467, 467, 467,
	467, 467, 467, 467, 467, 468, 469, 469, 362, 362,
	470, 420, 420, 579, 579, 579, 580, 580, 461, 461,
	471, 471, 471, 471, 471, 471, 459, 459, 460, 460,
	479, 480, 480, 396, 396, 396, 396, 394, 394, 397,
	397, 397, 397, 397, 395, 395, 472, 472, 472, 472,
	385, 385, 473, 473, 473, 473, 474, 475, 475, 476,
	476, 429, 430, 430, 486, 486, 486, 486, 488, 359,
	359, 359, 359, 359, 537, 536, 536, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 503, 503,
	503, 503, 503, 503, 503, 489, 489, 489, 489, 489,
	493, 493, 493, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 494, 494, 499, 499, 500, 500,
	500, 495, 496, 501, 501, 501, 501, 635, 635, 505,
	505, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	491, 491, 491, 498, 498, 498, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 404,
	404, 406, 406, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 436,
	436, 436, 436, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 438, 438, 438, 438, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 555, 555, 555, 555, 555, 555, 555,
	555, 440, 440, 558, 558, 559, 559, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 566, 566, 567, 567,
	569, 569, 570, 570, 571, 572, 572, 572, 573, 574,
	574, 568, 568, 575, 575, 575, 575, 576, 576, 577,
	577, 577, 577, 577, 578, 578, 578, 578, 578, 450,
	450, 451, 451, 457, 457, 457, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 316,
	316, 318, 318, 317, 269, 269, 269, 269, 269, 269,
	372, 372, 370, 370, 370, 373, 373, 371, 371, 369,
	369, 368, 368, 447, 447, 445, 445, 449, 449, 398,
	398, 504, 504, 504, 504, 504, 504, 504, 504, 399,
	399, 399, 407, 400, 400, 401, 401, 401, 401, 401,
	441, 442, 402, 402, 402, 443, 443, 452, 456, 456,
	455, 454, 454, 453, 453, 431, 431, 432, 432, 379,
	379, 636, 636, 375, 375, 477, 477, 477, 477, 315,
	315, 364, 364, 314, 314, 306, 306, 307, 307, 307,
	307, 357, 357, 458, 458, 506, 506, 507, 507, 508,
	508, 509, 509, 510, 511, 512, 446, 446, 290, 289,
	276, 277, 288, 287, 286, 275, 278, 283, 284, 285,
	280, 281, 297, 296, 295, 246, 251, 302, 303, 303,
	305, 305, 304, 304, 292, 293, 294, 482, 274, 308,
	308, 309, 309, 309, 310, 310, 310, 310, 270, 270,
	271, 271, 298, 298, 299, 300, 300, 291, 291, 291,
	261, 261, 261, 262, 262, 263, 263, 520, 520, 517,
	517, 517, 518, 518, 518, 519, 519, 519, 519, 516,
	516, 516, 516, 516, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	529, 529, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	531, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 534, 534,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 4, 2, 3,
	10, 3, 6, 4, 3, 1, 3, 2, 1, 1,
	3, 1, 3, 2, 2, 3, 2, 0, 1, 1,
	0, 2, 0, 7, 10, 6, 8, 6, 6, 6,
	9, 4, 3, 2, 2, 0, 1, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 1,
	3, 1, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	5, 7, 2, 3, 0, 3, 5, 2, 3, 0,
	2, 3, 2, 3, 2, 6, 4, 7, 7, 7,
	9, 10, 5, 2, 6, 4, 7, 7, 7, 10,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 1, 3, 3, 1, 1,
	2, 1, 1, 2, 2, 3, 1, 1, 1, 1,
	1, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 6, 4, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 1, 1, 3, 2, 3, 4, 3, 4,
	3, 5, 3, 4, 4, 3, 4, 5, 3, 4,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	5, 2, 0, 3, 3, 4, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 5, 7, 5, 5,
	3, 3, 0, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 7, 10, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	3, 0, 1, 8, 11, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 2, 4,
	2, 3, 1, 0, 2, 0, 1, 1, 0, 9,
	6, 6, 8, 6, 8, 5, 7, 2, 6, 7,
	4, 4, 5, 2, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 6,
	8, 8, 4, 7, 3, 0, 7, 10, 1, 1,
	1, 1, 2, 2, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 13, 16, 3, 1, 0, 4, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 5, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 6, 4, 5, 4,
	1, 1, 3, 3, 1, 2, 4, 4, 2, 3,
	5, 5, 1, 3, 1, 0, 1, 2, 3, 2,
	4, 2, 3, 0, 2, 0, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 8, 8,
	8, 2, 4, 4, 4, 2, 2, 2, 2, 3,
	1, 3, 1, 2, 6, 7, 1, 0, 1, 0,
	1, 0, 1, 1, 0, 1, 5, 1, 0, 1,
	0, 1, 0, 3, 3, 5, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 1, 3, 1,
	3, 3, 3, 2, 0, 4, 2, 5, 3, 2,
	0, 1, 3, 3, 5, 1, 1, 1, 1, 1,
	1, 3, 2, 4, 4, 0, 4, 4, 3, 4,
	1, 5, 3, 4, 5, 5, 1, 5, 1, 3,
	2, 0, 3, 0, 2, 3, 1, 3, 2, 0,
	3, 5, 6, 4, 6, 4, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 0, 4, 2, 1, 2, 2, 4,
	1, 3, 1, 2, 3, 2, 4, 1, 0, 1,
	0, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 596, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-188, -193, -194, -195, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -189, -190, -191, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 427, 439, 398, 142, 418, 403,
	-140, -141, 457, -56, -68, -134, -133, 73, 129, 412,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -619, 102, -562, -92,
	-95, -126, -623, 161, 220, -114, -115, 366, -121, -122,
	420, -124, -125, 423, 162, -63, -62, 156, -216, -218,
	-138, -139, -192, -147, -148, -149, -150, -151, -152, -153,
	-154, -180, -155, -156, -157, -158, -159, -160, -164, -183,
	-161, -162, -163, -166, -165, -167, -172, -168, -169, -170,
	-171, -173, -174, -176, -177, -178, -179, -181, -182, 462,
	-175, -184, 523, 49, 477, 82, 146, 431, 21, -5,
	-6, -7, -8, -9, -10, -11, -15, -14, -54, -74,
	-76, -79, -80, -81, -88, -82, -83, -561, -93, -94,
	-97, -99, -100, -96, -98, 419, -219, -217, 593, 538,
	-18, -23, -24, -19, -20, -22, -25, -21, -26, -27,
	-28, -39, -44, -45, -41, -42, -40, -43, -46, -47,
	-48, -49, -50, -51, -52, -53, -30, -36, -37, -31,
	-32, -33, -34, -35, -38, -17, -29, 559, 568, -222,
	-220, -221, -229, 449, 546, 497, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, -313, 2,
	-292, -298, -299, -300, -291, -261, -531, -534, 4, -528,
	-532, 168, 230, 330, 21, 23, 22, 24, 25, 26,
	27, 29, 30, 41, 42, 44, 45, 46, 47, 48,
	49, 53, 55, 59, 60, 61, 62, 63, 64, 68,
	73, 74, 79, 80, 81, 82, 83, 84, 85, 91,
	88, 89, 90, 92, 94, 96, 97, 98, 99, 100,
	101, 103, 104, 105, 107, 108, 109, 117, 118, 119,
	120, 121, 123, 128, 129, 132, 127, 131, 133, 135,
	136, 137, 140, 141, 142, 144, 145, 147, 148, 149,
	151, 152, 154, 155, 156, 159, 157, 505, 158, 160,
	161, 162, 163, 166, 174, 175, 176, 181, 183, 184,
	188, 189, 190, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 203, 207, 209, 210, 211, 212, 213, 219,
	220, 222, 223, 224, 225, 226, 231, 232, 233, 237,
	234, 243, 244, 248, 249, 250, 252, 256, 257, 258,
	259, 260, 261, 263, 265, 264, 267, 270, 271, 274,
	278, 279, 283, 284, 280, 285, 286, 288, 289, 292,
	290, 293, 294, 291, 295, 297, 298, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 296, 311, 309,
	313, 314, 315, 328, 324, 325, 319, 320, 316, 321,
	317, 318, 322, 323, 327, 332, 333, 336, 217, 338,
	339, 342, 360, 346, 347, 348, 351, 352, 355, 358,
	359, 361, 362, 363, 364, 365, 366, 367, 368, 369,
	371, 372, 374, 375, 376, 378, 379, 380, 382, 384,
	385, 387, 388, 390, 391, 392, 393, 394, 395, 396,
	398, 400, 399, 401, 403, 405, 406, 407, 412, 418,
	414, 415, 416, 417, 419, 420, 421, 422, 423, 425,
	426, 427, 429, 430, 431, 432, 433, 435, 437, 438,
	442, 443, 459, 460, 479, 439, 440, 441, 444, 445,
	446, 447, 448, 452, 450, 451, 453, 454, 455, 457,
	458, 461, 462, 464, 465, 466, 467, 468, 469, 470,
	473, 475, 476, 477, 496, 478, 480, 484, 485, 486,
	487, 481, 482, 495, 489, 490, 492, 493, 498, 499,
	500, 501, 502, 503, 504, 506, 508, 516, 517, 518,
	520, 523, 524, 525, 526, 514, 528, 529, 532, 533,
	534, 537, 535, 536, 538, 540, 543, 544, 545, 551,
	550, 552, 555, 560, 561, 563, 564, 565, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 124, 125,
	153, 164, 165, 177, 191, 192, 204, 206, 214, 215,
	216, 238, 239, 241, 246, 268, 335, 337, 353, 357,
	373, 377, 381, 383, 397, 434, 471, 483, 488, 509,
	510, 511, 512, 519, 521, 546, 547, 548, 553, 562,
	-313, 2, -292, 344, -285, 2, -261, -261, 384, 28,
	2, 28, 372, 451, 500, 502, 2, -588, -358, 2,
	28, -264, -261, 102, 202, 449, -285, 2, -588, -358,
	25, 2, -261, 2, 358, 22, 27, 66, 77, 98,
	140, 163, 185, 188, -622, 360, 391, 437, 453, 495,
	506, 520, 2, 550, 289, 450, 497, 230, 120, 525,
	444, -600, 442, 443, 358, 389, 429, 205, 539, -265,
	2, 439, -261, 289, 2, 596, 94, 279, 74, 434,
	454, -143, 517, -144, -145, 2, -142, 509, -515, 444,
	311, -261, 596, 596, 596, 28, -274, -261, 497, 230,
	444, 120, 493, 596, 2, 497, 363, 550, 450, 120,
	394, 230, 525, 188, 140, 27, 444, -600, 572, 573,
	289, 126, -586, 2, -581, 4, -532, -528, -307, -306,
	497, 503, 120, -300, -291, 586, -299, 596, 596, 596,
	2, 249, 250, 393, 392, 454, 455, 596, 596, 596,
	596, 442, 2, 163, 22, 27, 66, 93, 98, 126,
	185, 188, 349, -620, 360, 391, 453, 495, 499, 506,
	520, -599, 478, 68, 417, 444, -598, -600, 289, 525,
	140, -408, 120, 279, 200, 533, 502, 500, 531, 132,
	237, 536, 535, 596, 596, -105, 2, 593, 32, 31,
	-104, -108, 142, 457, -211, 497, 242, 2, -261, 596,
	596, 2, 249, 250, 442, 443, 596, 596, 186, -581,
	2, 596, 596, 2, 249, 250, 442, 443, 242, 2,
	68, 446, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 2, -186, 454,
	478, 211, 47, 46, 74, 28, 390, 79, 364, 121,
	148, 526, 203, 230, 231, 257, 93, 94, -410, 44,
	250, 68, 249, 443, -605, 442, -462, 498, 445, 451,
	492, 261, 439, 517, 102, 540, 430, 565, 394, 395,
	490, 407, 280, 157, 187, 4, 120, 311, 456, 509,
	279, 438, 367, 84, -629, 2, 497, -631, 2, 517,
	517, 2, -631, 2, -631, 2, -631, 2, -632, 517,
	562, 596, 596, 596, 596, 596, 596, 596, 596, 596,
	596, 596, 596, 596, 596, 596, 596, 596, 596, -217,
	-219, -218, 596, 596, 596, 596, 596, 596, 596, -186,
	454, 2, 74, 28, -351, -353, 530, 240, 150, 350,
	-216, -218, 2, -561, -513, 2, -436, -535, -438, 584,
	585, 577, 494, 67, -317, 329, 566, -450, 126, 531,
	344, -534, -439, -452, 153, 360, 434, -373, 8, 9,
	5, 6, 7, -270, -440, -446, 522, 167, 334, -310,
	597, 10, 593, -558, -218, -451, 37, 206, 65, -517,
	-309, -271, -489, 241, -308, -291, -555, -556, 4, -528,
	-529, -518, -492, -500, -496, -497, -503, -261, -531, 77,
	111, 112, 110, 115, 114, 282, 281, 116, 113, 456,
	539, 66, 36, 214, 215, 246, 335, 216, 75, -557,
	141, -530, 238, 239, 471, 51, 397, 177, 125, 124,
	337, 56, 54, 547, -501, 122, 509, 510, 511, 512,
	191, 192, 58, 164, 165, 357, 381, 488, 519, 521,
	204, 268, 43, 106, 187, 236, 218, 245, 247, 251,
	269, 272, 312, 326, 331, 354, 356, 428, 463, -635,
	548, 483, 69, 70, -563, 399, -564, -285, -563, 596,
	596, 598, 596, -343, -345, -346, 2, 28, 138, 593,
	2, -467, 2, -468, -472, -218, 262, -471, 593, -469,
	591, -292, 345, -559, 435, -555, -556, -270, -291, -309,
	4, -528, -530, 595, -347, 593, 120, 497, 78, 230,
	163, -403, 593, -261, 28, 344, 513, 598, -344, 388,
	-448, 593, 344, 186, 347, 60, 293, 2, 2, 2,
	2, 2, 214, -261, 497, 119, 2, 260, 2, 2,
	2, 2, 2, 2, 2, -366, 214, 2, -292, 550,
	-366, 214, 2, -366, 214, 2, -409, 2, 87, -275,
	214, 2, -261, -301, 214, 2, -296, -298, -305, 214,
	2, -303, -261, -526, 214, 2, -525, -520, 10, -519,
	5, 4, -528, -532, -529, -531, 77, -436, 2, -132,
	2, 60, -261, 550, 2, 2, 459, 2, 593, -143,
	71, 517, 43, 454, -423, 2, -424, -257, -258, -259,
	-479, -260, 248, 387, 396, 569, 130, 329, 565, -614,
	186, 576, 513, -513, -513, -374, 595, 2, 2, 2,
	2, 2, 2, -472, 214, -292, 2, -289, -516, 4,
	-528, -532, -529, -533, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 126,
	130, 134, 138, 139, 143, 146, 150, 167, 169, 182,
	185, 186, 202, 205, 208, 221, 235, 240, 242, 262,
	266, 273, 281, 282, 329, 334, 340, 344, 345, 349,
	350, 370, 386, 402, 424, 449, 456, 474, 491, 497,
	507, 513, 515, 522, 530, 531, 539, 541, 549, 554,
	556, 557, 558, 559, -534, 2, -472, 214, 2, -295,
	214, -472, -298, 2, -275, 2, -288, -516, 2, -314,
	214, -292, -294, -298, -296, 2, 2, 2, 2, -303,
	2, -525, 214, 2, 28, 28, 550, 388, 242, 513,
	598, -364, -306, -307, -512, 8, -357, -261, 595, -436,
	2, -132, -116, 2, 182, -436, 214, 2, -132, 214,
	2, -436, 214, 2, -132, 214, 2, -602, 2, -525,
	214, -261, 2, 293, 2, 2, 520, 2, 98, 497,
	119, 2, 416, -621, 437, 524, 2, 2, 2, 2,
	2, 2, 2, 497, -280, 2, -261, 182, 481, -303,
	214, -304, 2, 450, -630, 399, -525, 214, 2, 550,
	-296, 214, 2, -296, 230, 244, -275, 214, 2, 502,
	500, 502, 500, 186, 2, 242, 2, 242, 2, -473,
	2, -474, -468, -475, 591, 345, -483, 2, -482, -519,
	546, -105, 593, -105, 593, 454, 593, -525, -292, -292,
	-436, 2, -132, -116, 2, -436, 2, -132, 2, -129,
	-525, -128, 593, 186, -436, 2, -132, -116, 2, -436,
	2, -132, 2, -211, 182, 2, 120, 497, -186, 2,
	182, 541, 2, 8, 2, 221, -525, 445, 395, 174,
	2, 459, 2, 460, 74, -410, 565, 74, 186, 2,
	186, 2, -393, 2, 559, 186, 2, 2, -585, 2,
	344, 186, 2, 186, 2, 186, 2, 186, 2, 186,
	2, -185, 455, 518, 496, 392, 250, 2, -132, 556,
	-116, 250, 249, -436, 556, 2, -606, 182, 443, -436,
	2, 516, 259, 158, 186, -393, 2, 186, 2, 186,
	2, 5, 2, 393, 479, 2, 248, 387, 479, 2,
	-292, 497, 550, 450, 120, 28, 2, 442, 2, 2,
	88, 89, 186, 2, 186, 2, 201, 186, 2, 186,
	497, 565, 2, -385, -472, -422, -423, -422, 513, -351,
	-353, -186, 459, 2, -223, -383, -225, 182, -413, -414,
	-226, 273, 169, 340, -227, -392, 28, 138, -392, -392,
	60, 594, 594, 11, 12, 76, 41, 584, 585, 586,
	587, 180, 588, 589, 582, 583, 581, 574, 575, 579,
	254, 255, 95, 578, 576, 86, 287, 436, 170, 171,
	172, 173, 413, 228, 34, 229, 14, 15, 16, -317,
	33, 349, 272, 566, 218, 463, 577, 17, 18, 19,
	245, 247, 331, 50, 221, -269, 360, -316, 494, 67,
	-436, -436, -436, -436, -436, -436, -436, -436, 356, 593,
	-379, -431, 591, -218, 593, 593, 593, 593, -512, -218,
	-436, -450, 594, -371, 593, -218, -450, -445, 593, 434,
	591, 593, -453, -436, 5, 5, 5, 593, 595, -566,
	560, 182, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 383, -494, 593,
	-493, 593, -493, -493, 551, -491, 593, 568, 561, 593,
	-491, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 551, 598, -563, -347, 593, -375,
	-477, -436, 586, -375, -375, 344, -368, -436, 106, -396,
	251, 312, 187, 269, 428, 236, -433, 597, -433, -461,
	568, -218, -469, -291, -218, -471, 593, -467, -461, -106,
	-512, -89, -102, -111, -132, -146, -190, -191, 586, -292,
	593, 186, 593, 595, -516, 186, -357, -275, -292, -308,
	-309, -314, 2, 137, -368, -581, 525, 444, 28, 450,
	-357, -264, 38, -447, -486, -487, -537, 597, -536, -489,
	-499, -495, -498, 373, 377, -518, 54, 547, -501, 241,
	4, -528, -530, 238, 239, 471, 51, 397, 177, 125,
	124, 337, 56, 509, 510, 511, 512, 191, 192, 58,
	548, 483, 69, 70, -581, 525, 444, 28, 450, -357,
	182, -523, 2, -522, -521, 116, 456, -519, 5, 2,
	153, 2, 2, 2, -261, -238, 598, 64, 421, 153,
	-366, 214, -238, 153, -238, 153, -315, 214, -314, -238,
	153, -238, 598, 153, -238, 598, 153, 595, 598, 153,
	-523, 2, -409, -515, -368, 38, -423, 2, 126, -521,
	-633, 598, 271, -320, 286, 328, 210, 345, 563, 338,
	130, -524, 5, 4, -446, -458, 126, 279, 241, -506,
	-508, 8, -507, 9, -509, 584, 585, -514, -513, 109,
	595, -516, -235, 414, 457, 359, -234, 24, 29, 142,
	232, 315, 544, 159, -333, 233, -330, 363, 153, 475,
	534, -595, -596, 441, 504, 505, 90, 338, 457, 359,
	414, 153, -389, -391, 38, 118, 315, 358, 61, 225,
	291, 292, 477, 553, 153, 457, 359, 414, 359, 457,
	24, 142, -252, -247, -596, 99, 414, 489, 386, -596,
	-237, 475, 534, -595, -596, 441, 414, -236, -335, -330,
	363, 153, 597, 24, 142, 414, 457, 359, -617, -618,
	29, 414, 359, -589, -282, -560, 221, 559, 153, -282,
	-282, -472, 214, -610, 182, 2, -603, -128, 263, 5,
	10, -525, -128, -364, 598, 598, -516, 586, 443, 442,
	153, 153, 153, 153, 182, 329, 2, 2, 2, 2,
	2, 188, -598, -622, 2, 2, -292, 214, -349, 344,
	-584, -365, 497, -292, 182, 329, 43, -295, 214, 2,
	-298, 550, -589, 329, -297, 214, -292, 38, 593, 329,
	2, -409, 2, 230, -560, 329, -473, -311, -292, -468,
	-311, 457, -285, 38, -433, -292, 594, 598, -483, -483,
	-525, -199, 559, 186, 102, 593, 593, -211, -480, 598,
	-479, 221, -526, -129, -525, 417, -525, -584, -275, 2,
	-292, 2, 497, 252, -525, -199, 221, -525, -525, -525,
	-515, 28, 460, 2, -185, 455, 518, 89, 460, 2,
	-292, 497, 120, 230, 80, -261, -587, 182, -582, 429,
	444, 525, -581, -292, 120, -292, 120, -292, 120, -292,
	-292, 2, 2, 2, 2, 2, 85, 2, -132, -436,
	2, 85, 2, 46, -606, 182, 2, 516, 2, 516,
	2, -261, -261, -261, 478, 271, -292, -292, -292, -293,
	-298, 498, 443, -436, 2, -624, 2, 186, 182, 2,
	497, 230, 497, 230, 120, 186, 74, 120, 28, 497,
	440, -238, 598, -265, -223, -383, -515, -384, -383, -224,
	-223, -226, 182, 396, 535, 315, 461, 256, -414, -413,
	28, -436, -418, 176, 314, -436, -416, -438, 584, 585,
	-507, -509, -367, 338, -217, -217, -217, -354, -463, -436,
	386, 230, -488, -486, -486, -290, -516, 509, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, -436, -436, -436, -436, -436, -436,
	-436, -436, -436, -436, 272, 218, 463, 50, 221, -436,
	513, -436, -436, -436, -436, 309, 329, 334, 522, 167,
	532, 138, 338, -636, 491, 40, -443, -218, -372, 593,
	-457, 35, 474, 28, -450, 593, 2, -431, -436, -432,
	-318, -316, -261, 584, 585, 586, 587, 588, 589, 574,
	575, 576, 14, 15, 16, 579, 583, 581, 582, 180,
	95, 578, 287, 436, 86, 170, 171, 172, 173, 254,
	255, 17, 18, 19, 34, 577, -369, -368, -368, 594,
	549, 28, 138, 586, 2, 594, 598, 38, 594, -436,
	-369, -449, -445, -368, -456, -455, 556, -404, -405, 564,
	296, 123, 212, 294, -406, 448, -510, 8, -516, 586,
	-567, 175, 205, 593, 594, 2, 594, 2, 594, -436,
	2, 594, -436, 2, 594, -436, 2, 594, -436, 2,
	594, 2, -436, -436, -436, -436, -436, -436, -436, -368,
	8, -510, -510, 509, 509, -510, -510, -510, -502, 373,
	374, 375, 376, 274, 275, 276, 277, 377, 378, 379,
	380, 301, 302, 303, 304, 297, 298, 299, 300, 305,
	306, 307, 308, 196, 197, 198, 199, 192, 193, 194,
	195, -502, -398, 2, -504, -368, 4, 564, 296, 123,
	212, 294, 448, 5, -398, 2, -399, 2, -436, -368,
	-400, -437, -438, 584, 585, 577, -317, -450, -401, 2,
	-436, -369, -436, 57, 266, 515, -402, -436, 186, -368,
	-368, 2, -368, 2, -564, 38, -368, -360, 598, 186,
	38, 4, -360, -360, 593, 594, 598, -397, 209, 290,
	285, 244, -397, -467, -396, 251, -394, 354, -394, -394,
	-461, -276, 591, 599, -516, -461, -460, -459, 38, -285,
	351, -461, -461, 595, 594, -460, 592, -579, 593, 596,
	596, 596, 596, 596, -292, 593, -368, -516, 595, 480,
	2, 594, 245, 245, 245, 245, 435, 594, 513, -583,
	-301, -305, 498, 2, 559, -104, 346, 594, 598, -359,
	37, 591, 595, -510, 2, 2, -505, 551, 593, 593,
	-405, 593, 186, -583, -305, 498, 2, -358, 598, 513,
	-261, 2, -292, -366, -238, 153, -366, -366, -238, 598,
	153, -275, -296, -301, -303, -305, -261, -525, -526, -238,
	-297, -614, 594, 517, -424, -319, 396, 473, 415, 452,
	493, 8, 9, 8, 9, 598, -516, 598, -615, 93,
	513, 78, 444, -254, 280, 513, -427, 214, 78, -538,
	-278, 93, -539, -261, 72, 531, 386, 185, 151, -615,
	93, 386, -615, 93, 2, 232, 93, 457, 478, 28,
	60, -472, 41, 41, 28, -613, 327, 267, 555, 186,
	565, 497, 230, 444, 513, 513, -472, -391, -486, 118,
	291, 292, 60, -511, -506, 584, 585, -511, 60, -511,
	-511, -511, 559, -295, -472, 444, 513, 513, 513, -250,
	-247, 369, 405, 405, 513, 513, -634, 576, 405, 598,
	41, 41, 28, -613, 327, 267, 186, 513, -314, -276,
	545, 42, 545, 42, 545, 513, 42, 444, 513, 598,
	42, 513, 513, -13, 457, 571, 419, -590, -266, 105,
	321, 284, 322, 97, 318, 96, 317, 103, 319, 104,
	320, 552, 332, 63, 316, 295, 323, -267, -268, 365,
	543, 120, -525, -13, -13, 457, 359, 414, 153, -611,
	221, 28, -600, 221, -480, 221, -480, -306, -261, 595,
	-132, -436, -436, -132, -436, -132, 46, 153, 2, -630,
	260, 593, -323, 329, 186, -357, -481, 242, 598, -365,
	-581, 153, -522, -390, -389, 329, -297, 214, 2, 153,
	-347, 329, 147, 593, 394, 2, 153, -277, 214, -262,
	-261, -409, -241, 501, 153, -387, 541, -419, -132, 593,
	126, 38, -419, -376, -377, -478, -378, -278, 593, -285,
	-433, -105, -482, 594, 594, 594, -198, 348, -197, -261,
	5, -211, 541, -322, -428, -427, -542, -543, -538, 272,
	230, 531, 244, 168, -348, -279, -278, 119, -205, 559,
	-128, -129, 594, -480, 221, 481, -199, -199, -480, -480,
	-292, 182, -525, -199, -199, -199, 2, 2, 2, 2,
	-393, -292, -275, -314, -292, 595, -357, -357, -305, -301,
	-393, -275, -393, -275, -393, -275, -132, -436, 2, 454,
	182, 182, 595, -393, -350, 424, 2, 394, 120, 497,
	363, 230, -292, -314, -292, -314, -275, 120, -275, 121,
	-292, -472, -384, -224, 345, 256, 461, -416, -417, -438,
	434, 435, -417, 434, 435, 8, 9, 8, 9, -228,
	465, 333, -366, 598, -232, 39, 134, 256, -292, 565,
	149, -436, -436, 513, -636, 491, -443, 149, -436, 309,
	334, 522, 167, 532, 138, 338, 186, 593, -437, -437,
	594, -370, -436, -436, 592, 601, 594, 595, 594, -353,
	598, -351, -436, -368, -368, 594, 595, -368, -357, 592,
	592, 598, 594, -454, -455, 143, -436, 513, 513, 513,
	513, 593, 594, 595, -572, 355, 593, 593, -436, 594,
	594, 594, 594, 38, 598, 598, 598, 594, 598, 598,
	598, 594, 594, 594, 598, 594, 565, 565, 594, 594,
	594, 594, 598, 594, 598, 594, 186, 594, 594, -407,
	370, 594, 11, 12, 584, 585, 586, 587, 180, 588,
	589, 582, 583, 581, 574, 575, 576, 86, 287, 436,
	14, 15, 16, -317, 245, 221, -437, -437, -437, -437,
	594, -441, -442, 186, 182, 38, -402, -402, -402, 594,
	186, -368, 594, 594, 593, -565, 289, 329, 594, -430,
	-429, 557, -477, -361, 2, -467, -287, -516, -430, -430,
	-368, -436, 251, 251, -395, 541, 344, -397, -467, -460,
	-512, -435, -434, 184, 39, 134, 324, 325, 217, -460,
	-285, -347, -460, -460, -516, -461, -461, -459, 594, -580,
	-512, 594, -362, -470, -559, -353, 595, -516, -208, -560,
	-187, 5, 334, -187, -187, -187, -357, 513, 513, 221,
	25, 371, -486, 591, 592, 8, -516, 593, -510, -510,
	-510, -357, 186, 186, 221, 186, -522, -522, 2, -238,
	-366, -238, -238, -314, -315, -238, -238, -238, -388, 559,
	-513, -423, 529, 83, 396, 509, -513, -234, 414, -278,
	-278, -292, -302, -261, 200, 406, -522, 329, -427, 214,
	-240, 329, -486, -286, -261, 593, -411, 561, 256, 256,
	541, -278, -286, 256, 214, -278, 214, -286, 2, -286,
	-591, 396, 339, -436, 60, -331, 278, 394, 330, -235,
	414, 457, 359, -132, -132, -132, -132, -132, 593, -614,
	541, 137, -292, -314, -292, -302, -522, -297, 457, 359,
	414, 326, -308, -511, -511, -389, 457, 359, 414, -302,
	-522, -295, -522, 422, 126, -246, 214, -261, -246, 214,
	444, -275, 405, 565, 45, -634, -236, -132, -132, -132,
	-132, -132, 593, -276, -237, 414, 5, 214, -278, 5,
	-278, 214, 5, -261, -278, -302, -522, -618, 24, 142,
	-278, -302, -522, -144, 28, -186, -266, -525, 334, 537,
	-275, -589, -282, 444, 513, 513, -472, -607, -608, 202,
	427, 444, 430, -357, -128, -202, 559, -128, -196, 226,
	586, -586, -261, 550, -261, -321, -324, -322, -278, -214,
	-215, 561, 559, 153, -312, -292, 591, -199, -525, -292,
	-481, -303, -304, 153, -347, 329, -525, 38, 153, 593,
	2, 2, -296, 344, 329, -277, 214, -242, 144, -634,
	-275, -430, -361, -386, -421, 424, 344, -348, 546, -285,
	-386, -363, 598, 186, 576, 595, -348, -476, 586, -105,
	-105, -199, 598, 593, 576, 576, 593, -525, -525, 594,
	598, -240, -292, -277, 230, 230, -284, -262, 594, 598,
	595, 593, -207, 348, -206, 145, 258, 243, 467, 468,
	469, 470, 136, 466, -480, -205, -129, 186, 186, -64,
	559, 497, -199, 597, -261, -393, -393, -393, 454, 454,
	-261, -357, -288, -275, -292, -289, -314, 182, 182, -275,
	535, -417, 345, 283, -463, -233, 567, -292, 597, -436,
	-436, 149, 149, -436, -437, -437, -436, 149, 186, 593,
	-436, -447, 33, 33, 594, 598, -432, -436, -316, 594,
	549, -353, -353, 594, 586, -516, 597, 594, -445, 146,
	-436, 507, 296, 212, 294, -406, 294, -406, -406, -510,
	5, -516, 586, -573, -281, 593, -261, 557, -352, 350,
	594, -488, -486, -436, -436, -436, -436, -436, -510, -491,
	-491, -506, -506, -436, -441, -436, -488, -486, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, -437, -437,
	-437, -437, -437, -437, -437, -437, -437, -437, 138, 329,
	338, -437, -442, -441, -436, -436, -486, 594, 594, 594,
	-368, -104, 593, 289, -380, 205, -436, -480, 598, -380,
	-380, 594, -467, -467, 593, -436, 251, 592, 598, 600,
	576, -347, 595, -459, -460, 592, 594, 598, 594, 598,
	-420, 38, 594, -516, -430, -210, -209, 135, 53, 107,
	133, 334, -357, -357, 444, 347, 5, 8, 591, 592,
	595, -510, 594, 594, 594, -357, -357, 444, -357, -238,
	-238, 119, 315, -436, 513, 513, 60, 221, 153, 329,
	543, -544, -539, 151, -436, 593, 230, 593, 593, 2,
	-230, -231, 142, 457, 24, -616, 2, 541, 153, -238,
	153, -238, 563, -331, 593, 593, 513, 444, -254, 513,
	559, -368, -436, -200, 126, -515, -596, 597, -596, 597,
	444, 513, 513, 444, 513, 513, 329, 153, 559, 166,
	166, 565, -246, 559, -368, 513, -490, 48, 26, 329,
	-296, -238, 153, 513, 513, 525, 457, -525, 334, -13,
	-302, -522, -297, 457, 359, 414, -588, -358, -588, 202,
	-305, -611, -480, -204, 348, -203, 145, 426, 136, 258,
	223, -480, -202, 186, 242, 559, -297, 2, 594, 594,
	598, -545, 38, 342, 342, 593, -292, -85, 559, -479,
	-512, -592, 559, 43, -295, 38, 153, -589, -132, -297,
	-484, -485, 5, 38, -292, 153, 344, 329, -243, 265,
	-634, -520, -560, -353, -386, -375, 330, 91, 594, -430,
	-377, -361, -436, 2, 594, -197, -198, -525, -525, -525,
	-199, -211, -211, -428, -325, 593, -277, -262, 593, -211,
	-279, 2, -526, 598, 593, 576, 576, 576, -205, -480,
	-128, -132, 348, -292, 586, -393, -337, -336, 363, 338,
	-337, 434, 434, 345, 176, 261, -232, -276, -436, -436,
	149, 33, 33, -436, -436, -447, 594, -436, -436, -368,
	592, 5, -436, 594, 594, 8, -436, 594, 595, -574,
	-261, -436, 594, 60, 594, 594, 598, 598, 594, 594,
	594, 594, 594, 594, 594, -442, 186, 138, 338, 593,
	594, 594, -104, -444, 208, 60, -467, -444, -444, -395,
	-357, -467, -434, -276, 591, -516, -512, -470, 593, 595,
	-209, 576, -525, -525, 559, -305, 592, 2, 591, -516,
	594, -305, 119, -278, -278, 497, 434, -246, 386, -427,
	153, -546, 93, -548, 76, 168, 102, 329, 334, 531,
	386, 72, 126, 402, -626, 38, 570, 594, -355, -464,
	-559, 593, -261, -355, -357, 329, 486, 126, 329, 126,
	554, 119, 2, 525, 79, -278, -286, -357, -357, -292,
	-302, -522, 160, 594, 598, 576, 2, 586, 586, -302,
	-522, -297, -302, -522, -295, 153, -246, 361, 166, 160,
	594, -276, 5, 5, 153, -273, 76, -278, 5, -278,
	-296, 119, 444, 513, 513, 344, 344, 347, -607, -608,
	-202, 598, 593, 576, 576, -202, -526, -128, 2, -347,
	-338, 232, -278, -543, -540, -541, 386, -547, -549, 168,
	386, -132, 2, -213, -212, -261, 5, 593, -323, 348,
	592, -594, 348, -593, 117, 136, -522, -390, -132, -297,
	-347, 594, 598, 147, -412, 541, -276, -292, 153, -244,
	264, -634, -520, -241, -415, -413, 139, 593, 344, -132,
	-353, 576, 594, 594, 119, 119, 224, 152, -355, 593,
	593, -357, 119, 594, -206, -207, -525, -128, -525, -205,
	-480, -65, -66, 230, 93, 368, -289, 497, 230, 593,
	593, -232, -436, -436, -436, 594, -353, -516, 586, -568,
	363, 594, -463, -436, -436, -437, 186, 593, -447, 594,
	-569, 558, -436, -381, -382, -436, 432, 108, 206, -569,
	-569, 594, -512, 2, -525, 2, 513, 591, 2, 186,
	221, 38, 405, -427, -286, -290, -283, -261, 168, 214,
	334, 554, -411, 256, 593, -437, -292, 593, 2, 30,
	-627, 130, 235, 594, 598, -465, -272, -261, -436, -465,
	594, 594, 334, 334, 554, -436, -486, 593, -238, -238,
	594, 594, -436, 513, -515, 100, -513, 2, -596, -246,
	-275, -436, 513, 5, -238, -290, -238, -238, -273, 525,
	-302, -522, -297, -612, 498, 451, 526, 445, 189, 433,
	-612, 182, -203, -204, -525, -128, -202, 38, -328, 234,
	2, -545, 256, -283, 256, -625, 559, 594, 598, 576,
	576, -321, -214, -86, -87, 514, -479, 598, 593, 576,
	-347, 38, 5, 593, 593, -261, 344, 593, -276, -256,
	92, -634, -520, -242, -386, 330, -357, 93, -415, -443,
	-199, 593, 593, -326, 81, 94, 127, 213, 190, 231,
	478, 484, 28, -326, 594, -355, -355, 594, 593, -199,
	594, 598, 28, 593, 28, 593, -292, -314, -368, -368,
	594, -353, 60, 598, 594, 594, -437, -447, 594, -570,
	-571, -281, 598, 593, 593, 458, 592, -357, 2, -357,
	-246, 386, -261, -548, -283, 329, 541, -436, -263, 593,
	-436, 38, 235, 131, 219, -426, -628, 101, 487, 222,
	-464, -232, 594, -425, 541, 402, -273, -355, 593, 593,
	593, 576, 186, 593, -490, -238, -296, 513, 2, 2,
	186, -588, 594, -601, 400, -132, -332, -333, 221, 593,
	-327, 344, 119, 315, -212, -513, -513, 594, 38, -87,
	9, -593, -594, -436, 38, -132, -484, -355, -292, -355,
	344, -248, -247, 273, -520, -243, 594, -286, -386, -526,
	-526, -425, 594, 594, -526, -66, -357, -357, 594, 594,
	-575, 394, 435, 207, -368, -354, 594, 598, 38, -382,
	2, 2, 2, 405, 153, 209, 594, -550, 288, -261,
	594, 131, 219, -328, 593, -233, -465, -328, 209, -292,
	-597, 541, 594, -340, -339, -336, -342, -341, -336, -368,
	-513, 100, 361, -368, -273, -357, -357, 344, -604, 187,
	-603, 5, 10, -214, 361, -356, -466, -278, 82, 119,
	-338, -132, 594, -132, 594, 594, -412, 594, -292, -245,
	-527, 405, 407, -634, -244, -430, 594, 594, -426, -425,
	-334, -330, 594, 594, 594, 594, -576, -577, 50, 528,
	109, -436, -576, -576, -571, -573, 168, 559, -551, -554,
	-553, 344, 464, 187, 362, 594, 486, 553, -334, -357,
	559, -347, -436, -425, 594, 598, 546, 594, 598, 546,
	594, 186, 594, -238, -609, 559, -238, -612, -201, 559,
	46, -327, -292, 594, 598, 385, 132, 142, -328, -625,
	-425, 593, -426, 593, -253, -252, -634, -506, -256, 139,
	-199, -199, -328, -426, -215, 559, -199, -578, 151, -577,
	382, 181, 434, 382, 181, -578, -578, -283, 55, -553,
	344, -554, 344, 535, 132, -627, 594, 55, -550, -328,
	-339, 221, -341, 186, 361, 202, 186, 442, -603, 30,
	-255, -254, 593, -466, 435, 435, 2, -332, -327, -426,
	-355, -328, -355, -249, -250, -251, -357, -248, 330, 535,
	-334, -328, -430, 109, 205, 508, 315, 33, 576, -552,
	315, 421, 64, 457, -552, -430, 576, -551, 593, 593,
	347, -357, 348, -357, 2, -214, -328, 594, -334, 594,
	-245, 457, -215, -334, 434, 352, -577, -436, 23, 334,
	126, -436, -627, -368, -368, -238, -198, 593, 594, -327,
	-334, -425, -215, -426, -253, -376, -430, -215, 594, 594,
	-198, -239, 64, 421, -255, -215, -426, -430, -328, -249,
	-430, -430, -329, -330, 513, 594, -430, -328, -334, 593,
	-334, -215, -368, -215, -430, 594, -430, -329,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 545, 546, 548, 549, 550, 552,
	553, 555, 557, 559, 560, 561, 563, 564, 566, 567,
	568, 569, 570, 572, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	641, 643, 0, 1379, 1381, 1383, 1385, 0, 789, 0,
	36, 37, 39, 0, -2, 330, 332, 334, 0, 361,
	363, 364, 366, 368, 369, 370, 372, -2, 0, 478,
	479, 481, 483, -2, 0, 991, 993, 0, 630, 632,
	0, 996, 998, 0, 0, 652, 653, 0, 1490, -2,
	646, 648, 650, 716, 718, 720, 722, 724, 726, 728,
	730, 732, 734, 735, 737, 739, 741, 743, 745, 746,
	748, 750, 752, 753, 755, 756, 758, 760, 762, 764,
	766, 768, 770, 772, 774, 776, 778, 780, 782, -2,
	785, 786, -2, -2, 0, -2, -2, -2, 1397, 41,
	43, 45, 47, 49, 51, 53, 55, 57, 59, 422,
	424, 426, 428, 430, 433, 435, 437, 1548, 485, 487,
	489, 491, 493, 495, 497, 0, -2, 1562, 0, 0,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 107, 108, 109, 110, 111, 112, 113, 114, 75,
	76, 77, 79, 80, 81, 82, 86, 87, 88, 89,
	90, 91, 92, 93, 94, 105, 73, 0, 0, 1521,
	1523, 1525, 1527, -2, 0, 0, 5, 9, 11, 13,
	15, 17, 19, 21, 23, 25, 27, 29, 547, 551,
	554, 556, 558, 562, 565, 571, 573, 575, 530, 531,
	534, 2254, 2272, 2273, 2274, 2277, 2278, 2279, 2280, 2281,
	2282, 2730, 2812, 2813, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609,
	2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619,
	2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629,
	2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	532, 533, 1168, 0, 599, 597, 2239, 600, 2529, 602,
	604, 472, 473, 474, 475, 476, 477, 0, 623, 613,
	1560, 624, 626, 627, 628, 629, 594, 592, 0, 623,
	2308, 621, 1377, 1378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 401, 1226, 1227, 1228, 1362,
	1363, 2575, 1404, 0, 231, 642, -2, -2, -2, 2695,
	-2, 674, -2, 685, 688, 689, 681, 2699, 0, 2578,
	-2, 692, 1380, 1382, 1384, 787, 788, 2258, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 241, -2, -2, -2, -2, 0,
	0, 2623, 2360, 2207, 2274, 2210, 2205, 331, 333, 335,
	336, 0, 0, 0, 0, 0, 0, 362, 365, 367,
	371, -2, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1052, 1044, 1045, 1284, 0,
	0, 0, -2, 480, 482, 535, 536, 0, 1549, 1549,
	543, 544, -2, 0, 0, 0, 0, 301, 289, 992,
	994, 995, 0, 0, 0, 0, 631, 633, 0, 0,
	270, 997, 999, 1000, 0, 0, 0, 0, 0, 303,
	0, 0, 647, 649, 651, 717, 719, 721, 723, 725,
	727, 729, 731, 733, 736, 738, 740, 742, 744, 747,
	749, 751, 754, 757, 759, 761, 763, 765, 767, 769,
	771, 773, 775, 777, 779, 781, 783, 784, 795, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 888, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, -2, 972, 0, 0, 798, 800, 801, 802, 0,
	861, 886, 887, 896, 0, 1208, 1550, 1406, 1387, 1401,
	1406, 1389, 1390, 1391, 1392, 1393, 1398, 1400, 1394, 1395,
	1396, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 423, 425, 427, 429, 431, 434, 436, 438, -2,
	1519, 1520, 486, 488, 490, 492, 494, 496, 498, 634,
	0, 636, 0, 799, -2, 0, 1554, 1554, 1554, 0,
	0, 1520, 1518, 0, 639, 640, 696, 697, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 2081, 1911, 0,
	698, -2, 1944, 1946, 2670, 2502, 2695, 2080, 1948, 1949,
	1950, 1951, 1952, 0, 1954, 1955, 1956, 1957, 1958, 1959,
	0, 1961, 0, 1966, 1967, 1968, 0, 2677, 2184, 2268,
	-2, 0, 0, 2683, 2264, 0, 2047, 1984, -2, -2,
	2291, 2270, 1755, 1756, 1757, 1758, 1759, -2, -2, 2713,
	1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997,
	1998, 0, 2658, 2678, 2679, 2684, 2686, 2680, 2667, 2009,
	2373, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1782, 1791, -2, -2, -2, -2,
	-2, -2, -2, 2671, 2672, 2689, 2692, 2698, 2703, 2704,
	2676, 2685, 2712, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 1783,
	-2, -2, -2, -2, 1537, 2542, 1540, 1168, 1538, 1522,
	1524, 0, 1526, 0, 0, 0, 1531, 1557, 1555, 0,
	1606, 1535, 1536, 1625, 1625, 1649, 0, 1630, 0, 1649,
	1549, 1676, 0, 1636, 2567, 1985, 1986, 0, 2274, 2269,
	-2, -2, 2710, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 601, 603, 0, 0, 0, 622, 1559,
	0, 0, 0, 0, 0, 0, 0, 404, 405, 406,
	407, 408, 2678, 0, 0, 0, 413, 0, 415, 416,
	417, 418, 419, 420, 421, 200, 2678, 503, 528, 0,
	200, 2678, 506, 200, 2678, 509, 0, 512, 1282, 200,
	2678, 515, 2235, 200, 2678, 518, 520, 2243, 200, 2678,
	524, 2250, 2248, 525, 2678, 527, 306, 304, 305, 2287,
	2288, 2295, 2296, 2297, 2298, 2711, 2713, 1373, 1374, 1375,
	1376, 0, 1403, 1283, 644, 645, 0, 669, 0, 673,
	2666, -2, 0, 2587, -2, 677, 1407, 1411, 1412, 1413,
	1414, 1415, 0, 0, 0, 0, 1420, 0, 0, 0,
	0, 670, 671, 684, 690, 693, 0, 790, 791, 792,
	793, 794, 72, 0, 2678, 1676, 74, 0, 2229, 2299,
	2300, 2301, 2302, 2303, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 78, 0, 2678, 83, 0,
	2678, 0, -2, 95, 0, 106, 0, 2232, 115, 0,
	2678, 0, 2204, -2, 0, 212, 290, 291, 292, 0,
	1019, -2, 2678, 1220, 1222, 1222, 0, -2, 0, 0,
	0, 982, 2201, 2206, 983, 2225, 984, 2211, 0, 337,
	338, 339, 340, 341, 0, 342, 2678, 344, 345, 0,
	347, 348, 2678, 350, 351, 0, 353, 0, 253, 254,
	2678, 375, 377, 0, 379, 380, 0, 382, 0, 0,
	0, 386, -2, 402, 0, 399, 389, 390, 392, 393,
	394, 395, 396, 0, 442, 440, 2240, 0, 0, -2,
	2678, 0, 1016, 0, 0, 1262, -2, 2678, 1213, 0,
	1269, 2678, 1265, 0, -2, 0, 1547, 2678, 1424, 1048,
	1049, 1050, 1051, 1688, 469, 0, 1455, 0, 1457, 0,
	1476, 1682, 1625, 0, 0, 1687, 0, -2, 588, 2257,
	-2, 538, 0, 539, 0, -2, 0, 318, 0, 0,
	1001, 1002, 1003, 1004, 1005, 1008, 1009, 1010, 1011, 1662,
	271, 273, 0, 0, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 0, 0, 654, 0, 0, 796, 797,
	0, 0, 807, 808, 809, 0, 318, 2579, 2538, 2394,
	816, 0, 819, 822, -2, 0, 0, 0, 0, 826,
	0, 831, 832, 833, 0, 0, 837, 839, 990, 841,
	0, 0, 843, 0, 847, 0, 850, 0, 852, 0,
	854, -2, -2, -2, 862, 863, -2, 868, -2, 0,
	872, -2, 0, 875, 0, 878, -2, 0, 888, 884,
	885, 0, 0, 0, 0, 904, 905, 0, 914, 0,
	917, 918, 919, 0, 923, 924, 0, 926, 927, 928,
	929, 0, 2650, 2584, 2360, 0, 935, -2, 941, 943,
	0, -2, 0, 959, 0, 963, 0, 0, 971, 0,
	0, 803, 804, 200, 1680, 1386, -2, 1388, 0, -2,
	0, 635, 0, 638, 1579, 1505, 1502, 0, 1576, 1577,
	1506, 0, 0, 0, 1513, 0, 1552, 1553, 0, 0,
	0, 1492, 1493, 0, 0, 0, 0, 2086, 2087, 2088,
	2089, 2102, 2090, 2091, 2101, 2099, 2100, 2092, 2093, 2098,
	2112, 2113, 2103, 2104, 2094, 2107, 2105, 2106, 2108, 2109,
	2110, 2111, 0, 0, 2117, 0, 2095, 2096, 2097, 2125,
	0, 0, 2126, 0, 2128, 0, 2118, 2114, 2115, 2116,
	0, 1890, 1892, 2192, 0, 0, 0, 2124, 2119, 2120,
	1828, 1829, 1830, 1831, 1832, 1865, 1869, 1870, 0, 0,
	1945, 2189, 2188, 1947, 0, 0, 2140, 0, 1960, -2,
	0, 2081, 2135, 0, 0, 1969, 1970, 1971, 0, 0,
	2140, 0, 0, 2183, 1981, 1982, 1820, 0, 0, 2049,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1769, 1768, 0,
	1770, 0, 1771, 1772, 1779, 1792, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 2164, -2,
	0, 0, 0, 0, 1784, 0, 1539, 0, 0, 1610,
	2193, 2197, 2198, 1610, 1610, 0, 0, 2141, 1673, 1673,
	0, 0, 1668, 1668, 1668, 1666, 1649, 0, 1649, 1659,
	0, 1649, 1649, 0, -2, 1630, 0, 0, 1659, 0,
	1643, 576, 578, 580, 582, 583, 584, 586, 1677, 1678,
	0, 0, 0, 0, 2275, 0, 0, 0, 0, 0,
	2260, 0, 358, 0, 0, 0, 2633, 2578, 0, -2,
	606, 625, 1549, 0, 2143, 1703, 1707, 0, 1709, 1710,
	1711, 1712, 1713, 0, 0, 1704, -2, 1780, 1782, 1803,
	2292, 2293, 2294, 1763, 1764, 1765, 1766, 1767, 1775, 1762,
	1762, 1762, 1773, 1802, 1794, 1802, 1798, 1748, 1749, 1750,
	1785, 1786, 1787, 1788, 0, 2633, 2578, 0, -2, 615,
	0, 0, 1487, 216, 218, 219, 220, 221, 222, 403,
	0, 410, 411, 412, 0, 499, 0, 198, 199, 0,
	200, 2678, 504, 0, 507, 0, 200, 2678, 2199, 513,
	0, 516, 0, 0, 522, 0, 0, 0, 0, 0,
	200, 1489, 0, 0, 0, 0, -2, 679, 686, 687,
	0, 1409, 0, 1416, 707, 708, 709, 1418, 1419, 0,
	1421, 682, 710, 711, 712, 713, 714, 715, 0, 2213,
	2214, 2215, 2216, 2219, 2220, 0, 0, 680, 700, 683,
	0, 694, 116, 1359, 0, 0, 159, 0, 1359, 1359,
	0, 0, 0, 0, 185, 0, 1087, 0, 0, 0,
	0, 131, 144, 155, 128, 129, 0, 0, 0, 0,
	0, 0, 84, 1190, 0, 1193, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 103, 143, 0, 0, 1452, 0, 138,
	118, 0, 0, 131, 145, 157, 0, 189, 191, 1084,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 223,
	0, 0, 0, 1214, 0, 0, 0, 1546, 0, 0,
	0, 0, 2678, 1357, 0, 1342, 0, 1662, 2443, -2,
	-2, 271, 1662, 981, 0, 0, 2275, 2209, 0, 0,
	0, 0, 0, 0, 0, 0, 378, 381, 383, 384,
	385, 0, 1261, 0, 391, 432, 1139, 2678, 0, 0,
	459, 454, 0, 456, 0, 0, 0, 1189, 2678, 1187,
	2244, 0, 1211, 0, 1168, 2678, 2242, 0, 0, 0,
	1270, 2284, 1279, 1283, 1442, 0, 471, 0, 1458, 1460,
	0, 0, 1683, 0, 1685, 1625, 1549, 0, 0, 0,
	0, 294, 0, 0, 0, 0, 0, 0, 277, 0,
	1661, 0, 0, 1662, 271, 2553, 318, 318, 1662, 656,
	1662, 658, 0, 0, 810, 811, 0, 318, 318, 318,
	817, 818, 820, 821, -2, -2, -2, -2, 823, 824,
	911, 0, 0, 0, 910, 836, 840, 0, 975, 2562,
	2578, 2633, 988, 911, 2360, 911, 2360, 911, 2360, 851,
	853, 856, 899, 907, 867, 874, 0, 869, 873, 876,
	879, 0, 881, 889, -2, 0, 891, 0, 893, 0,
	895, 911, 912, 915, 922, 925, 930, 931, 932, 933,
	2255, 934, -2, 938, 939, 0, 950, 955, 956, 952,
	0, 0, 0, 0, 0, 0, 966, 967, 0, 0,
	974, 1207, 0, 1399, 1579, 1505, 637, 1496, 1578, 1497,
	1504, 1507, 0, 0, 1509, 0, 1511, 0, 1574, 1575,
	1582, 1583, 0, 1593, 1594, 1586, 0, -2, 0, 0,
	1589, 1590, 1515, 0, 1532, 1533, 1534, 1563, 1566, 1298,
	0, 2812, 1824, 1698, 1825, 1826, 2228, 0, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, -2, -2,
	-2, -2, -2, -2, -2, -2, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, -2, -2, -2,
	1866, 1867, 1868, -2, 2127, 2129, 0, 2192, 0, -2,
	0, -2, -2, -2, -2, 1887, 0, 1889, 1894, 1896,
	1898, 0, 0, 0, 0, 2191, 1908, 2175, 2176, 0,
	0, 2083, 2084, 2085, 1893, 0, 1912, 2190, 2187, 0,
	0, 2121, 0, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 0, 2139, 1562, 1973,
	0, 0, 0, 0, 1980, 1965, 2137, 0, 2136, 0,
	0, 0, 2147, 0, 2182, 2178, 0, 2226, 1819, 1806,
	1807, 1808, 1809, 1810, 1811, 1821, 0, 2223, 2261, 2267,
	2057, 0, 0, 0, 2010, 2011, 2012, 2013, 2014, 0,
	2016, 2017, 0, 2019, 2020, 0, 2022, 2023, 0, 2025,
	2026, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 0, 0, 2029, 0, 2150, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2031, 0, 2033, 2141, 2161,
	0, 0, 1913, 0, 0, 0, 0, 2081, 0, 2036,
	2141, 2169, 0, 0, 0, 0, 0, 2141, 0, 2174,
	0, 2043, 0, 2045, 1541, 0, 0, 1693, 0, 0,
	0, 2196, 1693, 1693, 0, 1605, 0, 0, 1669, 1670,
	1671, 1672, 0, 0, 1673, 0, 1663, 1667, 1664, 1665,
	1659, 1622, 0, 0, 2230, 1659, 1628, 1658, 0, 1168,
	1648, 1659, 1659, 0, -2, 1632, 1649, 0, 0, 577,
	579, 581, 585, 587, 0, 0, 1562, -2, 0, -2,
	320, 1167, 0, 0, 0, 0, 596, 598, 0, 0,
	519, 0, 0, 612, 0, 590, 0, 593, 0, 1694,
	1697, 0, 0, 1708, 1714, 1715, 0, -2, 0, 0,
	1804, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 414, 529, 200, 501, 0, 200, 200, 510, 0,
	0, 200, 521, 200, 2251, 200, 2249, 307, 526, 1488,
	234, 0, 672, 0, 1408, 1417, 0, 704, 0, 706,
	0, 2217, 2221, 2218, 2222, 0, 695, 0, 0, 0,
	0, 1358, 0, 1305, 0, 0, 163, 2678, 0, 202,
	0, 0, 1132, 2236, 0, 1124, 0, 0, 2380, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 1191, 1192, 1194,
	1201, 1203, 0, 1197, 2224, 0, 0, 1198, 0, 1200,
	1202, 1204, 0, 0, 0, 0, 0, 0, 0, 97,
	104, 0, 0, 0, 0, 0, 0, 1451, 1452, 0,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 2203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 1257, 1255, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 0,
	0, 0, -2, 1218, 1219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 309, 2202, 2212, 0,
	1006, 1007, 343, 346, 349, 352, 240, 0, 387, 0,
	0, 1054, 1029, 0, 0, 441, 318, 0, 0, 455,
	459, 2253, 1014, 1185, 1188, 0, 1168, 2678, 1234, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 2678, 2231,
	2283, 2284, 1444, 1452, 0, 1693, 0, 1474, 1461, 0,
	0, 0, 1474, 1478, 1479, 1481, 1482, 0, 0, 1684,
	1690, 537, 589, 1549, 1549, 318, 316, 2505, 314, 311,
	313, 0, 0, 0, 1055, 1057, 1058, 1059, 202, 0,
	2284, 1124, 2432, 2284, 0, 1464, 1466, 0, 265, 0,
	274, 1662, 272, 277, 0, 0, 0, 453, 655, 660,
	805, 0, 318, 813, 814, 815, 858, 901, 909, 954,
	825, 827, 828, 829, 0, 0, 989, 985, 986, 987,
	842, 911, 845, 911, 848, 911, 871, 877, 883, 890,
	0, 0, 0, 903, 920, 0, 937, 0, 0, 0,
	0, 0, 0, 0, 960, 961, 962, 964, 969, 968,
	973, 1681, 1500, 1501, 1503, 0, 1512, 0, 0, 1588,
	-2, -2, 1587, 1591, 1592, -2, -2, -2, -2, 1508,
	0, 1517, 1514, 0, 1573, 1296, 1297, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1909, 0, -2, 1888,
	1891, 1895, 1897, 1899, 0, 0, 0, 0, 0, 0,
	2130, 0, 2132, 1910, 2185, 2188, 2123, 0, 2079, 0,
	0, 1561, 1562, 1562, 0, 1979, 0, 2138, 0, 2145,
	2146, 0, 1972, 0, 2179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 2015,
	2018, 2021, 2024, 0, 0, 0, 0, 2004, 0, 0,
	0, 2008, 1774, 1760, 0, 1802, 1800, 1801, 1795, 1802,
	1799, 1752, 0, 1751, 0, 2028, 0, 2030, 2032, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 1917, 1918, 1938,
	2035, 2167, 2168, 0, 0, 0, 0, 0, 0, 2041,
	0, 2173, 2042, 2044, 1549, 0, 1542, 0, 1607, 1596,
	1692, 0, 2194, 1662, 1609, 1611, 2195, 2233, 1596, 1596,
	0, 2142, 0, 0, 1653, 0, 0, 0, 1655, 1626,
	0, 0, 1620, 0, 1615, 1616, 1617, 1618, 1619, 1627,
	1168, 1657, 1629, 1633, 2261, 0, 1659, 0, 1644, 0,
	1646, 1679, 0, 1638, 1641, 0, 0, 2276, 1693, 0,
	354, 359, 360, 355, 356, 357, 605, 0, 0, 0,
	0, 0, 2144, 0, 1699, 0, 1705, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 217, 1486, 409, 500,
	200, 505, 508, 2200, 200, 514, 517, 523, 230, 0,
	668, -2, 702, 703, 705, 0, 701, 160, 1359, 0,
	0, 1301, 1303, 2247, 1307, 1313, 1316, 0, 165, 2678,
	176, 0, 1103, 0, 2234, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 2678, 200, 2678, 200, 179, 181,
	184, 0, 188, 186, 0, 1091, 0, 0, 1094, 117,
	1359, 0, 0, 120, 124, 132, 133, 136, 0, 0,
	0, 142, 0, 0, 0, 1318, 1322, 1330, 0, 0,
	0, 1195, 1196, 1199, 1205, 85, 0, 0, 0, 1326,
	1328, 1334, 96, 1430, 1431, 98, 2678, 2245, 100, 2678,
	0, 1300, 0, 0, 0, 0, 190, 122, 126, 134,
	135, 137, 0, 1336, 119, 0, 215, 0, 0, 205,
	200, 2678, 0, 207, 0, 208, 209, 224, 0, 0,
	0, 1017, 1018, 1223, 1224, 1225, 1256, 1209, 1210, 0,
	1221, 1215, 0, 0, 0, 0, 0, 1338, 1339, 0,
	0, 0, 1357, 1354, 1662, 236, 0, 1662, 244, 0,
	2208, 0, 374, 0, 0, 0, 0, 1053, 1150, 0,
	1024, 0, 0, 0, 447, 443, 0, 452, 458, 457,
	463, -2, 0, 0, 0, 0, -2, 0, 0, 1272,
	1266, 1267, 0, 0, 0, 0, 2678, 1446, 1452, 0,
	1547, 1562, 470, 1453, 1474, 0, 0, 0, 1463, 1459,
	1456, 1693, 0, 0, 0, 0, 0, 1686, 1689, 540,
	541, 293, 0, 0, 0, 0, 0, 318, 0, 0,
	0, 1060, 1064, 0, 2284, 2284, 0, 2238, 0, 0,
	0, 0, 275, 0, 278, 0, 0, 0, 283, 284,
	285, 286, 287, 288, 277, 267, 1662, 0, 0, 657,
	0, 0, 812, 0, 835, 844, 846, 849, 892, 894,
	911, 921, 944, 945, 1081, 0, 1081, 0, 0, 965,
	1510, 0, 1585, 1516, 1567, 1568, 0, 1298, 0, 1827,
	1872, 0, 0, -2, 0, 0, 1876, 0, 0, 0,
	-2, 0, 0, 0, 2131, 2133, 0, 2187, 2122, 1974,
	0, 0, 0, 1978, 1962, 1963, 0, 2082, 2148, 2177,
	2181, 0, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 0,
	2227, 2262, 2266, 2055, 2056, 2060, 2241, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 1793,
	1797, 0, 0, 2149, 2160, 2162, 1914, 1915, 1919, 1920,
	1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, -2, -2,
	-2, 1932, 1933, 1934, -2, -2, -2, 1939, 0, 0,
	0, 2163, 2165, 2166, 2170, 2171, 0, 2038, 2039, 2040,
	2172, 0, 1549, 1543, 1604, 0, 1691, 1608, 0, 1604,
	1604, 1556, 1651, 0, 0, 1675, 0, 1623, 0, 1624,
	0, 1656, 0, 1631, 1634, 1635, 1645, 0, 1637, 0,
	1640, 0, 1974, -2, 319, 321, 323, 0, 326, 327,
	0, 0, 608, 609, 0, 607, 591, 0, 0, 1701,
	0, 0, 1777, 1781, 1805, 617, 618, 0, 616, 502,
	511, 232, 0, 1660, 0, 0, 0, 0, 0, 0,
	201, 1101, 1131, 0, 0, 0, 1123, 0, 0, 1137,
	167, 168, 0, 0, 0, 0, 177, 0, 0, 174,
	0, 183, 187, 1088, 0, 0, 0, 0, 1306, 0,
	0, 0, 139, 140, 141, 0, 146, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1436,
	1437, 0, 1427, 0, 0, 0, 203, 0, 0, 0,
	1295, 226, 0, 0, 0, 0, 0, 1259, 1260, 1217,
	1319, 1323, 1331, 0, 0, 0, 0, 623, 0, 628,
	1356, 0, 244, 242, 0, 245, 0, 248, 249, 0,
	251, 244, 238, 0, 0, 0, 1168, 388, 1027, 1138,
	0, 1140, 0, 1025, 0, 0, 1139, 439, 0, 446,
	0, 460, 0, 0, 1189, 0, 0, 1212, 1232, 1168,
	0, 1271, 1273, 0, 1281, 0, 0, 0, 1448, 1452,
	0, 1441, 1442, 1581, 1454, 1472, -2, 0, 0, 1562,
	1480, 1477, 1483, 1484, 0, 315, 0, 310, 312, 0,
	296, 0, 0, 1056, 1061, 0, 0, 0, 0, 0,
	1465, 1467, 0, 0, 0, 0, 0, 0, 266, 277,
	1662, 302, 0, 806, 830, 902, 946, 1080, 0, 0,
	948, 0, 0, 1584, 1571, 1572, 1569, 1298, 1874, 1878,
	0, 0, 0, 1880, -2, 0, 1902, -2, -2, 2134,
	2186, 1953, 1562, 1975, 1977, 1964, 2180, 1822, 0, 2062,
	2059, 0, 2046, 0, 1999, 2000, 0, 0, 2003, 2005,
	2006, 2007, 1761, 1754, 1753, 2159, 0, 0, 0, 0,
	2037, 1544, 0, 2051, 0, 0, 1612, 2051, 2051, 1652,
	0, 1654, 1621, 1613, 0, 2262, 1647, 1639, 0, 0,
	324, 0, 328, 329, 0, 0, 1695, 1700, 0, 1706,
	1776, 0, 233, 161, 162, 1310, 1314, 1311, 0, 164,
	0, 1102, 0, 1105, 0, 0, 0, 0, 1112, 1124,
	0, 0, 0, 0, 0, 1125, 0, 1154, 0, 1286,
	1293, 0, -2, 0, 0, 0, 170, 193, 0, 0,
	194, 1360, 172, 0, 0, 200, 200, 0, 0, 1302,
	1304, 1317, 0, 0, 0, 0, 149, 0, 0, 1320,
	1324, 1332, 1327, 1329, 1335, 0, 101, 0, 1438, 0,
	0, 1337, 213, 214, 0, 200, 0, 200, 206, 200,
	1295, 0, 0, 0, 0, 0, 0, 0, 1340, 1341,
	235, 0, 0, 0, 0, 237, 308, 244, 376, 0,
	1075, 0, 1150, 1142, 1143, 1144, 0, 1149, 1151, 0,
	0, 1041, 1026, 0, 1037, 0, 0, 1054, 1029, 0,
	444, 461, 0, 464, 0, 467, 1015, 1186, 1229, 1168,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 1450,
	1452, 0, 1443, 1444, 1474, 1580, 0, 0, 0, 1462,
	1581, 0, 317, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 279, 0, 280, 281, 282, 268,
	269, 659, 661, 0, 0, 667, 1079, 0, 0, 0,
	0, 1570, 1882, -2, -2, 1903, 0, 2263, 2265, 1562,
	0, 2048, 1564, 0, 0, -2, 0, 0, 0, 1545,
	1528, 0, 1603, 1595, 1597, 1599, 2565, 2355, 2677, 1529,
	1530, 1674, 0, 1642, 325, 610, 0, 0, 1702, 0,
	0, 0, 1312, 166, 0, 1106, 1107, 2237, 1109, 0,
	1111, 1113, 1114, 1115, 0, 1118, 2286, 0, 1122, 0,
	1133, 1155, 0, 1164, 0, 1288, 1298, 1292, 0, 1290,
	1166, 0, 169, 171, 195, 192, 1295, 0, 173, 182,
	0, 0, 121, 0, 0, 2349, 152, 150, 148, 99,
	1299, 123, 0, 215, 225, 1294, 227, 210, 200, 0,
	1321, 1325, 1333, 0, 1348, 1349, 1350, 1351, 0, 0,
	0, 0, 246, 0, 247, 250, 0, 0, 1090, 0,
	1028, 1141, 0, 1152, 1153, 1031, 0, 1030, 0, 0,
	0, 0, 0, 445, 448, 0, 451, 0, 0, 0,
	0, 0, 1274, 1272, 0, 1280, 0, 0, 0, 1426,
	0, 0, 1445, 1446, 468, 1468, 0, 0, 1474, 1485,
	295, 0, 0, 1062, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1063, 1166, 0, 0, 1130, 0, 300,
	276, 0, 663, 0, 665, 0, 947, 949, 0, 0,
	1976, 2066, 0, 0, 2001, 2002, -2, 0, 1942, 2050,
	2052, 0, 0, 0, 0, 0, 1614, 611, 1696, 619,
	1308, 0, 1315, 1104, 1108, 0, 0, 0, 1172, 0,
	0, 1126, 0, 1158, 1159, 1075, 0, 1160, 1161, 1162,
	1287, 1573, 1293, 1075, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 204, 228, 1295, 0, 1352, 1353,
	0, 0, 243, 261, 0, 1230, 1029, 1089, 0, 0,
	1039, 0, 1042, 0, 1038, 1035, 1036, 1027, 0, 449,
	450, 465, 0, 466, 0, 1233, 0, 0, 1281, 0,
	0, 1433, 1425, 1452, 1447, 1448, 1693, 1471, 1475, 0,
	0, 1164, 1166, 1086, 0, 662, 0, 0, 957, 958,
	0, 0, 0, 0, 2061, 1565, 1943, 0, 0, 1598,
	1600, 1601, 1602, 1309, 0, 0, 1117, 1177, 0, 0,
	0, 1156, 1157, 1086, 0, 1291, 1289, 1135, 0, 1168,
	175, 0, 1166, 0, 1095, 0, 0, 1098, 0, 0,
	153, 2349, 151, 0, 200, 1345, 200, 0, 264, 0,
	258, 256, 257, 1031, 0, 0, 1146, 1148, 0, 1043,
	1075, 1041, 462, 1231, 1264, 1166, 0, 1164, 0, 1440,
	1452, 1434, 1435, 0, 1450, 0, 318, 318, 1075, 1164,
	1029, 1085, 318, 664, 666, 2058, 2078, 2067, -2, 2636,
	2356, 0, 2078, 2078, 2053, 2054, 0, 0, 1119, 1173,
	1174, 0, 1169, 1170, 1171, 2285, 1120, 1121, 1154, 0,
	0, 1172, 196, 1075, 1092, 0, 0, 1093, 0, 0,
	156, 0, 158, 229, 1343, 0, 1346, 0, 252, 0,
	0, 1023, 0, 1145, 0, 0, 0, 0, 1090, 1031,
	1164, 0, 1075, 0, 1429, 1439, 0, 1449, 1426, 0,
	297, 298, 1086, 1075, 1693, 0, 299, 2063, 0, 0,
	2069, 2070, 2071, 2072, 2073, 2064, 2065, 1110, 0, 1175,
	0, 1176, 0, 0, 0, 1693, 1163, 0, 1177, 180,
	1096, 0, 1099, 0, 154, 0, 0, 0, 259, 260,
	1020, 1022, 0, 1147, 1032, 0, 1034, 1029, 1040, 1075,
	0, 1086, 0, 1422, 1428, 1432, 2246, 1433, 1469, 0,
	1029, 1086, 1129, 0, 2075, 2076, 0, 0, 0, 1178,
	0, 1181, 1182, 0, 1179, 1134, 0, 1154, 0, 0,
	1344, 200, 0, 0, 1033, 1031, 1086, 1166, 1029, 1164,
	1440, 0, 1693, 1029, 2074, 2077, 2068, 1116, 1180, 1183,
	1184, 1165, 1136, 0, 0, 1347, 262, 0, 1078, 1023,
	1029, 1164, 1693, 1075, 1429, 1693, 1127, 1693, 1083, 0,
	0, 1074, 1076, 1077, 1021, 1693, 1075, 1277, 1086, 1423,
	1470, 1128, 1097, 1082, 0, 263, 1275, 1086, 1029, 0,
	1029, 1693, 0, 1693, 1278, 1083, 1276, 1100,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 582, 3, 588, 583, 3,
	593, 594, 586, 584, 598, 585, 595, 587, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 601, 3,
	574, 576, 575, 579, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 591, 3, 592, 589, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 599, 581, 600, 577,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 578, 57917, 580, 57918, 590, 57919, 596,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1464
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1471
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1476
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1491
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1507
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1573
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1599
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1635
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1670
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1676
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1686
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1760
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1792
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1800
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1806
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1810
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1825
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1854
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1868
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1877
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1878
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1882
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1903
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1908
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1915
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1934
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1951
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1991
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2001
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2021
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2027
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2053
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2058
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2079
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2095
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2158
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2187
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2190
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2196
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2256
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2283
		{
			sqlVAL.union.val = nil
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2289
		{
			sqlVAL.union.val = true
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = false
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 197:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = nil
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 203:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2421
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2425
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2463
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2475
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2514
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2589
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2598
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2750
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = nil
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = nil
		}
	case 265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2898
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "alter function")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3026
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3035
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3041
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3046
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3051
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3056
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3061
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3065
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3084
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = nil
		}
	case 319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3168
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3182
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3192
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3198
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3236
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3237
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3291
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3333
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3364
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3373
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3387
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3392
		{
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CREATE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3406
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			return unimplemented(sqllex, "create access method")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3411
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return unimplemented(sqllex, "create cast")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3413
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3415
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3416
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3417
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3419
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3420
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3421
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "create publication")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "create rule")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create server")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3431
		{
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3432
		{
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3436
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3439
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop server")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3466
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3483
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3509
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3518
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3587
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3601
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3622
		{

			sqlVAL.union.val = nil
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "DELETE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3709
		{
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3722
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3724
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3735
		{
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DROP")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3739
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3740
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3753
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3757
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3778
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3793
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3801
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3816
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3878
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3992
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3999
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4001
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4025
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4033
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4052
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4055
		{
			return helpWith(sqllex, "DELETE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4058
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return helpWith(sqllex, "INSERT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4079
		{
			return helpWith(sqllex, "DELETE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4080
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "INSERT")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4092
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 590:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4106
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4114
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4147
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4163
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4237
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4241
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "GRANT")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4278
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4282
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4286
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4327
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "RESET")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4371
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4382
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "USE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4401
		{
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4407
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "USE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4483
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4558
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4580
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4608
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return unimplemented(sqllex, "set from current")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4616
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4625
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4648
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4715
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = tree.Low
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4733
		{
			sqlVAL.union.val = tree.Normal
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4737
		{
			sqlVAL.union.val = tree.High
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4752
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4781
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4785
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4787
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4841
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4846
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4851
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4862
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.str = "client_encoding"
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.str = "timezone"
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4878
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4941
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4959
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4968
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5059
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5063
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5073
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5082
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5089
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5137
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5139
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = true
		}
	case 860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = true
		}
	case 861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5233
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5259
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5276
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5296
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5331
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = false
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5350
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5355
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = true
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = false
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5433
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5440
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5470
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5481
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5486
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5491
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5519
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5563
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5592
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5600
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
		}
	case 957:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5644
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5742
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5748
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5755
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5762
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 976:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5887
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5895
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5938
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5947
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5983
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6008
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6010
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6132
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6140
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6179
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6195
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{

			sqlVAL.union.val = nil
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.str = ""
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = nil
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6263
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6293
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6307
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6322
		{
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6323
		{
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6373
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6379
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6405
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6416
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6419
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6424
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6429
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6445
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6468
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6626
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6638
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6693
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6718
		{

			sqlVAL.union.val = true
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = false
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6730
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6831
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6884
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6934
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6938
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6949
		{
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6950
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6951
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7026
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7110
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7119
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7127
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7131
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7135
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7153
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7155
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7159
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7162
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7165
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7167
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7169
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7180
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7216
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7239
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = true
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7273
		{

			sqlVAL.union.val = true
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7278
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7288
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7302
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7336
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7346
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7418
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = nil
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7456
		{
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7482
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7484
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7486
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7488
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7492
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7530
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7548
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7567
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7584
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7601
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = true
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = false
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = false
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7659
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7665
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7671
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.str = ""
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.str = ""
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7744
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7803
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7816
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7828
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7904
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7935
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7969
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7975
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7987
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7993
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8007
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8013
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8025
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8072
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = true
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = false
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8105
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = tree.Types
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8132
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8160
		{
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8161
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8164
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8165
		{
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8176
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8194
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8203
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8224
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8232
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8253
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8272
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8277
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8278
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8299
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8302
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8315
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8320
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8329
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8330
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8331
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8351
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8352
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8393
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8395
		{
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8399
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8412
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.str = ""
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{

		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8548
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8557
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.str = ""
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.str = ""
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.str = ""
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8603
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8617
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8639
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8664
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8726
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8753
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8757
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8842
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8863
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9007
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9044
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9165
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = true
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = false
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9219
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = nil
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9233
		{
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = true
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = false
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = false
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = true
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9262
		{
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9263
		{
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9267
		{
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9329
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9334
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9393
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9449
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9452
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9453
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9487
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9488
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9519
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9521
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9536
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9558
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9568
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9615
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9655
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9665
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9711
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9741
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9774
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = nil
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = true
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = false
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.str = tree.AstFull
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.str = tree.AstRight
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.str = tree.AstInner
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9894
		{
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.str = tree.AstHash
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.str = ""
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9963
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9986
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9992
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10008
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			sqlVAL.union.val = true
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = false
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.union.val = true
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = false
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10057
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10070
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10078
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10079
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10097
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10099
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10107
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10127
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10176
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10188
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10213
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = types.Geography
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10238
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10246
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10272
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10280
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = nil
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = types.Int2
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = types.Int
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = types.Float4
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = types.Float
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10331
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10339
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = types.Bool
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10353
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = types.Float
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10372
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10378
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10400
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = types.String
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = true
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = false
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = types.Date
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10449
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10457
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10471
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10480
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10488
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10505
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10515
		{
			sqlVAL.union.val = true
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = false
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = false
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = types.Interval
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10529
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10628
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = nil
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10658
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10703
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10747
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10827
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10863
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10867
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10875
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10988
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11076
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11180
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11184
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11192
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11288
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11293
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11319
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11343
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11373
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11381
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11384
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11385
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11400
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11409
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11475
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11582
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11600
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11605
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11614
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11623
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11632
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11641
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11651
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11656
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11661
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11671
		{
			return unimplemented(sqllex, "treat")
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11697
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11707
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.str = ""
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11846
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11943
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11955
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11984
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11987
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11992
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11997
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11999
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12001
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12011
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12158
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12249
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12310
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12360
		{
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12432
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12440
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12529
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12538
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12549
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12558
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12566
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12583
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12668
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12698
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12762
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12784
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12802
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12822
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.str = ""
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
