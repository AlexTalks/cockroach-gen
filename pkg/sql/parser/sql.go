// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:882
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13873

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1611,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 419,
	-2, 0,
	-1, 74,
	245, 248,
	523, 248,
	-2, 0,
	-1, 88,
	234, 1346,
	247, 1346,
	263, 415,
	396, 415,
	407, 1097,
	447, 415,
	460, 1097,
	508, 1097,
	534, 415,
	560, 1097,
	-2, 0,
	-1, 94,
	133, 1611,
	240, 1611,
	545, 1611,
	546, 1611,
	-2, 0,
	-1, 112,
	152, 1582,
	172, 1582,
	185, 1582,
	243, 1582,
	276, 1582,
	347, 1582,
	357, 1582,
	540, 1582,
	-2, 1553,
	-1, 153,
	160, 936,
	262, 936,
	399, 897,
	465, 897,
	507, 897,
	526, 936,
	528, 897,
	-2, 0,
	-1, 157,
	4, 1613,
	21, 1613,
	22, 1613,
	23, 1613,
	24, 1613,
	25, 1613,
	26, 1613,
	27, 1613,
	29, 1613,
	30, 1613,
	36, 1613,
	41, 1613,
	42, 1613,
	44, 1613,
	45, 1613,
	46, 1613,
	47, 1613,
	48, 1613,
	49, 1613,
	50, 1613,
	51, 1613,
	53, 1613,
	54, 1613,
	55, 1613,
	56, 1613,
	58, 1613,
	59, 1613,
	60, 1613,
	61, 1613,
	62, 1613,
	63, 1613,
	64, 1613,
	68, 1613,
	69, 1613,
	70, 1613,
	71, 1613,
	73, 1613,
	74, 1613,
	75, 1613,
	79, 1613,
	80, 1613,
	81, 1613,
	82, 1613,
	83, 1613,
	84, 1613,
	85, 1613,
	88, 1613,
	89, 1613,
	90, 1613,
	91, 1613,
	92, 1613,
	94, 1613,
	96, 1613,
	97, 1613,
	98, 1613,
	99, 1613,
	100, 1613,
	101, 1613,
	103, 1613,
	104, 1613,
	105, 1613,
	107, 1613,
	108, 1613,
	109, 1613,
	117, 1613,
	118, 1613,
	119, 1613,
	120, 1613,
	121, 1613,
	123, 1613,
	124, 1613,
	125, 1613,
	126, 1613,
	128, 1613,
	129, 1613,
	130, 1613,
	132, 1613,
	133, 1613,
	134, 1613,
	136, 1613,
	137, 1613,
	138, 1613,
	141, 1613,
	142, 1613,
	143, 1613,
	145, 1613,
	146, 1613,
	147, 1613,
	149, 1613,
	150, 1613,
	151, 1613,
	153, 1613,
	154, 1613,
	155, 1613,
	156, 1613,
	157, 1613,
	158, 1613,
	159, 1613,
	160, 1613,
	161, 1613,
	162, 1613,
	163, 1613,
	164, 1613,
	165, 1613,
	166, 1613,
	167, 1613,
	168, 1613,
	169, 1613,
	171, 1613,
	177, 1613,
	178, 1613,
	179, 1613,
	180, 1613,
	184, 1613,
	186, 1613,
	187, 1613,
	188, 1613,
	192, 1613,
	193, 1613,
	194, 1613,
	195, 1613,
	196, 1613,
	197, 1613,
	198, 1613,
	199, 1613,
	200, 1613,
	201, 1613,
	202, 1613,
	203, 1613,
	204, 1613,
	205, 1613,
	207, 1613,
	208, 1613,
	210, 1613,
	211, 1613,
	213, 1613,
	214, 1613,
	215, 1613,
	216, 1613,
	217, 1613,
	218, 1613,
	219, 1613,
	220, 1613,
	221, 1613,
	223, 1613,
	224, 1613,
	226, 1613,
	227, 1613,
	228, 1613,
	229, 1613,
	230, 1613,
	234, 1613,
	235, 1613,
	236, 1613,
	237, 1613,
	240, 1613,
	241, 1613,
	242, 1613,
	244, 1613,
	246, 1613,
	247, 1613,
	249, 1613,
	251, 1613,
	252, 1613,
	253, 1613,
	255, 1613,
	259, 1613,
	260, 1613,
	261, 1613,
	262, 1613,
	263, 1613,
	264, 1613,
	266, 1613,
	267, 1613,
	268, 1613,
	270, 1613,
	271, 1613,
	273, 1613,
	274, 1613,
	277, 1613,
	278, 1613,
	279, 1613,
	280, 1613,
	281, 1613,
	282, 1613,
	283, 1613,
	286, 1613,
	287, 1613,
	288, 1613,
	289, 1613,
	291, 1613,
	292, 1613,
	293, 1613,
	294, 1613,
	295, 1613,
	296, 1613,
	297, 1613,
	298, 1613,
	299, 1613,
	300, 1613,
	301, 1613,
	302, 1613,
	303, 1613,
	304, 1613,
	305, 1613,
	306, 1613,
	307, 1613,
	308, 1613,
	309, 1613,
	310, 1613,
	311, 1613,
	312, 1613,
	314, 1613,
	316, 1613,
	317, 1613,
	318, 1613,
	319, 1613,
	320, 1613,
	321, 1613,
	322, 1613,
	323, 1613,
	324, 1613,
	325, 1613,
	326, 1613,
	327, 1613,
	328, 1613,
	329, 1613,
	330, 1613,
	331, 1613,
	333, 1613,
	334, 1613,
	336, 1613,
	338, 1613,
	339, 1613,
	340, 1613,
	342, 1613,
	343, 1613,
	344, 1613,
	345, 1613,
	346, 1613,
	349, 1613,
	352, 1613,
	353, 1613,
	354, 1613,
	355, 1613,
	358, 1613,
	359, 1613,
	360, 1613,
	362, 1613,
	364, 1613,
	365, 1613,
	366, 1613,
	367, 1613,
	368, 1613,
	369, 1613,
	370, 1613,
	371, 1613,
	372, 1613,
	373, 1613,
	374, 1613,
	375, 1613,
	376, 1613,
	378, 1613,
	379, 1613,
	380, 1613,
	381, 1613,
	382, 1613,
	383, 1613,
	384, 1613,
	385, 1613,
	386, 1613,
	387, 1613,
	388, 1613,
	389, 1613,
	390, 1613,
	391, 1613,
	392, 1613,
	394, 1613,
	395, 1613,
	397, 1613,
	398, 1613,
	399, 1613,
	400, 1613,
	401, 1613,
	402, 1613,
	403, 1613,
	404, 1613,
	405, 1613,
	406, 1613,
	407, 1613,
	408, 1613,
	409, 1613,
	411, 1613,
	413, 1613,
	414, 1613,
	415, 1613,
	421, 1613,
	422, 1613,
	424, 1613,
	425, 1613,
	426, 1613,
	427, 1613,
	428, 1613,
	429, 1613,
	430, 1613,
	431, 1613,
	432, 1613,
	433, 1613,
	435, 1613,
	436, 1613,
	437, 1613,
	439, 1613,
	440, 1613,
	441, 1613,
	442, 1613,
	443, 1613,
	444, 1613,
	445, 1613,
	447, 1613,
	448, 1613,
	449, 1613,
	450, 1613,
	451, 1613,
	452, 1613,
	453, 1613,
	454, 1613,
	455, 1613,
	456, 1613,
	457, 1613,
	458, 1613,
	460, 1613,
	461, 1613,
	462, 1613,
	463, 1613,
	464, 1613,
	465, 1613,
	467, 1613,
	468, 1613,
	469, 1613,
	470, 1613,
	471, 1613,
	472, 1613,
	474, 1613,
	475, 1613,
	476, 1613,
	477, 1613,
	478, 1613,
	479, 1613,
	480, 1613,
	481, 1613,
	483, 1613,
	485, 1613,
	486, 1613,
	487, 1613,
	488, 1613,
	489, 1613,
	490, 1613,
	491, 1613,
	492, 1613,
	493, 1613,
	494, 1613,
	495, 1613,
	496, 1613,
	497, 1613,
	498, 1613,
	499, 1613,
	500, 1613,
	501, 1613,
	503, 1613,
	504, 1613,
	506, 1613,
	507, 1613,
	509, 1613,
	510, 1613,
	511, 1613,
	512, 1613,
	513, 1613,
	514, 1613,
	515, 1613,
	516, 1613,
	518, 1613,
	519, 1613,
	520, 1613,
	521, 1613,
	522, 1613,
	524, 1613,
	526, 1613,
	527, 1613,
	528, 1613,
	529, 1613,
	530, 1613,
	531, 1613,
	533, 1613,
	534, 1613,
	535, 1613,
	536, 1613,
	538, 1613,
	539, 1613,
	542, 1613,
	543, 1613,
	544, 1613,
	545, 1613,
	546, 1613,
	547, 1613,
	548, 1613,
	550, 1613,
	553, 1613,
	554, 1613,
	555, 1613,
	556, 1613,
	557, 1613,
	558, 1613,
	560, 1613,
	561, 1613,
	562, 1613,
	563, 1613,
	564, 1613,
	565, 1613,
	566, 1613,
	571, 1613,
	572, 1613,
	573, 1613,
	574, 1613,
	575, 1613,
	576, 1613,
	-2, 0,
	-1, 158,
	1, 1463,
	131, 1463,
	251, 1463,
	335, 1463,
	394, 1463,
	403, 1463,
	580, 1463,
	610, 1463,
	-2, 0,
	-1, 160,
	1, 1463,
	610, 1463,
	-2, 0,
	-1, 161,
	1, 1463,
	610, 1463,
	-2, 0,
	-1, 162,
	1, 1463,
	523, 1463,
	610, 1463,
	-2, 0,
	-1, 191,
	152, 1581,
	172, 1581,
	185, 1581,
	243, 1581,
	276, 1581,
	347, 1581,
	357, 1581,
	540, 1581,
	-2, 1556,
	-1, 238,
	4, 1620,
	5, 1620,
	6, 1620,
	7, 1620,
	8, 1620,
	9, 1620,
	10, 1620,
	21, 1620,
	22, 1620,
	23, 1620,
	24, 1620,
	25, 1620,
	26, 1620,
	27, 1620,
	29, 1620,
	30, 1620,
	36, 1620,
	37, 1620,
	41, 1620,
	42, 1620,
	43, 1620,
	44, 1620,
	45, 1620,
	46, 1620,
	47, 1620,
	48, 1620,
	49, 1620,
	50, 1620,
	51, 1620,
	53, 1620,
	54, 1620,
	55, 1620,
	56, 1620,
	58, 1620,
	59, 1620,
	60, 1620,
	61, 1620,
	62, 1620,
	63, 1620,
	64, 1620,
	65, 1620,
	66, 1620,
	67, 1620,
	68, 1620,
	69, 1620,
	70, 1620,
	71, 1620,
	73, 1620,
	74, 1620,
	75, 1620,
	77, 1620,
	79, 1620,
	80, 1620,
	81, 1620,
	82, 1620,
	83, 1620,
	84, 1620,
	85, 1620,
	88, 1620,
	89, 1620,
	90, 1620,
	91, 1620,
	92, 1620,
	94, 1620,
	96, 1620,
	97, 1620,
	98, 1620,
	99, 1620,
	100, 1620,
	101, 1620,
	103, 1620,
	104, 1620,
	105, 1620,
	106, 1620,
	107, 1620,
	108, 1620,
	109, 1620,
	110, 1620,
	111, 1620,
	112, 1620,
	113, 1620,
	114, 1620,
	115, 1620,
	116, 1620,
	117, 1620,
	118, 1620,
	119, 1620,
	120, 1620,
	121, 1620,
	122, 1620,
	123, 1620,
	124, 1620,
	125, 1620,
	126, 1620,
	127, 1620,
	128, 1620,
	129, 1620,
	130, 1620,
	132, 1620,
	133, 1620,
	134, 1620,
	136, 1620,
	137, 1620,
	138, 1620,
	141, 1620,
	142, 1620,
	143, 1620,
	145, 1620,
	146, 1620,
	147, 1620,
	149, 1620,
	150, 1620,
	151, 1620,
	153, 1620,
	154, 1620,
	155, 1620,
	156, 1620,
	157, 1620,
	158, 1620,
	159, 1620,
	160, 1620,
	161, 1620,
	162, 1620,
	163, 1620,
	164, 1620,
	165, 1620,
	166, 1620,
	167, 1620,
	168, 1620,
	169, 1620,
	170, 1620,
	171, 1620,
	177, 1620,
	178, 1620,
	179, 1620,
	180, 1620,
	184, 1620,
	186, 1620,
	187, 1620,
	188, 1620,
	191, 1620,
	192, 1620,
	193, 1620,
	194, 1620,
	195, 1620,
	196, 1620,
	197, 1620,
	198, 1620,
	199, 1620,
	200, 1620,
	201, 1620,
	202, 1620,
	203, 1620,
	204, 1620,
	205, 1620,
	207, 1620,
	208, 1620,
	210, 1620,
	211, 1620,
	213, 1620,
	214, 1620,
	215, 1620,
	216, 1620,
	217, 1620,
	218, 1620,
	219, 1620,
	220, 1620,
	221, 1620,
	222, 1620,
	223, 1620,
	224, 1620,
	226, 1620,
	227, 1620,
	228, 1620,
	229, 1620,
	230, 1620,
	234, 1620,
	235, 1620,
	236, 1620,
	237, 1620,
	239, 1620,
	240, 1620,
	241, 1620,
	242, 1620,
	244, 1620,
	246, 1620,
	247, 1620,
	248, 1620,
	249, 1620,
	250, 1620,
	251, 1620,
	252, 1620,
	253, 1620,
	254, 1620,
	255, 1620,
	259, 1620,
	260, 1620,
	261, 1620,
	262, 1620,
	263, 1620,
	264, 1620,
	266, 1620,
	267, 1620,
	268, 1620,
	270, 1620,
	271, 1620,
	272, 1620,
	273, 1620,
	274, 1620,
	275, 1620,
	277, 1620,
	278, 1620,
	279, 1620,
	280, 1620,
	281, 1620,
	282, 1620,
	283, 1620,
	284, 1620,
	285, 1620,
	286, 1620,
	287, 1620,
	288, 1620,
	289, 1620,
	291, 1620,
	292, 1620,
	293, 1620,
	294, 1620,
	295, 1620,
	296, 1620,
	297, 1620,
	298, 1620,
	299, 1620,
	300, 1620,
	301, 1620,
	302, 1620,
	303, 1620,
	304, 1620,
	305, 1620,
	306, 1620,
	307, 1620,
	308, 1620,
	309, 1620,
	310, 1620,
	311, 1620,
	312, 1620,
	314, 1620,
	315, 1620,
	316, 1620,
	317, 1620,
	318, 1620,
	319, 1620,
	320, 1620,
	321, 1620,
	322, 1620,
	323, 1620,
	324, 1620,
	325, 1620,
	326, 1620,
	327, 1620,
	328, 1620,
	329, 1620,
	330, 1620,
	331, 1620,
	332, 1620,
	333, 1620,
	334, 1620,
	335, 1620,
	336, 1620,
	337, 1620,
	338, 1620,
	339, 1620,
	340, 1620,
	341, 1620,
	342, 1620,
	343, 1620,
	344, 1620,
	345, 1620,
	346, 1620,
	349, 1620,
	353, 1620,
	354, 1620,
	355, 1620,
	358, 1620,
	359, 1620,
	360, 1620,
	361, 1620,
	362, 1620,
	363, 1620,
	364, 1620,
	365, 1620,
	366, 1620,
	367, 1620,
	368, 1620,
	369, 1620,
	370, 1620,
	371, 1620,
	372, 1620,
	373, 1620,
	374, 1620,
	375, 1620,
	376, 1620,
	378, 1620,
	379, 1620,
	380, 1620,
	381, 1620,
	382, 1620,
	383, 1620,
	384, 1620,
	385, 1620,
	386, 1620,
	387, 1620,
	388, 1620,
	389, 1620,
	390, 1620,
	391, 1620,
	392, 1620,
	394, 1620,
	395, 1620,
	397, 1620,
	398, 1620,
	399, 1620,
	400, 1620,
	401, 1620,
	402, 1620,
	403, 1620,
	404, 1620,
	405, 1620,
	406, 1620,
	407, 1620,
	408, 1620,
	409, 1620,
	411, 1620,
	413, 1620,
	414, 1620,
	415, 1620,
	421, 1620,
	422, 1620,
	424, 1620,
	425, 1620,
	426, 1620,
	427, 1620,
	428, 1620,
	429, 1620,
	430, 1620,
	431, 1620,
	432, 1620,
	433, 1620,
	435, 1620,
	436, 1620,
	437, 1620,
	438, 1620,
	439, 1620,
	440, 1620,
	441, 1620,
	442, 1620,
	443, 1620,
	444, 1620,
	445, 1620,
	447, 1620,
	448, 1620,
	449, 1620,
	450, 1620,
	451, 1620,
	452, 1620,
	453, 1620,
	454, 1620,
	455, 1620,
	456, 1620,
	457, 1620,
	458, 1620,
	460, 1620,
	461, 1620,
	462, 1620,
	463, 1620,
	464, 1620,
	465, 1620,
	466, 1620,
	467, 1620,
	468, 1620,
	469, 1620,
	470, 1620,
	471, 1620,
	472, 1620,
	473, 1620,
	474, 1620,
	475, 1620,
	476, 1620,
	477, 1620,
	478, 1620,
	479, 1620,
	480, 1620,
	481, 1620,
	483, 1620,
	485, 1620,
	486, 1620,
	487, 1620,
	488, 1620,
	489, 1620,
	490, 1620,
	491, 1620,
	492, 1620,
	493, 1620,
	494, 1620,
	495, 1620,
	496, 1620,
	497, 1620,
	498, 1620,
	499, 1620,
	500, 1620,
	501, 1620,
	503, 1620,
	504, 1620,
	505, 1620,
	506, 1620,
	507, 1620,
	509, 1620,
	510, 1620,
	511, 1620,
	512, 1620,
	513, 1620,
	514, 1620,
	515, 1620,
	516, 1620,
	518, 1620,
	519, 1620,
	520, 1620,
	521, 1620,
	522, 1620,
	524, 1620,
	526, 1620,
	527, 1620,
	528, 1620,
	529, 1620,
	530, 1620,
	531, 1620,
	532, 1620,
	533, 1620,
	534, 1620,
	535, 1620,
	536, 1620,
	538, 1620,
	539, 1620,
	541, 1620,
	542, 1620,
	543, 1620,
	544, 1620,
	545, 1620,
	546, 1620,
	547, 1620,
	548, 1620,
	549, 1620,
	550, 1620,
	553, 1620,
	554, 1620,
	555, 1620,
	556, 1620,
	557, 1620,
	558, 1620,
	560, 1620,
	561, 1620,
	562, 1620,
	563, 1620,
	564, 1620,
	565, 1620,
	566, 1620,
	571, 1620,
	572, 1620,
	573, 1620,
	574, 1620,
	575, 1620,
	576, 1620,
	577, 1620,
	590, 1620,
	597, 1620,
	598, 1620,
	599, 1620,
	607, 1620,
	611, 1620,
	-2, 0,
	-1, 757,
	4, 1344,
	21, 1344,
	22, 1344,
	23, 1344,
	24, 1344,
	25, 1344,
	26, 1344,
	27, 1344,
	29, 1344,
	30, 1344,
	36, 1344,
	41, 1344,
	42, 1344,
	44, 1344,
	45, 1344,
	46, 1344,
	47, 1344,
	48, 1344,
	49, 1344,
	50, 1344,
	51, 1344,
	53, 1344,
	54, 1344,
	55, 1344,
	56, 1344,
	58, 1344,
	59, 1344,
	60, 1344,
	61, 1344,
	62, 1344,
	63, 1344,
	64, 1344,
	68, 1344,
	69, 1344,
	70, 1344,
	71, 1344,
	73, 1344,
	74, 1344,
	75, 1344,
	79, 1344,
	80, 1344,
	81, 1344,
	82, 1344,
	83, 1344,
	84, 1344,
	85, 1344,
	88, 1344,
	89, 1344,
	90, 1344,
	91, 1344,
	92, 1344,
	94, 1344,
	96, 1344,
	97, 1344,
	98, 1344,
	99, 1344,
	100, 1344,
	101, 1344,
	103, 1344,
	104, 1344,
	105, 1344,
	107, 1344,
	108, 1344,
	109, 1344,
	117, 1344,
	118, 1344,
	119, 1344,
	120, 1344,
	121, 1344,
	123, 1344,
	124, 1344,
	125, 1344,
	126, 1344,
	128, 1344,
	129, 1344,
	130, 1344,
	132, 1344,
	133, 1344,
	134, 1344,
	136, 1344,
	137, 1344,
	138, 1344,
	141, 1344,
	142, 1344,
	143, 1344,
	145, 1344,
	146, 1344,
	147, 1344,
	149, 1344,
	150, 1344,
	151, 1344,
	153, 1344,
	154, 1344,
	155, 1344,
	156, 1344,
	157, 1344,
	158, 1344,
	159, 1344,
	160, 1344,
	161, 1344,
	162, 1344,
	163, 1344,
	164, 1344,
	165, 1344,
	166, 1344,
	167, 1344,
	168, 1344,
	169, 1344,
	171, 1344,
	177, 1344,
	178, 1344,
	179, 1344,
	180, 1344,
	184, 1344,
	186, 1344,
	187, 1344,
	188, 1344,
	192, 1344,
	193, 1344,
	194, 1344,
	195, 1344,
	196, 1344,
	197, 1344,
	198, 1344,
	199, 1344,
	200, 1344,
	201, 1344,
	202, 1344,
	203, 1344,
	204, 1344,
	205, 1344,
	207, 1344,
	208, 1344,
	210, 1344,
	211, 1344,
	213, 1344,
	214, 1344,
	215, 1344,
	216, 1344,
	217, 1344,
	218, 1344,
	219, 1344,
	220, 1344,
	221, 1344,
	223, 1344,
	224, 1344,
	226, 1344,
	227, 1344,
	228, 1344,
	229, 1344,
	230, 1344,
	234, 1344,
	235, 1344,
	236, 1344,
	237, 1344,
	240, 1344,
	241, 1344,
	242, 1344,
	244, 1344,
	246, 1344,
	247, 1344,
	249, 1344,
	251, 1344,
	252, 1344,
	253, 1344,
	255, 1344,
	259, 1344,
	260, 1344,
	261, 1344,
	262, 1344,
	263, 1344,
	264, 1344,
	266, 1344,
	267, 1344,
	268, 1344,
	270, 1344,
	271, 1344,
	273, 1344,
	274, 1344,
	277, 1344,
	278, 1344,
	279, 1344,
	280, 1344,
	281, 1344,
	282, 1344,
	283, 1344,
	286, 1344,
	287, 1344,
	288, 1344,
	289, 1344,
	291, 1344,
	292, 1344,
	293, 1344,
	294, 1344,
	295, 1344,
	296, 1344,
	297, 1344,
	298, 1344,
	299, 1344,
	300, 1344,
	301, 1344,
	302, 1344,
	303, 1344,
	304, 1344,
	305, 1344,
	306, 1344,
	307, 1344,
	308, 1344,
	309, 1344,
	310, 1344,
	311, 1344,
	312, 1344,
	314, 1344,
	316, 1344,
	317, 1344,
	318, 1344,
	319, 1344,
	320, 1344,
	321, 1344,
	322, 1344,
	323, 1344,
	324, 1344,
	325, 1344,
	326, 1344,
	327, 1344,
	328, 1344,
	329, 1344,
	330, 1344,
	331, 1344,
	333, 1344,
	334, 1344,
	336, 1344,
	338, 1344,
	339, 1344,
	340, 1344,
	342, 1344,
	343, 1344,
	344, 1344,
	345, 1344,
	346, 1344,
	349, 1344,
	353, 1344,
	354, 1344,
	355, 1344,
	358, 1344,
	359, 1344,
	360, 1344,
	362, 1344,
	364, 1344,
	365, 1344,
	366, 1344,
	367, 1344,
	368, 1344,
	369, 1344,
	370, 1344,
	371, 1344,
	372, 1344,
	373, 1344,
	374, 1344,
	375, 1344,
	376, 1344,
	378, 1344,
	379, 1344,
	380, 1344,
	381, 1344,
	382, 1344,
	383, 1344,
	384, 1344,
	385, 1344,
	386, 1344,
	387, 1344,
	388, 1344,
	389, 1344,
	390, 1344,
	391, 1344,
	392, 1344,
	394, 1344,
	395, 1344,
	397, 1344,
	398, 1344,
	399, 1344,
	400, 1344,
	401, 1344,
	402, 1344,
	403, 1344,
	404, 1344,
	405, 1344,
	406, 1344,
	407, 1344,
	408, 1344,
	409, 1344,
	411, 1344,
	413, 1344,
	414, 1344,
	415, 1344,
	421, 1344,
	422, 1344,
	424, 1344,
	425, 1344,
	426, 1344,
	427, 1344,
	428, 1344,
	429, 1344,
	430, 1344,
	431, 1344,
	432, 1344,
	433, 1344,
	435, 1344,
	436, 1344,
	437, 1344,
	439, 1344,
	440, 1344,
	441, 1344,
	442, 1344,
	443, 1344,
	444, 1344,
	445, 1344,
	447, 1344,
	448, 1344,
	449, 1344,
	450, 1344,
	451, 1344,
	452, 1344,
	453, 1344,
	454, 1344,
	455, 1344,
	456, 1344,
	457, 1344,
	458, 1344,
	460, 1344,
	461, 1344,
	462, 1344,
	463, 1344,
	464, 1344,
	465, 1344,
	467, 1344,
	468, 1344,
	469, 1344,
	470, 1344,
	471, 1344,
	472, 1344,
	474, 1344,
	475, 1344,
	476, 1344,
	477, 1344,
	478, 1344,
	479, 1344,
	480, 1344,
	481, 1344,
	483, 1344,
	485, 1344,
	486, 1344,
	487, 1344,
	488, 1344,
	489, 1344,
	490, 1344,
	491, 1344,
	492, 1344,
	493, 1344,
	494, 1344,
	495, 1344,
	496, 1344,
	497, 1344,
	498, 1344,
	499, 1344,
	500, 1344,
	501, 1344,
	503, 1344,
	504, 1344,
	506, 1344,
	507, 1344,
	509, 1344,
	510, 1344,
	511, 1344,
	512, 1344,
	513, 1344,
	514, 1344,
	515, 1344,
	516, 1344,
	518, 1344,
	519, 1344,
	520, 1344,
	521, 1344,
	522, 1344,
	524, 1344,
	526, 1344,
	527, 1344,
	528, 1344,
	529, 1344,
	530, 1344,
	531, 1344,
	533, 1344,
	534, 1344,
	535, 1344,
	536, 1344,
	538, 1344,
	539, 1344,
	542, 1344,
	543, 1344,
	544, 1344,
	545, 1344,
	546, 1344,
	547, 1344,
	548, 1344,
	550, 1344,
	553, 1344,
	554, 1344,
	555, 1344,
	556, 1344,
	557, 1344,
	558, 1344,
	560, 1344,
	561, 1344,
	562, 1344,
	563, 1344,
	564, 1344,
	565, 1344,
	566, 1344,
	571, 1344,
	572, 1344,
	573, 1344,
	574, 1344,
	575, 1344,
	576, 1344,
	-2, 0,
	-1, 776,
	190, 2412,
	523, 2412,
	589, 2412,
	609, 2412,
	-2, 0,
	-1, 777,
	190, 2399,
	523, 2399,
	589, 2399,
	609, 2399,
	-2, 0,
	-1, 779,
	190, 2666,
	523, 2666,
	589, 2666,
	609, 2666,
	-2, 0,
	-1, 782,
	190, 2524,
	523, 2524,
	589, 2524,
	609, 2524,
	-2, 0,
	-1, 783,
	190, 2708,
	523, 2708,
	589, 2708,
	609, 2708,
	-2, 0,
	-1, 791,
	190, 2551,
	523, 2551,
	589, 2551,
	609, 2551,
	-2, 718,
	-1, 826,
	609, 2348,
	612, 2348,
	-2, 1018,
	-1, 827,
	609, 2350,
	612, 2350,
	-2, 1019,
	-1, 828,
	609, 2349,
	612, 2349,
	-2, 1020,
	-1, 829,
	612, 2274,
	-2, 1021,
	-1, 854,
	185, 267,
	-2, 0,
	-1, 878,
	43, 2321,
	-2, 0,
	-1, 879,
	560, 1322,
	-2, 1098,
	-1, 895,
	4, 1754,
	21, 1754,
	22, 1754,
	23, 1754,
	24, 1754,
	25, 1754,
	26, 1754,
	27, 1754,
	29, 1754,
	30, 1754,
	36, 1754,
	41, 1754,
	42, 1754,
	44, 1754,
	45, 1754,
	46, 1754,
	47, 1754,
	48, 1754,
	49, 1754,
	50, 1754,
	51, 1754,
	53, 1754,
	54, 1754,
	55, 1754,
	56, 1754,
	58, 1754,
	59, 1754,
	60, 1754,
	61, 1754,
	62, 1754,
	63, 1754,
	64, 1754,
	68, 1754,
	69, 1754,
	70, 1754,
	71, 1754,
	73, 1754,
	74, 1754,
	75, 1754,
	79, 1754,
	80, 1754,
	81, 1754,
	82, 1754,
	83, 1754,
	84, 1754,
	85, 1754,
	88, 1754,
	89, 1754,
	90, 1754,
	91, 1754,
	92, 1754,
	94, 1754,
	96, 1754,
	97, 1754,
	98, 1754,
	99, 1754,
	100, 1754,
	101, 1754,
	103, 1754,
	104, 1754,
	105, 1754,
	107, 1754,
	108, 1754,
	109, 1754,
	117, 1754,
	118, 1754,
	119, 1754,
	120, 1754,
	121, 1754,
	123, 1754,
	124, 1754,
	125, 1754,
	126, 1754,
	128, 1754,
	129, 1754,
	130, 1754,
	132, 1754,
	133, 1754,
	134, 1754,
	136, 1754,
	137, 1754,
	138, 1754,
	141, 1754,
	142, 1754,
	143, 1754,
	145, 1754,
	146, 1754,
	147, 1754,
	149, 1754,
	150, 1754,
	151, 1754,
	153, 1754,
	154, 1754,
	155, 1754,
	156, 1754,
	157, 1754,
	158, 1754,
	159, 1754,
	160, 1754,
	161, 1754,
	162, 1754,
	163, 1754,
	164, 1754,
	165, 1754,
	166, 1754,
	167, 1754,
	168, 1754,
	169, 1754,
	171, 1754,
	177, 1754,
	178, 1754,
	179, 1754,
	180, 1754,
	184, 1754,
	186, 1754,
	187, 1754,
	188, 1754,
	192, 1754,
	193, 1754,
	194, 1754,
	195, 1754,
	196, 1754,
	197, 1754,
	198, 1754,
	199, 1754,
	200, 1754,
	201, 1754,
	202, 1754,
	203, 1754,
	204, 1754,
	205, 1754,
	207, 1754,
	208, 1754,
	210, 1754,
	211, 1754,
	213, 1754,
	214, 1754,
	215, 1754,
	216, 1754,
	217, 1754,
	218, 1754,
	219, 1754,
	220, 1754,
	221, 1754,
	223, 1754,
	224, 1754,
	226, 1754,
	227, 1754,
	228, 1754,
	229, 1754,
	230, 1754,
	234, 1754,
	235, 1754,
	236, 1754,
	237, 1754,
	240, 1754,
	241, 1754,
	242, 1754,
	244, 1754,
	246, 1754,
	247, 1754,
	249, 1754,
	251, 1754,
	252, 1754,
	253, 1754,
	255, 1754,
	259, 1754,
	260, 1754,
	261, 1754,
	262, 1754,
	263, 1754,
	264, 1754,
	266, 1754,
	267, 1754,
	268, 1754,
	270, 1754,
	271, 1754,
	273, 1754,
	274, 1754,
	277, 1754,
	278, 1754,
	279, 1754,
	280, 1754,
	281, 1754,
	282, 1754,
	283, 1754,
	286, 1754,
	287, 1754,
	288, 1754,
	289, 1754,
	291, 1754,
	292, 1754,
	293, 1754,
	294, 1754,
	295, 1754,
	296, 1754,
	297, 1754,
	298, 1754,
	299, 1754,
	300, 1754,
	301, 1754,
	302, 1754,
	303, 1754,
	304, 1754,
	305, 1754,
	306, 1754,
	307, 1754,
	308, 1754,
	309, 1754,
	310, 1754,
	311, 1754,
	312, 1754,
	314, 1754,
	316, 1754,
	317, 1754,
	318, 1754,
	319, 1754,
	320, 1754,
	321, 1754,
	322, 1754,
	323, 1754,
	324, 1754,
	325, 1754,
	326, 1754,
	327, 1754,
	328, 1754,
	329, 1754,
	330, 1754,
	331, 1754,
	333, 1754,
	334, 1754,
	336, 1754,
	338, 1754,
	339, 1754,
	340, 1754,
	342, 1754,
	343, 1754,
	344, 1754,
	345, 1754,
	346, 1754,
	349, 1754,
	353, 1754,
	354, 1754,
	355, 1754,
	358, 1754,
	359, 1754,
	360, 1754,
	362, 1754,
	364, 1754,
	365, 1754,
	366, 1754,
	367, 1754,
	368, 1754,
	369, 1754,
	370, 1754,
	371, 1754,
	372, 1754,
	373, 1754,
	374, 1754,
	375, 1754,
	376, 1754,
	378, 1754,
	379, 1754,
	380, 1754,
	381, 1754,
	382, 1754,
	383, 1754,
	384, 1754,
	385, 1754,
	386, 1754,
	387, 1754,
	388, 1754,
	389, 1754,
	390, 1754,
	391, 1754,
	392, 1754,
	394, 1754,
	395, 1754,
	397, 1754,
	398, 1754,
	399, 1754,
	400, 1754,
	401, 1754,
	402, 1754,
	403, 1754,
	404, 1754,
	405, 1754,
	406, 1754,
	407, 1754,
	408, 1754,
	409, 1754,
	411, 1754,
	413, 1754,
	414, 1754,
	415, 1754,
	421, 1754,
	422, 1754,
	424, 1754,
	425, 1754,
	426, 1754,
	427, 1754,
	428, 1754,
	429, 1754,
	430, 1754,
	431, 1754,
	432, 1754,
	433, 1754,
	435, 1754,
	436, 1754,
	437, 1754,
	439, 1754,
	440, 1754,
	441, 1754,
	442, 1754,
	443, 1754,
	444, 1754,
	445, 1754,
	447, 1754,
	448, 1754,
	449, 1754,
	450, 1754,
	451, 1754,
	452, 1754,
	453, 1754,
	454, 1754,
	455, 1754,
	456, 1754,
	457, 1754,
	458, 1754,
	460, 1754,
	461, 1754,
	462, 1754,
	463, 1754,
	464, 1754,
	465, 1754,
	467, 1754,
	468, 1754,
	469, 1754,
	470, 1754,
	471, 1754,
	472, 1754,
	474, 1754,
	475, 1754,
	476, 1754,
	477, 1754,
	478, 1754,
	479, 1754,
	480, 1754,
	481, 1754,
	483, 1754,
	485, 1754,
	486, 1754,
	487, 1754,
	488, 1754,
	489, 1754,
	490, 1754,
	491, 1754,
	492, 1754,
	493, 1754,
	494, 1754,
	495, 1754,
	496, 1754,
	497, 1754,
	498, 1754,
	499, 1754,
	500, 1754,
	501, 1754,
	503, 1754,
	504, 1754,
	506, 1754,
	507, 1754,
	509, 1754,
	510, 1754,
	511, 1754,
	512, 1754,
	513, 1754,
	514, 1754,
	515, 1754,
	516, 1754,
	518, 1754,
	519, 1754,
	520, 1754,
	521, 1754,
	522, 1754,
	524, 1754,
	526, 1754,
	527, 1754,
	528, 1754,
	529, 1754,
	530, 1754,
	531, 1754,
	533, 1754,
	534, 1754,
	535, 1754,
	536, 1754,
	538, 1754,
	539, 1754,
	542, 1754,
	543, 1754,
	544, 1754,
	545, 1754,
	546, 1754,
	547, 1754,
	548, 1754,
	550, 1754,
	553, 1754,
	554, 1754,
	555, 1754,
	556, 1754,
	557, 1754,
	558, 1754,
	560, 1754,
	561, 1754,
	562, 1754,
	563, 1754,
	564, 1754,
	565, 1754,
	566, 1754,
	571, 1754,
	572, 1754,
	573, 1754,
	574, 1754,
	575, 1754,
	576, 1754,
	-2, 0,
	-1, 905,
	263, 419,
	-2, 0,
	-1, 982,
	399, 898,
	465, 898,
	507, 898,
	528, 898,
	-2, 0,
	-1, 983,
	399, 897,
	465, 897,
	507, 897,
	528, 897,
	-2, 829,
	-1, 987,
	1, 950,
	606, 950,
	608, 950,
	610, 950,
	-2, 0,
	-1, 989,
	1, 872,
	606, 872,
	608, 872,
	610, 872,
	-2, 0,
	-1, 990,
	1, 876,
	606, 876,
	608, 876,
	610, 876,
	-2, 0,
	-1, 991,
	1, 1017,
	185, 1017,
	606, 1017,
	608, 1017,
	610, 1017,
	-2, 0,
	-1, 999,
	1, 903,
	606, 903,
	608, 903,
	610, 903,
	-2, 0,
	-1, 1006,
	1, 950,
	606, 950,
	608, 950,
	610, 950,
	-2, 0,
	-1, 1007,
	1, 952,
	606, 952,
	608, 952,
	610, 952,
	-2, 0,
	-1, 1008,
	1, 955,
	606, 955,
	608, 955,
	610, 955,
	-2, 0,
	-1, 1014,
	1, 981,
	606, 981,
	608, 981,
	610, 981,
	-2, 0,
	-1, 1015,
	1, 983,
	606, 983,
	608, 983,
	610, 983,
	-2, 0,
	-1, 1020,
	1, 1011,
	606, 1011,
	608, 1011,
	610, 1011,
	-2, 0,
	-1, 1072,
	172, 1624,
	185, 1624,
	276, 1624,
	347, 1624,
	-2, 1560,
	-1, 1087,
	172, 1623,
	185, 1623,
	276, 1623,
	347, 1623,
	-2, 1557,
	-1, 1114,
	609, 2347,
	-2, 726,
	-1, 1143,
	5, 2339,
	607, 2337,
	-2, 2328,
	-1, 1151,
	5, 2360,
	607, 2357,
	-2, 2348,
	-1, 1152,
	5, 2361,
	607, 2358,
	-2, 2349,
	-1, 1160,
	609, 2345,
	-2, 2327,
	-1, 1161,
	607, 2793,
	-2, 2346,
	-1, 1184,
	607, 2792,
	-2, 2362,
	-1, 1185,
	5, 1829,
	-2, 2763,
	-1, 1186,
	5, 1830,
	-2, 2764,
	-1, 1187,
	5, 1831,
	-2, 2778,
	-1, 1188,
	5, 1832,
	-2, 2742,
	-1, 1189,
	5, 1833,
	-2, 2776,
	-1, 1190,
	5, 1841,
	-2, 2755,
	-1, 1191,
	5, 1828,
	-2, 2751,
	-1, 1192,
	5, 1828,
	-2, 2750,
	-1, 1193,
	5, 1828,
	-2, 2769,
	-1, 1194,
	5, 1839,
	-2, 2744,
	-1, 1195,
	5, 1844,
	-2, 2743,
	-1, 1196,
	5, 1846,
	-2, 2788,
	-1, 1199,
	5, 1868,
	-2, 2781,
	-1, 1200,
	5, 1860,
	-2, 2782,
	-1, 1201,
	5, 1868,
	-2, 2783,
	-1, 1202,
	5, 1864,
	-2, 2784,
	-1, 1203,
	5, 1814,
	-2, 2756,
	-1, 1204,
	5, 1815,
	-2, 2757,
	-1, 1205,
	5, 1816,
	-2, 2745,
	-1, 1233,
	5, 1851,
	-2, 2789,
	-1, 1234,
	5, 1852,
	-2, 2779,
	-1, 1235,
	5, 1853,
	561, 1853,
	-2, 2746,
	-1, 1236,
	5, 1854,
	561, 1854,
	-2, 2747,
	-1, 1273,
	607, 2357,
	-2, 2348,
	-1, 1274,
	607, 2358,
	-2, 2349,
	-1, 1372,
	190, 2708,
	523, 2708,
	589, 2708,
	609, 2708,
	-2, 0,
	-1, 1377,
	1, 702,
	610, 702,
	-2, 1471,
	-1, 1507,
	366, 2322,
	424, 2322,
	467, 2322,
	599, 2322,
	-2, 2312,
	-1, 1513,
	190, 129,
	270, 129,
	333, 129,
	566, 129,
	-2, 2704,
	-1, 1514,
	190, 130,
	270, 130,
	333, 130,
	566, 130,
	-2, 2457,
	-1, 1515,
	190, 131,
	270, 131,
	333, 131,
	566, 131,
	-2, 2628,
	-1, 1521,
	611, 2322,
	-2, 2324,
	-1, 1529,
	1, 1319,
	429, 1276,
	467, 1276,
	583, 1276,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1609,
	-1, 1535,
	206, 1416,
	225, 1416,
	437, 1416,
	-2, 0,
	-1, 1591,
	407, 1097,
	560, 1097,
	-2, 414,
	-1, 1608,
	43, 2320,
	-2, 1063,
	-1, 1615,
	1, 1319,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1609,
	-1, 1623,
	4, 1344,
	21, 1344,
	22, 1344,
	23, 1344,
	24, 1344,
	25, 1344,
	26, 1344,
	27, 1344,
	29, 1344,
	30, 1344,
	36, 1344,
	41, 1344,
	42, 1344,
	44, 1344,
	45, 1344,
	46, 1344,
	47, 1344,
	48, 1344,
	49, 1344,
	50, 1344,
	51, 1344,
	53, 1344,
	54, 1344,
	55, 1344,
	56, 1344,
	58, 1344,
	59, 1344,
	60, 1344,
	61, 1344,
	62, 1344,
	63, 1344,
	64, 1344,
	68, 1344,
	69, 1344,
	70, 1344,
	71, 1344,
	73, 1344,
	74, 1344,
	75, 1344,
	79, 1344,
	80, 1344,
	81, 1344,
	82, 1344,
	83, 1344,
	84, 1344,
	85, 1344,
	88, 1344,
	89, 1344,
	90, 1344,
	91, 1344,
	92, 1344,
	94, 1344,
	96, 1344,
	97, 1344,
	98, 1344,
	99, 1344,
	100, 1344,
	101, 1344,
	103, 1344,
	104, 1344,
	105, 1344,
	107, 1344,
	108, 1344,
	109, 1344,
	117, 1344,
	118, 1344,
	119, 1344,
	120, 1344,
	121, 1344,
	123, 1344,
	124, 1344,
	125, 1344,
	126, 1344,
	128, 1344,
	129, 1344,
	130, 1344,
	132, 1344,
	133, 1344,
	134, 1344,
	136, 1344,
	137, 1344,
	138, 1344,
	141, 1344,
	142, 1344,
	143, 1344,
	145, 1344,
	146, 1344,
	147, 1344,
	149, 1344,
	150, 1344,
	151, 1344,
	153, 1344,
	154, 1344,
	155, 1344,
	156, 1344,
	157, 1344,
	158, 1344,
	159, 1344,
	160, 1344,
	161, 1344,
	162, 1344,
	163, 1344,
	164, 1344,
	165, 1344,
	166, 1344,
	167, 1344,
	168, 1344,
	169, 1344,
	177, 1344,
	178, 1344,
	179, 1344,
	180, 1344,
	184, 1344,
	186, 1344,
	187, 1344,
	188, 1344,
	192, 1344,
	193, 1344,
	194, 1344,
	195, 1344,
	196, 1344,
	197, 1344,
	198, 1344,
	199, 1344,
	200, 1344,
	201, 1344,
	202, 1344,
	203, 1344,
	204, 1344,
	205, 1344,
	207, 1344,
	208, 1344,
	210, 1344,
	211, 1344,
	213, 1344,
	214, 1344,
	215, 1344,
	216, 1344,
	217, 1344,
	218, 1344,
	219, 1344,
	220, 1344,
	221, 1344,
	223, 1344,
	224, 1344,
	226, 1344,
	227, 1344,
	228, 1344,
	229, 1344,
	230, 1344,
	235, 1344,
	236, 1344,
	237, 1344,
	240, 1344,
	241, 1344,
	242, 1344,
	244, 1344,
	246, 1344,
	247, 1344,
	249, 1344,
	251, 1344,
	252, 1344,
	253, 1344,
	255, 1344,
	259, 1344,
	260, 1344,
	261, 1344,
	262, 1344,
	263, 1344,
	264, 1344,
	266, 1344,
	267, 1344,
	268, 1344,
	270, 1344,
	271, 1344,
	273, 1344,
	274, 1344,
	277, 1344,
	278, 1344,
	279, 1344,
	280, 1344,
	281, 1344,
	282, 1344,
	283, 1344,
	286, 1344,
	287, 1344,
	288, 1344,
	289, 1344,
	291, 1344,
	292, 1344,
	293, 1344,
	294, 1344,
	295, 1344,
	296, 1344,
	297, 1344,
	298, 1344,
	299, 1344,
	300, 1344,
	301, 1344,
	302, 1344,
	303, 1344,
	304, 1344,
	305, 1344,
	306, 1344,
	307, 1344,
	308, 1344,
	309, 1344,
	310, 1344,
	311, 1344,
	312, 1344,
	314, 1344,
	316, 1344,
	317, 1344,
	318, 1344,
	319, 1344,
	320, 1344,
	321, 1344,
	322, 1344,
	323, 1344,
	324, 1344,
	325, 1344,
	326, 1344,
	327, 1344,
	328, 1344,
	329, 1344,
	330, 1344,
	331, 1344,
	333, 1344,
	334, 1344,
	338, 1344,
	339, 1344,
	340, 1344,
	342, 1344,
	343, 1344,
	344, 1344,
	345, 1344,
	346, 1344,
	349, 1344,
	351, 1344,
	353, 1344,
	354, 1344,
	355, 1344,
	358, 1344,
	359, 1344,
	360, 1344,
	362, 1344,
	364, 1344,
	365, 1344,
	366, 1344,
	367, 1344,
	368, 1344,
	369, 1344,
	370, 1344,
	371, 1344,
	372, 1344,
	373, 1344,
	374, 1344,
	375, 1344,
	376, 1344,
	378, 1344,
	379, 1344,
	380, 1344,
	381, 1344,
	382, 1344,
	383, 1344,
	384, 1344,
	385, 1344,
	386, 1344,
	387, 1344,
	388, 1344,
	389, 1344,
	390, 1344,
	391, 1344,
	392, 1344,
	394, 1344,
	395, 1344,
	397, 1344,
	398, 1344,
	399, 1344,
	400, 1344,
	401, 1344,
	402, 1344,
	403, 1344,
	404, 1344,
	405, 1344,
	406, 1344,
	407, 1344,
	408, 1344,
	409, 1344,
	411, 1344,
	413, 1344,
	414, 1344,
	415, 1344,
	421, 1344,
	422, 1344,
	424, 1344,
	425, 1344,
	426, 1344,
	427, 1344,
	428, 1344,
	429, 1344,
	430, 1344,
	431, 1344,
	432, 1344,
	433, 1344,
	435, 1344,
	436, 1344,
	437, 1344,
	439, 1344,
	440, 1344,
	441, 1344,
	442, 1344,
	443, 1344,
	444, 1344,
	445, 1344,
	447, 1344,
	448, 1344,
	449, 1344,
	450, 1344,
	451, 1344,
	452, 1344,
	453, 1344,
	454, 1344,
	455, 1344,
	456, 1344,
	457, 1344,
	458, 1344,
	460, 1344,
	461, 1344,
	462, 1344,
	463, 1344,
	464, 1344,
	465, 1344,
	467, 1344,
	468, 1344,
	469, 1344,
	470, 1344,
	471, 1344,
	472, 1344,
	474, 1344,
	475, 1344,
	476, 1344,
	477, 1344,
	478, 1344,
	479, 1344,
	480, 1344,
	481, 1344,
	483, 1344,
	485, 1344,
	486, 1344,
	487, 1344,
	488, 1344,
	489, 1344,
	490, 1344,
	491, 1344,
	492, 1344,
	493, 1344,
	494, 1344,
	495, 1344,
	496, 1344,
	497, 1344,
	498, 1344,
	499, 1344,
	500, 1344,
	501, 1344,
	503, 1344,
	504, 1344,
	506, 1344,
	507, 1344,
	509, 1344,
	510, 1344,
	511, 1344,
	512, 1344,
	513, 1344,
	514, 1344,
	515, 1344,
	516, 1344,
	518, 1344,
	519, 1344,
	520, 1344,
	521, 1344,
	522, 1344,
	524, 1344,
	526, 1344,
	527, 1344,
	528, 1344,
	529, 1344,
	530, 1344,
	531, 1344,
	533, 1344,
	534, 1344,
	535, 1344,
	536, 1344,
	538, 1344,
	539, 1344,
	542, 1344,
	543, 1344,
	544, 1344,
	545, 1344,
	546, 1344,
	547, 1344,
	548, 1344,
	550, 1344,
	553, 1344,
	554, 1344,
	555, 1344,
	556, 1344,
	557, 1344,
	558, 1344,
	560, 1344,
	561, 1344,
	562, 1344,
	563, 1344,
	564, 1344,
	565, 1344,
	566, 1344,
	571, 1344,
	572, 1344,
	573, 1344,
	574, 1344,
	575, 1344,
	576, 1344,
	-2, 0,
	-1, 1646,
	1, 559,
	606, 559,
	608, 559,
	610, 559,
	-2, 1580,
	-1, 1649,
	4, 2787,
	11, 2787,
	12, 2787,
	14, 2787,
	15, 2787,
	16, 2787,
	17, 2787,
	18, 2787,
	19, 2787,
	21, 2787,
	22, 2787,
	23, 2787,
	24, 2787,
	25, 2787,
	26, 2787,
	27, 2787,
	29, 2787,
	30, 2787,
	33, 2787,
	34, 2787,
	36, 2787,
	38, 2787,
	41, 2787,
	42, 2787,
	44, 2787,
	45, 2787,
	46, 2787,
	47, 2787,
	48, 2787,
	49, 2787,
	50, 2787,
	51, 2787,
	53, 2787,
	54, 2787,
	55, 2787,
	56, 2787,
	58, 2787,
	59, 2787,
	60, 2787,
	61, 2787,
	62, 2787,
	63, 2787,
	64, 2787,
	67, 2787,
	68, 2787,
	69, 2787,
	70, 2787,
	71, 2787,
	73, 2787,
	74, 2787,
	75, 2787,
	76, 2787,
	79, 2787,
	80, 2787,
	81, 2787,
	82, 2787,
	83, 2787,
	84, 2787,
	85, 2787,
	86, 2787,
	88, 2787,
	89, 2787,
	90, 2787,
	91, 2787,
	92, 2787,
	94, 2787,
	95, 2787,
	96, 2787,
	97, 2787,
	98, 2787,
	99, 2787,
	100, 2787,
	101, 2787,
	103, 2787,
	104, 2787,
	105, 2787,
	106, 2787,
	107, 2787,
	108, 2787,
	109, 2787,
	117, 2787,
	118, 2787,
	119, 2787,
	120, 2787,
	121, 2787,
	123, 2787,
	124, 2787,
	125, 2787,
	126, 2787,
	128, 2787,
	129, 2787,
	130, 2787,
	132, 2787,
	133, 2787,
	134, 2787,
	136, 2787,
	137, 2787,
	138, 2787,
	141, 2787,
	142, 2787,
	143, 2787,
	145, 2787,
	146, 2787,
	147, 2787,
	149, 2787,
	150, 2787,
	151, 2787,
	153, 2787,
	154, 2787,
	155, 2787,
	156, 2787,
	157, 2787,
	158, 2787,
	159, 2787,
	160, 2787,
	161, 2787,
	162, 2787,
	163, 2787,
	164, 2787,
	165, 2787,
	166, 2787,
	167, 2787,
	168, 2787,
	169, 2787,
	173, 2787,
	174, 2787,
	175, 2787,
	176, 2787,
	177, 2787,
	178, 2787,
	179, 2787,
	180, 2787,
	183, 2787,
	184, 2787,
	186, 2787,
	187, 2787,
	188, 2787,
	191, 2787,
	192, 2787,
	193, 2787,
	194, 2787,
	195, 2787,
	196, 2787,
	197, 2787,
	198, 2787,
	199, 2787,
	200, 2787,
	201, 2787,
	202, 2787,
	203, 2787,
	204, 2787,
	205, 2787,
	207, 2787,
	208, 2787,
	210, 2787,
	211, 2787,
	213, 2787,
	214, 2787,
	215, 2787,
	216, 2787,
	217, 2787,
	218, 2787,
	219, 2787,
	220, 2787,
	221, 2787,
	222, 2787,
	223, 2787,
	224, 2787,
	225, 2787,
	226, 2787,
	227, 2787,
	228, 2787,
	229, 2787,
	230, 2787,
	232, 2787,
	233, 2787,
	235, 2787,
	236, 2787,
	237, 2787,
	239, 2787,
	240, 2787,
	241, 2787,
	242, 2787,
	244, 2787,
	246, 2787,
	247, 2787,
	248, 2787,
	249, 2787,
	250, 2787,
	251, 2787,
	252, 2787,
	253, 2787,
	254, 2787,
	255, 2787,
	257, 2787,
	258, 2787,
	259, 2787,
	260, 2787,
	261, 2787,
	262, 2787,
	263, 2787,
	264, 2787,
	266, 2787,
	267, 2787,
	268, 2787,
	270, 2787,
	271, 2787,
	272, 2787,
	273, 2787,
	274, 2787,
	275, 2787,
	277, 2787,
	278, 2787,
	279, 2787,
	280, 2787,
	281, 2787,
	282, 2787,
	283, 2787,
	286, 2787,
	287, 2787,
	288, 2787,
	289, 2787,
	290, 2787,
	291, 2787,
	292, 2787,
	293, 2787,
	294, 2787,
	295, 2787,
	296, 2787,
	297, 2787,
	298, 2787,
	299, 2787,
	300, 2787,
	301, 2787,
	302, 2787,
	303, 2787,
	304, 2787,
	305, 2787,
	306, 2787,
	307, 2787,
	308, 2787,
	309, 2787,
	310, 2787,
	311, 2787,
	312, 2787,
	314, 2787,
	315, 2787,
	316, 2787,
	317, 2787,
	318, 2787,
	319, 2787,
	320, 2787,
	321, 2787,
	322, 2787,
	323, 2787,
	324, 2787,
	325, 2787,
	326, 2787,
	327, 2787,
	328, 2787,
	329, 2787,
	330, 2787,
	331, 2787,
	333, 2787,
	334, 2787,
	337, 2787,
	338, 2787,
	339, 2787,
	340, 2787,
	342, 2787,
	343, 2787,
	344, 2787,
	345, 2787,
	346, 2787,
	349, 2787,
	353, 2787,
	354, 2787,
	355, 2787,
	356, 2787,
	358, 2787,
	359, 2787,
	360, 2787,
	362, 2787,
	364, 2787,
	365, 2787,
	366, 2787,
	367, 2787,
	368, 2787,
	369, 2787,
	370, 2787,
	371, 2787,
	372, 2787,
	373, 2787,
	374, 2787,
	375, 2787,
	376, 2787,
	378, 2787,
	379, 2787,
	380, 2787,
	381, 2787,
	382, 2787,
	383, 2787,
	384, 2787,
	385, 2787,
	386, 2787,
	387, 2787,
	388, 2787,
	389, 2787,
	390, 2787,
	391, 2787,
	392, 2787,
	394, 2787,
	395, 2787,
	397, 2787,
	398, 2787,
	399, 2787,
	400, 2787,
	401, 2787,
	402, 2787,
	403, 2787,
	404, 2787,
	405, 2787,
	406, 2787,
	407, 2787,
	408, 2787,
	409, 2787,
	411, 2787,
	413, 2787,
	414, 2787,
	415, 2787,
	421, 2787,
	422, 2787,
	423, 2787,
	424, 2787,
	425, 2787,
	426, 2787,
	427, 2787,
	428, 2787,
	429, 2787,
	430, 2787,
	431, 2787,
	432, 2787,
	433, 2787,
	435, 2787,
	436, 2787,
	437, 2787,
	438, 2787,
	439, 2787,
	440, 2787,
	441, 2787,
	442, 2787,
	443, 2787,
	444, 2787,
	445, 2787,
	446, 2787,
	447, 2787,
	448, 2787,
	449, 2787,
	450, 2787,
	451, 2787,
	452, 2787,
	453, 2787,
	454, 2787,
	455, 2787,
	456, 2787,
	457, 2787,
	458, 2787,
	460, 2787,
	461, 2787,
	462, 2787,
	463, 2787,
	464, 2787,
	465, 2787,
	467, 2787,
	468, 2787,
	469, 2787,
	470, 2787,
	471, 2787,
	472, 2787,
	473, 2787,
	474, 2787,
	475, 2787,
	476, 2787,
	477, 2787,
	478, 2787,
	479, 2787,
	480, 2787,
	481, 2787,
	483, 2787,
	485, 2787,
	486, 2787,
	487, 2787,
	488, 2787,
	489, 2787,
	490, 2787,
	491, 2787,
	492, 2787,
	493, 2787,
	494, 2787,
	495, 2787,
	496, 2787,
	497, 2787,
	498, 2787,
	499, 2787,
	500, 2787,
	501, 2787,
	503, 2787,
	504, 2787,
	505, 2787,
	506, 2787,
	507, 2787,
	509, 2787,
	510, 2787,
	511, 2787,
	512, 2787,
	513, 2787,
	514, 2787,
	515, 2787,
	516, 2787,
	518, 2787,
	519, 2787,
	520, 2787,
	521, 2787,
	522, 2787,
	524, 2787,
	526, 2787,
	527, 2787,
	528, 2787,
	529, 2787,
	530, 2787,
	531, 2787,
	533, 2787,
	534, 2787,
	535, 2787,
	536, 2787,
	538, 2787,
	539, 2787,
	542, 2787,
	543, 2787,
	544, 2787,
	545, 2787,
	546, 2787,
	547, 2787,
	548, 2787,
	550, 2787,
	553, 2787,
	554, 2787,
	555, 2787,
	556, 2787,
	557, 2787,
	558, 2787,
	560, 2787,
	561, 2787,
	562, 2787,
	563, 2787,
	564, 2787,
	565, 2787,
	566, 2787,
	571, 2787,
	572, 2787,
	573, 2787,
	574, 2787,
	575, 2787,
	576, 2787,
	577, 2787,
	579, 2787,
	587, 2787,
	588, 2787,
	589, 2787,
	590, 2787,
	591, 2787,
	592, 2787,
	594, 2787,
	595, 2787,
	596, 2787,
	597, 2787,
	598, 2787,
	599, 2787,
	600, 2787,
	601, 2787,
	602, 2787,
	605, 2787,
	608, 2787,
	609, 2787,
	611, 2787,
	612, 2787,
	-2, 0,
	-1, 1654,
	190, 2666,
	523, 2666,
	589, 2666,
	609, 2666,
	-2, 0,
	-1, 1707,
	399, 898,
	465, 898,
	507, 898,
	528, 898,
	-2, 0,
	-1, 1718,
	1, 1416,
	606, 1416,
	608, 1416,
	610, 1416,
	-2, 0,
	-1, 1735,
	1, 893,
	606, 893,
	608, 893,
	610, 893,
	-2, 0,
	-1, 1736,
	1, 937,
	606, 937,
	608, 937,
	610, 937,
	-2, 0,
	-1, 1737,
	1, 945,
	606, 945,
	608, 945,
	610, 945,
	-2, 0,
	-1, 1740,
	1, 902,
	606, 902,
	608, 902,
	610, 902,
	-2, 0,
	-1, 1742,
	1, 908,
	606, 908,
	608, 908,
	610, 908,
	-2, 0,
	-1, 1745,
	1, 904,
	606, 904,
	608, 904,
	610, 904,
	-2, 0,
	-1, 1750,
	1, 918,
	606, 918,
	608, 918,
	610, 918,
	-2, 0,
	-1, 1781,
	1, 2649,
	606, 2649,
	608, 2649,
	609, 2649,
	610, 2649,
	-2, 0,
	-1, 1785,
	1, 992,
	606, 992,
	608, 992,
	610, 992,
	-2, 0,
	-1, 1802,
	1, 1466,
	610, 1466,
	-2, 1471,
	-1, 1805,
	172, 1623,
	185, 1623,
	276, 1623,
	347, 1623,
	-2, 1561,
	-1, 1905,
	152, 1582,
	172, 1582,
	185, 1582,
	243, 1582,
	276, 1582,
	347, 1582,
	357, 1582,
	540, 1582,
	-2, 2033,
	-1, 1966,
	608, 2208,
	-2, 0,
	-1, 2001,
	152, 1582,
	172, 1582,
	185, 1582,
	243, 1582,
	276, 1582,
	347, 1582,
	357, 1582,
	540, 1582,
	-2, 1715,
	-1, 2041,
	523, 2663,
	609, 2663,
	612, 2663,
	-2, 0,
	-1, 2058,
	607, 1856,
	-2, 1844,
	-1, 2090,
	190, 2663,
	609, 2663,
	612, 2663,
	-2, 0,
	-1, 2133,
	1, 704,
	610, 704,
	-2, 1471,
	-1, 2278,
	225, 262,
	-2, 2356,
	-1, 2279,
	225, 263,
	-2, 315,
	-1, 2388,
	1, 895,
	606, 895,
	608, 895,
	610, 895,
	-2, 0,
	-1, 2389,
	1, 939,
	606, 939,
	608, 939,
	610, 939,
	-2, 0,
	-1, 2390,
	1, 947,
	606, 947,
	608, 947,
	610, 947,
	-2, 0,
	-1, 2391,
	1, 994,
	606, 994,
	608, 994,
	610, 994,
	-2, 0,
	-1, 2432,
	1, 920,
	606, 920,
	608, 920,
	610, 920,
	-2, 0,
	-1, 2452,
	1, 977,
	606, 977,
	608, 977,
	610, 977,
	-2, 0,
	-1, 2499,
	444, 1650,
	445, 1650,
	-2, 1889,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1909,
	-1, 2531,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1910,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1911,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1912,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1913,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1914,
	-1, 2536,
	95, 0,
	257, 0,
	258, 0,
	591, 0,
	592, 0,
	-2, 1915,
	-1, 2537,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1916,
	-1, 2549,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1928,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1929,
	-1, 2551,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1930,
	-1, 2555,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1937,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1941,
	-1, 2563,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1949,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1950,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1951,
	-1, 2566,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1952,
	-1, 2740,
	5, 2360,
	190, 2219,
	607, 2357,
	-2, 2348,
	-1, 2741,
	190, 2220,
	-2, 2738,
	-1, 2742,
	190, 2221,
	-2, 2550,
	-1, 2743,
	190, 2222,
	-2, 2430,
	-1, 2744,
	190, 2223,
	-2, 2488,
	-1, 2745,
	190, 2224,
	-2, 2535,
	-1, 2746,
	190, 2225,
	-2, 2661,
	-1, 2747,
	190, 2226,
	-2, 2016,
	-1, 2818,
	1, 1716,
	2, 1716,
	106, 1716,
	152, 1716,
	172, 1716,
	185, 1716,
	191, 1716,
	209, 1716,
	212, 1716,
	239, 1716,
	243, 1716,
	254, 1716,
	272, 1716,
	276, 1716,
	315, 1716,
	347, 1716,
	351, 1716,
	357, 1716,
	434, 1716,
	438, 1716,
	540, 1716,
	551, 1716,
	568, 1716,
	569, 1716,
	570, 1716,
	580, 1716,
	606, 1716,
	608, 1716,
	610, 1716,
	612, 1716,
	-2, 1715,
	-1, 2831,
	607, 2329,
	-2, 2343,
	-1, 2833,
	1, 332,
	568, 332,
	-2, 1609,
	-1, 2863,
	607, 1855,
	-2, 1845,
	-1, 3056,
	1, 1319,
	429, 1276,
	467, 1276,
	583, 1276,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1609,
	-1, 3231,
	352, 1653,
	-2, 2777,
	-1, 3232,
	352, 1654,
	-2, 2646,
	-1, 3236,
	444, 2285,
	445, 2285,
	-2, 2014,
	-1, 3237,
	444, 2289,
	445, 2289,
	-2, 2015,
	-1, 3238,
	444, 2286,
	445, 2286,
	-2, 2014,
	-1, 3239,
	444, 2290,
	445, 2290,
	-2, 2015,
	-1, 3252,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1939,
	-1, 3253,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1943,
	-1, 3259,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1945,
	-1, 3486,
	1, 699,
	606, 699,
	608, 699,
	610, 699,
	-2, 1471,
	-1, 3663,
	43, 2320,
	-2, 1064,
	-1, 3668,
	1, 1319,
	606, 1319,
	608, 1319,
	610, 1319,
	-2, 1609,
	-1, 3773,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1947,
	-1, 3780,
	248, 0,
	250, 0,
	337, 0,
	-2, 1966,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1995,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1996,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 1997,
	-1, 3854,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2001,
	-1, 3855,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2002,
	-1, 3856,
	14, 0,
	15, 0,
	16, 0,
	587, 0,
	588, 0,
	589, 0,
	-2, 2003,
	-1, 3904,
	607, 2330,
	-2, 2344,
	-1, 4098,
	609, 2894,
	-2, 1535,
	-1, 4153,
	248, 0,
	250, 0,
	337, 0,
	-2, 1967,
	-1, 4156,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1970,
	-1, 4157,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1972,
	-1, 4266,
	609, 2345,
	-2, 1354,
	-1, 4426,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1971,
	-1, 4427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 1973,
	-1, 4438,
	248, 0,
	-2, 2006,
	-1, 4626,
	248, 0,
	-2, 2007,
	-1, 4843,
	50, 0,
	222, 0,
	275, 0,
	473, 0,
	577, 0,
	590, 0,
	-2, 2741,
}

const sqlPrivate = 57344

const sqlLast = 138264

var sqlAct = [...]int{
	274, 4780, 4664, 5030, 3652, 4959, 3390, 4888, 3128, 4494,
	4672, 4904, 4829, 4779, 4714, 4842, 3141, 2928, 4854, 4736,
	4973, 3651, 4770, 4811, 2275, 1544, 4790, 4855, 4793, 2352,
	4856, 4570, 2970, 4596, 1266, 4557, 2182, 4541, 2995, 3813,
	4841, 3914, 4630, 4387, 4136, 4476, 1277, 4382, 4376, 4340,
	4314, 3765, 3098, 4499, 4447, 4415, 3504, 2364, 1350, 2509,
	4090, 4367, 1345, 3685, 1571, 4369, 4082, 4579, 4360, 3507,
	4699, 4263, 4010, 2929, 4243, 828, 4913, 2578, 1343, 4392,
	3245, 3636, 2102, 1097, 4262, 716, 3010, 4037, 2190, 2115,
	3510, 3565, 1814, 4443, 2362, 2773, 3679, 3625, 4039, 4056,
	2517, 1088, 3716, 828, 3718, 3117, 3153, 2360, 3641, 2045,
	3087, 788, 1411, 3640, 3907, 1504, 3643, 3112, 2007, 2845,
	3114, 3436, 1336, 3618, 3617, 3413, 3143, 2510, 3405, 903,
	4, 3373, 3148, 4135, 907, 1672, 1096, 182, 4192, 3394,
	727, 3129, 3063, 2264, 3396, 2262, 2218, 4889, 3529, 3443,
	2811, 3874, 2325, 2202, 3372, 1976, 825, 4631, 1952, 1913,
	2591, 2514, 1883, 2046, 898, 2656, 2813, 823, 3229, 3091,
	1348, 111, 2263, 3147, 1610, 1353, 2810, 3027, 2239, 2258,
	2246, 784, 2170, 3099, 1392, 2174, 1147, 2969, 1802, 2113,
	1715, 2575, 2791, 2658, 2160, 1152, 1322, 268, 2498, 2647,
	2770, 1977, 2481, 2846, 2479, 761, 1647, 1257, 3122, 1670,
	267, 2312, 1613, 2952, 2025, 829, 703, 2953, 1573, 1996,
	725, 830, 4737, 2874, 976, 2915, 1379, 1986, 3644, 2650,
	1260, 182, 1947, 2800, 1897, 2736, 1239, 1993, 2628, 2781,
	2702, 1274, 1815, 1816, 2480, 2482, 1735, 1750, 191, 769,
	780, 2338, 1256, 192, 1333, 2272, 1539, 2311, 1645, 924,
	1638, 1512, 4905, 2503, 4960, 1128, 720, 44, 43, 41,
	32, 30, 834, 1237, 1821, 28, 717, 1801, 729, 818,
	1262, 1550, 3282, 997, 744, 837, 3276, 3888, 879, 3889,
	3392, 5041, 2104, 1741, 880, 2790, 1092, 5033, 5022, 5021,
	834, 3704, 2790, 2790, 3915, 2104, 4851, 4993, 2104, 4467,
	163, 4498, 2104, 837, 2104, 2104, 4219, 1543, 73, 4991,
	46, 45, 4933, 4498, 4890, 4880, 2284, 4878, 4891, 2790,
	4464, 2790, 4875, 4872, 3694, 74, 4876, 4873, 158, 1143,
	4839, 4838, 1092, 4837, 2284, 2284, 2125, 3158, 4827, 4825,
	4820, 79, 4498, 4498, 4582, 4815, 4814, 4788, 2125, 4498,
	4498, 4498, 67, 4756, 4749, 1093, 4748, 2854, 2790, 48,
	2790, 160, 4741, 4713, 4710, 4693, 2284, 2284, 4498, 4330,
	4628, 4461, 4610, 4572, 2854, 1254, 4119, 4573, 4517, 47,
	3704, 88, 2284, 2604, 2605, 2606, 2623, 2624, 2625, 1240,
	1240, 4516, 4505, 4504, 4497, 2284, 2284, 4498, 4498, 1388,
	4454, 1388, 266, 2626, 2284, 1082, 4428, 4403, 50, 68,
	2854, 3158, 4400, 3453, 4309, 4289, 3704, 51, 2790, 2790,
	4155, 1073, 57, 2876, 2854, 4106, 1072, 161, 1681, 3711,
	4100, 2361, 3695, 3878, 3711, 49, 1885, 110, 4053, 3471,
	3468, 3899, 4054, 94, 107, 3900, 1292, 3897, 3881, 3797,
	1150, 3898, 2790, 2284, 3793, 2616, 3291, 3710, 2790, 2850,
	2122, 3711, 3292, 94, 2612, 1087, 1552, 3389, 3384, 1149,
	3383, 2790, 2790, 3334, 2790, 3332, 3324, 3335, 3322, 3333,
	3325, 1663, 2790, 1829, 1830, 52, 3293, 3157, 3139, 3138,
	2790, 3158, 2348, 2348, 2899, 2853, 2843, 1241, 2790, 2854,
	2790, 2125, 2122, 95, 2835, 2789, 1860, 2783, 2284, 2790,
	2347, 1300, 2125, 1832, 2348, 2284, 1829, 1830, 1243, 2125,
	1244, 3244, 2790, 4757, 2424, 4632, 4623, 4611, 4582, 3158,
	3878, 2782, 4380, 4330, 2122, 1293, 4290, 4119, 4055, 1885,
	39, 2790, 2617, 2618, 2619, 2620, 1832, 3002, 1831, 2914,
	2139, 3125, 2611, 2103, 1829, 1830, 2195, 2119, 1851, 3093,
	1293, 2283, 3020, 2912, 1972, 3343, 3344, 1848, 1538, 3989,
	1272, 3768, 3741, 1994, 2251, 1717, 238, 1860, 3696, 2827,
	2826, 1831, 2825, 2824, 1832, 238, 2823, 3281, 1245, 1242,
	1081, 3343, 3344, 1080, 3361, 3362, 3363, 1079, 3697, 1543,
	1078, 1077, 1076, 1075, 1071, 1070, 1069, 1068, 1067, 1066,
	1885, 1552, 1065, 4151, 3202, 2685, 1064, 1063, 1062, 1831,
	1061, 1060, 1059, 4149, 1058, 240, 2621, 2622, 1057, 1056,
	1055, 1054, 1036, 974, 240, 973, 972, 971, 970, 969,
	3358, 968, 967, 966, 965, 1854, 1855, 1856, 1857, 2105,
	964, 1564, 99, 963, 899, 1837, 962, 961, 960, 2614,
	959, 958, 2105, 957, 1552, 2105, 3358, 956, 955, 2105,
	53, 2105, 2105, 239, 954, 953, 952, 951, 950, 949,
	948, 73, 239, 902, 901, 56, 947, 232, 1837, 1126,
	59, 1269, 946, 945, 944, 943, 233, 942, 74, 941,
	69, 1558, 940, 939, 1859, 1861, 928, 58, 190, 102,
	1268, 927, 106, 926, 79, 922, 54, 921, 2122, 4210,
	162, 2122, 914, 913, 193, 912, 1837, 4167, 55, 1846,
	1847, 3343, 3344, 193, 3361, 3362, 3363, 3349, 238, 897,
	238, 896, 2122, 853, 852, 851, 62, 850, 841, 840,
	839, 153, 1355, 1152, 88, 838, 804, 795, 238, 794,
	793, 775, 1852, 3349, 262, 261, 260, 159, 259, 258,
	257, 153, 256, 255, 254, 1859, 1861, 253, 252, 251,
	1152, 1152, 1152, 250, 249, 248, 247, 240, 246, 240,
	245, 244, 243, 242, 241, 905, 3924, 4394, 1414, 3893,
	3712, 3439, 1152, 3304, 3287, 3278, 3358, 240, 49, 1355,
	110, 3182, 157, 3073, 2858, 2615, 94, 107, 2832, 2817,
	2471, 2168, 2124, 3107, 1955, 2020, 1924, 194, 3365, 2683,
	2125, 1954, 1796, 1852, 1152, 239, 1152, 239, 1152, 1882,
	1955, 3343, 3344, 2886, 3359, 1576, 2103, 1954, 1743, 232,
	2122, 232, 2119, 2474, 3694, 239, 3387, 2669, 233, 1958,
	233, 1293, 2122, 1396, 1397, 1398, 1546, 1563, 1383, 232,
	3359, 1355, 1882, 1997, 1884, 1953, 95, 2667, 233, 1915,
	1400, 1276, 1522, 238, 4865, 238, 193, 1922, 193, 3,
	4864, 1576, 1517, 4861, 4840, 1858, 4824, 4721, 1576, 3388,
	4620, 4442, 1828, 3349, 4401, 4635, 193, 1152, 4614, 1152,
	1882, 4612, 4379, 4489, 1576, 4225, 4190, 1557, 1853, 4189,
	4183, 1882, 1152, 1509, 1152, 4066, 4182, 1551, 4181, 2782,
	1270, 4174, 240, 1293, 240, 4173, 4171, 4166, 238, 4163,
	1685, 1542, 1327, 1330, 4162, 3343, 3344, 1882, 4052, 3928,
	3927, 1619, 1622, 1340, 1375, 3926, 2601, 2602, 2603, 2627,
	2613, 2607, 1377, 2609, 2610, 2608, 2595, 2596, 2597, 2598,
	2599, 2600, 1576, 3903, 3869, 3343, 3344, 1884, 1527, 3868,
	239, 238, 239, 3867, 1529, 3789, 3784, 240, 3434, 1853,
	3380, 3371, 1152, 3342, 232, 1152, 232, 3339, 1625, 3338,
	3360, 3336, 3331, 233, 1407, 233, 1501, 1506, 4396, 3330,
	3359, 3329, 3326, 3349, 3323, 3303, 3343, 3344, 3286, 834,
	1369, 3279, 2653, 3277, 3140, 99, 3360, 2818, 182, 182,
	240, 3124, 837, 193, 1253, 239, 2640, 1541, 1828, 1608,
	1916, 2328, 1914, 1540, 1917, 2291, 1615, 1827, 1884, 232,
	1915, 2289, 5036, 4067, 4982, 4981, 1650, 1652, 233, 4903,
	1686, 4901, 1093, 1849, 1845, 1278, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 3109, 3815, 3987, 239, 4462,
	4781, 190, 102, 4698, 4684, 106, 193, 1882, 4680, 1667,
	4679, 4678, 232, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 233, 1833, 1834, 1835, 1836, 1838, 1839, 238, 1648,
	1552, 238, 2856, 4658, 4657, 2654, 4655, 3349, 4634, 906,
	3359, 4633, 1361, 4608, 153, 1383, 1152, 2581, 1383, 193,
	4594, 4591, 1152, 4590, 4583, 4568, 4567, 4513, 1641, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 4484, 3349, 3354, 3352,
	3353, 3345, 3346, 3347, 3348, 3350, 3351, 240, 238, 4440,
	240, 4637, 1344, 4423, 1806, 4422, 3360, 3355, 3356, 3357,
	4363, 3385, 4356, 4353, 3354, 3352, 3353, 3345, 3346, 3347,
	3348, 3350, 3351, 4067, 4331, 157, 4209, 1759, 3349, 1662,
	4188, 4120, 1691, 3975, 3974, 3957, 2655, 1882, 2652, 3431,
	194, 3343, 3344, 3956, 1680, 239, 3954, 240, 239, 3884,
	1829, 1830, 1507, 2587, 3872, 1521, 1344, 3779, 1902, 232,
	3460, 2684, 232, 3713, 3705, 3671, 3584, 3540, 233, 73,
	3509, 233, 3462, 3308, 3307, 1800, 3302, 1152, 1152, 1152,
	1832, 3268, 1904, 1152, 3086, 1961, 74, 1960, 1959, 1956,
	1274, 1948, 1274, 1946, 3359, 239, 193, 1708, 2865, 900,
	2864, 2829, 79, 2822, 4395, 2788, 2665, 1414, 1901, 232,
	2019, 1744, 1975, 1970, 1969, 1831, 3360, 1974, 233, 1152,
	1968, 3108, 828, 1355, 1967, 1344, 1344, 1966, 2063, 828,
	1965, 1355, 1964, 1355, 2023, 3359, 1963, 1093, 1807, 1962,
	1943, 1942, 88, 1941, 1360, 1940, 193, 3355, 3356, 3357,
	1939, 1803, 1938, 1937, 3354, 3352, 3353, 3345, 3346, 3347,
	3348, 3350, 3351, 1811, 1810, 1936, 1935, 1644, 1934, 1933,
	1932, 1882, 1931, 1930, 1929, 1073, 1928, 1917, 1983, 1903,
	1072, 2042, 1900, 905, 2031, 1805, 1895, 1639, 1368, 2092,
	1957, 2094, 1297, 1355, 1288, 1824, 1825, 2657, 110, 1152,
	4636, 4366, 4221, 2030, 94, 107, 4159, 3923, 3896, 3887,
	3290, 2820, 1882, 3349, 2036, 4223, 1829, 1830, 3922, 1916,
	3458, 1898, 1837, 1152, 238, 1549, 2159, 1556, 3700, 1562,
	182, 1414, 2024, 1980, 1981, 1240, 2004, 238, 4292, 2184,
	2109, 3343, 3344, 2111, 2015, 4979, 1832, 2159, 4972, 2116,
	3360, 2127, 1393, 2118, 2157, 1949, 1950, 2159, 2121, 1388,
	2996, 4681, 4584, 1093, 95, 3352, 3353, 3345, 3346, 3347,
	3348, 3350, 3351, 240, 4575, 2682, 4574, 4399, 2037, 1395,
	4334, 1831, 4333, 4332, 4857, 2086, 240, 3343, 3344, 4291,
	4212, 3360, 4126, 4125, 2131, 4124, 4123, 1383, 1661, 2028,
	1666, 4122, 1095, 2668, 3766, 4121, 2166, 3891, 2130, 2974,
	3890, 4929, 2005, 1679, 2651, 1684, 3715, 3714, 3707, 834,
	3359, 239, 2002, 2666, 3706, 1995, 834, 4615, 4927, 1923,
	4613, 4580, 837, 1997, 239, 232, 3543, 1938, 1707, 837,
	2229, 4070, 1973, 1938, 233, 1394, 2867, 1955, 232, 2248,
	1798, 1388, 4001, 2107, 1954, 2151, 2150, 233, 4488, 2159,
	2161, 2014, 2013, 2012, 2010, 2009, 3328, 1576, 1576, 2008,
	1999, 3327, 193, 3347, 3348, 3350, 3351, 1414, 3025, 3250,
	1742, 2956, 1391, 3574, 2145, 193, 238, 1388, 3972, 4060,
	2043, 2133, 1052, 2852, 3654, 3511, 3653, 1882, 3354, 3352,
	3353, 3345, 3346, 3347, 3348, 3350, 3351, 1926, 2265, 4949,
	2353, 2380, 4571, 99, 4886, 4444, 1716, 4868, 4853, 238,
	1643, 4377, 3626, 1760, 3154, 1717, 2266, 4074, 2225, 1272,
	2233, 1272, 4049, 4007, 3998, 240, 2243, 3980, 1053, 3738,
	3484, 3353, 3345, 3346, 3347, 3348, 3350, 3351, 2358, 2129,
	2329, 3392, 2029, 3817, 2648, 2863, 4862, 1971, 1951, 3349,
	3634, 2954, 3296, 2322, 1618, 1534, 1364, 1326, 240, 190,
	102, 4673, 4877, 106, 4874, 3690, 3360, 3948, 2154, 1252,
	3014, 2998, 1576, 239, 1576, 2162, 1576, 2152, 3012, 4508,
	2235, 4383, 4480, 4787, 2228, 4651, 3514, 232, 3967, 238,
	3121, 2189, 2276, 2281, 1576, 1576, 233, 906, 3609, 4930,
	892, 4511, 153, 4964, 3017, 4507, 239, 1576, 2201, 4931,
	2857, 4486, 2195, 4863, 2238, 3760, 1521, 2134, 4910, 1576,
	232, 1576, 1576, 1576, 193, 2268, 2269, 1644, 3488, 233,
	4537, 1695, 4279, 2280, 2238, 4020, 1032, 1585, 240, 1050,
	1269, 2900, 1269, 2238, 5032, 828, 2653, 2438, 2318, 2379,
	2236, 2436, 2223, 3490, 1048, 1593, 834, 193, 1046, 1268,
	1536, 1268, 2270, 157, 1044, 1041, 1521, 1152, 4688, 837,
	2452, 4530, 2449, 4519, 1541, 1395, 4323, 4322, 194, 4018,
	1540, 2323, 4017, 4009, 2193, 2156, 239, 1154, 3995, 2335,
	3994, 3118, 2222, 2234, 2219, 3992, 2146, 2918, 1389, 2242,
	232, 1758, 1152, 4019, 3991, 3979, 3943, 893, 3942, 233,
	3615, 3614, 2916, 2356, 3576, 2282, 3452, 3345, 3346, 3347,
	3348, 3350, 3351, 2155, 1091, 3301, 2450, 2343, 1835, 1836,
	1838, 1839, 2372, 1882, 2011, 3300, 2384, 193, 1152, 2654,
	1152, 1394, 1594, 1093, 3299, 1093, 1389, 1152, 3459, 3298,
	2063, 2063, 1414, 2451, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1648, 1152, 1648, 1152, 1152, 1152, 1152, 2304, 2332, 2345,
	2303, 2409, 2473, 4509, 2366, 1641, 4481, 2340, 2341, 2340,
	4258, 1395, 4965, 2337, 1693, 1090, 3254, 3511, 1385, 1152,
	2655, 1757, 2652, 1152, 1152, 1369, 3023, 4911, 2491, 3022,
	2349, 1152, 2350, 2698, 2220, 1152, 3019, 1152, 1152, 3542,
	2478, 3572, 834, 2266, 4251, 1414, 2353, 2237, 4277, 238,
	3008, 1152, 1152, 1152, 1152, 837, 4274, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 2371, 1385, 2237, 3181, 3000,
	2990, 2931, 2989, 2984, 2983, 2388, 2237, 1394, 2978, 1270,
	1643, 1270, 1378, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 2918, 2982, 2399, 3065, 1152, 1839, 240, 4252,
	2195, 2961, 1390, 2960, 2922, 2971, 2972, 2916, 1274, 2226,
	2844, 2562, 1804, 2515, 2516, 1414, 4546, 2697, 2629, 2630,
	2432, 2519, 3351, 1756, 1274, 4293, 2971, 2972, 4230, 1092,
	1709, 2302, 2629, 2645, 2502, 1688, 2971, 2972, 1537, 2871,
	1152, 1414, 2848, 4421, 2194, 2321, 239, 3739, 4967, 1739,
	1390, 1038, 3951, 2221, 2469, 802, 2489, 2489, 2376, 2693,
	232, 1386, 1794, 3345, 3346, 3347, 3348, 3350, 3351, 233,
	1387, 2477, 2476, 2191, 2475, 2648, 2483, 2490, 2739, 2739,
	2753, 2657, 2629, 2958, 2593, 2774, 2776, 2461, 2934, 2464,
	1073, 2780, 1093, 1073, 1073, 2506, 2644, 193, 2507, 2508,
	1602, 2805, 1093, 715, 3573, 2907, 1093, 2187, 1101, 1386,
	2231, 1389, 895, 894, 1797, 2389, 2487, 2487, 1387, 1985,
	3197, 4930, 2847, 1631, 4235, 1630, 1739, 2577, 1629, 710,
	1628, 3161, 2577, 2834, 1607, 2830, 2945, 2192, 2163, 2164,
	1589, 2442, 1769, 3964, 3227, 1312, 1355, 1355, 4968, 767,
	2430, 2589, 2797, 1689, 4271, 4995, 2396, 1738, 4966, 1240,
	4976, 2944, 2695, 1773, 4273, 3242, 2188, 2696, 2004, 800,
	2699, 2870, 2700, 2701, 1717, 2642, 767, 2342, 2390, 3208,
	4275, 1717, 3748, 3013, 3487, 3016, 3747, 4859, 4234, 1414,
	3199, 3011, 1736, 1809, 2851, 1093, 1367, 2873, 2651, 2796,
	2485, 182, 2819, 2463, 1989, 2895, 2892, 4247, 2585, 2393,
	2881, 2448, 1089, 4248, 1197, 2583, 2885, 3015, 2889, 2748,
	2387, 2015, 2735, 4253, 2063, 2765, 1705, 2869, 1145, 2778,
	2896, 1385, 2657, 2804, 1738, 2809, 2798, 4643, 2815, 2816,
	2786, 2787, 3976, 4666, 2802, 2803, 4321, 1388, 1614, 937,
	2195, 4942, 1992, 1383, 2002, 1737, 1957, 3993, 4970, 3990,
	2888, 3931, 3962, 2859, 1042, 4250, 4547, 1987, 2488, 2488,
	2397, 2437, 1414, 2559, 2903, 2435, 2217, 1752, 4545, 1042,
	1694, 2921, 4254, 1042, 4543, 1990, 2230, 1755, 1355, 1043,
	1042, 2203, 2933, 3211, 3806, 1388, 2905, 4029, 3918, 3621,
	3241, 1612, 2897, 2232, 2923, 3613, 3570, 2921, 3018, 1152,
	1152, 2866, 1152, 2891, 2207, 1390, 2425, 4420, 2981, 2252,
	2959, 2894, 2193, 2880, 2259, 1949, 1950, 2883, 1988, 2884,
	2288, 2287, 4542, 2906, 2227, 2898, 828, 2875, 1355, 2229,
	2920, 2470, 2486, 2486, 2890, 3559, 4951, 1272, 4950, 2979,
	890, 2842, 889, 3803, 2904, 4030, 3090, 2957, 3742, 4544,
	3009, 2460, 4269, 1272, 3407, 4860, 3234, 3235, 4668, 1576,
	1692, 2204, 1024, 4997, 1386, 2963, 4918, 2224, 4272, 766,
	3132, 4141, 1576, 1387, 1576, 2901, 2175, 2964, 4140, 801,
	3622, 2176, 3105, 3149, 4276, 3687, 1086, 3205, 4028, 2104,
	1591, 1576, 3619, 3560, 3068, 2994, 766, 3551, 2755, 3070,
	2231, 3060, 1770, 4249, 2948, 4974, 2973, 2975, 2976, 2977,
	3162, 3163, 2936, 2939, 2926, 1355, 2988, 1355, 2962, 3210,
	3024, 3169, 3170, 3171, 3804, 3057, 3058, 2917, 2253, 803,
	2932, 2980, 2573, 799, 4765, 2557, 3558, 4471, 2560, 1152,
	2997, 1991, 3977, 4259, 4260, 2657, 2249, 4969, 4695, 3688,
	3207, 2986, 4674, 3056, 4831, 3552, 4832, 2987, 1269, 3061,
	4858, 1344, 2999, 2571, 2992, 2985, 3006, 2462, 2919, 2215,
	711, 2208, 4753, 3183, 1269, 3184, 1614, 1268, 1025, 768,
	3185, 2198, 3095, 2228, 3159, 3101, 3498, 3265, 2556, 3066,
	3164, 834, 3165, 1268, 182, 2177, 3489, 3179, 3550, 3146,
	3587, 2261, 3059, 3097, 837, 1152, 768, 3155, 1767, 1541,
	1344, 1152, 1152, 2181, 4270, 3071, 3152, 4975, 3263, 1588,
	2249, 3134, 3136, 834, 1311, 3151, 3084, 2216, 1718, 3178,
	765, 1690, 3687, 3526, 2395, 3094, 837, 2209, 2210, 2199,
	1535, 1295, 1344, 1344, 3188, 1771, 3190, 1039, 3192, 2918,
	1388, 2232, 712, 4977, 3406, 4350, 1944, 3209, 1989, 2260,
	3127, 3213, 2205, 3215, 2937, 3137, 4708, 1152, 1152, 4258,
	2214, 4896, 2194, 1152, 2245, 4417, 3963, 1648, 1569, 3256,
	2431, 4897, 2197, 3156, 2576, 2657, 1152, 1152, 2178, 2183,
	3525, 4917, 1152, 1152, 3135, 3176, 3456, 3216, 1152, 3116,
	3218, 2244, 713, 4251, 714, 2567, 1992, 4244, 2206, 2175,
	2230, 3187, 2833, 3189, 2176, 3191, 3066, 3193, 3194, 4700,
	1768, 2799, 3186, 3620, 4242, 1030, 1029, 938, 2568, 3606,
	4667, 1656, 4701, 4246, 2569, 2240, 1507, 2249, 2574, 1990,
	3203, 1772, 4137, 1152, 1152, 1152, 1282, 1671, 3257, 1152,
	1808, 2256, 3530, 1366, 2584, 734, 2185, 4433, 4252, 1152,
	3260, 1284, 4751, 4940, 4042, 2192, 4702, 2392, 4798, 929,
	4303, 2179, 1026, 1521, 4040, 3289, 1152, 3233, 2386, 2639,
	1894, 3306, 2801, 1704, 1706, 4998, 2558, 2814, 1279, 3261,
	3224, 3223, 3222, 3266, 2241, 930, 3499, 1270, 1092, 2502,
	2993, 3819, 4245, 3228, 4984, 1699, 4752, 3532, 4365, 2254,
	4370, 4131, 3243, 1270, 4459, 4326, 4416, 3919, 3536, 842,
	1301, 1723, 2185, 1299, 915, 4142, 3762, 1985, 2177, 3225,
	4371, 2211, 4704, 4715, 1285, 1818, 4803, 4735, 4593, 3284,
	3285, 4325, 3280, 4324, 3288, 849, 2181, 4088, 3675, 3470,
	920, 2841, 2255, 2310, 1982, 4703, 2105, 4044, 4065, 1298,
	1286, 3255, 1291, 1093, 702, 1819, 3858, 4138, 1152, 1152,
	1152, 1152, 3531, 4705, 2505, 2196, 3534, 4351, 1152, 1152,
	1152, 2147, 4186, 1152, 4506, 3444, 4602, 3505, 4043, 4650,
	4089, 4013, 3996, 1152, 1274, 1414, 4916, 1027, 4042, 1152,
	3949, 1152, 1283, 3399, 3400, 1991, 3802, 2212, 4040, 3947,
	1274, 5003, 1989, 3676, 2144, 3667, 3501, 1582, 3106, 3535,
	1521, 2178, 2183, 3100, 1028, 2570, 3088, 2336, 1414, 2330,
	4895, 1344, 2324, 2316, 3909, 2572, 2296, 2295, 1303, 1817,
	1274, 3873, 4771, 1414, 774, 3763, 1818, 4716, 3074, 1818,
	2921, 3077, 4587, 3079, 3939, 1355, 3295, 4418, 4738, 2965,
	1992, 2443, 1813, 2140, 2938, 2063, 4247, 4091, 2495, 1414,
	3424, 4388, 4248, 4143, 3437, 1987, 3085, 1031, 3382, 1355,
	3262, 1314, 4253, 4563, 1521, 4561, 1521, 1355, 3910, 2142,
	3264, 4044, 4483, 1990, 3401, 3517, 3513, 3512, 3248, 3123,
	2377, 3226, 3123, 3886, 2179, 3404, 2180, 3403, 2369, 1152,
	1819, 2359, 3415, 3451, 3913, 3911, 2293, 3908, 1740, 931,
	932, 2840, 4043, 1152, 4250, 4048, 2184, 1746, 1745, 2839,
	2838, 2837, 1623, 1355, 2143, 3411, 1988, 3466, 2836, 2063,
	1637, 4254, 3438, 3494, 3495, 1624, 1635, 936, 4368, 3092,
	1817, 3433, 1090, 1817, 3409, 2185, 1152, 4341, 4144, 4495,
	2184, 4661, 3859, 4041, 3515, 2942, 4061, 3519, 3955, 843,
	844, 1355, 3860, 3474, 916, 917, 3476, 3477, 3377, 3378,
	3379, 3480, 3430, 3481, 3195, 3482, 3478, 3442, 4187, 3423,
	2334, 3410, 3485, 1355, 3393, 1355, 3422, 3446, 3447, 3448,
	3449, 3408, 3425, 3426, 1894, 1383, 3491, 2496, 3416, 3493,
	4565, 1152, 1152, 3629, 2248, 4937, 4038, 3516, 4469, 1414,
	3521, 2248, 1280, 3523, 1819, 5002, 3944, 4706, 3457, 4468,
	1355, 2792, 1024, 4707, 1355, 2966, 2967, 3064, 3469, 3454,
	3590, 3160, 3592, 4478, 3502, 3596, 3575, 4717, 3428, 3602,
	3429, 3069, 4586, 4491, 3940, 3067, 1086, 2363, 3545, 1991,
	3414, 3421, 3472, 2265, 1576, 2795, 4496, 4490, 3463, 3464,
	1724, 3465, 4249, 1698, 4784, 2057, 1281, 1355, 1576, 4768,
	1576, 3588, 4193, 4564, 1414, 3875, 4777, 3479, 3568, 3475,
	4479, 828, 1576, 2664, 3420, 2808, 4662, 4041, 4460, 3486,
	4216, 1790, 3508, 1576, 1110, 3585, 2794, 4805, 3500, 3563,
	3492, 2793, 4259, 4260, 3639, 1355, 846, 845, 4941, 933,
	934, 3445, 3912, 3571, 3549, 4939, 4879, 4691, 1792, 4682,
	4466, 3659, 1274, 1272, 773, 3623, 1789, 3683, 4439, 2180,
	4227, 3533, 4185, 4047, 3497, 3374, 3548, 1787, 1025, 1272,
	3778, 3541, 3149, 3736, 2434, 2456, 1764, 1576, 3666, 1762,
	3735, 3149, 3577, 1734, 3467, 3554, 3337, 3681, 3562, 1576,
	3564, 1576, 3555, 3557, 918, 919, 3556, 4778, 3267, 1272,
	3703, 847, 848, 1636, 3547, 3089, 3007, 4663, 3610, 1634,
	935, 3945, 3001, 3580, 2955, 1732, 1730, 2868, 3586, 2465,
	3674, 3692, 3417, 3418, 3419, 3598, 3561, 2354, 3740, 3604,
	3599, 1728, 3611, 3624, 3605, 3627, 1726, 2988, 1414, 2022,
	1720, 1414, 2018, 1714, 1712, 1633, 1793, 1674, 4549, 3375,
	3758, 3757, 1813, 2401, 2274, 3201, 3200, 3167, 2484, 3612,
	1751, 3750, 2404, 3597, 3677, 2315, 2294, 3603, 2093, 2091,
	1927, 1687, 3682, 1606, 1269, 1152, 2663, 4852, 3631, 4304,
	4000, 1152, 1152, 2963, 272, 1152, 1152, 1152, 3999, 1152,
	1269, 3684, 1040, 1268, 3731, 3662, 3733, 3663, 1152, 2063,
	3616, 3664, 4308, 4288, 4767, 182, 182, 1152, 834, 1268,
	3668, 4386, 1152, 4313, 3589, 1030, 1029, 4301, 1414, 4240,
	1269, 837, 4216, 3691, 4239, 4087, 1093, 1152, 3689, 1521,
	1521, 3756, 4914, 3701, 3702, 1414, 1791, 3698, 2029, 1268,
	4078, 4016, 3997, 3970, 1788, 2063, 2063, 1152, 1152, 3968,
	1152, 1152, 1152, 3755, 3946, 1786, 3670, 2433, 2458, 3665,
	3655, 3753, 1026, 2457, 1763, 3119, 3111, 1761, 1152, 4381,
	3759, 1733, 1152, 3104, 2063, 2063, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152, 1152,
	1152, 1152, 1152, 1152, 1152, 1152, 3831, 1152, 3832, 2351,
	3734, 1521, 3764, 1731, 1729, 1152, 1152, 2063, 3781, 3744,
	3096, 3745, 1152, 3746, 3082, 3791, 3792, 2365, 2367, 1727,
	3081, 3062, 2887, 1152, 1725, 2882, 2321, 3761, 1719, 2292,
	2370, 1713, 1711, 1632, 1274, 1274, 2400, 2273, 1152, 2290,
	2267, 2250, 2378, 2213, 2381, 2382, 2383, 2200, 2186, 2126,
	2123, 2120, 2117, 1045, 1047, 1049, 2112, 2110, 2106, 2097,
	3799, 3680, 1249, 4909, 3600, 4836, 1822, 3786, 2035, 2259,
	1414, 3788, 4370, 3246, 4931, 2148, 4660, 3219, 3905, 1114,
	2136, 2137, 3798, 1355, 1355, 3217, 3055, 1027, 1250, 4817,
	4729, 1272, 4371, 4402, 3814, 3805, 3807, 3808, 1355, 1355,
	3892, 828, 1355, 4320, 4231, 3150, 3821, 3870, 2515, 3822,
	2167, 1587, 4604, 1270, 1028, 3829, 2943, 4597, 4099, 3830,
	2195, 1152, 2060, 1335, 2918, 3834, 3809, 2468, 2918, 1270,
	3537, 3538, 3877, 3539, 3862, 3836, 2051, 2515, 3837, 2916,
	1152, 3916, 3917, 2940, 2391, 3871, 1784, 1785, 2333, 3828,
	1334, 2428, 182, 2423, 1344, 2398, 3929, 3930, 3863, 1270,
	3936, 4816, 4280, 4315, 1829, 1830, 1710, 1031, 2946, 3247,
	3866, 1152, 1152, 2466, 1829, 1830, 4622, 1823, 3882, 3883,
	4493, 3879, 3880, 3601, 3581, 3582, 4194, 3583, 3937, 4172,
	3528, 2947, 3938, 2968, 1832, 1826, 1362, 3728, 1302, 1251,
	2947, 4012, 4934, 2135, 4925, 263, 4887, 1152, 1152, 3894,
	3726, 3950, 1269, 3080, 4075, 1152, 2317, 1373, 3014, 2467,
	3719, 3012, 3021, 4011, 3003, 3005, 1160, 2057, 2057, 1831,
	2951, 1268, 3969, 1335, 3971, 1335, 3895, 1576, 3004, 1831,
	1576, 2949, 4776, 2950, 4758, 1355, 4728, 4722, 4659, 4588,
	4556, 4470, 699, 4085, 1521, 4077, 4064, 3932, 3902, 3669,
	3126, 2779, 2132, 3986, 3988, 2044, 3981, 4971, 4492, 2991,
	2063, 1533, 270, 270, 270, 1532, 705, 706, 3455, 721,
	705, 721, 732, 4807, 3985, 772, 3925, 5001, 4808, 792,
	3343, 3344, 1829, 1830, 798, 4807, 4724, 4002, 834, 4014,
	4808, 270, 1543, 3730, 4164, 4015, 2659, 3973, 4944, 3921,
	4008, 837, 1576, 3978, 4034, 2910, 2911, 1697, 1152, 3721,
	2908, 2909, 911, 1696, 2910, 2908, 1274, 1152, 2694, 270,
	4101, 4057, 4084, 4589, 3720, 4031, 4032, 1576, 1576, 1576,
	1766, 2963, 3132, 1765, 1576, 1576, 1576, 4531, 4317, 4092,
	4312, 4311, 4108, 4160, 3920, 3810, 4046, 3594, 3591, 3149,
	1921, 1920, 4036, 3221, 2472, 4045, 1576, 4988, 4952, 4112,
	4822, 4762, 1414, 1272, 1272, 4761, 4093, 4760, 4690, 4689,
	4096, 4071, 4639, 4559, 4523, 4463, 4457, 4358, 4338, 4024,
	3729, 4278, 4222, 4115, 4059, 4035, 4105, 4051, 4027, 1414,
	4063, 4116, 1152, 1152, 3966, 3958, 3673, 4072, 1152, 1152,
	2063, 4076, 3672, 1152, 1152, 4095, 1152, 4050, 3522, 3473,
	4026, 1152, 3206, 3198, 3175, 3174, 3173, 3172, 3717, 3110,
	3083, 2941, 1152, 3508, 2878, 2872, 2861, 2860, 2849, 2588,
	2459, 2429, 2422, 2421, 4079, 2420, 2419, 2418, 1152, 2331,
	2305, 1270, 2301, 4081, 2300, 2299, 4094, 2298, 4025, 705,
	705, 4107, 2297, 2100, 2099, 4103, 4102, 270, 4127, 2098,
	2096, 2034, 4128, 4097, 4114, 4113, 2033, 1783, 4145, 1782,
	1721, 1601, 1600, 1599, 1598, 4146, 1597, 1596, 1595, 1590,
	1586, 1584, 1583, 1526, 1269, 1269, 1525, 1524, 1405, 1404,
	1403, 4129, 1402, 1401, 1365, 1321, 1320, 1319, 1318, 1274,
	1317, 4158, 1316, 1268, 1268, 1315, 1313, 1274, 1308, 4154,
	4139, 1414, 1414, 1412, 1414, 1307, 1306, 1305, 1304, 904,
	8, 1274, 1232, 2138, 1051, 1037, 4665, 4257, 2499, 4256,
	4199, 4255, 1576, 1576, 2455, 93, 1592, 866, 87, 3727,
	3722, 3723, 3724, 3725, 2257, 1414, 3965, 1003, 4804, 4694,
	1567, 874, 4786, 4073, 3524, 3437, 3026, 2403, 1722, 2405,
	4134, 3432, 2821, 4750, 4168, 3305, 4629, 4432, 2662, 1925,
	3386, 89, 1136, 1182, 4349, 1274, 4348, 1274, 4217, 4218,
	4232, 4233, 4241, 3952, 3642, 4345, 4184, 4344, 2048, 2050,
	1100, 2057, 1417, 4830, 2149, 1142, 2165, 4202, 4204, 2158,
	1355, 4220, 2862, 4268, 2738, 1159, 4281, 1156, 2052, 4264,
	1414, 4264, 1355, 2054, 4226, 1355, 1158, 4229, 1157, 2053,
	4283, 4284, 4191, 1344, 1945, 1155, 2047, 1152, 4083, 182,
	1414, 3130, 4198, 3699, 4201, 1642, 1640, 4207, 4196, 4197,
	1005, 4211, 4208, 4195, 2060, 2060, 2153, 2582, 2646, 3294,
	1918, 4200, 1116, 1138, 4316, 1272, 4318, 4236, 2051, 2051,
	4282, 4267, 2643, 1296, 1114, 1114, 1114, 1127, 1576, 1576,
	1115, 3412, 3391, 4228, 2756, 4238, 3686, 3901, 2494, 884,
	3340, 2649, 1498, 4215, 1287, 2762, 2754, 2750, 3483, 3120,
	1799, 4446, 4342, 1896, 3131, 1795, 1355, 1399, 2321, 1120,
	2580, 1909, 3272, 2504, 3693, 3435, 2855, 4810, 1414, 4302,
	3818, 3204, 2309, 1576, 3168, 3728, 4310, 4339, 4319, 1248,
	1247, 1294, 1246, 1270, 1270, 4336, 4792, 4789, 3726, 2247,
	4352, 4300, 3637, 3638, 2141, 2902, 2592, 3656, 3719, 1132,
	1520, 2447, 1576, 1576, 1576, 1576, 1576, 1576, 4378, 4373,
	4389, 3751, 3397, 4062, 4329, 1603, 797, 4500, 1414, 1144,
	1881, 3051, 3050, 4335, 4654, 4297, 1384, 1382, 1381, 1380,
	1152, 1152, 1152, 4961, 3961, 4287, 1269, 4390, 3960, 4328,
	4327, 3959, 237, 3240, 1820, 1812, 234, 4296, 1414, 4347,
	4299, 4343, 236, 1152, 4384, 1268, 1152, 1152, 4354, 4364,
	235, 4359, 4355, 3906, 4337, 3441, 1152, 4885, 4393, 2063,
	3983, 3628, 4286, 23, 1152, 1152, 22, 21, 116, 42,
	4391, 3730, 20, 4398, 155, 4295, 133, 152, 4298, 151,
	125, 1414, 150, 1576, 149, 148, 147, 3721, 1272, 154,
	4080, 146, 145, 4405, 4404, 140, 1272, 4424, 1355, 144,
	1907, 4375, 3720, 143, 1912, 4412, 142, 4413, 141, 139,
	1272, 137, 138, 132, 136, 1414, 135, 134, 131, 130,
	4419, 4372, 129, 1152, 128, 127, 126, 124, 4407, 156,
	123, 122, 4411, 4429, 121, 120, 1152, 119, 118, 117,
	785, 786, 61, 60, 115, 1152, 113, 114, 19, 40,
	2063, 14, 65, 66, 18, 13, 4465, 4130, 3729, 1152,
	4452, 4453, 1152, 35, 1272, 92, 1272, 105, 4441, 104,
	4435, 103, 36, 101, 1289, 100, 1152, 34, 17, 1152,
	4473, 16, 4474, 15, 98, 97, 1414, 96, 33, 31,
	4503, 11, 4455, 1355, 4456, 9, 37, 2006, 12, 5,
	187, 186, 189, 1576, 1576, 1576, 185, 188, 1310, 1269,
	4482, 91, 2184, 184, 183, 4475, 1344, 1269, 4472, 90,
	270, 29, 270, 270, 1274, 1339, 270, 1349, 1268, 10,
	179, 1269, 2021, 4548, 4514, 4515, 1268, 4578, 1363, 4069,
	4536, 82, 181, 180, 178, 4522, 792, 4558, 177, 792,
	1268, 3639, 4569, 4524, 176, 83, 4577, 1414, 4264, 80,
	1576, 175, 86, 4525, 174, 1270, 4562, 4532, 2060, 4534,
	81, 4535, 4520, 270, 85, 270, 270, 1339, 2321, 270,
	270, 84, 2051, 27, 1349, 1269, 4533, 1269, 6, 4551,
	64, 4603, 4585, 1152, 1152, 7, 4526, 4598, 270, 4550,
	1545, 4607, 1344, 4609, 1268, 4555, 1268, 4414, 4566, 3737,
	1152, 2063, 4560, 4512, 108, 4576, 1565, 3727, 3722, 3723,
	3724, 3725, 109, 1580, 4599, 38, 4601, 78, 77, 76,
	4581, 75, 1355, 26, 63, 1355, 25, 1355, 1355, 4553,
	4554, 173, 1605, 4595, 218, 1349, 4540, 4606, 4605, 270,
	270, 217, 1339, 216, 215, 1152, 2169, 1152, 4600, 1152,
	214, 4393, 213, 212, 211, 206, 210, 208, 4539, 1274,
	207, 209, 205, 792, 228, 270, 270, 227, 221, 220,
	226, 4617, 1152, 225, 1274, 224, 223, 1668, 4618, 4619,
	4638, 222, 219, 4640, 4649, 4641, 4642, 1675, 231, 204,
	203, 1498, 911, 4264, 4621, 202, 4538, 200, 196, 199,
	201, 198, 197, 195, 230, 229, 72, 4647, 4264, 4648,
	4627, 171, 172, 71, 170, 169, 4306, 168, 167, 166,
	165, 4644, 164, 4676, 70, 24, 2, 1, 1274, 1274,
	4669, 0, 0, 0, 0, 1152, 1152, 0, 1270, 4697,
	0, 4670, 0, 3230, 0, 1152, 1270, 0, 0, 0,
	0, 0, 1274, 0, 0, 1274, 0, 0, 4677, 1576,
	1270, 0, 4264, 4264, 4685, 0, 0, 0, 0, 1576,
	270, 0, 0, 0, 0, 4357, 4687, 0, 0, 4686,
	0, 0, 2057, 1152, 1152, 0, 4264, 0, 4374, 4264,
	0, 0, 2285, 1152, 270, 4692, 4709, 0, 0, 4746,
	0, 4747, 4718, 0, 0, 4726, 4723, 1114, 4725, 0,
	0, 4397, 4711, 4712, 1270, 1498, 1270, 4731, 4719, 4720,
	0, 4740, 0, 4739, 2756, 2756, 4744, 4745, 0, 4743,
	0, 0, 0, 4581, 4742, 0, 4732, 0, 0, 4734,
	4763, 1152, 1152, 4755, 0, 1152, 0, 4759, 0, 1355,
	0, 0, 1355, 1272, 0, 0, 2057, 0, 0, 0,
	0, 0, 0, 0, 4766, 0, 4764, 0, 0, 0,
	4774, 4775, 4809, 0, 0, 0, 4812, 0, 4754, 0,
	4806, 4813, 4782, 4791, 4794, 4783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4800, 0,
	0, 0, 0, 0, 0, 0, 0, 4801, 4835, 0,
	4802, 0, 1152, 1152, 1152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4796, 0, 3607, 0, 0,
	0, 4818, 0, 0, 0, 0, 4795, 4833, 0, 4823,
	4799, 4826, 0, 0, 4834, 0, 0, 0, 1152, 4866,
	0, 0, 0, 4847, 4848, 3632, 0, 0, 4850, 4871,
	4849, 1498, 0, 0, 0, 0, 3660, 4867, 0, 0,
	0, 0, 0, 0, 1269, 0, 4892, 0, 0, 0,
	2184, 2175, 0, 0, 0, 4893, 2176, 0, 0, 4894,
	4902, 0, 4869, 1268, 1521, 705, 4900, 0, 1272, 0,
	0, 4884, 0, 4882, 1152, 0, 2756, 2756, 2756, 2756,
	0, 4899, 1355, 1272, 4898, 4558, 270, 0, 270, 4915,
	3709, 0, 270, 1084, 0, 1024, 4907, 4912, 4908, 4906,
	0, 0, 3732, 4932, 0, 1545, 1339, 2026, 270, 0,
	270, 2032, 0, 4881, 4928, 4883, 4926, 0, 270, 1086,
	721, 0, 4935, 0, 0, 270, 4947, 0, 4924, 4948,
	4936, 0, 1274, 4955, 1274, 4938, 4946, 1272, 1272, 4812,
	4923, 2101, 4943, 0, 4954, 4945, 4957, 2518, 4791, 0,
	4953, 4794, 0, 270, 4921, 4922, 0, 0, 4963, 0,
	270, 1272, 4962, 0, 1272, 1085, 4264, 0, 4264, 0,
	2177, 0, 1355, 0, 0, 0, 0, 0, 0, 0,
	1344, 4985, 4978, 0, 4980, 4987, 0, 0, 2181, 1269,
	0, 4986, 4992, 792, 3269, 3270, 0, 0, 4989, 4990,
	0, 0, 1152, 1152, 1269, 4996, 4994, 0, 1268, 0,
	1152, 1025, 1152, 1152, 3132, 0, 4956, 4999, 4958, 2586,
	5005, 5012, 5011, 1268, 0, 5014, 5017, 5013, 0, 5016,
	4983, 5009, 5015, 5020, 5019, 1907, 5018, 0, 0, 0,
	2660, 0, 0, 3132, 0, 0, 0, 0, 5026, 5024,
	0, 5025, 0, 5031, 5028, 0, 5029, 5023, 1269, 1269,
	0, 5027, 5035, 2178, 2183, 0, 2057, 1152, 0, 5037,
	5034, 0, 5038, 5031, 5040, 5042, 0, 1268, 1268, 2060,
	0, 0, 1269, 1270, 0, 1269, 0, 0, 0, 0,
	2761, 0, 0, 2051, 0, 0, 5008, 0, 1829, 1830,
	0, 1268, 0, 0, 1268, 0, 0, 5006, 5007, 4683,
	0, 0, 2057, 2057, 0, 0, 1498, 0, 0, 0,
	0, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 2831, 4696, 0, 0,
	0, 2057, 2057, 0, 0, 0, 2179, 0, 0, 0,
	0, 0, 0, 2060, 1885, 0, 0, 0, 1030, 1029,
	0, 270, 5039, 1831, 0, 270, 0, 2051, 0, 4730,
	0, 0, 0, 0, 2057, 73, 3367, 3368, 3369, 3370,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 2173, 0, 0, 0, 2185, 0, 0,
	0, 0, 0, 0, 0, 1026, 0, 0, 79, 1498,
	0, 0, 0, 0, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1270, 270,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 1270, 0, 270, 0, 0, 88, 0,
	0, 2171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 0, 0, 0, 705, 0, 270,
	1837, 1272, 0, 1272, 0, 0, 0, 0, 0, 1498,
	0, 792, 0, 0, 2913, 911, 0, 0, 0, 905,
	0, 0, 0, 0, 2172, 0, 0, 1270, 1270, 0,
	0, 0, 49, 4819, 110, 1498, 0, 0, 0, 4821,
	94, 107, 0, 0, 270, 0, 1339, 270, 0, 1859,
	1861, 1270, 0, 0, 1270, 0, 0, 0, 0, 0,
	1027, 792, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 2402, 0, 0, 0,
	4021, 270, 270, 4022, 270, 1083, 270, 1028, 270, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 2756, 2756, 0, 1852, 0, 0,
	0, 2180, 0, 0, 0, 2439, 0, 0, 2440, 0,
	2441, 0, 1269, 0, 1269, 0, 0, 0, 0, 0,
	0, 0, 270, 270, 270, 270, 0, 0, 0, 0,
	1031, 1268, 0, 1268, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 772, 0, 74, 0, 792, 0, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	4109, 4110, 4111, 1498, 1882, 0, 0, 2365, 4117, 4118,
	0, 0, 0, 0, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 0, 2756, 0, 0, 0, 88,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 2594, 0,
	905, 0, 0, 1853, 0, 0, 1498, 0, 0, 2060,
	2060, 0, 0, 49, 0, 110, 0, 0, 0, 0,
	0, 94, 107, 2051, 2051, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 2060,
	0, 0, 0, 0, 0, 190, 102, 2057, 0, 106,
	0, 0, 2051, 2051, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 705,
	0, 2060, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 95, 0, 906, 270, 2051, 0, 0, 153, 2761,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	270, 1270, 705, 1270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 4213, 4214, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 1349, 0, 0, 0,
	0, 0, 0, 0, 3774, 3775, 0, 0, 0, 157,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	2761, 2761, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 1349, 232, 0, 721, 0,
	721, 73, 0, 0, 2877, 233, 0, 0, 0, 0,
	270, 0, 0, 270, 0, 0, 0, 270, 74, 270,
	0, 0, 0, 0, 1339, 0, 270, 270, 0, 1349,
	1349, 2893, 0, 193, 79, 0, 270, 0, 0, 0,
	99, 0, 0, 0, 3838, 3839, 3840, 3841, 3842, 3843,
	3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853,
	3854, 3855, 3856, 3857, 0, 3861, 0, 0, 1829, 1830,
	73, 2365, 0, 0, 88, 0, 0, 3044, 0, 0,
	0, 0, 2930, 0, 0, 0, 0, 74, 0, 0,
	0, 1860, 0, 270, 0, 0, 190, 102, 1832, 0,
	106, 0, 0, 79, 0, 0, 0, 270, 0, 0,
	3034, 3032, 0, 0, 0, 905, 0, 3036, 3038, 3028,
	270, 0, 0, 0, 1885, 0, 238, 0, 49, 0,
	110, 792, 0, 1831, 906, 0, 94, 107, 0, 153,
	0, 0, 0, 88, 2060, 4406, 0, 4408, 4409, 4410,
	0, 1829, 1830, 0, 0, 0, 0, 270, 2051, 0,
	3052, 0, 2761, 2761, 2761, 2761, 0, 0, 0, 0,
	0, 0, 0, 0, 1860, 240, 0, 0, 0, 0,
	3398, 1832, 0, 0, 905, 0, 0, 0, 0, 0,
	270, 3072, 0, 0, 0, 0, 95, 0, 0, 110,
	157, 0, 0, 0, 0, 94, 107, 1885, 0, 0,
	0, 0, 0, 3427, 0, 194, 1831, 1545, 0, 0,
	270, 0, 270, 239, 0, 0, 0, 0, 3440, 270,
	0, 0, 0, 0, 0, 0, 4458, 232, 0, 3115,
	1837, 0, 0, 0, 0, 0, 233, 0, 0, 2930,
	0, 705, 0, 0, 3461, 0, 0, 0, 0, 0,
	3144, 911, 2930, 0, 0, 95, 2057, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 2060, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 2051, 0,
	0, 3030, 270, 1339, 270, 0, 0, 0, 0, 0,
	0, 0, 3046, 0, 1349, 270, 0, 0, 1339, 0,
	1339, 0, 1339, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3045, 3035, 3033, 3037, 3039, 3029,
	3031, 3047, 3049, 0, 0, 99, 0, 1852, 0, 1498,
	0, 0, 3041, 3043, 0, 0, 4552, 2057, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 270,
	270, 1339, 1859, 1861, 1339, 0, 270, 0, 0, 0,
	0, 270, 1498, 0, 0, 0, 3053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1498, 0, 0,
	0, 190, 102, 0, 0, 106, 0, 0, 0, 0,
	0, 0, 270, 0, 99, 0, 0, 0, 0, 0,
	270, 0, 0, 1498, 1882, 0, 0, 0, 0, 0,
	1852, 238, 0, 0, 0, 0, 0, 0, 0, 906,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1114, 0, 0, 0, 0, 0, 3440,
	190, 102, 0, 0, 106, 0, 0, 1114, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	238, 3048, 0, 1853, 0, 157, 0, 1882, 906, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 2057, 0,
	194, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1545, 0, 0, 240,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 3054, 0, 0,
	0, 0, 0, 1498, 157, 0, 3040, 3042, 0, 1651,
	0, 0, 0, 0, 2756, 0, 1853, 0, 0, 194,
	0, 0, 0, 0, 1865, 0, 0, 239, 0, 0,
	0, 0, 0, 3752, 3343, 3344, 1412, 3361, 3362, 3363,
	0, 232, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 4150, 0, 0, 0,
	0, 0, 2365, 0, 0, 0, 0, 0, 1498, 1829,
	1830, 0, 0, 0, 0, 1884, 0, 0, 193, 0,
	0, 2756, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	2761, 2761, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3358,
	0, 0, 0, 3795, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 2060, 0, 1885, 0, 0, 0, 0,
	3811, 0, 0, 0, 1831, 0, 270, 2051, 0, 0,
	0, 705, 0, 0, 1851, 0, 705, 0, 0, 705,
	0, 0, 705, 705, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 270, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 270, 0,
	2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761, 2761,
	0, 2761, 1498, 0, 0, 1498, 3349, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 270,
	0, 0, 0, 270, 270, 0, 0, 0, 2051, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2930, 2930, 270, 0, 2026, 0, 0, 0,
	0, 0, 2930, 0, 2032, 3904, 0, 0, 2756, 0,
	0, 3365, 0, 2930, 2032, 0, 2930, 2032, 0, 0,
	2032, 0, 1498, 1865, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 270, 270, 2026, 0, 270, 1498,
	0, 2731, 2732, 2733, 2734, 2727, 2728, 2729, 2730, 0,
	0, 1829, 1830, 3359, 4438, 2756, 0, 0, 2026, 0,
	270, 0, 3567, 3567, 0, 0, 0, 1339, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 0,
	2756, 1832, 0, 0, 0, 0, 0, 0, 1852, 2930,
	0, 2930, 0, 3595, 2930, 2026, 0, 0, 2930, 2026,
	0, 0, 792, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 2060, 1831, 0, 0, 0,
	0, 4485, 2707, 2708, 2709, 2710, 1851, 0, 0, 2051,
	1882, 0, 1339, 0, 0, 1848, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 2719, 2720, 2721, 2722, 2715,
	2716, 2717, 2718, 2723, 2724, 2725, 2726, 270, 0, 3633,
	0, 0, 3635, 2930, 0, 1882, 270, 0, 0, 0,
	270, 0, 0, 1349, 1498, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 3777, 0, 3115, 0, 0, 1339, 0, 270, 0,
	0, 2930, 0, 705, 0, 0, 0, 0, 0, 3360,
	2930, 0, 1865, 1854, 1855, 1856, 1857, 0, 1865, 0,
	0, 1858, 0, 1837, 1865, 2703, 2704, 2705, 2706, 2711,
	2712, 2713, 2714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 0, 0, 0, 0, 0, 3743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1861, 1860, 0, 0, 0, 0, 3749,
	0, 1832, 1545, 0, 0, 1339, 270, 0, 270, 0,
	0, 0, 0, 0, 1339, 0, 0, 1846, 1847, 0,
	0, 0, 0, 1884, 0, 0, 0, 1885, 4626, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 1865, 270, 1851, 0, 0, 1865,
	1852, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 1865, 0, 0,
	3355, 3356, 3357, 0, 0, 4653, 0, 3354, 3352, 3353,
	3345, 3346, 3347, 3348, 3350, 3351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4675, 0, 0, 3816, 0, 0, 0, 0, 0, 0,
	0, 3772, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 1865, 1854, 1855, 1856, 1857, 0, 1865, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3343, 3344, 0, 3361, 3362, 3363, 0, 4206,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 1861, 3783, 0, 1498, 0, 0, 0,
	270, 270, 0, 0, 0, 0, 1853, 0, 0, 0,
	4224, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 1498, 0, 705, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 3344, 0, 3361, 3362, 3363, 3358, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3782, 0, 1884, 0, 270, 0, 0,
	0, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 3349, 1498, 1498, 0, 1498, 0,
	2760, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1865, 0, 0, 0, 0, 0, 1865,
	0, 0, 3567, 0, 0, 0, 0, 0, 0, 1498,
	0, 0, 0, 1858, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 3365,
	2026, 0, 270, 3349, 0, 0, 721, 721, 1349, 0,
	0, 0, 0, 1412, 3343, 3344, 0, 3361, 3362, 3363,
	0, 270, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 270, 3115, 1498, 0, 3115, 2032, 0, 0,
	0, 3359, 270, 4430, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 1498, 1884, 0, 270, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 3365, 0,
	2761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2930, 270, 0, 0, 0, 4430, 0, 0, 3358,
	0, 3144, 3144, 0, 0, 0, 0, 911, 2930, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3359, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	2518, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 0, 2761, 0, 0,
	0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 0, 3349, 1882, 0, 0,
	0, 2518, 0, 0, 0, 0, 0, 3360, 0, 0,
	0, 0, 4169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1498, 0, 0, 3343, 3344, 0, 3361, 3362,
	3363, 0, 1099, 0, 0, 0, 0, 0, 3366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3365, 0, 0, 0, 1498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 3360, 0, 0, 0,
	0, 1545, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 1498,
	3358, 0, 0, 3359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1349, 0,
	270, 1349, 0, 0, 2761, 0, 0, 0, 0, 2930,
	2930, 0, 3567, 2930, 0, 0, 1114, 0, 3355, 3356,
	3357, 4266, 0, 4266, 1545, 3354, 3352, 3353, 3345, 3346,
	3347, 3348, 3350, 3351, 0, 2930, 0, 2032, 0, 0,
	1498, 1545, 1545, 270, 2026, 0, 0, 0, 0, 0,
	1882, 2761, 0, 0, 0, 0, 0, 2026, 0, 270,
	2026, 0, 270, 0, 3567, 0, 0, 3349, 0, 0,
	0, 0, 0, 0, 0, 0, 2761, 0, 0, 0,
	0, 1865, 0, 2930, 0, 2930, 270, 3355, 3356, 3357,
	0, 0, 0, 0, 3354, 3352, 3353, 3345, 3346, 3347,
	3348, 3350, 3351, 0, 0, 0, 0, 0, 1865, 0,
	0, 1498, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2930, 2930, 0, 0, 0, 0, 3115, 3115, 3360,
	0, 0, 3365, 0, 4361, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 1865, 0,
	0, 0, 1865, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 3359, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 0, 0, 0, 0, 0, 1865, 0, 1865, 1865,
	1865, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	2760, 2760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3355, 3356, 3357, 0, 0, 0, 0, 3354, 3352, 3353,
	3345, 3346, 3347, 3348, 3350, 3351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 1114,
	1114, 0, 0, 0, 0, 0, 2930, 2032, 0, 2032,
	0, 0, 4477, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 1865, 0, 0, 1865,
	3360, 4501, 1865, 4501, 0, 1865, 0, 0, 0, 0,
	0, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3567, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1114, 1865, 0, 0,
	3364, 0, 2760, 2760, 2760, 2760, 0, 4477, 0, 1865,
	4266, 1865, 0, 1545, 0, 0, 1865, 0, 0, 0,
	2930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4592, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	1358, 3355, 3356, 3357, 0, 0, 0, 0, 3354, 3352,
	3353, 3345, 3346, 3347, 3348, 3350, 3351, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 1099, 1099, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3816, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3567, 4646, 805, 0,
	0, 0, 0, 0, 0, 4477, 0, 0, 0, 0,
	0, 1547, 0, 1553, 0, 1559, 0, 0, 0, 0,
	0, 0, 0, 816, 0, 4266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 721, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 1664, 0, 0, 0,
	0, 0, 0, 0, 4266, 4266, 0, 0, 0, 1677,
	4361, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 4266, 0,
	270, 4266, 0, 822, 0, 0, 0, 0, 0, 0,
	0, 2032, 0, 0, 0, 0, 0, 815, 0, 0,
	1545, 0, 1545, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	1349, 0, 1753, 0, 0, 0, 0, 0, 0, 1829,
	1830, 0, 4772, 0, 0, 1873, 1874, 1875, 814, 0,
	1865, 1865, 0, 1865, 0, 0, 0, 0, 4501, 0,
	0, 270, 1860, 0, 0, 767, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 2930, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 270, 1848, 0, 0, 0, 0, 0, 0,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 0, 0,
	0, 0, 0, 0, 3816, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1906, 0, 0, 0, 0, 1545, 1919,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 807, 1865, 1865, 0,
	2760, 2760, 0, 0, 1865, 0, 0, 0, 0, 4477,
	0, 0, 0, 0, 3364, 3364, 0, 0, 1865, 1865,
	1870, 0, 0, 1880, 0, 0, 0, 811, 1865, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 1978, 1978, 1978, 112, 2930, 0,
	0, 0, 0, 0, 1865, 1846, 1847, 0, 4266, 0,
	4266, 0, 0, 1545, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	817, 0, 0, 0, 0, 0, 809, 0, 1852, 0,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	0, 2760, 3364, 3364, 3364, 3364, 0, 0, 0, 0,
	0, 0, 0, 2930, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 1074, 0, 0, 0, 0,
	0, 3144, 0, 0, 0, 0, 1094, 1865, 0, 0,
	0, 0, 2930, 0, 0, 0, 0, 0, 0, 0,
	0, 813, 0, 0, 0, 1882, 0, 3144, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 808, 0, 0, 0,
	1099, 0, 0, 1258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	819, 820, 0, 1148, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 835, 0, 0, 0,
	0, 0, 0, 1865, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1865, 0, 0, 1865, 3364,
	3364, 1865, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2426, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 1865,
	1865, 1865, 1865, 0, 0, 0, 0, 0, 1865, 2453,
	1865, 0, 0, 3364, 3364, 3364, 3364, 3364, 3364, 3364,
	3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364, 3364,
	3364, 3364, 3364, 0, 0, 0, 3364, 0, 0, 1865,
	1865, 0, 0, 0, 0, 2493, 0, 2497, 0, 0,
	0, 1865, 0, 0, 2511, 0, 0, 0, 0, 0,
	1865, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 0, 2561, 0,
	2563, 2564, 2565, 2566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2590, 0, 1865, 0,
	0, 0, 1829, 1830, 0, 0, 0, 0, 1906, 0,
	0, 0, 2641, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 1865, 2671, 2674,
	2677, 2680, 1832, 0, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 0, 0, 0, 0, 0, 0, 0, 1865, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 2752, 0, 2764, 2766, 2771, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	0, 0, 3771, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 1094, 112, 112, 0, 0, 0, 0,
	0, 1860, 0, 0, 1854, 1855, 1856, 1857, 1832, 0,
	112, 0, 112, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	0, 0, 1865, 1865, 1885, 0, 0, 1865, 1865, 0,
	0, 1865, 1865, 1831, 0, 0, 1865, 0, 0, 0,
	1865, 0, 0, 1851, 0, 1865, 0, 0, 0, 0,
	0, 0, 1848, 1859, 1861, 0, 0, 0, 0, 0,
	2760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1184, 0, 1846, 1847,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 269,
	269, 0, 0, 269, 0, 0, 0, 0, 3258, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2760, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 269, 269, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 1074,
	0, 0, 1865, 0, 0, 0, 0, 0, 1882, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 0, 1846, 1847, 3075, 3076, 1905, 3078,
	0, 0, 1911, 0, 0, 0, 269, 269, 0, 0,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1858, 0, 0, 1852, 0, 0,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 1853, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1865, 1865, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1865, 3364, 2760, 0, 0, 1275, 0, 0,
	1865, 0, 0, 1865, 1882, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1998, 0, 2001, 0, 112, 0, 0, 0,
	3251, 0, 0, 0, 0, 0, 3196, 269, 0, 0,
	3364, 2760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 1865, 0, 0,
	1858, 269, 1837, 0, 0, 1865, 2760, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 1853, 1865, 0, 0, 0, 0, 0,
	0, 0, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 1886, 1887,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 3253, 0, 0, 0, 1852,
	3259, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3364, 0, 0, 0, 0, 0, 0, 0, 3273,
	3274, 0, 0, 0, 0, 2641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 3364, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1845,
	3364, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	3283, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3309, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 2000, 0, 1271, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 269, 2000, 269, 0, 0,
	0, 0, 0, 0, 0, 835, 0, 0, 0, 0,
	0, 0, 835, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2771, 2771, 2771, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	1978, 0, 0, 0, 0, 0, 0, 0, 3402, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3527, 0, 1865, 0, 0, 269, 1865,
	0, 0, 835, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 1074, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3578, 3579,
	0, 1275, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 269, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 269, 1860, 0, 0,
	0, 0, 269, 2579, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 1275, 269, 0,
	269, 0, 0, 1094, 1275, 0, 269, 0, 0, 0,
	1885, 0, 0, 1905, 0, 0, 0, 1905, 0, 1831,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 835, 269,
	1258, 269, 0, 269, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	269, 269, 269, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 2511, 1877, 0, 0, 0, 0, 3769, 3770,
	1846, 1847, 3773, 0, 0, 0, 3776, 0, 0, 0,
	0, 0, 0, 0, 0, 3780, 0, 0, 1868, 0,
	0, 0, 0, 0, 3787, 0, 0, 0, 0, 3402,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3800, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3823, 3824, 0, 3825, 3826, 3827,
	1829, 1830, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 3833, 0, 0, 0, 3835,
	0, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3864, 3865, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	3876, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 1271, 0, 0, 1848, 3885, 1275, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 1858, 1271, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 1853,
	112, 0, 0, 112, 2064, 112, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 3941, 0,
	0, 112, 1837, 0, 112, 0, 0, 0, 1884, 0,
	112, 269, 0, 0, 0, 0, 0, 3953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	269, 0, 0, 0, 269, 0, 269, 0, 0, 0,
	0, 0, 0, 269, 269, 0, 0, 0, 0, 3982,
	0, 1859, 1861, 269, 0, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	1869, 0, 0, 0, 4003, 4004, 112, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 1852,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1275, 1275, 1978, 0, 0, 0, 0,
	0, 0, 0, 1275, 4104, 0, 0, 835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 835,
	0, 0, 1858, 0, 1905, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4147,
	4148, 0, 0, 0, 0, 4152, 4153, 0, 0, 0,
	4156, 4157, 0, 0, 0, 0, 0, 0, 4161, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 1275, 4165,
	1275, 0, 1275, 0, 0, 0, 0, 0, 0, 269,
	0, 269, 0, 0, 1884, 4170, 0, 0, 0, 0,
	1275, 1275, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 1275, 1275, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 269, 269, 269, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 2064, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 112, 112, 0, 112, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 4425, 4426, 4427,
	1275, 0, 0, 0, 0, 0, 112, 112, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	2511, 0, 0, 4436, 4437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 4445, 4448, 0, 0, 1837, 0, 1271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 2000, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	1876, 0, 1877, 4502, 0, 0, 0, 0, 0, 1846,
	1847, 0, 4510, 0, 1258, 0, 0, 1094, 0, 0,
	0, 0, 0, 0, 0, 0, 4518, 1868, 0, 1099,
	0, 112, 112, 0, 0, 0, 269, 0, 0, 0,
	269, 269, 1852, 4527, 0, 0, 4529, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1878,
	2064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 269, 269, 0, 0, 269, 0, 0, 0, 1882,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 4652, 0, 0, 1871, 4656, 0, 0, 0,
	0, 0, 0, 0, 835, 1275, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 269, 1275, 0,
	1275, 0, 0, 0, 0, 0, 1161, 1884, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 1275, 0, 0,
	0, 0, 0, 0, 0, 1271, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1258, 1258, 0, 0,
	0, 0, 271, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 1099, 1099, 0, 0, 0, 0, 0, 0,
	0, 0, 4727, 0, 0, 0, 0, 0, 0, 1869,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 271,
	4177, 2511, 0, 269, 4176, 269, 0, 0, 0, 0,
	4448, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4846,
	4846, 4846, 0, 0, 0, 737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4870, 0, 739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 758,
	0, 0, 0, 0, 0, 0, 1264, 1271, 1271, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4846, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 0, 741, 0, 0, 0, 0,
	0, 0, 265, 265, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 742, 0,
	0, 743, 0, 0, 835, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 0, 0, 0, 0, 0,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 4846,
	5000, 0, 0, 0, 0, 0, 1275, 5004, 0, 1275,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 0, 0, 269, 1275, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 269,
	0, 1258, 0, 1866, 1860, 0, 0, 0, 0, 1258,
	0, 1832, 0, 0, 0, 0, 0, 0, 269, 0,
	1879, 0, 0, 0, 764, 0, 745, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 269,
	0, 0, 0, 0, 0, 2064, 1831, 0, 0, 269,
	0, 0, 0, 0, 269, 765, 1851, 746, 0, 269,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 747, 0, 0, 0,
	0, 762, 763, 760, 0, 0, 0, 0, 0, 755,
	0, 0, 748, 269, 0, 1275, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 752, 0,
	0, 0, 0, 0, 0, 749, 0, 756, 0, 0,
	1275, 0, 0, 0, 0, 750, 0, 0, 735, 0,
	0, 0, 0, 736, 1275, 0, 1275, 112, 0, 751,
	1275, 0, 1870, 0, 759, 1880, 0, 0, 1275, 0,
	112, 0, 1859, 1861, 0, 0, 0, 0, 768, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 753,
	1877, 0, 737, 112, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 738, 0, 0, 0, 0, 1275, 0,
	271, 0, 271, 271, 0, 1868, 271, 0, 0, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	1852, 0, 1271, 1275, 0, 0, 0, 0, 0, 0,
	1271, 0, 0, 0, 0, 1275, 758, 1275, 0, 0,
	0, 0, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 1418, 271, 271, 740, 0, 271,
	271, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 271, 0,
	0, 0, 741, 0, 1275, 0, 1867, 1275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 2000, 0,
	2000, 1418, 0, 0, 0, 742, 0, 0, 743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 767, 0, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 2064, 0, 1418, 0, 0,
	757, 0, 0, 1858, 1418, 271, 271, 0, 0, 0,
	0, 0, 0, 269, 1275, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2064, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 754, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 2064, 269, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 269, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2064, 0, 0, 0, 0, 0, 0,
	271, 0, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1275, 2579, 745, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1325, 0, 1325, 1325, 0, 0, 0, 1869, 0, 0,
	0, 0, 765, 0, 746, 0, 1275, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 827, 3318, 0,
	0, 0, 3319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 766, 0, 0, 0, 1519,
	0, 0, 0, 747, 0, 827, 0, 0, 762, 763,
	760, 0, 0, 0, 0, 0, 755, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 756, 0, 0, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 751, 0, 0, 0,
	0, 759, 0, 0, 0, 1657, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 768, 0, 269, 0, 0,
	0, 112, 0, 0, 0, 0, 753, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 0, 0, 271, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	1774, 0, 0, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 1275, 271, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1275, 1275, 1275, 0, 0, 0, 0,
	1275, 1275, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 112, 1275, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 1275, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 2064, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 2000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2000, 0, 269, 2000, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 1275, 1275, 0,
	1275, 0, 0, 0, 0, 0, 0, 1275, 0, 0,
	0, 271, 0, 1418, 1418, 271, 0, 0, 1275, 1275,
	0, 0, 0, 1418, 0, 0, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	1519, 1275, 0, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 271, 1275, 0, 0, 0,
	0, 0, 0, 1325, 0, 0, 0, 0, 0, 269,
	1519, 271, 0, 271, 0, 0, 1275, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	1418, 0, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 1418, 0, 0, 1275, 1275, 0, 0, 0, 0,
	0, 0, 0, 1418, 271, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 1418, 1418, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 1275,
	0, 271, 271, 0, 271, 0, 271, 0, 271, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 1275,
	1275, 1275, 1275, 1275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 2000, 0, 2000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2064, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 1275, 0, 1275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2307,
	0, 0, 0, 2314, 0, 0, 2064, 0, 0, 0,
	0, 0, 0, 1577, 0, 2327, 0, 0, 0, 0,
	1577, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2339, 0, 2339, 0, 0, 1577, 0, 0, 2346,
	0, 0, 1275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	1275, 1275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 0, 0, 2314, 0, 0, 2374, 0, 0,
	0, 1418, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2394, 0,
	0, 0, 0, 1275, 271, 0, 1275, 1418, 0, 0,
	0, 0, 2410, 0, 2412, 0, 2414, 0, 2416, 0,
	2417, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	0, 0, 2444, 2445, 2446, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 271, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	0, 0, 0, 0, 0, 1275, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 0, 855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 1418, 0, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 1275, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 859, 0, 876, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 1275, 0, 0, 0, 1275, 0, 0, 0, 0,
	0, 0, 0, 860, 0, 1275, 0, 0, 861, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 1418, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 883, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1578, 0, 0, 0, 827, 0, 856, 0, 0, 0,
	271, 827, 271, 0, 2828, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 863,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 887, 1418, 1578, 0, 0, 767,
	0, 0, 0, 1578, 0, 0, 0, 0, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	0, 0, 0, 271, 0, 0, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 271, 0, 0, 0, 0, 0,
	2879, 0, 0, 1325, 0, 271, 0, 1325, 0, 1325,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 2327, 1578, 0, 0,
	0, 0, 881, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1860, 271, 271, 271,
	271, 0, 0, 1832, 0, 0, 271, 0, 0, 0,
	0, 271, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 865, 0, 1831, 0,
	0, 0, 271, 0, 0, 0, 0, 867, 1851, 0,
	271, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 868, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1577,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 854, 0, 878, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 869, 0, 1837, 0, 0, 0, 0,
	2314, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 870, 1880, 0, 0,
	871, 890, 0, 889, 1859, 1861, 872, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 1577, 0, 1577, 0,
	873, 0, 0, 3166, 0, 882, 0, 0, 0, 1846,
	1847, 891, 0, 888, 0, 0, 1577, 1577, 0, 768,
	0, 0, 3177, 0, 3180, 0, 0, 1868, 0, 1577,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 1852, 1577, 1577, 1577, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3212, 1519, 3214,
	1519, 0, 0, 0, 0, 0, 3220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	3249, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 1415, 1858, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 271, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1578, 1578, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 1418, 0, 1415, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 1418, 0, 1418, 0, 0, 0,
	1418, 0, 0, 0, 0, 0, 0, 271, 1418, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 1418,
	271, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	0, 1578, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 3450, 0,
	0, 0, 0, 1418, 1578, 0, 1578, 1578, 1578, 0,
	0, 0, 0, 0, 0, 1418, 0, 1418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1325,
	0, 1415, 0, 1519, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 1418, 0, 271, 1418, 271, 0,
	0, 0, 0, 0, 3496, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1885, 0, 0, 3544, 3546, 0, 0, 2327, 0,
	1831, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1416, 0, 1848,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 1577, 0, 0, 0, 0, 0, 1837, 0, 0,
	1416, 0, 0, 0, 1577, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3657, 0, 0, 0,
	3661, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 1418, 0, 0, 0,
	1416, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1416, 271, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3754, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 3767, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 0, 1418, 1858, 0, 0,
	0, 0, 271, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 1418, 1418, 1418, 0, 0, 0, 0,
	1418, 1418, 1418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 271, 0, 1418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 1418, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 2637, 0, 1578, 0, 2638, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1578, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 1418, 0,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	0, 0, 2327, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 2327, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2327, 0, 0,
	0, 0, 4086, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4132, 0, 0, 0,
	0, 0, 0, 0, 1418, 1418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1577, 0, 1577, 0, 1418, 271, 1415, 0, 0, 1418,
	0, 0, 0, 827, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1418, 1418,
	1418, 1418, 1418, 1418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1577,
	0, 0, 0, 0, 1418, 0, 0, 0, 0, 0,
	0, 1577, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1418, 0, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4285, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 1418, 0, 0, 0, 0, 1415, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1418,
	1418, 1418, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 2327, 0, 0, 0, 0,
	0, 0, 0, 1418, 0, 4385, 1418, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 1578,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1578, 0, 1578, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 1578, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 4487, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 1578, 0, 0, 1418, 1868, 0, 0, 0,
	0, 0, 0, 0, 1578, 1418, 1578, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 1577,
	2327, 0, 1577, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1416, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 1577, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4616, 1519, 1577,
	1577, 1577, 0, 0, 0, 0, 1577, 1577, 1577, 0,
	0, 0, 271, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 1577, 0,
	1416, 0, 0, 0, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	4733, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 1415, 1415, 0, 1415, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1577, 1577, 0, 0, 0, 0,
	0, 0, 0, 4175, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 1578, 0, 0, 0, 0,
	1577, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 0,
	0, 0, 0, 0, 1577, 1577, 1577, 1577, 1577, 1577,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	1415, 0, 1578, 1578, 1578, 0, 0, 0, 0, 1578,
	1578, 1578, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	1415, 1578, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1851, 0, 0, 0, 0,
	0, 0, 0, 1415, 1848, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 1851, 1416, 1416, 0, 1416,
	0, 0, 0, 0, 1848, 1577, 1577, 1577, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 1578, 1578, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 1577, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 1578, 1578, 0, 1882, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 1578, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 1578, 1578,
	1578, 1578, 1578, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 1867, 0, 0, 0, 0,
	0, 1577, 0, 1416, 0, 0, 1882, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1871, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 1416, 0, 0, 1578, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 1578, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 1578, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 2806, 0, 0, 0,
	0, 0, 0, 0, 2807, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 3794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3796, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4205, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4203, 279, 281, 280, 282,
	283, 284, 285, 1419, 286, 287, 1420, 1421, 1422, 0,
	1423, 647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 1428, 652, 298, 299, 300, 301, 302, 303,
	1429, 1430, 0, 304, 653, 654, 655, 1431, 305, 306,
	656, 1432, 1499, 1433, 307, 308, 309, 310, 311, 312,
	313, 0, 1434, 315, 316, 317, 314, 318, 1435, 319,
	0, 320, 321, 322, 323, 324, 325, 1436, 326, 327,
	328, 1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441,
	1442, 1443, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 1444, 342, 338, 340, 1445, 343, 341, 344,
	1446, 345, 346, 347, 1447, 1448, 348, 349, 350, 1449,
	351, 352, 353, 1450, 354, 355, 356, 1451, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 1452, 276, 1453, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	1454, 375, 376, 377, 1455, 1456, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1457, 390, 665, 1458, 666, 391, 1459, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	1460, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1461, 1218, 407, 670, 671, 1462, 672,
	1463, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1464, 420, 422, 421, 1465, 423, 674, 1223, 424, 425,
	1224, 1466, 426, 427, 428, 429, 430, 431, 434, 1467,
	1468, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1469, 278, 1227, 478, 479, 480, 1470, 675, 481, 676,
	483, 484, 1471, 0, 485, 0, 1472, 1473, 487, 488,
	489, 1474, 1475, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1476, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 1477, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 1478, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1479,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1480, 570, 571, 569, 572, 573,
	574, 1481, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 1482,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 1483, 603, 604,
	0, 600, 591, 1484, 605, 606, 607, 608, 609, 610,
	611, 612, 1485, 613, 688, 689, 690, 691, 1486, 622,
	1487, 614, 615, 616, 692, 617, 693, 1488, 618, 619,
	620, 621, 0, 623, 624, 1489, 1490, 625, 626, 627,
	629, 630, 628, 631, 1491, 632, 1492, 0, 633, 634,
	635, 694, 695, 696, 1493, 637, 636, 638, 639, 697,
	640, 641, 1494, 1495, 1496, 1497, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4431, 279, 281, 280, 282, 283,
	284, 285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423,
	647, 1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 1428, 652, 298, 299, 300, 301, 302, 303, 1429,
	1430, 0, 304, 653, 654, 655, 1431, 305, 306, 656,
	1432, 1499, 1433, 307, 308, 309, 310, 311, 312, 313,
	0, 1434, 315, 316, 317, 314, 318, 1435, 319, 0,
	320, 321, 322, 323, 324, 325, 1436, 326, 327, 328,
	1216, 329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442,
	1443, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 1444, 342, 338, 340, 1445, 343, 341, 344, 1446,
	345, 346, 347, 1447, 1448, 348, 349, 350, 1449, 351,
	352, 353, 1450, 354, 355, 356, 1451, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 1452, 276, 1453, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 1454,
	375, 376, 377, 1455, 1456, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1457, 390, 665, 1458, 666, 391, 1459, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 1460,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1461, 1218, 407, 670, 671, 1462, 672, 1463,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1464,
	420, 422, 421, 1465, 423, 674, 1223, 424, 425, 1224,
	1466, 426, 427, 428, 429, 430, 431, 434, 1467, 1468,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1469,
	278, 1227, 478, 479, 480, 1470, 675, 481, 676, 483,
	484, 1471, 0, 485, 0, 1472, 1473, 487, 488, 489,
	1474, 1475, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 1476, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 1477, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 1478, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 1479, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 1480, 570, 571, 569, 572, 573, 574,
	1481, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 1482, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 1483, 603, 604, 0,
	600, 591, 1484, 605, 606, 607, 608, 609, 610, 611,
	612, 1485, 613, 688, 689, 690, 691, 1486, 622, 1487,
	614, 615, 616, 692, 617, 693, 1488, 618, 619, 620,
	621, 0, 623, 624, 1489, 1490, 625, 626, 627, 629,
	630, 628, 631, 1491, 632, 1492, 0, 633, 634, 635,
	694, 695, 696, 1493, 637, 636, 638, 639, 697, 640,
	641, 1494, 1495, 1496, 1497, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4294, 279, 281, 280, 282, 283, 284,
	285, 1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647,
	1424, 1425, 1426, 1427, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	1428, 652, 298, 299, 300, 301, 302, 303, 1429, 1430,
	0, 304, 653, 654, 655, 1431, 305, 306, 656, 1432,
	1499, 1433, 307, 308, 309, 310, 311, 312, 313, 0,
	1434, 315, 316, 317, 314, 318, 1435, 319, 0, 320,
	321, 322, 323, 324, 325, 1436, 326, 327, 328, 1216,
	329, 330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	1444, 342, 338, 340, 1445, 343, 341, 344, 1446, 345,
	346, 347, 1447, 1448, 348, 349, 350, 1449, 351, 352,
	353, 1450, 354, 355, 356, 1451, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 1452, 276, 1453, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 1454, 375,
	376, 377, 1455, 1456, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1457,
	390, 665, 1458, 666, 391, 1459, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 1219, 397, 398, 1460, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1461, 1218, 407, 670, 671, 1462, 672, 1463, 408,
	409, 1220, 673, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1464, 420,
	422, 421, 1465, 423, 674, 1223, 424, 425, 1224, 1466,
	426, 427, 428, 429, 430, 431, 434, 1467, 1468, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1469, 278,
	1227, 478, 479, 480, 1470, 675, 481, 676, 483, 484,
	1471, 0, 485, 0, 1472, 1473, 487, 488, 489, 1474,
	1475, 490, 491, 677, 1228, 492, 1229, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1476, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 1477, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 1478, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 1479, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1480, 570, 571, 569, 572, 573, 574, 1481,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 1482, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 1483, 603, 604, 0, 600,
	591, 1484, 605, 606, 607, 608, 609, 610, 611, 612,
	1485, 613, 688, 689, 690, 691, 1486, 622, 1487, 614,
	615, 616, 692, 617, 693, 1488, 618, 619, 620, 621,
	0, 623, 624, 1489, 1490, 625, 626, 627, 629, 630,
	628, 631, 1491, 632, 1492, 0, 633, 634, 635, 694,
	695, 696, 1493, 637, 636, 638, 639, 697, 640, 641,
	1494, 1495, 1496, 1497, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4133, 279, 281, 280, 282, 283, 284, 285,
	1419, 286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424,
	1425, 1426, 1427, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 1428,
	652, 298, 299, 300, 301, 302, 303, 1429, 1430, 0,
	304, 653, 654, 655, 1431, 305, 306, 656, 1432, 1499,
	1433, 307, 308, 309, 310, 311, 312, 313, 0, 1434,
	315, 316, 317, 314, 318, 1435, 319, 0, 320, 321,
	322, 323, 324, 325, 1436, 326, 327, 328, 1216, 329,
	330, 331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 1444,
	342, 338, 340, 1445, 343, 341, 344, 1446, 345, 346,
	347, 1447, 1448, 348, 349, 350, 1449, 351, 352, 353,
	1450, 354, 355, 356, 1451, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 1452, 276, 1453, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 1454, 375, 376,
	377, 1455, 1456, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1457, 390,
	665, 1458, 666, 391, 1459, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 1460, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1461, 1218, 407, 670, 671, 1462, 672, 1463, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1464, 420, 422,
	421, 1465, 423, 674, 1223, 424, 425, 1224, 1466, 426,
	427, 428, 429, 430, 431, 434, 1467, 1468, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1469, 278, 1227,
	478, 479, 480, 1470, 675, 481, 676, 483, 484, 1471,
	0, 485, 0, 1472, 1473, 487, 488, 489, 1474, 1475,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 1476,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 1477, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 1478, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 1479, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 1480, 570, 571, 569, 572, 573, 574, 1481, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 1482, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 1483, 603, 604, 0, 600, 591,
	1484, 605, 606, 607, 608, 609, 610, 611, 612, 1485,
	613, 688, 689, 690, 691, 1486, 622, 1487, 614, 615,
	616, 692, 617, 693, 1488, 618, 619, 620, 621, 0,
	623, 624, 1489, 1490, 625, 626, 627, 629, 630, 628,
	631, 1491, 632, 1492, 0, 633, 634, 635, 694, 695,
	696, 1493, 637, 636, 638, 639, 697, 640, 641, 1494,
	1495, 1496, 1497, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3812, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3630, 279, 281, 280, 282, 283, 284, 285, 1419, 286,
	287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426,
	1427, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 1428, 652, 298,
	299, 300, 301, 302, 303, 1429, 1430, 0, 304, 653,
	654, 655, 1431, 305, 306, 656, 1432, 1499, 1433, 307,
	308, 309, 310, 311, 312, 313, 0, 1434, 315, 316,
	317, 314, 318, 1435, 319, 0, 320, 321, 322, 323,
	324, 325, 1436, 326, 327, 328, 1216, 329, 330, 331,
	1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 1444, 342, 338,
	340, 1445, 343, 341, 344, 1446, 345, 346, 347, 1447,
	1448, 348, 349, 350, 1449, 351, 352, 353, 1450, 354,
	355, 356, 1451, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	1452, 276, 1453, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 1454, 375, 376, 377, 1455,
	1456, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1457, 390, 665, 1458,
	666, 391, 1459, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 1460, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 1461, 1218,
	407, 670, 671, 1462, 672, 1463, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1464, 420, 422, 421, 1465,
	423, 674, 1223, 424, 425, 1224, 1466, 426, 427, 428,
	429, 430, 431, 434, 1467, 1468, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1469, 278, 1227, 478, 479,
	480, 1470, 675, 481, 676, 483, 484, 1471, 0, 485,
	0, 1472, 1473, 487, 488, 489, 1474, 1475, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1476, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 1477, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	1478, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1479, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1480,
	570, 571, 569, 572, 573, 574, 1481, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 1482, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 1483, 603, 604, 0, 600, 591, 1484, 605,
	606, 607, 608, 609, 610, 611, 612, 1485, 613, 688,
	689, 690, 691, 1486, 622, 1487, 614, 615, 616, 692,
	617, 693, 1488, 618, 619, 620, 621, 0, 623, 624,
	1489, 1490, 625, 626, 627, 629, 630, 628, 631, 1491,
	632, 1492, 0, 633, 634, 635, 694, 695, 696, 1493,
	637, 636, 638, 639, 697, 640, 641, 1494, 1495, 1496,
	1497, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2661,
	279, 281, 280, 282, 283, 284, 285, 1419, 286, 287,
	1420, 1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 1428, 652, 298, 299,
	300, 301, 302, 303, 1429, 1430, 0, 304, 653, 654,
	655, 1431, 305, 306, 656, 1432, 1499, 1433, 307, 308,
	309, 310, 311, 312, 313, 0, 1434, 315, 316, 317,
	314, 318, 1435, 319, 0, 320, 321, 322, 323, 324,
	325, 1436, 326, 327, 328, 1216, 329, 330, 331, 1437,
	1438, 1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 1444, 342, 338, 340,
	1445, 343, 341, 344, 1446, 345, 346, 347, 1447, 1448,
	348, 349, 350, 1449, 351, 352, 353, 1450, 354, 355,
	356, 1451, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 1452,
	276, 1453, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 1454, 375, 376, 377, 1455, 1456,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1457, 390, 665, 1458, 666,
	391, 1459, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 1460, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1461, 1218, 407,
	670, 671, 1462, 672, 1463, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1464, 420, 422, 421, 1465, 423,
	674, 1223, 424, 425, 1224, 1466, 426, 427, 428, 429,
	430, 431, 434, 1467, 1468, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1469, 278, 1227, 478, 479, 480,
	1470, 675, 481, 676, 483, 484, 1471, 0, 485, 0,
	1472, 1473, 487, 488, 489, 1474, 1475, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1476, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 1477, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 1478,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1479, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1480, 570,
	571, 569, 572, 573, 574, 1481, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 1482, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 1483, 603, 604, 0, 600, 591, 1484, 605, 606,
	607, 608, 609, 610, 611, 612, 1485, 613, 688, 689,
	690, 691, 1486, 622, 1487, 614, 615, 616, 692, 617,
	693, 1488, 618, 619, 620, 621, 0, 623, 624, 1489,
	1490, 625, 626, 627, 629, 630, 628, 631, 1491, 632,
	1492, 0, 633, 634, 635, 694, 695, 696, 1493, 637,
	636, 638, 639, 697, 640, 641, 1494, 1495, 1496, 1497,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	1410, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2286, 279,
	281, 280, 282, 283, 284, 285, 1419, 286, 287, 1420,
	1421, 1422, 0, 1423, 647, 1424, 1425, 1426, 1427, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 1428, 652, 298, 299, 300,
	301, 302, 303, 1429, 1430, 0, 304, 653, 654, 655,
	1431, 305, 306, 656, 1432, 1499, 1433, 307, 308, 309,
	310, 311, 312, 313, 0, 1434, 315, 316, 317, 314,
	318, 1435, 319, 0, 320, 321, 322, 323, 324, 325,
	1436, 326, 327, 328, 1216, 329, 330, 331, 1437, 1438,
	1440, 1439, 1441, 1442, 1443, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 1444, 342, 338, 340, 1445,
	343, 341, 344, 1446, 345, 346, 347, 1447, 1448, 348,
	349, 350, 1449, 351, 352, 353, 1450, 354, 355, 356,
	1451, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 1452, 276,
	1453, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 1454, 375, 376, 377, 1455, 1456, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1457, 390, 665, 1458, 666, 391,
	1459, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 1460, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1461, 1218, 407, 670,
	671, 1462, 672, 1463, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1464, 420, 422, 421, 1465, 423, 674,
	1223, 424, 425, 1224, 1466, 426, 427, 428, 429, 430,
	431, 434, 1467, 1468, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1469, 278, 1227, 478, 479, 480, 1470,
	675, 481, 676, 483, 484, 1471, 0, 485, 0, 1472,
	1473, 487, 488, 489, 1474, 1475, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 1476, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 1477, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 1478, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 1479, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 1480, 570, 571,
	569, 572, 573, 574, 1481, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 1482, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	1483, 603, 604, 0, 600, 591, 1484, 605, 606, 607,
	608, 609, 610, 611, 612, 1485, 613, 688, 689, 690,
	691, 1486, 622, 1487, 614, 615, 616, 692, 617, 693,
	1488, 618, 619, 620, 621, 0, 623, 624, 1489, 1490,
	625, 626, 627, 629, 630, 628, 631, 1491, 632, 1492,
	0, 633, 634, 635, 694, 695, 696, 1493, 637, 636,
	638, 639, 697, 640, 641, 1494, 1495, 1496, 1497, 642,
	643, 698, 644, 645, 646, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 1419,
	286, 287, 1420, 1421, 1422, 0, 1423, 647, 1424, 1425,
	1426, 1427, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 1428, 652,
	298, 299, 300, 301, 302, 303, 1429, 1430, 0, 304,
	653, 654, 655, 1431, 305, 306, 656, 1432, 1499, 1433,
	307, 308, 309, 310, 311, 312, 313, 0, 1434, 315,
	316, 317, 314, 318, 1435, 319, 0, 320, 321, 322,
	323, 324, 325, 1436, 326, 327, 328, 1216, 329, 330,
	331, 1437, 1438, 1440, 1439, 1441, 1442, 1443, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 1444, 342,
	338, 340, 1445, 343, 341, 344, 1446, 345, 346, 347,
	1447, 1448, 348, 349, 350, 1449, 351, 352, 353, 1450,
	354, 355, 356, 1451, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 1452, 276, 1453, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 1454, 375, 376, 377,
	1455, 1456, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1457, 390, 665,
	1458, 666, 391, 1459, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 1460, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1461,
	1218, 407, 670, 671, 1462, 672, 1463, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1464, 420, 422, 421,
	1465, 423, 674, 1223, 424, 425, 1224, 1466, 426, 427,
	428, 429, 430, 431, 434, 1467, 1468, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1469, 278, 1227, 478,
	479, 480, 1470, 675, 481, 676, 483, 484, 1471, 0,
	485, 0, 1472, 1473, 487, 488, 489, 1474, 1475, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1476, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 1477, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 1478, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1479, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1480, 570, 571, 569, 572, 573, 574, 1481, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 1482, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 1483, 603, 604, 0, 600, 591, 1484,
	605, 606, 607, 608, 609, 610, 611, 612, 1485, 613,
	688, 689, 690, 691, 1486, 622, 1487, 614, 615, 616,
	692, 617, 693, 1488, 618, 619, 620, 621, 0, 623,
	624, 1489, 1490, 625, 626, 627, 629, 630, 628, 631,
	1491, 632, 1492, 0, 633, 634, 635, 694, 695, 696,
	1493, 637, 636, 638, 639, 697, 640, 641, 1494, 1495,
	1496, 1497, 642, 643, 698, 644, 645, 646, 2636, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 2633, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 2634, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 2632, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 2635, 0, 0, 0, 0,
	0, 0, 0, 1135, 2631, 0, 1095, 1133, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1109, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 1910, 1908, 0, 0, 1133, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 1649, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 1109, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 1910, 3271, 0, 0,
	1133, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 238, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 240, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	1649, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 232, 642, 643, 698, 644, 645,
	646, 1109, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	0, 1910, 1908, 0, 0, 1133, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 2767, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 2772,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 2768, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 2769, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	2681, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 0, 0,
	0, 0, 0, 0, 0, 1135, 2679, 0, 2678, 1133,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 0, 0, 0, 0,
	0, 0, 0, 1135, 2676, 0, 2675, 1133, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 0, 0, 0, 0, 0, 0,
	0, 1135, 2673, 0, 2672, 1133, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 0, 0, 0, 0, 0, 0, 0, 1135,
	2670, 0, 1749, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 1748, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1098, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	1113, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 4797, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 1113,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 2513, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	2512, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 1113, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 4521, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 1113, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	4098, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 1979, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 3790, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 1979, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 2772, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	0, 0, 0, 0, 0, 0, 0, 1135, 1908, 0,
	2777, 1133, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 2775,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 2763, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 2751, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 2749, 0, 2740, 2747,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 2743, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	2744, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 2745, 444, 2742, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 2746, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 2741,
	646, 1109, 0, 0, 0, 2737, 0, 2740, 2747, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 2743, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 2744,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	2745, 444, 2742, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 2746, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 2741, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 0, 0, 0, 0, 0, 1916, 0, 1135,
	0, 0, 0, 1133, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 2492, 286,
	287, 0, 0, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 2454, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	2427, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 1754,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 1683, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 623, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 1678, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 623, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 1665, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 1140, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 1660, 0, 1151, 1123, 1124,
	1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 1561, 0, 1151, 1123, 1124, 1125,
	1121, 1122, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1560, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 1555, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1554,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 1548, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 1102, 1103,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 1106, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 1111, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 1108, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 1105, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 1112, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1109, 0, 0,
	0, 1510, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	1104, 0, 0, 0, 0, 0, 0, 1102, 1103, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 1111, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 1514, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 1108, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 1118, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 1515, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 1119, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 1105, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 1513, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	1112, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 1109, 0, 0, 0,
	1359, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104,
	0, 0, 0, 0, 0, 0, 1102, 1103, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 1227, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 623, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1109, 0, 0, 0, 0,
	0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 1139, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 1188, 0,
	296, 1195, 297, 1194, 0, 1205, 298, 299, 300, 301,
	302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 1198,
	337, 339, 1192, 1191, 1111, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1183,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1117, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 1130, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1190, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 1203, 1204, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 1140, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 1185, 1186,
	0, 1146, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 1108, 278, 1227, 478, 479, 480, 1131, 1179,
	481, 1193, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 1118, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1189, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 1119, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 1187, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 1234, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 1105, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1199, 1200, 1201, 1202,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 1129,
	618, 619, 620, 621, 0, 623, 624, 0, 1112, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 1196, 1233, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1109, 0, 0, 0, 0, 0,
	1151, 1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0,
	0, 0, 0, 0, 1102, 1103, 0, 279, 281, 280,
	282, 283, 284, 285, 1135, 286, 287, 0, 1133, 0,
	0, 0, 1175, 1139, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 1188, 0, 296,
	1195, 297, 1194, 0, 1205, 298, 299, 300, 301, 302,
	303, 1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 4845, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 1198, 337,
	339, 1192, 1191, 1111, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1183, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1117, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 1130, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1190, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 1203, 1204, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 1140, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 1185, 1186, 0,
	1146, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 1108, 278, 1227, 478, 479, 480, 1131, 1179, 481,
	1193, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 1118, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1189, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	1119, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 1187, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	1234, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 1105, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1199, 1200, 1201, 1202, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 1129, 618,
	619, 620, 621, 0, 4844, 624, 0, 1112, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 1196, 1233, 0, 637, 636, 638, 639,
	697, 640, 641, 0, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 1109, 0, 0, 0, 0, 0, 1151,
	1123, 1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0,
	0, 0, 0, 1102, 1103, 0, 279, 281, 280, 282,
	283, 284, 285, 1135, 286, 287, 0, 1133, 0, 0,
	0, 1175, 1139, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 4843, 1188, 0, 296, 1195,
	297, 1194, 0, 1205, 298, 299, 300, 301, 302, 303,
	1141, 1174, 1106, 304, 1235, 1236, 655, 0, 305, 306,
	1181, 0, 1162, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 4845, 1165, 1163, 1164, 1171, 1167,
	1166, 1170, 332, 333, 334, 335, 336, 1198, 337, 339,
	1192, 1191, 1111, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1117, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1206, 1207, 370, 1130, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1190, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	1203, 1204, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1213, 0, 1140, 391, 0, 392, 393,
	394, 395, 396, 1176, 1177, 1180, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1218, 407, 1185, 1186, 0, 1146,
	0, 408, 409, 1220, 1178, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1214, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 1169,
	1168, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	1108, 278, 1227, 478, 479, 480, 1131, 1179, 481, 1193,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 1208,
	493, 494, 1118, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 1209, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1189,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 1119,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1172, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 1187, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 1234,
	594, 595, 596, 597, 1210, 601, 602, 0, 603, 604,
	1105, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1199, 1200, 1201, 1202, 0, 622,
	0, 614, 615, 616, 1211, 617, 1212, 1129, 618, 619,
	620, 621, 0, 4844, 624, 0, 1112, 625, 626, 627,
	629, 630, 628, 631, 1173, 632, 0, 0, 633, 634,
	635, 694, 1196, 1233, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1109, 0, 0, 0, 0, 0, 1151, 1123,
	1124, 1125, 1121, 1122, 1134, 1104, 0, 0, 0, 0,
	0, 0, 1102, 1103, 0, 279, 281, 280, 282, 283,
	284, 285, 1135, 286, 287, 0, 1133, 0, 0, 0,
	1175, 1139, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 1188, 0, 296, 1195, 297,
	1194, 0, 1205, 298, 299, 300, 301, 302, 303, 1141,
	1174, 1106, 304, 1235, 1236, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 4450, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 1198, 337, 339, 1192,
	1191, 1111, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1183, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1117,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 1130, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1190, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 1203,
	1204, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 4451, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 1185, 1186, 0, 1146, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 1108,
	278, 1227, 478, 479, 480, 1131, 1179, 481, 1193, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 1118, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1189, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 4449, 552, 1119, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 1187, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 1234, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 1105,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1199, 1200, 1201, 1202, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 1129, 618, 619, 620,
	621, 0, 623, 624, 0, 1112, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 1196, 1233, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1109, 0, 0, 0, 0, 0, 1151, 1123, 1124,
	1125, 3238, 3239, 1134, 1104, 0, 0, 0, 0, 0,
	0, 1102, 1103, 0, 279, 281, 280, 282, 283, 284,
	285, 1135, 286, 287, 0, 1133, 0, 0, 0, 1175,
	1139, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 1188, 0, 296, 1195, 297, 1194,
	0, 1205, 298, 299, 300, 301, 302, 303, 1141, 1174,
	1106, 304, 1235, 1236, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 1198, 337, 339, 1192, 1191,
	1111, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1183, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1117, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 1130, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1190, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 1203, 1204,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 1140, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 1185, 1186, 0, 1146, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 1108, 278,
	1227, 478, 479, 480, 1131, 1179, 481, 1193, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	1118, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1189, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 1119, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 1187, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 1234, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 1105, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1199, 1200, 1201, 1202, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 1129, 618, 619, 620, 621,
	0, 623, 624, 0, 1112, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	1196, 1233, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1109, 0, 0, 0, 0, 0, 1151, 1123, 1124, 1125,
	3236, 3237, 1134, 1104, 0, 0, 0, 0, 0, 0,
	1102, 1103, 0, 279, 281, 280, 282, 283, 284, 285,
	1135, 286, 287, 0, 1133, 0, 0, 0, 1175, 1139,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 1188, 0, 296, 1195, 297, 1194, 0,
	1205, 298, 299, 300, 301, 302, 303, 1141, 1174, 1106,
	304, 1235, 1236, 655, 0, 305, 306, 1181, 0, 1162,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332,
	333, 334, 335, 336, 1198, 337, 339, 1192, 1191, 1111,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1183, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1117, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1206,
	1207, 370, 1130, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1190, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 1203, 1204, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1213, 0, 1140, 391, 0, 392, 393, 394, 395, 396,
	1176, 1177, 1180, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1218, 407, 1185, 1186, 0, 1146, 0, 408, 409,
	1220, 1178, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1214, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 1169, 1168, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 1108, 278, 1227,
	478, 479, 480, 1131, 1179, 481, 1193, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 1208, 493, 494, 1118,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	1209, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1189, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 1119, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1172, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 1187, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 1234, 594, 595, 596,
	597, 1210, 601, 602, 0, 603, 604, 1105, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1199, 1200, 1201, 1202, 0, 622, 0, 614, 615,
	616, 1211, 617, 1212, 1129, 618, 619, 620, 621, 0,
	623, 624, 0, 1112, 625, 626, 627, 629, 630, 628,
	631, 1173, 632, 0, 0, 633, 634, 635, 694, 1196,
	1233, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1109,
	0, 0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121,
	1122, 1134, 1104, 0, 0, 0, 0, 0, 0, 1102,
	1103, 0, 279, 281, 280, 282, 283, 284, 285, 1135,
	286, 287, 0, 1133, 0, 0, 0, 1175, 1139, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 1188, 0, 296, 1195, 297, 1194, 0, 1205,
	298, 299, 300, 301, 302, 303, 1141, 1174, 1106, 304,
	1235, 1236, 655, 0, 305, 306, 1181, 0, 1162, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333,
	334, 335, 336, 1198, 337, 339, 1192, 1191, 1111, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1183, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1117, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1206, 1207,
	370, 1130, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1190, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 1203, 1204, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1213,
	0, 1140, 391, 0, 392, 393, 394, 395, 396, 1176,
	1177, 1180, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1218, 407, 1185, 1186, 0, 1146, 0, 408, 409, 1220,
	1178, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1214, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 1169, 1168, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 1108, 278, 1227, 478,
	479, 480, 1131, 1179, 481, 1193, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 1208, 493, 494, 1118, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 1209,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1189, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 1119, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1172, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 1187, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 1234, 594, 595, 596, 597,
	1210, 601, 602, 0, 603, 604, 1105, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1199, 1200, 1201, 1202, 0, 622, 0, 614, 615, 616,
	1211, 617, 1212, 1129, 618, 619, 620, 621, 0, 623,
	624, 0, 1112, 625, 626, 627, 629, 630, 628, 631,
	1173, 632, 0, 0, 633, 634, 635, 694, 1196, 1233,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1109, 0,
	0, 0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122,
	1134, 1104, 0, 0, 0, 0, 0, 0, 2500, 2501,
	0, 279, 281, 280, 282, 283, 284, 285, 1135, 286,
	287, 0, 1133, 0, 0, 0, 1175, 1139, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 1188, 0, 296, 1195, 297, 1194, 0, 1205, 298,
	299, 300, 301, 302, 303, 1141, 1174, 0, 304, 1235,
	1236, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 1198, 337, 339, 1192, 1191, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1183, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1117, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	1130, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1190, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 1203, 1204, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	1140, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 1131, 1179, 481, 1193, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 1118, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1189, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 1119, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 1187, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 1234, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1199,
	1200, 1201, 1202, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 1129, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 1196, 1233, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134,
	2759, 0, 0, 0, 0, 0, 0, 2757, 2758, 0,
	279, 281, 280, 282, 283, 284, 285, 1135, 286, 287,
	0, 1133, 0, 0, 0, 1175, 1139, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	1188, 0, 296, 1195, 297, 1194, 0, 1205, 298, 299,
	300, 301, 302, 303, 1141, 1174, 0, 304, 1235, 1236,
	655, 0, 305, 306, 1181, 0, 1162, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 1165,
	1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335,
	336, 1198, 337, 339, 1192, 1191, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1183, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1117, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1206, 1207, 370, 1130,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1190,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 1203, 1204, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1213, 0, 1140,
	391, 0, 392, 393, 394, 395, 396, 1176, 1177, 1180,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1218, 407,
	1185, 1186, 0, 1146, 0, 408, 409, 1220, 1178, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1214, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 1169, 1168, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 278, 1227, 478, 479, 480,
	1131, 1179, 481, 1193, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 1208, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 1209, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1189, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 3231, 3232, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1172, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	1187, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 1234, 594, 595, 596, 597, 1210, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1199, 1200,
	1201, 1202, 0, 622, 0, 614, 615, 616, 1211, 617,
	1212, 1129, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1173, 632,
	0, 0, 633, 634, 635, 694, 1196, 1233, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 1151, 1123, 1124, 1125, 1121, 1122, 1134, 0,
	0, 0, 0, 0, 0, 0, 2163, 2164, 0, 279,
	281, 280, 282, 283, 284, 285, 1135, 286, 287, 0,
	1133, 0, 0, 0, 1175, 1139, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 0, 1188,
	0, 296, 1195, 297, 1194, 0, 1205, 298, 299, 300,
	301, 302, 303, 1141, 1174, 1106, 304, 1235, 1236, 655,
	0, 305, 306, 1181, 0, 1162, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 4845, 1165, 1163,
	1164, 1171, 1167, 1166, 1170, 332, 333, 334, 335, 336,
	1198, 337, 339, 1192, 1191, 1111, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1183, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1117, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1206, 1207, 370, 1130, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1190, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 1203, 1204, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1213, 0, 1140, 391,
	0, 392, 393, 394, 395, 396, 1176, 1177, 1180, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1218, 407, 1185,
	1186, 0, 1146, 0, 408, 409, 0, 1178, 0, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1214,
	1223, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 1169, 1168, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 1108, 278, 0, 478, 479, 480, 1131,
	1179, 481, 1193, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 1208, 493, 494, 1118, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 1209, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1189, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 1119, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1172, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 1187,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 1234, 594, 595, 596, 597, 1210, 601, 602,
	0, 603, 604, 1105, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1199, 1200, 1201,
	1202, 0, 622, 0, 614, 615, 616, 1211, 617, 1212,
	1129, 618, 619, 620, 621, 0, 4844, 624, 0, 1112,
	625, 626, 627, 629, 630, 628, 631, 1173, 632, 0,
	0, 633, 634, 635, 694, 1196, 1233, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 1095,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 1103, 0, 279, 281,
	280, 282, 283, 284, 285, 1135, 286, 287, 0, 1133,
	0, 0, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 238, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 240, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 1649, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 232, 642, 643,
	698, 644, 645, 646, 1273, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1263, 0, 2003, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1259, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 1267, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 238,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 240, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 1649, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	232, 642, 643, 698, 644, 645, 646, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3395,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 0, 2003, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 1261, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1175, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	1174, 0, 304, 653, 654, 655, 0, 305, 306, 1181,
	0, 1162, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166,
	1170, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1206, 1207, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1213, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 1176, 1177, 1180, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 1178, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1259,
	420, 422, 421, 0, 423, 1214, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 1169, 1168,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	278, 1227, 478, 479, 480, 0, 1179, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 1265, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 1208, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 1209, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 1267,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1172, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 1210, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 1211, 617, 1212, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1173, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 1263,
	0, 1261, 0, 1175, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 1174, 0, 304, 653, 654, 655, 0,
	305, 306, 1181, 0, 1162, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 1165, 1163, 1164,
	1171, 1167, 1166, 1170, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1206, 1207, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1213, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1176, 1177, 1180, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 1178, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 1259, 420, 422, 421, 0, 423, 1214, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 1169, 1168, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 278, 1227, 478, 479, 480, 0, 1179,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 1265,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 1208, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 1209, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 1267, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1172, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 1210, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 1211, 617, 1212, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1173, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1263, 0, 1261, 0, 1175, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 1174, 0, 304, 653,
	654, 655, 0, 305, 306, 1181, 0, 1162, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	1165, 1163, 1164, 1171, 1167, 1166, 1170, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1206, 1207, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1213, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1176, 1177,
	1180, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 1178,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1214, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 1169, 1168, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 278, 1227, 478, 479,
	480, 0, 1179, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 1208, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 1209, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1172, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 1210,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 1211,
	617, 1212, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1173,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 4265, 0, 1175,
	0, 0, 0, 0, 288, 289, 1215, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 1174,
	0, 304, 653, 654, 655, 0, 305, 306, 1181, 0,
	1162, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1216,
	329, 330, 331, 1165, 1163, 1164, 1171, 1167, 1166, 1170,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1206, 1207, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1217, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1213, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1176, 1177, 1180, 482, 1219, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1218, 407, 670, 671, 0, 672, 0, 408,
	409, 1220, 1178, 1221, 410, 411, 412, 1222, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1214, 1223, 424, 425, 1224, 0,
	426, 427, 428, 429, 430, 431, 434, 1169, 1168, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1225, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 1226, 476, 464, 0, 278,
	1227, 478, 479, 480, 0, 1179, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 1228, 492, 1229, 1208, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 1209, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1230, 548, 549, 550, 551, 552, 684, 1267, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1172,
	575, 576, 558, 559, 577, 578, 1231, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 1210, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 1211, 617, 1212, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 1173, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 273, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 2604, 2605, 2606, 2623, 2624, 2625, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 2626, 0, 647, 0, 0, 0, 0, 288, 289,
	1900, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 1885, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 2616, 0, 315, 316, 317, 314, 318,
	0, 319, 2612, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	2617, 2618, 2619, 2620, 371, 372, 373, 662, 0, 0,
	2611, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 2621, 2622, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 2614, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 2615, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 1884, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 1575, 2601, 2602, 2603, 2627, 2613, 2607,
	0, 2609, 2610, 2608, 2595, 2596, 2597, 2598, 2599, 2600,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 1215, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 1499, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1216, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1217, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 1219, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1218, 407,
	670, 671, 0, 672, 0, 408, 409, 1220, 673, 1221,
	410, 411, 412, 1222, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 1223, 424, 425, 1224, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1225, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 1226, 476, 464, 0, 0, 1227, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	1228, 492, 1229, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1230, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 238, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1231, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 240, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 1649, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 0, 232,
	642, 643, 698, 644, 645, 646, 0, 1646, 233, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 193, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 232, 642, 643, 698, 644,
	645, 646, 1575, 1574, 233, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 193, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 1673, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 1575, 1574,
	0, 0, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 3708, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 2368, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 1575, 2278, 0, 0, 0, 0, 2279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 1673, 0, 647, 0, 0, 0, 0, 288, 289,
	1215, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 1499, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1216, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1217, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 1219,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1218, 407, 670, 671,
	0, 672, 0, 408, 409, 1220, 673, 1221, 410, 411,
	412, 1222, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 2277, 422, 421, 0, 423, 674, 1223,
	424, 425, 1224, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1225, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 1226,
	476, 464, 0, 0, 1227, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 1228, 492,
	1229, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1230, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1231, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 1673, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1095, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 1655, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 238, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 240, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 273, 0, 232, 642, 643, 698, 644,
	645, 646, 0, 0, 233, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 193, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 3145, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 2017, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	5010, 0, 1175, 0, 0, 0, 0, 288, 289, 1215,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 1174, 0, 304, 653, 654, 655, 0, 305,
	306, 1181, 0, 1162, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1216, 329, 330, 331, 1165, 1163, 1164, 1171,
	1167, 1166, 1170, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1206, 1207, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1217, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1213, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 1176, 1177, 1180, 482, 1219, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1218, 407, 670, 671, 0,
	672, 0, 408, 409, 1220, 1178, 1221, 410, 411, 412,
	1222, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1214, 1223, 424,
	425, 1224, 0, 426, 427, 428, 429, 430, 431, 434,
	1169, 1168, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1225, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 1226, 476,
	464, 0, 278, 1227, 478, 479, 480, 0, 1179, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 1228, 492, 1229,
	1208, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 1209, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1230, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1172, 575, 576, 558, 559, 577, 578, 1231,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 1210, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 1211, 617, 1212, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1173, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 0, 273, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 3658, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 0, 0, 273, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 1643,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 3133, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 273, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	3815, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 0, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 925, 0, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 2355, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 923, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 2062,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 836, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 0, 2068, 0, 296, 2058,
	297, 2074, 0, 2081, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 2084, 2085, 0, 0, 305, 306,
	0, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 1198, 337, 339,
	2072, 2071, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1183, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 2070, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	2079, 2080, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 2065, 2066, 0, 2061,
	0, 408, 409, 1220, 0, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 0, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 0, 481, 2073,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 0, 1228, 492, 1229, 0,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 2055, 506, 507, 508, 2056,
	509, 510, 511, 0, 512, 0, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 2069,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 0,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 2067, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 2083,
	594, 595, 596, 597, 0, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 2075, 2076, 2077, 2078, 0, 622,
	0, 614, 615, 616, 0, 617, 0, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 0, 2059, 2082, 0, 637, 636, 638, 639, 0,
	640, 641, 0, 0, 0, 0, 642, 643, 0, 644,
	645, 646, 826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 3935, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 2049, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 833, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 3934, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 831, 605, 606, 607,
	608, 609, 832, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 3933, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 0, 826, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2089, 286, 287, 0, 0, 0, 0, 836, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 833, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 2088, 565, 566, 567,
	568, 0, 2090, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	831, 605, 606, 607, 608, 609, 832, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 2087, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	826, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 2040, 286, 287, 0, 0, 0,
	0, 836, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 833, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	2039, 565, 566, 567, 568, 0, 2041, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 831, 605, 606, 607, 608, 609,
	832, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 2038, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 824, 0, 826, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 836, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 833, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 831,
	605, 606, 607, 608, 609, 832, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 0, 826,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	836, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 833, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 831, 605, 606, 607, 608, 609, 832,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 826, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 836, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 833,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 2406, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 2407, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 831, 605, 606,
	607, 608, 609, 832, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 2408, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 0, 273, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 836, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	0, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 1215, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 1499,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1216, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1217, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 1219, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1218, 407, 670, 671, 0, 672, 0, 408, 409,
	1220, 673, 1221, 410, 411, 412, 1222, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 1223, 424, 425, 1224, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1225, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 1226, 476, 464, 0, 0, 1227,
	478, 479, 480, 4023, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 1228, 492, 1229, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1230, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1231, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 0,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 3608, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1703, 0, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1215, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 1499, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1216, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 1702, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1217, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 1219, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1218,
	407, 670, 671, 0, 672, 0, 408, 409, 1220, 673,
	1221, 410, 411, 412, 1222, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 1223, 424, 425, 1224, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1225, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 1226, 476, 464, 0, 0, 1227, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 1228, 492, 1229, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 1701, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1230, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 1700, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1231, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 0, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 1568, 0, 1575,
	1574, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1215, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 1499, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1216, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1217, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1570, 668, 669, 482, 1219, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1218, 407, 670, 671, 0, 672,
	0, 408, 409, 1220, 673, 1221, 410, 411, 412, 1222,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 1223, 424, 425,
	1224, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1225, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 1226, 476, 464,
	0, 0, 1227, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 1228, 492, 1229, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1230, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1231, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 0, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 1575, 1574, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 1215, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 1499, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1216, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1217,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	1219, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1218, 407, 670,
	671, 0, 672, 0, 408, 409, 1220, 673, 1221, 410,
	411, 412, 1222, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	1223, 424, 425, 1224, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1225, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	1226, 476, 464, 0, 0, 1227, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 1228,
	492, 1229, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1230, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1231, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1575, 1574, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 1215, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 1499, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1216, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1217, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 1219, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1218, 407, 670, 671, 0, 672, 0, 408, 409, 1220,
	673, 1221, 410, 411, 412, 1222, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 1223, 424, 425, 1224, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1225, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 1226, 476, 464, 0, 0, 1227, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 1228, 492, 1229, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1230,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1231, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 1575, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 1215, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 1499, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1216, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1217, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 1219, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1218, 407, 670, 671, 0, 672, 0,
	408, 409, 1220, 673, 1221, 410, 411, 412, 1222, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 1223, 424, 425, 1224,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1225,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 1226, 476, 464, 0,
	0, 1227, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 1228, 492, 1229, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1230, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1231, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 2931,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	3650, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	2935, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 3649, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 2934, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 3646, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 3648, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 3645, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	2933, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 3647, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 2931, 305, 306, 656, 0, 0, 2925, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 2927, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 2935, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 2934,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2924, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 2933, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 2932, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1780, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 1779, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 1778, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 1781, 557, 564,
	565, 566, 567, 568, 0, 1777, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 1775, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 1776, 636, 638, 639, 697,
	640, 641, 1503, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1505, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1500, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 1502, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 1265, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1406, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1408, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 1265, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 731, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	730, 284, 285, 719, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 722, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 728, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 724, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 718, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 719, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 722, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 723, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 724,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 719, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 722, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 723,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 724, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 719, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 722, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 4033, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 724, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 1265, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 3553, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 3103,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 3102, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2375, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 2313, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 2320, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 2319, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 2306, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 2308, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 2271, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	1265, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1621, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1620, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1523, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1516, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1518, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1342, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1341, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1332, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1331, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	1329, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 1328, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 1324, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 1323, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	700, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 264, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 722, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 723, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 724, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 2415, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2413, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 2411, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 2326,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 2114, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 2108, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 910, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 909, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	908, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 3649, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 4346, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 1370, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 1373, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 1371, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 791, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 790,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 789, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 1374, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 787,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 1370, 0, 273,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 1373, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 1371, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 791,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 790, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 789,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 1374,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 787, 689, 690, 691, 0, 622,
	0, 614, 1372, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 709, 0, 273, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 708, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 707, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 3145, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 4362, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 667, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 4645, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 4237, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 3984, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 667, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 2812, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 3145, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 3142, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 2232, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 790, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 789, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 787, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2385, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 2373, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1676,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1669, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 781,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 777, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 782,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 791, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 1654, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1627, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1626, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1611,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1609, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1604, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1581,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1579, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1566, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1528,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1508, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	667, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1376,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 1347, 0, 273, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	1346, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 1338,
	0, 273, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 1337, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 1290, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 667, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 796, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	781, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 777, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 776, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	782, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 791, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 790, 549, 550,
	551, 552, 778, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 789, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 779, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 787, 689, 690,
	691, 0, 622, 0, 614, 783, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 770, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 771, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	733, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 726, 0, 273, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	704, 0, 273, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 667, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 667,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 3678, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 790, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 789, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 787, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 3593, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 3569, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 391, 0, 392,
	393, 394, 395, 396, 3566, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 273, 0, 0, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 648,
	649, 0, 296, 650, 297, 651, 0, 652, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 653, 654,
	655, 0, 305, 306, 656, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 657, 658, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 659, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 660, 661, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 662,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 663, 664, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 665, 0, 666,
	391, 0, 392, 393, 394, 395, 396, 3520, 668, 669,
	482, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	670, 671, 0, 672, 0, 408, 409, 0, 673, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	674, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 477, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 478, 479, 480,
	0, 675, 481, 676, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 677,
	0, 492, 0, 678, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 679,
	506, 507, 508, 680, 509, 510, 511, 681, 512, 682,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 683, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 684, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	685, 0, 586, 0, 587, 588, 589, 590, 592, 560,
	593, 598, 599, 686, 594, 595, 596, 597, 687, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 688, 689,
	690, 691, 0, 622, 0, 614, 615, 616, 692, 617,
	693, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 694, 695, 696, 0, 637,
	636, 638, 639, 697, 640, 641, 273, 0, 0, 0,
	642, 643, 698, 644, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 647, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 648, 649, 0, 296, 650, 297, 651, 0,
	652, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 653, 654, 655, 0, 305, 306, 656, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 657, 658, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 659, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 660,
	661, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 662, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 663, 664, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	665, 0, 666, 391, 0, 392, 393, 394, 395, 396,
	3518, 668, 669, 482, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 670, 671, 0, 672, 0, 408, 409,
	0, 673, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 674, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	477, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	478, 479, 480, 0, 675, 481, 676, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 677, 0, 492, 0, 678, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 679, 506, 507, 508, 680, 509, 510, 511,
	681, 512, 682, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 683, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 684, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 685, 0, 586, 0, 587, 588, 589,
	590, 592, 560, 593, 598, 599, 686, 594, 595, 596,
	597, 687, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 688, 689, 690, 691, 0, 622, 0, 614, 615,
	616, 692, 617, 693, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 694, 695,
	696, 0, 637, 636, 638, 639, 697, 640, 641, 273,
	0, 0, 0, 642, 643, 698, 644, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 648, 649, 0, 296, 650,
	297, 651, 0, 652, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 653, 654, 655, 0, 305, 306,
	656, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	657, 658, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	659, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 660, 661, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 662, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	663, 664, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 665, 0, 666, 391, 0, 392, 393,
	394, 395, 396, 3506, 668, 669, 482, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 670, 671, 0, 672,
	0, 408, 409, 0, 673, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 674, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 477, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 478, 479, 480, 0, 675, 481, 676,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 677, 0, 492, 0, 678,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 679, 506, 507, 508, 680,
	509, 510, 511, 681, 512, 682, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 683,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 684,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 685, 0, 586, 0,
	587, 588, 589, 590, 592, 560, 593, 598, 599, 686,
	594, 595, 596, 597, 687, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 688, 689, 690, 691, 0, 622,
	0, 614, 615, 616, 692, 617, 693, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 694, 695, 696, 0, 637, 636, 638, 639, 697,
	640, 641, 273, 0, 0, 0, 642, 643, 698, 644,
	645, 646, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 647, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 648, 649,
	0, 296, 650, 297, 651, 0, 652, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 653, 654, 655,
	0, 305, 306, 656, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 657, 658, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 659, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 660, 661, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 662, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 663, 664, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 665, 0, 666, 391,
	0, 392, 393, 394, 395, 396, 3503, 668, 669, 482,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 670,
	671, 0, 672, 0, 408, 409, 0, 673, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 674,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 477, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 478, 479, 480, 0,
	675, 481, 676, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 677, 0,
	492, 0, 678, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 679, 506,
	507, 508, 680, 509, 510, 511, 681, 512, 682, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 683, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 684, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 685,
	0, 586, 0, 587, 588, 589, 590, 592, 560, 593,
	598, 599, 686, 594, 595, 596, 597, 687, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 688, 689, 690,
	691, 0, 622, 0, 614, 615, 616, 692, 617, 693,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 694, 695, 696, 0, 637, 636,
	638, 639, 697, 640, 641, 273, 0, 0, 0, 642,
	643, 698, 644, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 647, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 648, 649, 0, 296, 650, 297, 651, 0, 652,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	653, 654, 655, 0, 305, 306, 656, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 657, 658, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 659, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 660, 661,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 662, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 663, 664, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 665,
	0, 666, 391, 0, 392, 393, 394, 395, 396, 3113,
	668, 669, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 670, 671, 0, 672, 0, 408, 409, 0,
	673, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 674, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 675, 481, 676, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 677, 0, 492, 0, 678, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 679, 506, 507, 508, 680, 509, 510, 511, 681,
	512, 682, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 683, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 684, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 685, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 686, 594, 595, 596, 597,
	687, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	688, 689, 690, 691, 0, 622, 0, 614, 615, 616,
	692, 617, 693, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 694, 695, 696,
	0, 637, 636, 638, 639, 697, 640, 641, 273, 0,
	0, 0, 642, 643, 698, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	647, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 648, 649, 0, 296, 650, 297,
	651, 0, 652, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 653, 654, 655, 0, 305, 306, 656,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 657,
	658, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 659,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 660, 661, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 662, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 663,
	664, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 665, 0, 666, 391, 0, 392, 393, 394,
	395, 396, 667, 668, 669, 482, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 670, 671, 0, 672, 0,
	408, 409, 0, 673, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 674, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 477, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 478, 479, 480, 0, 675, 481, 676, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 677, 0, 492, 0, 678, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 679, 506, 507, 508, 680, 509,
	510, 511, 681, 512, 682, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 683, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 684, 553,
	0, 554, 555, 771, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 685, 0, 586, 0, 587,
	588, 589, 590, 592, 560, 593, 598, 599, 686, 594,
	595, 596, 597, 687, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 688, 689, 690, 691, 0, 622, 0,
	614, 615, 616, 692, 617, 693, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	694, 695, 696, 0, 637, 636, 638, 639, 697, 640,
	641, 273, 0, 0, 0, 642, 643, 698, 644, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 647, 0, 2344, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 648, 649, 0,
	296, 650, 297, 651, 0, 652, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 653, 654, 655, 0,
	305, 306, 656, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 657, 658, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 659, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 660, 661, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 662, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 663, 664, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 665, 0, 666, 391, 0,
	392, 393, 394, 395, 396, 667, 668, 669, 482, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 670, 671,
	0, 672, 0, 408, 409, 0, 673, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 674, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 477, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 478, 479, 480, 0, 675,
	481, 676, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 677, 0, 492,
	0, 678, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 679, 506, 507,
	508, 680, 509, 510, 511, 681, 512, 682, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 683, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 684, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 0, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 685, 0,
	586, 0, 587, 588, 589, 590, 592, 560, 593, 598,
	599, 686, 594, 595, 596, 597, 687, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 688, 689, 690, 691,
	0, 622, 0, 614, 615, 616, 692, 617, 693, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 694, 695, 696, 0, 637, 636, 638,
	639, 697, 640, 641, 273, 0, 0, 0, 642, 643,
	698, 644, 645, 646, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 647, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	648, 649, 0, 296, 650, 297, 651, 0, 652, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 653,
	654, 655, 0, 305, 306, 656, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 657, 658, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 659, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 660, 661, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	662, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 663, 664, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 665, 0,
	666, 391, 0, 392, 393, 394, 395, 396, 1309, 668,
	669, 482, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 670, 671, 0, 672, 0, 408, 409, 0, 673,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 674, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 477, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 478, 479,
	480, 0, 675, 481, 676, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	677, 0, 492, 0, 678, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	679, 506, 507, 508, 680, 509, 510, 511, 681, 512,
	682, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 683, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 684, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 685, 0, 586, 0, 587, 588, 589, 590, 592,
	560, 593, 598, 599, 686, 594, 595, 596, 597, 687,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 688,
	689, 690, 691, 0, 622, 0, 614, 615, 616, 692,
	617, 693, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 694, 695, 696, 0,
	637, 636, 638, 639, 697, 640, 641, 273, 0, 0,
	0, 642, 643, 698, 644, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 648, 649, 0, 296, 650, 297, 651,
	0, 652, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 653, 654, 655, 0, 305, 306, 656, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 657, 658,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 659, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	660, 661, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 662, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 663, 664,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 665, 0, 666, 391, 0, 392, 393, 394, 395,
	396, 667, 668, 669, 482, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 670, 671, 0, 672, 0, 408,
	409, 0, 673, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 674, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 477, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 478, 479, 480, 0, 675, 481, 676, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 677, 0, 492, 0, 678, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 679, 506, 507, 508, 680, 509, 510,
	511, 681, 512, 682, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 683, 524, 525,
	1238, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 684, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 685, 0, 586, 0, 587, 588,
	589, 590, 592, 560, 593, 598, 599, 686, 594, 595,
	596, 597, 687, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 688, 689, 690, 691, 0, 622, 0, 614,
	615, 616, 692, 617, 693, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 694,
	695, 696, 0, 637, 636, 638, 639, 697, 640, 641,
	273, 0, 0, 0, 642, 643, 698, 644, 645, 646,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 648, 649, 0, 296,
	650, 297, 651, 0, 652, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 653, 654, 655, 0, 305,
	306, 656, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 657, 658, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 659, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 660, 661, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 662, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 663, 664, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 665, 0, 666, 0, 0, 392,
	393, 394, 395, 396, 667, 668, 669, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 670, 671, 0,
	672, 0, 408, 409, 0, 673, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 674, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 675, 481,
	676, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 677, 0, 492, 0,
	678, 493, 494, 486, 495, 496, 0, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 679, 506, 507, 508,
	680, 509, 510, 511, 681, 512, 682, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 0, 522, 523,
	683, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	684, 0, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 685, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	686, 594, 595, 596, 597, 687, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 688, 689, 690, 691, 0,
	622, 0, 614, 615, 616, 692, 617, 693, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 694, 695, 696, 0, 637, 636, 638, 639,
	697, 640, 641, 1617, 0, 1354, 0, 642, 643, 698,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1616,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 1531, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1530, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 1352, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 1351,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 2128, 0,
	1354, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1356, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 482, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 477, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 478, 479, 480, 0, 0, 481,
	0, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 0, 492, 0,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 0, 506, 507, 508,
	0, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	0, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1357, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 0, 0, 586,
	0, 587, 588, 589, 590, 592, 560, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 0, 0, 0, 637, 636, 638, 639,
	0, 640, 641, 2095, 0, 1354, 0, 642, 643, 0,
	644, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 1354, 640, 641, 0, 0,
	0, 0, 642, 643, 0, 644, 645, 646, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 0, 297, 0, 0, 0,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	0, 0, 0, 0, 305, 306, 0, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 1356, 332, 333,
	334, 335, 336, 0, 337, 339, 0, 0, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 0, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 0, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 0, 0, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 482, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 0, 0, 0, 0, 0, 408, 409, 0,
	0, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 0, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 477,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 478,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1357, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 590,
	592, 560, 593, 598, 599, 0, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	0, 0, 0, 0, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 0, 0,
	0, 637, 636, 638, 639, 0, 640, 641, 0, 0,
	0, 0, 642, 643, 0, 644, 645, 646, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1879, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 1866, 1860, 0,
	0, 0, 0, 1831, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1851, 1879, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1852, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1878, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1853, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 1884, 0, 0, 0, 0, 1871, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 1884,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3320,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 3317, 0, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1852, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 1878, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 1882, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3316,
	0, 0, 0, 1853, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 1829, 1830, 1837, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1870, 0, 0, 1880,
	0, 0, 1884, 0, 0, 0, 1859, 1861, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	1851, 1846, 1847, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3315,
	0, 1878, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1858, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1852, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 1878, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	1867, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1882, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2638, 0, 0, 0,
	1853, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 1884,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 4773, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 4769,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 4671,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1867, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 4625, 1854, 1855, 1856, 1857,
	0, 0, 0, 1853, 1829, 1830, 1837, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	1885, 0, 1884, 0, 0, 0, 0, 0, 0, 1831,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 1851,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	1878, 0, 0, 0, 0, 4624, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 1858, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1853,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 0,
	1878, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1867,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	0, 4434, 1854, 1855, 1856, 1857, 0, 0, 0, 1853,
	1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1885, 0, 1884, 0,
	0, 0, 0, 0, 0, 1831, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 1851, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0,
	0, 4261, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 1858, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1853, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 1884, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 0, 4180, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 1829, 1830, 1837, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1871, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 1885, 0, 1884, 0, 0, 0, 0, 0,
	0, 1831, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 1851, 1846, 1847, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 4179, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 1858, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1853, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	1884, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 4178, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 3820, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 3313,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 3312,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1867, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 3311, 1854, 1855, 1856, 1857,
	0, 0, 0, 1853, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 1870, 0, 0, 1880, 0,
	1832, 0, 0, 0, 0, 1859, 1861, 0, 0, 1879,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 1885, 0, 0, 0,
	1846, 1847, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 1868, 2195,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	1878, 0, 0, 0, 0, 3310, 0, 0, 0, 0,
	0, 2193, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	1882, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 1871, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1867, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 3275,
	0, 2194, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 0, 0, 1837, 4920,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 1870, 0, 0,
	1880, 1832, 0, 0, 0, 0, 0, 1859, 1861, 0,
	1879, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 2192, 1877, 0, 1885, 0, 0,
	0, 0, 1846, 1847, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	1868, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 1882, 1837, 0, 3375, 0, 0, 0, 0,
	3374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1871, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 0, 0, 3246, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 1878, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 1867, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 3247, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 1853, 0, 0, 1837,
	0, 0, 0, 0, 0, 2785, 0, 0, 0, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1870, 2784,
	0, 1880, 1832, 0, 0, 0, 0, 0, 1859, 1861,
	0, 1879, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 1877, 0, 1885, 0,
	0, 0, 0, 1846, 1847, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1868, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 1882, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1871,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 0, 0,
	1837, 0, 4528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 1870,
	0, 0, 1880, 1832, 0, 0, 0, 0, 0, 1859,
	1861, 0, 1879, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 1885,
	0, 0, 0, 0, 1846, 1847, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 1868, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 1882, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	1871, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 1878,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 1867, 1092,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829,
	1830, 1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 1871, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 1885, 0, 1884, 0, 0,
	0, 0, 0, 0, 1831, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 1851, 1846, 1847, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 1858, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 1884, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 4305, 0, 0, 1867, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 4005, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1870, 1884, 0, 1880, 1832, 0, 0, 0,
	0, 0, 1859, 1861, 0, 1879, 0, 0, 0, 0,
	0, 4006, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 1885, 0, 0, 0, 0, 1846, 1847, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 0, 1868, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 1882, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 1871, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 1878, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 1867, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 1853, 1829, 1830, 1837, 1862, 1863, 1864, 1873, 1874,
	1875, 3381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 0, 1871, 3376,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1885, 0,
	1884, 0, 0, 0, 0, 0, 0, 1831, 0, 1876,
	0, 1877, 3801, 0, 0, 0, 0, 1851, 1846, 1847,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 1878, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 1858, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 1853, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 1884, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 1867, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 1853, 1829, 1830,
	1837, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1871, 3314, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1885, 0, 1884, 0, 0, 0,
	0, 0, 0, 1831, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 1851, 1846, 1847, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 1878, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	1858, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1853, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 1884, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 0, 1867, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1858, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 1853, 1829, 1830, 1837, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	1871, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	1885, 0, 1884, 0, 0, 0, 0, 0, 0, 1831,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 1851,
	1846, 1847, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	1878, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 1858, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1853,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 0, 1852, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1860, 0, 0, 1871, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 1884, 0,
	1878, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1867,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2357, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1858, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 975,
	0, 1024, 1854, 1855, 1856, 1857, 0, 0, 0, 1853,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 998, 0, 981, 980, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 1000, 0, 0, 1884, 0,
	0, 982, 0, 0, 0, 0, 985, 1876, 0, 1877,
	0, 1035, 0, 0, 0, 0, 1846, 1847, 0, 0,
	995, 996, 0, 0, 0, 0, 0, 0, 0, 1013,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1025, 987, 1852,
	0, 0, 0, 0, 988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 1022, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 991, 0, 0, 0, 0, 0,
	0, 0, 979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1001,
	999, 0, 1858, 0, 0, 0, 0, 994, 0, 0,
	0, 1010, 0, 0, 1030, 1029, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1032,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 986, 0,
	0, 1034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 0, 0, 1017, 1018,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 1020, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 0, 0, 1027, 1015, 0, 0,
	0, 0, 0, 0, 0, 1033, 1011, 0, 0, 1004,
	1002, 0, 1007, 0, 0, 0, 0, 0, 1008, 0,
	0, 977, 0, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1019, 0,
	1009, 0, 0, 0, 0, 0, 1006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 0,
	0, 0, 0, 0, 1012, 0, 0, 0, 0, 0,
	0, 0, 0, 990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1016,
}

var sqlPact = [...]int{
	289, -1000, -1000, -1000, -1000, 194, -1000, -1000, 193, 192,
	191, 190, 188, 186, 185, 184, 183, 179, 178, -1000,
	-1000, -1000, -1000, -1000, -1000, 177, -1000, -1000, 174, -1000,
	173, 172, 170, -1000, -1000, 169, -1000, 168, -1000, -1000,
	-1000, -1000, 166, 165, 164, 91873, 91308, 92436, 2403, 116128,
	99200, 2081, 81150, 115563, 80585, 114998, 2280, 11929, 114433, 2832,
	161, -1000, 113868, 160, 159, 157, -1000, 113303, -1000, 1915,
	-1000, 156, -1000, 8066, 70941, 155, 150, 149, 148, 2707,
	147, -1000, 145, 144, -1000, -1000, 143, -1000, 13900, 1547,
	-1000, 141, 139, -1000, 662, 96942, 125, 123, 122, 2712,
	117, 115, 68112, 113, 111, 106, 2657, 2935, -1000, -1000,
	2161, -1000, -1000, 103, 102, 99, 97, 95, 94, 93,
	92, 86, 80, 79, 78, 77, -1000, 76, 75, 74,
	68, 67, -1000, 63, 61, 60, -1000, 58, -1000, 57,
	56, 53, 50, 44, 43, 42, 41, 39, 38, 37,
	36, 35, 33, 137687, -1000, -1000, 32, 2029, 1743, 1742,
	1736, 1732, 1717, 1035, 31, 30, 29, 28, 24, 22,
	21, 20, 18, 17, 16, 12, 9, 8, 7, 6,
	5, 4, 136, 3, 2, 1, 0, -3, -7, -10,
	4861, -1000, 1652, 1470, 31169, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124573, 116691, -11, -82, -12, -1000, 3430, 1042,
	56134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 282,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 468, 2558, 757, -1000, -1000, -1000, 112740, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2401, -67, -1000, 2136,
	-1000, -1000, -1000, -1000, -1000, 755, -1000, 2398, 2359, 331,
	2356, -1000, -1000, -1000, 3508, 2532, 3896, 3895, 3894, 3893,
	3886, 124010, 2006, 3884, 2608, 3883, 3880, 3878, 3876, 3875,
	3874, 3873, -1000, 90743, 1077, 90178, 89613, 3518, 112177, 89048,
	111612, 126831, 48018, 1130, 3506, -1000, -1000, -1000, -1000, -1000,
	-1000, 116691, -1000, 1076, -1000, -1000, 3872, 2174, 751, 98635,
	-1000, -1000, 111047, 1960, -1000, -1000, -1000, 976, 1232, 32906,
	32906, 32906, 281, -1000, -1000, -1000, -1000, -1000, -1000, 3871,
	3870, 3868, 3867, 3866, -1000, -1000, 80020, 24038, 79455, 78890,
	110482, 47439, 88483, 87918, 3865, 3864, 3861, 109917, 126266, 3617,
	3613, 1075, 2135, 1495, -1000, -1000, -1000, -1000, -1000, -1000,
	-34, 72633, 3664, 116691, -1000, 267, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 46860, 935, 46281, 709, 45702, 659, 109352,
	-1000, -1000, -1000, -1000, 74935, -1000, 108787, 2511, 3860, 3859,
	1187, 3858, 3383, 2001, 3857, 1954, 1288, 3856, 3855, 3854,
	3852, 3851, 3850, 3849, 1572, 108222, 3058, 1622, 107657, 1821,
	125701, 1074, 87353, 92436, 2688, 107092, 1597, 1592, -1000, -1000,
	-1000, -1000, 3213, 2934, 2928, 1355, -1000, -1000, -1000, -1000,
	59575, 5662, 5357, -1000, -1000, 12426, 106527, 62440, 92436, 92436,
	-1000, -1000, -1000, -1000, -1000, -1000, 45123, 489, 44544, 1097,
	105962, -1000, -1000, 60148, 3027, -1000, -1000, -1000, -1000, -1000,
	105397, 43965, 436, 43386, 948, 116691, -1000, 3056, 2013, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2348, 1709, 3685,
	2838, 74360, 2204, 1434, 3462, 3212, 3211, 1584, 2123, 3208,
	3848, 2709, 3204, 3199, 3184, 3183, 3151, 1707, 2655, 291,
	2665, 30590, 3045, 1804, 42807, 1741, 1591, 3147, 3144, 3708,
	2098, 2120, 2141, 78325, 3847, 3845, 3428, 3135, 3124, 2886,
	3116, -1000, 3026, 1534, 233, -1000, -1000, -1000, -1000, -1000,
	-1000, 1518, -1000, -1000, -1000, -1000, -1000, 82839, -1000, -1000,
	1647, -1000, -1000, 1647, -1000, -1000, -1000, -1000, -1000, 1469,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1652, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3018, -1000, 2171, -1000, -1000, 2667, 3408,
	3408, 3408, 3505, 449, 440, -1000, 136, -1000, -1000, 137253,
	-1000, -1000, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	2307, -1000, 749, -1000, -1000, 786, -1000, 745, 671, 621,
	-1000, -1000, -1000, -1000, -1000, -1000, 742, -1000, -1000, -1000,
	-1000, -1000, -1000, 3664, -1000, 26984, -1000, -1000, -1000, 445,
	740, 48597, -1000, -1000, 3726, 3725, 892, -1000, 227, 1006,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3055, 739, 737, -1000, 736, 735, 733, 732,
	731, -1000, 729, -1000, 728, 716, 715, 713, 708, 706,
	704, 703, -1000, 2156, -1000, -1000, -1000, -1000, -1000, -1000,
	656, 654, 654, 654, -1000, 1067, -1000, -1000, -1000, 278,
	652, 262, 651, 650, 648, -1000, 702, 699, 695, 693,
	690, 687, 683, 677, 676, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1066, -1000, -1000, -1000, -1000, -38, 116691, -1000,
	468, -38, -1000, -1000, 675, -1000, 35222, 35222, 35222, -1000,
	-1000, 2393, 48597, -1000, 2611, -1000, -28, -28, 924, 57853,
	-1000, 54960, 924, 309, 815, 63579, -1000, 3022, -1000, -1000,
	673, 226, -1000, -1000, -1000, -1000, 24611, 3019, 116691, 116691,
	116691, 92436, 92436, 92436, 116691, 3844, 3839, 3300, 48597, -1000,
	-1000, 70376, 128521, 92999, -1000, -1000, 3597, 68675, 69812, 3054,
	128521, 3053, 127961, 3838, -1000, -1000, -1000, -1000, -1000, 3274,
	3837, 3832, 3831, -1000, 116691, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 244, 3273, -1000, -1000, 96377, 244, 3272, -1000,
	244, 3271, -1000, 95814, -1000, -1000, 2315, 3267, -1000, -1000,
	250, 3266, -1000, -1000, -1000, 248, 3265, -1000, -1000, 223,
	-83, 3264, -1000, -1000, -1000, -1000, -1000, -1000, 137253, -1000,
	-1000, -1000, 127396, -1000, 3406, -1000, 116691, -1000, 48597, -1000,
	-1000, 3594, 1695, 3446, 3544, -1000, -1000, -52, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2579, 2590, 1202, 2426, -1000,
	3314, 1521, 32906, 3371, -1000, -1000, -1000, -1000, -1000, 222,
	24611, -1000, -1000, -1000, -1000, -1000, -1000, 4797, 3263, 1602,
	-1000, 2420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2105, 3262, -1000, 2233, 3258, 2093, -1000, -1000, 1890,
	-1000, 133689, 1390, -1000, -1000, -1000, -1000, 2140, 3256, -27,
	-1000, -1000, 2275, -1000, -1000, -1000, -1000, 2125, -1000, 1353,
	3255, -1000, 2828, 2828, 86788, 3222, 61867, 60148, 72633, -41,
	-1000, -1000, -1000, -1000, -87, -1000, 23459, 137253, -1000, -1000,
	-1000, -1000, 1858, 137253, 906, -1000, -1000, 3254, -1000, 137253,
	900, -1000, -1000, 3244, -1000, 2653, -1000, 3051, -1000, -1000,
	2492, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2491,
	-1000, -1000, 3830, -1000, -1000, 3825, -1000, 3823, 3822, 3820,
	-1000, 1819, 2124, 3818, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 86225, 2392, -1000, -1000, 85095, 3050, -1000, 2488,
	3543, -1000, 85660, 1073, -1000, 1026, 2487, -1000, 95251, 1013,
	2484, -1000, 3817, 3516, 2746, 1026, 2482, -1000, -1000, -1000,
	-1000, -1000, 985, -1000, 65844, -1000, 65844, -1000, 1690, -1000,
	123447, -28, 92436, 3664, -1000, -88, -1000, -1000, -1000, 1042,
	-1000, 58999, -1000, 58999, 98070, 75508, 1010, 3007, 67537, 137083,
	-1000, 1048, -1000, -1000, 137253, -1000, -1000, -1000, 2648, -1000,
	-171, 2822, -1000, 75508, 61294, 2645, -1000, 137253, -1000, -1000,
	-1000, -1000, 137253, -1000, -1000, -1000, 75508, 85095, -1000, 104832,
	84532, -1000, -1000, 1530, 2635, -1000, -1000, -1000, 75508, 1356,
	75508, 75508, 75508, -1000, 104267, -1000, -1000, 2198, 1630, 3425,
	2187, 92436, -1000, 2016, -1000, -1000, -1000, 3445, 3221, 116691,
	-1000, -1000, 3047, -1000, 72069, 94688, -1000, 94125, -1000, 93562,
	-1000, 92436, -1000, 92436, -1000, 3815, 3814, 3813, -1000, -1000,
	3811, -1000, 3810, 3438, -1000, 532, 42228, 137253, 3436, -1000,
	3809, 2084, 3045, 137253, -1000, 3142, 1729, 1725, 116691, -1000,
	-1000, 116691, -1000, 116691, -1000, -1000, -1000, 1632, -1000, -1000,
	2577, -1000, -1000, -1000, -1000, 92436, 92436, 92436, 92436, 1297,
	-1000, 41649, -1000, -1000, 3143, 3808, 1833, -1000, 1949, -1000,
	2999, 3469, -1000, 1526, 1871, 221, 3730, -1000, -1000, 251,
	-1000, -1000, -52, -1000, 122884, -1000, 2667, -1000, 116691, -1000,
	2553, 3037, 3043, 1777, 2408, 2664, -1000, 41070, 2679, 52071,
	2419, 136, -1000, -1000, 136, 136, 32327, -1000, -1000, 68675,
	68675, 24611, 1482, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 48597, 2203,
	48597, 1468, 48597, 48597, 48597, 48597, 2283, -1000, -1000, 2072,
	530, 2160, 671, -1000, -1000, -1000, 3651, 3651, 3651, 515,
	515, 515, 10233, 10233, 616, 3807, 786, -1000, 48597, -1000,
	127, 58417, 48597, 25186, -1000, 440, 14944, 2631, -1000, 438,
	25794, -1000, -1000, -1000, 26984, 621, 40462, 48597, 1057, 137253,
	-1000, -1000, 1603, 3668, 22880, 3068, 2874, 669, 885, 865,
	29982, 29374, 28766, 28158, 837, 623, 48597, 48597, 48597, 48597,
	48597, 48597, 48597, 48597, -1000, -1000, 3690, -1000, 3668, -1000,
	-1000, -1000, -1000, 3668, 1478, 1394, 3668, -1000, 3668, 3668,
	6365, 6365, 39883, 39304, 38725, 52650, 38146, 48597, 27579, 37567,
	36988, -1000, 116691, -38, 3593, 48597, 327, -1000, 134591, -1000,
	327, 327, 668, -93, 137253, 2808, 2808, 56707, 2357, 2311,
	2311, 2311, -1000, 924, 17631, 924, 102578, 2319, 924, 924,
	220, 304, 429, 54387, 2611, 102578, 775, 666, -14, -17,
	-18, -1000, -1000, -20, -21, -1000, -1000, 92436, 664, 25186,
	24611, 219, 2111, -94, 2680, 2673, -1000, 2672, 2671, -1000,
	2663, 2390, -1000, -1000, -1000, 1886, -102, 1467, 92436, 116691,
	1513, 3806, -101, -1000, 1210, -103, -1000, 1085, 215, 3668,
	-1000, -1000, -1000, -1000, -1000, 3805, 3804, -1000, 1064, 663,
	661, 909, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	656, 654, 654, 654, -1000, 278, 652, 262, 651, 650,
	648, -1000, -1000, -1000, -1000, -1000, 2997, 92436, 116691, 1510,
	3803, 81713, -83, 92999, -90, -1000, -1000, 116691, -1000, -1000,
	-1000, 3802, -1000, 92436, -1000, -1000, 92436, 244, 3240, -1000,
	92436, -1000, 92436, 241, 3237, -1000, -1000, 116691, -1000, 92436,
	92436, -1000, 116691, 116691, 116691, 128521, 128521, 228, -1000, 92436,
	926, -104, 1194, -52, -1000, -1000, -1000, -1000, 1647, -1000,
	1851, -1000, -1000, -1000, -1000, -1000, -1000, 1581, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 892, -1000, -1000, -1000,
	-1000, -1000, -1000, 3682, 3677, -39, -1000, -1000, 24611, -1000,
	-53, 1894, 2004, 1461, -1000, 77760, 2461, 3420, 3799, 2719,
	3393, 1674, -1000, 1627, -1000, 3510, 82839, 3570, 3572, 1361,
	-1000, 2994, -1000, -1000, -1000, 975, 1829, 1846, 1460, 1458,
	82839, 2233, -1000, 68675, -1000, 2731, 3503, 1409, 1419, 1409,
	1409, 1388, -1000, 82839, 1844, 1450, 1431, 1430, -1000, -1000,
	2042, 2028, -1000, -1000, 103704, -1000, 1429, 1427, 3611, 3018,
	2258, 841, 2017, -1000, 1381, 1426, 2992, -1000, -1000, -55,
	3553, 3567, 1361, -1000, 2986, 1407, -1000, -1000, -1000, 3501,
	92436, 24611, 1616, 1608, 1642, 1834, 1393, -40, -1000, 3550,
	1386, 1383, -1000, 1081, 5704, 3336, -1000, 128521, 1081, 1081,
	2025, 3236, 2802, 1947, -1000, 2820, 849, 2816, -1000, -1000,
	-1000, 849, -41, 72633, 116691, 214, -1000, 127, 48597, 48597,
	127, 48597, 127, -1000, 3537, 3235, 3229, -1000, -1000, -1000,
	-1000, -1000, 3798, 2059, 2603, -1000, -1000, 647, 2481, 2985,
	116691, 2694, -43, 92436, -1000, 71505, 3225, 128521, 2233, 2478,
	-1000, -1000, 83967, -1000, 3188, 468, 2473, -1000, 684, 3797,
	3181, -1000, 122321, -1000, 3406, 1259, 3180, 1119, 434, 3592,
	-1000, 434, 66409, -1000, 116691, -1000, -28, 5116, 76634, -109,
	-110, 426, -1000, 103141, 116691, 116691, 3356, 2110, 2101, -1000,
	1024, 60148, -1000, 60148, -111, -1000, -171, 2806, 1619, -1000,
	1010, 1010, 849, -1000, 849, -1000, 92436, 3042, -1000, -1000,
	75508, 1010, 1010, 1010, -1000, -1000, -1000, -1000, 3795, 3794,
	3793, 3792, -1000, -1000, 1025, 92436, 116691, 92436, -1000, -1000,
	1920, -1000, 212, -1000, 128521, -1000, 128521, 116691, 92436, -1000,
	1025, 116691, 1025, 116691, 1025, 116691, 1025, 1025, -1000, -1000,
	-1000, -1000, -1000, 127, -1000, -1000, 137253, -1000, 48597, -1000,
	-1000, 1611, 3791, 1706, -1000, 3041, -1000, 3040, -1000, 15,
	-1000, -1000, 1943, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3790, 137253, -1000, 2039, -1000, -1000, -1000, -1000,
	92436, 92436, 92436, 92436, 116691, 3335, -1000, 116691, 3326, 92436,
	-1000, 3729, -1000, -1000, 82839, -1000, 2553, 3037, -1000, -1000,
	-1000, -1000, -1000, -1000, 1778, 2367, -1000, 2632, -1000, 1653,
	-1000, -1000, -1000, 137253, 53229, -1000, -1000, 137253, 1902, -1000,
	51492, 50913, -1000, -1000, 1805, 92436, 2699, -1000, 2699, -81,
	-1000, 134406, 2629, 92436, -1000, -1000, -1000, -1000, -1000, 973,
	1209, 1209, 1375, 1375, 1375, 1375, 3523, 553, 5830, 5747,
	8238, 8238, 6318, 6318, 6318, 6318, 6318, 8238, 5057, 515,
	515, 5057, 5057, 5057, 5057, 5057, 515, 515, 515, 8238,
	8238, 8238, 515, 10233, 137519, 9509, 48597, 48597, 1373, 2067,
	530, 9267, 48597, 10549, 10549, 10549, 10549, -1000, 2338, -1000,
	-1000, -1000, -1000, 2978, 644, 52650, 52650, -1000, -1000, -1000,
	-1000, 26389, 48597, -1000, -1000, -1000, -1000, 36380, -1000, -1000,
	133503, -329, 425, -1000, 206, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 423, -80,
	-15, -1000, 48597, 48597, 48597, 420, -1000, 205, 48597, 116691,
	-1000, 130004, 774, -140, -1000, -112, 1488, -1000, 48597, -1000,
	-1000, 1306, -1000, 1301, 1292, 1282, -1000, 639, 417, -1000,
	204, -1000, 2309, 637, 636, 48597, -1000, -1000, -1000, -1000,
	-1000, 133237, -1000, -1000, 133067, -1000, -1000, 132801, -1000, -1000,
	132631, -1000, -1000, -1000, -1000, -1000, 136817, 129727, 129557, 129124,
	12240, 129087, 17009, -120, 416, -122, 414, 965, 960, 413,
	411, 404, -123, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -125, 403, -1000, 2966, -80,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 401, -1000,
	399, -1000, 136647, -80, 395, 7213, -1000, 52650, 52650, 52650,
	52650, -1000, 393, -1000, 134140, -1000, 136381, 35801, 35801, 35801,
	392, 136211, 48597, -80, -128, -1000, -130, -1000, -1000, 574,
	-131, 1053, 35222, 55547, 24611, -1000, 1053, 1053, 48597, -1000,
	48597, 2643, -1000, -1000, -1000, -1000, 2641, 1993, 2808, 56707,
	-1000, -1000, -1000, -1000, 102578, -1000, 3664, 2863, -1000, 102578,
	-1000, -1000, 116691, 468, -1000, 102578, 102578, 24611, 924, -1000,
	924, 102578, 601, -1000, -1000, -1000, -1000, -1000, 390, 64716,
	-15, 202, 24611, 1026, -1000, -1000, 2770, 2770, 2770, 2770,
	2770, 92436, -1000, -1000, 128521, 1273, -45, -100, 2804, -1000,
	3623, -1000, 2208, -1000, 68675, -1000, 785, 1222, 24611, -1000,
	-1000, -1000, 635, -1000, 3668, 3668, -1000, 3668, 128521, 2964,
	260, 2803, -1000, 2388, -42, 259, 128521, 3787, -1000, -1000,
	244, -1000, 92436, 244, 244, -1000, 92436, 92436, 2315, -1000,
	250, -1000, 248, -1000, -1000, -83, -1000, 1040, 32906, -1000,
	1647, -1000, -1000, 1625, -1000, 2083, -1000, 1214, -1000, -1000,
	-1000, -1000, 32906, -1000, 2575, 116691, 116691, 92436, -1000, 116691,
	-1000, 2272, 128521, -1000, 2471, 121758, 2442, 121195, 68675, -1000,
	-1000, 633, 993, 2628, 2627, 1115, 116691, 116691, 2626, 120632,
	120069, -1000, 3786, 116691, 2177, 48597, 3500, 2361, 2342, 127,
	127, -1000, 127, -1000, -1000, 630, 1368, 92436, 92436, 116691,
	128521, 92436, 2021, -1000, -1000, -1000, -1000, -1000, 83402, -1000,
	-1000, 3687, 3686, -1000, 1409, -1000, -1000, -1000, 1409, 2233,
	1959, 116691, 128521, 92436, 128521, 119506, 118943, -1000, -1000, 1832,
	116691, -1000, -1000, -1000, -1000, 1508, -1000, 841, 1271, 2962,
	48597, 48597, 2257, 127, 127, -1000, 127, 629, 24611, 2066,
	-1000, 3066, 116691, 3723, 118380, 3722, 116691, 116691, 116691, 128521,
	3410, 116691, 116691, 128521, -1000, 117817, 5704, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2247, 73785, 1131, 116691, 1353, -1000, -1000, 1831,
	1268, 1267, 82839, 2176, 1825, 1930, 128521, 60148, 1022, 60148,
	2774, -1000, -1000, 22301, -1000, 137253, 137253, -1000, 137253, -1000,
	71505, 75508, 116691, -1000, 1070, 116691, 77197, 994, 3175, 65279,
	-87, 1010, 75508, 92436, -43, 2694, 116691, -1000, -1000, 2233,
	3174, 468, 2470, -1000, 128521, 3591, 3171, 628, 3780, 3774,
	-1000, 92436, 2387, 2468, -1000, -1000, 117254, 3286, 841, 116691,
	1053, 56707, 2088, -1000, 63015, 1089, 116691, 1941, 252, -1000,
	-1000, -1000, -1, 116691, -1000, 799, -1000, -1000, 5116, 5116,
	1010, -222, 627, -1000, 905, 899, 60721, -141, -1000, 201,
	626, 898, 897, -1000, 3443, -1000, -171, -1000, 75508, 1024,
	60148, 2960, 2953, -1000, -1000, 1039, -1000, 1519, 1010, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-29, 1898, 116691, -83, -83, -68, -45, -1000, 1025, -1000,
	1025, -1000, 1025, -1000, -1000, -1000, 137253, -1000, -1000, -1000,
	1702, 1698, 116691, -1000, -1000, 116691, -1000, 24611, 116691, 92436,
	24611, 92436, 3036, 3035, -1000, -1000, -1000, 116691, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1150, -1000, 1902, 2364,
	-1000, 621, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2549, -1000, -49, 32327, 896, -1000, -1000, 92436, -30,
	48597, 48597, 9131, 6760, 48597, 52650, 52650, -1000, 48597, 6560,
	-1000, -1000, -1000, -1000, -1000, 2950, 620, 48597, 68675, 7030,
	6961, -1000, 388, 16889, 5057, -1000, 48597, -1000, 379, -1000,
	387, 34643, -1000, 135042, -61, -144, -1000, 18224, -80, -149,
	-1000, -1000, 784, -1000, 3282, -1000, 48597, 135945, 2497, 2117,
	1977, 1754, 3668, 3720, 21722, -1000, 66973, 1055, 2334, 132365,
	-1000, -1000, -1000, -1000, 68675, 68675, 48597, 48597, -1000, 48597,
	48597, 48597, -1000, -1000, -1000, 3668, 945, -1000, -1000, -1000,
	945, -1000, -1000, 1409, -1000, 1409, -1000, 48597, -1000, -1000,
	2945, 48597, -1000, 68675, 68675, 52650, 52650, 52650, 52650, 52650,
	52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650, 52650,
	52650, 52650, 52650, 52650, 52650, 2617, 52650, 3649, 3649, 3649,
	1446, -1000, 3034, 2945, 48597, 48597, 68675, 385, 381, 376,
	-1000, 48597, -80, -1000, -1000, 5731, 617, -1000, 2539, -1000,
	2866, -1000, 48597, -1000, -169, -1000, 2611, -1000, -1000, 2866,
	2866, -150, 137253, 56707, 56707, -1000, 612, 48597, 2639, -1000,
	-1000, 773, -325, -1000, 891, -1000, -1000, -1000, -1000, -1000,
	-1000, 888, -1000, 468, -1000, -1000, -1000, 200, 102578, 102578,
	772, -1000, -151, -1000, -1000, -157, -1000, 3590, 375, 24611,
	-1000, 1053, 2771, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2656, -266, 128521, 128521, 1824, 2353, 3719, -1000, 3671, 783,
	771, 197, 3668, 357, 352, 351, -83, 128521, 128521, 1787,
	69248, 128521, -1000, -1000, -1000, 244, -1000, -1000, -1000, 241,
	-1000, -1000, -1000, -1000, 2725, -1000, -52, -1000, -1000, -1000,
	48597, -1000, -1000, 3416, 1265, 1263, -1000, -1000, -1000, 2956,
	-1000, 3169, -1000, 2464, -1000, 1094, 2455, 1879, -1000, 48597,
	609, 2724, 606, 598, 3773, 2099, 3772, 1117, 3164, 2315,
	3158, 2315, -1000, -1000, -1000, 984, -1000, 137253, 2361, -1000,
	597, 596, -1000, -53, 1699, 1978, 1262, 1037, -1000, -1000,
	48597, 48597, 102015, -1000, 476, 3400, -32, -1000, -1000, -1000,
	1785, 1261, 1252, -1000, -1000, -1000, -1000, 2233, 1783, 1247,
	1245, -1000, -1000, -1000, -1000, -1000, 2447, -1000, -1000, 3157,
	1034, -1000, 3089, 3081, 946, 116691, 48597, 48597, 135760, 135478,
	-1000, 1033, -1000, -1000, 48597, -1000, -55, 1240, 3545, 2446,
	92436, -1000, 2315, 3156, 1239, -1000, 1236, -1000, -1000, -1000,
	3549, 3546, 1248, -1000, -1000, -1000, 75508, -1000, -1000, 73212,
	-1000, -1000, 1081, 116691, 128521, 92436, 1911, -1000, -1000, 81713,
	82276, 116691, 2802, -83, 849, -1000, 2651, 849, 1022, 2943,
	-1000, 2670, -1000, 1032, 92436, 3765, 350, -160, -64, 68675,
	-1000, -1000, -1000, -1000, 2442, 92436, 116691, 1325, 2722, 116691,
	116691, 3588, -1000, 2399, 586, 92436, 941, -1000, 3664, -1000,
	-1000, -1000, 1027, -1000, 3541, 92436, 3587, 3155, 1026, 127,
	92436, 3697, -1000, -1000, 3585, 92436, 3140, 2386, 2445, 2589,
	841, 76071, 1026, 2331, -72, -1000, 1941, 34064, 3397, -168,
	-1000, -1000, -1000, 1053, 66409, 56707, 48597, 3764, -173, -1000,
	-1000, -1000, -1000, -1000, 99763, 99763, 75508, 75508, 75508, 1010,
	116691, 116691, 3761, 75508, 75508, 75508, -65, 594, -1000, 886,
	882, 877, -1000, -1000, -1000, -1000, -1000, -1000, 876, 874,
	873, 1024, -1000, -1000, -171, 60148, 127, -1000, 2346, 92436,
	-1000, 21143, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1025,
	-87, -1000, -1000, -1000, 2262, 2412, 2262, 1924, 1917, -1000,
	-1000, 2363, -1000, -1000, -1000, -1000, 2684, 3404, 24611, 3533,
	10549, 48597, 48597, 482, 6283, 590, 10549, 48597, 48597, 68675,
	14182, -178, 48597, 48597, -1000, 48597, 770, 137253, -1000, 3718,
	48597, 346, 341, -1000, -1000, -1000, 3666, -1000, -1000, -1000,
	137253, 48597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 339,
	-1000, 128, -1000, -1000, -1000, 125136, -1000, 48597, 338, 3499,
	-1000, 337, 333, 16081, 11252, 132195, 131929, 131759, 330, -1000,
	-1000, 328, 322, 137253, 3034, 137253, -1000, -1000, 944, 944,
	1400, 1400, 1400, 1400, 3649, 1015, 1200, 840, 564, 564,
	564, 974, 1446, 1446, 564, 564, 564, 1446, 2942, 2633,
	593, 7414, -1000, -1000, 137253, 137253, 321, -1000, -1000, -1000,
	-80, 318, 5731, -1000, 2860, 3496, 137253, -1000, 56707, 2860,
	2860, -1000, -1000, 1993, 116691, 137253, 56707, -1000, 2863, -1000,
	19400, 18815, -1000, 24611, -1000, -1000, -1000, -1000, 3664, -1000,
	64716, -1000, 589, -1000, 120, -1000, 2771, -1000, 871, -1000,
	-1000, 75508, 75508, 2770, -1000, 2884, -266, -254, 116691, -1000,
	-1000, 766, 3760, 780, 24611, 317, -1000, -1000, -1000, -83,
	-83, 116691, 2940, 92436, 116691, 1499, -83, -1000, -1000, -1000,
	3355, 137253, 116691, 116691, 1660, 101452, 116691, 3139, -1000, 3134,
	-1000, 1115, 2521, 131493, 57280, -1000, 57280, 116691, -1000, -1000,
	-1000, -1000, 2007, 1809, 3759, 1177, -1000, 3453, 116691, -1000,
	116691, -1000, -1000, -1000, 116691, 116691, 92436, 116691, -1000, 128521,
	3110, -183, 137253, -66, -1000, 870, -1000, 1406, -1000, 20564,
	116691, 128521, 92436, 116691, 128521, 92436, 3132, 116691, 2292, -1000,
	-1000, 3080, -1000, 137253, 135308, 127, 48597, 3109, -184, 24611,
	-1000, 3716, 3715, 3128, 3457, -1000, 116691, 3713, 116691, 92436,
	3354, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1772, 1234,
	1233, 2382, 2380, 2351, -68, 2176, 1022, -69, 587, -1000,
	864, -1000, -1000, 863, 861, 1022, -1000, 75508, 60148, 3756,
	468, -1000, 2711, -1000, 97505, 77197, 2374, -1000, -1000, 576,
	116691, 116691, 575, -1000, 127, -1000, 3755, 100326, 573, -1000,
	2343, -1000, 765, -1000, 2583, 128521, 2233, 127, 92436, -1000,
	1021, 468, 314, -70, -1000, 3190, 1110, 24611, 92436, 3126,
	2594, 841, 76071, -1000, 1259, 2664, -1000, -71, -1000, 667,
	127, 2331, -1000, -72, 137253, -1000, 858, -1000, -186, -1000,
	-1000, 306, -1000, 3344, -1000, -1000, -191, -1000, -1000, 3971,
	3971, 75508, 60148, 75508, 75508, 75508, 60148, -1000, 1024, 849,
	-1000, 2472, -1000, -1000, -1000, -1000, -1000, 24611, 1789, -1000,
	568, 566, -1000, -1000, -1000, -1000, 3404, 10549, 10549, 48597,
	48597, 48597, 10549, 14182, -192, -1000, 10549, 10549, -80, -1000,
	-1000, 135042, -1000, -1000, -1000, 137253, -1000, 19985, 2277, -1000,
	131323, -1000, 32327, -1000, -1000, 48597, 48597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 52650, 2938, 562, 68675, -1000,
	-1000, 303, 1016, 48597, 50334, 2611, 1016, 1016, -1000, -198,
	-1000, -1000, -1000, 3664, -1000, 3664, 120, -1000, -1000, 3754,
	24611, -1000, 75508, -1000, -1000, -1000, 2350, -1000, -1000, 3086,
	-142, 484, -1000, 3753, -1000, -1000, 140, 128521, 2930, 119,
	2794, -1000, -1000, -1000, 2783, 3583, -1000, 2014, -1000, 116691,
	116691, -1000, 116691, -1000, 24611, 116691, 2862, 1321, -1000, 993,
	2623, 549, 52650, 1146, 92436, 921, 2840, 2826, -1000, 3608,
	3490, 2818, -204, -1000, 116691, 48597, 116691, -205, -206, 2433,
	-1000, -1000, 1140, 1318, 48597, 1136, -1000, -1000, -1000, 68675,
	540, 2315, 2315, -207, -220, -1000, -1000, -1000, 48597, 1230,
	116691, 33485, -1000, 3752, 3400, -1000, -1000, -1000, -1000, -1000,
	-1000, 116691, -1000, 116691, -1000, 48597, -1000, 134857, 48597, 1228,
	-1000, -1000, -1000, 3712, 2315, 24611, 2315, -1000, 2315, 3457,
	1175, 116691, 128521, 92436, 1803, 1803, 3033, -1000, -1000, -1000,
	2517, 2517, 75508, 60148, 60148, -1000, -73, 1022, -1000, 3582,
	2276, 3751, -1000, -1000, -1000, -1000, 2616, -1000, -1000, -1000,
	116691, 2614, 2846, 57280, 539, 538, 116691, 1012, -1000, -225,
	-1000, 857, 855, 77197, 994, 977, -1000, -74, 537, -1000,
	843, -1000, -1000, -1000, -1000, 468, -1000, 2723, 3581, -1000,
	3698, 536, 534, 116691, 2377, 533, 24611, 3395, 841, 76071,
	-1000, 3286, 1941, -1000, 2440, 116691, 3389, -1000, 2664, 530,
	-1000, 1010, 526, 1010, -1000, -226, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -75, -1000, 893, 890, -1000, -1000,
	92436, 92436, 48597, 48597, -1000, 10549, 10549, 10549, -1000, 302,
	-1000, -1000, 2331, 3486, -1000, -76, 131057, 130887, 730, 52650,
	68675, -228, -1000, -1000, 116691, 137253, -77, -1000, 137253, 524,
	521, 447, -1000, -1000, -1000, 764, 565, -1000, -1000, -1000,
	-1000, 128521, 3750, -1000, 128521, -83, 128521, 128521, 1763, 100889,
	116691, -1000, -1000, 1879, 1852, -1000, -1000, -1000, 116691, 2444,
	-1000, -1000, -1000, 1114, 48597, 7414, 52650, 519, 48597, -1000,
	517, 516, 3580, 3319, -1000, 2713, 2954, 2122, 57280, -1000,
	3404, -1000, 130621, -1000, 1090, 2032, -1000, -1000, -1000, -1000,
	137253, 52650, 3457, 57280, -1000, -1000, 494, 493, 137253, 491,
	842, 2929, -1000, -1000, -1000, -1000, -1000, 137253, 127, 137253,
	487, 3545, -1000, -1000, -1000, -1000, 2315, 92436, -1000, -1000,
	-1000, 1225, -1000, -1000, -1000, -1000, 3747, 3746, 2927, 81713,
	-1000, -233, -1000, -1000, -1000, 2030, 127, 994, -1000, -1000,
	2374, 486, -1000, -1000, 2528, 2528, -234, 57280, 57280, -235,
	2372, 2718, -1000, 100326, 32906, 32906, 299, 3579, 977, -1000,
	3657, -1000, 3325, 3325, 48597, 3578, 3341, -1000, 127, -1000,
	3697, 57280, -1000, 92436, 57280, 2376, 2148, 2572, 76071, -1000,
	2589, -1000, -1000, -236, 116691, 1941, -1000, -1000, 75508, -1000,
	-1000, 2472, -1000, 116691, -1000, 116691, -1000, -1000, -242, -244,
	-1000, 2251, 48597, 32327, -1000, -1000, 730, -245, -1000, -79,
	-1000, 3576, 50334, 3745, 3743, 3739, -1000, -1000, -266, -1000,
	-83, -83, -83, 116691, -1000, 2011, -1000, 2442, -1000, -1000,
	3119, 2856, 130451, 7414, 2541, 116691, 130174, 2233, 2233, -1000,
	3574, 2944, -1000, -1000, 2257, 483, -1000, -1000, -1000, -1000,
	896, 116691, -1000, 2851, 92436, 7414, 1112, -251, 2262, 2262,
	48597, 31748, 2290, -1000, 48597, -1000, -1000, 3457, 128521, -1000,
	-1000, 128521, 2375, -1000, 2906, 3660, -1000, 2372, 116691, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1090, -252, -253, -1000, -1000, 3449, -1000, 3340, -1000, -1000,
	-1000, 2711, 127, -1000, -1000, -1000, -258, 137253, 127, 3738,
	1021, 298, -259, 1110, -260, 92436, 2031, -1000, 841, -1000,
	2594, 1053, 3295, -1000, -265, -1000, -267, -268, -1000, -1000,
	296, 49755, 49755, 49755, -80, -81, -1000, 116691, 479, -1000,
	-1000, -1000, -1000, -1000, 116, -1000, -1000, 3076, 1018, -1000,
	868, 1976, 295, 1129, 292, 286, -1000, -1000, -1000, 2818,
	-1000, 116691, -1000, -1000, 1017, 468, -1000, 48597, 1090, -275,
	-1000, 1088, -276, -1000, 1086, -281, -1000, 2926, -1000, -283,
	2315, -266, 228, 1803, 1014, 3530, -1000, -1000, -1000, 2557,
	-284, -1000, -1000, 2122, 1090, 2257, 2428, -1000, 2276, 1012,
	-1000, -1000, -1000, -1000, -1000, 1090, 464, 2122, 462, 1590,
	841, -1000, -1000, 1409, 3395, 3293, 1362, 1010, -1000, -1000,
	-1000, 3149, -1000, 53808, 2397, 1912, 133955, 3149, 3149, -1000,
	-1000, 128521, 116691, 3519, -1000, 912, 895, 1556, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1053, -286, 3517, 2541,
	137253, -1000, -1000, 2262, 2780, -1000, 2262, 2925, -1000, 2285,
	-1000, -1000, -1000, -1000, 2918, -1000, 1779, 3648, -1000, -1000,
	-1000, 116691, 2257, 2122, 1009, 1883, 1881, 3736, 994, 2372,
	2122, 57280, 2257, 57280, 2224, -1000, 116691, -1000, 2148, 1347,
	-1000, 1671, -1000, -1000, 1919, 3604, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -83, -1000, 829, -1000, 3311, -1000, 1134,
	2076, 2076, -1000, -1000, 826, 868, -1000, 458, -1000, 457,
	-1000, 128521, 2339, -1000, -1000, -1000, 1009, 2257, 1053, 456,
	-1000, 3735, -1000, 2372, -1000, 2257, -289, 1009, -301, -1000,
	-1000, -1000, -87, 2031, -1000, 1668, 66409, 1909, -1000, -1000,
	2316, 49176, 48597, -1000, 3634, -1000, -1000, 2674, -1000, 48597,
	2818, 48597, 48597, 228, 64143, 1053, 1009, -1000, -1000, 2557,
	1009, 1090, 1053, 2122, 1590, 66409, -278, -1000, -1000, -1000,
	137253, -1000, -1000, -1000, 137253, -1000, -309, -310, -1000, -222,
	99763, -1000, 1053, -1000, 1053, 2122, -1000, 2257, 2224, -278,
	-1000, 2257, 1201, -311, -1000, -1000, 2257, 1009, -1000, -1000,
	-1000, -1000, 455, -1000, 1009, 1053, 48597, 1053, -1000, -317,
	-1000, 2257, -1000,
}

var sqlPgo = [...]int{
	0, 4567, 4566, 4565, 4564, 4562, 4560, 4559, 4558, 4557,
	4555, 4554, 4553, 146, 4552, 4551, 4546, 4545, 4544, 4543,
	4542, 4541, 4540, 4539, 4538, 4537, 4535, 4530, 4529, 4528,
	4522, 4521, 4516, 4515, 4513, 4510, 4509, 4508, 4507, 4504,
	4502, 4501, 4500, 4497, 4496, 4495, 4494, 4493, 4492, 4490,
	4484, 4483, 4481, 4474, 4471, 4466, 4464, 4463, 4461, 4459,
	4458, 4457, 4455, 4452, 4444, 4439, 4437, 55, 4425, 4420,
	4418, 4413, 4411, 4404, 4400, 4394, 4392, 4391, 4389, 4385,
	4384, 4378, 4374, 4373, 4372, 4371, 4369, 4367, 67, 4360,
	275, 4359, 4351, 4349, 4344, 4343, 4341, 4337, 4336, 4332,
	4331, 4330, 4329, 271, 4328, 129, 164, 4327, 4326, 3899,
	4325, 4321, 270, 4319, 4318, 4317, 4315, 4314, 281, 4313,
	4311, 4308, 4307, 4305, 4303, 4302, 4301, 4299, 4297, 4295,
	4293, 135, 209, 4285, 4284, 550, 4283, 4282, 4281, 4279,
	4278, 4277, 4276, 4274, 4273, 4272, 4271, 250, 181, 4270,
	269, 4269, 4268, 4267, 4265, 4264, 4261, 4260, 4259, 4257,
	4256, 4255, 4254, 4252, 4249, 4248, 4247, 4246, 4244, 4243,
	4242, 4241, 4239, 4238, 4236, 4233, 4229, 4225, 4222, 4221,
	4219, 4216, 4215, 4214, 4212, 4210, 4209, 4207, 4206, 4204,
	246, 224, 149, 4202, 4199, 268, 267, 4198, 4197, 4196,
	4193, 4191, 126, 16, 29, 4190, 4187, 97, 98, 87,
	106, 104, 102, 4185, 114, 4183, 134, 68, 4181, 21,
	4, 171, 253, 8392, 248, 4180, 4172, 4166, 245, 202,
	4165, 243, 4164, 4163, 4162, 4161, 4158, 4154, 80, 51,
	185, 182, 180, 178, 82, 56, 105, 96, 60, 43,
	12, 91, 222, 19, 5, 264, 4153, 262, 11, 147,
	7, 33, 4149, 4148, 4147, 4146, 3596, 120, 4144, 266,
	249, 177, 4142, 4141, 4140, 699, 4139, 4137, 50, 4136,
	122, 86, 117, 17, 132, 4135, 157, 172, 45, 4133,
	166, 69, 4132, 4131, 112, 100, 8653, 12056, 4121, 4120,
	115, 78, 152, 412, 210, 197, 203, 214, 170, 174,
	62, 221, 215, 186, 339, 4119, 251, 4117, 3575, 89,
	189, 162, 5184, 4116, 4115, 4114, 81, 4113, 110, 4112,
	4110, 70, 14, 3, 1, 148, 35, 36, 13, 4109,
	44, 133, 49, 26, 4107, 28, 4106, 4102, 4101, 4100,
	48, 4099, 46, 173, 4092, 4091, 282, 4090, 101, 59,
	84, 4087, 25, 223, 4086, 239, 139, 4085, 4084, 256,
	211, 196, 4083, 95, 238, 4082, 4081, 4080, 4079, 4077,
	4075, 155, 8, 141, 4074, 4073, 151, 4071, 54, 244,
	204, 4070, 63, 4069, 4068, 183, 52, 153, 274, 190,
	233, 128, 227, 192, 235, 4067, 4066, 4065, 200, 4064,
	4061, 229, 165, 4060, 4059, 254, 283, 90, 47, 92,
	242, 79, 198, 168, 4058, 208, 4057, 4056, 277, 188,
	226, 10, 2, 108, 113, 4052, 6, 234, 160, 237,
	125, 4051, 7237, 2388, 2088, 4050, 4047, 154, 131, 77,
	138, 159, 265, 109, 4043, 4042, 3094, 4033, 4032, 4030,
	4029, 199, 4028, 4027, 4026, 150, 176, 219, 4020, 127,
	71, 53, 23, 144, 252, 280, 121, 230, 207, 260,
	4016, 4015, 4013, 201, 4011, 94, 107, 169, 206, 258,
	66, 4008, 163, 4006, 161, 2208, 72, 158, 4005, 232,
	4004, 3999, 3998, 3996, 3993, 3988, 3987, 2194, 240, 3985,
	3984, 3982, 32, 194, 3979, 263, 193, 187, 118, 83,
	3976, 111, 3085, 3975, 1767, 218, 64, 175, 58, 3974,
	1713, 57, 3973, 0, 13205, 9386, 11756, 12772, 3972, 3254,
	3970, 3969, 3968, 228, 73, 3967, 3965, 3964, 116, 3963,
	99, 3962, 3956, 74, 3954, 22, 18, 20, 30, 27,
	479, 460, 3953, 3952, 34, 143, 136, 3951, 273, 236,
	3950, 3949, 3948, 3947, 93, 3946, 42, 3945, 39, 3944,
	3943, 40, 15, 76, 3942, 3941, 156, 3939, 119, 257,
	3938, 167, 3937, 85, 145, 3936, 3934, 3933, 65, 61,
	261, 213, 217, 88, 3932, 288, 3931, 205, 3930, 3929,
	24, 3928, 3927, 247, 124, 123, 41, 255, 142, 37,
	184, 225, 3926, 3924, 179, 3918, 3917, 3916, 284, 3915,
	3914, 31, 3911, 3909, 3907, 9, 3906, 3905, 212, 3262,
	3904, 3903, 38, 3902, 191,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 600,
	600, 600, 601, 601, 602, 602, 602, 24, 45, 17,
	18, 18, 18, 18, 603, 603, 603, 603, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 596, 596, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 604, 604, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 528,
	528, 623, 623, 624, 624, 624, 624, 624, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 591, 591,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 610, 610, 609, 608, 608, 608, 611, 611,
	611, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 530, 530, 531, 531, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 68, 192, 192, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	71, 76, 76, 76, 76, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 626, 626, 627, 627, 628, 628,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 85, 85, 354, 354,
	317, 317, 86, 86, 86, 87, 87, 88, 88, 72,
	72, 589, 589, 370, 370, 487, 487, 73, 597, 597,
	597, 599, 599, 598, 598, 90, 90, 393, 393, 91,
	91, 91, 91, 91, 91, 92, 92, 92, 92, 92,
	92, 92, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 100, 100, 100, 100,
	100, 101, 101, 101, 98, 98, 98, 95, 95, 95,
	94, 94, 94, 99, 99, 99, 588, 306, 306, 97,
	97, 97, 96, 96, 96, 371, 371, 102, 102, 102,
	102, 318, 103, 103, 103, 103, 103, 103, 103, 103,
	106, 106, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 489, 489, 104, 104, 104,
	454, 454, 109, 109, 109, 409, 409, 110, 110, 110,
	110, 110, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 593, 593, 363, 363, 269, 269, 269,
	269, 122, 122, 122, 122, 123, 123, 123, 124, 124,
	197, 197, 140, 140, 140, 140, 139, 139, 139, 139,
	139, 139, 139, 139, 62, 62, 62, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 67, 67, 67,
	143, 143, 620, 620, 145, 142, 142, 142, 142, 142,
	141, 141, 144, 144, 144, 144, 146, 148, 148, 148,
	148, 148, 147, 147, 147, 147, 147, 149, 149, 521,
	521, 379, 379, 519, 519, 540, 540, 520, 520, 324,
	324, 324, 324, 324, 325, 325, 325, 529, 529, 529,
	529, 529, 529, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 198, 198, 199, 200,
	200, 200, 200, 200, 175, 175, 175, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 380, 380,
	178, 178, 178, 162, 162, 151, 151, 151, 151, 151,
	151, 151, 156, 156, 156, 156, 156, 156, 156, 156,
	152, 152, 164, 164, 164, 164, 164, 157, 157, 158,
	158, 158, 159, 159, 159, 159, 185, 185, 161, 161,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 153,
	153, 153, 153, 166, 166, 166, 166, 416, 416, 416,
	190, 190, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 165, 188, 188,
	188, 188, 188, 188, 612, 612, 613, 613, 613, 182,
	182, 182, 182, 182, 182, 468, 468, 176, 176, 176,
	176, 181, 181, 181, 181, 184, 184, 184, 184, 399,
	399, 173, 173, 173, 174, 174, 174, 179, 179, 180,
	355, 355, 177, 177, 183, 183, 183, 183, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 155, 155, 155,
	155, 186, 186, 172, 172, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 630, 630, 168, 168,
	168, 167, 167, 167, 167, 170, 170, 171, 171, 171,
	171, 171, 171, 169, 160, 189, 590, 590, 586, 586,
	586, 586, 586, 586, 586, 586, 587, 587, 587, 587,
	592, 592, 114, 114, 114, 114, 114, 114, 114, 125,
	125, 125, 125, 125, 125, 125, 128, 128, 115, 115,
	115, 115, 115, 115, 115, 118, 118, 116, 116, 116,
	116, 117, 117, 80, 80, 80, 80, 80, 15, 15,
	15, 81, 81, 260, 260, 219, 219, 219, 342, 342,
	220, 220, 332, 332, 332, 332, 217, 217, 218, 218,
	82, 82, 631, 631, 631, 605, 605, 605, 606, 606,
	606, 606, 606, 606, 326, 326, 327, 327, 434, 434,
	434, 434, 434, 330, 330, 330, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 340, 341, 341, 333, 333,
	339, 338, 338, 337, 337, 336, 336, 334, 335, 335,
	335, 344, 344, 343, 346, 346, 345, 433, 549, 549,
	551, 551, 551, 551, 551, 551, 551, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 417, 417, 632, 632, 633, 634,
	547, 547, 547, 548, 543, 543, 544, 544, 544, 544,
	544, 328, 328, 329, 329, 329, 329, 545, 546, 361,
	361, 472, 550, 550, 552, 552, 554, 635, 635, 635,
	635, 635, 635, 636, 636, 636, 432, 432, 431, 431,
	352, 352, 555, 555, 555, 555, 556, 556, 556, 556,
	556, 559, 558, 557, 557, 557, 557, 557, 84, 84,
	84, 396, 396, 395, 395, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	194, 194, 272, 272, 272, 78, 78, 78, 12, 12,
	12, 12, 12, 12, 12, 287, 287, 13, 13, 13,
	607, 607, 607, 83, 83, 83, 83, 83, 83, 350,
	350, 350, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 595, 595, 594, 594,
	273, 273, 638, 638, 89, 89, 89, 89, 89, 89,
	89, 89, 490, 490, 491, 491, 77, 77, 77, 77,
	77, 418, 418, 415, 415, 414, 414, 360, 360, 470,
	470, 470, 471, 277, 277, 278, 278, 238, 238, 238,
	31, 30, 22, 22, 26, 26, 27, 27, 259, 259,
	259, 259, 259, 259, 259, 259, 259, 28, 28, 48,
	48, 48, 48, 49, 49, 49, 49, 52, 52, 53,
	53, 47, 47, 47, 47, 50, 50, 44, 44, 54,
	54, 54, 54, 54, 614, 616, 616, 615, 615, 619,
	619, 619, 619, 619, 619, 617, 617, 618, 618, 621,
	621, 622, 622, 121, 121, 126, 126, 126, 126, 126,
	127, 127, 127, 127, 129, 129, 129, 129, 138, 138,
	193, 193, 193, 193, 193, 193, 193, 56, 56, 56,
	56, 69, 69, 69, 69, 136, 640, 640, 640, 137,
	137, 137, 639, 639, 270, 270, 428, 428, 429, 429,
	641, 641, 430, 430, 430, 430, 430, 263, 262, 264,
	264, 265, 265, 75, 75, 75, 253, 253, 252, 254,
	254, 255, 255, 250, 250, 532, 532, 257, 257, 257,
	258, 258, 246, 246, 247, 247, 248, 248, 249, 249,
	261, 261, 642, 642, 112, 112, 112, 196, 196, 316,
	316, 316, 425, 425, 425, 353, 353, 284, 284, 427,
	427, 427, 427, 427, 392, 392, 392, 195, 195, 368,
	368, 382, 382, 383, 383, 484, 484, 384, 119, 119,
	120, 120, 135, 135, 223, 223, 221, 221, 221, 221,
	221, 221, 221, 221, 228, 228, 229, 229, 230, 230,
	231, 232, 232, 232, 232, 372, 372, 233, 233, 233,
	222, 222, 222, 224, 224, 224, 224, 224, 224, 224,
	227, 227, 227, 227, 234, 234, 234, 226, 226, 566,
	566, 566, 568, 568, 570, 570, 569, 569, 565, 565,
	567, 567, 637, 637, 398, 398, 398, 349, 351, 347,
	347, 348, 348, 358, 358, 356, 357, 357, 359, 359,
	469, 469, 469, 239, 239, 239, 389, 389, 389, 389,
	390, 390, 421, 421, 419, 419, 419, 419, 420, 420,
	422, 422, 422, 423, 423, 424, 424, 386, 386, 387,
	387, 388, 388, 388, 388, 450, 450, 225, 225, 225,
	365, 365, 365, 366, 366, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 441, 441, 439, 439,
	439, 439, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 474, 475, 475, 367, 367, 476, 426, 426, 584,
	584, 584, 585, 585, 467, 467, 477, 477, 477, 477,
	477, 477, 465, 465, 466, 466, 485, 486, 486, 402,
	402, 402, 402, 400, 400, 403, 403, 403, 403, 403,
	401, 401, 478, 478, 478, 478, 391, 391, 479, 479,
	479, 479, 480, 481, 481, 482, 482, 435, 436, 436,
	492, 492, 492, 492, 494, 364, 364, 364, 364, 364,
	542, 541, 541, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 509, 509, 509, 509, 509, 509,
	509, 495, 495, 495, 495, 495, 499, 499, 499, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 498, 498,
	500, 500, 505, 505, 506, 506, 506, 501, 502, 507,
	507, 507, 507, 643, 643, 511, 511, 503, 503, 503,
	503, 503, 503, 503, 503, 503, 497, 497, 497, 504,
	504, 504, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 411, 411, 411, 411, 410, 410, 412, 412, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	444, 444, 444, 444, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 560,
	560, 560, 560, 560, 560, 560, 560, 446, 446, 563,
	563, 564, 564, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 571, 571, 572, 572, 574, 574,
	575, 575, 576, 577, 577, 577, 578, 579, 579, 573,
	573, 580, 580, 580, 580, 581, 581, 582, 582, 582,
	582, 582, 583, 583, 583, 583, 583, 456, 456, 457,
	457, 463, 463, 463, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 323,
	323, 322, 274, 274, 274, 274, 274, 274, 377, 377,
	375, 375, 375, 378, 378, 376, 376, 374, 374, 373,
	373, 453, 453, 451, 451, 455, 455, 404, 404, 510,
	510, 510, 510, 510, 510, 510, 510, 405, 405, 405,
	413, 406, 406, 407, 407, 407, 407, 407, 447, 448,
	408, 408, 408, 449, 449, 458, 462, 462, 461, 460,
	460, 459, 459, 437, 437, 438, 438, 385, 385, 644,
	644, 381, 381, 483, 483, 483, 483, 320, 320, 369,
	369, 319, 319, 311, 311, 312, 312, 312, 312, 362,
	362, 464, 464, 512, 512, 513, 513, 514, 514, 515,
	515, 516, 517, 518, 452, 452, 295, 294, 281, 282,
	293, 292, 291, 280, 283, 288, 289, 290, 285, 286,
	302, 301, 300, 251, 256, 307, 308, 308, 310, 310,
	309, 309, 297, 298, 299, 488, 279, 313, 313, 314,
	314, 314, 315, 315, 315, 315, 275, 275, 276, 276,
	303, 303, 304, 305, 305, 296, 296, 296, 266, 266,
	266, 267, 267, 268, 268, 526, 526, 523, 523, 523,
	524, 524, 524, 525, 525, 525, 525, 522, 522, 522,
	522, 522, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 534, 534, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 536, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 4, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 6, 3, 8, 3, 4, 3, 3, 4, 3,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 3, 2, 0, 1, 0, 1, 0,
	4, 3, 3, 3, 3, 3, 6, 4, 4, 4,
	3, 5, 3, 3, 3, 3, 3, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	1, 2, 1, 2, 1, 2, 7, 3, 2, 0,
	1, 3, 3, 1, 0, 1, 2, 2, 1, 6,
	5, 1, 2, 1, 3, 2, 0, 7, 2, 5,
	0, 1, 3, 3, 1, 9, 3, 2, 0, 2,
	2, 2, 2, 2, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 6, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 1, 1, 3, 4,
	6, 3, 3, 5, 3, 1, 3, 2, 2, 2,
	2, 1, 2, 2, 5, 3, 3, 6, 6, 3,
	1, 1, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 3, 5, 7, 2,
	3, 0, 3, 5, 2, 3, 0, 2, 3, 2,
	3, 2, 7, 4, 7, 8, 8, 9, 11, 5,
	2, 6, 9, 4, 7, 7, 10, 7, 10, 10,
	13, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 6, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 3, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 16, 19, 15, 18,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 7, 10, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 610, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 391, 437, 449, 406, 143, 428, 411,
	-144, -145, 467, -56, -69, -137, -136, 73, 130, 421,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -625, 102, -567,
	-93, -96, -129, -629, 164, 224, -115, -116, -117, 373,
	-123, -124, 430, -126, -127, -128, 433, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 472, -180, -189, -158, 533, 49, 488,
	82, 148, 441, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -566, -94, -95, -98, -100, -101, -97, -99,
	429, -224, -222, 607, 548, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 570, 579, -227, -225, -226, -234, 459, 556,
	508, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, -318, 2, -297, -303, -304, -305, -296,
	-266, -536, -539, 4, -533, -537, 171, 234, 336, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 334, 329, 330, 331, 323, 324,
	320, 325, 321, 322, 326, 327, 333, 328, 338, 339,
	340, 343, 221, 345, 346, 349, 367, 353, 354, 355,
	358, 359, 362, 365, 366, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 378, 379, 381, 382, 383, 385,
	386, 387, 389, 391, 392, 394, 395, 397, 398, 399,
	400, 401, 402, 403, 405, 406, 408, 407, 409, 411,
	413, 414, 415, 421, 428, 422, 424, 425, 426, 427,
	429, 430, 431, 432, 433, 435, 436, 437, 439, 440,
	441, 442, 443, 445, 447, 448, 452, 453, 469, 470,
	490, 449, 450, 451, 454, 455, 456, 457, 458, 462,
	460, 461, 463, 464, 465, 467, 468, 471, 472, 474,
	475, 476, 477, 478, 479, 480, 483, 485, 486, 487,
	488, 507, 489, 491, 495, 496, 497, 498, 492, 493,
	506, 500, 501, 503, 504, 509, 510, 511, 512, 513,
	514, 515, 516, 518, 526, 527, 528, 530, 533, 534,
	535, 536, 524, 538, 539, 542, 543, 544, 547, 545,
	546, 548, 550, 553, 554, 555, 561, 560, 562, 563,
	565, 566, 571, 572, 574, 575, 576, 36, 50, 51,
	54, 56, 58, 69, 70, 71, 75, 125, 126, 155,
	167, 168, 180, 195, 196, 208, 210, 218, 219, 220,
	241, 242, 244, 249, 271, 342, 344, 360, 364, 380,
	384, 388, 390, 404, 444, 481, 494, 499, 519, 520,
	521, 522, 529, 531, 556, 557, 558, 564, 573, -318,
	2, -297, 351, -290, 2, -266, -266, 391, 28, 2,
	28, 379, 461, 511, 513, 2, -593, -363, 2, 28,
	-269, -266, 102, 206, 459, -290, 2, -593, 206, -363,
	25, 2, -266, 2, 365, 22, 27, 66, 77, 98,
	141, 166, 189, 192, -628, 367, 398, 447, 463, 506,
	516, 530, 2, 560, 292, 460, 508, 234, 120, 535,
	454, -607, 452, 453, 365, 396, 439, 209, 549, -270,
	2, 449, -266, 292, 2, 610, 94, 74, 444, 464,
	-147, 2, 282, 527, -148, -149, -146, 519, -521, 454,
	439, 314, -266, 610, 610, 610, 28, -279, -266, 508,
	234, 454, 120, 504, 610, 2, 508, 370, 560, 460,
	120, 401, 234, 535, 192, 141, 27, 454, -607, 584,
	585, 292, 127, -591, 2, -586, 4, -537, -533, -312,
	-311, 508, 514, 120, -305, -296, 599, -304, 610, 610,
	610, 610, 2, 252, 253, 400, 399, 464, 465, 28,
	610, 610, 610, 610, 452, 2, 166, 22, 27, 66,
	93, 98, 127, 189, 192, 356, -626, 367, 398, 463,
	506, 510, 516, 530, -606, 489, 68, 427, 454, -605,
	-607, 292, 535, 141, -414, 120, 282, 204, 543, 513,
	511, 541, 133, 240, 546, 545, 610, 610, -106, 2,
	607, 32, 31, -105, -109, 143, 467, -216, 508, 245,
	2, -266, 610, 610, 610, 2, 252, 253, 452, 453,
	28, 610, 610, 190, -586, 2, 610, 610, 610, 2,
	28, 252, 253, 452, 453, 245, 2, 68, 456, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 2, -191, 464, 489, 215,
	47, 46, 74, 28, 397, 79, 371, 121, 127, 150,
	536, 207, 234, 235, 260, 93, 94, -416, 44, 253,
	68, 252, 453, -612, 452, -468, 509, 455, 461, 503,
	264, 449, 527, 102, 550, 440, 576, 401, 402, 501,
	415, 283, 159, 191, 4, 120, 314, 439, 466, 268,
	267, 519, 282, 448, 374, 84, 610, -637, 2, 508,
	-639, 2, 527, 527, 2, -639, 2, -639, 2, -639,
	2, -640, 527, 573, 610, 610, 610, 610, 610, 610,
	610, 610, 610, 610, 610, 610, 610, 610, 610, 610,
	610, 610, -222, -224, -223, 610, 610, 610, 610, 610,
	610, 610, -191, 464, 2, 74, 28, -356, -358, 540,
	243, 152, 357, -221, -223, 2, -566, -519, 2, -442,
	-540, -444, 597, 598, 590, 505, 67, -322, 335, 577,
	-456, 127, 541, 351, -539, -445, -458, 155, 367, 444,
	-378, 8, 9, 5, 6, 7, -275, -446, -452, 532,
	170, 341, -315, 611, 10, 607, -563, -223, -457, 37,
	210, 65, -523, -314, -276, -495, 244, -313, -296, -560,
	-561, 4, -533, -534, -524, -498, -506, -502, -503, -509,
	-266, -536, 77, 111, 112, 110, 115, 114, 285, 284,
	116, 113, 466, 549, 66, 36, 218, 219, 249, 342,
	220, 75, -562, 142, -535, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 54, 557, -507, 122, 519,
	520, 521, 522, 195, 196, 58, 167, 168, 364, 388,
	499, 529, 531, 208, 271, 43, 106, 191, 239, 222,
	248, 250, 254, 272, 275, 315, 332, 337, 361, 363,
	438, 473, -643, 558, 494, 69, 70, -568, 407, -569,
	-290, -568, 610, 610, 612, 610, -347, -349, -351, 2,
	28, 139, 607, 2, -473, 2, -474, -478, -223, 265,
	-477, 607, -475, 605, -297, 352, -564, 445, -560, -561,
	-275, -296, -314, 4, -533, -535, 609, -352, 607, 120,
	454, 508, 78, 234, 93, 166, 192, -409, 607, -266,
	28, 351, 523, 612, -348, 395, -454, 607, 351, 354,
	190, 354, 60, 296, 2, 2, 2, 2, 2, 218,
	-266, 508, 119, 2, 263, 2, 2, 2, 2, 2,
	2, 2, -371, 218, 2, -297, 560, -371, 218, 2,
	-371, 218, 2, -415, 2, 87, -280, 218, 2, -266,
	-306, 218, 2, -301, -303, -310, 218, 2, -308, -266,
	-528, 218, 2, -527, 4, -533, 116, 466, -442, 2,
	-135, 2, 60, -266, 560, 2, 469, 2, 607, -147,
	2, 71, 527, 43, 464, -148, 2, -429, 2, -430,
	-262, -263, -264, -485, -265, 251, 394, 403, 580, 131,
	335, 576, -620, 190, 589, 523, -519, -519, -519, -379,
	609, 2, 2, 2, 2, 2, 2, -478, 218, -297,
	2, -294, -522, 4, -533, -537, -534, -538, -536, 28,
	31, 32, 33, 35, 37, 38, 39, 40, 57, 65,
	66, 72, 76, 78, 87, 93, 102, 110, 111, 113,
	112, 114, 115, 116, 127, 131, 135, 139, 140, 144,
	148, 152, 170, 172, 185, 189, 190, 206, 209, 212,
	225, 238, 243, 245, 265, 269, 276, 284, 285, 335,
	341, 347, 351, 352, 356, 357, 377, 393, 410, 434,
	459, 466, 484, 502, 508, 517, 523, 525, 532, 540,
	541, 549, 551, 559, 567, 568, 569, 570, -539, 77,
	2, -478, 218, 2, -300, 218, -478, -303, 2, -280,
	2, -442, -600, 515, 162, 422, 2, -319, 218, -297,
	-299, -303, -301, 2, 2, 2, 2, -308, 2, -527,
	218, 2, 28, 28, 560, 395, 245, 523, 612, -369,
	-311, -312, -518, 8, -362, -266, 609, -442, 2, -135,
	-118, 2, 185, -442, 218, 2, -135, 218, 2, -442,
	218, 2, -135, 218, 2, -266, 2, -608, 2, -530,
	218, -526, 10, -525, 5, 4, -533, -537, -534, 218,
	-266, 2, 296, 2, 2, 530, 2, 98, 508, 119,
	2, 426, -627, 447, 534, 2, 2, 2, 2, 2,
	2, 2, 508, -285, 2, -266, 185, 492, -308, 218,
	-309, 2, 460, -638, 407, -527, 218, 2, 560, -301,
	218, 2, -301, 234, 247, -280, 218, 2, 513, 511,
	513, 511, 190, 2, 245, 2, 245, 2, -479, 2,
	-480, -474, -481, 605, 352, -489, 2, -488, -525, 556,
	-106, 607, -106, 607, 464, 607, -530, -297, -297, -442,
	2, -135, -118, 2, -442, 2, -135, 2, -266, 2,
	-132, -530, -131, 607, 190, -266, 2, -442, 2, -135,
	-118, 2, -442, 2, -135, 2, -216, 185, 2, 120,
	508, -191, 2, 185, 551, 2, 8, 2, 225, -530,
	455, 402, 177, 2, 469, 2, 470, 74, -416, 576,
	74, 190, 2, 190, 2, -399, 2, 570, 395, 190,
	2, 2, -590, 2, 351, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -190, 465, 528, 507, 399,
	253, 2, -135, 567, -118, 253, 252, -442, 567, 2,
	-613, 185, 453, -442, 2, 526, 262, 160, 190, -399,
	2, 190, 2, 190, 2, 5, 2, 400, 490, 2,
	251, 394, 490, 2, -297, 508, 560, 460, 120, 28,
	2, 452, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 508, -380, 609, 576, 2, -391,
	-478, -428, -429, -428, 523, -356, -358, -191, 469, 2,
	-228, -389, -230, 185, -419, -420, -231, 276, 172, 347,
	-232, -398, 28, 139, -398, -398, 60, 608, 608, 11,
	12, 76, 41, 597, 598, 599, 600, 183, 601, 602,
	595, 596, 594, 587, 588, 592, 257, 258, 95, 591,
	589, 86, 290, 446, 173, 174, 175, 176, 423, 232,
	34, 233, 14, 15, 16, -322, 33, 356, 275, 577,
	222, 473, 590, 17, 18, 19, 248, 250, 337, 50,
	225, -274, 367, -321, 505, 67, -442, -442, -442, -442,
	-442, -442, -442, -442, 363, 607, -385, -437, 605, -223,
	607, 607, 607, 607, -518, -223, -442, -456, 608, -376,
	607, -223, -456, -451, 607, 444, 605, 607, -459, -442,
	5, 5, 5, 607, 609, -571, 571, 185, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 390, -500, 607, -499, 607, -499,
	-499, 561, -497, 607, 579, 572, 607, -497, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 561, 612, -568, -352, 607, -381, -483, -442, 599,
	-381, -381, 351, -373, -442, 106, -402, 254, 315, 191,
	272, 438, 239, -439, 611, -439, -467, 579, -223, -475,
	-296, -223, -477, 607, -473, -467, -107, -518, -90, -103,
	-112, -135, -150, -195, -196, 599, -297, 607, 190, 607,
	609, -522, 190, -362, -280, -307, -266, -297, -313, -314,
	-319, -291, -266, 2, 2, 138, -373, -586, 535, 454,
	28, 460, -528, -269, 38, -453, -492, -493, -542, 611,
	-541, -495, -505, -501, -504, 380, 384, -524, 54, 557,
	-507, 244, 4, -533, -535, 241, 242, 481, 51, 404,
	180, 126, 125, 344, 56, 519, 520, 521, 522, 195,
	196, 58, 558, 494, 69, 70, -586, 535, 454, 28,
	460, 185, -528, 185, -528, 2, 2, 155, 2, 2,
	2, -266, -244, 612, 64, 431, 155, -371, 218, -244,
	155, -244, 155, -320, 218, -319, -244, 155, -244, 612,
	155, -244, 612, 155, 609, 612, 155, -528, 2, -415,
	-521, -373, 38, -429, 2, 127, 4, 5, -641, 612,
	274, -325, 289, 334, 214, 352, 574, 345, 131, -529,
	5, 4, -452, -464, 127, 282, 244, -512, -514, 8,
	-513, 9, -515, 597, 598, -520, -519, 109, 609, -522,
	-241, 424, 467, 366, -240, 24, 29, 143, 236, 319,
	554, 161, -337, 237, -334, 370, 155, 485, 544, -600,
	-603, 451, 515, 162, 422, 90, 345, 467, 366, 424,
	155, -395, -397, 38, 118, 319, 365, 61, 228, 294,
	295, 488, 564, 155, 467, 366, 424, 366, -13, -255,
	24, 143, -257, -252, 467, -603, 99, 424, 583, 429,
	376, 500, 393, -603, -600, 270, -602, 566, 333, -243,
	485, 544, -600, -603, 451, 424, -242, -339, -334, 370,
	155, 611, 24, 143, 424, 467, 366, -623, -624, 29,
	424, 366, -594, -287, -565, 225, 570, 155, -287, -287,
	-478, 218, -617, 185, 2, -610, -131, 266, 5, 10,
	-530, -131, -369, 612, 612, -522, 599, 453, 452, 155,
	155, 155, 155, 253, 185, 335, 335, 2, 2, 2,
	2, 2, 192, -605, -628, 2, 2, -297, 218, -354,
	351, -589, -370, 508, -297, 185, 335, 43, -300, 218,
	2, -303, 560, -594, 335, -302, 218, -297, 38, 607,
	335, 2, -415, 2, 234, -565, 335, -479, -316, -297,
	-474, -316, 467, -290, 38, -439, -297, 608, 612, -489,
	-489, -530, -204, 570, 190, 607, -216, 570, 570, 253,
	-486, 612, -485, 225, -531, -530, -132, -530, 427, 253,
	-530, -589, -280, 2, -297, 2, 508, 255, -530, -204,
	225, -530, -530, -530, -521, 28, 470, 2, -190, 465,
	528, 89, 470, 2, -297, 508, 120, 234, 80, -617,
	185, 2, -266, -592, 185, -587, 439, 454, 535, -586,
	-297, 120, -297, 120, -297, 120, -297, -297, 2, 2,
	2, 2, 2, 85, 2, -135, -442, 2, 85, 2,
	46, 486, -613, 185, 2, 526, 2, 526, 2, -266,
	-266, -266, 489, 274, -297, -297, -297, -298, -303, 455,
	509, 536, 453, -442, 2, -630, 2, 190, 185, 2,
	508, 234, 508, 234, 120, 190, 74, 120, 28, 508,
	450, 609, 4, -244, 612, -270, -228, -389, -521, -390,
	-389, -229, -228, -231, 185, 403, 545, 319, 471, 259,
	-420, -419, 28, -442, -424, 179, 318, -442, -422, -444,
	597, 598, -513, -515, -372, 345, -222, -222, -222, -359,
	-469, -442, 393, 234, -494, -492, -492, -295, -522, 519,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, 275, 222, 473, 50,
	225, -442, 523, -442, -442, -442, -442, 312, 335, 341,
	532, 170, 542, 139, 345, -644, 502, 40, -449, -223,
	-377, 607, -463, 35, 484, 28, -456, 607, 2, -437,
	-442, -438, -323, -321, -266, 597, 598, 599, 600, 601,
	602, 587, 588, 589, 14, 15, 16, 592, 596, 594,
	595, 183, 95, 591, 290, 446, 86, 173, 174, 175,
	176, 257, 258, 17, 18, 19, 34, 590, -374, -373,
	-373, 608, 559, 28, 139, 599, 2, 608, 612, 38,
	608, -442, -374, -455, -451, -373, -462, -461, 567, -410,
	-411, 575, 299, 123, 216, 297, -412, 458, -516, 8,
	-522, 599, -572, 178, 209, 607, 608, 2, 608, 2,
	608, -442, 2, 608, -442, 2, 608, -442, 2, 608,
	-442, 2, 608, 2, 608, 2, -442, -442, -442, -442,
	-442, -442, -442, -373, 8, -516, -516, 519, 519, -516,
	-516, -516, -508, 380, 381, 382, 383, 277, 278, 279,
	280, 384, 385, 386, 387, 304, 305, 306, 307, 300,
	301, 302, 303, 308, 309, 310, 311, 200, 201, 202,
	203, 196, 197, 198, 199, -508, -404, 2, -510, -373,
	4, 575, 299, 123, 216, 297, 458, 5, -404, 2,
	-405, 2, -442, -373, -406, -443, -444, 597, 598, 590,
	-322, -456, -407, 2, -442, -374, -442, 57, 269, 525,
	-408, -442, 190, -373, -373, 2, -373, 2, -569, 38,
	-373, -365, 612, 190, 38, 4, -365, -365, 607, 608,
	612, -403, 213, 293, 288, 247, -403, -473, -402, 254,
	-400, 361, -400, -400, -467, -281, 605, 613, -522, -467,
	-466, -465, 38, -290, 358, -467, -467, 609, 608, -466,
	606, -584, 607, 610, 610, 610, 610, 610, -297, 607,
	-373, -522, 609, 491, 2, 608, 248, 248, 248, 248,
	248, 351, 445, 608, 523, -588, -306, -310, 509, 2,
	570, -105, 353, 608, 612, -364, 37, 605, 609, -516,
	2, 2, -511, 561, 607, 607, -411, 607, 190, -588,
	-310, 509, 2, -593, -363, -363, 523, -266, 2, -297,
	-371, -244, 155, -371, -371, -244, 612, 155, -280, -301,
	-306, -308, -310, -266, -527, -528, -244, -302, -620, 608,
	527, -430, -324, 403, 483, 425, 462, 504, 8, 9,
	8, 9, 612, -522, 612, -621, 93, 523, 78, 454,
	-259, 283, 523, -433, 218, 78, -543, 93, -283, -544,
	-266, 72, 541, 393, 189, 153, -621, 93, 393, -621,
	93, 2, 236, 93, 467, 489, 28, 60, -478, 41,
	41, 28, -601, -602, 270, 190, 576, 508, 234, 454,
	523, 523, -478, -397, -492, 118, 294, 295, 60, -517,
	-512, 597, 598, -517, 60, -517, -517, -517, 570, -300,
	-478, 454, 523, 523, 523, 413, 413, -252, -148, 523,
	523, 28, -191, 432, 127, -642, 589, 413, 270, -602,
	523, 190, 612, 41, 41, 28, -601, 190, 523, -319,
	-281, 555, 42, 555, 42, 555, 523, 42, 454, 523,
	612, 42, 523, 523, -13, 467, -595, -271, 105, 325,
	287, 326, 97, 322, 96, 321, 103, 323, 104, 324,
	562, 338, 563, 339, 63, 320, 298, 327, 487, 328,
	-272, -273, 146, 372, 553, 120, -527, -13, -13, 467,
	366, 424, 155, -618, 225, 28, -607, 225, -486, 225,
	-486, -311, -266, 609, -135, -442, -442, -135, -442, -135,
	46, 155, 155, 2, -638, 263, 607, -328, 335, 190,
	-362, -487, 245, 612, -370, -586, 155, -527, -396, -395,
	335, -302, 218, 2, 155, -352, 335, 149, 607, 401,
	2, 155, -282, 218, -267, -266, -415, -246, 512, 155,
	-393, 551, -425, -135, 607, 127, 38, -425, -382, -383,
	-484, -384, -283, 607, -290, -439, -106, -488, 608, 608,
	608, -203, 355, -202, -266, 5, -216, -353, -284, -283,
	119, 405, 405, -210, 570, -131, -132, 608, 612, -486,
	225, 492, -204, -204, -486, -486, -297, 185, -530, -204,
	-204, -204, 2, 2, 2, 2, -399, -297, -280, -319,
	-297, 28, 609, -528, -528, -310, -306, -399, -280, -399,
	-280, -399, -280, -399, -399, -135, -442, 489, 2, 464,
	185, 185, 609, -399, -355, 434, 2, 401, 120, 508,
	370, 234, -297, -319, -297, -319, -280, 120, -280, 121,
	-297, 4, -478, -390, -229, 352, 259, 471, -422, -423,
	-444, 444, 445, -423, 444, 445, 8, 9, 8, 9,
	-233, 475, 340, -371, 612, -238, 39, 135, 259, -297,
	576, 151, -442, -442, 523, -644, 502, -449, 151, -442,
	312, 341, 532, 170, 542, 139, 345, 190, 607, -443,
	-443, 608, -375, -442, -442, 606, 615, 608, 609, 608,
	-358, 612, -356, -442, -373, -373, 608, 609, -373, -362,
	606, 606, 612, 608, -460, -461, 144, -442, 523, 523,
	523, 523, 607, 608, 609, -577, 362, 607, 607, -442,
	608, 608, 608, 608, 38, 612, 612, 612, 608, 612,
	612, 612, 608, 608, 608, 612, 608, 576, 576, 608,
	608, 608, 608, 612, 608, 612, 608, 190, 608, 608,
	-413, 377, 608, 11, 12, 597, 598, 599, 600, 183,
	601, 602, 595, 596, 594, 587, 588, 589, 86, 290,
	446, 14, 15, 16, -322, 248, 225, -443, -443, -443,
	-443, 608, -447, -448, 190, 185, 38, -408, -408, -408,
	608, 190, -373, 608, 608, 607, -570, 292, 335, 608,
	-436, -435, 568, -483, -366, 2, -473, -292, -522, -436,
	-436, -373, -442, 254, 254, -401, 551, 351, -403, -473,
	-466, -518, -441, -440, 187, 39, 135, 329, 330, 331,
	221, 188, -466, -290, -352, -466, -466, -522, -467, -467,
	-465, 608, -585, -518, 608, -367, -476, -564, -358, 609,
	-522, -213, -565, -192, 5, 341, -192, -192, -192, -192,
	-297, -528, 523, 523, 225, 25, 378, -492, 605, 606,
	8, -522, 607, -516, -516, -516, -528, 190, 190, 225,
	351, 190, -527, 2, -244, -371, -244, -244, -319, -320,
	-244, -244, -244, -394, 570, -519, -429, 539, 83, 403,
	519, -519, -240, 424, -283, -283, -297, -307, 204, 414,
	-527, 335, -433, 218, -245, 335, 218, -291, -492, 607,
	-417, 572, 259, 259, 551, -283, -291, 259, 218, -283,
	218, -291, 2, -291, -596, 403, 346, -442, 60, -335,
	281, 401, 336, -241, 424, 467, 366, -135, -135, -135,
	607, -620, 551, 138, -297, -319, -297, -307, -527, -302,
	467, 366, 424, 332, -313, -517, -517, -395, 467, 366,
	424, -307, -527, -300, -527, -251, 218, -266, -251, 218,
	454, -280, 413, 576, 45, -642, 523, 190, -442, -442,
	-242, -135, -135, -135, 607, -281, -243, 424, 5, 218,
	-283, 5, -283, 218, 5, -266, -283, -307, -527, -624,
	24, 143, -283, -307, -527, -271, 372, -530, 341, 547,
	-280, -594, -287, 454, 523, 523, -478, -614, -615, 206,
	437, 454, 440, -528, -131, -207, 570, -131, -201, 229,
	599, -591, -530, -266, 560, -266, -326, -329, -327, -283,
	-434, -433, -547, -548, -543, 275, 234, 541, 247, 171,
	93, -219, -220, 572, 570, 155, -317, -297, 605, -204,
	-530, -297, -487, -308, -309, 155, -352, 335, -527, 38,
	155, 607, 2, 2, -301, 351, 335, -282, 218, -247,
	145, -642, -280, -436, -366, -392, -427, 434, 351, -353,
	556, -290, -392, -368, 612, 190, 589, 609, -353, -482,
	599, -106, -106, -204, 612, 607, 589, 589, 607, -530,
	608, 612, 609, 607, 589, 589, -212, 355, -211, 147,
	261, 246, 477, 478, 479, 480, 137, 476, 124, 317,
	230, -486, -530, -210, -132, 190, 190, -65, 570, 508,
	-204, 611, 440, -266, -399, -399, -399, 464, 464, -266,
	-362, -293, -522, -280, -297, -294, -319, 185, 185, -280,
	545, -423, 352, 286, -469, -239, 578, -297, 611, -442,
	-442, 151, 151, -442, -443, -443, -442, 151, 190, 607,
	-442, -453, 33, 33, 608, 612, -438, -442, -321, 608,
	559, -358, -358, 608, 599, -522, 611, 608, -451, 148,
	-442, 517, 299, 216, 297, -412, 297, -412, -412, -516,
	5, -522, 599, -578, -286, 607, -266, 568, -357, 357,
	608, -494, -492, -442, -442, -442, -442, -442, -516, -497,
	-497, -512, -512, -442, -447, -442, -494, -492, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, 139, 335,
	345, -443, -448, -447, -442, -442, -492, 608, 608, 608,
	-373, -105, 607, 292, -386, 209, -442, -486, 612, -386,
	-386, 608, -473, -473, 607, -442, 254, 606, 612, 614,
	589, 589, -352, 609, -465, -466, 606, 608, 612, 608,
	612, -426, 38, 608, -522, -436, -215, -214, 136, 53,
	107, 134, 341, 248, -616, 570, -528, -528, 454, 354,
	5, 8, 605, 606, 609, -516, 608, 608, 608, -528,
	-528, 454, -586, 535, 454, 28, -528, -244, -244, 119,
	319, -442, 523, 523, 60, 225, 155, 335, 553, 335,
	-544, 153, -549, -442, 607, 234, 607, 607, 2, -235,
	-236, -237, 143, 467, 24, -622, 2, 551, 155, -244,
	155, -244, 574, -335, 607, 607, 523, 454, -259, 523,
	570, -373, -442, -205, 127, -521, -603, 611, -603, 611,
	454, 523, 523, 454, 523, 523, 335, 155, 570, 169,
	169, 576, -251, -442, -442, 185, 523, 570, -373, 523,
	-496, 48, 26, 335, -301, -244, 155, 523, 523, 535,
	467, -530, -530, 341, -13, -307, -527, -302, 467, 366,
	424, -593, -593, 206, -310, -618, -486, -209, 355, -208,
	147, 436, 137, 261, 230, -486, -207, 190, 245, 570,
	-302, 2, 608, 608, 612, 612, -550, -245, -297, -282,
	234, 234, -289, -267, 38, 349, 349, 607, -297, -86,
	570, -485, -518, -597, 570, 43, -300, 38, 155, -594,
	-135, -302, -490, -491, 5, 38, -297, 155, 351, 335,
	-248, 268, -642, -526, -565, -358, -392, -381, 336, 91,
	608, -436, -383, -366, -442, 2, 608, -202, -203, -530,
	-530, -530, -204, -216, -284, 2, -531, -530, -530, 612,
	607, 589, 589, 589, 589, 589, 589, -210, -486, -131,
	-135, 355, -297, 599, -399, -341, -340, 370, 345, -341,
	444, 444, 352, 179, 264, -238, -281, -442, -442, 151,
	33, 33, -442, -442, -453, 608, -442, -442, -373, 606,
	5, -442, 608, 608, 8, -442, 608, 609, -579, -266,
	-442, 608, 60, 608, 608, 612, 612, 608, 608, 608,
	608, 608, 608, 608, -448, 190, 139, 345, 607, 608,
	608, -105, -450, 212, 60, -473, -450, -450, -401, -362,
	-473, -440, -281, 605, -281, 605, -522, -518, -476, 607,
	609, -214, 589, -530, -530, -192, 206, -616, -616, 570,
	-310, 606, 2, 605, -522, 608, -310, 190, -588, -310,
	509, 119, -283, -283, 508, 444, -251, 393, -433, 155,
	155, -551, 93, -553, 76, 171, 102, 335, 341, 541,
	393, 72, 127, 351, 410, -632, -633, -634, 38, 581,
	582, 608, -360, -470, -564, 607, -266, -360, -362, 335,
	497, 127, 351, 335, 127, 351, 565, 119, 2, 535,
	79, -283, -291, -362, -362, -297, -307, -527, 163, 608,
	612, 589, 2, 599, 599, -307, -527, -302, -307, -527,
	-300, 155, -251, 368, 169, 523, -135, -442, 163, 608,
	-281, 5, 5, 155, -278, 76, -283, 5, -283, -301,
	119, 454, 523, 523, 351, 351, 354, -614, -615, -207,
	612, 607, 589, 589, 589, -207, -531, -131, 2, -352,
	-342, 236, -283, -548, -545, -546, 393, -434, -552, -554,
	171, 393, -330, 607, -282, -267, 607, -135, 2, -218,
	-217, -266, 5, 607, -328, 355, 606, -599, 355, -598,
	117, 137, -527, -396, -135, -302, -350, 570, -352, 608,
	612, 149, -418, 551, -281, -297, 155, -249, 267, -642,
	-526, -246, -421, -419, 140, 607, 351, -135, -358, 589,
	608, 608, 119, 608, -211, -212, -530, -131, -530, -530,
	-530, -131, -210, -486, -66, -67, 234, 93, 375, -294,
	508, 234, 607, 607, -238, -442, -442, -442, 608, -358,
	-522, 599, -573, 370, 608, -469, -442, -442, -443, 190,
	607, -453, 608, -574, 569, -442, -387, -388, -442, 442,
	108, 210, -574, -574, 608, -518, -518, 2, -530, 354,
	2, 523, 605, 2, 190, -528, 190, 190, 225, 225,
	38, 413, -433, -291, -291, -295, -288, -266, 171, 218,
	341, 565, -417, 259, 607, -443, 545, -297, 607, 2,
	217, 217, 30, 60, -635, 131, 238, 608, 612, -471,
	-277, -266, -442, -471, 608, 608, 341, 545, 341, 565,
	-442, 545, -492, 607, -244, -244, 608, 608, -442, 523,
	-521, 100, -519, 2, -603, -251, -280, -442, 185, -442,
	523, 5, -244, -295, -244, -244, -278, 535, -307, -527,
	-302, -619, 509, 461, 536, 455, 193, 443, -619, 185,
	-208, -209, -530, -131, -131, -207, 38, -336, -337, 2,
	-550, 259, -288, 259, 227, 154, -360, 607, 607, -362,
	-631, 570, 608, 612, 589, 589, -326, -219, -87, -88,
	524, -485, 612, 607, 589, -352, 319, 119, 38, 5,
	607, 607, -266, 351, 607, -281, -261, 92, -642, -526,
	-247, -392, 336, -362, 93, -421, -449, -204, 607, -204,
	608, 612, 28, 607, 28, 607, -297, -319, -373, -373,
	608, -358, 60, 612, 608, 608, -443, -453, 608, -575,
	-576, -286, 612, 607, 607, 468, 606, 606, -528, 2,
	-528, -528, -528, 454, -251, 393, -266, -544, -553, -288,
	335, 551, -442, -443, -268, 607, -442, 607, 607, 38,
	127, 238, 132, 223, -432, -636, 101, 498, 226, -470,
	-238, 608, -431, 551, 410, -443, -278, -360, 607, 607,
	607, 589, 190, -135, 607, -496, -244, -301, 523, 2,
	2, 190, -593, 608, -609, 408, -135, -219, 607, -331,
	81, 94, 128, 217, 194, 235, 489, 495, 28, -331,
	608, -360, -360, 608, -332, 351, 119, 319, -217, -519,
	-519, 608, 38, -88, 9, -598, -599, -442, 38, 119,
	-135, -490, -360, -297, -360, 351, -253, -252, 276, -526,
	-248, 608, -291, -392, -531, -67, -362, -362, 608, 608,
	-580, 401, 445, 211, -373, -359, 608, 612, 38, -388,
	2, 2, 2, -616, -310, 413, -245, 155, 213, 608,
	-555, 291, -266, 608, -396, -396, 38, 132, 223, -338,
	-334, 607, -239, -471, 213, -297, -604, 551, 608, -344,
	-343, -340, -346, -345, -340, -373, -519, 100, 368, -373,
	-278, -528, -528, 351, -611, 191, -610, 5, 10, -332,
	-361, -472, -283, -431, 608, 608, 82, 119, -342, -135,
	608, -135, 2, -350, 608, 608, -418, 608, -297, -250,
	-532, 413, 415, -642, -249, -436, 140, 608, 608, 608,
	608, -581, -582, 50, 538, 109, -442, -581, -581, -576,
	-578, 190, 171, 570, -556, -559, -558, 586, 474, 191,
	369, 608, 497, 564, 608, 608, -635, -362, 570, -352,
	-442, -431, 608, 612, 556, 608, 612, 556, 608, 190,
	608, -244, -616, -244, -619, -206, 570, 46, -260, -259,
	608, 612, -432, -431, -338, 392, 133, 143, -336, -631,
	-431, 607, -432, 607, -258, -257, -642, -512, -261, 140,
	336, 545, -204, -583, 153, -582, 389, 184, 444, 389,
	184, -583, -583, -528, -288, 55, -558, 586, -559, 586,
	545, 133, -436, 608, 55, -555, -343, 225, -345, 190,
	368, 190, 452, -610, 30, -472, -338, -432, -220, 570,
	445, 445, 2, -219, -332, -432, -360, -338, -360, -254,
	-255, -256, -362, -253, 336, 545, 467, 109, 209, 518,
	319, 33, 589, -557, 319, 431, 64, 467, -557, 589,
	-556, 607, 607, -528, 355, -220, -338, -436, 2, -332,
	-338, 608, -220, 608, -250, 467, -382, 444, 359, -582,
	-442, 23, 341, 127, -442, -635, -373, -373, -244, -203,
	607, -436, -220, -260, -220, -431, -436, -432, -258, -382,
	-436, 608, 608, -203, -436, -436, -432, -338, -254, -436,
	-333, -334, 523, 608, -338, -220, 607, -220, -436, -373,
	-436, 608, -333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 562, 563, 565, 566, 567, 569,
	570, 572, 574, 576, 577, 578, 580, 581, 583, 584,
	585, 586, 587, 589, 591, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	662, 664, 0, 1440, 1442, 1444, 1446, 0, 818, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	378, 380, 381, 383, 385, 386, 387, 389, -2, 0,
	495, 496, 498, 500, -2, 0, 1032, 1034, 1036, 0,
	651, 653, 0, 1039, 1041, 1043, 0, 0, 674, 675,
	0, 1552, -2, 666, 668, 670, 672, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 762, 764, 766,
	768, 770, 772, 773, 775, 777, 779, 780, 782, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, -2, 812, 813, 814, -2, -2, 0,
	-2, -2, -2, 1458, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 439, 441, 443, 445, 447, 450,
	452, 454, 1610, 502, 504, 506, 508, 510, 512, 514,
	0, -2, 1624, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1583, 1585, 1587, 1589, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 564, 568, 571, 573, 575, 579, 582,
	588, 590, 592, 547, 548, 551, 2322, 2340, 2341, 2342,
	2345, 2346, 2347, 2348, 2349, 2350, 2812, 2893, 2894, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632,
	2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642,
	2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652,
	2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672,
	2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692,
	2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712,
	2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722,
	2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732,
	2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742,
	2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762,
	2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772,
	2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782,
	2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 549,
	550, 1221, 0, 616, 614, 2307, 617, 2606, 619, 621,
	489, 490, 491, 492, 493, 494, 0, 644, 630, 1622,
	645, 647, 648, 649, 650, 611, 609, 0, 649, 644,
	2376, 642, 1438, 1439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 418, 1280, 1281, 1282, 1423,
	1424, 2654, 1465, 0, 239, 663, -2, -2, 2777, -2,
	697, 698, -2, -2, 712, 716, 707, 2781, 0, 2657,
	2641, -2, 719, 1441, 1443, 1445, 816, 817, 2326, 0,
	0, 0, 0, 0, 38, 40, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 249, -2, -2, -2, -2,
	0, 0, 2703, 2428, 2275, 2342, 2278, 2273, 341, 343,
	345, 347, 348, 0, 0, 0, 0, 0, 0, 0,
	379, 382, 384, 388, -2, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 1095,
	1096, 1345, 0, 0, 0, -2, 497, 499, 552, 553,
	0, 1611, 1611, 560, 561, -2, 0, 0, 0, 0,
	311, 301, 1033, 1035, 1037, 1038, 0, 0, 0, 0,
	0, 652, 654, 0, 0, 279, 1040, 1042, 1044, 1045,
	0, 0, 0, 0, 0, 0, 313, 0, 0, 667,
	669, 671, 673, 744, 746, 748, 750, 752, 754, 756,
	758, 760, 763, 765, 767, 769, 771, 774, 776, 778,
	781, 784, 786, 788, 790, 792, 794, 796, 798, 800,
	802, 804, 806, 808, 810, 811, 824, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 926, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 1013, 0, 0, 827, 830, 831, 832, 833, 834,
	835, 0, 899, 924, 925, 935, 815, 0, 1261, 1612,
	1467, 1448, 1462, 1467, 1450, 1451, 1452, 1453, 1454, 1459,
	1461, 1455, 1456, 1457, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 60, 440, 442, 444, 446, 448, 451,
	453, 455, -2, 1581, 1582, 503, 505, 507, 509, 511,
	513, 515, 655, 0, 657, 0, 829, -2, 0, 1616,
	1616, 1616, 0, 0, 1582, 1580, 0, 660, 661, 723,
	724, 1889, 0, 0, 0, 0, 0, 0, 0, 0,
	2149, 1977, 0, 725, -2, 2010, 2012, 2752, 2579, 2777,
	2148, 2014, 2015, 2016, 2017, 2018, 0, 2020, 2021, 2022,
	2023, 2024, 2025, 0, 2027, 0, 2032, 2033, 2034, 0,
	2759, 2252, 2336, -2, 0, 0, 2765, 2332, 0, 2115,
	2050, -2, -2, 2359, 2338, 1821, 1822, 1823, 1824, 1825,
	-2, -2, 2795, 2054, 2055, 2056, 2057, 2058, 2059, 2060,
	2061, 2062, 2063, 2064, 0, 2740, 2760, 2761, 2766, 2768,
	2762, 2749, 2075, 2442, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1848, 1857, -2,
	-2, -2, -2, -2, -2, -2, 2753, 2754, 2771, 2774,
	2780, 2785, 2786, 2758, 2767, 2794, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 1849, -2, -2, -2, -2, 1599, 2620, 1602,
	1221, 1600, 1584, 1586, 0, 1588, 0, 0, 0, 1593,
	1619, 1617, 0, 1668, 1597, 1598, 1691, 1691, 1715, 0,
	1696, 0, 1715, 1611, 1742, 0, 1702, 2646, 2051, 2052,
	0, 2342, 2337, -2, -2, 2792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 618,
	620, 0, 0, 0, 643, 1621, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 423, 424, 425, 2760,
	0, 0, 0, 430, 0, 432, 433, 434, 435, 436,
	437, 438, 209, 2760, 520, 545, 0, 209, 2760, 523,
	209, 2760, 526, 0, 529, 1343, 209, 2760, 532, 2303,
	209, 2760, 535, 537, 2311, 209, 2760, 541, 2318, 2316,
	542, 0, 544, 229, 225, 226, 227, 228, 1434, 1435,
	1436, 1437, 0, 1464, 1344, 665, 0, 691, 0, 695,
	696, 2748, -2, 0, 2666, 700, 701, -2, 703, 1468,
	1472, 1473, 1474, 1475, 1476, 0, 0, 0, 0, 1481,
	0, 0, 0, 0, 692, 693, 710, 711, 717, 720,
	0, 819, 820, 821, 822, 823, 71, 0, 2760, 1742,
	73, 0, 2297, 2367, 2368, 2369, 2370, 2371, 2793, 2813,
	2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823,
	2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833,
	2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843,
	2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853,
	2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863,
	2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873,
	2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883,
	2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2795,
	77, 0, 2760, 82, 0, 2760, 0, -2, 95, 0,
	108, 0, 135, -2, -2, -2, 116, 0, 2760, 0,
	2272, -2, 0, 221, 302, 303, 304, 0, 1070, -2,
	0, 1274, 1276, 1276, 0, -2, 0, 0, 0, 1023,
	2269, 2274, 1024, 2293, 1025, 2279, 0, 349, 350, 351,
	352, 353, 0, 354, 2760, 356, 357, 0, 359, 360,
	2760, 362, 363, 0, 365, 0, 367, 0, 261, 265,
	2760, 314, 315, 2355, 2356, 2363, 2364, 2365, 2366, 2760,
	392, 394, 0, 396, 397, 0, 399, 0, 0, 0,
	403, -2, 419, 0, 416, 406, 407, 409, 410, 411,
	412, 413, 0, 459, 457, 2308, 0, 0, -2, 2760,
	0, 1067, 0, 0, 1323, -2, 0, 1267, 0, 1330,
	2760, 1326, 0, -2, 0, 1609, 2760, 1485, 1099, 1100,
	1101, 1102, 1754, 486, 0, 1516, 0, 1518, 0, 1538,
	1748, 1691, 0, 0, 1753, 0, -2, 605, 2325, -2,
	555, 0, 556, 0, -2, 0, 328, 0, 0, 1048,
	1050, 1051, 1053, 1054, 1057, 1058, 1059, 1060, 0, 1062,
	1728, 280, 282, 0, 0, 0, 1047, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 0, 0, 676, 0,
	0, 825, 826, 0, 0, 842, 843, 844, 0, 328,
	2658, 2615, 2464, 851, 0, 854, 857, -2, 0, 0,
	0, 0, 861, 0, 866, 867, 868, 0, -2, 0,
	875, 877, 1031, 879, 0, 0, 881, 0, 885, 0,
	888, 0, 890, 0, 892, -2, -2, -2, 900, 901,
	-2, 906, -2, 0, 910, -2, 0, 913, 0, 916,
	-2, 0, 926, 922, 923, 0, 0, 0, 0, 943,
	944, 0, 953, 0, 956, 957, 958, 0, 962, 963,
	0, 965, 966, 967, 968, 0, 2730, 2663, 2428, 0,
	976, -2, 982, 984, 0, -2, 0, 1000, 0, 1004,
	0, 0, 1012, 0, 0, 828, 0, 836, 837, 209,
	1746, 1447, -2, 1449, 0, -2, 0, 656, 0, 659,
	1641, 1567, 1564, 0, 1638, 1639, 1568, 0, 0, 0,
	1575, 0, 1614, 1615, 0, 0, 0, 1554, 1555, 0,
	0, 0, 0, 2154, 2155, 2156, 2157, 2170, 2158, 2159,
	2169, 2167, 2168, 2160, 2161, 2166, 2180, 2181, 2171, 2172,
	2162, 2175, 2173, 2174, 2176, 2177, 2178, 2179, 0, 0,
	2185, 0, 2163, 2164, 2165, 2193, 0, 0, 2194, 0,
	2196, 0, 2186, 2182, 2183, 2184, 0, 1956, 1958, 2260,
	0, 0, 0, 2192, 2187, 2188, 1894, 1895, 1896, 1897,
	1898, 1931, 1935, 1936, 0, 0, 2011, 2257, 2256, 2013,
	0, 0, 2208, 0, 2026, -2, 0, 2149, 2203, 0,
	0, 2035, 2036, 2037, 0, 0, 2208, 0, 0, 2251,
	2047, 2048, 1886, 0, 0, 2117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 1834, 0, 1836, 0, 1837,
	1838, 1845, 1858, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 2232, -2, 0, 0, 0,
	0, 1850, 0, 1601, 0, 0, 1672, 2261, 2265, 2266,
	1672, 1672, 0, 0, 2209, 1739, 1739, 0, 0, 1734,
	1734, 1734, 1732, 1715, 0, 1715, 1725, 0, 1715, 1715,
	0, -2, 1696, 0, 0, 1725, 0, 1709, 593, 595,
	597, 599, 600, 601, 603, 1743, 1744, 0, 0, 0,
	0, 2343, 0, 0, 0, 0, 2315, 0, 0, 2328,
	0, 0, 2302, 374, 375, 0, 0, 0, 2713, 2657,
	0, -2, 623, 646, 1611, 0, 2211, 1769, 1773, 0,
	1775, 1776, 1777, 1778, 1779, 0, 0, 1770, -2, 1846,
	1848, 1869, 2360, 2361, 2362, 1829, 1830, 1831, 1832, 1833,
	1841, 1828, 1828, 1828, 1839, 1868, 1860, 1868, 1864, 1814,
	1815, 1816, 1851, 1852, 1853, 1854, 0, 2713, 2657, 0,
	-2, 0, 633, 0, 0, 1549, 420, 0, 427, 428,
	429, 0, 516, 0, 207, 208, 0, 209, 2760, 521,
	0, 524, 0, 209, 2760, 2267, 530, 0, 533, 0,
	0, 539, 0, 0, 0, 0, 0, 209, 1551, 0,
	0, 0, 0, -2, 705, 713, 714, 715, 0, 1470,
	0, 1477, 734, 735, 736, 1479, 1480, 0, 1482, 708,
	737, 738, 739, 740, 741, 742, 0, 2281, 2282, 2283,
	2284, 2287, 2288, 0, 0, 706, 727, 709, 0, 721,
	117, 1420, 0, 0, 164, 0, 1420, 1420, 0, 0,
	0, 0, 192, 0, 1133, 0, 0, 0, 0, 135,
	149, 160, 129, 130, 131, 0, 0, 0, 0, 0,
	0, 83, 1243, 0, 1246, 0, 0, 0, 0, 0,
	0, 0, 1259, 0, 0, 0, 0, 0, 97, 98,
	0, 0, 103, 104, 0, 148, 0, 0, 0, 0,
	0, 1513, 0, 139, 135, 0, 0, 134, 136, 119,
	0, 0, 135, 150, 162, 0, 196, 198, 1130, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 231, 0,
	0, 0, 1268, 0, 0, 0, 1608, 0, 0, 0,
	0, 2760, 1418, 0, 1403, 0, 1728, 2513, -2, -2,
	280, 1728, 1022, 0, 0, 2343, 2277, 0, 0, 0,
	0, 0, 0, 366, 0, 0, 0, 395, 398, 400,
	401, 402, 0, 1322, 0, 408, 449, 1192, 2760, 0,
	0, 476, 471, 0, 473, 0, 0, 0, 1242, 2760,
	1240, 2312, 0, 1265, 0, 1221, 2760, 2310, 0, 0,
	0, 1331, 2352, 1340, 1344, 1503, 0, 488, 0, 1519,
	1521, 0, 0, 1749, 0, 1751, 1691, 1611, 0, 0,
	0, 0, 306, 0, 0, 0, 0, 0, 0, 1061,
	286, 0, 1727, 0, 0, 316, 1728, 280, 2632, 1046,
	328, 328, 1728, 678, 1728, 680, 0, 0, 845, 846,
	0, 328, 328, 328, 852, 853, 855, 856, -2, -2,
	-2, -2, 858, 859, 950, 0, 0, 0, 949, 869,
	0, 871, 874, 878, 0, 1016, 2641, 2657, 2713, 1029,
	950, 2428, 950, 2428, 950, 2428, 950, 950, 894, 938,
	946, 905, 912, 0, 907, 911, 914, 917, 0, 919,
	927, 0, -2, 0, 930, 0, 932, 0, 934, 950,
	951, 954, 961, 964, 969, 970, 971, 972, 2323, 973,
	974, 975, -2, 979, 980, 0, 991, 996, 997, 993,
	0, 0, 0, 0, 0, 0, 1007, 1008, 0, 0,
	1015, 0, 838, 1260, 0, 1460, 1641, 1567, 658, 1558,
	1640, 1559, 1566, 1569, 0, 0, 1571, 0, 1573, 0,
	1636, 1637, 1644, 1645, 0, 1655, 1656, 1648, 0, -2,
	0, 0, 1651, 1652, 1577, 0, 1594, 1595, 1596, 1625,
	1628, 1359, 0, 2893, 1890, 1764, 1891, 1892, 2296, 0,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	-2, -2, -2, -2, -2, -2, -2, -2, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, -2,
	-2, -2, 1932, 1933, 1934, -2, 2195, 2197, 0, 2260,
	0, -2, 0, -2, -2, -2, -2, 1953, 0, 1955,
	1960, 1962, 1964, 0, 0, 0, 0, 2259, 1974, 2243,
	2244, 0, 0, 2151, 2152, 2153, 1959, 0, 1978, 2258,
	2255, 0, 0, 2189, 0, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 0, 2207,
	1624, 2039, 0, 0, 0, 0, 2046, 2031, 2205, 0,
	2204, 0, 0, 0, 2215, 0, 2250, 2246, 0, 2294,
	1885, 1872, 1873, 1874, 1875, 1876, 1877, 1887, 0, 2291,
	2329, 2335, 2125, 0, 0, 0, 2076, 2077, 2078, 2079,
	2080, 0, 2082, 2083, 0, 2085, 2086, 0, 2088, 2089,
	0, 2091, 2092, 2093, 2094, 2095, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 0, 0, 2097, 0, 2218,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 2099,
	0, 2101, 2209, 2229, 0, 0, 1979, 0, 0, 0,
	0, 2149, 0, 2104, 2209, 2237, 0, 0, 0, 0,
	0, 2209, 0, 2242, 0, 2111, 0, 2113, 1603, 0,
	0, 1759, 0, 0, 0, 2264, 1759, 1759, 0, 1667,
	0, 0, 1735, 1736, 1737, 1738, 0, 0, 1739, 0,
	1729, 1733, 1730, 1731, 1725, 1688, 0, 0, 2298, 1725,
	1694, 1724, 0, 1221, 1714, 1725, 1725, 0, -2, 1698,
	1715, 0, 0, 594, 596, 598, 602, 604, 0, 0,
	1624, -2, 0, -2, 330, 1220, 0, 0, 0, 0,
	0, 0, 613, 615, 0, 0, 536, 0, 0, 629,
	0, 607, 0, 610, 0, 1760, 1763, 0, 0, 1774,
	1780, 1781, 0, -2, 0, 0, 1870, 0, 0, 0,
	0, 0, 641, 0, 644, 0, 0, 0, 431, 546,
	209, 518, 0, 209, 209, 527, 0, 0, 209, 538,
	209, 2319, 209, 2317, 230, 543, 1550, 242, 0, 694,
	0, 1469, 1478, 0, 731, 0, 733, 0, 2285, 2289,
	2286, 2290, 0, 722, 0, 0, 0, 0, 1419, 0,
	1366, 0, 0, 168, 2760, 0, 211, 0, 0, 1185,
	2304, 0, 1175, 0, 0, 2450, 0, 0, 0, 0,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 132, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 1245, 1247, 1254, 1256, 0, 1250,
	2292, 0, 0, 1251, 0, 1253, 1255, 1257, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 1277, 0,
	0, 1278, 1279, 1491, 1492, 0, 1512, 1513, 0, 0,
	0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
	2271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1270, 0, 1318, 1316, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 0, 0, 0, 0, -2, 1272, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 252, 0,
	319, 2270, 2280, 0, 1055, 1056, 355, 358, 361, 364,
	248, 0, 0, 404, 0, 0, 1105, 1080, 0, 0,
	458, 328, 0, 0, 472, 476, 2321, 1065, 1238, 1241,
	0, 1221, 2760, 1288, 0, 0, 0, 0, 0, 0,
	1329, 0, 0, 2760, 2299, 2351, 2352, 1505, 1513, 0,
	1759, 0, 1536, 1522, 0, 0, 0, 1536, 1540, 1541,
	1543, 1544, 0, 0, 1750, 1756, 554, 606, 1611, 1611,
	328, 326, 2582, 324, 321, 323, 0, 0, 1525, 1527,
	0, 0, 0, 274, 0, 283, 1728, 281, 0, 286,
	0, 0, 0, 470, 677, 682, 840, 0, 328, 848,
	849, 850, 896, 940, 948, 995, 860, 862, 863, 864,
	0, 0, 0, 1030, 1026, 1027, 1028, 880, 950, 883,
	950, 886, 950, 889, 891, 909, 915, 928, 921, 929,
	0, 0, 0, 942, 959, 0, 978, 0, 0, 0,
	0, 0, 0, 0, 1001, 1002, 1003, 1005, 1010, 1009,
	1014, 839, 1747, 1562, 1563, 1565, 0, 1574, 0, 0,
	1650, -2, -2, 1649, 1653, 1654, -2, -2, -2, -2,
	1570, 0, 1579, 1576, 0, 1635, 1357, 1358, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1975, 0, -2,
	1954, 1957, 1961, 1963, 1965, 0, 0, 0, 0, 0,
	0, 2198, 0, 2200, 1976, 2253, 2256, 2191, 0, 2147,
	0, 0, 1623, 1624, 1624, 0, 2045, 0, 2206, 0,
	2213, 2214, 0, 2038, 0, 2247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2049, 0, 0, 0, 0,
	2081, 2084, 2087, 2090, 0, 0, 0, 0, 2070, 0,
	0, 0, 2074, 1840, 1826, 0, 1868, 1866, 1867, 1861,
	1868, 1865, 1818, 0, 1817, 0, 2096, 0, 2098, 2100,
	0, 0, 2102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1982, 1983, 1984,
	2004, 2103, 2235, 2236, 0, 0, 0, 0, 0, 0,
	2109, 0, 2241, 2110, 2112, 1611, 0, 1604, 0, 1669,
	1658, 1758, 0, 2262, 1728, 1671, 1673, 2263, 2301, 1658,
	1658, 0, 2210, 0, 0, 1719, 0, 0, 0, 1721,
	1692, 0, 0, 1686, 0, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1693, 1221, 1723, 1695, 1699, 2329, 0, 1725,
	0, 1710, 0, 1712, 1745, 0, 1704, 1707, 0, 0,
	2344, 1759, 0, 368, 376, 377, 369, 370, 371, 372,
	0, 1406, 0, 0, 0, 0, 0, 2212, 0, 1765,
	0, 1771, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 0, 1548, 426, 517, 209, 522, 525, 2268, 209,
	531, 534, 540, 238, 0, 690, -2, 729, 730, 732,
	0, 728, 165, 1420, 0, 0, 1362, 1364, 1368, 1374,
	1377, 0, 170, 2760, 182, 0, 2760, 0, 1149, 0,
	0, 0, 0, 0, 0, 1422, 0, 0, 2760, 209,
	2760, 209, 186, 188, 191, 0, 195, 193, 0, 1137,
	0, 0, 1140, 118, 1420, 0, 0, 121, 125, 137,
	0, 0, 0, 147, 0, 0, 0, 1379, 1383, 1391,
	0, 0, 0, 1248, 1249, 1252, 1258, 84, 0, 0,
	0, 1387, 1389, 1395, 96, 99, 2760, 2313, 101, 2760,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 123, 127, 138, 0, 1397, 120, 0, 224, 0,
	0, 214, 209, 2760, 0, 216, 0, 217, 218, 232,
	0, 0, 0, 1068, 1069, 1317, 0, 1263, 1264, 0,
	1275, 1269, 0, 0, 0, 0, 0, 1399, 1400, 0,
	0, 0, 1418, 1415, 1728, 244, 0, 1728, 252, 0,
	2276, 0, 266, 391, 0, 0, 0, 0, 1104, 1203,
	1106, 1108, 1109, 1110, 211, 0, 2352, 1175, 2502, 2352,
	0, 0, 1075, 0, 0, 0, 464, 460, 0, 469,
	475, 474, 480, -2, 0, 0, 0, 0, -2, 0,
	0, 1333, 1327, 1328, 0, 0, 0, 0, 2760, 1507,
	1513, 0, 1609, 1624, 487, 1514, 1536, 0, 0, 0,
	1524, 1520, 1517, 1759, 0, 0, 0, 0, 0, 1752,
	1755, 557, 558, 305, 0, 0, 0, 0, 0, 328,
	0, 0, 0, 0, 0, 0, 284, 0, 287, 0,
	0, 0, 292, 293, 294, 295, 296, 297, 0, 0,
	0, 286, 317, 276, 1728, 0, 0, 679, 0, 0,
	847, 0, 870, 873, 882, 884, 887, 931, 933, 950,
	960, 985, 2300, 986, 1127, 0, 1127, 0, 0, 1006,
	1572, 0, 1647, 1578, 1629, 1630, 0, 1359, 0, 1893,
	1938, 0, 0, -2, 0, 0, 1942, 0, 0, 0,
	-2, 0, 0, 0, 2199, 2201, 0, 2255, 2190, 2040,
	0, 0, 0, 2044, 2028, 2029, 0, 2150, 2216, 2245,
	2249, 0, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 0,
	2295, 2330, 2334, 2123, 2124, 2128, 2309, 0, 0, 0,
	2053, 0, 0, 0, 0, 0, 0, 0, 0, 1859,
	1863, 0, 0, 2217, 2228, 2230, 1980, 1981, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, -2, -2,
	-2, 1998, 1999, 2000, -2, -2, -2, 2005, 0, 0,
	0, 2231, 2233, 2234, 2238, 2239, 0, 2106, 2107, 2108,
	2240, 0, 1611, 1605, 1666, 0, 1757, 1670, 0, 1666,
	1666, 1618, 1717, 0, 0, 1741, 0, 1689, 0, 1690,
	0, 0, 1722, 0, 1697, 1700, 1701, 1711, 0, 1703,
	0, 1706, 0, 2040, -2, 329, 331, 333, 0, 336,
	337, 0, 0, 0, 622, 0, 1406, 1406, 0, 624,
	608, 0, 0, 1767, 0, 0, 1843, 1847, 1871, 635,
	637, 0, 0, 2713, 2657, 0, 634, 519, 528, 240,
	0, 1726, 0, 0, 0, 0, 0, 0, 210, 0,
	1184, 0, 1147, 0, 0, 1174, 0, 0, 1190, 172,
	173, 174, 0, 0, 0, 0, 184, 0, 0, 180,
	0, 190, 194, 1134, 0, 0, 0, 0, 1367, 0,
	0, 0, 144, 145, 146, 0, 151, 0, 152, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1497,
	1498, 0, 1488, 141, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 1356, 234, 0, 0, 0, 0,
	0, 1262, 1320, 1321, 1271, 1380, 1384, 1392, 0, 0,
	0, 0, 0, 649, 1417, 0, 252, 250, 0, 253,
	0, 256, 257, 0, 0, 252, 246, 0, 0, 0,
	1221, 405, 1078, 1191, 0, 0, 1193, 1111, 1115, 0,
	2352, 2352, 0, 2306, 0, 1076, 0, 0, 1192, 456,
	0, 463, 0, 477, 0, 0, 1242, 0, 0, 1266,
	1291, 1221, 0, 1332, 1334, 0, 1342, 0, 0, 0,
	1509, 1513, 0, 1502, 1503, 1643, 1515, 1534, -2, 0,
	0, 1624, 1542, 1539, 1545, 1546, 0, 325, 0, 320,
	322, 0, 308, 0, 1526, 1528, 0, 1049, 1052, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 286, 1728,
	312, 0, 841, 865, 941, 987, 1126, 0, 0, 989,
	0, 0, 1646, 1633, 1634, 1631, 1359, 1940, 1944, 0,
	0, 0, 1946, -2, 0, 1968, -2, -2, 2202, 2254,
	2019, 1624, 2041, 2043, 2030, 2248, 1888, 0, 2130, 2127,
	0, 2114, 0, 2065, 2066, 0, 0, 2069, 2071, 2072,
	2073, 1827, 1820, 1819, 2227, 0, 0, 0, 0, 2105,
	1606, 0, 2119, 0, 0, 1674, 2119, 2119, 1718, 0,
	1720, 1687, 1675, 0, 1684, 0, 2330, 1713, 1705, 0,
	0, 334, 0, 338, 339, 373, 0, 625, 626, 0,
	0, 1761, 1766, 0, 1772, 1842, 0, 0, 0, 0,
	0, 241, 166, 167, 1371, 1375, 1372, 0, 169, 0,
	0, 1148, 0, 1151, 0, 0, 0, 0, 1158, 1175,
	0, 0, 0, 0, 0, 0, 1177, 0, 1176, 0,
	0, 1207, 0, 1347, 1354, 0, -2, 0, 0, 0,
	176, 200, 0, 0, 0, 0, 203, 1421, 178, 0,
	0, 209, 209, 0, 0, 1363, 1365, 1378, 0, 0,
	0, 0, 154, 0, 0, 1381, 1385, 1393, 1388, 1390,
	1396, 0, 102, 0, 1499, 0, 140, 0, 0, 0,
	1398, 222, 223, 0, 209, 0, 209, 215, 209, 1356,
	0, 0, 0, 0, 0, 0, 0, 1401, 1402, 243,
	0, 0, 0, 0, 0, 245, 318, 252, 393, 0,
	1136, 0, 1203, 1195, 1196, 1197, 0, 1107, 1202, 1204,
	0, 0, 1112, 0, 0, 0, 0, 1092, 1077, 0,
	1088, 0, 0, 1105, 1080, 0, 461, 478, 0, 481,
	0, 484, 1066, 1239, 1283, 1221, 1286, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 1511, 1513, 0,
	1504, 1505, 1536, 1642, 0, 0, 0, 1523, 1643, 0,
	327, 328, 0, 328, 288, 0, 289, 290, 291, 298,
	299, 300, 277, 278, 681, 683, 0, 0, 689, 1125,
	0, 0, 0, 0, 1632, 1948, -2, -2, 1969, 0,
	2331, 2333, 1624, 0, 2116, 1626, 0, 0, -2, 0,
	0, 0, 1607, 1590, 0, 1665, 1657, 1659, 1661, 2644,
	2423, 2759, 1591, 1592, 1740, 0, 0, 1708, 335, 1405,
	627, 0, 0, 1768, 0, 632, 0, 0, 0, 0,
	0, 1373, 171, 0, 0, 1152, 1153, 2305, 1155, 0,
	1157, 1159, 1160, 1161, 0, 1164, 0, 2354, 0, 1169,
	1172, 1173, 0, 0, 1186, 1208, 0, 1217, 0, 1349,
	1359, 1353, 0, 1351, 1219, 0, 175, 202, 177, 204,
	199, 0, 1356, 0, 179, 189, 0, 0, 122, 0,
	0, 2417, 157, 155, 153, 100, 1360, 143, 0, 124,
	0, 224, 233, 1355, 235, 219, 209, 0, 1382, 1386,
	1394, 0, 1409, 1410, 1411, 1412, 0, 0, 0, 0,
	254, 0, 255, 258, 259, 0, 0, 1080, 1135, 1079,
	1194, 0, 1205, 1206, 0, 0, 0, 0, 0, 0,
	1082, 0, 1081, 0, 0, 0, 0, 0, 462, 465,
	0, 468, 0, 0, 0, 0, 0, 1290, 0, 1335,
	1333, 0, 1341, 0, 0, 0, 1487, 0, 0, 1506,
	1507, 485, 1529, 0, 0, 1536, 1547, 307, 0, 310,
	285, 0, 685, 0, 687, 0, 988, 990, 0, 0,
	2042, 2134, 0, 0, 2067, 2068, -2, 0, 2008, 2118,
	2120, 0, 0, 0, 0, 0, 1676, 1685, 1406, 1762,
	639, 636, 638, 0, 1369, 0, 1376, 211, 1150, 1154,
	0, 0, 0, 1165, 1225, 0, 0, 1242, 1242, 1178,
	0, 0, 1211, 1212, 1132, 0, 1213, 1214, 1215, 1348,
	1635, 1354, 1188, 0, 0, 201, 206, 0, 0, 0,
	0, 0, 0, 142, 0, 213, 236, 1356, 0, 1413,
	1414, 0, 0, 251, 270, 0, 1284, 1082, 0, 1113,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1114,
	1219, 0, 0, 1183, 1090, 0, 1093, 0, 1089, 1086,
	1087, 1078, 0, 466, 467, 482, 0, 483, 0, 0,
	1291, 0, 0, 1342, 0, 0, 1494, 1486, 1513, 1508,
	1509, 1759, 0, 1537, 0, 684, 0, 0, 998, 999,
	0, 0, 0, 0, 2129, 1627, 2009, 0, 0, 1660,
	1662, 1663, 1664, 628, 0, 1370, 183, 0, 0, 1163,
	1230, 0, 0, 0, 0, 0, 1179, 1209, 1210, 1207,
	1131, 0, 1352, 1350, 0, 1221, 181, 0, 1219, 0,
	1141, 0, 0, 1144, 0, 0, 158, 2417, 156, 0,
	209, 1406, 209, 0, 273, 0, 264, 262, 263, 1074,
	0, 1199, 1201, 1217, 1219, 1132, 0, 1094, 1136, 1092,
	479, 1285, 1289, 1287, 1325, 1219, 0, 1217, 0, 1501,
	1513, 1495, 1496, 0, 1511, 0, 0, 328, 686, 688,
	2126, 2146, 2135, -2, 2716, 2424, 0, 2146, 2146, 2121,
	2122, 0, 0, 0, 1166, 1226, 1227, 0, 1222, 1223,
	1224, 2353, 1167, 1168, 1170, 1171, 1759, 0, 0, 1225,
	205, 187, 1138, 0, 0, 1139, 0, 0, 161, 0,
	163, 237, 1404, 1407, 0, 260, 0, 0, 1071, 1073,
	1198, 0, 1132, 1217, 1080, 0, 0, 0, 1080, 1082,
	1217, 0, 1132, 0, 1490, 1500, 0, 1510, 1487, 0,
	1532, 0, 309, 2131, 0, 0, 2137, 2138, 2139, 2140,
	2141, 2132, 2133, 640, 1156, 0, 1228, 0, 1229, 0,
	0, 0, 1187, 1216, 0, 1230, 1142, 0, 1145, 0,
	159, 0, 0, 268, 269, 1200, 1080, 1132, 1759, 0,
	1083, 0, 1085, 1082, 1091, 1132, 0, 1080, 0, 1483,
	1489, 1493, 2314, 1494, 1530, 0, 0, 0, 2143, 2144,
	0, 0, 0, 1231, 0, 1234, 1235, 0, 1232, 0,
	1207, 0, 0, 209, 0, 1759, 1080, 1182, 1084, 1074,
	1080, 1219, 1759, 1217, 1501, 0, 1759, 2142, 2145, 2136,
	1162, 1233, 1236, 1237, 1218, 1189, 0, 0, 1408, 271,
	0, 1180, 1759, 1072, 1759, 1217, 1338, 1132, 1490, 1759,
	1533, 1129, 0, 0, 1181, 1336, 1132, 1080, 1484, 1531,
	1143, 1128, 0, 272, 1080, 1759, 0, 1759, 1339, 0,
	1337, 1129, 1146,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 595, 3, 601, 596, 3,
	607, 608, 599, 597, 612, 598, 609, 600, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 615, 3,
	587, 589, 588, 592, 611, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 605, 3, 606, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 613, 594, 614, 590,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 591,
	57930, 593, 57931, 603, 57932, 604, 57933, 610, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1484
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1511
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1534
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1661
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1693
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1704
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1716
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1726
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1805
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1841
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1845
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1891
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1899
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1913
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1931
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1935
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1946
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1958
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1999
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2008
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2041
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2061
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2069
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2080
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2090
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2109
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2120
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2126
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2142
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2152
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2157
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2168
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2189
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2194
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2248
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2274
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2292
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2305
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2545
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2604
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2691
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2741
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2757
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2768
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2886
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2895
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2936
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2984
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3029
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3037
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3062
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3073
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3182
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3187
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3191
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3197
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3202
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3207
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3228
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3231
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3267
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3315
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3329
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3349
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3481
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3511
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3542
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3561
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create access method")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create cast")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create publication")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create rule")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplemented(sqllex, "create server")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3608
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3609
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop server")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3678
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3687
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3721
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3733
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3756
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3791
		{

			sqlVAL.union.val = nil
		}
	case 477:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3808
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3827
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3838
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3851
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "DELETE")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3878
		{
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3890
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3891
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3893
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3904
		{
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "DROP")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3913
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3947
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3962
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3985
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4025
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4032
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4070
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4104
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4109
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4161
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4170
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4178
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4194
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4202
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "DELETE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "INSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "DELETE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "INSERT")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4257
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4283
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4291
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4316
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4324
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4332
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4354
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4407
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4423
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			return helpWith(sqllex, "GRANT")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4484
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4519
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4532
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4605
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4606
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4607
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "USE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4630
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4674
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4725
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4806
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4813
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return unimplemented(sqllex, "set from current")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4863
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4875
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4880
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.Low
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.Normal
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = tree.High
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4997
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5060
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5069
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5074
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.str = "client_encoding"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.str = "timezone"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5146
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5150
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5200
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5209
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5218
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5245
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5308
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5348
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5371
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5379
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5425
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5439
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5480
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5481
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5499
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5501
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5525
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5526
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5542
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5550
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5594
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5599
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5601
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5620
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5622
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5625
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = true
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = false
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5686
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5703
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5718
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5729
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5756
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5781
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5786
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5791
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5796
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5809
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5822
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5841
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5852
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5870
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5878
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5904
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5913
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5922
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5945
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5957
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6016
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6026
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6039
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6172
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6215
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6224
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6275
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6276
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6287
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6297
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6341
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6392
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6456
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6492
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6507
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6535
		{

			sqlVAL.union.val = nil
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6541
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6551
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6578
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6604
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6617
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6632
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6633
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6974
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7033
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7036
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7132
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7160
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7170
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7185
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7250
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7254
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7277
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7356
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7412
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7421
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7429
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7477
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.str = ""
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{

			sqlVAL.union.val = true
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = false
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7604
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7618
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7630
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7642
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7652
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7662
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7666
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = nil
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7796
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7801
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7802
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7829
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7831
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7833
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7837
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7845
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7872
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7889
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7907
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7923
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7939
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = false
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = true
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = false
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = true
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = false
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8003
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8009
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.str = ""
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8045
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.str = ""
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8076
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8082
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8128
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8172
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8307
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8313
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8325
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8331
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8345
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8351
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8393
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = true
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = false
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = tree.Types
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8470
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8474
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8514
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8532
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8562
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8591
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8599
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8615
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8640
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8658
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8667
		{
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8668
		{
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8669
		{
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8690
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8698
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8708
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8718
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8733
		{
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8826
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.str = ""
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8849
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8854
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{

		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8886
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.str = ""
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.str = ""
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8921
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.str = ""
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.str = ""
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8941
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8955
		{
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8977
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9075
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9147
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9200
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9215
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9342
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9344
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9348
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9396
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9501
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9517
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = true
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = false
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9579
		{
			sqlVAL.union.val = nil
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9585
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = true
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = false
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = false
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = true
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9614
		{
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9615
		{
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9618
		{
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9619
		{
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9660
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9672
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9677
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9703
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9831
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9864
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9879
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9901
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9911
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9948
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9960
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9979
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10031
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10077
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10107
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10140
		{
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10142
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = nil
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10146
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = true
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = false
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.str = tree.AstFull
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.str = tree.AstRight
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.str = tree.AstInner
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10260
		{
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.str = tree.AstHash
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.str = ""
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10329
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10348
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10364
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10374
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = true
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = false
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = true
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = false
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10423
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10436
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10444
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10445
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10463
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10465
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10473
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10493
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10542
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10554
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10573
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10577
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = types.Geography
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10604
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10612
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10646
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = nil
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = types.Int2
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = types.Int
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = types.Float4
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = types.Float
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10689
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10697
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10705
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = types.Bool
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = types.Float
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10738
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10744
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10766
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = types.String
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = true
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = false
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = types.Date
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10815
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10823
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10854
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10871
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = true
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = false
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = false
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = types.Interval
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10895
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10979
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10994
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = nil
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11024
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11084
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11355
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11359
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11384
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11388
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11392
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11428
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11474
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11530
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11558
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11602
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11662
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11667
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11669
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11677
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11693
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11717
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11740
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11744
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11751
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11762
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11763
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11778
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11787
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11853
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11932
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11992
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12010
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12019
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12031
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12039
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12053
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12054
		{
			return unimplemented(sqllex, "treat")
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12075
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12127
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12135
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.str = ""
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12180
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12229
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12326
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12376
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12385
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12393
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12402
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12451
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12480
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12537
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12551
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12574
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12599
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12654
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12658
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12664
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12727
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12742
		{
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12743
		{
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12757
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12774
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12782
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12792
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12823
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12863
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12873
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12892
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12896
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12912
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12921
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12932
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12941
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12949
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12966
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13051
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13059
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13063
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13069
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13123
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13185
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13198
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13205
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.str = ""
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13236
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
