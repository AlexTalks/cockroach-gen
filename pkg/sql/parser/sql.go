// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12030

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1365,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	232, 206,
	485, 206,
	-2, 0,
	-1, 82,
	221, 1158,
	234, 1158,
	250, 348,
	374, 348,
	384, 940,
	416, 348,
	428, 940,
	470, 940,
	496, 348,
	522, 940,
	-2, 0,
	-1, 88,
	250, 352,
	-2, 0,
	-1, 89,
	129, 1365,
	227, 1365,
	507, 1365,
	508, 1365,
	-2, 0,
	-1, 105,
	146, 1336,
	164, 1336,
	177, 1336,
	230, 1336,
	263, 1336,
	327, 1336,
	337, 1336,
	502, 1336,
	-2, 1307,
	-1, 141,
	154, 818,
	249, 818,
	377, 787,
	433, 787,
	488, 818,
	490, 787,
	-2, 0,
	-1, 143,
	4, 1367,
	21, 1367,
	22, 1367,
	23, 1367,
	24, 1367,
	25, 1367,
	26, 1367,
	27, 1367,
	29, 1367,
	30, 1367,
	36, 1367,
	41, 1367,
	42, 1367,
	44, 1367,
	45, 1367,
	46, 1367,
	47, 1367,
	48, 1367,
	49, 1367,
	50, 1367,
	52, 1367,
	53, 1367,
	54, 1367,
	55, 1367,
	57, 1367,
	58, 1367,
	59, 1367,
	60, 1367,
	61, 1367,
	62, 1367,
	63, 1367,
	67, 1367,
	68, 1367,
	69, 1367,
	70, 1367,
	72, 1367,
	73, 1367,
	74, 1367,
	78, 1367,
	79, 1367,
	80, 1367,
	81, 1367,
	82, 1367,
	83, 1367,
	84, 1367,
	87, 1367,
	88, 1367,
	89, 1367,
	90, 1367,
	91, 1367,
	93, 1367,
	95, 1367,
	96, 1367,
	97, 1367,
	98, 1367,
	99, 1367,
	100, 1367,
	102, 1367,
	103, 1367,
	104, 1367,
	106, 1367,
	107, 1367,
	115, 1367,
	116, 1367,
	117, 1367,
	118, 1367,
	120, 1367,
	121, 1367,
	122, 1367,
	124, 1367,
	125, 1367,
	126, 1367,
	128, 1367,
	129, 1367,
	131, 1367,
	132, 1367,
	133, 1367,
	136, 1367,
	137, 1367,
	138, 1367,
	140, 1367,
	141, 1367,
	143, 1367,
	144, 1367,
	145, 1367,
	147, 1367,
	148, 1367,
	149, 1367,
	150, 1367,
	151, 1367,
	152, 1367,
	153, 1367,
	154, 1367,
	155, 1367,
	156, 1367,
	157, 1367,
	158, 1367,
	159, 1367,
	160, 1367,
	161, 1367,
	163, 1367,
	169, 1367,
	170, 1367,
	171, 1367,
	172, 1367,
	176, 1367,
	178, 1367,
	182, 1367,
	183, 1367,
	184, 1367,
	185, 1367,
	186, 1367,
	187, 1367,
	188, 1367,
	189, 1367,
	190, 1367,
	191, 1367,
	192, 1367,
	193, 1367,
	195, 1367,
	196, 1367,
	198, 1367,
	199, 1367,
	201, 1367,
	202, 1367,
	203, 1367,
	204, 1367,
	205, 1367,
	206, 1367,
	207, 1367,
	208, 1367,
	209, 1367,
	211, 1367,
	212, 1367,
	214, 1367,
	215, 1367,
	216, 1367,
	217, 1367,
	221, 1367,
	222, 1367,
	223, 1367,
	224, 1367,
	227, 1367,
	228, 1367,
	229, 1367,
	231, 1367,
	233, 1367,
	234, 1367,
	236, 1367,
	238, 1367,
	239, 1367,
	240, 1367,
	242, 1367,
	246, 1367,
	247, 1367,
	248, 1367,
	249, 1367,
	250, 1367,
	251, 1367,
	253, 1367,
	254, 1367,
	255, 1367,
	257, 1367,
	258, 1367,
	260, 1367,
	261, 1367,
	264, 1367,
	268, 1367,
	269, 1367,
	272, 1367,
	273, 1367,
	274, 1367,
	275, 1367,
	277, 1367,
	278, 1367,
	279, 1367,
	280, 1367,
	281, 1367,
	282, 1367,
	283, 1367,
	284, 1367,
	285, 1367,
	286, 1367,
	287, 1367,
	288, 1367,
	289, 1367,
	290, 1367,
	291, 1367,
	292, 1367,
	293, 1367,
	294, 1367,
	295, 1367,
	296, 1367,
	297, 1367,
	298, 1367,
	300, 1367,
	302, 1367,
	303, 1367,
	304, 1367,
	305, 1367,
	306, 1367,
	307, 1367,
	308, 1367,
	309, 1367,
	310, 1367,
	311, 1367,
	312, 1367,
	313, 1367,
	315, 1367,
	317, 1367,
	319, 1367,
	320, 1367,
	322, 1367,
	323, 1367,
	324, 1367,
	325, 1367,
	326, 1367,
	329, 1367,
	332, 1367,
	333, 1367,
	334, 1367,
	335, 1367,
	338, 1367,
	339, 1367,
	340, 1367,
	342, 1367,
	344, 1367,
	345, 1367,
	346, 1367,
	347, 1367,
	348, 1367,
	349, 1367,
	350, 1367,
	351, 1367,
	352, 1367,
	353, 1367,
	354, 1367,
	355, 1367,
	357, 1367,
	358, 1367,
	359, 1367,
	360, 1367,
	361, 1367,
	362, 1367,
	363, 1367,
	364, 1367,
	365, 1367,
	366, 1367,
	367, 1367,
	368, 1367,
	369, 1367,
	370, 1367,
	371, 1367,
	373, 1367,
	375, 1367,
	376, 1367,
	377, 1367,
	378, 1367,
	379, 1367,
	380, 1367,
	381, 1367,
	382, 1367,
	383, 1367,
	384, 1367,
	385, 1367,
	386, 1367,
	388, 1367,
	394, 1367,
	396, 1367,
	397, 1367,
	398, 1367,
	399, 1367,
	400, 1367,
	401, 1367,
	402, 1367,
	403, 1367,
	405, 1367,
	406, 1367,
	407, 1367,
	409, 1367,
	410, 1367,
	411, 1367,
	412, 1367,
	413, 1367,
	414, 1367,
	416, 1367,
	417, 1367,
	418, 1367,
	419, 1367,
	420, 1367,
	421, 1367,
	422, 1367,
	423, 1367,
	424, 1367,
	425, 1367,
	426, 1367,
	428, 1367,
	429, 1367,
	430, 1367,
	431, 1367,
	432, 1367,
	433, 1367,
	435, 1367,
	436, 1367,
	437, 1367,
	438, 1367,
	439, 1367,
	440, 1367,
	442, 1367,
	443, 1367,
	444, 1367,
	445, 1367,
	446, 1367,
	447, 1367,
	448, 1367,
	450, 1367,
	452, 1367,
	453, 1367,
	454, 1367,
	455, 1367,
	456, 1367,
	457, 1367,
	458, 1367,
	459, 1367,
	460, 1367,
	461, 1367,
	462, 1367,
	463, 1367,
	464, 1367,
	466, 1367,
	467, 1367,
	469, 1367,
	471, 1367,
	472, 1367,
	473, 1367,
	474, 1367,
	475, 1367,
	476, 1367,
	477, 1367,
	478, 1367,
	480, 1367,
	481, 1367,
	482, 1367,
	483, 1367,
	484, 1367,
	486, 1367,
	488, 1367,
	489, 1367,
	490, 1367,
	491, 1367,
	492, 1367,
	493, 1367,
	495, 1367,
	496, 1367,
	497, 1367,
	498, 1367,
	500, 1367,
	501, 1367,
	504, 1367,
	505, 1367,
	506, 1367,
	507, 1367,
	508, 1367,
	509, 1367,
	510, 1367,
	512, 1367,
	515, 1367,
	516, 1367,
	517, 1367,
	518, 1367,
	519, 1367,
	520, 1367,
	522, 1367,
	523, 1367,
	524, 1367,
	525, 1367,
	530, 1367,
	531, 1367,
	532, 1367,
	533, 1367,
	534, 1367,
	535, 1367,
	-2, 0,
	-1, 144,
	1, 1236,
	127, 1236,
	238, 1236,
	316, 1236,
	373, 1236,
	381, 1236,
	539, 1236,
	563, 1236,
	-2, 0,
	-1, 146,
	1, 1236,
	563, 1236,
	-2, 0,
	-1, 147,
	1, 1236,
	563, 1236,
	-2, 0,
	-1, 148,
	1, 1236,
	485, 1236,
	563, 1236,
	-2, 0,
	-1, 177,
	146, 1335,
	164, 1335,
	177, 1335,
	230, 1335,
	263, 1335,
	327, 1335,
	337, 1335,
	502, 1335,
	-2, 1310,
	-1, 215,
	4, 1374,
	5, 1374,
	6, 1374,
	7, 1374,
	8, 1374,
	9, 1374,
	10, 1374,
	21, 1374,
	22, 1374,
	23, 1374,
	24, 1374,
	25, 1374,
	26, 1374,
	27, 1374,
	29, 1374,
	30, 1374,
	36, 1374,
	37, 1374,
	41, 1374,
	42, 1374,
	43, 1374,
	44, 1374,
	45, 1374,
	46, 1374,
	47, 1374,
	48, 1374,
	49, 1374,
	50, 1374,
	52, 1374,
	53, 1374,
	54, 1374,
	55, 1374,
	57, 1374,
	58, 1374,
	59, 1374,
	60, 1374,
	61, 1374,
	62, 1374,
	63, 1374,
	64, 1374,
	65, 1374,
	66, 1374,
	67, 1374,
	68, 1374,
	69, 1374,
	70, 1374,
	72, 1374,
	73, 1374,
	74, 1374,
	76, 1374,
	78, 1374,
	79, 1374,
	80, 1374,
	81, 1374,
	82, 1374,
	83, 1374,
	84, 1374,
	87, 1374,
	88, 1374,
	89, 1374,
	90, 1374,
	91, 1374,
	93, 1374,
	95, 1374,
	96, 1374,
	97, 1374,
	98, 1374,
	99, 1374,
	100, 1374,
	102, 1374,
	103, 1374,
	104, 1374,
	105, 1374,
	106, 1374,
	107, 1374,
	108, 1374,
	109, 1374,
	110, 1374,
	111, 1374,
	112, 1374,
	113, 1374,
	114, 1374,
	115, 1374,
	116, 1374,
	117, 1374,
	118, 1374,
	119, 1374,
	120, 1374,
	121, 1374,
	122, 1374,
	123, 1374,
	124, 1374,
	125, 1374,
	126, 1374,
	128, 1374,
	129, 1374,
	131, 1374,
	132, 1374,
	133, 1374,
	136, 1374,
	137, 1374,
	138, 1374,
	140, 1374,
	141, 1374,
	143, 1374,
	144, 1374,
	145, 1374,
	147, 1374,
	148, 1374,
	149, 1374,
	150, 1374,
	151, 1374,
	152, 1374,
	153, 1374,
	154, 1374,
	155, 1374,
	156, 1374,
	157, 1374,
	158, 1374,
	159, 1374,
	160, 1374,
	161, 1374,
	162, 1374,
	163, 1374,
	169, 1374,
	170, 1374,
	171, 1374,
	172, 1374,
	176, 1374,
	178, 1374,
	181, 1374,
	182, 1374,
	183, 1374,
	184, 1374,
	185, 1374,
	186, 1374,
	187, 1374,
	188, 1374,
	189, 1374,
	190, 1374,
	191, 1374,
	192, 1374,
	193, 1374,
	195, 1374,
	196, 1374,
	198, 1374,
	199, 1374,
	201, 1374,
	202, 1374,
	203, 1374,
	204, 1374,
	205, 1374,
	206, 1374,
	207, 1374,
	208, 1374,
	209, 1374,
	210, 1374,
	211, 1374,
	212, 1374,
	214, 1374,
	215, 1374,
	216, 1374,
	217, 1374,
	221, 1374,
	222, 1374,
	223, 1374,
	224, 1374,
	226, 1374,
	227, 1374,
	228, 1374,
	229, 1374,
	231, 1374,
	233, 1374,
	234, 1374,
	235, 1374,
	236, 1374,
	237, 1374,
	238, 1374,
	239, 1374,
	240, 1374,
	241, 1374,
	242, 1374,
	246, 1374,
	247, 1374,
	248, 1374,
	249, 1374,
	250, 1374,
	251, 1374,
	253, 1374,
	254, 1374,
	255, 1374,
	257, 1374,
	258, 1374,
	259, 1374,
	260, 1374,
	261, 1374,
	262, 1374,
	264, 1374,
	268, 1374,
	269, 1374,
	270, 1374,
	271, 1374,
	272, 1374,
	273, 1374,
	274, 1374,
	275, 1374,
	277, 1374,
	278, 1374,
	279, 1374,
	280, 1374,
	281, 1374,
	282, 1374,
	283, 1374,
	284, 1374,
	285, 1374,
	286, 1374,
	287, 1374,
	288, 1374,
	289, 1374,
	290, 1374,
	291, 1374,
	292, 1374,
	293, 1374,
	294, 1374,
	295, 1374,
	296, 1374,
	297, 1374,
	298, 1374,
	300, 1374,
	301, 1374,
	302, 1374,
	303, 1374,
	304, 1374,
	305, 1374,
	306, 1374,
	307, 1374,
	308, 1374,
	309, 1374,
	310, 1374,
	311, 1374,
	312, 1374,
	313, 1374,
	314, 1374,
	315, 1374,
	316, 1374,
	317, 1374,
	318, 1374,
	319, 1374,
	320, 1374,
	321, 1374,
	322, 1374,
	323, 1374,
	324, 1374,
	325, 1374,
	326, 1374,
	329, 1374,
	333, 1374,
	334, 1374,
	335, 1374,
	338, 1374,
	339, 1374,
	340, 1374,
	341, 1374,
	342, 1374,
	343, 1374,
	344, 1374,
	345, 1374,
	346, 1374,
	347, 1374,
	348, 1374,
	349, 1374,
	350, 1374,
	351, 1374,
	352, 1374,
	353, 1374,
	354, 1374,
	355, 1374,
	357, 1374,
	358, 1374,
	359, 1374,
	360, 1374,
	361, 1374,
	362, 1374,
	363, 1374,
	364, 1374,
	365, 1374,
	366, 1374,
	367, 1374,
	368, 1374,
	369, 1374,
	370, 1374,
	371, 1374,
	373, 1374,
	375, 1374,
	376, 1374,
	377, 1374,
	378, 1374,
	379, 1374,
	380, 1374,
	381, 1374,
	382, 1374,
	383, 1374,
	384, 1374,
	385, 1374,
	386, 1374,
	388, 1374,
	394, 1374,
	396, 1374,
	397, 1374,
	398, 1374,
	399, 1374,
	400, 1374,
	401, 1374,
	402, 1374,
	403, 1374,
	405, 1374,
	406, 1374,
	407, 1374,
	408, 1374,
	409, 1374,
	410, 1374,
	411, 1374,
	412, 1374,
	413, 1374,
	414, 1374,
	416, 1374,
	417, 1374,
	418, 1374,
	419, 1374,
	420, 1374,
	421, 1374,
	422, 1374,
	423, 1374,
	424, 1374,
	425, 1374,
	426, 1374,
	428, 1374,
	429, 1374,
	430, 1374,
	431, 1374,
	432, 1374,
	433, 1374,
	434, 1374,
	435, 1374,
	436, 1374,
	437, 1374,
	438, 1374,
	439, 1374,
	440, 1374,
	441, 1374,
	442, 1374,
	443, 1374,
	444, 1374,
	445, 1374,
	446, 1374,
	447, 1374,
	448, 1374,
	450, 1374,
	452, 1374,
	453, 1374,
	454, 1374,
	455, 1374,
	456, 1374,
	457, 1374,
	458, 1374,
	459, 1374,
	460, 1374,
	461, 1374,
	462, 1374,
	463, 1374,
	464, 1374,
	466, 1374,
	467, 1374,
	468, 1374,
	469, 1374,
	471, 1374,
	472, 1374,
	473, 1374,
	474, 1374,
	475, 1374,
	476, 1374,
	477, 1374,
	478, 1374,
	480, 1374,
	481, 1374,
	482, 1374,
	483, 1374,
	484, 1374,
	486, 1374,
	488, 1374,
	489, 1374,
	490, 1374,
	491, 1374,
	492, 1374,
	493, 1374,
	494, 1374,
	495, 1374,
	496, 1374,
	497, 1374,
	498, 1374,
	500, 1374,
	501, 1374,
	503, 1374,
	504, 1374,
	505, 1374,
	506, 1374,
	507, 1374,
	508, 1374,
	509, 1374,
	510, 1374,
	511, 1374,
	512, 1374,
	515, 1374,
	516, 1374,
	517, 1374,
	518, 1374,
	519, 1374,
	520, 1374,
	522, 1374,
	523, 1374,
	524, 1374,
	525, 1374,
	530, 1374,
	531, 1374,
	532, 1374,
	533, 1374,
	534, 1374,
	535, 1374,
	536, 1374,
	544, 1374,
	551, 1374,
	552, 1374,
	553, 1374,
	560, 1374,
	564, 1374,
	-2, 0,
	-1, 674,
	180, 2120,
	485, 2120,
	543, 2120,
	562, 2120,
	-2, 0,
	-1, 675,
	180, 2218,
	485, 2218,
	543, 2218,
	562, 2218,
	-2, 0,
	-1, 676,
	180, 2107,
	485, 2107,
	543, 2107,
	562, 2107,
	-2, 0,
	-1, 678,
	180, 2342,
	485, 2342,
	543, 2342,
	562, 2342,
	-2, 0,
	-1, 680,
	180, 2377,
	485, 2377,
	543, 2377,
	562, 2377,
	-2, 0,
	-1, 687,
	180, 2244,
	485, 2244,
	543, 2244,
	562, 2244,
	-2, 628,
	-1, 719,
	562, 2057,
	565, 2057,
	-2, 876,
	-1, 720,
	562, 2059,
	565, 2059,
	-2, 877,
	-1, 721,
	562, 2058,
	565, 2058,
	-2, 878,
	-1, 722,
	565, 1991,
	-2, 879,
	-1, 745,
	177, 220,
	-2, 0,
	-1, 767,
	43, 2061,
	-2, 0,
	-1, 768,
	522, 1135,
	-2, 941,
	-1, 784,
	4, 1500,
	21, 1500,
	22, 1500,
	23, 1500,
	24, 1500,
	25, 1500,
	26, 1500,
	27, 1500,
	29, 1500,
	30, 1500,
	36, 1500,
	41, 1500,
	42, 1500,
	44, 1500,
	45, 1500,
	46, 1500,
	47, 1500,
	48, 1500,
	49, 1500,
	50, 1500,
	52, 1500,
	53, 1500,
	54, 1500,
	55, 1500,
	57, 1500,
	58, 1500,
	59, 1500,
	60, 1500,
	61, 1500,
	62, 1500,
	63, 1500,
	67, 1500,
	68, 1500,
	69, 1500,
	70, 1500,
	72, 1500,
	73, 1500,
	74, 1500,
	78, 1500,
	79, 1500,
	80, 1500,
	81, 1500,
	82, 1500,
	83, 1500,
	84, 1500,
	87, 1500,
	88, 1500,
	89, 1500,
	90, 1500,
	91, 1500,
	93, 1500,
	95, 1500,
	96, 1500,
	97, 1500,
	98, 1500,
	99, 1500,
	100, 1500,
	102, 1500,
	103, 1500,
	104, 1500,
	106, 1500,
	107, 1500,
	115, 1500,
	116, 1500,
	117, 1500,
	118, 1500,
	120, 1500,
	121, 1500,
	122, 1500,
	124, 1500,
	125, 1500,
	126, 1500,
	128, 1500,
	129, 1500,
	131, 1500,
	132, 1500,
	133, 1500,
	136, 1500,
	137, 1500,
	138, 1500,
	140, 1500,
	141, 1500,
	143, 1500,
	144, 1500,
	145, 1500,
	147, 1500,
	148, 1500,
	149, 1500,
	150, 1500,
	151, 1500,
	152, 1500,
	153, 1500,
	154, 1500,
	155, 1500,
	156, 1500,
	157, 1500,
	158, 1500,
	159, 1500,
	160, 1500,
	161, 1500,
	163, 1500,
	169, 1500,
	170, 1500,
	171, 1500,
	172, 1500,
	176, 1500,
	178, 1500,
	182, 1500,
	183, 1500,
	184, 1500,
	185, 1500,
	186, 1500,
	187, 1500,
	188, 1500,
	189, 1500,
	190, 1500,
	191, 1500,
	192, 1500,
	193, 1500,
	195, 1500,
	196, 1500,
	198, 1500,
	199, 1500,
	201, 1500,
	202, 1500,
	203, 1500,
	204, 1500,
	205, 1500,
	206, 1500,
	207, 1500,
	208, 1500,
	209, 1500,
	211, 1500,
	212, 1500,
	214, 1500,
	215, 1500,
	216, 1500,
	217, 1500,
	221, 1500,
	222, 1500,
	223, 1500,
	224, 1500,
	227, 1500,
	228, 1500,
	229, 1500,
	231, 1500,
	233, 1500,
	234, 1500,
	236, 1500,
	238, 1500,
	239, 1500,
	240, 1500,
	242, 1500,
	246, 1500,
	247, 1500,
	248, 1500,
	249, 1500,
	250, 1500,
	251, 1500,
	253, 1500,
	254, 1500,
	255, 1500,
	257, 1500,
	258, 1500,
	260, 1500,
	261, 1500,
	264, 1500,
	268, 1500,
	269, 1500,
	272, 1500,
	273, 1500,
	274, 1500,
	275, 1500,
	277, 1500,
	278, 1500,
	279, 1500,
	280, 1500,
	281, 1500,
	282, 1500,
	283, 1500,
	284, 1500,
	285, 1500,
	286, 1500,
	287, 1500,
	288, 1500,
	289, 1500,
	290, 1500,
	291, 1500,
	292, 1500,
	293, 1500,
	294, 1500,
	295, 1500,
	296, 1500,
	297, 1500,
	298, 1500,
	300, 1500,
	302, 1500,
	303, 1500,
	304, 1500,
	305, 1500,
	306, 1500,
	307, 1500,
	308, 1500,
	309, 1500,
	310, 1500,
	311, 1500,
	312, 1500,
	313, 1500,
	315, 1500,
	317, 1500,
	319, 1500,
	320, 1500,
	322, 1500,
	323, 1500,
	324, 1500,
	325, 1500,
	326, 1500,
	329, 1500,
	333, 1500,
	334, 1500,
	335, 1500,
	338, 1500,
	339, 1500,
	340, 1500,
	342, 1500,
	344, 1500,
	345, 1500,
	346, 1500,
	347, 1500,
	348, 1500,
	349, 1500,
	350, 1500,
	351, 1500,
	352, 1500,
	353, 1500,
	354, 1500,
	355, 1500,
	357, 1500,
	358, 1500,
	359, 1500,
	360, 1500,
	361, 1500,
	362, 1500,
	363, 1500,
	364, 1500,
	365, 1500,
	366, 1500,
	367, 1500,
	368, 1500,
	369, 1500,
	370, 1500,
	371, 1500,
	373, 1500,
	375, 1500,
	376, 1500,
	377, 1500,
	378, 1500,
	379, 1500,
	380, 1500,
	381, 1500,
	382, 1500,
	383, 1500,
	384, 1500,
	385, 1500,
	386, 1500,
	388, 1500,
	394, 1500,
	396, 1500,
	397, 1500,
	398, 1500,
	399, 1500,
	400, 1500,
	401, 1500,
	402, 1500,
	403, 1500,
	405, 1500,
	406, 1500,
	407, 1500,
	409, 1500,
	410, 1500,
	411, 1500,
	412, 1500,
	413, 1500,
	414, 1500,
	416, 1500,
	417, 1500,
	418, 1500,
	419, 1500,
	420, 1500,
	421, 1500,
	422, 1500,
	423, 1500,
	424, 1500,
	425, 1500,
	426, 1500,
	428, 1500,
	429, 1500,
	430, 1500,
	431, 1500,
	432, 1500,
	433, 1500,
	435, 1500,
	436, 1500,
	437, 1500,
	438, 1500,
	439, 1500,
	440, 1500,
	442, 1500,
	443, 1500,
	444, 1500,
	445, 1500,
	446, 1500,
	447, 1500,
	448, 1500,
	450, 1500,
	452, 1500,
	453, 1500,
	454, 1500,
	455, 1500,
	456, 1500,
	457, 1500,
	458, 1500,
	459, 1500,
	460, 1500,
	461, 1500,
	462, 1500,
	463, 1500,
	464, 1500,
	466, 1500,
	467, 1500,
	469, 1500,
	471, 1500,
	472, 1500,
	473, 1500,
	474, 1500,
	475, 1500,
	476, 1500,
	477, 1500,
	478, 1500,
	480, 1500,
	481, 1500,
	482, 1500,
	483, 1500,
	484, 1500,
	486, 1500,
	488, 1500,
	489, 1500,
	490, 1500,
	491, 1500,
	492, 1500,
	493, 1500,
	495, 1500,
	496, 1500,
	497, 1500,
	498, 1500,
	500, 1500,
	501, 1500,
	504, 1500,
	505, 1500,
	506, 1500,
	507, 1500,
	508, 1500,
	509, 1500,
	510, 1500,
	512, 1500,
	515, 1500,
	516, 1500,
	517, 1500,
	518, 1500,
	519, 1500,
	520, 1500,
	522, 1500,
	523, 1500,
	524, 1500,
	525, 1500,
	530, 1500,
	531, 1500,
	532, 1500,
	533, 1500,
	534, 1500,
	535, 1500,
	-2, 0,
	-1, 809,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	163, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	221, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	227, 1156,
	228, 1156,
	229, 1156,
	231, 1156,
	233, 1156,
	234, 1156,
	236, 1156,
	238, 1156,
	239, 1156,
	240, 1156,
	242, 1156,
	246, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	253, 1156,
	254, 1156,
	255, 1156,
	257, 1156,
	258, 1156,
	260, 1156,
	261, 1156,
	264, 1156,
	268, 1156,
	269, 1156,
	272, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	277, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	300, 1156,
	302, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	315, 1156,
	317, 1156,
	319, 1156,
	320, 1156,
	322, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	329, 1156,
	333, 1156,
	334, 1156,
	335, 1156,
	338, 1156,
	339, 1156,
	340, 1156,
	342, 1156,
	344, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	357, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	373, 1156,
	375, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	440, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	448, 1156,
	450, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	464, 1156,
	466, 1156,
	467, 1156,
	469, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	478, 1156,
	480, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	484, 1156,
	486, 1156,
	488, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	493, 1156,
	495, 1156,
	496, 1156,
	497, 1156,
	498, 1156,
	500, 1156,
	501, 1156,
	504, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	510, 1156,
	512, 1156,
	515, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	520, 1156,
	522, 1156,
	523, 1156,
	524, 1156,
	525, 1156,
	530, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	535, 1156,
	-2, 0,
	-1, 890,
	377, 788,
	433, 788,
	490, 788,
	-2, 0,
	-1, 891,
	377, 787,
	433, 787,
	490, 787,
	-2, 729,
	-1, 895,
	1, 832,
	559, 832,
	561, 832,
	563, 832,
	-2, 0,
	-1, 896,
	1, 764,
	559, 764,
	561, 764,
	563, 764,
	-2, 0,
	-1, 897,
	1, 766,
	559, 766,
	561, 766,
	563, 766,
	-2, 0,
	-1, 898,
	1, 875,
	177, 875,
	559, 875,
	561, 875,
	563, 875,
	-2, 0,
	-1, 906,
	1, 791,
	559, 791,
	561, 791,
	563, 791,
	-2, 0,
	-1, 912,
	1, 832,
	559, 832,
	561, 832,
	563, 832,
	-2, 0,
	-1, 913,
	1, 834,
	559, 834,
	561, 834,
	563, 834,
	-2, 0,
	-1, 914,
	1, 837,
	559, 837,
	561, 837,
	563, 837,
	-2, 0,
	-1, 920,
	1, 854,
	559, 854,
	561, 854,
	563, 854,
	-2, 0,
	-1, 921,
	1, 856,
	559, 856,
	561, 856,
	563, 856,
	-2, 0,
	-1, 970,
	164, 1376,
	177, 1376,
	263, 1376,
	327, 1376,
	-2, 1314,
	-1, 985,
	164, 1375,
	177, 1375,
	263, 1375,
	327, 1375,
	-2, 1311,
	-1, 1011,
	562, 2056,
	-2, 636,
	-1, 1039,
	5, 2048,
	560, 2046,
	-2, 2037,
	-1, 1047,
	5, 2069,
	560, 2066,
	-2, 2057,
	-1, 1048,
	5, 2070,
	560, 2067,
	-2, 2058,
	-1, 1056,
	562, 2054,
	-2, 2036,
	-1, 1057,
	560, 2459,
	-2, 2055,
	-1, 1080,
	560, 2458,
	-2, 2071,
	-1, 1081,
	5, 1575,
	-2, 2429,
	-1, 1082,
	5, 1576,
	-2, 2430,
	-1, 1083,
	5, 1577,
	-2, 2444,
	-1, 1084,
	5, 1578,
	-2, 2408,
	-1, 1085,
	5, 1579,
	-2, 2442,
	-1, 1086,
	5, 1587,
	-2, 2421,
	-1, 1087,
	5, 1574,
	-2, 2417,
	-1, 1088,
	5, 1574,
	-2, 2416,
	-1, 1089,
	5, 1574,
	-2, 2435,
	-1, 1090,
	5, 1585,
	-2, 2410,
	-1, 1091,
	5, 1590,
	-2, 2409,
	-1, 1092,
	5, 1592,
	-2, 2454,
	-1, 1095,
	5, 1614,
	-2, 2447,
	-1, 1096,
	5, 1606,
	-2, 2448,
	-1, 1097,
	5, 1614,
	-2, 2449,
	-1, 1098,
	5, 1610,
	-2, 2450,
	-1, 1099,
	5, 1560,
	-2, 2422,
	-1, 1100,
	5, 1561,
	-2, 2423,
	-1, 1101,
	5, 1562,
	-2, 2411,
	-1, 1129,
	5, 1597,
	-2, 2455,
	-1, 1130,
	5, 1598,
	-2, 2445,
	-1, 1131,
	5, 1599,
	523, 1599,
	-2, 2412,
	-1, 1132,
	5, 1600,
	523, 1600,
	-2, 2413,
	-1, 1169,
	560, 2066,
	-2, 2057,
	-1, 1170,
	560, 2067,
	-2, 2058,
	-1, 1201,
	180, 2377,
	485, 2377,
	543, 2377,
	562, 2377,
	-2, 0,
	-1, 1204,
	1, 614,
	563, 614,
	-2, 1244,
	-1, 1333,
	396, 2032,
	435, 2032,
	553, 2032,
	-2, 2029,
	-1, 1345,
	564, 2032,
	-2, 2033,
	-1, 1352,
	1, 1132,
	559, 1132,
	561, 1132,
	563, 1132,
	-2, 1363,
	-1, 1408,
	384, 940,
	522, 940,
	-2, 347,
	-1, 1427,
	43, 2060,
	-2, 2030,
	-1, 1432,
	1, 1132,
	559, 1132,
	561, 1132,
	563, 1132,
	-2, 1363,
	-1, 1439,
	4, 1156,
	21, 1156,
	22, 1156,
	23, 1156,
	24, 1156,
	25, 1156,
	26, 1156,
	27, 1156,
	29, 1156,
	30, 1156,
	36, 1156,
	41, 1156,
	42, 1156,
	44, 1156,
	45, 1156,
	46, 1156,
	47, 1156,
	48, 1156,
	49, 1156,
	50, 1156,
	52, 1156,
	53, 1156,
	54, 1156,
	55, 1156,
	57, 1156,
	58, 1156,
	59, 1156,
	60, 1156,
	61, 1156,
	62, 1156,
	63, 1156,
	67, 1156,
	68, 1156,
	69, 1156,
	70, 1156,
	72, 1156,
	73, 1156,
	74, 1156,
	78, 1156,
	79, 1156,
	80, 1156,
	81, 1156,
	82, 1156,
	83, 1156,
	84, 1156,
	87, 1156,
	88, 1156,
	89, 1156,
	90, 1156,
	91, 1156,
	93, 1156,
	95, 1156,
	96, 1156,
	97, 1156,
	98, 1156,
	99, 1156,
	100, 1156,
	102, 1156,
	103, 1156,
	104, 1156,
	106, 1156,
	107, 1156,
	115, 1156,
	116, 1156,
	117, 1156,
	118, 1156,
	120, 1156,
	121, 1156,
	122, 1156,
	124, 1156,
	125, 1156,
	126, 1156,
	128, 1156,
	129, 1156,
	131, 1156,
	132, 1156,
	133, 1156,
	136, 1156,
	137, 1156,
	138, 1156,
	140, 1156,
	141, 1156,
	143, 1156,
	144, 1156,
	145, 1156,
	147, 1156,
	148, 1156,
	149, 1156,
	150, 1156,
	151, 1156,
	152, 1156,
	153, 1156,
	154, 1156,
	155, 1156,
	156, 1156,
	157, 1156,
	158, 1156,
	159, 1156,
	160, 1156,
	161, 1156,
	169, 1156,
	170, 1156,
	171, 1156,
	172, 1156,
	176, 1156,
	178, 1156,
	182, 1156,
	183, 1156,
	184, 1156,
	185, 1156,
	186, 1156,
	187, 1156,
	188, 1156,
	189, 1156,
	190, 1156,
	191, 1156,
	192, 1156,
	193, 1156,
	195, 1156,
	196, 1156,
	198, 1156,
	199, 1156,
	201, 1156,
	202, 1156,
	203, 1156,
	204, 1156,
	205, 1156,
	206, 1156,
	207, 1156,
	208, 1156,
	209, 1156,
	211, 1156,
	212, 1156,
	214, 1156,
	215, 1156,
	216, 1156,
	217, 1156,
	222, 1156,
	223, 1156,
	224, 1156,
	227, 1156,
	228, 1156,
	229, 1156,
	231, 1156,
	233, 1156,
	234, 1156,
	236, 1156,
	238, 1156,
	239, 1156,
	240, 1156,
	242, 1156,
	246, 1156,
	247, 1156,
	248, 1156,
	249, 1156,
	250, 1156,
	251, 1156,
	253, 1156,
	254, 1156,
	255, 1156,
	257, 1156,
	258, 1156,
	260, 1156,
	261, 1156,
	264, 1156,
	268, 1156,
	269, 1156,
	272, 1156,
	273, 1156,
	274, 1156,
	275, 1156,
	277, 1156,
	278, 1156,
	279, 1156,
	280, 1156,
	281, 1156,
	282, 1156,
	283, 1156,
	284, 1156,
	285, 1156,
	286, 1156,
	287, 1156,
	288, 1156,
	289, 1156,
	290, 1156,
	291, 1156,
	292, 1156,
	293, 1156,
	294, 1156,
	295, 1156,
	296, 1156,
	297, 1156,
	298, 1156,
	300, 1156,
	302, 1156,
	303, 1156,
	304, 1156,
	305, 1156,
	306, 1156,
	307, 1156,
	308, 1156,
	309, 1156,
	310, 1156,
	311, 1156,
	312, 1156,
	313, 1156,
	315, 1156,
	319, 1156,
	320, 1156,
	322, 1156,
	323, 1156,
	324, 1156,
	325, 1156,
	326, 1156,
	329, 1156,
	331, 1156,
	333, 1156,
	334, 1156,
	335, 1156,
	338, 1156,
	339, 1156,
	340, 1156,
	342, 1156,
	344, 1156,
	345, 1156,
	346, 1156,
	347, 1156,
	348, 1156,
	349, 1156,
	350, 1156,
	351, 1156,
	352, 1156,
	353, 1156,
	354, 1156,
	355, 1156,
	357, 1156,
	358, 1156,
	359, 1156,
	360, 1156,
	361, 1156,
	362, 1156,
	363, 1156,
	364, 1156,
	365, 1156,
	366, 1156,
	367, 1156,
	368, 1156,
	369, 1156,
	370, 1156,
	371, 1156,
	373, 1156,
	375, 1156,
	376, 1156,
	377, 1156,
	378, 1156,
	379, 1156,
	380, 1156,
	381, 1156,
	382, 1156,
	383, 1156,
	384, 1156,
	385, 1156,
	386, 1156,
	388, 1156,
	394, 1156,
	396, 1156,
	397, 1156,
	398, 1156,
	399, 1156,
	400, 1156,
	401, 1156,
	402, 1156,
	403, 1156,
	405, 1156,
	406, 1156,
	407, 1156,
	409, 1156,
	410, 1156,
	411, 1156,
	412, 1156,
	413, 1156,
	414, 1156,
	416, 1156,
	417, 1156,
	418, 1156,
	419, 1156,
	420, 1156,
	421, 1156,
	422, 1156,
	423, 1156,
	424, 1156,
	425, 1156,
	426, 1156,
	428, 1156,
	429, 1156,
	430, 1156,
	431, 1156,
	432, 1156,
	433, 1156,
	435, 1156,
	436, 1156,
	437, 1156,
	438, 1156,
	439, 1156,
	440, 1156,
	442, 1156,
	443, 1156,
	444, 1156,
	445, 1156,
	446, 1156,
	447, 1156,
	448, 1156,
	450, 1156,
	452, 1156,
	453, 1156,
	454, 1156,
	455, 1156,
	456, 1156,
	457, 1156,
	458, 1156,
	459, 1156,
	460, 1156,
	461, 1156,
	462, 1156,
	463, 1156,
	464, 1156,
	466, 1156,
	467, 1156,
	469, 1156,
	471, 1156,
	472, 1156,
	473, 1156,
	474, 1156,
	475, 1156,
	476, 1156,
	477, 1156,
	478, 1156,
	480, 1156,
	481, 1156,
	482, 1156,
	483, 1156,
	484, 1156,
	486, 1156,
	488, 1156,
	489, 1156,
	490, 1156,
	491, 1156,
	492, 1156,
	493, 1156,
	495, 1156,
	496, 1156,
	497, 1156,
	498, 1156,
	500, 1156,
	501, 1156,
	504, 1156,
	505, 1156,
	506, 1156,
	507, 1156,
	508, 1156,
	509, 1156,
	510, 1156,
	512, 1156,
	515, 1156,
	516, 1156,
	517, 1156,
	518, 1156,
	519, 1156,
	520, 1156,
	522, 1156,
	523, 1156,
	524, 1156,
	525, 1156,
	530, 1156,
	531, 1156,
	532, 1156,
	533, 1156,
	534, 1156,
	535, 1156,
	-2, 0,
	-1, 1514,
	1, 487,
	559, 487,
	561, 487,
	563, 487,
	-2, 1334,
	-1, 1517,
	4, 2453,
	11, 2453,
	12, 2453,
	14, 2453,
	15, 2453,
	16, 2453,
	17, 2453,
	18, 2453,
	19, 2453,
	21, 2453,
	22, 2453,
	23, 2453,
	24, 2453,
	25, 2453,
	26, 2453,
	27, 2453,
	29, 2453,
	30, 2453,
	33, 2453,
	34, 2453,
	36, 2453,
	38, 2453,
	41, 2453,
	42, 2453,
	44, 2453,
	45, 2453,
	46, 2453,
	47, 2453,
	48, 2453,
	49, 2453,
	50, 2453,
	52, 2453,
	53, 2453,
	54, 2453,
	55, 2453,
	57, 2453,
	58, 2453,
	59, 2453,
	60, 2453,
	61, 2453,
	62, 2453,
	63, 2453,
	67, 2453,
	68, 2453,
	69, 2453,
	70, 2453,
	72, 2453,
	73, 2453,
	74, 2453,
	75, 2453,
	78, 2453,
	79, 2453,
	80, 2453,
	81, 2453,
	82, 2453,
	83, 2453,
	84, 2453,
	85, 2453,
	87, 2453,
	88, 2453,
	89, 2453,
	90, 2453,
	91, 2453,
	93, 2453,
	94, 2453,
	95, 2453,
	96, 2453,
	97, 2453,
	98, 2453,
	99, 2453,
	100, 2453,
	102, 2453,
	103, 2453,
	104, 2453,
	105, 2453,
	106, 2453,
	107, 2453,
	115, 2453,
	116, 2453,
	117, 2453,
	118, 2453,
	120, 2453,
	121, 2453,
	122, 2453,
	124, 2453,
	125, 2453,
	126, 2453,
	128, 2453,
	129, 2453,
	131, 2453,
	132, 2453,
	133, 2453,
	136, 2453,
	137, 2453,
	138, 2453,
	140, 2453,
	141, 2453,
	143, 2453,
	144, 2453,
	145, 2453,
	147, 2453,
	148, 2453,
	149, 2453,
	150, 2453,
	151, 2453,
	152, 2453,
	153, 2453,
	154, 2453,
	155, 2453,
	156, 2453,
	157, 2453,
	158, 2453,
	159, 2453,
	160, 2453,
	161, 2453,
	165, 2453,
	166, 2453,
	167, 2453,
	168, 2453,
	169, 2453,
	170, 2453,
	171, 2453,
	172, 2453,
	175, 2453,
	176, 2453,
	178, 2453,
	181, 2453,
	182, 2453,
	183, 2453,
	184, 2453,
	185, 2453,
	186, 2453,
	187, 2453,
	188, 2453,
	189, 2453,
	190, 2453,
	191, 2453,
	192, 2453,
	193, 2453,
	195, 2453,
	196, 2453,
	198, 2453,
	199, 2453,
	201, 2453,
	202, 2453,
	203, 2453,
	204, 2453,
	205, 2453,
	206, 2453,
	207, 2453,
	208, 2453,
	209, 2453,
	210, 2453,
	211, 2453,
	212, 2453,
	213, 2453,
	214, 2453,
	215, 2453,
	216, 2453,
	217, 2453,
	219, 2453,
	220, 2453,
	222, 2453,
	223, 2453,
	224, 2453,
	226, 2453,
	227, 2453,
	228, 2453,
	229, 2453,
	231, 2453,
	233, 2453,
	234, 2453,
	235, 2453,
	236, 2453,
	237, 2453,
	238, 2453,
	239, 2453,
	240, 2453,
	241, 2453,
	242, 2453,
	244, 2453,
	245, 2453,
	246, 2453,
	247, 2453,
	248, 2453,
	249, 2453,
	250, 2453,
	251, 2453,
	253, 2453,
	254, 2453,
	255, 2453,
	257, 2453,
	258, 2453,
	259, 2453,
	260, 2453,
	261, 2453,
	262, 2453,
	264, 2453,
	268, 2453,
	269, 2453,
	272, 2453,
	273, 2453,
	274, 2453,
	275, 2453,
	276, 2453,
	277, 2453,
	278, 2453,
	279, 2453,
	280, 2453,
	281, 2453,
	282, 2453,
	283, 2453,
	284, 2453,
	285, 2453,
	286, 2453,
	287, 2453,
	288, 2453,
	289, 2453,
	290, 2453,
	291, 2453,
	292, 2453,
	293, 2453,
	294, 2453,
	295, 2453,
	296, 2453,
	297, 2453,
	298, 2453,
	300, 2453,
	301, 2453,
	302, 2453,
	303, 2453,
	304, 2453,
	305, 2453,
	306, 2453,
	307, 2453,
	308, 2453,
	309, 2453,
	310, 2453,
	311, 2453,
	312, 2453,
	313, 2453,
	315, 2453,
	318, 2453,
	319, 2453,
	320, 2453,
	322, 2453,
	323, 2453,
	324, 2453,
	325, 2453,
	326, 2453,
	329, 2453,
	333, 2453,
	334, 2453,
	335, 2453,
	336, 2453,
	338, 2453,
	339, 2453,
	340, 2453,
	342, 2453,
	344, 2453,
	345, 2453,
	346, 2453,
	347, 2453,
	348, 2453,
	349, 2453,
	350, 2453,
	351, 2453,
	352, 2453,
	353, 2453,
	354, 2453,
	355, 2453,
	357, 2453,
	358, 2453,
	359, 2453,
	360, 2453,
	361, 2453,
	362, 2453,
	363, 2453,
	364, 2453,
	365, 2453,
	366, 2453,
	367, 2453,
	368, 2453,
	369, 2453,
	370, 2453,
	371, 2453,
	373, 2453,
	375, 2453,
	376, 2453,
	377, 2453,
	378, 2453,
	379, 2453,
	380, 2453,
	381, 2453,
	382, 2453,
	383, 2453,
	384, 2453,
	385, 2453,
	386, 2453,
	388, 2453,
	394, 2453,
	395, 2453,
	396, 2453,
	397, 2453,
	398, 2453,
	399, 2453,
	400, 2453,
	401, 2453,
	402, 2453,
	403, 2453,
	405, 2453,
	406, 2453,
	407, 2453,
	408, 2453,
	409, 2453,
	410, 2453,
	411, 2453,
	412, 2453,
	413, 2453,
	414, 2453,
	415, 2453,
	416, 2453,
	417, 2453,
	418, 2453,
	419, 2453,
	420, 2453,
	421, 2453,
	422, 2453,
	423, 2453,
	424, 2453,
	425, 2453,
	426, 2453,
	428, 2453,
	429, 2453,
	430, 2453,
	431, 2453,
	432, 2453,
	433, 2453,
	435, 2453,
	436, 2453,
	437, 2453,
	438, 2453,
	439, 2453,
	440, 2453,
	441, 2453,
	442, 2453,
	443, 2453,
	444, 2453,
	445, 2453,
	446, 2453,
	447, 2453,
	448, 2453,
	450, 2453,
	452, 2453,
	453, 2453,
	454, 2453,
	455, 2453,
	456, 2453,
	457, 2453,
	458, 2453,
	459, 2453,
	460, 2453,
	461, 2453,
	462, 2453,
	463, 2453,
	464, 2453,
	466, 2453,
	467, 2453,
	469, 2453,
	471, 2453,
	472, 2453,
	473, 2453,
	474, 2453,
	475, 2453,
	476, 2453,
	477, 2453,
	478, 2453,
	480, 2453,
	481, 2453,
	482, 2453,
	483, 2453,
	484, 2453,
	486, 2453,
	488, 2453,
	489, 2453,
	490, 2453,
	491, 2453,
	492, 2453,
	493, 2453,
	495, 2453,
	496, 2453,
	497, 2453,
	498, 2453,
	500, 2453,
	501, 2453,
	504, 2453,
	505, 2453,
	506, 2453,
	507, 2453,
	508, 2453,
	509, 2453,
	510, 2453,
	512, 2453,
	515, 2453,
	516, 2453,
	517, 2453,
	518, 2453,
	519, 2453,
	520, 2453,
	522, 2453,
	523, 2453,
	524, 2453,
	525, 2453,
	530, 2453,
	531, 2453,
	532, 2453,
	533, 2453,
	534, 2453,
	535, 2453,
	536, 2453,
	538, 2453,
	541, 2453,
	542, 2453,
	543, 2453,
	544, 2453,
	545, 2453,
	546, 2453,
	548, 2453,
	549, 2453,
	550, 2453,
	551, 2453,
	552, 2453,
	553, 2453,
	554, 2453,
	555, 2453,
	556, 2453,
	558, 2453,
	561, 2453,
	562, 2453,
	564, 2453,
	565, 2453,
	-2, 0,
	-1, 1522,
	180, 2342,
	485, 2342,
	543, 2342,
	562, 2342,
	-2, 0,
	-1, 1571,
	377, 788,
	433, 788,
	490, 788,
	-2, 0,
	-1, 1597,
	1, 783,
	559, 783,
	561, 783,
	563, 783,
	-2, 0,
	-1, 1598,
	1, 819,
	559, 819,
	561, 819,
	563, 819,
	-2, 0,
	-1, 1599,
	1, 827,
	559, 827,
	561, 827,
	563, 827,
	-2, 0,
	-1, 1600,
	1, 790,
	559, 790,
	561, 790,
	563, 790,
	-2, 0,
	-1, 1602,
	1, 794,
	559, 794,
	561, 794,
	563, 794,
	-2, 0,
	-1, 1608,
	1, 801,
	559, 801,
	561, 801,
	563, 801,
	-2, 0,
	-1, 1636,
	1, 2399,
	559, 2399,
	561, 2399,
	562, 2399,
	563, 2399,
	-2, 852,
	-1, 1637,
	1, 2339,
	559, 2339,
	561, 2339,
	562, 2339,
	563, 2339,
	-2, 853,
	-1, 1652,
	1, 1239,
	563, 1239,
	-2, 1244,
	-1, 1655,
	164, 1375,
	177, 1375,
	263, 1375,
	327, 1375,
	-2, 1315,
	-1, 1749,
	146, 1336,
	164, 1336,
	177, 1336,
	230, 1336,
	263, 1336,
	327, 1336,
	337, 1336,
	502, 1336,
	-2, 1775,
	-1, 1809,
	561, 1925,
	-2, 0,
	-1, 1844,
	146, 1336,
	164, 1336,
	177, 1336,
	230, 1336,
	263, 1336,
	327, 1336,
	337, 1336,
	502, 1336,
	-2, 1462,
	-1, 1893,
	560, 1602,
	-2, 1590,
	-1, 1936,
	1, 616,
	563, 616,
	-2, 1244,
	-1, 2048,
	213, 221,
	-2, 2065,
	-1, 2049,
	213, 222,
	-2, 264,
	-1, 2178,
	1, 785,
	559, 785,
	561, 785,
	563, 785,
	-2, 0,
	-1, 2179,
	1, 821,
	559, 821,
	561, 821,
	563, 821,
	-2, 0,
	-1, 2180,
	1, 829,
	559, 829,
	561, 829,
	563, 829,
	-2, 0,
	-1, 2212,
	1, 803,
	559, 803,
	561, 803,
	563, 803,
	-2, 0,
	-1, 2258,
	413, 1402,
	414, 1402,
	-2, 1635,
	-1, 2289,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1655,
	-1, 2290,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1656,
	-1, 2291,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1657,
	-1, 2292,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1658,
	-1, 2293,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1659,
	-1, 2294,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1660,
	-1, 2295,
	94, 0,
	244, 0,
	245, 0,
	545, 0,
	546, 0,
	-2, 1661,
	-1, 2296,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1662,
	-1, 2308,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1674,
	-1, 2309,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1675,
	-1, 2310,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1676,
	-1, 2313,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1681,
	-1, 2319,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1685,
	-1, 2321,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1693,
	-1, 2322,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1694,
	-1, 2323,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1695,
	-1, 2324,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1696,
	-1, 2460,
	5, 2069,
	180, 1936,
	560, 2066,
	-2, 2057,
	-1, 2461,
	180, 1937,
	-2, 2404,
	-1, 2462,
	180, 1938,
	-2, 2243,
	-1, 2463,
	180, 1939,
	-2, 2136,
	-1, 2464,
	180, 1940,
	-2, 2186,
	-1, 2465,
	180, 1941,
	-2, 2228,
	-1, 2466,
	180, 1942,
	-2, 2337,
	-1, 2467,
	180, 1943,
	-2, 1758,
	-1, 2536,
	1, 1463,
	2, 1463,
	105, 1463,
	146, 1463,
	164, 1463,
	177, 1463,
	181, 1463,
	197, 1463,
	200, 1463,
	226, 1463,
	230, 1463,
	241, 1463,
	259, 1463,
	263, 1463,
	301, 1463,
	327, 1463,
	331, 1463,
	337, 1463,
	404, 1463,
	408, 1463,
	502, 1463,
	513, 1463,
	527, 1463,
	528, 1463,
	529, 1463,
	539, 1463,
	559, 1463,
	561, 1463,
	563, 1463,
	565, 1463,
	-2, 1462,
	-1, 2549,
	560, 2038,
	-2, 2052,
	-1, 2551,
	52, 1363,
	131, 1363,
	-2, 280,
	-1, 2576,
	560, 1601,
	-2, 1591,
	-1, 2715,
	1, 1132,
	559, 1132,
	561, 1132,
	563, 1132,
	-2, 1363,
	-1, 2891,
	332, 1405,
	-2, 2443,
	-1, 2892,
	332, 1406,
	-2, 2323,
	-1, 2896,
	413, 2002,
	414, 2002,
	-2, 1756,
	-1, 2897,
	413, 2006,
	414, 2006,
	-2, 1757,
	-1, 2898,
	413, 2003,
	414, 2003,
	-2, 1756,
	-1, 2899,
	413, 2007,
	414, 2007,
	-2, 1757,
	-1, 2912,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1683,
	-1, 2913,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1687,
	-1, 2919,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1689,
	-1, 3149,
	1, 613,
	559, 613,
	561, 613,
	563, 613,
	-2, 1244,
	-1, 3281,
	1, 1132,
	559, 1132,
	561, 1132,
	563, 1132,
	-2, 1363,
	-1, 3391,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1691,
	-1, 3398,
	235, 0,
	237, 0,
	318, 0,
	-2, 1710,
	-1, 3465,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1739,
	-1, 3466,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1740,
	-1, 3467,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1741,
	-1, 3471,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1745,
	-1, 3472,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1746,
	-1, 3473,
	14, 0,
	15, 0,
	16, 0,
	541, 0,
	542, 0,
	543, 0,
	-2, 1747,
	-1, 3519,
	560, 2039,
	-2, 2053,
	-1, 3556,
	562, 2054,
	-2, 1166,
	-1, 3659,
	562, 2560,
	-2, 1291,
	-1, 3717,
	235, 0,
	237, 0,
	318, 0,
	-2, 1711,
	-1, 3720,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1714,
	-1, 3721,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1716,
	-1, 3937,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1715,
	-1, 3938,
	17, 0,
	18, 0,
	19, 0,
	49, 0,
	210, 0,
	213, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 1717,
	-1, 3949,
	235, 0,
	-2, 1748,
	-1, 4107,
	235, 0,
	-2, 1749,
	-1, 4266,
	49, 0,
	210, 0,
	262, 0,
	441, 0,
	536, 0,
	544, 0,
	-2, 2407,
}

const sqlPrivate = 57344

const sqlLast = 114861

var sqlAct = [...]int{

	250, 4135, 3266, 3986, 2808, 3070, 4156, 4033, 2777, 4276,
	4240, 4377, 4224, 4265, 3700, 3989, 2614, 4206, 2045, 3265,
	4221, 3861, 4277, 4060, 4278, 3974, 4326, 1173, 4040, 1039,
	3430, 2653, 4111, 4264, 2147, 3894, 995, 3889, 3843, 3958,
	2268, 3926, 3875, 1505, 3293, 3651, 2156, 3552, 3298, 4049,
	3593, 3804, 3787, 1500, 3383, 1880, 4074, 2336, 3291, 3899,
	2131, 1664, 986, 3261, 3627, 3251, 3611, 2817, 3613, 2276,
	685, 1989, 721, 3553, 2492, 2905, 1046, 2269, 3954, 3346,
	1335, 1237, 3348, 2830, 242, 2748, 2766, 2738, 3522, 1537,
	2819, 3085, 1881, 1850, 3699, 3053, 3167, 721, 1355, 3113,
	1330, 2763, 823, 1045, 2827, 2678, 3756, 2761, 2816, 3093,
	1372, 2810, 3074, 2040, 2778, 1999, 2616, 2039, 3052, 2889,
	2273, 2529, 1579, 2378, 1819, 4112, 1795, 2349, 1757, 1338,
	1536, 2531, 2154, 716, 1425, 1480, 2129, 4, 3076, 2826,
	2034, 2528, 994, 168, 2018, 244, 2692, 1504, 1050, 243,
	1022, 3490, 1043, 1928, 2025, 2652, 2749, 1153, 2091, 1972,
	1220, 1652, 1975, 2333, 1820, 2510, 2369, 1962, 2257, 1839,
	2489, 2238, 2240, 1515, 3263, 2771, 2561, 1836, 1491, 3120,
	636, 1048, 2079, 1501, 658, 1430, 1206, 722, 2605, 4034,
	650, 723, 2560, 2820, 1790, 2372, 2518, 1162, 1156, 1357,
	1829, 2500, 2380, 1135, 2350, 2422, 2456, 1742, 1665, 1666,
	2239, 2241, 1608, 718, 667, 2078, 679, 727, 1170, 177,
	104, 730, 2103, 1513, 178, 1152, 796, 817, 768, 1367,
	1454, 1988, 168, 2262, 1024, 653, 43, 1158, 42, 40,
	31, 29, 727, 27, 661, 1133, 730, 1168, 1671, 884,
	1651, 2940, 1378, 3504, 904, 3505, 3308, 2936, 4442, 2120,
	2120, 3072, 2509, 4432, 4422, 2120, 2120, 3327, 2509, 2120,
	4421, 3143, 4394, 4392, 2509, 1545, 3803, 3803, 4388, 4306,
	4300, 4298, 2053, 4307, 2509, 2509, 4295, 4292, 3142, 4287,
	4296, 4293, 70, 2053, 1165, 3327, 4262, 4261, 4260, 3307,
	2053, 2053, 2140, 2118, 990, 4255, 990, 4254, 71, 2140,
	838, 2140, 4249, 4247, 4219, 4196, 3803, 3803, 3803, 2567,
	2502, 1164, 4189, 4188, 75, 4183, 2509, 2509, 4182, 3803,
	4176, 3128, 3803, 4149, 2053, 1679, 1680, 3853, 1189, 4109,
	4091, 1136, 1136, 2567, 3688, 4088, 4085, 4042, 4007, 2053,
	3803, 4043, 2053, 4006, 1215, 3998, 1150, 2053, 1710, 2053,
	2904, 1679, 1680, 3997, 82, 1682, 3965, 3803, 1166, 3939,
	2053, 3918, 3907, 2567, 3838, 2140, 3327, 3826, 2509, 3802,
	2155, 2509, 3719, 3803, 1710, 3667, 2567, 1215, 971, 3343,
	2586, 1682, 3661, 970, 1679, 1680, 3343, 2509, 3625, 1681,
	991, 88, 3626, 3514, 3512, 3497, 3414, 3515, 3513, 2509,
	2053, 2138, 3410, 3494, 3342, 103, 2509, 1710, 3343, 3334,
	89, 100, 1184, 3335, 1682, 1681, 980, 3069, 3064, 3063,
	985, 2509, 2509, 2509, 4197, 1701, 3016, 1679, 1680, 2990,
	3017, 2982, 2980, 2991, 2951, 2983, 2509, 2949, 2509, 2674,
	1380, 2833, 1139, 2950, 1140, 2140, 1137, 2806, 1681, 2805,
	1710, 2143, 2589, 2143, 2563, 2566, 2509, 1682, 1701, 2567,
	2585, 4113, 2558, 4104, 2552, 90, 2509, 1698, 2053, 4092,
	2140, 2508, 3494, 1679, 1680, 2509, 1712, 1713, 1714, 1722,
	1723, 1724, 2142, 2501, 3888, 3853, 2143, 3827, 2053, 1687,
	2053, 1681, 1185, 3688, 3335, 2669, 1710, 2604, 1993, 1941,
	2119, 1701, 2744, 1682, 2135, 1704, 1705, 1706, 1707, 2052,
	1698, 1728, 2686, 1679, 1680, 1687, 1712, 1713, 1714, 1722,
	1723, 1724, 2509, 2602, 2939, 1815, 1366, 3584, 3386, 3364,
	1837, 215, 2028, 1709, 1711, 1715, 1710, 1681, 1704, 1705,
	1706, 1707, 1581, 1682, 3309, 2545, 2544, 1701, 1687, 2543,
	2542, 1728, 1601, 2541, 215, 1141, 1698, 1138, 1392, 1709,
	1711, 3713, 979, 3310, 3772, 1531, 978, 977, 976, 975,
	1371, 974, 973, 969, 217, 2869, 3731, 1681, 968, 967,
	966, 1704, 1705, 1706, 1707, 965, 2565, 1701, 2121, 2121,
	1702, 1687, 1709, 1711, 2121, 2121, 1698, 217, 2121, 964,
	963, 962, 1386, 961, 960, 959, 93, 958, 957, 215,
	956, 955, 954, 953, 1549, 935, 1702, 1696, 1697, 882,
	881, 880, 216, 879, 878, 877, 876, 1704, 1705, 1706,
	1707, 3307, 875, 209, 874, 1709, 1711, 1687, 873, 872,
	1535, 871, 210, 870, 3901, 216, 1185, 869, 868, 1702,
	867, 866, 217, 176, 96, 865, 99, 864, 863, 862,
	1696, 1697, 861, 2138, 179, 860, 859, 1704, 1705, 1706,
	1707, 858, 1719, 857, 1048, 1729, 856, 1687, 1048, 1379,
	215, 1709, 1711, 855, 854, 853, 852, 179, 822, 851,
	215, 841, 1702, 141, 1240, 2501, 840, 836, 1240, 835,
	216, 829, 1360, 828, 786, 785, 1696, 1697, 744, 743,
	1219, 209, 1719, 1185, 1224, 1729, 742, 1210, 741, 89,
	210, 1709, 1711, 217, 1717, 733, 1048, 1380, 1048, 1703,
	1048, 732, 731, 217, 700, 1708, 1360, 1725, 1702, 1726,
	1380, 691, 179, 690, 689, 3532, 1696, 1697, 143, 1371,
	3508, 2794, 2119, 1346, 673, 1703, 3344, 2138, 2135, 1341,
	1360, 2233, 1391, 180, 1717, 238, 1679, 1680, 1708, 237,
	236, 216, 235, 234, 233, 232, 231, 230, 1702, 229,
	1333, 216, 209, 1345, 1348, 228, 227, 226, 1703, 1710,
	225, 210, 209, 224, 223, 2774, 1682, 222, 221, 3025,
	3026, 210, 220, 219, 1360, 1048, 1385, 218, 3116, 1370,
	1360, 1708, 2962, 179, 1360, 1436, 1438, 2945, 2725, 2571,
	1727, 2550, 1048, 179, 1048, 3067, 2757, 2535, 1360, 1970,
	1681, 1703, 1204, 1840, 1048, 1538, 1048, 2405, 1716, 2391,
	3903, 2150, 1798, 2389, 1863, 1441, 1348, 1348, 1349, 1797,
	1233, 1768, 1327, 1332, 1380, 1798, 1678, 1708, 1374, 1428,
	727, 1226, 1797, 3068, 730, 1683, 1684, 1685, 1686, 1688,
	1689, 1801, 1172, 3040, 4283, 4116, 4263, 1703, 3025, 3026,
	1360, 1494, 4163, 4101, 1796, 1199, 1348, 3953, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1708, 1048, 4095,
	4093, 1048, 1369, 1720, 3984, 1423, 1368, 3908, 3025, 3026,
	3887, 3779, 3754, 3753, 3025, 3026, 3747, 1703, 1699, 1695,
	2149, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	1687, 3025, 3026, 1485, 1488, 3746, 3745, 3738, 3737, 3735,
	1550, 3730, 3727, 1720, 3726, 3624, 3536, 3535, 1518, 1520,
	3630, 3534, 3518, 168, 168, 3025, 3026, 3485, 3043, 3044,
	3045, 1699, 1695, 3031, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 3582, 1709, 1711, 1210, 215, 1497, 1210,
	3025, 3026, 3484, 215, 3483, 3406, 3402, 3111, 3060, 215,
	215, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1718, 1761,
	1457, 1512, 141, 1693, 1694, 1700, 1721, 1699, 1695, 1516,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 3338,
	217, 2375, 1048, 1656, 3051, 1617, 217, 215, 1048, 3040,
	991, 1702, 217, 217, 3024, 993, 3021, 3020, 1718, 215,
	3018, 2989, 3031, 1693, 1694, 1700, 1721, 1699, 1695, 2988,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 2987,
	1759, 2984, 2759, 3741, 3041, 215, 2981, 3740, 216, 3902,
	217, 2961, 3031, 2944, 216, 1530, 1603, 2937, 3031, 209,
	216, 216, 217, 2807, 1650, 209, 2536, 1544, 210, 2362,
	1678, 209, 209, 2094, 210, 3031, 1149, 1679, 1680, 215,
	210, 210, 1679, 1680, 215, 2376, 1677, 3065, 217, 4436,
	179, 4386, 4385, 1748, 3631, 1759, 179, 4316, 216, 3031,
	4314, 2060, 179, 179, 2058, 1555, 4305, 1682, 1174, 209,
	216, 3432, 1682, 1048, 1048, 1048, 1572, 4155, 210, 1048,
	4145, 209, 217, 3041, 3031, 4142, 1170, 217, 1170, 1604,
	210, 4141, 4140, 4132, 1817, 4125, 216, 4115, 4114, 4089,
	179, 1681, 4073, 1240, 4072, 1766, 1681, 209, 2339, 4058,
	1703, 1048, 179, 3041, 721, 1168, 210, 1168, 1898, 721,
	4055, 3631, 1360, 1653, 2377, 4003, 2374, 1661, 1660, 1048,
	216, 3980, 3951, 1360, 3934, 216, 3041, 1870, 179, 3025,
	3026, 209, 3933, 3042, 971, 1760, 209, 1758, 3915, 970,
	210, 1048, 1655, 1826, 1800, 210, 3914, 1240, 3878, 3854,
	3041, 1657, 1165, 3771, 1165, 3752, 3689, 1674, 1675, 1871,
	3683, 3680, 2773, 3572, 3571, 3558, 3557, 179, 1210, 3500,
	1959, 3488, 991, 2758, 3397, 1873, 1867, 1968, 1746, 1164,
	3345, 1164, 3328, 1345, 3284, 2638, 1136, 1933, 1823, 1824,
	3223, 1687, 2345, 1934, 3196, 3170, 1687, 3169, 3136, 3134,
	2966, 2965, 2960, 1792, 1793, 1866, 2928, 2737, 1804, 1803,
	1929, 1802, 3042, 1799, 1791, 1877, 1847, 1679, 1680, 1789,
	1924, 1939, 168, 2578, 2577, 2547, 1166, 2540, 1166, 2507,
	2151, 4117, 3108, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 3042, 2387, 1862, 3969, 1818, 1682, 1848, 727,
	1869, 1838, 1813, 730, 727, 1812, 1892, 2379, 730, 1811,
	1810, 1809, 1808, 1807, 1806, 3042, 3036, 3034, 3035, 3027,
	3028, 3029, 3030, 3032, 3033, 1805, 1845, 1786, 2569, 1785,
	1784, 1681, 1783, 1936, 1782, 1360, 1360, 1781, 3170, 3042,
	1780, 1779, 1932, 3031, 1778, 1240, 1777, 1776, 991, 1775,
	1816, 1774, 1773, 1772, 1761, 1747, 1745, 1740, 1198, 1187,
	1180, 3881, 3775, 1842, 3723, 3531, 1857, 1874, 1856, 1855,
	1853, 1852, 1921, 1851, 1460, 3511, 2404, 2014, 2390, 3503,
	2017, 1455, 2388, 2022, 2948, 2538, 3777, 3025, 3026, 3530,
	1760, 1878, 3132, 1981, 1743, 3036, 3034, 3035, 3027, 3028,
	3029, 3030, 3032, 3033, 1961, 215, 215, 3829, 3313, 1961,
	1858, 4096, 4094, 1223, 4383, 2373, 4376, 3199, 1961, 3294,
	1571, 4143, 1964, 1954, 2046, 2050, 3034, 3035, 3027, 3028,
	3029, 3030, 3032, 3033, 3027, 3028, 3029, 3030, 3032, 3033,
	215, 2580, 3983, 1840, 3041, 4045, 4044, 3906, 217, 217,
	3035, 3027, 3028, 3029, 3030, 3032, 3033, 1998, 1221, 3856,
	2657, 3855, 38, 3828, 3774, 3037, 3038, 3039, 3692, 3691,
	3690, 1222, 3036, 3034, 3035, 3027, 3028, 3029, 3030, 3032,
	3033, 3506, 727, 217, 2087, 3330, 730, 3329, 4050, 3634,
	1360, 2043, 1360, 1215, 1360, 3384, 216, 216, 2986, 1215,
	2084, 2026, 3029, 3030, 3032, 3033, 1798, 209, 209, 2985,
	1360, 1360, 1781, 1797, 3570, 1781, 210, 210, 1648, 2910,
	2089, 1360, 2640, 1218, 1369, 2100, 1947, 1352, 1368, 951,
	3268, 216, 3267, 1360, 1770, 1360, 1360, 1360, 179, 179,
	2170, 1215, 209, 2021, 1580, 3799, 1345, 4259, 1618, 2148,
	4041, 210, 4303, 2157, 4288, 4275, 3252, 721, 2108, 2831,
	1581, 1395, 2041, 3590, 1679, 1680, 2051, 3589, 2169, 3955,
	1093, 3072, 952, 179, 3575, 3361, 3147, 3434, 3795, 4284,
	2370, 2576, 1814, 3042, 1794, 1432, 2954, 1710, 2097, 3259,
	2123, 2088, 1484, 2683, 1682, 2095, 4297, 1435, 1363, 2153,
	1459, 1193, 4294, 1993, 2162, 2110, 2071, 2070, 3303, 2174,
	3547, 1559, 2680, 4136, 3890, 4218, 931, 1683, 1684, 1685,
	1686, 1688, 1689, 4122, 1685, 1686, 1688, 1689, 1681, 1508,
	3796, 3173, 3565, 2814, 1148, 2770, 3245, 4342, 1048, 1524,
	1048, 2158, 4285, 1041, 1457, 2106, 2105, 1048, 2105, 2102,
	1898, 1898, 1240, 3378, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1516,
	1048, 1516, 1048, 1048, 1048, 1048, 4343, 2250, 4367, 2237,
	1767, 4024, 727, 3817, 3151, 1563, 730, 1402, 949, 1199,
	991, 1460, 991, 2144, 1048, 2145, 1615, 1048, 1048, 3027,
	3028, 3029, 3030, 3032, 3033, 1048, 1616, 1948, 1687, 1048,
	1410, 1048, 1048, 3603, 947, 2590, 2248, 2161, 945, 1240,
	943, 1364, 2274, 2275, 4431, 1048, 1048, 1048, 1048, 781,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 940, 2125,
	2218, 4017, 2127, 1223, 4009, 2618, 3851, 2216, 2132, 1223,
	2194, 2134, 1709, 1711, 3599, 2137, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1937, 1557, 3598, 989, 1048,
	3592, 2351, 2352, 2212, 2246, 3602, 1205, 3198, 1892, 1892,
	3133, 1170, 3588, 3586, 3544, 2351, 2367, 2261, 1240, 3543,
	1411, 1614, 1689, 3248, 3127, 1953, 1952, 1170, 2248, 1961,
	1963, 1222, 2959, 3791, 1007, 2958, 2957, 1222, 3792, 1702,
	1168, 2413, 1470, 1048, 1240, 2956, 2914, 2236, 2235, 2234,
	2375, 3550, 2242, 2249, 2690, 2689, 1168, 782, 2685, 2570,
	2459, 2459, 2473, 2331, 2351, 2676, 2148, 2493, 2495, 2366,
	2668, 971, 2667, 2499, 971, 971, 2265, 2666, 2608, 2266,
	2267, 2244, 988, 2621, 2665, 2178, 2246, 1165, 2644, 3794,
	2631, 2329, 1573, 2606, 2559, 2320, 2767, 1654, 4368, 3153,
	2608, 1552, 2418, 1165, 3797, 4371, 3025, 3026, 2475, 3043,
	3044, 3045, 2417, 1597, 1164, 2606, 2278, 2548, 2069, 1447,
	1216, 1446, 1445, 2523, 1444, 1406, 3362, 1136, 3715, 2347,
	1164, 1216, 2230, 2232, 2376, 2661, 2231, 937, 1216, 2247,
	1348, 2179, 3033, 1990, 1956, 2364, 991, 1459, 3932, 2515,
	2166, 1240, 1418, 2642, 2597, 991, 2335, 2654, 2655, 991,
	2335, 1166, 2654, 2655, 2551, 1847, 2227, 1210, 3830, 1598,
	2537, 2654, 2655, 1627, 2415, 2514, 1986, 1166, 1703, 2416,
	3040, 1898, 2419, 2370, 2420, 2421, 2522, 1348, 2527, 990,
	2455, 2533, 2534, 2468, 2484, 4372, 3991, 2564, 2180, 2497,
	1991, 1992, 168, 2630, 1365, 2505, 2506, 2245, 2222, 1240,
	2520, 2521, 2516, 2377, 2887, 2374, 1553, 2902, 4395, 1800,
	3793, 2247, 1659, 1360, 2610, 1845, 1599, 2325, 1197, 2183,
	1987, 1212, 2629, 2107, 3369, 2177, 2229, 3368, 1048, 1048,
	2562, 1048, 1212, 2866, 1431, 2326, 2682, 991, 3561, 1212,
	2327, 2186, 1958, 2379, 2332, 701, 2872, 3800, 3850, 3609,
	1613, 1647, 3213, 3587, 1360, 1569, 3206, 2572, 2677, 698,
	3031, 2587, 2579, 2647, 2588, 1333, 2620, 1858, 2681, 3585,
	3574, 1581, 1792, 1793, 4342, 1581, 1177, 2583, 1429, 2245,
	1957, 2662, 1345, 3247, 2646, 2582, 2584, 2679, 3608, 2755,
	3217, 3212, 4374, 2684, 2781, 3205, 1631, 2591, 648, 1217,
	3993, 2664, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	1217, 1360, 1360, 2633, 1360, 842, 1175, 1217, 849, 1892,
	3046, 3813, 1558, 3150, 643, 2645, 1360, 784, 783, 3423,
	2901, 2656, 2658, 2659, 2660, 999, 2623, 2626, 2663, 2828,
	2613, 1360, 4359, 2643, 987, 2187, 2379, 2609, 1610, 2720,
	2875, 4353, 1929, 2722, 4358, 2802, 1213, 1993, 2741, 2797,
	706, 3041, 2557, 696, 1214, 2836, 2837, 1213, 727, 2717,
	2057, 2056, 730, 2012, 1213, 1214, 2843, 2844, 2845, 4398,
	1048, 2925, 1214, 4281, 2796, 4331, 1469, 3931, 1976, 1976,
	1348, 1348, 2641, 1977, 1977, 941, 1996, 2619, 779, 1377,
	778, 1384, 3705, 1390, 4412, 2226, 3704, 2747, 2716, 2923,
	1369, 2783, 2011, 2328, 2723, 2832, 3300, 2751, 2852, 2120,
	1178, 941, 2813, 2330, 1048, 941, 2735, 942, 2788, 1408,
	1048, 1048, 2791, 2745, 2792, 1995, 2343, 2851, 2894, 2895,
	714, 2000, 1345, 2341, 3420, 941, 2217, 2858, 2765, 2860,
	2803, 2862, 2776, 2215, 2373, 168, 2799, 4137, 2877, 2784,
	2879, 2834, 4151, 2004, 708, 2838, 1431, 2839, 4373, 1405,
	3301, 2854, 2379, 2855, 2856, 2228, 3573, 2849, 1511, 2874,
	1993, 2880, 1345, 2798, 1345, 1048, 1048, 2804, 2857, 2015,
	2859, 1048, 2861, 2800, 1976, 1529, 2815, 1534, 2607, 1977,
	3042, 3152, 1978, 1978, 1048, 1048, 1625, 1543, 2871, 1548,
	1048, 1048, 2870, 1516, 3811, 2317, 1048, 2038, 2001, 1980,
	1980, 712, 1215, 3421, 4193, 1048, 1048, 1048, 816, 3356,
	4380, 1048, 1628, 1215, 3184, 3562, 1787, 1984, 3349, 2146,
	1215, 1048, 3130, 3300, 3870, 2920, 2917, 2893, 666, 3992,
	1984, 4282, 843, 844, 4330, 1508, 2159, 3701, 1048, 1554,
	4352, 2882, 1965, 1966, 697, 3944, 2160, 2037, 2921, 1602,
	2903, 2916, 2926, 4229, 2593, 2334, 4154, 2883, 2168, 2884,
	2171, 2172, 2173, 3226, 1556, 2938, 926, 1982, 1982, 3183,
	2595, 2261, 2888, 703, 2185, 938, 3836, 2789, 2608, 2873,
	2942, 2943, 1739, 2793, 2964, 2946, 2519, 4309, 1978, 699,
	984, 2361, 695, 2624, 4399, 3616, 4310, 1626, 1984, 2005,
	2532, 990, 707, 2596, 3614, 1980, 3037, 3038, 3039, 3436,
	3351, 3706, 4387, 3036, 3034, 3035, 3027, 3028, 3029, 3030,
	3032, 3033, 2947, 2594, 4280, 3350, 3880, 1658, 1048, 1048,
	1048, 2915, 713, 1196, 644, 2182, 3695, 1048, 1048, 1048,
	3812, 2176, 1048, 3527, 2024, 710, 2379, 1629, 3616, 1176,
	1190, 705, 1048, 1170, 1240, 850, 2315, 3614, 1048, 2318,
	1048, 3079, 3080, 2006, 2007, 3928, 3187, 2023, 1170, 3380,
	1568, 1570, 926, 1982, 2885, 1585, 3629, 4157, 2029, 927,
	4279, 4341, 1168, 2036, 4191, 2953, 1240, 2002, 4339, 1668,
	1983, 1983, 1669, 702, 1984, 1984, 984, 1168, 1170, 4172,
	2019, 1240, 1663, 4057, 3649, 645, 3287, 2077, 2314, 3101,
	991, 3617, 3347, 845, 846, 3189, 3062, 2013, 1898, 4192,
	709, 2922, 1240, 4413, 1991, 1992, 4329, 1168, 2003, 1165,
	1630, 2924, 3081, 3871, 715, 1825, 1360, 1360, 2121, 1048,
	3191, 1973, 1188, 1183, 1165, 704, 635, 3702, 646, 2264,
	647, 4378, 1994, 1048, 2020, 3474, 1164, 3750, 1949, 4404,
	1668, 3115, 4000, 3999, 3617, 1898, 3978, 2016, 3091, 3121,
	734, 1164, 3157, 3158, 1165, 3148, 3816, 3188, 4066, 3192,
	1974, 1048, 1360, 3815, 3110, 927, 4121, 1210, 1667, 3154,
	3174, 3650, 2035, 3178, 3927, 3596, 1983, 3546, 3612, 3288,
	1984, 1164, 1854, 1166, 3280, 3165, 3089, 3057, 3058, 3059,
	3131, 3107, 3100, 3161, 3090, 3119, 3073, 1360, 1166, 3099,
	3126, 3352, 3353, 3354, 3355, 3102, 3103, 1240, 2756, 4308,
	3162, 1870, 3088, 1832, 1929, 1929, 1360, 2008, 2750, 2342,
	2739, 1360, 3140, 2101, 2090, 1946, 3156, 3229, 1166, 4379,
	3232, 2082, 1669, 3201, 3237, 3239, 3105, 3166, 3106, 1667,
	1979, 1979, 928, 830, 1360, 982, 1892, 926, 2063, 3615,
	1360, 3175, 1360, 2625, 3180, 3181, 1240, 1345, 1835, 3419,
	1929, 2254, 4381, 721, 3123, 3124, 3125, 2316, 2648, 3144,
	3145, 984, 1461, 2517, 1360, 3114, 1739, 1399, 3489, 3218,
	2087, 4207, 3149, 4158, 3264, 1360, 2511, 3160, 2009, 3540,
	3381, 1833, 4173, 1892, 2223, 1929, 3215, 3155, 1944, 1668,
	1942, 1170, 3615, 1669, 3652, 3296, 672, 3273, 3929, 3279,
	3137, 3138, 3224, 3139, 1929, 3186, 983, 3475, 1895, 1929,
	2828, 3203, 3895, 3190, 1981, 2736, 3476, 1472, 3751, 2828,
	1168, 3197, 4039, 3204, 3208, 3707, 3502, 4403, 1945, 3250,
	4037, 3253, 3214, 3209, 1360, 1360, 1979, 3210, 928, 3211,
	3216, 3979, 3225, 1981, 3219, 3305, 3814, 3235, 3176, 2513,
	927, 3172, 3233, 3246, 2512, 3171, 1360, 3240, 3242, 3234,
	2908, 2886, 3326, 2167, 3241, 3084, 929, 1165, 1428, 3295,
	2032, 3095, 3083, 3356, 1586, 3319, 1600, 735, 736, 2026,
	2556, 1886, 3349, 2255, 2555, 2646, 3257, 2026, 1667, 1453,
	2554, 2553, 1240, 3289, 1164, 1240, 3249, 3363, 727, 1345,
	1345, 3277, 730, 3297, 1439, 3708, 1751, 3621, 2715, 2743,
	1756, 988, 4128, 930, 3276, 3987, 1451, 1440, 3862, 848,
	2030, 3339, 2099, 2649, 2650, 1048, 3255, 3304, 4349, 4035,
	1834, 1048, 1048, 3302, 2835, 1048, 1048, 1048, 3357, 1048,
	2721, 1166, 3311, 2719, 3912, 1562, 3316, 3341, 1048, 1898,
	3337, 4210, 3320, 3227, 4129, 3122, 3375, 1048, 4215, 2031,
	1048, 4159, 3096, 3324, 3325, 3976, 1240, 3541, 168, 168,
	831, 832, 929, 3372, 3351, 1048, 3374, 4204, 3757, 3491,
	1345, 2386, 4233, 1240, 1645, 1643, 3358, 4351, 4299, 3350,
	4144, 3950, 1622, 1898, 1898, 1048, 1048, 1620, 1048, 1048,
	1048, 3365, 3382, 3366, 3399, 3367, 2801, 1508, 3977, 3749,
	3094, 3911, 3055, 3988, 991, 738, 737, 3620, 1596, 930,
	1594, 3371, 4083, 1592, 3408, 3409, 1590, 1588, 3379, 3054,
	3396, 1578, 1576, 928, 4211, 1449, 2842, 4130, 3359, 3141,
	1048, 3098, 3019, 3448, 1048, 2927, 1898, 1898, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048, 1048,
	1048, 1048, 1048, 1048, 1048, 1048, 1048, 3377, 1048, 3449,
	739, 740, 671, 2740, 4075, 1048, 1048, 1898, 2675, 2639,
	2581, 1865, 1048, 1861, 3404, 2274, 3439, 4076, 1646, 1540,
	2214, 4274, 3376, 1048, 2385, 1663, 2868, 1892, 2867, 3415,
	2841, 3422, 3424, 3425, 1170, 1170, 2243, 2225, 1048, 1609,
	3431, 2190, 3315, 3438, 2062, 3317, 3318, 1925, 4077, 1452,
	3321, 1771, 3322, 1551, 3323, 3837, 1422, 3825, 4203, 3893,
	3842, 3446, 4327, 1168, 1168, 3447, 3784, 1240, 2274, 3454,
	3648, 1892, 1892, 1828, 3520, 3097, 1450, 3640, 3507, 847,
	3601, 833, 834, 3568, 3228, 3566, 3486, 3545, 939, 3283,
	3278, 3451, 1644, 1642, 3269, 981, 3453, 929, 3478, 3482,
	1621, 2795, 2790, 3416, 1048, 1619, 2768, 4079, 4319, 3292,
	1165, 1165, 1672, 3426, 1056, 3352, 3353, 3354, 3355, 2754,
	1048, 1170, 3479, 2746, 1892, 1892, 1595, 2733, 1593, 4078,
	2718, 1591, 1828, 2141, 1589, 1587, 3445, 1164, 1164, 1577,
	1575, 2139, 2136, 1448, 930, 2133, 4080, 1048, 1048, 1832,
	1168, 2128, 2126, 3487, 2122, 1892, 2113, 3493, 168, 246,
	246, 246, 2061, 638, 639, 2059, 654, 638, 654, 664,
	2042, 670, 3498, 3499, 1048, 688, 1872, 3509, 2027, 2010,
	694, 3495, 3496, 1997, 1166, 1166, 246, 1985, 3525, 3526,
	4343, 1950, 4243, 3524, 1835, 2213, 1360, 1165, 3510, 1145,
	2906, 3917, 3537, 3538, 3539, 827, 3910, 3909, 1832, 1830,
	3849, 246, 3236, 3780, 2829, 1898, 1969, 2036, 1673, 3580,
	1404, 3576, 3581, 3583, 1164, 1146, 2608, 1833, 2608, 4068,
	1895, 1895, 2628, 3597, 3549, 944, 946, 948, 4061, 2098,
	3660, 2606, 1993, 2627, 1360, 1640, 1641, 2181, 3591, 1493,
	1492, 1048, 2209, 1835, 2208, 711, 4242, 2188, 3818, 1170,
	1048, 3844, 3662, 1574, 1348, 4103, 3758, 3635, 1830, 1831,
	3619, 1166, 3523, 3736, 2781, 2651, 2632, 2646, 1676, 1191,
	1360, 1360, 1360, 3671, 4345, 4337, 1833, 3653, 1168, 3533,
	3595, 2907, 1679, 1680, 4304, 2732, 1360, 239, 3657, 3087,
	1679, 1680, 2211, 1886, 1886, 3637, 649, 3166, 2083, 3656,
	2828, 3594, 1202, 2087, 2680, 1240, 3636, 3675, 3554, 2688,
	2687, 2526, 1682, 1493, 638, 638, 2035, 2670, 1831, 3638,
	4198, 1147, 246, 3610, 1493, 1165, 3618, 1240, 769, 3687,
	1048, 1048, 3654, 632, 813, 3606, 1048, 1048, 1898, 3641,
	2634, 1048, 1048, 2672, 1048, 4167, 1681, 3607, 1048, 3655,
	660, 2636, 1164, 1892, 1681, 4164, 2671, 3799, 3622, 1048,
	4127, 3664, 3663, 4053, 2635, 3658, 1834, 4032, 3639, 4081,
	3628, 3517, 3282, 2775, 4082, 1048, 3676, 3677, 2498, 3670,
	1935, 3682, 3643, 1879, 3678, 3684, 3681, 4375, 3685, 3985,
	3795, 4235, 3129, 3718, 3788, 4402, 4236, 2600, 2601, 1166,
	1371, 3709, 3025, 3026, 1679, 1680, 4166, 4235, 2598, 2599,
	3703, 3786, 4236, 1561, 3728, 2381, 4355, 3529, 3722, 1560,
	3790, 2637, 3567, 2600, 3569, 1834, 2598, 2414, 4054, 4018,
	3845, 3693, 3710, 3698, 1624, 1170, 3841, 1623, 3840, 3724,
	3646, 3528, 3796, 1170, 3427, 3230, 1765, 1240, 1764, 1240,
	4389, 4360, 4202, 4201, 2673, 4200, 1170, 4118, 4013, 3970,
	3967, 3873, 3776, 3686, 1168, 3666, 3623, 3564, 3559, 3314,
	3286, 3086, 1168, 1240, 3285, 3015, 3014, 3013, 3012, 3011,
	3010, 3600, 3789, 3009, 3008, 1168, 1892, 3748, 3007, 2726,
	3006, 3005, 2729, 3004, 2731, 3003, 1048, 3002, 1170, 3243,
	3781, 3782, 3001, 3000, 2999, 2998, 2997, 2996, 2995, 2994,
	2993, 1165, 2992, 2865, 2848, 2847, 2846, 2786, 2760, 1165,
	2734, 2574, 2573, 3819, 2346, 1240, 2210, 1168, 2207, 3274,
	2206, 3762, 1165, 1240, 2344, 2205, 2772, 2204, 1164, 2772,
	3281, 1895, 3760, 3761, 2203, 3809, 1164, 3769, 3808, 1751,
	3773, 3763, 3766, 3783, 3765, 3770, 3846, 2116, 3847, 1164,
	3668, 1360, 1360, 2115, 3669, 2114, 3755, 2112, 2096, 2072,
	2068, 168, 2067, 3759, 1165, 2066, 2065, 2064, 1360, 1639,
	1638, 3764, 1583, 3863, 1582, 1166, 1479, 1478, 1477, 1240,
	3860, 1476, 1475, 1166, 1360, 1474, 3848, 1473, 1471, 3332,
	3333, 1164, 1466, 2480, 3858, 3820, 1166, 1465, 1464, 3810,
	1463, 3886, 1462, 2087, 1886, 1417, 3852, 1416, 1415, 1414,
	1413, 1170, 3821, 3822, 3857, 1412, 1407, 1348, 1403, 3835,
	1401, 1360, 1360, 1360, 1400, 3791, 1231, 3896, 3839, 1230,
	3792, 2863, 1240, 1229, 1228, 1227, 1195, 1194, 1166, 1128,
	1168, 3859, 1940, 3114, 1048, 1048, 1048, 3864, 3900, 950,
	3879, 936, 3824, 3990, 3883, 3905, 3798, 1633, 3913, 87,
	1409, 757, 1240, 3832, 81, 3834, 1929, 1048, 2033, 3563,
	1048, 1048, 3898, 909, 4232, 3833, 1393, 4150, 764, 4217,
	1048, 3794, 3897, 1898, 3891, 3554, 3182, 1165, 1048, 1048,
	2691, 2189, 1584, 2191, 3109, 2539, 3797, 4190, 3732, 3920,
	2963, 3919, 4110, 1240, 3943, 1360, 2384, 3924, 1769, 3066,
	83, 3922, 1032, 3930, 1164, 1078, 3935, 3869, 3940, 1240,
	3868, 3882, 3785, 3548, 3916, 2818, 3866, 1048, 3865, 3885,
	1883, 1885, 998, 1243, 1170, 1181, 1951, 1926, 3952, 1038,
	1967, 1960, 2575, 2458, 3946, 1055, 1048, 1052, 1898, 1887,
	1889, 1054, 1053, 1888, 1788, 1051, 1048, 1882, 3645, 1048,
	3644, 1166, 2742, 1168, 1192, 2258, 2779, 3312, 1048, 3963,
	3964, 1458, 1456, 688, 911, 1240, 1955, 2340, 2368, 2952,
	1762, 1013, 3971, 1034, 2365, 1186, 1360, 1360, 3973, 1023,
	1012, 3966, 3092, 3071, 3299, 4012, 3516, 246, 2253, 246,
	246, 1336, 773, 246, 246, 1351, 3022, 3994, 3554, 2371,
	1165, 3995, 3793, 3972, 1179, 2481, 2474, 4023, 2470, 246,
	3146, 1373, 2769, 1649, 1240, 3264, 4038, 1360, 4010, 4047,
	3957, 1892, 1741, 4014, 2780, 1225, 1016, 1164, 2338, 1753,
	4002, 2932, 1397, 4052, 4020, 1170, 1170, 4015, 2263, 3800,
	3306, 4028, 4027, 3112, 2568, 4031, 4239, 4051, 4036, 3435,
	1421, 2076, 1427, 1144, 1048, 1048, 246, 246, 1143, 1336,
	4062, 1142, 4046, 4071, 1168, 1168, 4030, 4223, 4065, 4220,
	3679, 1048, 1898, 4090, 1166, 3262, 1943, 4064, 1468, 2592,
	1731, 3270, 4086, 4087, 4070, 4069, 1892, 3900, 1028, 4084,
	246, 1344, 246, 246, 2476, 1336, 246, 1351, 3077, 3340,
	1419, 1048, 693, 3805, 1048, 1040, 1730, 688, 2712, 246,
	246, 1165, 1165, 4098, 2711, 4063, 4124, 1211, 4025, 4059,
	1209, 3554, 4120, 1208, 1170, 1207, 4102, 4108, 4099, 4100,
	4026, 4131, 827, 4067, 3164, 4411, 3560, 1345, 1164, 1164,
	214, 2900, 1670, 1662, 211, 4119, 213, 212, 3874, 3521,
	3118, 4302, 3578, 1168, 3254, 22, 21, 20, 108, 41,
	19, 4138, 123, 140, 139, 1048, 1048, 116, 4134, 138,
	4133, 4139, 137, 4153, 136, 135, 1170, 142, 134, 1170,
	133, 128, 132, 1360, 131, 1166, 1166, 130, 129, 4146,
	127, 126, 125, 1360, 1360, 1238, 124, 122, 4148, 1339,
	1165, 4161, 4162, 121, 246, 1168, 4160, 4181, 1168, 120,
	1360, 3604, 119, 118, 117, 4051, 115, 114, 4165, 113,
	1892, 246, 112, 4169, 1048, 1048, 4171, 1164, 2480, 1348,
	4175, 111, 3554, 3554, 1048, 110, 4179, 4180, 4178, 109,
	684, 681, 59, 4004, 4005, 58, 107, 3193, 3194, 106,
	18, 3195, 1165, 4184, 4185, 1165, 39, 14, 63, 4212,
	64, 17, 13, 1048, 1048, 4195, 1048, 4019, 34, 86,
	4021, 4022, 98, 4199, 1166, 4222, 4225, 4214, 97, 1164,
	4237, 4174, 1164, 3220, 3221, 4177, 35, 3222, 1895, 95,
	4234, 94, 4241, 33, 16, 3672, 3673, 3674, 4194, 15,
	4227, 92, 4253, 91, 4257, 4244, 4258, 4231, 2480, 2480,
	32, 1508, 1048, 1048, 1048, 30, 11, 4256, 9, 8,
	36, 3554, 1849, 12, 5, 4186, 1166, 4187, 4248, 1166,
	173, 4252, 172, 175, 171, 1895, 4286, 4226, 4251, 1048,
	4230, 4291, 174, 85, 170, 169, 4270, 4271, 84, 4273,
	4272, 28, 10, 165, 4048, 3633, 78, 167, 166, 164,
	163, 1886, 162, 4213, 4289, 79, 76, 161, 80, 4313,
	160, 77, 4311, 3554, 159, 26, 3554, 6, 62, 7,
	3925, 3360, 2929, 2930, 4324, 4315, 101, 1048, 102, 37,
	74, 73, 72, 4323, 4312, 25, 4318, 61, 4322, 24,
	4328, 202, 201, 4317, 200, 199, 198, 197, 1886, 4320,
	4321, 192, 4344, 191, 196, 4325, 194, 4334, 4335, 638,
	4336, 4340, 4338, 193, 195, 190, 205, 4346, 4222, 4350,
	204, 4225, 206, 4347, 4348, 1170, 203, 1170, 4357, 4362,
	246, 208, 246, 4354, 4241, 189, 246, 4147, 187, 4363,
	4369, 4361, 2480, 2480, 2480, 183, 182, 4365, 186, 1373,
	1336, 246, 188, 246, 1168, 4370, 1168, 185, 246, 1373,
	654, 184, 181, 246, 1373, 4382, 4384, 207, 157, 158,
	69, 688, 4364, 156, 4366, 155, 154, 153, 4390, 152,
	151, 150, 4396, 4393, 68, 23, 1048, 1048, 4397, 2,
	1, 0, 0, 0, 1048, 4391, 1048, 1048, 4406, 4400,
	0, 1165, 4409, 1165, 4415, 0, 4416, 0, 0, 4414,
	4420, 0, 4419, 0, 4418, 0, 3048, 3049, 3050, 0,
	4417, 0, 2781, 0, 0, 4423, 4356, 4424, 1164, 2890,
	1164, 0, 4426, 0, 4428, 0, 4429, 0, 0, 4430,
	4433, 4425, 0, 0, 0, 4435, 0, 1048, 4438, 4427,
	4440, 0, 4437, 0, 4441, 0, 4443, 4434, 0, 0,
	4444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4407, 4408, 0, 0, 0, 1166, 1508, 1166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2476,
	2476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4439, 3554, 0, 3554, 0, 0, 0, 0, 0,
	1679, 1680, 0, 0, 0, 0, 0, 0, 246, 1895,
	0, 246, 0, 0, 0, 4301, 3921, 0, 3923, 0,
	0, 0, 248, 1710, 1864, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1895, 1895, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 1681, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 1971, 0,
	246, 0, 1886, 241, 241, 634, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 246, 0, 0,
	3968, 638, 0, 246, 0, 0, 1895, 1895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2117, 0, 1679,
	1680, 0, 0, 2476, 2476, 2476, 1886, 1886, 0, 246,
	0, 0, 0, 0, 0, 0, 246, 1895, 0, 0,
	0, 0, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 688, 0, 0,
	0, 827, 0, 0, 0, 0, 0, 0, 0, 1886,
	1886, 4029, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 246, 0, 1336, 246,
	0, 0, 1698, 1011, 0, 0, 0, 0, 1709, 1711,
	1886, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 2054, 0, 0, 0,
	0, 246, 246, 0, 246, 0, 246, 0, 246, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 2480, 0, 3395, 0, 3642, 0, 0, 0, 0,
	0, 2219, 0, 0, 2220, 1702, 2221, 0, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 246, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 670,
	0, 0, 0, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3392, 3393, 0, 1709, 1711, 0,
	0, 0, 3694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 2480, 2480, 2480, 2480, 2480, 2480, 2480, 2480,
	2480, 2480, 2480, 2480, 2480, 2480, 2480, 2480, 2480, 2480,
	2480, 0, 2480, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 1508,
	0, 0, 1679, 1680, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 0, 1886, 0,
	0, 0, 0, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 1682, 0, 0, 0, 3455, 3456, 3457, 3458,
	3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468,
	3469, 3470, 3471, 3472, 3473, 0, 3477, 0, 0, 0,
	638, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 1701, 0, 1895, 0,
	0, 0, 0, 0, 638, 1698, 0, 0, 0, 0,
	0, 246, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 246, 0, 3025, 3026, 0,
	3043, 3044, 3045, 0, 0, 0, 0, 0, 0, 0,
	246, 1351, 0, 1703, 0, 0, 0, 0, 0, 3714,
	0, 0, 0, 2277, 0, 0, 3390, 0, 0, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 2476, 2476, 0, 0, 0, 1687, 246, 1351, 0,
	654, 3025, 3026, 0, 3043, 3044, 3045, 246, 0, 0,
	0, 3040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3401, 0, 0, 0, 0, 0, 0,
	0, 3872, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 1711, 3884, 0, 0, 0, 0, 0, 0, 0,
	2382, 2617, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 3904, 1696, 1697, 0, 0, 0,
	0, 0, 246, 0, 0, 3040, 0, 0, 0, 0,
	0, 0, 0, 1699, 1695, 246, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 1702, 0, 0,
	0, 3031, 246, 2476, 2476, 2476, 2476, 2476, 2476, 2476,
	2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476, 2476,
	2476, 2476, 0, 2476, 0, 0, 0, 246, 2724, 0,
	0, 0, 0, 0, 0, 0, 1011, 0, 0, 0,
	1011, 0, 0, 0, 0, 2549, 0, 0, 0, 0,
	0, 0, 1373, 0, 0, 246, 1324, 0, 0, 0,
	1324, 3046, 0, 246, 0, 3031, 0, 0, 0, 0,
	0, 1235, 2764, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 2617, 0, 638, 0, 0, 0, 2785, 0,
	0, 0, 0, 0, 246, 0, 0, 246, 2707, 0,
	0, 246, 3041, 246, 0, 0, 0, 0, 1336, 0,
	246, 246, 0, 1351, 1351, 0, 1708, 0, 0, 0,
	0, 0, 0, 2811, 827, 3046, 2617, 2617, 0, 0,
	0, 2699, 2697, 0, 0, 0, 1703, 0, 2701, 2703,
	2693, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2603, 0, 0, 0, 0, 1679, 1680, 0,
	246, 1336, 246, 1895, 0, 1373, 3041, 1373, 1373, 0,
	0, 1336, 0, 1336, 1483, 1336, 1483, 1483, 0, 0,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 1525, 1526, 0, 0, 0, 0, 0,
	0, 246, 246, 246, 246, 1336, 246, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 0, 0, 1895, 0,
	0, 1701, 0, 0, 0, 0, 1886, 0, 0, 246,
	1698, 3042, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 3389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1886, 0, 0, 0, 3042, 0, 0, 0, 2695,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	2709, 1687, 0, 0, 0, 0, 0, 0, 0, 1679,
	1680, 0, 0, 0, 0, 4152, 1373, 0, 0, 0,
	0, 2708, 2700, 2698, 2702, 2704, 2694, 2696, 2710, 0,
	0, 0, 1710, 0, 0, 2706, 4168, 0, 0, 1682,
	0, 0, 1895, 0, 0, 1709, 1711, 3037, 3038, 3039,
	0, 0, 0, 0, 3036, 3034, 3035, 3027, 3028, 3029,
	3030, 3032, 3033, 0, 0, 0, 0, 0, 2713, 0,
	1696, 1697, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 2480, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 3037, 3038, 3039, 0, 1886, 0, 0, 3036, 3034,
	3035, 3027, 3028, 3029, 3030, 3032, 3033, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2480, 0, 2918, 0, 0, 0, 4245, 0, 0,
	4246, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 3949, 0,
	0, 0, 246, 1687, 0, 0, 0, 638, 0, 0,
	0, 0, 638, 0, 0, 638, 0, 0, 638, 638,
	0, 0, 0, 0, 638, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 1324, 0, 0, 0, 0,
	1859, 0, 0, 0, 1373, 3981, 0, 1709, 1711, 0,
	0, 1708, 0, 0, 0, 1868, 0, 1343, 0, 0,
	0, 2714, 0, 0, 0, 0, 1373, 0, 0, 0,
	2705, 1703, 1696, 1697, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1011, 0, 0, 0, 0, 0, 1324,
	2617, 2617, 246, 0, 1351, 0, 0, 2617, 0, 0,
	3168, 0, 0, 0, 1702, 0, 0, 0, 2617, 3168,
	0, 2617, 3168, 3168, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2480, 246, 246, 1351, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	246, 0, 0, 1336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 70, 2617, 0, 3231, 2617, 1351,
	0, 0, 2617, 2617, 1351, 0, 0, 0, 0, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3078, 75, 0, 0, 4107,
	0, 1699, 1695, 246, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 1827, 246, 3258, 0,
	0, 3260, 2617, 1708, 0, 246, 0, 3104, 0, 246,
	0, 1427, 0, 0, 0, 2476, 82, 1324, 0, 0,
	0, 0, 3117, 1703, 0, 0, 0, 0, 0, 0,
	2764, 0, 0, 1336, 0, 246, 0, 0, 2617, 0,
	638, 0, 0, 3135, 0, 0, 0, 2617, 0, 0,
	0, 0, 0, 88, 0, 246, 0, 0, 0, 246,
	246, 0, 2476, 0, 0, 0, 0, 103, 0, 0,
	0, 0, 89, 100, 0, 0, 0, 2074, 0, 0,
	0, 2081, 0, 0, 0, 0, 246, 2764, 0, 818,
	2764, 0, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 2104, 0, 0, 0, 0, 70, 2111, 821, 820,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 71, 0, 3370, 0, 0, 1336, 246, 0,
	246, 0, 0, 1483, 0, 0, 0, 0, 75, 0,
	1343, 0, 0, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 997, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 3117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 2164, 0, 0, 2476, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 3433,
	0, 0, 0, 0, 2184, 0, 0, 0, 0, 103,
	0, 0, 0, 0, 89, 100, 2195, 0, 2197, 0,
	2199, 0, 2201, 0, 2202, 0, 0, 0, 1679, 1680,
	0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1710, 0, 0, 0, 0, 0, 0, 1682, 0,
	0, 0, 2224, 0, 0, 0, 1728, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 96, 0, 99, 0,
	0, 0, 1681, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 215, 1339, 0, 0, 1238, 0, 246, 246,
	822, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 0, 0, 0,
	0, 0, 1373, 1373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 1373, 1373, 0,
	143, 1324, 1704, 1705, 1706, 1707, 0, 3412, 0, 0,
	0, 0, 1687, 0, 0, 180, 0, 0, 0, 0,
	0, 0, 0, 216, 3428, 3556, 0, 0, 0, 0,
	93, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 1719, 0, 0,
	1729, 0, 0, 688, 0, 0, 1709, 1711, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	1324, 0, 1725, 0, 1726, 0, 0, 176, 96, 0,
	99, 1696, 1697, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1324, 0, 0, 1717,
	0, 0, 1351, 246, 215, 0, 0, 0, 0, 2546,
	0, 0, 822, 1702, 246, 0, 0, 141, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 246, 0,
	0, 0, 246, 0, 0, 0, 0, 217, 0, 0,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 0, 2617, 246, 0, 0, 0, 0, 70, 0,
	0, 0, 143, 1716, 0, 0, 0, 0, 3519, 0,
	0, 2093, 2811, 2811, 71, 0, 0, 180, 827, 827,
	2617, 0, 0, 2764, 2764, 216, 0, 827, 2617, 0,
	75, 0, 0, 1324, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 819, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 997, 0, 1343, 88, 1720, 0,
	0, 0, 0, 0, 0, 3025, 3026, 3733, 3043, 3044,
	3045, 103, 0, 0, 0, 0, 89, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3400, 0, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1375, 0, 1381, 0, 1387, 0, 0, 2081,
	0, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	0, 0, 0, 3025, 3026, 0, 3043, 3044, 3045, 246,
	0, 90, 0, 0, 0, 1373, 0, 246, 0, 3040,
	0, 0, 0, 0, 0, 0, 0, 0, 2787, 0,
	246, 1483, 0, 1718, 0, 1483, 0, 1483, 1693, 1694,
	1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 0, 0, 0, 0, 2617, 2617,
	2617, 1509, 3739, 0, 0, 0, 0, 0, 0, 3806,
	0, 3806, 3556, 1373, 0, 2840, 0, 3040, 1527, 0,
	1532, 2617, 0, 3168, 0, 0, 1373, 1373, 246, 1351,
	1541, 0, 1546, 0, 2850, 0, 2853, 0, 0, 0,
	1351, 246, 1351, 246, 0, 0, 0, 0, 0, 3031,
	0, 0, 0, 0, 2617, 0, 2617, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2876, 1343, 2878, 1343, 0,
	2881, 2617, 0, 0, 0, 0, 3876, 0, 0, 0,
	0, 0, 93, 0, 1605, 246, 0, 1611, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 3031, 0, 3046,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 2909, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 70, 0, 3556, 0, 0, 1373, 176,
	96, 0, 99, 0, 0, 3047, 1679, 1680, 0, 71,
	3041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 215, 3046, 0, 1710,
	3768, 0, 0, 0, 822, 0, 1682, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 3778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 0, 0, 3041, 217,
	1681, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	1701, 0, 0, 0, 1763, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 2617,
	0, 3168, 88, 0, 3975, 0, 0, 0, 0, 180,
	0, 0, 246, 0, 0, 0, 103, 216, 3556, 0,
	0, 89, 100, 0, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	2911, 0, 688, 0, 0, 0, 0, 0, 0, 3042,
	0, 1336, 0, 0, 0, 0, 0, 0, 0, 1521,
	1704, 1705, 1706, 1707, 0, 1351, 246, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 3975, 0, 0, 0, 1821,
	1821, 1821, 0, 2617, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 4056, 0, 3042, 0, 0,
	0, 0, 0, 0, 1709, 1711, 0, 1373, 0, 0,
	0, 0, 0, 1238, 0, 0, 0, 0, 1324, 3556,
	3556, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 1324, 0, 0, 246, 246, 0, 0,
	0, 0, 0, 3941, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 997, 0, 0,
	3433, 1702, 0, 0, 0, 3037, 3038, 3039, 0, 0,
	0, 1011, 3036, 3034, 3035, 3027, 3028, 3029, 3030, 3032,
	3033, 3975, 0, 0, 3941, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2277, 3806, 0, 0, 0, 0, 3159, 93, 3556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3037, 3038, 3039, 0, 0, 0, 246,
	3036, 3034, 3035, 3027, 3028, 3029, 3030, 3032, 3033, 0,
	3200, 3202, 0, 2093, 0, 0, 0, 0, 3876, 0,
	0, 0, 0, 0, 176, 96, 2277, 99, 0, 1324,
	3556, 0, 246, 3556, 3025, 3026, 0, 3043, 3044, 3045,
	0, 0, 0, 3168, 0, 0, 0, 0, 0, 0,
	1708, 215, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 0, 141, 0, 0, 1033, 105, 1373,
	1703, 1373, 0, 0, 0, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 0, 0, 0, 0,
	4208, 0, 0, 0, 0, 0, 0, 1373, 3040, 3271,
	0, 0, 246, 3275, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	2617, 0, 0, 0, 180, 0, 1171, 0, 0, 0,
	1171, 0, 216, 0, 1171, 0, 0, 246, 0, 0,
	0, 0, 0, 209, 0, 0, 0, 105, 0, 1483,
	0, 0, 210, 1343, 1343, 0, 0, 0, 0, 0,
	0, 0, 3433, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	3336, 0, 0, 0, 0, 0, 0, 0, 3031, 0,
	1699, 1695, 1171, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 972, 0, 0, 0,
	0, 0, 3373, 0, 1343, 0, 1171, 992, 0, 3975,
	0, 0, 1171, 0, 0, 0, 1171, 0, 3046, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 3385, 0, 0,
	1373, 0, 2617, 0, 0, 1154, 0, 0, 0, 3556,
	0, 3556, 0, 0, 0, 0, 0, 0, 1324, 3041,
	0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722,
	1723, 1724, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 1715, 1710, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2811, 0, 0, 0, 0, 1681, 0, 0,
	2617, 0, 0, 0, 2252, 0, 2256, 1701, 0, 0,
	0, 0, 0, 2270, 0, 2811, 1698, 0, 0, 0,
	2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288,
	2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298,
	2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308,
	2309, 2310, 2311, 2312, 2313, 0, 2319, 0, 2321, 2322,
	2323, 2324, 0, 0, 0, 0, 0, 0, 3042, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 0, 0, 0, 0, 0, 0, 1704, 1705, 1706,
	1707, 1750, 0, 0, 0, 2363, 0, 1687, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2393, 2396, 2399, 2402, 0, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 1729, 0, 0, 0, 0,
	0, 1709, 1711, 0, 2472, 0, 2483, 2485, 2490, 0,
	0, 0, 0, 0, 0, 0, 0, 1725, 0, 1726,
	0, 0, 0, 0, 0, 0, 1696, 1697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3037, 3038, 3039, 0, 1702, 0,
	0, 3036, 3034, 3035, 3027, 3028, 3029, 3030, 3032, 3033,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	1171, 0, 0, 0, 2451, 2452, 2453, 2454, 2447, 2448,
	2449, 2450, 0, 0, 0, 1171, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 2093, 0, 0,
	1899, 0, 0, 0, 1171, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 3632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2093, 0, 0, 0, 3647, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2427, 2428, 2429, 2430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 2439, 2440, 2441, 2442, 2435,
	2436, 2437, 2438, 2443, 2444, 2445, 2446, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3696, 0, 1720, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2727, 2728, 0, 2730, 2423, 2424,
	2425, 2426, 2431, 2432, 2433, 2434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 1171, 0,
	0, 0, 0, 0, 105, 0, 105, 1171, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1324,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 1324, 0, 992, 105, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 105, 883, 2864, 926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 0, 0,
	0, 891, 3823, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 1171, 0, 1171, 2093, 1171, 905, 889, 888,
	0, 0, 0, 0, 0, 0, 1732, 1733, 0, 0,
	0, 0, 1171, 1171, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 890, 0, 0, 0,
	0, 893, 0, 0, 0, 1171, 934, 1171, 1171, 1171,
	0, 1324, 0, 0, 0, 902, 903, 0, 0, 2093,
	0, 0, 0, 0, 919, 0, 0, 0, 3892, 0,
	0, 2912, 2913, 0, 0, 0, 0, 2919, 0, 0,
	927, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2933, 2934, 0, 0,
	0, 0, 2363, 0, 1324, 0, 0, 896, 0, 0,
	0, 2941, 972, 0, 0, 0, 925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2955, 0, 0,
	0, 0, 1744, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2967, 0, 0, 0, 0, 1749,
	0, 0, 0, 1755, 0, 0, 0, 0, 898, 0,
	0, 0, 1899, 1899, 1171, 0, 887, 0, 0, 0,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 1044, 899, 900, 0, 0, 0, 0,
	0, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 907, 906, 0, 0, 0, 0, 0, 0,
	901, 0, 1679, 1680, 916, 0, 3982, 0, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 245, 245,
	245, 1011, 931, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 1682, 2490, 2490, 2490, 0, 1324, 0, 0,
	1728, 1171, 0, 0, 0, 728, 0, 0, 1821, 0,
	0, 0, 0, 928, 0, 0, 3082, 0, 0, 0,
	2093, 0, 0, 1841, 0, 1844, 1681, 105, 0, 0,
	728, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 894, 0, 0, 933, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 892, 0,
	0, 0, 923, 924, 0, 997, 1171, 0, 0, 0,
	4097, 1343, 0, 0, 0, 0, 0, 0, 0, 997,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 921, 0, 0, 1687, 0, 0, 0,
	932, 917, 0, 910, 908, 0, 913, 3185, 0, 0,
	0, 0, 914, 0, 0, 885, 0, 929, 0, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 1729, 0, 0, 0, 886, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 915,
	0, 0, 0, 0, 912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 930, 1696, 1697, 1011, 1011, 0,
	0, 0, 918, 1171, 0, 0, 0, 0, 0, 0,
	0, 897, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 920, 4170, 1702, 0, 0,
	0, 0, 0, 1899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 0, 4238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 4250, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 749, 0, 0, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 1171, 1171, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 992, 1171, 992,
	0, 0, 1720, 0, 0, 804, 0, 0, 0, 750,
	0, 766, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 2270, 0, 0, 0, 787, 0, 3387, 3388, 0,
	788, 3391, 0, 0, 0, 3394, 751, 0, 0, 0,
	0, 752, 0, 0, 3398, 0, 0, 0, 0, 0,
	0, 0, 0, 3405, 0, 0, 3082, 0, 0, 0,
	0, 774, 0, 0, 0, 0, 0, 753, 789, 0,
	0, 3417, 0, 0, 0, 0, 0, 0, 0, 790,
	772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3440, 3441, 0, 3442, 3443, 3444, 1718, 0, 0,
	791, 0, 0, 747, 0, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	810, 0, 0, 754, 0, 0, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3450, 776, 0, 792,
	3452, 714, 0, 0, 0, 0, 0, 0, 0, 972,
	0, 0, 972, 972, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 0, 0, 0, 0, 0, 0,
	0, 3480, 3481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 0, 795, 0, 0, 0, 3492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	714, 0, 0, 0, 3501, 0, 0, 2337, 0, 0,
	0, 0, 0, 775, 0, 0, 0, 0, 0, 0,
	0, 0, 770, 992, 809, 0, 0, 0, 0, 0,
	0, 0, 1749, 0, 0, 0, 1749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 245, 245,
	0, 0, 245, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 728, 0,
	3542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	756, 806, 0, 0, 0, 0, 3551, 0, 0, 0,
	0, 758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1154, 0,
	0, 0, 0, 0, 3577, 245, 245, 0, 0, 0,
	759, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 1171, 0, 0, 245,
	797, 245, 245, 713, 0, 245, 0, 105, 0, 0,
	1171, 0, 0, 0, 745, 0, 767, 0, 245, 245,
	0, 0, 0, 0, 0, 760, 0, 816, 1171, 798,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 1171, 0, 0, 0, 0, 0, 765,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 713, 761, 1171, 0, 779, 1821, 778, 799,
	0, 0, 762, 814, 815, 812, 3665, 0, 1171, 1171,
	0, 807, 0, 0, 800, 0, 763, 0, 0, 0,
	0, 771, 0, 0, 0, 0, 0, 780, 0, 777,
	0, 0, 0, 0, 0, 715, 0, 1899, 0, 0,
	0, 0, 0, 245, 0, 0, 105, 0, 0, 0,
	0, 0, 801, 808, 1171, 0, 0, 0, 0, 0,
	245, 802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 0, 0, 0, 105,
	811, 0, 0, 0, 0, 0, 3711, 3712, 0, 1171,
	0, 0, 3716, 3717, 715, 0, 0, 3720, 3721, 1171,
	0, 0, 0, 0, 3725, 805, 0, 0, 1171, 0,
	0, 0, 0, 1171, 105, 3729, 0, 105, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3734, 0, 0, 0, 0, 1171, 0, 0, 0,
	0, 0, 1171, 0, 1171, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 105, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3807, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 1167, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 1171, 0, 0, 1171, 0, 0,
	245, 1843, 245, 0, 0, 0, 0, 728, 0, 0,
	0, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 2337, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1899, 1899, 1749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3936, 3937, 3938, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2270, 0, 0, 3947, 3948, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 1899,
	0, 0, 0, 0, 3956, 3959, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 1171, 0, 0,
	0, 0, 4001, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4008, 0, 0, 997, 0, 0, 0, 0,
	0, 0, 0, 0, 4016, 0, 0, 0, 0, 1171,
	0, 0, 245, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 245,
	1154, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 1154, 245, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 245, 0, 4123, 245, 0,
	4126, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 105, 105, 0, 0, 105, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	728, 245, 0, 245, 0, 245, 1171, 245, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 105,
	0, 1171, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 997, 997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 1171, 1171, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2270, 0, 0, 0, 0, 0, 0, 0, 1171,
	3959, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 1154, 0,
	0, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4269, 4269,
	4269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4290, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 1171,
	0, 1171, 0, 0, 0, 0, 0, 0, 1171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1167, 1171, 0, 0, 0, 0,
	0, 0, 0, 4269, 0, 0, 0, 0, 0, 0,
	1167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1171, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 1171, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	1171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1171, 4269, 4401, 0, 0, 1171, 0, 0, 0,
	4405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1171, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 1171, 1171, 1171, 0, 0, 0, 0,
	0, 245, 0, 105, 1171, 0, 0, 1057, 0, 0,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 1154, 1154, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 1171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 247, 247, 1899, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1171, 0, 1171, 0, 247,
	0, 0, 0, 0, 245, 0, 0, 0, 0, 0,
	0, 1171, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 1171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 0, 245, 0, 0, 245, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 0, 0, 245,
	245, 0, 0, 0, 0, 1679, 1680, 1171, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 1171, 1171,
	0, 0, 0, 0, 0, 0, 0, 1715, 1710, 0,
	245, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 245,
	0, 245, 0, 0, 0, 0, 1171, 0, 0, 1171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 1171, 1171, 1701,
	105, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	245, 245, 245, 245, 0, 245, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 0, 0, 0, 1899, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 1171, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 1729, 0, 0,
	0, 0, 0, 1709, 1711, 0, 0, 0, 1171, 0,
	0, 1171, 0, 0, 0, 1171, 0, 0, 0, 1725,
	0, 1726, 0, 0, 0, 1171, 1171, 0, 1696, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1171, 0, 0, 0, 1717, 0, 1679, 1680,
	0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1710, 0, 0, 0, 0, 105, 0, 1682, 0,
	0, 0, 1154, 0, 0, 0, 1728, 0, 0, 0,
	1154, 0, 0, 0, 0, 0, 251, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 1167, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 1703,
	0, 1843, 1704, 1705, 1706, 1707, 0, 0, 0, 0,
	0, 0, 1687, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1719, 0, 105,
	1729, 0, 0, 0, 0, 0, 1709, 1711, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 1171, 0, 1171,
	0, 0, 1725, 0, 1726, 0, 0, 0, 0, 0,
	0, 1696, 1697, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 245, 0, 245, 1717,
	0, 0, 0, 0, 0, 1843, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 245,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 2976, 0, 0, 0, 2977,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	247, 1244, 247, 247, 0, 1244, 247, 247, 0, 1244,
	0, 0, 245, 1716, 0, 0, 0, 0, 0, 0,
	149, 0, 247, 0, 0, 0, 728, 0, 70, 0,
	45, 44, 0, 0, 245, 0, 0, 0, 245, 0,
	0, 0, 0, 1244, 71, 0, 0, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 0, 0, 1167, 0, 0, 1244, 0, 247,
	247, 65, 1708, 0, 0, 0, 0, 0, 47, 0,
	146, 0, 0, 0, 245, 0, 0, 0, 245, 245,
	0, 0, 1703, 0, 0, 0, 0, 0, 46, 0,
	82, 0, 0, 247, 0, 247, 247, 0, 0, 247,
	0, 1244, 0, 0, 0, 245, 0, 1244, 1720, 0,
	0, 1244, 247, 247, 49, 66, 0, 0, 0, 0,
	0, 0, 50, 0, 2337, 1244, 0, 88, 0, 0,
	0, 147, 0, 0, 0, 0, 0, 0, 0, 48,
	0, 103, 0, 0, 0, 0, 89, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 0,
	0, 0, 0, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 1718, 0, 0, 0, 247, 1693, 1694,
	1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 247, 0, 0, 0, 2359, 0,
	0, 0, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 0, 0, 0, 0, 0, 1167, 1167, 0,
	0, 0, 55, 0, 0, 0, 0, 57, 0, 0,
	0, 0, 105, 67, 0, 105, 0, 0, 56, 176,
	96, 0, 99, 0, 0, 0, 53, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 0, 141,
	1241, 0, 0, 0, 1241, 0, 0, 0, 1361, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 217,
	1244, 0, 0, 0, 247, 247, 247, 0, 0, 0,
	0, 247, 1361, 0, 0, 0, 247, 0, 0, 1244,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 1361, 0, 0, 180,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 245, 1244, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 245, 0, 0, 1361, 0, 0, 179,
	1361, 0, 3, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 1361, 0, 0, 245, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 247, 1244, 1244, 247, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	247, 0, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 1167, 247,
	0, 0, 0, 0, 0, 0, 1167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	0, 0, 0, 0, 0, 0, 0, 1244, 0, 1244,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 0, 0, 0, 0, 1244, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 247,
	0, 1843, 247, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 1244, 1244, 1244, 0, 0, 245, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	245, 0, 245, 0, 247, 247, 0, 247, 0, 247,
	0, 247, 0, 247, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 720, 0, 0, 1361, 0,
	0, 247, 0, 0, 245, 0, 0, 0, 0, 1361,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 0, 0, 0, 0, 1843, 0, 0,
	0, 1361, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 245, 245, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1361, 0, 1361, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 1361, 1361, 0, 0,
	0, 0, 0, 247, 0, 0, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 1843, 0, 1361,
	0, 1361, 1361, 1361, 0, 0, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 720, 0, 247, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	247, 245, 1843, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	0, 1244, 0, 0, 0, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 1241, 0,
	247, 0, 0, 0, 247, 0, 247, 0, 0, 0,
	0, 245, 0, 247, 247, 0, 0, 0, 1244, 1244,
	0, 1244, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 245, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 247, 247, 247, 0, 247,
	0, 247, 0, 1242, 0, 0, 0, 1242, 0, 0,
	0, 1362, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 1715, 1710, 0, 0, 0, 0,
	247, 0, 1682, 0, 1241, 1362, 0, 0, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	1241, 0, 0, 0, 0, 0, 1681, 0, 1843, 0,
	1843, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1241, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 1361, 1361, 0,
	1361, 0, 0, 1244, 1244, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	247, 0, 247, 0, 0, 0, 1703, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 1244, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 247, 1244, 0, 1244,
	0, 1362, 0, 1244, 0, 0, 0, 0, 0, 0,
	247, 0, 1362, 0, 0, 0, 0, 0, 247, 0,
	0, 1244, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 247, 0,
	0, 0, 247, 247, 0, 0, 3403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 1244, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 247, 1244, 247, 0, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 1362, 0, 1715, 1710, 0,
	0, 0, 0, 0, 1242, 1682, 247, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	1241, 0, 0, 1244, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 1361, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 1362, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 1362,
	1362, 0, 0, 0, 1719, 0, 0, 1729, 0, 0,
	1362, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 1362, 0, 1362, 1362, 1362, 0, 0, 1725,
	0, 1726, 0, 1361, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 1241, 1244, 0, 0, 0, 0, 0,
	0, 0, 1361, 0, 0, 0, 1717, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 1361, 0, 1361, 0,
	0, 0, 1241, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 247, 0, 0, 0,
	1361, 1361, 0, 0, 0, 0, 0, 247, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 1361, 0, 0, 0, 247, 0, 0, 1703,
	0, 247, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 1241, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1244, 1244, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 1244, 0, 0, 0, 0, 1242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1241, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 0, 0, 0, 1241,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 2979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 1710, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 1244, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 0,
	1244, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1244, 0, 247, 0, 247, 0, 0, 0,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 0, 0, 0, 0, 0, 1704, 1705, 1706,
	1707, 0, 0, 1362, 0, 0, 0, 1687, 1244, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 1244, 247, 0, 0,
	0, 1244, 1719, 0, 0, 1729, 0, 0, 0, 0,
	0, 1709, 1711, 0, 0, 0, 0, 0, 0, 0,
	1362, 1362, 0, 1362, 0, 0, 0, 1725, 0, 1726,
	0, 0, 1361, 0, 0, 1362, 1696, 1697, 1244, 1244,
	1244, 0, 0, 0, 0, 0, 0, 0, 0, 1244,
	1362, 0, 0, 0, 1717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1244,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 1361, 1361, 1361, 0,
	1244, 0, 1244, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 1361, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 0, 0, 0,
	0, 1241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 1244, 0, 0, 0, 0, 0, 0, 247,
	0, 0, 0, 1244, 1244, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	247, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1241, 0, 1241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 2978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1241, 247, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 0, 1242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 1361, 1361, 0,
	1244, 0, 0, 0, 0, 1242, 0, 0, 0, 0,
	1244, 1244, 0, 0, 1361, 0, 0, 0, 0, 0,
	1242, 0, 0, 0, 0, 1241, 0, 1244, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 1361, 1361,
	0, 0, 0, 0, 0, 247, 0, 0, 1241, 0,
	0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722,
	1723, 1724, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 0, 1715, 1710, 0, 1241, 0,
	247, 0, 0, 1682, 0, 0, 0, 0, 0, 0,
	0, 1728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 1681, 0, 1241,
	0, 1361, 0, 0, 0, 1362, 0, 1701, 0, 0,
	1362, 0, 0, 0, 0, 1241, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 1362,
	0, 1362, 0, 0, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 1241, 0, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 1361, 1361, 0, 0, 0, 1704, 1705, 1706,
	1707, 0, 0, 0, 0, 0, 0, 1687, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 1715, 1710, 1361, 0, 0, 0, 0, 0, 1682,
	0, 0, 1719, 1362, 1362, 1729, 0, 1728, 0, 0,
	0, 1709, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 1725, 0, 1726,
	0, 0, 0, 1681, 0, 0, 1696, 1697, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 1717, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 1242, 0, 0, 0, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 1716, 0,
	0, 0, 0, 1687, 0, 1242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 1361,
	1361, 1729, 0, 0, 0, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 1361, 1708, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 1703, 1679, 1680,
	0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 1710, 0, 1720, 1702, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0,
	0, 0, 0, 1708, 0, 0, 0, 2975, 0, 0,
	0, 0, 1704, 1705, 1706, 1707, 0, 0, 0, 0,
	0, 0, 1687, 1703, 0, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 1710, 1720,
	0, 0, 0, 0, 0, 1682, 0, 1719, 0, 0,
	1729, 0, 0, 1728, 0, 0, 1709, 1711, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 1726, 1362, 0, 0, 0, 1681,
	0, 1696, 1697, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 1717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 1727, 0, 0, 0, 1362,
	1362, 1362, 0, 2974, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 1716, 0, 1362, 0, 0, 0, 1687,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 1242, 1729, 0, 0,
	0, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 1708, 0, 0, 0, 0, 0, 0, 1725,
	0, 1726, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 1703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 1242, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 0, 0, 0, 1693, 1694,
	1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 0, 0, 0, 0, 0, 1708,
	0, 0, 2973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 1703,
	0, 0, 1242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	1362, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 1362, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 1242, 0, 0, 0, 0, 0, 0, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 1242, 0, 0, 0, 0, 0, 0, 0, 2360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1242, 0, 1362, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1362, 1362, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 1245, 262, 263, 1246, 1247, 1248, 1362,
	1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 1254, 585, 273, 274, 275, 276, 277, 278, 1255,
	1256, 0, 279, 586, 587, 588, 1257, 280, 281, 589,
	1258, 1325, 1259, 282, 283, 284, 285, 286, 287, 288,
	0, 1260, 290, 291, 292, 289, 293, 1261, 294, 0,
	295, 296, 297, 298, 299, 300, 1262, 301, 302, 303,
	1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269,
	306, 307, 308, 309, 0, 310, 590, 591, 1270, 314,
	311, 312, 1271, 315, 313, 1272, 316, 317, 318, 1273,
	1274, 319, 320, 321, 1275, 322, 323, 1276, 324, 325,
	326, 1277, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 1278, 252, 1279,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 1280, 344, 1281, 1282, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 1283,
	355, 598, 1284, 599, 356, 1285, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 1286, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1287, 1114, 370, 603, 604, 1288, 605, 1289, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1290, 384, 386,
	385, 1291, 387, 607, 1119, 388, 389, 1120, 1292, 390,
	0, 0, 0, 391, 392, 1293, 1294, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1295, 254, 1123, 433, 434, 1296, 608, 435, 609,
	437, 438, 1297, 0, 439, 0, 1298, 1299, 441, 442,
	443, 1300, 1301, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1302, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 1303, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 1304, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1305,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1306, 513, 514, 512, 515, 516, 517, 1307,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 1308, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	1309, 540, 541, 0, 539, 1310, 542, 543, 544, 545,
	546, 547, 334, 548, 1311, 549, 621, 622, 623, 624,
	1312, 558, 1313, 550, 551, 552, 625, 553, 626, 1314,
	554, 555, 556, 557, 0, 559, 560, 1315, 1316, 561,
	562, 563, 565, 566, 564, 567, 1317, 568, 1318, 0,
	569, 570, 571, 627, 628, 629, 1319, 573, 572, 574,
	630, 1320, 1321, 1322, 1323, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 2524, 0, 0, 0, 0, 0, 0,
	0, 2525, 255, 257, 256, 258, 259, 260, 261, 1245,
	262, 263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251,
	1252, 1253, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 1254, 585, 273,
	274, 275, 276, 277, 278, 1255, 1256, 0, 279, 586,
	587, 588, 1257, 280, 281, 589, 1258, 1325, 1259, 282,
	283, 284, 285, 286, 287, 288, 0, 1260, 290, 291,
	292, 289, 293, 1261, 294, 0, 295, 296, 297, 298,
	299, 300, 1262, 301, 302, 303, 1112, 304, 305, 1263,
	1264, 1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309,
	0, 310, 590, 591, 1270, 314, 311, 312, 1271, 315,
	313, 1272, 316, 317, 318, 1273, 1274, 319, 320, 321,
	1275, 322, 323, 1276, 324, 325, 326, 1277, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 1278, 252, 1279, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 1280, 344,
	1281, 1282, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 1283, 355, 598, 1284, 599,
	356, 1285, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 1115, 362, 363, 1286, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 1287, 1114, 370, 603,
	604, 1288, 605, 1289, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1290, 384, 386, 385, 1291, 387, 607,
	1119, 388, 389, 1120, 1292, 390, 0, 0, 0, 391,
	392, 1293, 1294, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1295, 254, 1123,
	433, 434, 1296, 608, 435, 609, 437, 438, 1297, 0,
	439, 0, 1298, 1299, 441, 442, 443, 1300, 1301, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 1302, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 1303, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 1304, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 1305, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 1306, 513,
	514, 512, 515, 516, 517, 1307, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 1308, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 1309, 540, 541, 0,
	539, 1310, 542, 543, 544, 545, 546, 547, 334, 548,
	1311, 549, 621, 622, 623, 624, 1312, 558, 1313, 550,
	551, 552, 625, 553, 626, 1314, 554, 555, 556, 557,
	0, 559, 560, 1315, 1316, 561, 562, 563, 565, 566,
	564, 567, 1317, 568, 1318, 0, 569, 570, 571, 627,
	628, 629, 1319, 573, 572, 574, 630, 1320, 1321, 1322,
	1323, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1239,
	0, 0, 0, 0, 3411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3413, 255, 257, 256, 258,
	259, 260, 261, 1245, 262, 263, 1246, 1247, 1248, 0,
	1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 1254, 585, 273, 274, 275, 276, 277, 278, 1255,
	1256, 0, 279, 586, 587, 588, 1257, 280, 281, 589,
	1258, 1325, 1259, 282, 283, 284, 285, 286, 287, 288,
	0, 1260, 290, 291, 292, 289, 293, 1261, 294, 0,
	295, 296, 297, 298, 299, 300, 1262, 301, 302, 303,
	1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269,
	306, 307, 308, 309, 0, 310, 590, 591, 1270, 314,
	311, 312, 1271, 315, 313, 1272, 316, 317, 318, 1273,
	1274, 319, 320, 321, 1275, 322, 323, 1276, 324, 325,
	326, 1277, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 1278, 252, 1279,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 1280, 344, 1281, 1282, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 1283,
	355, 598, 1284, 599, 356, 1285, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 1286, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1287, 1114, 370, 603, 604, 1288, 605, 1289, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1290, 384, 386,
	385, 1291, 387, 607, 1119, 388, 389, 1120, 1292, 390,
	0, 0, 0, 391, 392, 1293, 1294, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1295, 254, 1123, 433, 434, 1296, 608, 435, 609,
	437, 438, 1297, 0, 439, 0, 1298, 1299, 441, 442,
	443, 1300, 1301, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1302, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 1303, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 1304, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1305,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1306, 513, 514, 512, 515, 516, 517, 1307,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 1308, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	1309, 540, 541, 0, 539, 1310, 542, 543, 544, 545,
	546, 547, 334, 548, 1311, 549, 621, 622, 623, 624,
	1312, 558, 1313, 550, 551, 552, 625, 553, 626, 1314,
	554, 555, 556, 557, 0, 559, 560, 1315, 1316, 561,
	562, 563, 565, 566, 564, 567, 1317, 568, 1318, 0,
	569, 570, 571, 627, 628, 629, 1319, 573, 572, 574,
	630, 1320, 1321, 1322, 1323, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 1239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3767, 255, 257, 256, 258, 259, 260,
	261, 1245, 262, 263, 1246, 1247, 1248, 0, 1249, 580,
	1250, 1251, 1252, 1253, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 1254,
	585, 273, 274, 275, 276, 277, 278, 1255, 1256, 0,
	279, 586, 587, 588, 1257, 280, 281, 589, 1258, 1325,
	1259, 282, 283, 284, 285, 286, 287, 288, 0, 1260,
	290, 291, 292, 289, 293, 1261, 294, 0, 295, 296,
	297, 298, 299, 300, 1262, 301, 302, 303, 1112, 304,
	305, 1263, 1264, 1266, 1265, 1267, 1268, 1269, 306, 307,
	308, 309, 0, 310, 590, 591, 1270, 314, 311, 312,
	1271, 315, 313, 1272, 316, 317, 318, 1273, 1274, 319,
	320, 321, 1275, 322, 323, 1276, 324, 325, 326, 1277,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 1278, 252, 1279, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	1280, 344, 1281, 1282, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 1283, 355, 598,
	1284, 599, 356, 1285, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 1115, 362, 363, 1286, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 1287, 1114,
	370, 603, 604, 1288, 605, 1289, 372, 373, 1116, 606,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 1290, 384, 386, 385, 1291,
	387, 607, 1119, 388, 389, 1120, 1292, 390, 0, 0,
	0, 391, 392, 1293, 1294, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1295,
	254, 1123, 433, 434, 1296, 608, 435, 609, 437, 438,
	1297, 0, 439, 0, 1298, 1299, 441, 442, 443, 1300,
	1301, 444, 445, 610, 1124, 446, 1125, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 1302,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 1303, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	1304, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 1305, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	1306, 513, 514, 512, 515, 516, 517, 1307, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 1308, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 1309, 540,
	541, 0, 539, 1310, 542, 543, 544, 545, 546, 547,
	334, 548, 1311, 549, 621, 622, 623, 624, 1312, 558,
	1313, 550, 551, 552, 625, 553, 626, 1314, 554, 555,
	556, 557, 0, 559, 560, 1315, 1316, 561, 562, 563,
	565, 566, 564, 567, 1317, 568, 1318, 0, 569, 570,
	571, 627, 628, 629, 1319, 573, 572, 574, 630, 1320,
	1321, 1322, 1323, 575, 576, 631, 577, 578, 579, 0,
	1239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3942, 255, 257, 256,
	258, 259, 260, 261, 1245, 262, 263, 1246, 1247, 1248,
	0, 1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 1254, 585, 273, 274, 275, 276, 277, 278,
	1255, 1256, 0, 279, 586, 587, 588, 1257, 280, 281,
	589, 1258, 1325, 1259, 282, 283, 284, 285, 286, 287,
	288, 0, 1260, 290, 291, 292, 289, 293, 1261, 294,
	0, 295, 296, 297, 298, 299, 300, 1262, 301, 302,
	303, 1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268,
	1269, 306, 307, 308, 309, 0, 310, 590, 591, 1270,
	314, 311, 312, 1271, 315, 313, 1272, 316, 317, 318,
	1273, 1274, 319, 320, 321, 1275, 322, 323, 1276, 324,
	325, 326, 1277, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 1278, 252,
	1279, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 1280, 344, 1281, 1282, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	1283, 355, 598, 1284, 599, 356, 1285, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 1115, 362, 363, 1286,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 1287, 1114, 370, 603, 604, 1288, 605, 1289, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 1290, 384,
	386, 385, 1291, 387, 607, 1119, 388, 389, 1120, 1292,
	390, 0, 0, 0, 391, 392, 1293, 1294, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1295, 254, 1123, 433, 434, 1296, 608, 435,
	609, 437, 438, 1297, 0, 439, 0, 1298, 1299, 441,
	442, 443, 1300, 1301, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 1302, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 1303, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 1304, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	1305, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 1306, 513, 514, 512, 515, 516, 517,
	1307, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 1308, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 1309, 540, 541, 0, 539, 1310, 542, 543, 544,
	545, 546, 547, 334, 548, 1311, 549, 621, 622, 623,
	624, 1312, 558, 1313, 550, 551, 552, 625, 553, 626,
	1314, 554, 555, 556, 557, 0, 559, 560, 1315, 1316,
	561, 562, 563, 565, 566, 564, 567, 1317, 568, 1318,
	0, 569, 570, 571, 627, 628, 629, 1319, 573, 572,
	574, 630, 1320, 1321, 1322, 1323, 575, 576, 631, 577,
	578, 579, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3831,
	255, 257, 256, 258, 259, 260, 261, 1245, 262, 263,
	1246, 1247, 1248, 0, 1249, 580, 1250, 1251, 1252, 1253,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 1254, 585, 273, 274, 275,
	276, 277, 278, 1255, 1256, 0, 279, 586, 587, 588,
	1257, 280, 281, 589, 1258, 1325, 1259, 282, 283, 284,
	285, 286, 287, 288, 0, 1260, 290, 291, 292, 289,
	293, 1261, 294, 0, 295, 296, 297, 298, 299, 300,
	1262, 301, 302, 303, 1112, 304, 305, 1263, 1264, 1266,
	1265, 1267, 1268, 1269, 306, 307, 308, 309, 0, 310,
	590, 591, 1270, 314, 311, 312, 1271, 315, 313, 1272,
	316, 317, 318, 1273, 1274, 319, 320, 321, 1275, 322,
	323, 1276, 324, 325, 326, 1277, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 1278, 252, 1279, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 1280, 344, 1281, 1282,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 1283, 355, 598, 1284, 599, 356, 1285,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 1286, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 1287, 1114, 370, 603, 604, 1288,
	605, 1289, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 1290, 384, 386, 385, 1291, 387, 607, 1119, 388,
	389, 1120, 1292, 390, 0, 0, 0, 391, 392, 1293,
	1294, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1295, 254, 1123, 433, 434,
	1296, 608, 435, 609, 437, 438, 1297, 0, 439, 0,
	1298, 1299, 441, 442, 443, 1300, 1301, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 1302, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 1303, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 1304, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 1305, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 1306, 513, 514, 512,
	515, 516, 517, 1307, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	1308, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 1309, 540, 541, 0, 539, 1310,
	542, 543, 544, 545, 546, 547, 334, 548, 1311, 549,
	621, 622, 623, 624, 1312, 558, 1313, 550, 551, 552,
	625, 553, 626, 1314, 554, 555, 556, 557, 0, 559,
	560, 1315, 1316, 561, 562, 563, 565, 566, 564, 567,
	1317, 568, 1318, 0, 569, 570, 571, 627, 628, 629,
	1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323, 575,
	576, 631, 577, 578, 579, 0, 1239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3697, 255, 257, 256, 258, 259, 260, 261,
	1245, 262, 263, 1246, 1247, 1248, 0, 1249, 580, 1250,
	1251, 1252, 1253, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 1254, 585,
	273, 274, 275, 276, 277, 278, 1255, 1256, 0, 279,
	586, 587, 588, 1257, 280, 281, 589, 1258, 1325, 1259,
	282, 283, 284, 285, 286, 287, 288, 0, 1260, 290,
	291, 292, 289, 293, 1261, 294, 0, 295, 296, 297,
	298, 299, 300, 1262, 301, 302, 303, 1112, 304, 305,
	1263, 1264, 1266, 1265, 1267, 1268, 1269, 306, 307, 308,
	309, 0, 310, 590, 591, 1270, 314, 311, 312, 1271,
	315, 313, 1272, 316, 317, 318, 1273, 1274, 319, 320,
	321, 1275, 322, 323, 1276, 324, 325, 326, 1277, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 1278, 252, 1279, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 1280,
	344, 1281, 1282, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 1283, 355, 598, 1284,
	599, 356, 1285, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 1115, 362, 363, 1286, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 1287, 1114, 370,
	603, 604, 1288, 605, 1289, 372, 373, 1116, 606, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1290, 384, 386, 385, 1291, 387,
	607, 1119, 388, 389, 1120, 1292, 390, 0, 0, 0,
	391, 392, 1293, 1294, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1295, 254,
	1123, 433, 434, 1296, 608, 435, 609, 437, 438, 1297,
	0, 439, 0, 1298, 1299, 441, 442, 443, 1300, 1301,
	444, 445, 610, 1124, 446, 1125, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 1302, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 1303, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 1304,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 1305, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 1306,
	513, 514, 512, 515, 516, 517, 1307, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 1308, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 1309, 540, 541,
	0, 539, 1310, 542, 543, 544, 545, 546, 547, 334,
	548, 1311, 549, 621, 622, 623, 624, 1312, 558, 1313,
	550, 551, 552, 625, 553, 626, 1314, 554, 555, 556,
	557, 0, 559, 560, 1315, 1316, 561, 562, 563, 565,
	566, 564, 567, 1317, 568, 1318, 0, 569, 570, 571,
	627, 628, 629, 1319, 573, 572, 574, 630, 1320, 1321,
	1322, 1323, 575, 576, 631, 577, 578, 579, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3429, 255, 257, 256, 258,
	259, 260, 261, 1245, 262, 263, 1246, 1247, 1248, 0,
	1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 1254, 585, 273, 274, 275, 276, 277, 278, 1255,
	1256, 0, 279, 586, 587, 588, 1257, 280, 281, 589,
	1258, 1325, 1259, 282, 283, 284, 285, 286, 287, 288,
	0, 1260, 290, 291, 292, 289, 293, 1261, 294, 0,
	295, 296, 297, 298, 299, 300, 1262, 301, 302, 303,
	1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269,
	306, 307, 308, 309, 0, 310, 590, 591, 1270, 314,
	311, 312, 1271, 315, 313, 1272, 316, 317, 318, 1273,
	1274, 319, 320, 321, 1275, 322, 323, 1276, 324, 325,
	326, 1277, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 1278, 252, 1279,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 1280, 344, 1281, 1282, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 1283,
	355, 598, 1284, 599, 356, 1285, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 1286, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1287, 1114, 370, 603, 604, 1288, 605, 1289, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1290, 384, 386,
	385, 1291, 387, 607, 1119, 388, 389, 1120, 1292, 390,
	0, 0, 0, 391, 392, 1293, 1294, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1295, 254, 1123, 433, 434, 1296, 608, 435, 609,
	437, 438, 1297, 0, 439, 0, 1298, 1299, 441, 442,
	443, 1300, 1301, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1302, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 1303, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 1304, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1305,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1306, 513, 514, 512, 515, 516, 517, 1307,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 1308, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	1309, 540, 541, 0, 539, 1310, 542, 543, 544, 545,
	546, 547, 334, 548, 1311, 549, 621, 622, 623, 624,
	1312, 558, 1313, 550, 551, 552, 625, 553, 626, 1314,
	554, 555, 556, 557, 0, 559, 560, 1315, 1316, 561,
	562, 563, 565, 566, 564, 567, 1317, 568, 1318, 0,
	569, 570, 571, 627, 628, 629, 1319, 573, 572, 574,
	630, 1320, 1321, 1322, 1323, 575, 576, 631, 577, 578,
	579, 0, 1239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3256, 255,
	257, 256, 258, 259, 260, 261, 1245, 262, 263, 1246,
	1247, 1248, 0, 1249, 580, 1250, 1251, 1252, 1253, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 1254, 585, 273, 274, 275, 276,
	277, 278, 1255, 1256, 0, 279, 586, 587, 588, 1257,
	280, 281, 589, 1258, 1325, 1259, 282, 283, 284, 285,
	286, 287, 288, 0, 1260, 290, 291, 292, 289, 293,
	1261, 294, 0, 295, 296, 297, 298, 299, 300, 1262,
	301, 302, 303, 1112, 304, 305, 1263, 1264, 1266, 1265,
	1267, 1268, 1269, 306, 307, 308, 309, 0, 310, 590,
	591, 1270, 314, 311, 312, 1271, 315, 313, 1272, 316,
	317, 318, 1273, 1274, 319, 320, 321, 1275, 322, 323,
	1276, 324, 325, 326, 1277, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	1278, 252, 1279, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 1280, 344, 1281, 1282, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 1283, 355, 598, 1284, 599, 356, 1285, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 1115, 362,
	363, 1286, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 1287, 1114, 370, 603, 604, 1288, 605,
	1289, 372, 373, 1116, 606, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	1290, 384, 386, 385, 1291, 387, 607, 1119, 388, 389,
	1120, 1292, 390, 0, 0, 0, 391, 392, 1293, 1294,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1295, 254, 1123, 433, 434, 1296,
	608, 435, 609, 437, 438, 1297, 0, 439, 0, 1298,
	1299, 441, 442, 443, 1300, 1301, 444, 445, 610, 1124,
	446, 1125, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 1302, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	1303, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 1304, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 1305, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 1306, 513, 514, 512, 515,
	516, 517, 1307, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 1308,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 1309, 540, 541, 0, 539, 1310, 542,
	543, 544, 545, 546, 547, 334, 548, 1311, 549, 621,
	622, 623, 624, 1312, 558, 1313, 550, 551, 552, 625,
	553, 626, 1314, 554, 555, 556, 557, 0, 559, 560,
	1315, 1316, 561, 562, 563, 565, 566, 564, 567, 1317,
	568, 1318, 0, 569, 570, 571, 627, 628, 629, 1319,
	573, 572, 574, 630, 1320, 1321, 1322, 1323, 575, 576,
	631, 577, 578, 579, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2383, 255, 257, 256, 258, 259, 260, 261, 1245,
	262, 263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251,
	1252, 1253, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 1254, 585, 273,
	274, 275, 276, 277, 278, 1255, 1256, 0, 279, 586,
	587, 588, 1257, 280, 281, 589, 1258, 1325, 1259, 282,
	283, 284, 285, 286, 287, 288, 0, 1260, 290, 291,
	292, 289, 293, 1261, 294, 0, 295, 296, 297, 298,
	299, 300, 1262, 301, 302, 303, 1112, 304, 305, 1263,
	1264, 1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309,
	0, 310, 590, 591, 1270, 314, 311, 312, 1271, 315,
	313, 1272, 316, 317, 318, 1273, 1274, 319, 320, 321,
	1275, 322, 323, 1276, 324, 325, 326, 1277, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 1278, 252, 1279, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 1280, 344,
	1281, 1282, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 1283, 355, 598, 1284, 599,
	356, 1285, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 1115, 362, 363, 1286, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 1287, 1114, 370, 603,
	604, 1288, 605, 1289, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1290, 384, 386, 385, 1291, 387, 607,
	1119, 388, 389, 1120, 1292, 390, 0, 0, 0, 391,
	392, 1293, 1294, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1295, 254, 1123,
	433, 434, 1296, 608, 435, 609, 437, 438, 1297, 0,
	439, 0, 1298, 1299, 441, 442, 443, 1300, 1301, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 1302, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 1303, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 1304, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 1305, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 1306, 513,
	514, 512, 515, 516, 517, 1307, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 1308, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 1309, 540, 541, 0,
	539, 1310, 542, 543, 544, 545, 546, 547, 334, 548,
	1311, 549, 621, 622, 623, 624, 1312, 558, 1313, 550,
	551, 552, 625, 553, 626, 1314, 554, 555, 556, 557,
	0, 559, 560, 1315, 1316, 561, 562, 563, 565, 566,
	564, 567, 1317, 568, 1318, 0, 569, 570, 571, 627,
	628, 629, 1319, 573, 572, 574, 630, 1320, 1321, 1322,
	1323, 575, 576, 631, 577, 578, 579, 1337, 0, 1239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2055, 0, 255, 257, 256, 258,
	259, 260, 261, 1245, 262, 263, 1246, 1247, 1248, 0,
	1249, 580, 1250, 1251, 1252, 1253, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 1254, 585, 273, 274, 275, 276, 277, 278, 1255,
	1256, 0, 279, 586, 587, 588, 1257, 280, 281, 589,
	1258, 1325, 1259, 282, 283, 284, 285, 286, 287, 288,
	0, 1260, 290, 291, 292, 289, 293, 1261, 294, 0,
	295, 296, 297, 298, 299, 300, 1262, 301, 302, 303,
	1112, 304, 305, 1263, 1264, 1266, 1265, 1267, 1268, 1269,
	306, 307, 308, 309, 0, 310, 590, 591, 1270, 314,
	311, 312, 1271, 315, 313, 1272, 316, 317, 318, 1273,
	1274, 319, 320, 321, 1275, 322, 323, 1276, 324, 325,
	326, 1277, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 1278, 252, 1279,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 1280, 344, 1281, 1282, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 1283,
	355, 598, 1284, 599, 356, 1285, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 1286, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	1287, 1114, 370, 603, 604, 1288, 605, 1289, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 1290, 384, 386,
	385, 1291, 387, 607, 1119, 388, 389, 1120, 1292, 390,
	0, 0, 0, 391, 392, 1293, 1294, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1295, 254, 1123, 433, 434, 1296, 608, 435, 609,
	437, 438, 1297, 0, 439, 0, 1298, 1299, 441, 442,
	443, 1300, 1301, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 1302, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 1303, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 1304, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 1305,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 1306, 513, 514, 512, 515, 516, 517, 1307,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 1308, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	1309, 540, 541, 0, 539, 1310, 542, 543, 544, 545,
	546, 547, 334, 548, 1311, 549, 621, 622, 623, 624,
	1312, 558, 1313, 550, 551, 552, 625, 553, 626, 1314,
	554, 555, 556, 557, 0, 559, 560, 1315, 1316, 561,
	562, 563, 565, 566, 564, 567, 1317, 568, 1318, 0,
	569, 570, 571, 627, 628, 629, 1319, 573, 572, 574,
	630, 1320, 1321, 1322, 1323, 575, 576, 631, 577, 578,
	579, 1236, 0, 1239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 1245, 262, 263,
	1246, 1247, 1248, 0, 1249, 580, 1250, 1251, 1252, 1253,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 1254, 585, 273, 274, 275,
	276, 277, 278, 1255, 1256, 0, 279, 586, 587, 588,
	1257, 280, 281, 589, 1258, 1325, 1259, 282, 283, 284,
	285, 286, 287, 288, 0, 1260, 290, 291, 292, 289,
	293, 1261, 294, 0, 295, 296, 297, 298, 299, 300,
	1262, 301, 302, 303, 1112, 304, 305, 1263, 1264, 1266,
	1265, 1267, 1268, 1269, 306, 307, 308, 309, 0, 310,
	590, 591, 1270, 314, 311, 312, 1271, 315, 313, 1272,
	316, 317, 318, 1273, 1274, 319, 320, 321, 1275, 322,
	323, 1276, 324, 325, 326, 1277, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 1278, 252, 1279, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 1280, 344, 1281, 1282,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 1283, 355, 598, 1284, 599, 356, 1285,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 1286, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 1287, 1114, 370, 603, 604, 1288,
	605, 1289, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 1290, 384, 386, 385, 1291, 387, 607, 1119, 388,
	389, 1120, 1292, 390, 0, 0, 0, 391, 392, 1293,
	1294, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1295, 254, 1123, 433, 434,
	1296, 608, 435, 609, 437, 438, 1297, 0, 439, 0,
	1298, 1299, 441, 442, 443, 1300, 1301, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 1302, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 1303, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 1304, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 1305, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 1306, 513, 514, 512,
	515, 516, 517, 1307, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	1308, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 1309, 540, 541, 0, 539, 1310,
	542, 543, 544, 545, 546, 547, 334, 548, 1311, 549,
	621, 622, 623, 624, 1312, 558, 1313, 550, 551, 552,
	625, 553, 626, 1314, 554, 555, 556, 557, 0, 559,
	560, 1315, 1316, 561, 562, 563, 565, 566, 564, 567,
	1317, 568, 1318, 0, 569, 570, 571, 627, 628, 629,
	1319, 573, 572, 574, 630, 1320, 1321, 1322, 1323, 575,
	576, 631, 577, 578, 579, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 1245,
	262, 263, 1246, 1247, 1248, 0, 1249, 580, 1250, 1251,
	1252, 1253, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 1254, 585, 273,
	274, 275, 276, 277, 278, 1255, 1256, 0, 279, 586,
	587, 588, 1257, 280, 281, 589, 1258, 1325, 1259, 282,
	283, 284, 285, 286, 287, 288, 0, 1260, 290, 291,
	292, 289, 293, 1261, 294, 0, 295, 296, 297, 298,
	299, 300, 1262, 301, 302, 303, 1112, 304, 305, 1263,
	1264, 1266, 1265, 1267, 1268, 1269, 306, 307, 308, 309,
	0, 310, 590, 591, 1270, 314, 311, 312, 1271, 315,
	313, 1272, 316, 317, 318, 1273, 1274, 319, 320, 321,
	1275, 322, 323, 1276, 324, 325, 326, 1277, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 1278, 252, 1279, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 1280, 344,
	1281, 1282, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 1283, 355, 598, 1284, 599,
	356, 1285, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 1115, 362, 363, 1286, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 1287, 1114, 370, 603,
	604, 1288, 605, 1289, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 1290, 384, 386, 385, 1291, 387, 607,
	1119, 388, 389, 1120, 1292, 390, 0, 0, 0, 391,
	392, 1293, 1294, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1295, 254, 1123,
	433, 434, 1296, 608, 435, 609, 437, 438, 1297, 0,
	439, 0, 1298, 1299, 441, 442, 443, 1300, 1301, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 1302, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 1303, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 1304, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 1305, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 1306, 513,
	514, 512, 515, 516, 517, 1307, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 1308, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 1309, 540, 541, 0,
	539, 1310, 542, 543, 544, 545, 546, 547, 334, 548,
	1311, 549, 621, 622, 623, 624, 1312, 558, 1313, 550,
	551, 552, 625, 553, 626, 1314, 554, 555, 556, 557,
	0, 559, 560, 1315, 1316, 561, 562, 563, 565, 566,
	564, 567, 1317, 568, 1318, 0, 569, 570, 571, 627,
	628, 629, 1319, 573, 572, 574, 630, 1320, 1321, 1322,
	1323, 575, 576, 631, 577, 578, 579, 2358, 0, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 2355, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 2356,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 2354, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 2357, 0,
	0, 0, 0, 0, 0, 1031, 2353, 0, 993, 1029,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 215, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 217, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 1517, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 209, 575, 576, 631, 577,
	578, 579, 1006, 0, 210, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 1754, 1752, 0, 0,
	1029, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 215, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 217, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 1517, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 209, 575, 576, 631, 577, 578,
	579, 1006, 0, 210, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 1754, 2931, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 215, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 217, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 1517, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 209, 575, 576, 631, 577, 578, 579,
	1006, 0, 210, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 1754, 1752, 0, 0, 1029, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 2486,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 2491, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 2487,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	2488, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 2403, 1029, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 0, 0, 1031, 2401, 0, 2400, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 1031, 2398, 0, 2397, 1029,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 0,
	0, 0, 0, 0, 0, 0, 1031, 2395, 0, 2394,
	1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	0, 0, 0, 0, 0, 0, 0, 1031, 2392, 0,
	1607, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 1606, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 996, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	1010, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 4228, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 1010,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 2272, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 2271,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 1010, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 4011, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 1010, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 3659, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1822, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 3407, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1822, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 0, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 2491, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 0, 0, 1031, 1752, 0, 2496, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 2494, 1029,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 2482,
	1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	2471, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 2469, 1029, 2460, 2467, 1020, 1021, 1017, 1018, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 2463,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 2464, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 2465, 404, 2462, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 2466, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 2461, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 0, 0, 1031,
	0, 0, 2457, 1029, 2460, 2467, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	2463, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 2464, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 2465, 404, 2462, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 2466, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 2461, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	1031, 0, 0, 0, 1029, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 0, 0, 0, 0, 0, 1760, 0, 1031,
	0, 0, 0, 1029, 1047, 1019, 1020, 1021, 1017, 1018,
	1030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 2251, 262,
	263, 0, 0, 0, 0, 0, 1071, 1035, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	1084, 0, 271, 1091, 272, 1090, 0, 1101, 273, 274,
	275, 276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094,
	310, 1088, 1087, 1008, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 1079, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 1014,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 1026, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 1086, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 1099, 1100, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 1036, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 1081, 1082,
	0, 1042, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 1005, 254, 1123, 433,
	434, 1027, 1075, 435, 1089, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 1085, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 1015, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 1083, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 1130,
	534, 535, 536, 537, 1106, 0, 540, 541, 1003, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 1095, 1096, 1097, 1098, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 1025, 554, 555, 556, 557, 0,
	559, 560, 0, 1009, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 1092,
	1129, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1006, 0, 0, 0,
	0, 0, 0, 0, 1002, 0, 0, 0, 0, 0,
	0, 1000, 1001, 0, 0, 0, 0, 0, 0, 0,
	1031, 0, 0, 1612, 1029, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 1004, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 1008, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 1005, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 1003,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 1009, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1006, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 1000, 1001, 0, 0, 0, 0, 0, 0,
	0, 1031, 0, 0, 1547, 1029, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 1000, 1001, 0, 0, 0, 0, 0,
	0, 0, 1031, 0, 0, 1542, 1029, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 0, 0, 0, 0,
	0, 0, 0, 1031, 0, 0, 1533, 1029, 1047, 1019,
	1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 0, 0, 0,
	0, 0, 0, 0, 1031, 0, 0, 1528, 1029, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 1510, 1029,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 559, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 0,
	0, 0, 0, 0, 0, 0, 1031, 0, 0, 1389,
	1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1388, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 559, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	1383, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1382, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 0, 0, 0, 0, 0, 0, 0, 1031, 0,
	0, 1376, 1029, 1047, 1019, 1020, 1021, 1017, 1018, 1030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 1035, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 1084,
	0, 271, 1091, 272, 1090, 0, 1101, 273, 274, 275,
	276, 277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 1094, 310,
	1088, 1087, 1008, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 1079, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 1014, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 1026, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 1086, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 1099, 1100, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 1036, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 1081, 1082, 0,
	1042, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 1005, 254, 1123, 433, 434,
	1027, 1075, 435, 1089, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 1085, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 1015, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 1083, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 1130, 534,
	535, 536, 537, 1106, 0, 540, 541, 1003, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	1095, 1096, 1097, 1098, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 1025, 554, 555, 556, 557, 0, 559,
	560, 0, 1009, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 627, 1092, 1129,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1006, 0, 0, 0, 0,
	0, 0, 0, 1002, 0, 0, 0, 0, 0, 0,
	1000, 1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031,
	0, 0, 0, 1029, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 1071, 1035, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 1084, 0,
	271, 1091, 272, 1090, 0, 1101, 273, 274, 275, 276,
	277, 278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0,
	280, 281, 1077, 0, 1058, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067,
	1063, 1062, 1066, 306, 307, 308, 309, 1094, 310, 1088,
	1087, 1008, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 1079, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 1014, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 1102, 1103,
	1026, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	1086, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 1099, 1100, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 1109, 0, 1036, 356, 0, 357,
	358, 359, 360, 361, 1072, 1073, 1076, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 1114, 370, 1081, 1082, 0, 1042,
	0, 372, 373, 1116, 1074, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 1110, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 1065, 1064,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 1005, 254, 1123, 433, 434, 1027,
	1075, 435, 1089, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 1104, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 1105, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	1085, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 1015, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 1068, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 1083, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 1130, 534, 535,
	536, 537, 1106, 0, 540, 541, 1003, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 1095,
	1096, 1097, 1098, 0, 558, 0, 550, 551, 552, 1107,
	553, 1108, 1025, 554, 555, 556, 557, 0, 559, 560,
	0, 1009, 561, 562, 563, 565, 566, 564, 567, 1069,
	568, 0, 0, 569, 570, 571, 627, 1092, 1129, 0,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 1006, 0, 0, 0, 0, 0,
	0, 0, 1002, 0, 0, 0, 0, 0, 0, 1000,
	1001, 1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0,
	0, 0, 1029, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 1071, 1035, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 1084, 0, 271,
	1091, 272, 1090, 0, 1101, 273, 274, 275, 276, 277,
	278, 1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 4268, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 1094, 310, 1088, 1087,
	1008, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 1079, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 1014, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 1026,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 1086,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 1099, 1100, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 1036, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 1081, 1082, 0, 1042, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075,
	435, 1089, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 1085,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	1015, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 1083, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 1130, 534, 535, 536,
	537, 1106, 0, 540, 541, 1003, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 1095, 1096,
	1097, 1098, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 1025, 554, 555, 556, 557, 0, 4267, 560, 0,
	1009, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 1092, 1129, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1006, 0, 0, 0, 0, 0, 0,
	0, 1002, 0, 0, 0, 0, 0, 0, 1000, 1001,
	1047, 1019, 1020, 1021, 1017, 1018, 1030, 1031, 0, 0,
	0, 1029, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 1071, 1035, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 4266, 1084, 0, 271, 1091,
	272, 1090, 0, 1101, 273, 274, 275, 276, 277, 278,
	1037, 1070, 1004, 279, 1131, 1132, 588, 0, 280, 281,
	1077, 0, 1058, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 4268, 1061, 1059, 1060, 1067, 1063, 1062,
	1066, 306, 307, 308, 309, 1094, 310, 1088, 1087, 1008,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 1079, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 1014, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 1102, 1103, 1026, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 1086, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	1099, 1100, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 1109, 0, 1036, 356, 0, 357, 358, 359,
	360, 361, 1072, 1073, 1076, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 1114, 370, 1081, 1082, 0, 1042, 0, 372,
	373, 1116, 1074, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 1110, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 1065, 1064, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 1005, 254, 1123, 433, 434, 1027, 1075, 435,
	1089, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	1104, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 1105, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 1085, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 1015,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	1068, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 1083, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 1130, 534, 535, 536, 537,
	1106, 0, 540, 541, 1003, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 1095, 1096, 1097,
	1098, 0, 558, 0, 550, 551, 552, 1107, 553, 1108,
	1025, 554, 555, 556, 557, 0, 4267, 560, 0, 1009,
	561, 562, 563, 565, 566, 564, 567, 1069, 568, 0,
	0, 569, 570, 571, 627, 1092, 1129, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1006, 0, 0, 0, 0, 0, 0, 0,
	1002, 0, 0, 0, 0, 0, 0, 1000, 1001, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 1031, 0, 0, 0,
	1029, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 3961, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 3962, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 3960, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 559, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1006, 0, 0, 0, 0, 0, 0, 0, 1002,
	0, 0, 0, 0, 0, 0, 1000, 1001, 1047, 1019,
	1020, 1021, 2898, 2899, 1030, 1031, 0, 0, 0, 1029,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	1071, 1035, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 1084, 0, 271, 1091, 272, 1090,
	0, 1101, 273, 274, 275, 276, 277, 278, 1037, 1070,
	1004, 279, 1131, 1132, 588, 0, 280, 281, 1077, 0,
	1058, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306,
	307, 308, 309, 1094, 310, 1088, 1087, 1008, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 1079, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 1014, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 1102, 1103, 1026, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 1086, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 1099, 1100,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	1109, 0, 1036, 356, 0, 357, 358, 359, 360, 361,
	1072, 1073, 1076, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	1114, 370, 1081, 1082, 0, 1042, 0, 372, 373, 1116,
	1074, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 1110, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 1065, 1064, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	1005, 254, 1123, 433, 434, 1027, 1075, 435, 1089, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 1104, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 1105, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 1085, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 1015, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 1068, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 1083, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 1130, 534, 535, 536, 537, 1106, 0,
	540, 541, 1003, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 1095, 1096, 1097, 1098, 0,
	558, 0, 550, 551, 552, 1107, 553, 1108, 1025, 554,
	555, 556, 557, 0, 559, 560, 0, 1009, 561, 562,
	563, 565, 566, 564, 567, 1069, 568, 0, 0, 569,
	570, 571, 627, 1092, 1129, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1006, 0, 0, 0, 0, 0, 0, 0, 1002, 0,
	0, 0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020,
	1021, 2896, 2897, 1030, 1031, 0, 0, 0, 1029, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 1004,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 1008, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 1005,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 1015, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 1003, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 1009, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1006,
	0, 0, 0, 0, 0, 0, 0, 1002, 0, 0,
	0, 0, 0, 0, 1000, 1001, 1047, 1019, 1020, 1021,
	1017, 1018, 1030, 1031, 0, 0, 0, 1029, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 1035,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 1084, 0, 271, 1091, 272, 1090, 0, 1101,
	273, 274, 275, 276, 277, 278, 1037, 1070, 1004, 279,
	1131, 1132, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 1094, 310, 1088, 1087, 1008, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 1014, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 1026, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 1086, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1099, 1100, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	1036, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 1005, 254,
	1123, 433, 434, 1027, 1075, 435, 1089, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1085, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 1015, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1083, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1130, 534, 535, 536, 537, 1106, 0, 540, 541,
	1003, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1095, 1096, 1097, 1098, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 1025, 554, 555, 556,
	557, 0, 559, 560, 0, 1009, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 1092, 1129, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1006, 0,
	0, 0, 0, 0, 0, 0, 1002, 0, 0, 0,
	0, 0, 0, 2259, 2260, 1047, 1019, 1020, 1021, 1017,
	1018, 1030, 1031, 0, 0, 0, 1029, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 1071, 1035, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 1084, 0, 271, 1091, 272, 1090, 0, 1101, 273,
	274, 275, 276, 277, 278, 1037, 1070, 0, 279, 1131,
	1132, 588, 0, 280, 281, 1077, 0, 1058, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 1061,
	1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309,
	1094, 310, 1088, 1087, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 1079, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	1014, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 1102, 1103, 1026, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 1086, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 1099, 1100, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 1109, 0, 1036,
	356, 0, 357, 358, 359, 360, 361, 1072, 1073, 1076,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 1114, 370, 1081,
	1082, 0, 1042, 0, 372, 373, 1116, 1074, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 1110,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 1065, 1064, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 0, 254, 1123,
	433, 434, 1027, 1075, 435, 1089, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 1104, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 1105, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 1085, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 1015, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 1068, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 1083,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	1130, 534, 535, 536, 537, 1106, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 1095, 1096, 1097, 1098, 0, 558, 0, 550,
	551, 552, 1107, 553, 1108, 1025, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 1069, 568, 0, 0, 569, 570, 571, 627,
	1092, 1129, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1047, 1019, 1020,
	1021, 1017, 1018, 1030, 0, 2479, 0, 0, 0, 0,
	0, 0, 2477, 2478, 255, 257, 256, 258, 259, 260,
	261, 1031, 262, 263, 0, 1029, 0, 0, 0, 1071,
	1035, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 1084, 0, 271, 1091, 272, 1090, 0,
	1101, 273, 274, 275, 276, 277, 278, 1037, 1070, 0,
	279, 1131, 1132, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 1094, 310, 1088, 1087, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	1079, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 1014, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 1026, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 1086, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 1099, 1100, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 1036, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 1081, 1082, 0, 1042, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 0,
	254, 1123, 433, 434, 1027, 1075, 435, 1089, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 1085, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 2891, 2892, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 1083, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 1130, 534, 535, 536, 537, 1106, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 1095, 1096, 1097, 1098, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 1025, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 1092, 1129, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1047,
	1019, 1020, 1021, 1017, 1018, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 1965, 1966, 255, 257, 256, 258,
	259, 260, 261, 1031, 262, 263, 0, 1029, 0, 0,
	0, 1071, 1035, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 0, 1084, 0, 271, 1091, 272,
	1090, 0, 1101, 273, 274, 275, 276, 277, 278, 1037,
	1070, 1004, 279, 1131, 1132, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 4268, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 1094, 310, 1088, 1087, 1008, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 1079, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 1014, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 1026, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 1086, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 1099,
	1100, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 1036, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 1081, 1082, 0, 1042, 0, 372, 373,
	0, 1074, 0, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 1005, 254, 0, 433, 434, 1027, 1075, 435, 1089,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 1085, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 1015, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 1083, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 1130, 534, 535, 536, 537, 1106,
	0, 540, 541, 1003, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 1095, 1096, 1097, 1098,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 1025,
	554, 555, 556, 557, 0, 4267, 560, 0, 1009, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 1092, 1129, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 993, 0, 1169, 0, 0, 1000, 1001, 0, 0,
	0, 0, 0, 0, 0, 1031, 0, 0, 0, 1029,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 1071, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 1070, 0, 279, 586, 587, 588,
	0, 280, 281, 1077, 0, 1058, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 1061, 1059, 1060,
	1067, 1063, 1062, 1066, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 1102,
	1103, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 1109, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1072, 1073, 1076, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 1074, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 1155, 384, 386, 385, 0, 387, 1110, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 1065,
	1064, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 254, 1123, 433, 434,
	0, 1075, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 1161, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 1104, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 1105, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 1163, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 215, 513, 514, 512,
	515, 516, 517, 1068, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 1106, 0, 540, 541, 0, 539, 217,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	1107, 553, 1108, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	1069, 568, 0, 0, 569, 570, 571, 1517, 628, 629,
	0, 573, 572, 574, 630, 0, 1169, 0, 209, 575,
	576, 631, 577, 578, 579, 0, 0, 210, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 1159, 1071, 1846,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 1070, 0, 279,
	586, 587, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1155, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 254,
	1123, 433, 434, 0, 1075, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 1161, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 1163, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 215,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 1106, 0, 540, 541,
	0, 539, 217, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	1517, 628, 629, 0, 573, 572, 574, 630, 0, 0,
	0, 209, 575, 576, 631, 577, 578, 579, 0, 0,
	210, 0, 0, 0, 3075, 0, 1169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1159, 0, 1846, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 1071, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 1070, 0, 279,
	586, 587, 588, 0, 280, 281, 1077, 0, 1058, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 1102, 1103, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 1109, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1072, 1073,
	1076, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 1074, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 1155, 384, 386, 385, 0, 387,
	1110, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 1065, 1064, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 254,
	1123, 433, 434, 0, 1075, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 1161, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 1104, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 1105,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 1163, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 1068, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 1106, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 1107, 553, 1108, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 1069, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 0, 1151,
	0, 1169, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	1159, 0, 1157, 1071, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 1070, 0, 279, 586, 587, 588, 0, 280,
	281, 1077, 0, 1058, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 1061, 1059, 1060, 1067, 1063,
	1062, 1066, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 1102, 1103, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 1109, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 1072, 1073, 1076, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 1074, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 1155,
	384, 386, 385, 0, 387, 1110, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 1065, 1064, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 254, 1123, 433, 434, 0, 1075,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 1161,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 1104, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 1105, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 1163, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 1068, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 1106, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 1107, 553,
	1108, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 1069, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 0, 1169, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 1159, 1071, 1157, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 1070, 0, 279, 586, 587,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 1155, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 254, 1123, 433,
	434, 0, 1075, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 1161, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 1163, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 1106, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 1169, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 1159, 1071,
	1157, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 1070, 0,
	279, 586, 587, 588, 0, 280, 281, 1077, 0, 1058,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 1061, 1059, 1060, 1067, 1063, 1062, 1066, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 1102, 1103, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 1109,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 1072,
	1073, 1076, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 1114,
	370, 603, 604, 0, 605, 0, 372, 373, 1116, 1074,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 1110, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 1065, 1064, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 0,
	254, 1123, 433, 434, 0, 1075, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 1104, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	1105, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 1068, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 1106, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 1107, 553, 1108, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 1069, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1169,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 1071, 0, 3555, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	1070, 0, 279, 586, 587, 588, 0, 280, 281, 1077,
	0, 1058, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 1061, 1059, 1060, 1067, 1063, 1062, 1066,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 1102, 1103, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 1109, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 1072, 1073, 1076, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 1074, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 1110, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 1065, 1064, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 254, 1123, 433, 434, 0, 1075, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 1104,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 1105, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 1163,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 1068,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 1106,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 1107, 553, 1108, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 1069, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 993, 0, 1359, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 1745, 580, 0, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 1325, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 0, 1123, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 215, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	217, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 1517, 628,
	629, 0, 573, 572, 574, 630, 0, 0, 0, 209,
	575, 576, 631, 577, 578, 579, 0, 0, 210, 0,
	0, 0, 1514, 0, 1359, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 1325, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 0, 1123, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 215, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	217, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 1517, 628,
	629, 0, 573, 572, 574, 630, 0, 0, 0, 209,
	575, 576, 631, 577, 578, 579, 1359, 1358, 210, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	179, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 1325, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 606, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 0,
	1123, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1359, 1358,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 1539, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	1325, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 0, 1123, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	1359, 2048, 0, 0, 0, 0, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 3331, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 1111,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 1325, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 1112, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 1113, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 1115, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 1114, 370, 603, 604, 0, 605, 0, 372,
	373, 1116, 606, 1117, 374, 375, 376, 1118, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 2047,
	386, 385, 0, 387, 607, 1119, 388, 389, 1120, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 1121, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	1122, 423, 0, 0, 1123, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 1124, 446, 1125,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 1126, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 1127, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1359, 1358, 0, 0, 0, 0, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 1539, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 1111, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 1325, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 1112, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 1113,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 1115, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 1114, 370, 603, 604, 0, 605,
	0, 372, 373, 1116, 606, 1117, 374, 375, 376, 1118,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 1119, 388, 389,
	1120, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 1121,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 1122, 423, 0, 0, 1123, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 1124,
	446, 1125, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 1126, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 1127,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1169, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 1071, 0, 1523, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 1070, 0, 279, 586, 587,
	588, 0, 280, 281, 1077, 0, 1058, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 1061, 1059,
	1060, 1067, 1063, 1062, 1066, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	1102, 1103, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 1109, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1072, 1073, 1076, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 1074, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 1110, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	1065, 1064, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 254, 1123, 433,
	434, 0, 1075, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 1104, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 1105, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1068, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 1106, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 1107, 553, 1108, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 1069, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 993, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 215, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 217, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 1517, 628, 629, 0, 573, 572, 574, 630,
	249, 0, 0, 209, 575, 576, 631, 577, 578, 579,
	0, 0, 210, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 179, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 249, 2812, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 1860, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 4410, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 249, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 3272, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 0, 249, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 1459, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 2782, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 3432, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 839, 0, 719, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 2152, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 726, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	837, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	724, 542, 543, 544, 545, 725, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 717, 0, 719,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 729, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 726, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 724, 542, 543, 544, 545,
	725, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 1897, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 0, 1903, 0, 271, 1893, 272, 1909, 0, 1916,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	1919, 1920, 0, 0, 280, 281, 0, 0, 1325, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 1094, 310, 1907, 1906, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 1079,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 0, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 1905, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 1914, 1915, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 0, 0,
	0, 356, 0, 357, 358, 359, 360, 361, 0, 0,
	0, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 1114, 370,
	1900, 1901, 0, 1896, 0, 372, 373, 1116, 0, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	0, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 0,
	1123, 433, 434, 0, 0, 435, 1908, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 0, 1124, 446, 1125, 0, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 1890, 459, 460, 461, 1891, 462, 463, 464, 0,
	465, 0, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 1904, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 0, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	1902, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 1918, 534, 535, 536, 537, 0, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 1910, 1911, 1912, 1913, 0, 558, 0,
	550, 551, 552, 0, 553, 0, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	0, 1894, 1917, 0, 573, 572, 574, 719, 0, 0,
	0, 0, 575, 576, 0, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 1884, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	726, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 724, 542, 543, 544, 545, 725, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 719,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 729, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 726, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 2192, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 2193, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 724, 542, 543, 544, 545,
	725, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1927, 0, 1359, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 729, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 1325, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 0, 0, 0,
	0, 0, 0, 1930, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 0, 1123, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 1931, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	719, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 726, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 1923, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 724, 542, 543, 544,
	545, 725, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 1922, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 719, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 729,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 726, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	1876, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 724, 542,
	543, 544, 545, 725, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 1875, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1359, 1358, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 729, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 1111, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 1325, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 1112, 304, 305, 0, 0,
	0, 0, 0, 0, 1930, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 1113, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	1115, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 1114, 370, 603, 604,
	0, 605, 0, 372, 373, 1116, 606, 1117, 374, 375,
	376, 1118, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 1119,
	388, 389, 1120, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 1121, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 1122, 423, 0, 0, 1123, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 1124, 446, 1125, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 1126, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 1931, 518, 519, 502, 503, 520,
	521, 1127, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 1359, 1358, 0, 0,
	0, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 1111, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 1325, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 1112, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 1113, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 1115, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 1114, 370,
	603, 604, 0, 605, 0, 372, 373, 1116, 606, 1117,
	374, 375, 376, 1118, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 1119, 388, 389, 1120, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 1121, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 1122, 423, 0, 0,
	1123, 433, 434, 3605, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 1124, 446, 1125, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	1126, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 1127, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 1359, 1358,
	0, 0, 0, 0, 1356, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	1325, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 0, 1123, 433, 434, 3244, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1567, 0, 1359,
	1358, 0, 0, 0, 0, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 1325, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 1566, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 0, 1123, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 1565, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 1564, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 1507, 0, 1359, 1358, 0, 0, 0, 0, 1356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 1111, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 1325, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 1112, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	1113, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 1506, 601, 602, 436, 1115,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 1114, 370, 603, 604, 0,
	605, 0, 372, 373, 1116, 606, 1117, 374, 375, 376,
	1118, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 1119, 388,
	389, 1120, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	1121, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 1122, 423, 0, 0, 1123, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	1124, 446, 1125, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 1126, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	1127, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 1434, 0, 1359, 1358, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 1325,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 1433,
	601, 602, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 1114,
	370, 603, 604, 0, 605, 0, 372, 373, 1116, 606,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 0,
	0, 1123, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 1394,
	0, 1359, 1358, 0, 0, 0, 0, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 1325, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 606, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 0, 1123, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 1354, 0, 1359, 1358, 0, 0, 0,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 1111, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 1325, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 1112, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 1113, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 1353, 601, 602,
	436, 1115, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 1114, 370, 603,
	604, 0, 605, 0, 372, 373, 1116, 606, 1117, 374,
	375, 376, 1118, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	1119, 388, 389, 1120, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 1121, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 1122, 423, 0, 0, 1123,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 1124, 446, 1125, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 1126,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 1127, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 1359, 1358, 0,
	0, 0, 0, 1356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 1111, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 1325,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 1112, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 1113, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 1115, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 1114,
	370, 603, 604, 0, 605, 0, 372, 373, 1116, 606,
	1117, 374, 375, 376, 1118, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 1119, 388, 389, 1120, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 1121, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 1122, 423, 0,
	0, 1123, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 1124, 446, 1125, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 1126, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 1127, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 1359,
	1358, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 1111, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 1325, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	1112, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 1938, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 1113, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 1115, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 1114, 370, 603, 604, 0, 605, 0, 372, 373,
	1116, 606, 1117, 374, 375, 376, 1118, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 1119, 388, 389, 1120, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 1121, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 1122,
	423, 0, 0, 1123, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 1124, 446, 1125, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 1126, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 1127, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 1359, 1358, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	1111, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 1325, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 1112, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 1113, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 1115, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 1114, 370, 603, 604, 0, 605, 0,
	372, 373, 1116, 606, 1117, 374, 375, 376, 1118, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 1119, 388, 389, 1120,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 1121, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 1122, 423, 0, 0, 1123, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 1124, 446,
	1125, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 1126, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 1127, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 1359, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 1111, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	1325, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 1112,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 1113, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 1115, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	1114, 370, 603, 604, 0, 605, 0, 372, 373, 1116,
	606, 1117, 374, 375, 376, 1118, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 1119, 388, 389, 1120, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 1121, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 1122, 423,
	0, 0, 1123, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 1124, 446, 1125, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 1126, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 1127, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 2618, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 2615, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 2622, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 2825, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	2621, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 2822, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 2824, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 2821, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 2620, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 2823, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 2618,
	280, 281, 589, 0, 0, 2612, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	2615, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 2622, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 2621, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 2611, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	2620, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 2619, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1634, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	1637, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 1635, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 1636, 572, 574, 630, 1329, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 1331, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 1161, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 1326, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1328, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 1161, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1232, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1234, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 1161, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	663, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 662, 260, 261, 652, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 655,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 656, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 657, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 651, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	652, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 655, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 656, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 657,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 1161, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	3207, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 2753, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 2752, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 2165, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 2080, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 2086, 0, 249,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 252, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 2085, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 253, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 254, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 0, 573, 572, 574,
	630, 2073, 0, 249, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 2075, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 2044, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 1161, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 1499, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1498, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1490, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1489, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	1487, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 1486, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1482, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1481, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 1437, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 252,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 253, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 254, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 1347, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1340, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1342, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	633, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 240, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 252, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 253, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 254,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 252, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	253, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 254, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 655, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	656, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 657, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	2200, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 252, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 253, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	254, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 2198, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 252, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 253, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 254, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 249, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 2196, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	252, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 253, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 254, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 252, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	2130, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 253, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 254, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 252, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 2124, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 253, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 254, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 252, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 2092, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 253,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 254, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 826, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 825, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 824, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 2825, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 3867, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 686, 0, 249, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 1202, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 1200, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 687, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 683, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 1203, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 682, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 686,
	0, 249, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	1202, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 1200, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 600, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 687, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 683,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 1203,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 682, 622,
	623, 624, 0, 558, 0, 550, 1201, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 0, 573,
	572, 574, 630, 642, 0, 249, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 641,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 640, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 0, 573, 572, 574, 630, 249, 2812, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 0,
	0, 0, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 600,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 0, 573, 572, 574, 630, 249,
	3877, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 0, 0, 0, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 249, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 3579, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 2530, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	0, 573, 572, 574, 630, 249, 2812, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 0, 0, 0,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 600, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 2809, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 2175, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 2163, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 686, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 676,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 687, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 683, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 1522, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 682, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 1503, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1502, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1496, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	1495, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	1443, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 1442, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 1426, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1424, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 1420, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 1398, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 1396, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 1350, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	1334, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 1182, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 0, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	518, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 249, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	692, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 0, 573, 572, 574, 630, 686, 0,
	249, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 676,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 674,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 675, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 687, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 677,
	497, 0, 498, 499, 505, 506, 500, 501, 683, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 678, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 682, 622, 623,
	624, 0, 558, 0, 550, 680, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 668, 0, 249, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 600, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 669, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 0, 573, 572, 574, 630, 665, 0, 249, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	600, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 0, 573, 572, 574, 630,
	659, 0, 249, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 505, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 0,
	573, 572, 574, 630, 637, 0, 249, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 600, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 478, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 356, 0, 357, 358, 359,
	360, 361, 3290, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 451, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 473, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	497, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 249, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 0, 0, 255, 257, 256, 258, 259, 260,
	261, 0, 262, 263, 0, 0, 0, 0, 0, 580,
	0, 0, 0, 0, 264, 265, 0, 266, 267, 268,
	269, 270, 581, 582, 0, 271, 583, 272, 584, 0,
	585, 273, 274, 275, 276, 277, 278, 0, 0, 0,
	279, 586, 587, 588, 0, 280, 281, 589, 0, 0,
	0, 282, 283, 284, 285, 286, 287, 288, 0, 0,
	290, 291, 292, 289, 293, 0, 294, 0, 295, 296,
	297, 298, 299, 300, 0, 301, 302, 303, 0, 304,
	305, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	308, 309, 0, 310, 590, 591, 0, 314, 311, 312,
	0, 315, 313, 0, 316, 317, 318, 0, 0, 319,
	320, 321, 0, 322, 323, 0, 324, 325, 326, 0,
	327, 328, 592, 329, 330, 331, 333, 335, 332, 336,
	337, 338, 339, 593, 594, 0, 0, 0, 0, 0,
	0, 0, 340, 341, 342, 595, 0, 0, 0, 343,
	0, 344, 0, 0, 0, 345, 346, 596, 597, 347,
	348, 349, 350, 351, 352, 353, 354, 0, 355, 598,
	0, 599, 356, 0, 357, 358, 359, 360, 361, 3238,
	601, 602, 436, 0, 362, 363, 0, 364, 365, 366,
	367, 0, 0, 0, 0, 368, 369, 371, 0, 0,
	370, 603, 604, 0, 605, 0, 372, 373, 0, 606,
	0, 374, 375, 376, 0, 377, 0, 0, 0, 378,
	379, 380, 381, 382, 383, 0, 384, 386, 385, 0,
	387, 607, 0, 388, 389, 0, 0, 390, 0, 0,
	0, 391, 392, 0, 0, 393, 394, 395, 396, 0,
	397, 398, 400, 403, 399, 401, 402, 404, 417, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 414, 415,
	416, 419, 0, 418, 0, 420, 421, 422, 427, 429,
	430, 425, 426, 428, 431, 432, 424, 0, 423, 0,
	0, 0, 433, 434, 0, 608, 435, 609, 437, 438,
	0, 0, 439, 0, 0, 0, 441, 442, 443, 0,
	0, 444, 445, 610, 0, 446, 0, 611, 447, 448,
	440, 449, 450, 451, 452, 453, 454, 455, 456, 0,
	457, 458, 612, 459, 460, 461, 613, 462, 463, 464,
	614, 465, 615, 466, 467, 0, 468, 0, 469, 470,
	471, 472, 473, 474, 475, 616, 476, 478, 477, 479,
	0, 480, 0, 0, 0, 0, 0, 481, 0, 483,
	484, 485, 482, 486, 487, 488, 489, 0, 490, 491,
	492, 0, 493, 494, 495, 496, 617, 497, 0, 498,
	499, 505, 506, 500, 501, 507, 508, 509, 510, 511,
	0, 513, 514, 512, 515, 516, 517, 0, 518, 519,
	502, 503, 520, 521, 0, 522, 523, 524, 525, 526,
	527, 618, 0, 528, 0, 529, 530, 531, 532, 504,
	533, 538, 619, 534, 535, 536, 537, 620, 0, 540,
	541, 0, 539, 0, 542, 543, 544, 545, 546, 547,
	334, 548, 0, 549, 621, 622, 623, 624, 0, 558,
	0, 550, 551, 552, 625, 553, 626, 0, 554, 555,
	556, 557, 0, 559, 560, 0, 0, 561, 562, 563,
	565, 566, 564, 567, 0, 568, 0, 0, 569, 570,
	571, 627, 628, 629, 249, 573, 572, 574, 630, 0,
	0, 0, 0, 575, 576, 631, 577, 578, 579, 0,
	0, 255, 257, 256, 258, 259, 260, 261, 0, 262,
	263, 0, 0, 0, 0, 0, 580, 0, 0, 0,
	0, 264, 265, 0, 266, 267, 268, 269, 270, 581,
	582, 0, 271, 583, 272, 584, 0, 585, 273, 274,
	275, 276, 277, 278, 0, 0, 0, 279, 586, 587,
	588, 0, 280, 281, 589, 0, 0, 0, 282, 283,
	284, 285, 286, 287, 288, 0, 0, 290, 291, 292,
	289, 293, 0, 294, 0, 295, 296, 297, 298, 299,
	300, 0, 301, 302, 303, 0, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 308, 309, 0,
	310, 590, 591, 0, 314, 311, 312, 0, 315, 313,
	0, 316, 317, 318, 0, 0, 319, 320, 321, 0,
	322, 323, 0, 324, 325, 326, 0, 327, 328, 592,
	329, 330, 331, 333, 335, 332, 336, 337, 338, 339,
	593, 594, 0, 0, 0, 0, 0, 0, 0, 340,
	341, 342, 595, 0, 0, 0, 343, 0, 344, 0,
	0, 0, 345, 346, 596, 597, 347, 348, 349, 350,
	351, 352, 353, 354, 0, 355, 598, 0, 599, 356,
	0, 357, 358, 359, 360, 361, 3179, 601, 602, 436,
	0, 362, 363, 0, 364, 365, 366, 367, 0, 0,
	0, 0, 368, 369, 371, 0, 0, 370, 603, 604,
	0, 605, 0, 372, 373, 0, 606, 0, 374, 375,
	376, 0, 377, 0, 0, 0, 378, 379, 380, 381,
	382, 383, 0, 384, 386, 385, 0, 387, 607, 0,
	388, 389, 0, 0, 390, 0, 0, 0, 391, 392,
	0, 0, 393, 394, 395, 396, 0, 397, 398, 400,
	403, 399, 401, 402, 404, 417, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 414, 415, 416, 419, 0,
	418, 0, 420, 421, 422, 427, 429, 430, 425, 426,
	428, 431, 432, 424, 0, 423, 0, 0, 0, 433,
	434, 0, 608, 435, 609, 437, 438, 0, 0, 439,
	0, 0, 0, 441, 442, 443, 0, 0, 444, 445,
	610, 0, 446, 0, 611, 447, 448, 440, 449, 450,
	451, 452, 453, 454, 455, 456, 0, 457, 458, 612,
	459, 460, 461, 613, 462, 463, 464, 614, 465, 615,
	466, 467, 0, 468, 0, 469, 470, 471, 472, 473,
	474, 475, 616, 476, 478, 477, 479, 0, 480, 0,
	0, 0, 0, 0, 481, 0, 483, 484, 485, 482,
	486, 487, 488, 489, 0, 490, 491, 492, 0, 493,
	494, 495, 496, 617, 497, 0, 498, 499, 505, 506,
	500, 501, 507, 508, 509, 510, 511, 0, 513, 514,
	512, 515, 516, 517, 0, 518, 519, 502, 503, 520,
	521, 0, 522, 523, 524, 525, 526, 527, 618, 0,
	528, 0, 529, 530, 531, 532, 504, 533, 538, 619,
	534, 535, 536, 537, 620, 0, 540, 541, 0, 539,
	0, 542, 543, 544, 545, 546, 547, 334, 548, 0,
	549, 621, 622, 623, 624, 0, 558, 0, 550, 551,
	552, 625, 553, 626, 0, 554, 555, 556, 557, 0,
	559, 560, 0, 0, 561, 562, 563, 565, 566, 564,
	567, 0, 568, 0, 0, 569, 570, 571, 627, 628,
	629, 249, 573, 572, 574, 630, 0, 0, 0, 0,
	575, 576, 631, 577, 578, 579, 0, 0, 255, 257,
	256, 258, 259, 260, 261, 0, 262, 263, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 264, 265,
	0, 266, 267, 268, 269, 270, 581, 582, 0, 271,
	583, 272, 584, 0, 585, 273, 274, 275, 276, 277,
	278, 0, 0, 0, 279, 586, 587, 588, 0, 280,
	281, 589, 0, 0, 0, 282, 283, 284, 285, 286,
	287, 288, 0, 0, 290, 291, 292, 289, 293, 0,
	294, 0, 295, 296, 297, 298, 299, 300, 0, 301,
	302, 303, 0, 304, 305, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 308, 309, 0, 310, 590, 591,
	0, 314, 311, 312, 0, 315, 313, 0, 316, 317,
	318, 0, 0, 319, 320, 321, 0, 322, 323, 0,
	324, 325, 326, 0, 327, 328, 592, 329, 330, 331,
	333, 335, 332, 336, 337, 338, 339, 593, 594, 0,
	0, 0, 0, 0, 0, 0, 340, 341, 342, 595,
	0, 0, 0, 343, 0, 344, 0, 0, 0, 345,
	346, 596, 597, 347, 348, 349, 350, 351, 352, 353,
	354, 0, 355, 598, 0, 599, 356, 0, 357, 358,
	359, 360, 361, 3177, 601, 602, 436, 0, 362, 363,
	0, 364, 365, 366, 367, 0, 0, 0, 0, 368,
	369, 371, 0, 0, 370, 603, 604, 0, 605, 0,
	372, 373, 0, 606, 0, 374, 375, 376, 0, 377,
	0, 0, 0, 378, 379, 380, 381, 382, 383, 0,
	384, 386, 385, 0, 387, 607, 0, 388, 389, 0,
	0, 390, 0, 0, 0, 391, 392, 0, 0, 393,
	394, 395, 396, 0, 397, 398, 400, 403, 399, 401,
	402, 404, 417, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 414, 415, 416, 419, 0, 418, 0, 420,
	421, 422, 427, 429, 430, 425, 426, 428, 431, 432,
	424, 0, 423, 0, 0, 0, 433, 434, 0, 608,
	435, 609, 437, 438, 0, 0, 439, 0, 0, 0,
	441, 442, 443, 0, 0, 444, 445, 610, 0, 446,
	0, 611, 447, 448, 440, 449, 450, 451, 452, 453,
	454, 455, 456, 0, 457, 458, 612, 459, 460, 461,
	613, 462, 463, 464, 614, 465, 615, 466, 467, 0,
	468, 0, 469, 470, 471, 472, 473, 474, 475, 616,
	476, 478, 477, 479, 0, 480, 0, 0, 0, 0,
	0, 481, 0, 483, 484, 485, 482, 486, 487, 488,
	489, 0, 490, 491, 492, 0, 493, 494, 495, 496,
	617, 497, 0, 498, 499, 505, 506, 500, 501, 507,
	508, 509, 510, 511, 0, 513, 514, 512, 515, 516,
	517, 0, 518, 519, 502, 503, 520, 521, 0, 522,
	523, 524, 525, 526, 527, 618, 0, 528, 0, 529,
	530, 531, 532, 504, 533, 538, 619, 534, 535, 536,
	537, 620, 0, 540, 541, 0, 539, 0, 542, 543,
	544, 545, 546, 547, 334, 548, 0, 549, 621, 622,
	623, 624, 0, 558, 0, 550, 551, 552, 625, 553,
	626, 0, 554, 555, 556, 557, 0, 559, 560, 0,
	0, 561, 562, 563, 565, 566, 564, 567, 0, 568,
	0, 0, 569, 570, 571, 627, 628, 629, 249, 573,
	572, 574, 630, 0, 0, 0, 0, 575, 576, 631,
	577, 578, 579, 0, 0, 255, 257, 256, 258, 259,
	260, 261, 0, 262, 263, 0, 0, 0, 0, 0,
	580, 0, 0, 0, 0, 264, 265, 0, 266, 267,
	268, 269, 270, 581, 582, 0, 271, 583, 272, 584,
	0, 585, 273, 274, 275, 276, 277, 278, 0, 0,
	0, 279, 586, 587, 588, 0, 280, 281, 589, 0,
	0, 0, 282, 283, 284, 285, 286, 287, 288, 0,
	0, 290, 291, 292, 289, 293, 0, 294, 0, 295,
	296, 297, 298, 299, 300, 0, 301, 302, 303, 0,
	304, 305, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 308, 309, 0, 310, 590, 591, 0, 314, 311,
	312, 0, 315, 313, 0, 316, 317, 318, 0, 0,
	319, 320, 321, 0, 322, 323, 0, 324, 325, 326,
	0, 327, 328, 592, 329, 330, 331, 333, 335, 332,
	336, 337, 338, 339, 593, 594, 0, 0, 0, 0,
	0, 0, 0, 340, 341, 342, 595, 0, 0, 0,
	343, 0, 344, 0, 0, 0, 345, 346, 596, 597,
	347, 348, 349, 350, 351, 352, 353, 354, 0, 355,
	598, 0, 599, 356, 0, 357, 358, 359, 360, 361,
	3163, 601, 602, 436, 0, 362, 363, 0, 364, 365,
	366, 367, 0, 0, 0, 0, 368, 369, 371, 0,
	0, 370, 603, 604, 0, 605, 0, 372, 373, 0,
	606, 0, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 379, 380, 381, 382, 383, 0, 384, 386, 385,
	0, 387, 607, 0, 388, 389, 0, 0, 390, 0,
	0, 0, 391, 392, 0, 0, 393, 394, 395, 396,
	0, 397, 398, 400, 403, 399, 401, 402, 404, 417,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 419, 0, 418, 0, 420, 421, 422, 427,
	429, 430, 425, 426, 428, 431, 432, 424, 0, 423,
	0, 0, 0, 433, 434, 0, 608, 435, 609, 437,
	438, 0, 0, 439, 0, 0, 0, 441, 442, 443,
	0, 0, 444, 445, 610, 0, 446, 0, 611, 447,
	448, 440, 449, 450, 451, 452, 453, 454, 455, 456,
	0, 457, 458, 612, 459, 460, 461, 613, 462, 463,
	464, 614, 465, 615, 466, 467, 0, 468, 0, 469,
	470, 471, 472, 473, 474, 475, 616, 476, 478, 477,
	479, 0, 480, 0, 0, 0, 0, 0, 481, 0,
	483, 484, 485, 482, 486, 487, 488, 489, 0, 490,
	491, 492, 0, 493, 494, 495, 496, 617, 497, 0,
	498, 499, 505, 506, 500, 501, 507, 508, 509, 510,
	511, 0, 513, 514, 512, 515, 516, 517, 0, 518,
	519, 502, 503, 520, 521, 0, 522, 523, 524, 525,
	526, 527, 618, 0, 528, 0, 529, 530, 531, 532,
	504, 533, 538, 619, 534, 535, 536, 537, 620, 0,
	540, 541, 0, 539, 0, 542, 543, 544, 545, 546,
	547, 334, 548, 0, 549, 621, 622, 623, 624, 0,
	558, 0, 550, 551, 552, 625, 553, 626, 0, 554,
	555, 556, 557, 0, 559, 560, 0, 0, 561, 562,
	563, 565, 566, 564, 567, 0, 568, 0, 0, 569,
	570, 571, 627, 628, 629, 249, 573, 572, 574, 630,
	0, 0, 0, 0, 575, 576, 631, 577, 578, 579,
	0, 0, 255, 257, 256, 258, 259, 260, 261, 0,
	262, 263, 0, 0, 0, 0, 0, 580, 0, 0,
	0, 0, 264, 265, 0, 266, 267, 268, 269, 270,
	581, 582, 0, 271, 583, 272, 584, 0, 585, 273,
	274, 275, 276, 277, 278, 0, 0, 0, 279, 586,
	587, 588, 0, 280, 281, 589, 0, 0, 0, 282,
	283, 284, 285, 286, 287, 288, 0, 0, 290, 291,
	292, 289, 293, 0, 294, 0, 295, 296, 297, 298,
	299, 300, 0, 301, 302, 303, 0, 304, 305, 0,
	0, 0, 0, 0, 0, 0, 306, 307, 308, 309,
	0, 310, 590, 591, 0, 314, 311, 312, 0, 315,
	313, 0, 316, 317, 318, 0, 0, 319, 320, 321,
	0, 322, 323, 0, 324, 325, 326, 0, 327, 328,
	592, 329, 330, 331, 333, 335, 332, 336, 337, 338,
	339, 593, 594, 0, 0, 0, 0, 0, 0, 0,
	340, 341, 342, 595, 0, 0, 0, 343, 0, 344,
	0, 0, 0, 345, 346, 596, 597, 347, 348, 349,
	350, 351, 352, 353, 354, 0, 355, 598, 0, 599,
	356, 0, 357, 358, 359, 360, 361, 2762, 601, 602,
	436, 0, 362, 363, 0, 364, 365, 366, 367, 0,
	0, 0, 0, 368, 369, 371, 0, 0, 370, 603,
	604, 0, 605, 0, 372, 373, 0, 606, 0, 374,
	375, 376, 0, 377, 0, 0, 0, 378, 379, 380,
	381, 382, 383, 0, 384, 386, 385, 0, 387, 607,
	0, 388, 389, 0, 0, 390, 0, 0, 0, 391,
	392, 0, 0, 393, 394, 395, 396, 0, 397, 398,
	400, 403, 399, 401, 402, 404, 417, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 414, 415, 416, 419,
	0, 418, 0, 420, 421, 422, 427, 429, 430, 425,
	426, 428, 431, 432, 424, 0, 423, 0, 0, 0,
	433, 434, 0, 608, 435, 609, 437, 438, 0, 0,
	439, 0, 0, 0, 441, 442, 443, 0, 0, 444,
	445, 610, 0, 446, 0, 611, 447, 448, 440, 449,
	450, 451, 452, 453, 454, 455, 456, 0, 457, 458,
	612, 459, 460, 461, 613, 462, 463, 464, 614, 465,
	615, 466, 467, 0, 468, 0, 469, 470, 471, 472,
	473, 474, 475, 616, 476, 478, 477, 479, 0, 480,
	0, 0, 0, 0, 0, 481, 0, 483, 484, 485,
	482, 486, 487, 488, 489, 0, 490, 491, 492, 0,
	493, 494, 495, 496, 617, 497, 0, 498, 499, 505,
	506, 500, 501, 507, 508, 509, 510, 511, 0, 513,
	514, 512, 515, 516, 517, 0, 518, 519, 502, 503,
	520, 521, 0, 522, 523, 524, 525, 526, 527, 618,
	0, 528, 0, 529, 530, 531, 532, 504, 533, 538,
	619, 534, 535, 536, 537, 620, 0, 540, 541, 0,
	539, 0, 542, 543, 544, 545, 546, 547, 334, 548,
	0, 549, 621, 622, 623, 624, 0, 558, 0, 550,
	551, 552, 625, 553, 626, 0, 554, 555, 556, 557,
	0, 559, 560, 0, 0, 561, 562, 563, 565, 566,
	564, 567, 0, 568, 0, 0, 569, 570, 571, 627,
	628, 629, 249, 573, 572, 574, 630, 0, 0, 0,
	0, 575, 576, 631, 577, 578, 579, 0, 0, 255,
	257, 256, 258, 259, 260, 261, 0, 262, 263, 0,
	0, 0, 0, 0, 580, 0, 0, 0, 0, 264,
	265, 0, 266, 267, 268, 269, 270, 581, 582, 0,
	271, 583, 272, 584, 0, 585, 273, 274, 275, 276,
	277, 278, 0, 0, 0, 279, 586, 587, 588, 0,
	280, 281, 589, 0, 0, 0, 282, 283, 284, 285,
	286, 287, 288, 0, 0, 290, 291, 292, 289, 293,
	0, 294, 0, 295, 296, 297, 298, 299, 300, 0,
	301, 302, 303, 0, 304, 305, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 308, 309, 0, 310, 590,
	591, 0, 314, 311, 312, 0, 315, 313, 0, 316,
	317, 318, 0, 0, 319, 320, 321, 0, 322, 323,
	0, 324, 325, 326, 0, 327, 328, 592, 329, 330,
	331, 333, 335, 332, 336, 337, 338, 339, 593, 594,
	0, 0, 0, 0, 0, 0, 0, 340, 341, 342,
	595, 0, 0, 0, 343, 0, 344, 0, 0, 0,
	345, 346, 596, 597, 347, 348, 349, 350, 351, 352,
	353, 354, 0, 355, 598, 0, 599, 356, 0, 357,
	358, 359, 360, 361, 600, 601, 602, 436, 0, 362,
	363, 0, 364, 365, 366, 367, 0, 0, 0, 0,
	368, 369, 371, 0, 0, 370, 603, 604, 0, 605,
	0, 372, 373, 0, 606, 0, 374, 375, 376, 0,
	377, 0, 0, 0, 378, 379, 380, 381, 382, 383,
	0, 384, 386, 385, 0, 387, 607, 0, 388, 389,
	0, 0, 390, 0, 0, 0, 391, 392, 0, 0,
	393, 394, 395, 396, 0, 397, 398, 400, 403, 399,
	401, 402, 404, 417, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 419, 0, 418, 0,
	420, 421, 422, 427, 429, 430, 425, 426, 428, 431,
	432, 424, 0, 423, 0, 0, 0, 433, 434, 0,
	608, 435, 609, 437, 438, 0, 0, 439, 0, 0,
	0, 441, 442, 443, 0, 0, 444, 445, 610, 0,
	446, 0, 611, 447, 448, 440, 449, 450, 451, 452,
	453, 454, 455, 456, 0, 457, 458, 612, 459, 460,
	461, 613, 462, 463, 464, 614, 465, 615, 466, 467,
	0, 468, 0, 469, 470, 471, 472, 473, 474, 475,
	616, 476, 478, 477, 479, 0, 480, 0, 0, 0,
	0, 0, 481, 0, 483, 484, 485, 482, 486, 487,
	488, 489, 0, 490, 491, 492, 0, 493, 494, 495,
	496, 617, 497, 0, 498, 499, 669, 506, 500, 501,
	507, 508, 509, 510, 511, 0, 513, 514, 512, 515,
	516, 517, 0, 518, 519, 502, 503, 520, 521, 0,
	522, 523, 524, 525, 526, 527, 618, 0, 528, 0,
	529, 530, 531, 532, 504, 533, 538, 619, 534, 535,
	536, 537, 620, 0, 540, 541, 0, 539, 0, 542,
	543, 544, 545, 546, 547, 334, 548, 0, 549, 621,
	622, 623, 624, 0, 558, 0, 550, 551, 552, 625,
	553, 626, 0, 554, 555, 556, 557, 0, 559, 560,
	0, 0, 561, 562, 563, 565, 566, 564, 567, 0,
	568, 0, 0, 569, 570, 571, 627, 628, 629, 249,
	573, 572, 574, 630, 0, 0, 0, 0, 575, 576,
	631, 577, 578, 579, 0, 0, 255, 257, 256, 258,
	259, 260, 261, 0, 262, 263, 0, 0, 0, 0,
	0, 580, 0, 2109, 0, 0, 264, 265, 0, 266,
	267, 268, 269, 270, 581, 582, 0, 271, 583, 272,
	584, 0, 585, 273, 274, 275, 276, 277, 278, 0,
	0, 0, 279, 586, 587, 588, 0, 280, 281, 589,
	0, 0, 0, 282, 283, 284, 285, 286, 287, 288,
	0, 0, 290, 291, 292, 289, 293, 0, 294, 0,
	295, 296, 297, 298, 299, 300, 0, 301, 302, 303,
	0, 304, 305, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 308, 309, 0, 310, 590, 591, 0, 314,
	311, 312, 0, 315, 313, 0, 316, 317, 318, 0,
	0, 319, 320, 321, 0, 322, 323, 0, 324, 325,
	326, 0, 327, 328, 592, 329, 330, 331, 333, 335,
	332, 336, 337, 338, 339, 593, 594, 0, 0, 0,
	0, 0, 0, 0, 340, 341, 342, 595, 0, 0,
	0, 343, 0, 344, 0, 0, 0, 345, 346, 596,
	597, 347, 348, 349, 350, 351, 352, 353, 354, 0,
	355, 598, 0, 599, 356, 0, 357, 358, 359, 360,
	361, 600, 601, 602, 436, 0, 362, 363, 0, 364,
	365, 366, 367, 0, 0, 0, 0, 368, 369, 371,
	0, 0, 370, 603, 604, 0, 605, 0, 372, 373,
	0, 606, 0, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 379, 380, 381, 382, 383, 0, 384, 386,
	385, 0, 387, 607, 0, 388, 389, 0, 0, 390,
	0, 0, 0, 391, 392, 0, 0, 393, 394, 395,
	396, 0, 397, 398, 400, 403, 399, 401, 402, 404,
	417, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	414, 415, 416, 419, 0, 418, 0, 420, 421, 422,
	427, 429, 430, 425, 426, 428, 431, 432, 424, 0,
	423, 0, 0, 0, 433, 434, 0, 608, 435, 609,
	437, 438, 0, 0, 439, 0, 0, 0, 441, 442,
	443, 0, 0, 444, 445, 610, 0, 446, 0, 611,
	447, 448, 440, 449, 450, 451, 452, 453, 454, 455,
	456, 0, 457, 458, 612, 459, 460, 461, 613, 462,
	463, 464, 614, 465, 615, 466, 467, 0, 468, 0,
	469, 470, 471, 472, 473, 474, 475, 616, 476, 478,
	477, 479, 0, 480, 0, 0, 0, 0, 0, 481,
	0, 483, 484, 485, 482, 486, 487, 488, 489, 0,
	490, 491, 492, 0, 493, 494, 495, 496, 617, 497,
	0, 498, 499, 505, 506, 500, 501, 507, 508, 509,
	510, 511, 0, 513, 514, 512, 515, 516, 517, 0,
	0, 519, 502, 503, 520, 521, 0, 522, 523, 524,
	525, 526, 527, 618, 0, 528, 0, 529, 530, 531,
	532, 504, 533, 538, 619, 534, 535, 536, 537, 620,
	0, 540, 541, 0, 539, 0, 542, 543, 544, 545,
	546, 547, 334, 548, 0, 549, 621, 622, 623, 624,
	0, 558, 0, 550, 551, 552, 625, 553, 626, 0,
	554, 555, 556, 557, 0, 559, 560, 0, 0, 561,
	562, 563, 565, 566, 564, 567, 0, 568, 0, 0,
	569, 570, 571, 627, 628, 629, 249, 573, 572, 574,
	630, 0, 0, 0, 0, 575, 576, 631, 577, 578,
	579, 0, 0, 255, 257, 256, 258, 259, 260, 261,
	0, 262, 263, 0, 0, 0, 0, 0, 580, 0,
	0, 0, 0, 264, 265, 0, 266, 267, 268, 269,
	270, 581, 582, 0, 271, 583, 272, 584, 0, 585,
	273, 274, 275, 276, 277, 278, 0, 0, 0, 279,
	586, 587, 588, 0, 280, 281, 589, 0, 0, 0,
	282, 283, 284, 285, 286, 287, 288, 0, 0, 290,
	291, 292, 289, 293, 0, 294, 0, 295, 296, 297,
	298, 299, 300, 0, 301, 302, 303, 0, 304, 305,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 308,
	309, 0, 310, 590, 591, 0, 314, 311, 312, 0,
	315, 313, 0, 316, 317, 318, 0, 0, 319, 320,
	321, 0, 322, 323, 0, 324, 325, 326, 0, 327,
	328, 592, 329, 330, 331, 333, 335, 332, 336, 337,
	338, 339, 593, 594, 0, 0, 0, 0, 0, 0,
	0, 340, 341, 342, 595, 0, 0, 0, 343, 0,
	344, 0, 0, 0, 345, 346, 596, 597, 347, 348,
	349, 350, 351, 352, 353, 354, 0, 355, 598, 0,
	599, 356, 0, 357, 358, 359, 360, 361, 1467, 601,
	602, 436, 0, 362, 363, 0, 364, 365, 366, 367,
	0, 0, 0, 0, 368, 369, 371, 0, 0, 370,
	603, 604, 0, 605, 0, 372, 373, 0, 606, 0,
	374, 375, 376, 0, 377, 0, 0, 0, 378, 379,
	380, 381, 382, 383, 0, 384, 386, 385, 0, 387,
	607, 0, 388, 389, 0, 0, 390, 0, 0, 0,
	391, 392, 0, 0, 393, 394, 395, 396, 0, 397,
	398, 400, 403, 399, 401, 402, 404, 417, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
	419, 0, 418, 0, 420, 421, 422, 427, 429, 430,
	425, 426, 428, 431, 432, 424, 0, 423, 0, 0,
	0, 433, 434, 0, 608, 435, 609, 437, 438, 0,
	0, 439, 0, 0, 0, 441, 442, 443, 0, 0,
	444, 445, 610, 0, 446, 0, 611, 447, 448, 440,
	449, 450, 451, 452, 453, 454, 455, 456, 0, 457,
	458, 612, 459, 460, 461, 613, 462, 463, 464, 614,
	465, 615, 466, 467, 0, 468, 0, 469, 470, 471,
	472, 473, 474, 475, 616, 476, 478, 477, 479, 0,
	480, 0, 0, 0, 0, 0, 481, 0, 483, 484,
	485, 482, 486, 487, 488, 489, 0, 490, 491, 492,
	0, 493, 494, 495, 496, 617, 497, 0, 498, 499,
	505, 506, 500, 501, 507, 508, 509, 510, 511, 0,
	513, 514, 512, 515, 516, 517, 0, 518, 519, 502,
	503, 520, 521, 0, 522, 523, 524, 525, 526, 527,
	618, 0, 528, 0, 529, 530, 531, 532, 504, 533,
	538, 619, 534, 535, 536, 537, 620, 0, 540, 541,
	0, 539, 0, 542, 543, 544, 545, 546, 547, 334,
	548, 0, 549, 621, 622, 623, 624, 0, 558, 0,
	550, 551, 552, 625, 553, 626, 0, 554, 555, 556,
	557, 0, 559, 560, 0, 0, 561, 562, 563, 565,
	566, 564, 567, 0, 568, 0, 0, 569, 570, 571,
	627, 628, 629, 249, 573, 572, 574, 630, 0, 0,
	0, 0, 575, 576, 631, 577, 578, 579, 0, 0,
	255, 257, 256, 258, 259, 260, 261, 0, 262, 263,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	264, 265, 0, 266, 267, 268, 269, 270, 581, 582,
	0, 271, 583, 272, 584, 0, 585, 273, 274, 275,
	276, 277, 278, 0, 0, 0, 279, 586, 587, 588,
	0, 280, 281, 589, 0, 0, 0, 282, 283, 284,
	285, 286, 287, 288, 0, 0, 290, 291, 292, 289,
	293, 0, 294, 0, 295, 296, 297, 298, 299, 300,
	0, 301, 302, 303, 0, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 308, 309, 0, 310,
	590, 591, 0, 314, 311, 312, 0, 315, 313, 0,
	316, 317, 318, 0, 0, 319, 320, 321, 0, 322,
	323, 0, 324, 325, 326, 0, 327, 328, 592, 329,
	330, 331, 333, 335, 332, 336, 337, 338, 339, 593,
	594, 0, 0, 0, 0, 0, 0, 0, 340, 341,
	342, 595, 0, 0, 0, 343, 0, 344, 0, 0,
	0, 345, 346, 596, 597, 347, 348, 349, 350, 351,
	352, 353, 354, 0, 355, 598, 0, 599, 356, 0,
	357, 358, 359, 360, 361, 600, 601, 602, 436, 0,
	362, 363, 0, 364, 365, 366, 367, 0, 0, 0,
	0, 368, 369, 371, 0, 0, 370, 603, 604, 0,
	605, 0, 372, 373, 0, 606, 0, 374, 375, 376,
	0, 377, 0, 0, 0, 378, 379, 380, 381, 382,
	383, 0, 384, 386, 385, 0, 387, 607, 0, 388,
	389, 0, 0, 390, 0, 0, 0, 391, 392, 0,
	0, 393, 394, 395, 396, 0, 397, 398, 400, 403,
	399, 401, 402, 404, 417, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 414, 415, 416, 419, 0, 418,
	0, 420, 421, 422, 427, 429, 430, 425, 426, 428,
	431, 432, 424, 0, 423, 0, 0, 0, 433, 434,
	0, 608, 435, 609, 437, 438, 0, 0, 439, 0,
	0, 0, 441, 442, 443, 0, 0, 444, 445, 610,
	0, 446, 0, 611, 447, 448, 440, 449, 450, 451,
	452, 453, 454, 455, 456, 0, 457, 458, 612, 459,
	460, 461, 613, 462, 463, 464, 614, 465, 615, 466,
	467, 0, 468, 0, 469, 470, 471, 472, 473, 474,
	475, 616, 476, 1134, 477, 479, 0, 480, 0, 0,
	0, 0, 0, 481, 0, 483, 484, 485, 482, 486,
	487, 488, 489, 0, 490, 491, 492, 0, 493, 494,
	495, 496, 617, 497, 0, 498, 499, 505, 506, 500,
	501, 507, 508, 509, 510, 511, 0, 513, 514, 512,
	515, 516, 517, 0, 518, 519, 502, 503, 520, 521,
	0, 522, 523, 524, 525, 526, 527, 618, 0, 528,
	0, 529, 530, 531, 532, 504, 533, 538, 619, 534,
	535, 536, 537, 620, 0, 540, 541, 0, 539, 0,
	542, 543, 544, 545, 546, 547, 334, 548, 0, 549,
	621, 622, 623, 624, 0, 558, 0, 550, 551, 552,
	625, 553, 626, 0, 554, 555, 556, 557, 0, 559,
	560, 0, 0, 561, 562, 563, 565, 566, 564, 567,
	0, 568, 0, 0, 569, 570, 571, 627, 628, 629,
	249, 573, 572, 574, 630, 0, 0, 0, 0, 575,
	576, 631, 577, 578, 579, 0, 0, 255, 257, 256,
	258, 259, 260, 261, 0, 262, 263, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 264, 265, 0,
	266, 267, 268, 269, 270, 581, 582, 0, 271, 583,
	272, 584, 0, 585, 273, 274, 275, 276, 277, 278,
	0, 0, 0, 279, 586, 587, 588, 0, 280, 281,
	589, 0, 0, 0, 282, 283, 284, 285, 286, 287,
	288, 0, 0, 290, 291, 292, 289, 293, 0, 294,
	0, 295, 296, 297, 298, 299, 300, 0, 301, 302,
	303, 0, 304, 305, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 308, 309, 0, 310, 590, 591, 0,
	314, 311, 312, 0, 315, 313, 0, 316, 317, 318,
	0, 0, 319, 320, 321, 0, 322, 323, 0, 324,
	325, 326, 0, 327, 328, 592, 329, 330, 331, 333,
	335, 332, 336, 337, 338, 339, 593, 594, 0, 0,
	0, 0, 0, 0, 0, 340, 341, 342, 595, 0,
	0, 0, 343, 0, 344, 0, 0, 0, 345, 346,
	596, 597, 347, 348, 349, 350, 351, 352, 353, 354,
	0, 355, 598, 0, 599, 0, 0, 357, 358, 359,
	360, 361, 600, 601, 602, 436, 0, 362, 363, 0,
	364, 365, 366, 367, 0, 0, 0, 0, 368, 369,
	371, 0, 0, 370, 603, 604, 0, 605, 0, 372,
	373, 0, 606, 0, 374, 375, 376, 0, 377, 0,
	0, 0, 378, 379, 380, 381, 382, 383, 0, 384,
	386, 385, 0, 387, 607, 0, 388, 389, 0, 0,
	390, 0, 0, 0, 391, 392, 0, 0, 393, 394,
	395, 396, 0, 397, 398, 400, 403, 399, 401, 402,
	404, 417, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 414, 415, 416, 419, 0, 418, 0, 420, 421,
	422, 427, 429, 430, 425, 426, 428, 431, 432, 424,
	0, 423, 0, 0, 0, 433, 434, 0, 608, 435,
	609, 437, 438, 0, 0, 439, 0, 0, 0, 441,
	442, 443, 0, 0, 444, 445, 610, 0, 446, 0,
	611, 447, 448, 440, 449, 450, 0, 452, 453, 454,
	455, 456, 0, 457, 458, 612, 459, 460, 461, 613,
	462, 463, 464, 614, 465, 615, 466, 467, 0, 468,
	0, 469, 470, 471, 472, 0, 474, 475, 616, 476,
	478, 477, 479, 0, 480, 0, 0, 0, 0, 0,
	481, 0, 483, 484, 485, 482, 486, 487, 488, 489,
	0, 490, 491, 492, 0, 493, 494, 495, 496, 617,
	0, 0, 498, 499, 505, 506, 500, 501, 507, 508,
	509, 510, 511, 0, 513, 514, 512, 515, 516, 517,
	0, 518, 519, 502, 503, 520, 521, 0, 522, 523,
	524, 525, 526, 527, 618, 0, 528, 0, 529, 530,
	531, 532, 504, 533, 538, 619, 534, 535, 536, 537,
	620, 0, 540, 541, 0, 539, 0, 542, 543, 544,
	545, 546, 547, 334, 548, 0, 549, 621, 622, 623,
	624, 0, 558, 0, 550, 551, 552, 625, 553, 626,
	0, 554, 555, 556, 557, 0, 559, 560, 0, 0,
	561, 562, 563, 565, 566, 564, 567, 0, 568, 0,
	0, 569, 570, 571, 627, 628, 629, 0, 573, 572,
	574, 630, 0, 0, 0, 0, 575, 576, 631, 577,
	578, 579, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1710, 0, 0, 0, 0,
	1679, 1680, 1682, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1710, 0, 0, 0, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 1681, 0, 1728, 0,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1687, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 1719,
	0, 0, 1729, 0, 0, 1696, 1697, 0, 1709, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 1725, 0, 1726, 0, 0, 0,
	0, 0, 0, 1696, 1697, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 1703, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 1710, 0,
	1720, 0, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 4209, 0, 0, 1718, 0, 0, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	4205, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 0, 0, 1687,
	0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1710, 0, 0, 0, 0,
	0, 0, 1682, 0, 1719, 0, 0, 1729, 0, 0,
	1728, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 1726, 0, 0, 0, 0, 1681, 0, 1696, 1697,
	0, 0, 0, 0, 0, 0, 1701, 0, 0, 0,
	0, 0, 0, 0, 0, 1698, 1717, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	1716, 1701, 0, 0, 0, 0, 1687, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1719, 0, 0, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 0, 1696, 1697, 0, 0, 1703,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	0, 1687, 0, 1717, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 0, 1720, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 0, 0, 0, 1682, 0, 1719, 0, 0, 1729,
	0, 0, 1728, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1727,
	0, 1725, 0, 1726, 0, 0, 0, 0, 1681, 0,
	1696, 1697, 0, 0, 0, 0, 0, 1716, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 1717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689, 0, 0, 0, 0, 4106, 1708, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 1705,
	1706, 1707, 1716, 0, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 1729, 0, 0, 1715,
	1710, 0, 1709, 1711, 0, 0, 0, 1682, 0, 0,
	0, 1708, 0, 0, 0, 1728, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 1720, 0, 1702,
	1698, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 4105, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 1719, 3996, 1708, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 1725, 0, 1726, 0, 0, 0, 0, 0, 0,
	1696, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 1717, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 3945, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 1710,
	0, 0, 0, 0, 0, 0, 1682, 0, 1719, 0,
	0, 1729, 0, 0, 1728, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	1681, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 3801, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 1705, 1706, 1707, 1716, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 1729, 0,
	0, 1715, 1710, 0, 1709, 1711, 0, 0, 0, 1682,
	0, 0, 0, 1708, 0, 0, 0, 1728, 0, 0,
	1725, 0, 1726, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 1703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 1717, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 1720,
	0, 1702, 1698, 0, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 1727, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 1701, 0, 1687, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 1719, 3744,
	1708, 1729, 0, 0, 0, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 1720, 0, 0, 0,
	1717, 1687, 0, 0, 1679, 1680, 0, 1712, 1713, 1714,
	1722, 1723, 1724, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 1710, 0, 0,
	0, 0, 0, 0, 1682, 0, 1719, 0, 0, 1729,
	0, 0, 1728, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 1725, 0, 1726, 0, 0, 0, 0, 1681, 0,
	1696, 1697, 0, 0, 1716, 0, 0, 0, 1701, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 1717, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 1702, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 3743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 1704, 1705,
	1706, 1707, 1716, 0, 0, 0, 0, 0, 1687, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 1719, 0, 0, 1729, 0, 0, 1715,
	1710, 0, 1709, 1711, 0, 0, 0, 1682, 0, 0,
	0, 1708, 0, 0, 0, 1728, 0, 0, 1725, 0,
	1726, 0, 0, 0, 0, 0, 0, 1696, 1697, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 0, 0, 1717, 0, 0, 0, 0,
	0, 1701, 0, 0, 0, 0, 0, 1720, 0, 1702,
	1698, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0, 3742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 1719, 3437, 1708, 1729,
	0, 0, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 0,
	0, 1725, 0, 1726, 0, 0, 0, 0, 0, 0,
	1696, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 0, 1717, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 0, 0, 0, 1728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 1716, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 1718,
	0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695,
	0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689,
	0, 0, 0, 0, 2971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 1710,
	0, 0, 0, 0, 0, 0, 1682, 0, 1719, 0,
	0, 1729, 0, 0, 1728, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	1681, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 0, 0, 0, 0, 0, 0, 1698,
	1717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 2970, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1704, 1705, 1706, 1707, 1716, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1679,
	1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0, 0,
	0, 0, 0, 0, 0, 1719, 0, 0, 1729, 0,
	0, 1715, 1710, 0, 1709, 1711, 0, 0, 0, 1682,
	0, 0, 0, 1708, 0, 0, 0, 1728, 0, 0,
	1725, 0, 1726, 0, 0, 0, 0, 0, 0, 1696,
	1697, 0, 0, 1703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 1717, 0, 0,
	0, 0, 0, 1701, 0, 0, 0, 0, 0, 1720,
	0, 1702, 1698, 0, 0, 0, 0, 1679, 1680, 0,
	1712, 1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	1710, 0, 0, 0, 0, 0, 0, 1682, 0, 0,
	0, 0, 0, 1727, 0, 1728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 1701, 0, 1687, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 0, 1719, 2969,
	1708, 1729, 0, 0, 0, 0, 0, 1709, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 0, 0, 0,
	0, 1704, 1705, 1706, 1707, 0, 1720, 0, 0, 0,
	1717, 1687, 4333, 1679, 1680, 0, 1712, 1713, 1714, 1722,
	1723, 1724, 0, 0, 1702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 1710, 0, 0, 0,
	0, 0, 0, 1682, 0, 0, 1719, 0, 0, 1729,
	0, 1728, 0, 0, 0, 1709, 1711, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1727, 0, 0, 0,
	0, 1725, 0, 1726, 0, 0, 0, 1681, 0, 0,
	1696, 1697, 0, 0, 1716, 0, 0, 1701, 0, 0,
	0, 0, 0, 0, 0, 0, 1698, 0, 1717, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 1702, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 0, 0, 0, 0, 2968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1727, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 1704, 1705, 1706,
	1707, 0, 1716, 0, 0, 0, 0, 1687, 0, 3055,
	0, 0, 3054, 0, 0, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 1680, 4332, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 1719, 0, 0, 1729, 0, 0, 0, 0,
	0, 1709, 1711, 0, 1715, 1710, 0, 0, 0, 0,
	2906, 1708, 1682, 0, 0, 0, 0, 1725, 0, 1726,
	1728, 0, 0, 0, 0, 0, 1696, 1697, 0, 0,
	0, 1703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1717, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1701, 1720, 1702, 0,
	0, 0, 0, 0, 1718, 1698, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 0, 0, 2935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1727, 2907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 0, 0, 0,
	0, 0, 1718, 0, 0, 0, 0, 1693, 1694, 1700,
	1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685,
	1686, 1688, 1689, 0, 0, 0, 0, 1708, 0, 0,
	0, 1719, 0, 0, 1729, 0, 0, 0, 0, 0,
	1709, 1711, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 0, 0, 2504, 1696, 1697, 0, 0, 0,
	0, 1679, 1680, 1720, 1712, 1713, 1714, 1722, 1723, 1724,
	0, 0, 0, 1717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1710, 0, 0, 1702, 2503, 0,
	0, 1682, 0, 0, 0, 0, 0, 0, 0, 1728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 1727,
	0, 0, 0, 0, 0, 1701, 0, 0, 0, 0,
	0, 0, 0, 0, 1698, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0,
	0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1710, 0, 1708, 0, 0, 0,
	0, 1682, 0, 0, 0, 1704, 1705, 1706, 1707, 1728,
	0, 0, 0, 0, 0, 1687, 1703, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 1701, 0, 0, 0, 0,
	1719, 0, 0, 1729, 1698, 0, 0, 0, 0, 1709,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 1726, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 1705, 1706, 1707, 0,
	0, 0, 0, 0, 0, 1687, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 1729, 0, 0, 1716, 0, 0, 1709,
	1711, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1725, 0, 1726, 0, 0,
	0, 0, 0, 0, 1696, 1697, 0, 0, 0, 0,
	1679, 1680, 0, 1712, 1713, 1714, 1722, 1723, 1724, 0,
	0, 0, 1717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1710, 0, 1708, 1702, 0, 0, 0,
	1682, 0, 0, 0, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 0, 1727, 0,
	0, 1720, 0, 0, 1701, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 0, 0, 1716, 990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 1705, 1706, 1707, 0, 0,
	0, 0, 0, 0, 1687, 1703, 1718, 0, 0, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 1679,
	1680, 1720, 1712, 1713, 1714, 1722, 1723, 1724, 0, 1719,
	0, 0, 1729, 0, 0, 0, 0, 0, 1709, 1711,
	0, 1715, 1710, 0, 0, 0, 0, 0, 0, 1682,
	0, 0, 0, 0, 1725, 0, 1726, 1728, 0, 0,
	0, 0, 0, 1696, 1697, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1717, 0, 1681, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 1702, 0, 0, 0, 0,
	0, 0, 1698, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1718, 0, 0, 0,
	0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690,
	1691, 1683, 1684, 1685, 1686, 1688, 1689, 1727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1704, 1705, 1706, 1707, 0, 0, 0,
	0, 0, 0, 1687, 0, 0, 0, 0, 3061, 0,
	0, 0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722,
	1723, 1724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 1715, 1710, 0, 1719, 0,
	3056, 1729, 0, 1682, 0, 0, 0, 1709, 1711, 0,
	0, 1728, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 1725, 0, 1726, 0, 0, 0, 0,
	0, 0, 1696, 1697, 0, 0, 0, 1681, 1679, 1680,
	1720, 1712, 1713, 1714, 1722, 1723, 1724, 1701, 0, 0,
	1717, 0, 0, 0, 0, 0, 1698, 0, 0, 0,
	1715, 1710, 0, 0, 1702, 0, 0, 0, 1682, 0,
	0, 0, 0, 0, 0, 0, 1728, 0, 3418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 0, 0, 0, 1727, 0, 0, 0,
	0, 0, 1701, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 1716, 0, 0, 1704, 1705, 1706,
	1707, 0, 0, 0, 0, 1718, 0, 1687, 0, 0,
	1693, 1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691,
	1683, 1684, 1685, 1686, 1688, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1719, 0, 0, 1729, 0, 0, 0, 0,
	0, 1709, 1711, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 1705, 1706, 1707, 0, 1725, 0, 1726,
	0, 0, 1687, 1703, 0, 0, 1696, 1697, 0, 0,
	0, 0, 1679, 1680, 0, 1712, 1713, 1714, 1722, 1723,
	1724, 0, 0, 0, 1717, 0, 0, 0, 0, 1720,
	0, 0, 0, 0, 1715, 1710, 0, 1719, 1702, 2972,
	1729, 0, 1682, 0, 0, 0, 1709, 1711, 0, 0,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1725, 0, 1726, 0, 0, 0, 0, 0,
	0, 1696, 1697, 0, 0, 0, 1681, 0, 0, 0,
	1727, 0, 0, 0, 0, 0, 1701, 0, 0, 1717,
	0, 0, 0, 0, 0, 1698, 0, 0, 1716, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1718, 0, 0, 0, 0, 1693,
	1694, 1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683,
	1684, 1685, 1686, 1688, 1689, 1727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 1716, 0, 0, 1704, 1705, 1706, 1707,
	0, 0, 0, 0, 0, 0, 1687, 1703, 0, 0,
	0, 0, 0, 3023, 0, 0, 1679, 1680, 0, 1712,
	1713, 1714, 1722, 1723, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 1720, 0, 0, 0, 0, 1715, 1710,
	0, 1719, 0, 0, 1729, 0, 1682, 0, 0, 0,
	1709, 1711, 1708, 0, 1728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1725, 0, 1726, 0,
	0, 0, 1703, 0, 0, 1696, 1697, 0, 0, 0,
	1681, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1701, 0, 0, 1717, 0, 0, 0, 0, 1720, 1698,
	0, 0, 0, 0, 0, 0, 0, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0,
	1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 1727,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	1704, 1705, 1706, 1707, 0, 0, 0, 0, 0, 0,
	1687, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1718, 0, 0, 0, 0, 1693, 1694,
	1700, 1721, 1699, 1695, 0, 1692, 1690, 1691, 1683, 1684,
	1685, 1686, 1688, 1689, 0, 1719, 0, 0, 1729, 0,
	0, 0, 0, 0, 1709, 1711, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1725, 0, 1726, 0, 0, 0, 1703, 0, 0, 1696,
	1697, 0, 0, 0, 0, 1679, 1680, 0, 1712, 1713,
	1714, 1722, 1723, 1724, 0, 0, 0, 1717, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 1710, 0,
	0, 1702, 0, 0, 0, 1682, 0, 0, 0, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 1716, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1718, 0, 0,
	0, 0, 1693, 1694, 1700, 1721, 1699, 1695, 0, 1692,
	1690, 1691, 1683, 1684, 1685, 1686, 1688, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	1705, 1706, 1707, 0, 0, 0, 0, 0, 0, 1687,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1720, 0, 0, 0,
	0, 0, 0, 0, 1719, 0, 0, 1729, 0, 0,
	0, 0, 0, 1709, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 1726, 0, 0, 0, 0, 0, 0, 1696, 1697,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721,
	1699, 1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686,
	1688, 1689, 1727, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1718, 0, 0, 0, 0, 1693, 1694, 1700, 1721, 1699,
	1695, 0, 1692, 1690, 1691, 1683, 1684, 1685, 1686, 1688,
	1689,
}
var sqlPact = [...]int{

	11029, -1000, -1000, -1000, -1000, 254, -1000, -1000, 250, 249,
	245, 244, 241, 240, 237, 234, 233, 232, -1000, -1000,
	-1000, -1000, -1000, -1000, 226, -1000, -1000, 224, -1000, 223,
	222, 221, -1000, -1000, 220, -1000, 219, -1000, -1000, -1000,
	-1000, 217, 216, 212, 84082, 83558, 84599, 2265, 102842, 90831,
	2126, 75202, 102318, 74678, 101794, 2033, 101270, 2774, 201, -1000,
	100746, 191, 190, 188, -1000, 100222, -1000, 1972, -1000, 181,
	2073, 61025, 179, 178, 172, 2618, 165, -1000, 163, 156,
	155, -1000, 8724, 1650, -1000, 152, 151, -1000, 8783, 5987,
	88742, 150, 148, 2711, 146, 144, 60500, 143, 138, 2143,
	2897, -1000, -1000, 2081, -1000, -1000, 136, 133, 132, 131,
	130, 123, 120, 118, 113, 112, 109, -1000, 106, 105,
	104, 102, 98, 97, 95, 94, -1000, 90, 88, 86,
	85, 81, 79, 73, 72, 71, 70, 68, 67, 66,
	-1000, 8103, 62, 1955, 1786, 1768, 1766, 1762, 1736, 1070,
	60, 59, 58, 57, 55, 54, 52, 51, 50, -1000,
	48, 47, 46, 32, 27, 26, 25, 20, 137, 19,
	18, 16, 15, 14, 13, 9, 2713, -1000, 1672, 1043,
	28449, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 108529,
	103359, 4, -111, 2, -1000, 3247, 1104, 50527, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 320, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 578, 2029, 830, -1000, -1000, -1000,
	99705, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2262,
	-63, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 829, -1000,
	2261, 158, 2166, -1000, -1000, -1000, 3270, -1000, -1000, 103359,
	-1000, 1109, -1000, -1000, 3705, 3704, 2046, 828, 90307, -1000,
	1824, -1000, 1018, 30096, -1000, 1308, -1000, 30096, 309, -1000,
	-1000, -1000, -1000, -1000, -1000, 3703, 3702, 3701, 3697, 3694,
	-1000, -1000, 74154, 21809, 73630, 73106, 99188, 21275, 83034, 82510,
	98664, 68931, 1106, -1000, -1000, -1000, 1539, -1000, -1000, -1000,
	-1000, -1000, -1000, -29, 66261, 3452, 103359, -1000, 306, -1000,
	-1000, -1000, -1000, -1000, -1000, 42939, 687, 42378, 610, 41817,
	566, -1000, -1000, -1000, -1000, 68397, -1000, 98140, 2465, 3692,
	3688, 1245, 3686, 3173, 1829, 3684, 1861, 1344, 3683, 3678,
	3677, 3676, 3675, 3673, 1502, 97616, 2929, 97092, 1680, 67863,
	1105, 81986, 84599, 2663, 96568, 1470, 1467, -1000, -1000, -1000,
	-1000, 3013, 2894, 2867, 1409, -1000, -1000, 2460, 3670, 3668,
	3666, 3665, 3660, 108012, 1746, 3656, 2547, 3655, 3653, 3650,
	3649, 3646, 3645, 3644, -1000, 81462, 1100, 80938, 80414, 3298,
	96044, 79890, 95520, 67329, 41256, 1009, -1000, -1000, -1000, 53160,
	6814, 6449, 94996, 55288, 84599, 84599, -1000, -1000, -1000, -1000,
	-1000, 40695, 573, 40134, 648, -1000, -1000, 53692, 2889, -1000,
	-1000, -1000, -1000, 39573, 273, 39012, 622, 103359, -1000, 2926,
	1919, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2412, 1639, 3471, 2712, 66795,
	2083, 1377, 3240, 3010, 3009, 1572, 3642, 3640, 2523, 3005,
	3004, 3001, 2998, 2996, 1556, 2616, 560, 27888, 2912, 1757,
	38451, 1592, 1576, 2975, 2970, 3492, 1958, 1991, 2124, 72582,
	3638, 3637, 3208, 2963, 2962, 2888, -1000, -1000, -1000, -1000,
	1546, -1000, -1000, -1000, -1000, -1000, 75719, -1000, -1000, 1831,
	-1000, -1000, 1831, -1000, -1000, -1000, -1000, -1000, 1432, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1672, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2518, -1000, 2040, -1000, -1000, 2375, 3134, 3134, 3134,
	3269, 555, 539, -1000, 137, -1000, -1000, 114065, -1000, -1000,
	43488, 43488, 43488, 43488, 43488, 43488, 43488, 2089, -1000, 827,
	-1000, -1000, 866, -1000, 826, 698, -1000, -1000, -1000, -1000,
	-1000, -1000, 825, -1000, -1000, -1000, -1000, -1000, -1000, 3452,
	-1000, 24534, -1000, -1000, -1000, 657, 824, 43488, -1000, -1000,
	3503, 3501, 1170, -1000, 299, 1034, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2924, 823,
	822, -1000, 821, 819, 817, 816, 814, -1000, -1000, -1000,
	811, 810, 807, 804, 802, 800, 799, 797, -1000, 1997,
	-1000, -1000, -1000, -1000, -1000, -1000, 739, 734, 734, 734,
	-1000, 1091, -1000, -1000, -1000, 334, 733, 321, 731, 729,
	728, -1000, 795, 784, 783, 782, 781, 780, 779, 775,
	772, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1089, -1000,
	-1000, -1000, -1000, -30, 103359, -1000, 578, -30, -1000, -1000,
	766, -1000, 32304, 32304, 32304, -1000, -1000, 2254, 43488, -1000,
	3077, -1000, -24, -24, 935, 52095, -1000, 49462, 935, 572,
	887, 56856, -1000, 2883, -1000, -1000, 764, 292, -1000, -1000,
	-1000, -1000, 22341, 2881, 103359, 103359, 84599, 84599, 84599, 3093,
	43488, -1000, -1000, 64158, 103359, 85116, 3405, 61542, 63636, 103359,
	2920, 63119, -1000, 3213, -1000, -1000, 103359, -1000, 43488, -1000,
	3402, 1813, 69985, 3319, -56, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2509, 2493, 1224, 2283, -1000, 3114, 1841, -1000,
	30096, 3159, -1000, -1000, -1000, 277, 22341, -1000, -1000, -1000,
	-1000, -1000, -1000, 2195, 3088, 1544, -1000, 2277, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1830, 3084, -1000,
	2233, 3080, 1807, -1000, -1000, 2221, -1000, -1000, 3203, -1000,
	-1000, 2098, 3079, -22, -1000, -1000, 2504, -1000, -1000, 2001,
	-1000, -1000, 1063, 3071, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 79366, 54756, 53692, 66261, -46, -1000, -1000,
	-1000, -1000, -67, -1000, 20741, 114065, -1000, -1000, -1000, -1000,
	1780, 114065, 985, -1000, -1000, 3066, -1000, 114065, 982, -1000,
	-1000, 3063, -1000, 2917, -1000, -1000, 2402, -1000, -1000, 3635,
	-1000, -1000, 3634, -1000, 3633, 3630, 3628, -1000, 1756, 1984,
	3627, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 78849, 2226,
	-1000, -1000, 77801, -1000, 2385, 3315, -1000, -1000, -1000, 78325,
	1099, -1000, 1063, 2378, -1000, 88218, 1065, -1000, 3626, 3287,
	2681, 1063, 2377, -1000, -1000, -1000, -1000, -1000, 1072, -1000,
	58418, -1000, 58418, -1000, 1618, -1000, 107495, -24, 84599, 3452,
	-1000, 3625, -1000, -1000, -1000, -1000, -1000, 3057, 3623, 3621,
	3615, -1000, 103359, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	197, 3055, -1000, -1000, 87701, 197, 3053, -1000, 197, 3052,
	-1000, 87184, -1000, -1000, 2186, 3046, -1000, 203, 3043, -1000,
	-1000, 202, 3042, -1000, -1000, -85, 3034, -1000, -1000, 114065,
	-1000, -1000, -1000, -69, -1000, -1000, -1000, 1104, -1000, 52620,
	-1000, 52620, 89783, 69463, 1050, 750, 59975, 114065, -1000, -1000,
	-1000, -1000, 114065, -1000, -1000, -1000, -185, -1000, -1000, 69463,
	53692, 114065, -1000, -1000, -1000, -1000, 114065, -1000, -1000, -1000,
	69463, 77801, -1000, 94472, 77284, -1000, -1000, 1500, 2601, -1000,
	-1000, -1000, 69463, 1357, 69463, 69463, 69463, -1000, 93948, -1000,
	-1000, 2053, 1528, 3209, 2047, 84599, -1000, 1954, -1000, -1000,
	-1000, 3228, -1000, -1000, 2914, -1000, 62585, 86667, -1000, 86150,
	-1000, 85633, -1000, 84599, -1000, 84599, -1000, 3602, 3595, 3593,
	3588, -1000, 3586, 3220, -1000, 114065, 3218, -1000, 3584, 3307,
	2912, 114065, -1000, 3068, 1795, 1788, 103359, -1000, -1000, 103359,
	-1000, 103359, -1000, -1000, -1000, 1573, -1000, -1000, 2503, -1000,
	-1000, -1000, -1000, 84599, -1000, -1000, -1000, -1000, -1000, -1000,
	2910, -1000, 1765, -1000, 1835, -1000, 1486, -1000, -1000, 206,
	-1000, -1000, -56, -1000, 106978, -1000, 2375, -1000, 103359, -1000,
	2446, 2898, 2909, 1520, 2215, 2605, -1000, 37890, 2560, 46782,
	2274, 137, -1000, -1000, 137, 137, 29547, -1000, -1000, 61542,
	61542, 22341, 1455, 43488, 43488, 43488, 43488, 43488, 43488, 43488,
	43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488,
	43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488,
	43488, 43488, 43488, 43488, 43488, 43488, 43488, 43488, 2296, 43488,
	1430, 43488, 43488, 43488, 43488, 1749, -1000, -1000, 1940, 618,
	2238, -1000, 3453, 3453, 3453, 1096, 1096, 114304, 114304, 712,
	3582, 866, -1000, 43488, -1000, 114, 43488, 22875, -1000, 539,
	10707, 2403, -1000, 538, 23436, -1000, -1000, -1000, 24534, 698,
	37329, 43488, 1084, 114065, -1000, -1000, 1750, 3467, 20208, 2904,
	2764, 763, 851, 847, 27327, 26766, 26205, 25644, 845, 43488,
	43488, 43488, 43488, 43488, 43488, 43488, 43488, -1000, -1000, 3479,
	-1000, 3467, -1000, -1000, -1000, -1000, 3467, 1451, 1441, 3467,
	-1000, 3467, 3467, 7599, 7599, 36780, 36219, 35658, 47331, 35097,
	43488, 25083, 34536, 33975, -1000, 103359, -30, 3400, 43488, 140,
	-1000, 112930, -1000, 140, 140, 749, -80, 114065, 2555, 2555,
	51050, 2502, 2095, 2095, 2095, -1000, 935, 15915, 935, 92909,
	2112, 935, 935, 275, 305, 535, 48939, 3077, 92909, 856,
	747, 0, -3, -4, -1000, -1000, -7, -8, -1000, -1000,
	84599, 745, 22875, 22341, 269, 1527, -87, 2636, 2635, 2629,
	-1000, 2625, 1778, -89, 1429, 84599, 103359, -65, -1000, 263,
	-96, -1000, 1321, 267, 3467, -1000, -1000, -1000, -1000, -1000,
	3580, 3579, -1000, 1088, 744, 743, 911, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 739, 734, 734, 734, -1000,
	334, 733, 321, 731, 729, 728, -1000, -1000, -1000, -1000,
	-1000, 2880, 84599, 103359, -67, 85116, -95, -1000, -1000, -1000,
	-1000, -1000, 84599, 958, -99, 1276, -56, -1000, -1000, -1000,
	1831, -1000, 2023, -1000, -1000, -1000, -1000, -1000, -1000, 1507,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1170, -1000,
	-1000, -1000, -1000, -1000, -1000, 3460, 3449, -32, -1000, -1000,
	22341, -1000, -58, 1843, 1755, -1000, 72058, 2351, 3201, 3190,
	1617, -1000, 1568, 1425, 3267, 75719, 3359, 3383, 1008, -1000,
	2879, -1000, -1000, 1017, 1752, 1751, 1423, 75719, 2233, -1000,
	61542, -1000, 2623, 3266, 1440, 1431, 1440, 1440, 1426, -1000,
	75719, 1709, 1419, 1412, -1000, 1407, 1405, -1000, -60, 3336,
	3375, 192, -1000, 2878, 1400, -1000, -1000, 84599, 22341, 1600,
	1581, 1701, 1393, -43, -1000, 3328, 3327, 1390, 1389, -1000,
	5226, -1000, 69463, 1803, 3031, 2710, 984, 2707, -1000, -1000,
	984, -46, 66261, 103359, 266, -1000, 114, 43488, 43488, 114,
	43488, 114, 3300, 3028, -1000, -1000, -1000, -1000, -1000, 3578,
	1912, 2545, -1000, -1000, 727, 2374, 2873, 103359, 2657, -53,
	84599, -1000, 3024, 64680, 2233, 2372, -1000, -1000, 76760, -1000,
	3020, 578, 2362, -1000, 693, 3576, -1000, 106461, -1000, 3213,
	1443, 3007, 1152, 682, 3395, -1000, 682, 58941, -1000, 103359,
	-1000, -24, -1000, 103359, -1000, -1000, -1000, 3575, -1000, 84599,
	-1000, -1000, 84599, 197, 3003, -1000, 84599, -1000, 84599, 196,
	3002, -1000, -1000, 103359, -1000, 84599, 84599, -1000, 103359, 103359,
	69463, 69463, 5815, 71024, -102, -104, 532, -1000, 93431, 103359,
	1150, 71541, 103359, 3148, 1060, 53692, -1000, -110, -185, 2701,
	1050, 1050, 984, -1000, 984, -1000, 84599, 2903, -1000, -1000,
	69463, 1050, 1050, 1050, -1000, -1000, -1000, -1000, 3574, 3573,
	3572, -1000, -1000, -1000, 1061, 84599, 103359, 84599, -1000, -1000,
	103359, -1000, 103359, 103359, -1000, 1061, 103359, 1061, 103359, 1061,
	103359, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 114, 43488,
	-1000, -1000, 3571, 1631, -1000, 2901, -1000, 2899, -1000, 23,
	-1000, -1000, -1000, -1000, -1000, 1959, 84599, 84599, 84599, 84599,
	103359, 84599, -1000, 75719, -1000, 2446, 2898, -1000, -1000, -1000,
	-1000, -1000, -1000, 1602, 2192, -1000, 2595, -1000, 1595, -1000,
	-1000, -1000, 114065, 47863, -1000, -1000, 114065, 1855, -1000, 46233,
	45684, -1000, -1000, 1717, 84599, 2661, -1000, 2661, -205, -1000,
	112691, 2594, 84599, -1000, -1000, -1000, -1000, -1000, 1014, 1101,
	1101, 1286, 1286, 1286, 1286, 3331, 4509, 324, 1583, 8341,
	8341, 350, 350, 350, 350, 350, 8341, 765, 1096, 1096,
	765, 765, 765, 765, 765, 1096, 1096, 1096, 8341, 8341,
	8341, 114304, 7482, 6845, 43488, 43488, 1381, 1936, 618, 5508,
	43488, 383, 383, 383, 383, -1000, 2077, -1000, -1000, -1000,
	-1000, 2845, 726, 47331, 47331, -1000, -1000, -1000, -1000, 23985,
	43488, -1000, -1000, -1000, -1000, 33414, -1000, -1000, 112248, -311,
	526, -168, -31, -1000, 43488, 43488, 43488, 522, -1000, 265,
	43488, 103359, -1000, 15034, 855, -112, -1000, -117, 1477, -1000,
	43488, -1000, -1000, 1380, -1000, 1371, 1370, 1367, -1000, 722,
	520, -1000, 260, -1000, 2092, 721, 720, 43488, -1000, -1000,
	-1000, -1000, -1000, 112065, -1000, -1000, 111898, -1000, -1000, 111646,
	-1000, -1000, 111463, -1000, -1000, -1000, 113891, 14867, 14628, 14462,
	10454, 13772, 13194, -119, 515, -120, 510, 1004, 993, 508,
	498, 490, -122, -1000, 3570, 3568, 3567, -1000, 3566, 3565,
	3564, -1000, 3563, 3562, 3561, -1000, 3560, 3555, 3553, -1000,
	3551, 3549, 3548, -1000, 3546, 3542, 3541, -1000, 3538, 3537,
	3536, -1000, 3535, 3534, 3533, -125, 489, -1000, 2842, -168,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, -1000,
	485, -1000, 113717, -168, 483, 6642, -1000, 47331, 47331, 47331,
	-1000, 473, -1000, 112502, -1000, 113652, 32865, 32865, 32865, 437,
	113478, 43488, -168, -132, -1000, -133, -1000, -1000, 557, -134,
	1074, 32304, 50002, 22341, -1000, 1074, 1074, 43488, -1000, 43488,
	2611, -1000, -1000, -1000, 2604, 3018, 2555, 51050, -1000, -1000,
	-1000, -1000, 92909, -1000, 3452, 2812, -1000, 92909, -1000, -1000,
	103359, 578, -1000, 92909, 92909, 22341, 935, -1000, 935, 92909,
	751, -1000, -1000, -1000, -1000, -1000, 436, 55810, -31, 256,
	22341, 1063, -1000, 2614, 2614, 2614, 2614, -1000, -1000, 103359,
	1359, -51, -154, 3427, -1000, 2015, -1000, 61542, -1000, 864,
	1271, 22341, -1000, -1000, -1000, 718, -1000, 3467, 3467, -1000,
	3467, 103359, 2839, 108, 91, 64680, 64680, 1077, 30096, -1000,
	1831, -1000, -1000, 1652, -1000, 1950, -1000, 1438, -1000, -1000,
	-1000, -1000, 30096, -1000, 2300, 103359, 103359, 84599, -1000, 103359,
	-1000, 2347, 105944, 2339, 61542, 103359, -1000, -1000, 717, 715,
	2589, 2585, 1148, 103359, 103359, 2582, 105427, 104910, 103359, 2038,
	43488, 64680, 2248, 2194, 114, 114, -1000, -1000, 114, 714,
	1314, 84599, 84599, 103359, 84599, 1690, -1000, -1000, -1000, -1000,
	-1000, 76236, -1000, -1000, 3478, 3475, -1000, 1440, -1000, -1000,
	-1000, 1440, 2233, 1686, 103359, 84599, 64680, 1698, 103359, 2030,
	114, 114, -1000, -1000, 114, 710, 22341, 2017, -1000, 2928,
	103359, 3500, 103359, 103359, 103359, 64680, 3238, 104393, 103359, 103359,
	64680, 5226, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 65744, 1157, 1063, 1691, 1358, 75719, 53692,
	1057, 53692, 2689, -1000, -1000, 19675, -1000, 114065, 114065, -1000,
	114065, -1000, 62063, 103359, -1000, 1097, 103359, 71541, 1031, 2995,
	57895, -67, 1050, 69463, 84599, -53, 103359, -1000, -1000, 2233,
	2991, 578, 2338, -1000, 69463, 3394, 2990, 704, 3532, 3528,
	-1000, 2225, 2333, -1000, -1000, 103876, 3019, 906, 103359, 1074,
	51050, 1969, -1000, 56334, 1120, 103359, 1842, 76, -1000, -1000,
	-1000, 11, 103359, -1000, 885, 3527, -1000, -1000, 197, -1000,
	84599, 197, 197, -1000, 84599, 84599, 2186, -1000, 203, -1000,
	202, -1000, -85, -1000, -1000, 5815, 5815, 1050, -270, 702,
	-1000, 974, 972, 54224, 69463, -142, -1000, -1000, -1000, -1000,
	-1000, 84599, 103359, 808, 2680, 103359, -147, -1000, 204, 700,
	-1000, 2227, -1000, -1000, 1060, 53692, 2838, -1000, -1000, 1076,
	-1000, 1476, 1050, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -25, -67, -67, -67, -1000, 1061, -1000,
	1061, -1000, 1061, -1000, 114065, -1000, -1000, 1625, 1622, 103359,
	-1000, 22341, 103359, 84599, 22341, 84599, 2895, 2870, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1176, -1000, 1855, 2187,
	-1000, 698, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2488, -1000, -55, 29547, 988, -1000, -1000, 84599, -26,
	43488, 43488, 5336, 4911, 43488, 47331, 47331, -1000, 43488, 4628,
	-1000, -1000, -1000, -1000, -1000, 2830, 694, 43488, 61542, 6584,
	5080, -1000, 435, 12561, 765, -1000, 43488, -1000, 434, 31755,
	-1000, 113050, -33, -149, -1000, 16461, -168, -155, -1000, -1000,
	862, -1000, 3011, -1000, 43488, 113289, 2444, 2070, 1876, 1647,
	3467, 3499, 19142, -1000, 59458, 1080, 2122, 111296, -1000, -1000,
	-1000, -1000, 61542, 61542, 43488, 43488, -1000, 43488, 43488, 43488,
	-1000, -1000, -1000, 3467, 1005, -1000, -1000, -1000, 1005, -1000,
	-1000, 1440, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1440, -1000, 43488,
	-1000, -1000, 2829, 43488, -1000, 61542, 61542, 47331, 47331, 47331,
	47331, 47331, 47331, 47331, 47331, 47331, 47331, 47331, 47331, 47331,
	47331, 47331, 47331, 47331, 47331, 47331, 2471, 47331, 3451, 3451,
	3451, -1000, 2815, 2829, 43488, 43488, 61542, 433, 431, 406,
	-1000, 43488, -168, -1000, -1000, 5815, 691, -1000, 2470, -1000,
	2762, -1000, 43488, -1000, -152, -1000, 3077, -1000, -1000, 2762,
	2762, -156, 114065, 51050, 51050, -1000, 689, 43488, 2565, -1000,
	-1000, 850, -312, -1000, 968, -1000, -1000, -1000, -1000, -1000,
	578, -1000, -1000, -1000, 198, 92909, 92909, 846, -1000, -157,
	-1000, -1000, -158, -1000, 3393, 401, 22341, -1000, 1074, 3191,
	-1000, -1000, -1000, -1000, -1000, -1000, -67, 103359, 103359, 2159,
	3496, -1000, 3469, 861, 836, 193, 3467, 400, 396, 395,
	-67, 103359, 103359, 103359, -1000, -1000, -1000, 2643, -1000, -56,
	-1000, -1000, -1000, 43488, -1000, -1000, 3199, 1354, 1349, -1000,
	-1000, 2988, -1000, 2331, -1000, 1125, -1000, 1724, -1000, 43488,
	51573, 686, 685, 3526, 1930, 3525, 1149, 2986, 2186, 2984,
	2186, -1000, -1000, 1011, -1000, 114065, -1000, 684, 683, -1000,
	-58, 1821, 1678, 1075, -1000, -1000, 43488, 43488, 92392, -1000,
	419, 3203, -27, -1000, -1000, 1677, 1348, -1000, -1000, -1000,
	-1000, 2233, 1661, 1347, -1000, -1000, -1000, 1068, -1000, -1000,
	1064, -1000, -1000, 43488, -1000, -60, 1335, 3314, 2329, 84599,
	1332, -1000, 1319, -1000, -1000, -1000, 3322, 2186, 2981, 1328,
	-1000, -1000, -1000, -1000, -1000, 65212, -1000, 103359, 84599, 1683,
	984, -1000, 2313, 984, 1057, 2817, -1000, 2655, -1000, 84599,
	3524, 394, -163, -61, 61542, 3392, -1000, 2197, 631, 84599,
	990, -1000, 3452, -1000, -1000, -1000, -1000, 3312, 84599, 3390,
	2978, 1063, 114, 84599, 3495, -1000, -1000, 84599, 2971, 2223,
	2325, 2519, 906, 70507, -1000, 1063, 2114, -83, -1000, 1842,
	31194, 3200, -169, -1000, -1000, -1000, 1074, 58941, 51050, 43488,
	3523, -176, -1000, -1000, -1000, -1000, 197, -1000, -1000, -1000,
	196, -1000, -1000, -1000, -1000, -1000, -1000, 91353, 91353, 69463,
	69463, 69463, 1050, 103359, 103359, 71541, -1000, 681, 103359, 103359,
	680, -1000, 103359, 103359, 3521, 69463, -62, 676, -1000, 957,
	956, 955, -1000, -1000, -1000, -1000, -1000, -1000, -185, 114,
	-1000, 2151, 84599, -1000, 18609, -1000, -1000, -1000, -1000, -1000,
	1061, -1000, -1000, 2037, 2272, 2037, 1823, 1819, -1000, 2129,
	-1000, -1000, -1000, -1000, 2634, 3211, 22341, 3339, 383, 43488,
	43488, 426, 5016, 1915, 383, 43488, 43488, 61542, 472, -179,
	43488, 43488, -1000, 43488, 835, 114065, 3494, 43488, 393, 391,
	-1000, -1000, -1000, 3466, -1000, -1000, -1000, 114065, 43488, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 390, -1000, 24, -1000,
	-1000, -1000, 109046, -1000, 43488, 388, 3264, -1000, 387, 386,
	6147, 512, 111208, 111025, 110858, 385, -1000, -1000, 384, 365,
	114065, 2815, 114065, -1000, -1000, 979, 979, 1406, 1406, 1406,
	1406, 3451, 930, 1198, 907, 798, 798, 798, 877, 913,
	913, 798, 798, 798, 2809, 2473, 675, 7213, -1000, -1000,
	114065, 114065, 362, -1000, -1000, -1000, -168, 361, 5815, -1000,
	2758, 3257, 114065, -1000, 51050, 2758, 2758, -1000, -1000, 3018,
	103359, 114065, 51050, -1000, 2812, -1000, 17005, -1000, 22341, -1000,
	-1000, -1000, -1000, 3452, -1000, 55810, -1000, 673, -1000, 12,
	-1000, 3191, -1000, 951, -1000, -67, -67, -1000, -1000, 833,
	3520, 858, 22341, 360, -1000, -1000, -1000, -67, -67, -67,
	-1000, 3147, 114065, 103359, 103359, 103359, 2967, -1000, 3379, -1000,
	1148, 110606, -182, -1000, 103359, 43488, 103359, 51573, 103359, -1000,
	-1000, 2028, 2510, 1236, -1000, 3230, 103359, -1000, 103359, -1000,
	-1000, 103359, 103359, 84599, 103359, 2951, -184, 114065, -68, -1000,
	950, -1000, 1435, -1000, 18076, 103359, 84599, 103359, 84599, 2078,
	2949, -187, 22341, -1000, 3493, 3491, 2961, 3236, 3485, 103359,
	-1000, 103359, 84599, 3144, -1000, -1000, -1000, -1000, 1656, 1311,
	1057, -70, 669, -1000, 948, -1000, -1000, 946, 1057, -1000,
	69463, 53692, 578, -1000, 2674, -1000, 89259, 2211, 114, -1000,
	3519, 91875, 668, -1000, 2141, -1000, 832, 64680, 2233, 114,
	84599, -1000, -1000, 578, 359, -71, -1000, 1131, 22341, 84599,
	2960, 2538, 906, 70507, -1000, 1443, 2605, -1000, -72, -1000,
	519, 114, 2114, -1000, -83, 114065, -1000, 934, -1000, -1000,
	-1000, -189, -1000, -1000, 356, -1000, 3141, 3140, -1000, 2776,
	51573, 666, 658, 103359, 3135, -1000, -1000, -190, 2721, 2721,
	69463, 53692, 69463, 1060, -1000, 2423, -1000, -1000, -1000, -1000,
	-1000, 22341, 1747, -1000, 652, 644, -1000, -1000, -1000, -1000,
	3211, 383, 383, 43488, 43488, 43488, 383, 472, -192, -1000,
	383, 383, -168, -1000, -1000, 113050, -1000, -1000, -1000, 114065,
	-1000, 17543, 2045, -1000, 110423, -1000, 29547, -1000, -1000, 43488,
	43488, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 47331,
	2791, 642, 61542, -1000, -1000, 336, 1071, 43488, 45135, 3077,
	1071, 1071, -1000, -195, -1000, -1000, -1000, 3452, 12, -1000,
	-1000, 3518, 22341, -1000, 69463, 767, -1000, 3517, -1000, -1000,
	-1000, -1000, -1000, -1000, 103359, -1000, 103359, -1000, 22341, 103359,
	2782, 2295, -1000, -1000, 2575, 641, 47331, 84599, 912, -1000,
	3419, 2768, 1916, 51573, -1000, 3211, -1000, 110256, -1000, -198,
	-206, 2292, -1000, -1000, 2291, 43488, -1000, 61542, 635, 2186,
	2186, -208, -213, -1000, -1000, 43488, 1309, 103359, 30645, -1000,
	3516, 3203, -1000, -1000, -1000, -1000, 103359, 43488, 1306, -1000,
	-1000, -1000, 3484, 2186, 22341, -1000, 2186, 2186, 3236, 1234,
	103359, 84599, -1000, 2366, 2366, 69463, 53692, -1000, -85, 1057,
	3389, 2030, 2696, -1000, -1000, -1000, -1000, 2564, -1000, -1000,
	103359, 2556, 1051, -1000, -214, -1000, 933, 932, 71541, 1031,
	1032, -1000, -1000, -1000, -1000, 578, 3385, -1000, 3483, 630,
	103359, 2222, 619, 22341, 3197, 906, 70507, -1000, 3019, 1842,
	-1000, 2311, 103359, 3187, -1000, 2605, 618, -1000, 1050, 614,
	612, 2974, 2974, -215, 51573, 51573, -216, 609, 1050, -1000,
	-221, -1000, -1000, -1000, -1000, -86, -1000, 882, 881, -1000,
	-1000, 84599, 84599, 43488, 43488, -1000, 383, 383, 383, -1000,
	332, -1000, -1000, 2114, 3256, -1000, -92, 110171, 110004, 954,
	47331, 61542, -222, -1000, -1000, 103359, 114065, -94, -1000, 114065,
	608, 607, 449, -1000, -1000, -1000, 752, -1000, -1000, 3515,
	-1000, -1000, 1537, -1000, -1000, -1000, 103359, 2320, -1000, 1140,
	43488, 7213, 605, 43488, -1000, 3382, -1000, 2667, 2806, 2674,
	603, -1000, -1000, -1000, -1000, 988, 103359, 1130, 1900, -1000,
	-1000, 114065, 3236, 51573, -1000, -1000, 602, 601, 114065, 595,
	908, 2790, -1000, -1000, -1000, -1000, 114065, 590, 3314, -1000,
	-1000, -1000, -1000, 2186, 84599, -1000, -1000, -1000, -228, -1000,
	-1000, 1907, 114, 1031, -1000, 2058, 2211, 587, -1000, -1000,
	2196, 2637, -1000, 91875, 30096, 30096, 331, 3377, 1032, -1000,
	3457, -1000, 3367, 114, -1000, 51573, -1000, 84599, 51573, 2218,
	-1000, 2499, 70507, -1000, 2519, -1000, -1000, -231, 103359, 1842,
	-1000, -1000, 69463, 69463, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1130, -233, -236, -1000, 69463,
	-1000, -1000, 2423, -1000, 103359, -1000, 103359, -1000, -1000, -238,
	-239, -1000, 2155, 43488, 29547, -1000, -1000, 954, -246, -1000,
	-131, -1000, 3342, 45135, 3513, 3511, 3510, -1000, -1000, -1000,
	-1000, 2959, 2756, 109599, 2474, 103359, 109571, -1000, 2803, -1000,
	-1000, 2030, 103359, -1000, -1000, 2674, 2737, 84599, 1132, -247,
	2037, 2037, 43488, 28998, 2055, 43488, -1000, -1000, 3236, -1000,
	2781, 3462, -1000, 2196, 84599, 103359, -1000, 3225, -1000, 3126,
	-1000, -1000, -1000, 2674, 114, -1000, -1000, 114, -1000, -248,
	1131, -249, 84599, 906, -1000, 2538, 1074, -1000, -1000, -254,
	-256, 1916, 1130, 1048, -263, -1000, -264, -265, -1000, -1000,
	325, 44586, 44586, 44586, -168, -205, -1000, 103359, 581, -1000,
	-1000, -1000, -1000, 2908, 1056, -1000, 2199, 2032, 323, 1147,
	-1000, -1000, 2768, -272, -1000, 1055, 578, -1000, 43488, 1130,
	-274, -1000, 1114, -275, -1000, 1108, -280, -1000, 2788, -1000,
	-281, 2186, 1053, 3299, -1000, -1000, -1000, -1000, 576, -282,
	-1000, -1000, 2308, -1000, 2030, 1051, -1000, 1130, 570, 1916,
	567, 1440, 3197, 3023, 1050, 1050, 2674, 1916, 1074, 564,
	1050, -1000, -1000, -1000, 2965, -1000, 48395, 2208, 1802, 112336,
	2965, 2965, -1000, -1000, 103359, 3281, -1000, 2207, 2200, 1597,
	-1000, -1000, -1000, -1000, -1000, -1000, 1074, -1000, 3280, 2474,
	114065, 2674, -1000, 2037, 2695, -1000, 2037, 2787, -1000, 2042,
	-1000, -1000, -1000, 1761, 3446, 103359, -1000, 103359, 1770, 1758,
	3509, 1031, 2196, 1916, 51573, 2674, 51573, -1000, -1000, 1411,
	-1000, -1000, 2030, 2674, -1000, -1000, -1000, 1818, 3414, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 903, -1000, 3111,
	-1000, 1160, 2297, 2297, -1000, 901, 2199, -1000, -1000, 562,
	-1000, 561, -1000, 2127, -1000, -1000, -283, -1000, -1000, 3508,
	-1000, 2196, -1000, 2674, -288, 2030, -289, -1000, 1603, 1048,
	2030, 1796, -1000, -1000, 2105, 44037, 43488, -1000, 3432, -1000,
	-1000, 2486, -1000, 43488, 2768, 43488, 43488, 57378, 2171, -1000,
	-1000, 2030, 1130, 1048, 1916, 58941, 1074, 1048, -1000, -1000,
	-1000, 114065, -1000, -1000, -1000, 114065, -1000, -291, -297, -270,
	91353, -1000, -1000, -1000, 1048, 1916, 1074, 2674, -266, -1000,
	1074, 2030, 1289, -298, 1074, 2674, -1000, 2030, -1000, -1000,
	-1000, 559, -1000, -1000, 2030, 1048, 43488, 1048, 1074, -303,
	1074, -1000, 2030, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4380, 4379, 4375, 4374, 4371, 4370, 4369, 4367, 4366,
	4365, 4363, 4360, 4359, 4358, 4357, 4352, 4351, 4347, 4342,
	4338, 4336, 4335, 4328, 4325, 4321, 4316, 4312, 4310, 4306,
	4305, 4304, 4303, 4296, 4294, 4293, 4291, 4287, 4286, 4285,
	4284, 4282, 4281, 4279, 4277, 4275, 4272, 4271, 4270, 4269,
	4268, 4266, 4261, 4260, 41, 4259, 4258, 4257, 4255, 4254,
	4251, 4250, 4248, 4247, 4246, 4245, 4242, 4240, 4239, 4238,
	4237, 4236, 4235, 4234, 49, 4233, 243, 4232, 4231, 4228,
	4225, 4224, 4223, 4222, 4214, 4213, 4212, 4210, 4204, 241,
	4203, 137, 4202, 4200, 4199, 4198, 4196, 240, 4195, 4190,
	4183, 4181, 252, 4179, 4174, 4173, 4171, 4169, 4166, 4158,
	4152, 4149, 4148, 89, 130, 4142, 4141, 1492, 4140, 4138,
	4137, 4136, 4130, 4129, 4126, 4125, 4122, 4121, 216, 4120,
	239, 4119, 4115, 4111, 4102, 4099, 4097, 4096, 4094, 4093,
	4092, 4089, 4083, 4077, 4076, 4072, 4071, 4070, 4068, 4067,
	4064, 4062, 4061, 4060, 4058, 4057, 4055, 4054, 4052, 4049,
	4047, 4044, 4043, 4042, 249, 179, 4040, 4039, 238, 236,
	4038, 4037, 4036, 4035, 4034, 111, 4, 34, 4032, 4031,
	65, 68, 66, 83, 82, 79, 4030, 88, 4029, 102,
	42, 4028, 19, 2, 220, 224, 7257, 219, 4027, 4026,
	4024, 211, 172, 4023, 209, 4022, 4021, 4020, 4016, 75,
	54, 162, 159, 154, 144, 303, 4015, 4014, 86, 58,
	45, 35, 23, 4005, 4003, 4000, 3997, 3164, 101, 3996,
	235, 214, 146, 3994, 3988, 3986, 150, 3985, 3983, 38,
	3982, 80, 105, 107, 16, 104, 3980, 125, 25, 3979,
	131, 96, 3978, 129, 81, 69, 8323, 4558, 3971, 100,
	53, 158, 84, 149, 145, 176, 147, 134, 183, 191,
	187, 152, 29, 3968, 222, 3961, 3347, 60, 136, 3960,
	3959, 3956, 63, 174, 87, 3955, 3950, 56, 6, 21,
	7, 189, 14, 94, 20, 3949, 12, 3947, 3941, 3938,
	3933, 27, 139, 3931, 251, 3929, 62, 40, 47, 3926,
	110, 190, 3924, 201, 112, 3923, 3920, 229, 182, 135,
	3918, 74, 204, 3911, 3909, 3908, 3906, 3905, 124, 8,
	114, 3904, 3902, 151, 3900, 39, 210, 171, 3893, 48,
	3892, 3890, 156, 85, 115, 248, 122, 196, 91, 200,
	165, 206, 3888, 3886, 3885, 170, 3884, 3879, 195, 123,
	3876, 3872, 178, 254, 37, 61, 208, 59, 168, 119,
	3868, 175, 3866, 3864, 250, 161, 186, 1, 15, 67,
	108, 3863, 5, 207, 127, 177, 109, 3862, 5896, 1928,
	2165, 3860, 3859, 118, 95, 57, 106, 128, 234, 55,
	3855, 3854, 1854, 3853, 3851, 3850, 3849, 166, 3848, 3847,
	3846, 121, 141, 169, 3844, 77, 73, 51, 10, 138,
	225, 237, 99, 198, 157, 230, 3842, 3841, 3837, 164,
	3836, 46, 132, 3832, 173, 223, 3830, 3828, 92, 3827,
	120, 1673, 50, 126, 3825, 194, 3824, 3823, 3822, 3821,
	3820, 3819, 3817, 1600, 205, 3815, 3813, 3812, 31, 167,
	3811, 233, 202, 155, 93, 36, 3810, 70, 3371, 3809,
	148, 199, 98, 153, 3807, 3806, 845, 43, 0, 11859,
	6622, 10327, 10766, 3803, 4542, 3802, 3801, 3800, 193, 116,
	3798, 3796, 3795, 90, 3793, 64, 3792, 3790, 52, 3787,
	17, 9, 11, 24, 22, 103, 76, 3785, 3782, 197,
	113, 142, 3780, 245, 203, 3779, 3778, 3776, 3774, 78,
	3772, 32, 3770, 30, 3768, 3767, 33, 13, 26, 3765,
	3764, 213, 3763, 192, 215, 3762, 133, 3761, 3356, 117,
	3760, 3756, 231, 71, 3749, 228, 3748, 3305, 3747, 3746,
	18, 3744, 3743, 212, 160, 188, 3739, 3738, 140, 3734,
	3731, 3730, 226, 3729, 3727, 28, 3726, 3, 3723, 3721,
	185, 3138, 3719, 3712, 44, 3709, 163,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 542, 542, 21, 35,
	22, 36, 15, 543, 543, 543, 543, 28, 23, 37,
	25, 25, 25, 25, 25, 178, 178, 178, 178, 20,
	20, 31, 31, 212, 212, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 541, 541,
	214, 214, 213, 208, 208, 544, 544, 215, 215, 215,
	217, 217, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 442, 442, 442, 474, 474, 473, 473, 473, 557,
	557, 558, 558, 558, 558, 558, 116, 116, 341, 341,
	341, 43, 43, 43, 43, 43, 536, 536, 180, 180,
	180, 182, 182, 181, 181, 181, 181, 65, 65, 549,
	549, 550, 550, 548, 551, 551, 551, 179, 179, 179,
	112, 112, 112, 112, 113, 113, 114, 114, 183, 183,
	183, 185, 185, 184, 184, 184, 184, 184, 184, 184,
	184, 189, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 93, 93, 476, 476, 477, 477, 174, 174, 175,
	175, 175, 175, 176, 176, 177, 177, 177, 57, 186,
	186, 188, 188, 187, 187, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 165, 165, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 62, 62, 62, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 560, 560, 561,
	561, 562, 562, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	71, 71, 303, 303, 275, 275, 72, 72, 72, 73,
	73, 74, 74, 59, 59, 534, 534, 318, 318, 433,
	433, 76, 76, 340, 340, 77, 77, 77, 77, 77,
	77, 78, 78, 78, 78, 78, 78, 78, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 86, 86, 86, 86, 86, 87, 87, 87,
	84, 84, 84, 81, 81, 81, 80, 80, 80, 85,
	85, 85, 533, 265, 265, 83, 83, 83, 268, 268,
	82, 82, 82, 319, 319, 88, 88, 88, 88, 276,
	89, 89, 89, 89, 89, 89, 89, 89, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 435, 435, 90, 90, 90, 400, 400, 94, 94,
	94, 356, 356, 95, 95, 95, 95, 95, 96, 96,
	96, 96, 96, 96, 115, 115, 115, 115, 115, 115,
	538, 538, 311, 311, 230, 230, 230, 230, 105, 105,
	105, 105, 106, 106, 106, 107, 107, 170, 170, 122,
	122, 122, 122, 122, 121, 121, 121, 121, 121, 121,
	49, 49, 49, 50, 50, 51, 51, 52, 52, 53,
	53, 54, 54, 54, 54, 54, 124, 124, 554, 554,
	126, 123, 123, 123, 125, 125, 125, 125, 127, 128,
	128, 128, 128, 128, 128, 128, 128, 129, 129, 467,
	467, 327, 327, 465, 465, 485, 485, 466, 466, 280,
	280, 280, 280, 280, 281, 281, 281, 475, 475, 475,
	475, 475, 475, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 171, 171, 172,
	173, 173, 173, 173, 173, 150, 150, 150, 164, 164,
	164, 164, 164, 164, 164, 153, 153, 153, 140, 140,
	131, 131, 131, 131, 131, 131, 131, 135, 135, 135,
	135, 135, 135, 135, 135, 132, 132, 142, 142, 142,
	142, 142, 136, 136, 137, 137, 160, 160, 139, 139,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 133,
	133, 133, 133, 144, 144, 144, 144, 363, 363, 363,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 163, 163, 163, 163, 163, 163, 552, 552, 553,
	553, 157, 157, 157, 157, 157, 157, 414, 414, 151,
	151, 151, 151, 156, 156, 156, 156, 159, 159, 159,
	159, 346, 346, 148, 148, 148, 149, 149, 149, 154,
	154, 155, 152, 152, 158, 158, 158, 158, 134, 134,
	134, 564, 564, 564, 161, 161, 147, 147, 162, 162,
	162, 162, 162, 162, 162, 162, 146, 146, 146, 145,
	145, 145, 145, 138, 535, 535, 531, 531, 531, 531,
	531, 531, 531, 531, 532, 532, 532, 537, 537, 99,
	99, 99, 99, 99, 108, 108, 108, 108, 108, 100,
	100, 100, 100, 100, 102, 102, 101, 101, 101, 101,
	66, 66, 66, 66, 66, 14, 14, 14, 67, 67,
	192, 192, 192, 193, 193, 288, 288, 288, 288, 190,
	190, 191, 191, 68, 68, 565, 565, 565, 545, 545,
	545, 546, 546, 546, 546, 546, 546, 282, 282, 283,
	283, 380, 380, 380, 380, 380, 286, 286, 286, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 289, 289,
	216, 216, 216, 292, 293, 293, 290, 290, 291, 291,
	291, 295, 295, 294, 297, 297, 296, 379, 494, 494,
	496, 496, 496, 496, 496, 496, 496, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 498, 498, 566, 566,
	492, 492, 492, 493, 488, 488, 489, 489, 489, 489,
	489, 284, 284, 285, 285, 285, 285, 490, 491, 309,
	309, 418, 495, 495, 497, 497, 499, 567, 567, 567,
	567, 567, 567, 568, 568, 568, 378, 378, 377, 377,
	301, 301, 500, 500, 500, 500, 501, 501, 501, 501,
	501, 504, 503, 502, 502, 502, 502, 502, 70, 70,
	70, 343, 343, 342, 342, 344, 344, 344, 344, 344,
	344, 344, 344, 344, 344, 344, 344, 344, 344, 344,
	167, 167, 233, 233, 64, 64, 64, 12, 12, 12,
	547, 547, 547, 69, 69, 69, 69, 69, 69, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 540,
	540, 539, 539, 234, 234, 570, 570, 75, 75, 75,
	75, 75, 75, 75, 436, 436, 437, 437, 63, 63,
	63, 63, 63, 364, 364, 362, 362, 361, 361, 308,
	308, 416, 416, 416, 417, 238, 238, 239, 239, 209,
	209, 209, 27, 26, 19, 19, 24, 24, 39, 39,
	39, 39, 42, 42, 38, 38, 38, 38, 40, 40,
	34, 34, 555, 555, 556, 556, 104, 104, 109, 109,
	109, 109, 109, 110, 110, 110, 110, 111, 111, 111,
	111, 120, 120, 166, 166, 166, 166, 166, 166, 166,
	44, 44, 44, 44, 56, 56, 56, 56, 118, 572,
	572, 572, 119, 119, 119, 571, 571, 231, 231, 374,
	374, 375, 375, 573, 573, 376, 376, 376, 376, 376,
	224, 223, 225, 225, 226, 226, 61, 61, 61, 218,
	218, 219, 219, 220, 220, 221, 221, 222, 222, 574,
	574, 97, 97, 97, 169, 169, 274, 274, 274, 371,
	371, 371, 302, 302, 245, 245, 373, 373, 373, 373,
	339, 339, 339, 168, 168, 316, 316, 329, 329, 330,
	330, 430, 430, 331, 103, 103, 117, 117, 196, 196,
	194, 194, 194, 194, 194, 194, 194, 194, 201, 201,
	202, 202, 203, 203, 204, 205, 205, 205, 205, 320,
	320, 206, 206, 206, 195, 195, 195, 197, 197, 197,
	197, 197, 197, 197, 200, 200, 200, 200, 207, 207,
	207, 199, 199, 511, 511, 511, 513, 513, 515, 515,
	514, 514, 510, 510, 512, 512, 569, 569, 345, 345,
	345, 299, 300, 298, 298, 306, 306, 304, 305, 305,
	307, 307, 415, 415, 415, 210, 210, 210, 336, 336,
	336, 336, 337, 337, 367, 367, 365, 365, 365, 365,
	366, 366, 368, 368, 368, 369, 369, 370, 370, 333,
	333, 334, 334, 335, 335, 335, 335, 396, 396, 198,
	198, 198, 313, 313, 313, 314, 314, 386, 386, 386,
	386, 386, 386, 387, 387, 385, 385, 385, 385, 419,
	419, 419, 419, 419, 419, 419, 419, 419, 420, 421,
	421, 315, 315, 422, 372, 372, 529, 529, 529, 530,
	530, 413, 413, 423, 423, 423, 423, 423, 423, 411,
	411, 412, 412, 431, 432, 432, 349, 349, 349, 349,
	347, 347, 350, 350, 350, 350, 348, 348, 424, 424,
	424, 424, 338, 338, 425, 425, 425, 425, 426, 427,
	427, 428, 428, 381, 382, 382, 438, 438, 438, 438,
	440, 312, 312, 312, 312, 312, 487, 486, 486, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	454, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	455, 455, 455, 455, 455, 455, 455, 441, 441, 441,
	441, 441, 445, 445, 445, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 446, 446, 451, 451,
	452, 452, 452, 447, 448, 453, 453, 453, 453, 575,
	575, 457, 457, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 443, 443, 443, 450, 450, 450, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 357, 357, 359, 359, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 388, 388, 388, 388, 388, 388, 388,
	388, 388, 388, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 389, 389, 389, 389, 389, 389, 389, 389,
	389, 389, 390, 390, 390, 390, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 391, 391, 391,
	391, 505, 505, 505, 505, 505, 505, 505, 505, 392,
	392, 508, 508, 509, 509, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 506, 506,
	506, 506, 506, 506, 506, 506, 506, 506, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 507, 507, 507, 507, 507, 507,
	507, 507, 507, 507, 516, 516, 517, 517, 519, 519,
	520, 520, 521, 522, 522, 522, 523, 524, 524, 518,
	518, 525, 525, 525, 525, 526, 526, 527, 527, 527,
	527, 527, 528, 528, 528, 528, 528, 402, 402, 403,
	403, 409, 409, 409, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	235, 235, 235, 235, 235, 325, 325, 323, 323, 323,
	326, 326, 324, 324, 322, 322, 321, 321, 399, 399,
	397, 397, 401, 401, 351, 351, 456, 456, 456, 456,
	456, 456, 456, 456, 352, 352, 352, 360, 353, 353,
	354, 354, 354, 354, 354, 393, 394, 355, 355, 355,
	395, 395, 404, 408, 408, 407, 406, 406, 405, 405,
	383, 383, 384, 384, 332, 332, 576, 576, 328, 328,
	429, 429, 429, 429, 278, 278, 317, 317, 277, 277,
	269, 269, 270, 270, 270, 270, 310, 310, 410, 410,
	458, 458, 459, 459, 460, 460, 461, 461, 462, 463,
	464, 398, 398, 255, 254, 242, 243, 253, 252, 251,
	241, 244, 248, 249, 250, 246, 247, 261, 260, 259,
	266, 267, 257, 258, 434, 240, 271, 271, 272, 272,
	272, 273, 273, 273, 273, 236, 236, 237, 237, 262,
	262, 263, 264, 264, 256, 256, 256, 227, 227, 227,
	228, 228, 229, 229, 472, 472, 469, 469, 469, 470,
	470, 470, 471, 471, 471, 471, 468, 468, 468, 468,
	468, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 479, 479,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 481, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 483, 484,
	484,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 7, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 6, 3, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 1, 3,
	3, 5, 3, 1, 3, 2, 2, 2, 2, 1,
	2, 2, 5, 3, 3, 6, 6, 3, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 2, 6, 4, 7, 7, 7, 2,
	1, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 1, 3, 5, 4, 6, 4, 3, 0, 1,
	3, 2, 4, 2, 4, 1, 6, 3, 1, 1,
	5, 3, 2, 6, 3, 3, 4, 4, 3, 1,
	3, 2, 3, 3, 1, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 11, 14,
	1, 2, 3, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 1, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 9, 9,
	3, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 1,
	2, 8, 4, 2, 5, 5, 5, 2, 1, 3,
	11, 12, 8, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 3,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 9, 12, 3, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 3, 5, 4, 6, 3, 5, 4, 6, 4,
	6, 5, 7, 3, 3, 3, 3, 3, 4, 3,
	2, 4, 2, 3, 3, 4, 3, 4, 3, 4,
	5, 6, 6, 7, 6, 7, 6, 7, 3, 4,
	4, 1, 3, 1, 3, 3, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 1, 2, 3,
	2, 3, 2, 3, 1, 0, 1, 3, 1, 3,
	3, 3, 1, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 4, 3, 1, 2, 3, 0,
	3, 3, 2, 2, 1, 2, 2, 3, 2, 1,
	1, 1, 5, 1, 2, 4, 2, 0, 1, 0,
	3, 5, 1, 0, 1, 2, 1, 0, 1, 3,
	3, 2, 1, 1, 1, 3, 1, 3, 3, 1,
	1, 1, 1, 5, 3, 1, 1, 3, 1, 1,
	1, 1, 2, 2, 1, 1, 2, 2, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 563, -91, -88, -57, -55, -94, -95,
	-77, -96, -90, -115, -120, -103, -104, -116, -122, -166,
	-171, -172, -173, -3, -43, -45, -58, -76, -78, -89,
	-98, -97, -99, -105, -112, -108, -93, -49, -117, -121,
	-130, -167, -168, -169, 32, 31, 99, 79, 150, 125,
	133, 194, 370, 407, 418, 383, 399, 388, -125, -126,
	435, -44, -56, -119, -118, 72, 126, 394, -4, -12,
	29, 45, -46, -47, -48, 61, -64, -60, -71, -65,
	-62, -559, 101, -512, -79, -82, -111, -563, 138, 157,
	212, -100, -101, 353, -106, -107, 401, -109, -110, 403,
	158, -51, -50, 152, -194, -196, -123, -124, -170, -131,
	-132, -133, -134, -135, -136, -137, -160, -138, -139, -140,
	-141, -142, -143, -163, -144, -145, -146, -147, -152, -148,
	-149, -150, -151, -153, -154, -156, -157, -158, -159, -161,
	-162, 440, -155, 495, 48, 454, 81, 142, 411, 21,
	-5, -6, -7, -8, -9, -10, -11, -14, -13, -59,
	-61, -63, -66, -67, -68, -75, -69, -70, -511, -80,
	-81, -84, -86, -87, -83, -85, 400, -197, -195, 560,
	510, -16, -21, -22, -17, -18, -20, -23, -19, -24,
	-30, -35, -36, -32, -33, -31, -34, -37, -38, -39,
	-40, -41, -42, -26, -28, -29, -27, -15, -25, 529,
	538, -200, -198, -199, -207, 427, 518, 470, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, -276,
	2, -257, -262, -263, -264, -256, -227, -481, -484, 4,
	-478, -482, 163, 221, 317, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 52, 54, 58, 59, 60, 61, 62, 63, 67,
	72, 73, 78, 79, 80, 81, 82, 83, 84, 90,
	87, 88, 89, 91, 93, 95, 96, 97, 98, 99,
	100, 102, 103, 104, 106, 107, 115, 116, 117, 118,
	120, 125, 126, 129, 124, 128, 131, 132, 133, 136,
	137, 138, 140, 141, 143, 144, 145, 147, 148, 150,
	151, 152, 155, 153, 477, 154, 156, 157, 158, 159,
	169, 170, 171, 176, 178, 182, 183, 186, 187, 188,
	189, 190, 191, 192, 193, 195, 199, 201, 202, 203,
	204, 205, 211, 212, 214, 215, 216, 217, 222, 223,
	227, 224, 233, 234, 238, 239, 240, 242, 246, 247,
	248, 249, 250, 251, 253, 255, 254, 257, 260, 261,
	264, 268, 269, 272, 273, 274, 275, 277, 278, 281,
	279, 282, 283, 280, 284, 286, 287, 288, 289, 290,
	291, 292, 293, 294, 295, 296, 297, 285, 300, 298,
	302, 303, 304, 315, 313, 308, 309, 305, 310, 306,
	307, 311, 312, 319, 320, 323, 209, 325, 326, 329,
	347, 333, 334, 335, 338, 339, 342, 345, 346, 348,
	349, 350, 351, 352, 353, 354, 355, 357, 358, 360,
	361, 362, 364, 365, 366, 368, 370, 371, 373, 375,
	376, 377, 378, 379, 380, 381, 383, 385, 384, 386,
	388, 394, 399, 396, 397, 398, 400, 401, 402, 403,
	405, 406, 407, 409, 410, 411, 412, 414, 416, 417,
	420, 421, 437, 438, 456, 418, 419, 422, 423, 424,
	425, 426, 430, 428, 429, 431, 432, 433, 435, 436,
	439, 440, 442, 443, 444, 445, 446, 447, 450, 452,
	453, 454, 455, 457, 460, 461, 462, 463, 458, 469,
	466, 467, 471, 472, 473, 474, 475, 476, 478, 480,
	488, 489, 490, 492, 495, 496, 497, 498, 486, 500,
	501, 504, 505, 506, 509, 507, 508, 510, 512, 515,
	516, 517, 523, 522, 524, 530, 531, 533, 534, 535,
	36, 49, 50, 53, 55, 57, 68, 69, 70, 74,
	121, 122, 149, 160, 161, 172, 184, 185, 196, 198,
	206, 207, 208, 228, 229, 231, 236, 258, 322, 324,
	340, 344, 359, 363, 367, 369, 382, 413, 448, 459,
	464, 481, 482, 483, 484, 491, 493, 518, 519, 520,
	525, 532, -276, 2, -257, 331, -250, 2, -227, -227,
	370, 28, 2, 28, 358, 429, 472, 474, 2, -538,
	-311, 2, 28, -230, -227, 101, 194, 427, -250, 2,
	-538, -311, 25, 2, -227, 2, 345, -231, 2, 418,
	-227, 278, 2, 563, 93, 269, 73, 413, 432, -128,
	489, -127, 481, 422, -129, -467, 2, 300, -227, 563,
	563, 563, 28, -240, -227, 470, 221, 422, 117, 467,
	563, 2, 470, 350, 522, 428, 117, 379, 221, 497,
	422, -547, 278, 409, 197, 511, -536, 2, -531, 4,
	-482, -478, -270, -269, 470, 475, 117, -264, -256, 553,
	-263, 563, 563, 563, 2, 239, 240, 378, 377, 432,
	433, 563, 563, 563, 563, 420, 2, 159, 22, 27,
	65, 92, 97, 123, 179, 182, 336, -560, 347, 376,
	431, 469, 478, 492, -546, 455, 67, 422, -545, -547,
	278, 497, 136, -361, 117, 269, 193, 505, 474, 472,
	503, 129, 227, 508, 507, 563, 563, 22, 27, 65,
	76, 97, 136, 159, 179, 182, -562, 347, 376, 416,
	431, 469, 478, 492, 2, 522, 278, 428, 470, 221,
	117, 497, 422, -547, 420, 421, 374, -91, 2, 560,
	32, 31, 435, -189, 470, 232, 2, -227, 563, 563,
	2, 239, 240, 420, 421, 563, 563, 180, -531, 2,
	563, 563, 2, 239, 240, 420, 421, 232, 2, 67,
	424, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 2, -164, 432, 455, 203, 46, 45,
	73, 28, 375, 78, 351, 118, 144, 498, 195, 221,
	222, 247, 92, 93, -363, 44, 240, 239, 421, -552,
	420, -414, 471, 423, 429, 466, 251, 418, 489, 101,
	512, 410, 535, 379, 380, 153, 4, 117, 300, 434,
	481, 269, 417, 354, 83, 563, -569, 2, 470, -571,
	2, 489, 489, 2, -571, 2, -571, 2, -571, 2,
	-572, 489, 532, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	-195, -197, -196, 563, 563, 563, 563, 563, 563, 563,
	-164, 432, 2, 73, 28, -304, -306, 502, 230, 146,
	337, -194, -196, 2, -511, -465, 2, -388, -485, -390,
	551, 552, 544, 468, 66, 316, 536, -402, 123, 503,
	331, -484, -391, -404, 149, 413, -326, 8, 9, 5,
	6, 7, -236, -392, -398, 494, 162, 321, -273, 564,
	10, 560, -508, -196, -403, 37, 198, 64, -469, -272,
	-237, -441, 231, -271, -256, -505, -506, 4, -478, -479,
	-470, -444, -452, -448, -449, -455, -227, -481, 76, 109,
	110, 108, 113, 112, 271, 270, 114, 111, 434, 511,
	65, 36, 206, 207, 236, 322, 208, 74, -507, 137,
	-480, 228, 229, 448, 50, 382, 172, 122, 121, 324,
	55, 53, 519, -453, 119, 481, 482, 483, 484, 184,
	185, 57, 160, 161, 344, 367, 464, 491, 493, 196,
	258, 43, 105, 181, 226, 210, 235, 237, 241, 259,
	262, 301, 314, 318, 341, 343, 408, 441, -575, 520,
	459, 68, 69, -513, 384, -514, -250, -513, 563, 563,
	565, 563, -298, -299, -300, 2, 28, 134, 560, 2,
	-419, 2, -420, -424, -196, 252, -423, 560, -421, 558,
	-257, 332, -509, 414, -505, -506, -236, -256, -272, 4,
	-478, -480, 562, -301, 560, 117, 470, 77, 221, -356,
	560, -227, 28, 331, 485, 565, -400, 560, 331, 180,
	334, 59, -227, 522, 2, 2, 437, 2, 560, -128,
	70, 489, 43, 432, -375, 2, -376, -223, -224, -225,
	-431, -226, 238, 373, 381, 539, 127, 316, 535, -465,
	-554, 180, 543, 485, -465, -327, 562, 2, 2, 2,
	2, 2, 2, -424, 206, -257, 2, -254, -468, 4,
	-478, -482, -479, -483, -481, 28, 31, 32, 33, 35,
	37, 38, 39, 40, 56, 64, 65, 71, 75, 77,
	86, 92, 101, 108, 109, 111, 110, 112, 113, 114,
	123, 127, 130, 134, 135, 139, 142, 146, 162, 164,
	177, 179, 180, 194, 197, 200, 213, 225, 230, 232,
	252, 256, 263, 270, 271, 316, 321, 327, 331, 332,
	336, 337, 356, 372, 387, 404, 427, 434, 451, 465,
	470, 479, 485, 487, 494, 502, 503, 511, 513, 521,
	526, 527, 528, 529, -484, 76, 2, -424, 206, 2,
	-259, 206, -424, -262, 2, -241, -227, 2, -253, -468,
	2, -277, 206, -257, -258, -262, -260, 2, -262, -266,
	2, -227, -476, 206, 2, -472, 10, -471, 5, 4,
	-478, -482, -479, 522, 232, 485, 565, -317, -269, -270,
	-464, 8, -310, -227, 562, -388, 2, -117, -102, 2,
	177, -388, 206, 2, -117, 206, 2, -388, 206, 2,
	-117, 206, 2, -549, 2, -476, 206, -227, 2, 282,
	2, 2, 492, 2, 97, 470, 116, 2, 398, -561,
	416, 496, 2, 2, 2, 2, 2, 2, 470, -246,
	2, -227, 177, -266, 206, -267, 2, -227, -228, 428,
	-570, 384, -476, 206, 2, 522, -260, 2, -260, 221,
	234, -241, 206, 2, 474, 472, 474, 472, 180, 2,
	232, 2, 232, 2, -425, 2, -426, -420, -427, 558,
	332, 282, 2, 2, 2, 2, 2, 206, -227, 470,
	116, 2, 250, 2, 2, 2, 2, 2, 2, 2,
	-319, 206, 2, -257, 522, -319, 206, 2, -319, 206,
	2, -362, 2, 86, -241, 206, 2, -265, 206, 2,
	-260, -268, 206, 2, -266, -477, 206, 2, -476, -388,
	2, -117, 2, -435, 2, -434, -471, 518, -91, 560,
	-91, 560, 432, 560, -476, -257, -257, -388, 2, -117,
	-102, 2, -388, 2, -117, 2, -114, -113, -476, 560,
	180, -388, 2, -117, -102, 2, -388, 2, -117, 2,
	-189, 177, 2, 117, 470, -164, 2, 177, 513, 2,
	8, 2, 213, -476, 423, 380, 169, 2, 437, 2,
	438, 73, -363, 535, 73, 180, 2, 180, 2, -346,
	2, 529, 2, 2, -535, 2, 331, 180, 2, 180,
	2, 180, 2, 180, 2, 180, 2, 377, 433, 490,
	240, 2, -117, 526, -102, -388, 526, 2, -553, 177,
	421, -388, 2, 488, 249, 154, 180, -346, 2, 180,
	2, 180, 2, 5, 2, 378, 456, 2, 238, 373,
	456, 2, -257, -564, 2, 470, 522, 428, 2, 2,
	87, 88, 180, 2, 180, 2, 180, 535, 2, -338,
	-424, -374, -375, -374, 485, -304, -306, -164, 437, 2,
	-201, -336, -203, 177, -365, -366, -204, 263, 164, 327,
	-205, -345, 28, 134, -345, -345, 59, 561, 561, 11,
	12, 75, 41, 551, 552, 553, 554, 175, 555, 556,
	549, 550, 548, 541, 542, 546, 244, 245, 94, 545,
	543, 85, 276, 415, 165, 166, 167, 168, 395, 219,
	34, 220, 14, 15, 16, 33, 336, 262, 536, 210,
	441, 544, 17, 18, 19, 235, 237, 318, 49, 213,
	-235, -279, -388, -388, -388, -388, -388, -388, -388, 343,
	560, -332, -383, 558, -196, 560, 560, 560, -464, -196,
	-388, -402, 561, -324, 560, -196, -402, -397, 560, 413,
	558, 560, -405, -388, 5, 5, 5, 560, 562, -516,
	530, 177, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 560, 560, 560, 369, -446, 560,
	-445, 560, -445, -445, 523, -443, 560, 538, 531, 560,
	-443, 560, 560, 560, 560, 560, 560, 560, 560, 560,
	560, 560, 560, 560, 523, 565, -513, -301, 560, -328,
	-429, -388, 553, -328, -328, 331, -321, -388, 105, -349,
	241, 301, 181, 259, 408, 226, -385, 564, -385, -413,
	538, -196, -421, -256, -196, -423, 560, -419, -413, -92,
	-464, -76, -89, -97, -117, -130, -168, -169, 553, -257,
	560, 180, 560, 562, -468, 180, -310, -241, -257, -271,
	-272, -277, 133, -321, -531, 497, 422, -310, -230, 38,
	-399, -438, -439, -487, 564, -486, -441, -451, -447, -450,
	359, 363, -470, 53, 519, -453, 231, 4, -478, -480,
	228, 229, 448, 50, 382, 172, 122, 121, 324, 55,
	481, 482, 483, 484, 184, 185, 57, 520, 459, 68,
	69, -531, 497, 422, -310, 177, -474, 2, -473, -472,
	114, 434, -362, -467, -321, 38, -375, 2, 123, -472,
	-573, 565, 261, -281, 275, 315, 202, 332, 533, 325,
	127, -475, 5, 4, -398, -410, 123, 269, 231, -458,
	-460, 8, -459, 9, -461, 551, 552, -466, -465, 107,
	562, -468, -212, 396, 435, -211, 24, 29, 138, 516,
	155, -291, 223, 346, 350, 149, 452, 506, -542, -543,
	419, 476, 477, 89, 325, 435, 396, 149, -342, -344,
	38, 115, 304, 345, 60, 216, 280, 281, 454, 525,
	149, 435, 396, 346, -543, 98, 396, -543, -214, 452,
	506, -542, -543, 419, 396, -213, -291, 149, 564, 24,
	396, 435, 346, -557, -558, 138, 29, 396, 346, -539,
	-510, 529, 149, -424, 206, -550, -113, 253, 5, 10,
	-113, -317, 565, 565, -468, 553, 421, 420, 149, 149,
	149, 149, 177, 316, 2, 2, 2, 2, 2, 182,
	-545, -562, 2, 2, -257, 206, -303, 331, -534, -318,
	470, -257, 316, 43, -259, 206, 2, -262, 522, -539,
	316, -261, 206, -257, 38, 560, 2, -362, 2, 221,
	-510, 316, -425, -274, -257, -420, -274, 435, -250, 38,
	-385, -257, 2, 149, 2, 2, 2, -227, -215, 565,
	63, 402, 149, -319, 206, -215, 149, -215, 149, -278,
	206, -277, -215, 149, -215, 565, 149, -215, 565, 149,
	565, 149, 561, 565, -435, -435, -476, -177, 529, 180,
	101, 560, 560, -189, -432, 565, -431, -477, -114, -476,
	-476, -534, -241, 2, -257, 2, 470, 242, -476, -177,
	213, -476, -476, -476, -467, 28, 438, 2, 377, 433,
	490, 88, 438, 2, -257, 470, 117, 221, 79, -537,
	177, -532, 409, 422, -531, -257, 117, -257, 117, -257,
	117, -257, -257, 2, 2, 2, 2, 2, 84, 84,
	2, 45, -553, 177, 2, 488, 2, 488, 2, -227,
	-227, -227, 455, 261, -257, 177, 470, 221, 470, 221,
	117, 470, -215, 565, -231, -201, -336, -467, -337, -336,
	-202, -201, -204, 177, 381, 507, 304, 439, 246, -366,
	-365, 28, -388, -370, 171, 303, -388, -368, -390, 551,
	552, -459, -461, -320, 325, -195, -195, -195, -307, -415,
	-388, 372, 221, -440, -438, -438, -255, -468, 481, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, -388, -388, -388, -388, -388, -388,
	-388, -388, -388, -388, 262, 210, 441, 49, 213, -388,
	485, -388, -388, -388, -388, 298, 316, 321, 494, 162,
	504, 134, 325, -576, 465, 40, -395, -196, -325, 560,
	-409, 35, 451, 28, -402, 560, 2, -383, -388, -384,
	-322, -321, -321, 561, 521, 28, 134, 553, 2, 561,
	565, 38, 561, -388, -322, -401, -397, -321, -408, -407,
	526, -357, -358, 534, 285, 120, 204, 283, -359, 426,
	-462, 8, -468, 553, -517, 170, 197, 560, 561, 2,
	561, 2, 561, -388, 2, 561, -388, 2, 561, -388,
	2, 561, -388, 2, 561, 2, -388, -388, -388, -388,
	-388, -388, -388, -321, 8, -462, -462, 481, 481, -462,
	-462, -462, -454, 359, 360, 361, 362, 264, 265, 266,
	267, 363, 364, 365, 366, 290, 291, 292, 293, 286,
	287, 288, 289, 294, 295, 296, 297, 189, 190, 191,
	192, 185, 186, 187, 188, -454, -351, 2, -456, -321,
	4, 534, 285, 120, 204, 283, 426, 5, -351, 2,
	-352, 2, -388, -321, -353, -389, -390, 551, 552, 544,
	-402, -354, 2, -388, -322, -388, 56, 256, 487, -355,
	-388, 180, -321, -321, 2, -321, 2, -514, 38, -321,
	-313, 565, 180, 38, 4, -313, -313, 560, 561, 565,
	-350, 201, 279, 274, -350, -419, -349, 241, -347, 341,
	-347, -347, -413, -242, 558, 566, -468, -413, -412, -411,
	38, -250, 338, -413, -413, 562, 561, -412, 559, -529,
	560, 563, 563, 563, 563, 563, -257, 560, -321, -468,
	562, 457, 561, 235, 235, 235, 235, 414, 561, 485,
	-533, -265, -268, 529, -91, 333, 561, 565, -312, 37,
	558, 562, -462, 2, 2, -457, 523, 560, 560, -358,
	560, 180, -533, -268, -311, 565, 485, -261, -554, 561,
	489, -376, -280, 381, 450, 397, 430, 467, 8, 9,
	8, 9, 565, -468, 565, -555, 92, 485, 77, 422,
	-379, 206, 77, -488, -244, 92, -489, -227, 71, 503,
	372, 179, 147, -555, 92, 372, -555, 92, 92, 435,
	455, 485, 59, -424, 41, 41, 28, -117, 257, 180,
	535, 470, 221, 422, 485, -424, -344, -438, 115, 280,
	281, 59, -463, -458, 551, 552, -463, 59, -463, -463,
	-463, 529, -259, -424, 422, 485, 485, 485, 485, 565,
	41, 41, 28, -117, 257, 180, 485, -277, -242, 517,
	42, 517, 485, 42, 422, 485, 565, 42, 42, 485,
	485, -540, -232, 104, 310, 273, 311, 96, 307, 95,
	306, 102, 308, 103, 309, 524, 319, 62, 305, 284,
	312, -233, -234, 352, 515, -476, 435, 396, 149, 213,
	-432, 213, -432, -269, -227, 562, -117, -388, -388, -117,
	-388, -117, 45, 149, 2, -570, 250, 560, -284, 316,
	180, -310, -433, 232, 565, -318, 149, -473, -343, -342,
	316, -261, 206, 2, 149, -301, 316, 143, 560, 379,
	2, -243, 206, -228, -227, -362, -218, 473, 149, -340,
	513, -371, -117, 560, 123, 38, -371, -329, -330, -430,
	-331, -244, 560, -250, -385, -227, 2, -257, -319, -215,
	149, -319, -319, -215, 565, 149, -241, -260, -265, -266,
	-268, -476, -477, -91, -434, 561, 561, 561, -176, 335,
	-175, -227, 5, -189, 513, -283, -380, -379, -492, -493,
	-488, 262, 221, 503, 234, 163, -302, -245, -244, 116,
	-183, 529, -113, 561, -432, 213, -177, -177, -432, -432,
	-257, 177, -476, -177, -177, -177, 2, 2, 2, -346,
	-257, -241, -277, -257, -310, -310, -310, -346, -241, -346,
	-241, -346, -241, -117, -388, 2, 432, 177, 177, 562,
	-346, 379, 117, 470, 350, 221, -257, -277, -257, -277,
	-241, -257, -424, -337, -202, 332, 246, 439, -368, -369,
	-390, 413, 414, -369, 413, 414, 8, 9, 8, 9,
	-206, 443, 320, -319, 565, -209, 39, 130, 246, -257,
	535, 145, -388, -388, 485, -576, 465, -395, 145, -388,
	298, 321, 494, 162, 504, 134, 325, 180, 560, -389,
	-389, 561, -323, -388, -388, 559, 568, 561, -306, 565,
	-304, -388, -321, -321, 561, 562, -321, -310, 559, 559,
	565, 561, -406, -407, 139, -388, 485, 485, 485, 485,
	560, 561, 562, -522, 342, 560, 560, -388, 561, 561,
	561, 561, 38, 565, 565, 565, 561, 565, 565, 565,
	561, 561, 561, 565, 561, 535, 535, 561, 561, 561,
	561, 565, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 561, 565, 561, 180,
	561, 561, -360, 356, 561, 11, 12, 551, 552, 553,
	554, 175, 555, 556, 549, 550, 548, 541, 542, 543,
	85, 276, 415, 14, 15, 16, 235, 213, -389, -389,
	-389, 561, -393, -394, 180, 177, 38, -355, -355, -355,
	561, 180, -321, 561, 561, 560, -515, 278, 316, 561,
	-382, -381, 527, -429, -314, 2, -419, -252, -468, -382,
	-382, -321, -388, 241, 241, -348, 513, 331, -350, -419,
	-412, -464, -387, -386, 178, 39, 130, 313, 209, -412,
	-250, -301, -412, -412, -468, -413, -413, -411, 561, -530,
	-464, 561, -315, -422, -509, -306, 562, -468, -186, -510,
	-165, 5, 321, -165, -165, -165, -310, 485, 485, 25,
	357, -438, 558, 559, 8, -468, 560, -462, -462, -462,
	-310, 180, 180, 180, -473, -473, -341, 529, -465, -375,
	501, 82, 381, 481, -465, -211, 396, -244, -244, -257,
	-266, 316, -379, 206, -217, 316, -438, -251, -227, 560,
	560, 246, 246, 513, -244, -251, 246, 206, -244, 206,
	-251, -251, -541, 381, 326, -388, -473, 268, 379, 317,
	-212, 396, 435, -117, -117, -117, 560, -554, 513, 133,
	-257, -277, -257, -266, -261, 435, 396, 314, -271, -463,
	-463, -342, 435, 396, -266, -259, -473, 422, -241, -213,
	-117, -117, -117, 560, -242, -214, 396, 5, 206, -244,
	5, -227, -244, -266, -473, -558, 24, -244, 206, -244,
	-266, -473, -232, -476, 321, 509, -539, 422, 485, -424,
	-113, -180, 529, -113, -174, 217, 553, -536, -227, 522,
	-227, -282, -285, -283, -244, -192, -193, 531, 529, 149,
	-275, -257, 558, -177, -476, -257, -266, -267, 149, -301,
	316, -476, 38, 149, 560, 2, 2, 331, 316, -243,
	206, -219, 140, -574, 543, -241, -382, -314, -339, -373,
	404, 331, -302, 518, -250, -339, -316, 565, 180, 543,
	562, -302, -428, 553, 2, -215, -319, -215, -215, -277,
	-278, -215, -215, -215, -91, -91, -177, 565, 560, 543,
	543, 560, -476, -476, 561, 565, -257, -243, 221, 221,
	-249, -228, 561, 565, 562, 560, -185, 335, -184, 141,
	248, 233, 444, 445, 446, 447, 132, -183, -114, 180,
	-52, 529, 470, -177, 564, -346, -346, -346, 432, 432,
	-227, -253, -241, -257, -254, -277, 177, 177, 507, -369,
	332, 272, -415, -210, 537, -257, 564, -388, -388, 145,
	145, -388, -389, -389, -388, 145, 180, 560, -388, -399,
	33, 33, 561, 565, -384, -388, 561, 521, -306, -306,
	561, 553, -468, 564, 561, -397, 142, -388, 479, 285,
	204, 283, -359, 283, -359, -359, -462, 5, -468, 553,
	-523, -247, 560, -227, 527, -305, 337, 561, -440, -438,
	-388, -388, -388, -388, -388, -462, -443, -443, -458, -458,
	-388, -393, -388, -440, -438, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, -389, -389, -389, -389, -389, -389,
	-389, -389, -389, -389, 134, 316, 325, -389, -394, -393,
	-388, -388, -438, 561, 561, 561, -321, -91, 560, 278,
	-333, 197, -388, -432, 565, -333, -333, 561, -419, -419,
	560, -388, 241, 559, 565, 567, 543, -301, 562, -411,
	-412, 559, 561, 565, 561, 565, -372, 38, 561, -468,
	-382, -188, -187, 131, 52, -310, -310, 334, 5, 8,
	558, 559, 562, -462, 561, 561, 561, -310, -310, -310,
	116, 304, -388, 485, 485, 149, 316, 515, -494, -489,
	147, -388, -308, -416, -509, 560, -227, 560, 560, 2,
	-208, 138, 435, -556, 2, 513, 149, -215, 149, -215,
	533, 560, 560, 485, 422, 529, -321, -388, -178, 123,
	-467, -543, 564, -543, 564, 422, 485, 422, 485, 529,
	529, -321, 485, -442, 47, 26, 316, -260, 485, 485,
	-215, 149, 497, 435, -476, 321, -266, -261, 435, 396,
	-432, -182, 335, -181, 141, 406, 132, 248, -432, -180,
	180, 232, -261, 2, 561, 561, 565, -495, 38, 329,
	329, 560, -257, -72, 529, -431, -464, 43, -259, 38,
	149, -539, -117, -261, -436, -437, 5, -257, 149, 331,
	316, -220, 255, -574, -472, -510, -306, -339, -328, 317,
	90, 561, -382, -330, -314, -388, 2, 561, -215, -215,
	-175, -176, -476, -476, -476, -177, -189, -189, -380, -286,
	560, -243, -228, 560, -189, -245, 2, -477, 565, 560,
	543, 543, 543, -432, -117, 335, -257, 553, -346, -293,
	-292, 350, 325, -293, 413, 413, 332, 171, 251, -209,
	-242, -388, -388, 145, 33, 33, -388, -388, -399, 561,
	-388, -388, -321, 559, 5, -388, 561, 561, 8, -388,
	561, 562, -524, -227, -388, 561, 59, 561, 561, 565,
	565, 561, 561, 561, 561, 561, 561, 561, -394, 180,
	134, 325, 560, 561, 561, -91, -396, 200, 59, -419,
	-396, -396, -348, -310, -419, -386, -242, 558, -468, -464,
	-422, 560, 562, -187, 543, 559, 2, 558, -468, 561,
	116, -244, -244, -379, 149, -496, 92, -498, 75, 163,
	101, 316, 321, 503, 372, 71, 123, 387, -566, 38,
	540, 561, 561, 565, -417, -238, -227, -388, -417, -308,
	-310, 316, 462, 123, 316, 123, 116, 497, 78, -244,
	-251, -310, -310, -257, -266, 156, 561, 565, 543, 2,
	553, 553, -266, -261, -266, -259, 348, 156, 561, -242,
	5, 5, 149, -239, 75, 5, -244, -244, -260, 116,
	422, 485, -180, 565, 560, 543, 543, -180, -477, -113,
	-301, -289, 224, -244, -493, -490, -491, 372, -497, -499,
	163, 372, -117, 2, -191, -190, -227, 5, 560, -284,
	335, 559, -473, -343, -117, -261, -301, 561, 565, -364,
	513, -242, -257, 149, -221, 254, -574, -472, -218, -367,
	-365, 135, 560, 331, -117, -306, 543, 561, 561, 116,
	116, 215, 148, -308, 560, 560, -310, 116, 561, -184,
	-185, -476, -113, -476, -183, -53, -54, 221, 92, 355,
	-254, 470, 221, 560, 560, -209, -388, -388, -388, 561,
	-306, -468, 553, -518, 350, 561, -415, -388, -388, -389,
	180, 560, -399, 561, -519, 528, -388, -334, -335, -388,
	412, 106, 198, -519, -519, 561, -464, 2, -476, 558,
	2, -379, -251, -255, -248, -227, 163, 206, 321, 246,
	560, -389, -257, 560, 2, 30, -567, 127, 225, -378,
	-568, 100, 463, 214, -416, -209, 561, 561, 561, 321,
	321, -388, -438, 560, -215, -215, 561, 561, -388, 485,
	-467, 99, -465, 2, -543, -241, -388, 485, 5, -215,
	-255, -215, -215, -239, 497, -266, -261, -181, -182, -476,
	-113, -180, 38, -290, -291, 213, -495, 246, -248, 246,
	-565, 529, 561, 565, 543, 543, -282, -192, -73, -74,
	486, -431, -301, 38, 5, 560, -227, 331, 560, -242,
	-222, 91, -574, -472, -219, -339, 317, -310, 92, -367,
	-395, -177, 560, 560, -287, 80, 93, 124, 205, 183,
	222, 455, 460, 28, -287, 561, -308, -308, 561, 560,
	-177, 561, 565, 28, 560, 28, 560, -257, -277, -321,
	-321, 561, -306, 59, 565, 561, 561, -389, -399, 561,
	-520, -521, -247, 565, 560, 560, 436, 559, 2, -498,
	-248, 316, 513, -388, -229, 560, -388, 38, 225, 128,
	211, -289, 560, -210, -417, -377, 513, 387, -239, -308,
	560, 560, 560, 543, 180, 560, -442, -215, -260, 561,
	-548, 385, -117, -192, 348, 560, -288, 331, 116, 304,
	-190, -465, -465, 561, 38, -74, 9, 38, -117, -308,
	-257, -308, 331, 263, -472, -220, 561, -251, -339, -477,
	-477, -377, 561, 561, -477, -54, -310, -310, 561, 561,
	-525, 379, 414, 199, -321, -307, 561, 565, 38, -335,
	2, 2, 2, 149, 201, 561, -500, 277, -227, 561,
	128, 211, -290, -310, -289, 201, -257, -544, 513, 561,
	-295, -294, -292, -297, -296, -292, -321, -465, 99, 348,
	-321, -239, -551, 181, -550, 5, 10, -288, -257, -309,
	-418, -244, 81, 116, -289, -117, -117, 561, -364, 561,
	-257, -574, -221, -382, 561, 561, -378, -377, -193, 529,
	561, 561, 561, 561, -526, -527, 49, 500, 107, -388,
	-526, -526, -521, -523, 163, 529, -501, -504, -503, 331,
	442, 181, 349, 561, 462, 525, -567, 561, 529, -301,
	-388, -377, 561, 565, 518, 561, 565, 518, 561, 180,
	561, -215, -179, 529, 45, 560, 561, 565, 371, 129,
	138, -290, -565, -377, 560, -378, 560, -458, -222, 135,
	-177, -177, -289, -378, -382, -177, -528, 147, -527, 368,
	176, 413, 368, 176, -528, -528, -248, 54, -503, 331,
	-504, 331, 507, 129, -382, 54, -500, -289, -294, 213,
	-296, 180, 348, 420, -550, 30, -310, -418, 414, 414,
	2, -192, -288, -378, -308, -289, -308, 317, 507, -290,
	-289, 107, 197, 480, 304, 33, 543, -502, 304, 402,
	63, 435, -502, 543, -501, 560, 560, 335, 561, 2,
	-288, -289, 561, -290, 561, 435, -193, -290, 413, 339,
	-527, -388, 23, 321, 123, -388, -567, -321, -321, -176,
	560, -216, 63, 402, -290, -377, -193, -378, -329, -382,
	-193, 561, 561, -176, -193, -378, -382, -289, -382, -382,
	-290, 485, 561, -382, -289, -290, 560, -290, -193, -321,
	-193, -382, 561, -382, -290,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 488, 489, 491, 492, 493, 495, 496,
	498, 500, 502, 503, 504, 506, 507, 509, 510, 511,
	512, 513, 515, 517, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 579, 581,
	0, 1213, 1215, 1217, 1219, 0, 719, 0, 34, 35,
	0, -2, 285, 287, 289, 0, 315, 317, 318, 320,
	322, 324, -2, 0, 421, 422, 424, 426, -2, -2,
	0, 889, 891, 0, 568, 570, 0, 894, 896, 0,
	0, 590, 591, 0, 1306, -2, 584, 586, 588, 653,
	655, 657, 659, 661, 663, 665, 667, 669, 670, 672,
	674, 676, 678, 680, 682, 684, 686, 687, 689, 691,
	693, 695, 697, 699, 701, 703, 705, 707, 709, 711,
	713, -2, 715, -2, -2, 0, -2, -2, -2, 1231,
	38, 40, 42, 44, 46, 48, 50, 52, 54, 372,
	373, 375, 377, 379, 381, 384, 386, 388, 1364, 428,
	430, 432, 434, 436, 438, 440, 0, -2, 1376, 0,
	0, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	85, 86, 87, 88, 89, 90, 91, 92, 68, 69,
	71, 72, 73, 77, 78, 79, 80, 83, 66, 0,
	0, 1337, 1339, 1341, 1343, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 490,
	494, 497, 499, 501, 505, 508, 514, 516, 518, 475,
	476, 479, 2032, 2049, 2050, 2051, 2054, 2055, 2056, 2057,
	2058, 2059, 2478, 2559, 2560, 2081, 2082, 2083, 2084, 2085,
	2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105,
	2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145,
	2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185,
	2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195,
	2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205,
	2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215,
	2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225,
	2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235,
	2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245,
	2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255,
	2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
	2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275,
	2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285,
	2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295,
	2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305,
	2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315,
	2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325,
	2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345,
	2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355,
	2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365,
	2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 477, 478, 1051, 0, 542, 540, 2024, 543,
	2292, 545, 547, 415, 416, 417, 418, 419, 420, 0,
	561, 553, 560, 562, 564, 565, 566, 567, 537, 535,
	0, 561, 2085, 559, 1211, 1212, 0, 1196, 1197, 2331,
	1238, 0, 197, 580, -2, -2, -2, 2443, -2, 612,
	-2, 619, 2447, 2333, 624, 0, 626, -2, 629, 1214,
	1216, 1218, 717, 718, 2035, 0, 0, 0, 0, 0,
	36, 37, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1100, 1101, 1102, 0, 205, 207, -2,
	-2, -2, -2, 0, 0, 2372, 2134, 1992, 2051, 1995,
	1990, 286, 288, 290, 291, 0, 0, 0, 0, 0,
	0, 316, 319, 321, 323, -2, 325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 946, 938, 939,
	1157, 0, 0, 0, -2, 423, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 351, 480, 481, 0,
	1365, 1365, 0, 0, 0, 0, 260, 251, 890, 892,
	893, 0, 0, 0, 0, 569, 571, 0, 0, 233,
	895, 897, 898, 0, 0, 0, 0, 0, 262, 0,
	0, 585, 587, 589, 654, 656, 658, 660, 662, 664,
	666, 668, 671, 673, 675, 677, 679, 681, 683, 685,
	688, 690, 692, 694, 696, 698, 700, 702, 704, 706,
	708, 710, 712, 714, 725, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 809, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 728, 730, 731, 732,
	0, 789, 807, 808, 817, 716, 0, 1091, 1366, 1240,
	1221, 1235, 1240, 1223, 1224, 1225, 1226, 1227, 1232, 1234,
	1228, 1229, 1230, 39, 41, 43, 45, 47, 49, 51,
	53, 55, 374, 376, 378, 380, 382, 385, 387, 389,
	-2, 1335, 1336, 429, 431, 433, 435, 437, 439, 441,
	572, 0, 574, 0, 729, -2, 0, 1370, 1370, 1370,
	0, 0, 1336, 1334, 0, 577, 578, 633, 634, 1635,
	0, 0, 0, 0, 0, 0, 0, 1889, 1721, 0,
	635, -2, 1752, 1754, 2418, 2443, 1888, 1756, 1757, 1758,
	1759, 1760, 0, 1762, 1763, 1764, 1765, 1766, 1767, 0,
	1769, 0, 1774, 1775, 1776, 0, 2425, 1969, 2045, -2,
	0, 0, 2431, 2041, 0, 1855, 1792, -2, -2, 2068,
	2047, 1567, 1568, 1569, 1570, 1571, -2, -2, 2461, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	0, 2406, 2426, 2427, 2432, 2434, 2428, 2415, 1817, 2146,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1594, 1603, -2, -2, -2, -2, -2,
	-2, -2, 2419, 2420, 2437, 2440, 2446, 2451, 2452, 2424,
	2433, 2460, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 1595, -2,
	-2, -2, -2, 1353, 2304, 1356, 1051, 1354, 1338, 1340,
	0, 1342, 0, 0, 0, 1347, 1373, 1371, 0, 1420,
	1351, 1352, 1438, 1438, 1462, 0, 1443, 0, 1462, 1365,
	1488, 0, 1449, 2323, 1793, 1794, 0, 2051, 2046, -2,
	-2, 2458, 0, 0, 0, 0, 0, 0, 0, 538,
	0, 544, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1237, 1156, 582, 583, 0, 607, 0, 611,
	2414, -2, 0, 2342, -2, 615, 1241, 1245, 1246, 1247,
	1248, 1249, 0, 0, 0, 0, 1254, 0, 0, 621,
	0, 0, 608, 609, 627, 630, 0, 720, 721, 722,
	723, 724, 65, 0, 2426, 1488, 67, 0, 2014, 2076,
	2077, 2078, 2079, 2080, 2459, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2461, 70, 0, 2426, 74,
	0, 2426, 0, -2, 81, 0, 2020, 84, 0, 2017,
	93, 0, 2426, 0, 1989, -2, 0, 180, 2028, 0,
	917, 2030, -2, 2426, 1099, 263, 264, 2064, 2065, 2072,
	2073, 2074, 2075, 0, 0, 0, 0, 881, 1986, 1991,
	882, 2010, 883, 1996, 0, 292, 293, 294, 295, 296,
	0, 297, 2426, 299, 300, 0, 302, 303, 2426, 305,
	306, 0, 308, 0, 218, 219, 2426, 327, 328, 0,
	330, 331, 0, 333, 0, 0, 0, 337, -2, 352,
	0, 349, 340, 341, 343, 344, 345, 346, 0, 393,
	391, 2025, 0, 910, 2426, 0, 914, -2, 2031, 0,
	0, 1136, -2, 2426, 1096, 0, 1142, 1138, 0, -2,
	0, 1363, 2426, 1258, 942, 943, 944, 945, 1500, 412,
	0, 1273, 0, 1275, 0, 1294, 1494, 1438, 0, 0,
	1499, 0, 354, 355, 356, 357, 358, 2426, 0, 0,
	0, 363, 0, 365, 366, 367, 368, 369, 370, 371,
	169, 2426, 446, 473, 0, 169, 2426, 449, 169, 2426,
	452, 0, 455, 1155, 169, 2426, 458, 169, 2426, 461,
	463, 169, 2426, 467, 468, 470, 2426, 472, 265, 1207,
	1208, 1209, 1210, 0, -2, 531, 2034, -2, 483, 0,
	484, 0, -2, 0, 277, 0, 0, 899, 900, 901,
	902, 903, 906, 907, 908, 909, 1475, 236, 234, 0,
	0, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	0, 0, 592, 0, 0, 726, 727, 0, 0, 737,
	738, 739, 0, 277, 2334, 2300, 2166, 746, 0, 749,
	752, -2, 0, 0, 0, 0, 756, 0, 761, 762,
	763, 0, 765, 767, 888, 769, 0, 0, 771, 0,
	775, 0, 778, 0, 780, 0, 782, -2, -2, -2,
	-2, 793, -2, 0, 796, 798, 0, 800, -2, 0,
	809, 805, 806, 0, 0, 0, 0, 825, 826, 0,
	835, 0, 838, 839, 840, 0, 842, 843, 0, 845,
	846, 847, 848, 0, 850, 851, -2, -2, 855, 857,
	0, 864, 0, 868, 0, 872, 0, 733, 734, 169,
	1492, 1220, -2, 1222, 0, -2, 0, 573, 0, 576,
	1393, 1321, 1318, 0, 1390, 1391, 1322, 0, 0, 0,
	1329, 0, 1368, 1369, 0, 0, 0, 1308, 1309, 0,
	0, 0, 0, 1894, 1895, 1896, 1897, 1898, 1899, 1902,
	1903, 1900, 1901, 1904, 1905, 0, 0, 0, 0, 0,
	1906, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1907, 1908, 1909, 0, 0, 1911, 0, 1913,
	0, 0, 0, 0, 0, 0, 1700, 1702, 1977, 0,
	0, 1910, 1640, 1641, 1642, 1643, 1644, 1679, 1680, 0,
	0, 1753, 1974, 1973, 1755, 0, 1925, 0, 1768, -2,
	0, 1889, 1920, 0, 0, 1777, 1778, 1779, 0, 0,
	1925, 0, 0, 1968, 1789, 1790, 1632, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1581, 1580, 0,
	1582, 0, 1583, 1584, 1591, 1604, 0, 0, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 1949, -2,
	0, 0, 0, 0, 1596, 0, 1355, 0, 0, 1424,
	1978, 1982, 1983, 1424, 1424, 0, 0, 1926, 1485, 1485,
	0, 0, 1481, 1481, 1481, 1479, 1462, 0, 1462, 1472,
	0, 1462, 1462, 0, -2, 1443, 0, 0, 1472, 0,
	1456, 519, 521, 523, 525, 526, 527, 529, 1489, 1490,
	0, 0, 0, 0, 2052, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 2382, 2333, 549, 563, 1365,
	0, 1928, 1515, 1519, 0, 1521, 1522, 1523, 1524, 1525,
	0, 0, 1516, -2, 1592, 1594, 1615, 2069, 2070, 2071,
	1575, 1576, 1577, 1578, 1579, 1587, 1574, 1574, 1574, 1585,
	1614, 1606, 1614, 1610, 1560, 1561, 1562, 1597, 1598, 1599,
	1600, 0, 2382, 2333, 555, 0, 0, 1305, 184, 186,
	187, 188, 0, 0, 0, 0, -2, 617, 622, 623,
	0, 1243, 0, 1250, 644, 645, 646, 1252, 1253, 0,
	1255, 620, 647, 648, 649, 650, 651, 652, 0, 1998,
	1999, 2000, 2001, 2004, 2005, 0, 0, 618, 637, 625,
	0, 631, 94, 1193, 0, 133, 0, 1193, 1193, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 118,
	129, 106, 107, 0, 0, 0, 0, 0, 75, 1073,
	0, 1076, 0, 0, 0, 0, 0, 0, 0, 1089,
	0, 0, 0, 0, 117, 0, 0, 112, 96, 0,
	0, 0, 119, 131, 0, 160, 162, 0, 0, 0,
	0, 0, 0, 179, 189, 0, 0, 0, 0, 1097,
	0, 1362, 0, 0, 2426, 0, 1475, 2210, -2, -2,
	1475, 880, 0, 0, 2052, 1994, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 332, 334, 335, 336, 0,
	1135, 0, 342, 383, 1022, 2426, 0, 0, 410, 405,
	0, 407, 0, 0, 1072, 2426, 1070, 2029, 0, 1094,
	0, 1051, 2426, 2027, 0, 0, 1143, 2061, 1152, 1156,
	1260, 0, 414, 0, 1276, 1278, 0, 0, 1495, 0,
	1497, 1438, 353, 0, 360, 361, 362, 0, 442, 0,
	167, 168, 0, 169, 2426, 447, 0, 450, 0, 169,
	2426, 1984, 456, 0, 459, 0, 0, 465, 0, 0,
	0, 0, 1365, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 240, 0, 1474, 0, 1475, 234,
	277, 277, 1475, 594, 1475, 596, 0, 0, 740, 741,
	0, 277, 277, 277, 747, 748, 750, 751, -2, -2,
	-2, 865, 753, 754, 832, 0, 0, 0, 831, 768,
	0, 874, 2319, 2333, 886, 832, 2134, 832, 2134, 832,
	2134, 779, 781, 784, 820, 828, 792, 797, 0, 0,
	802, 810, -2, 0, 812, 0, 814, 0, 816, 832,
	833, 836, 841, 844, 849, 0, 0, 0, 0, 0,
	0, 0, 1090, 0, 1233, 1393, 1321, 575, 1312, 1392,
	1313, 1320, 1323, 0, 0, 1325, 0, 1327, 0, 1388,
	1389, 1396, 1397, 0, 1407, 1408, 1400, 0, -2, 0,
	0, 1403, 1404, 1331, 0, 1348, 1349, 1350, 1377, 1380,
	1171, 0, 2559, 1636, 1510, 1637, 1638, 2013, 0, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, -2,
	-2, -2, -2, -2, -2, -2, -2, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, -2, -2,
	-2, 1677, 1678, -2, 1912, 1914, 0, 1977, 0, -2,
	0, -2, -2, -2, -2, 1697, 0, 1699, 1704, 1706,
	1708, 0, 0, 0, 0, 1976, 1718, 1960, 1961, 0,
	0, 1891, 1892, 1893, 1703, 0, 1722, 1975, 1972, 0,
	0, 1924, 1376, 1781, 0, 0, 0, 0, 1788, 1773,
	1922, 0, 1921, 0, 0, 0, 1932, 0, 1967, 1963,
	0, 2011, 1631, 1618, 1619, 1620, 1621, 1622, 1623, 1633,
	0, 2008, 2038, 2044, 1865, 0, 0, 0, 1818, 1819,
	1820, 1821, 1822, 0, 1824, 1825, 0, 1827, 1828, 0,
	1830, 1831, 0, 1833, 1834, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1528, 0, 0, 0, 1532, 0, 0,
	0, 1536, 0, 0, 0, 1540, 0, 0, 0, 1544,
	0, 0, 0, 1548, 0, 0, 0, 1552, 0, 0,
	0, 1556, 0, 0, 0, 0, 0, 1837, 0, 1935,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1839,
	0, 1841, 1926, 1946, 0, 0, 1723, 0, 0, 0,
	1889, 0, 1844, 1926, 1954, 0, 0, 0, 0, 0,
	1926, 0, 1959, 0, 1851, 0, 1853, 1357, 0, 0,
	1505, 0, 0, 0, 1981, 1505, 1505, 0, 1419, 0,
	0, 1482, 1483, 1484, 0, 0, 1485, 0, 1476, 1480,
	1477, 1478, 1472, 1435, 0, 0, 2015, 1472, 1441, 1471,
	0, 1051, 1461, 1472, 1472, 0, -2, 1445, 1462, 0,
	0, 520, 522, 524, 528, 530, 0, 0, 1376, -2,
	0, -2, 1050, 0, 0, 0, 0, 539, 541, 0,
	0, 462, 0, 0, 533, 0, 536, 0, 1506, 1509,
	0, 0, 1520, 1526, 1527, 0, -2, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 0, 200, 0, 610,
	0, 1242, 1251, 0, 641, 0, 643, 0, 2002, 2006,
	2003, 2007, 0, 632, 0, 0, 0, 0, 1192, 0,
	137, 2426, 0, 171, 0, 0, 1015, 2021, 0, 0,
	0, 0, 2153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 1074, 1075, 1077, 1084,
	1086, 0, 1080, 2009, 0, 0, 1081, 0, 1083, 1085,
	1087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 109, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 1129, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 0, 0, -2, 0, 0, 0, 0,
	210, 0, 268, 1987, 1997, 0, 904, 905, 298, 301,
	304, 307, 206, 0, 338, 0, 0, 948, 923, 0,
	0, 392, 277, 0, 0, 406, 2061, 912, 1068, 1071,
	0, 1051, 2426, 1108, 0, 0, 0, 0, 0, 0,
	1141, 0, 2426, 2016, 2060, 2061, 1262, 1270, 0, 1505,
	0, 1292, 1279, 0, 0, 0, 1292, 1296, 1297, 1299,
	1300, 0, 0, 1496, 1502, 0, 364, 474, 169, 444,
	0, 169, 169, 453, 0, 0, 169, 464, 169, 469,
	169, 266, 471, 482, 532, 1365, 1365, 277, 275, 2269,
	273, 270, 272, 0, 0, 0, 949, 951, 952, 953,
	954, 0, 2061, 0, 2199, 2061, 0, 1282, 1284, 0,
	230, 0, 237, 235, 240, 0, 0, 404, 593, 598,
	735, 0, 277, 743, 744, 745, 786, 822, 830, 755,
	757, 758, 759, 0, 887, 884, 885, 770, 832, 773,
	832, 776, 832, 795, 799, 804, 811, 0, 0, 0,
	824, 0, 0, 0, 0, 0, 0, 0, 869, 870,
	871, 873, 1493, 1316, 1317, 1319, 0, 1328, 0, 0,
	1402, -2, -2, 1401, 1405, 1406, -2, -2, -2, -2,
	1324, 0, 1333, 1330, 0, 1387, 1169, 1170, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1719, 0, -2,
	1698, 1701, 1705, 1707, 1709, 0, 0, 0, 0, 0,
	0, 1915, 0, 1917, 1720, 1970, 1973, 1887, 0, 0,
	1375, 1376, 1376, 0, 1787, 0, 1923, 0, 1930, 1931,
	0, 1780, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 1823, 1826,
	1829, 1832, 0, 0, 0, 0, 1812, 0, 0, 0,
	1816, 1586, 1572, 0, 1614, 1612, 1613, 1607, 1614, 1611,
	1564, 0, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538,
	1539, 1541, 1542, 1543, 1545, 1546, 1547, 1549, 1550, 1551,
	1553, 1554, 1555, 1557, 1558, 1559, 1563, 0, 1836, 0,
	1838, 1840, 0, 0, 1842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1726, 1727,
	1728, 1843, 1952, 1953, 0, 0, 0, 0, 0, 0,
	1849, 0, 1958, 1850, 1852, 1365, 0, 1358, 0, 1421,
	1410, 1504, 0, 1979, 1475, 1423, 1425, 1980, 2018, 1410,
	1410, 0, 1927, 0, 0, 1466, 0, 0, 0, 1468,
	1439, 0, 0, 1433, 0, 1429, 1430, 1431, 1432, 1440,
	1051, 1470, 1442, 1446, 2038, 0, 1472, 0, 1457, 0,
	1459, 1491, 0, 1451, 1454, 0, 0, 2053, 1505, 0,
	309, 313, 314, 310, 311, 312, 548, 0, 0, 0,
	0, 1929, 0, 1511, 0, 1517, 0, 0, 0, 0,
	554, 0, 0, 0, 185, 1304, 196, 0, 606, -2,
	639, 640, 642, 0, 638, 134, 1193, 0, 0, 1174,
	1176, 0, 139, 2426, 148, 0, 989, 0, 2019, 0,
	0, 0, 0, 0, 1195, 0, 0, 2426, 169, 2426,
	169, 151, 154, 0, 159, 156, 157, 0, 0, 980,
	95, 1193, 0, 98, 102, 110, 0, 0, 0, 116,
	0, 0, 0, 1178, 1184, 0, 0, 1078, 1079, 1082,
	1088, 76, 0, 0, 1182, 1188, 82, 0, 1173, 161,
	100, 104, 111, 0, 1190, 97, 0, 183, 0, 0,
	0, 175, 0, 176, 177, 190, 0, 169, 2426, 0,
	915, 916, 1130, 1092, 1093, 0, 1098, 0, 0, 0,
	1475, 202, 0, 1475, 210, 0, 1993, 0, 326, 0,
	0, 0, 0, 947, 1033, 0, 920, 0, 0, 0,
	398, 394, 0, 403, 409, 408, 911, 0, 0, 0,
	0, -2, 0, 0, 1145, 1139, 1140, 0, 0, 0,
	2426, 1264, 1270, 0, 1269, 1363, 1376, 413, 1271, 1292,
	0, 0, 0, 1281, 1277, 1274, 1505, 0, 0, 0,
	0, 0, 1498, 1501, 359, 443, 169, 448, 451, 1985,
	169, 457, 460, 466, 485, 486, 252, 0, 0, 0,
	0, 0, 277, 0, 0, 0, 958, 0, 2061, 2061,
	0, 2023, 0, 0, 0, 0, 238, 0, 241, 0,
	0, 0, 246, 247, 248, 249, 250, 231, 1475, 0,
	595, 0, 0, 742, 0, 772, 774, 777, 813, 815,
	832, 858, 859, 975, 0, 975, 0, 0, 1326, 0,
	1399, 1332, 1381, 1382, 0, 1171, 0, 1639, 1682, 0,
	0, -2, 0, 0, 1686, 0, 0, 0, -2, 0,
	0, 0, 1916, 1918, 0, 1972, 1782, 0, 0, 0,
	1786, 1770, 1771, 0, 1890, 1933, 1962, 1966, 0, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 0, 2012, 2039, 2043,
	1863, 1864, 1868, 2026, 0, 0, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 1605, 1609, 0, 0,
	1934, 1945, 1947, 1724, 1725, 1729, 1730, 1731, 1732, 1733,
	1734, 1735, 1736, 1737, 1738, -2, -2, -2, 1742, 1743,
	1744, -2, -2, -2, 0, 0, 0, 1948, 1950, 1951,
	1955, 1956, 0, 1846, 1847, 1848, 1957, 0, 1365, 1359,
	1418, 0, 1503, 1422, 0, 1418, 1418, 1372, 1464, 0,
	0, 1487, 0, 1436, 0, 1437, 0, 1469, 0, 1444,
	1447, 1448, 1458, 0, 1450, 0, 1453, 0, 1782, -2,
	278, 279, 281, 0, 284, 551, 552, 550, 534, 0,
	0, 1513, 0, 0, 1589, 1593, 1617, 557, 558, 556,
	198, 0, 1473, 0, 0, 0, 0, 170, 987, 1014,
	0, 0, 0, 1159, 1166, 0, -2, 0, 0, 1020,
	141, 0, 0, 0, 149, 0, 0, 146, 0, 153,
	158, 0, 0, 0, 0, 0, 0, 113, 114, 115,
	0, 120, 0, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 0, 0, 1168, 0, 0,
	192, 0, 0, 0, 1133, 1134, 1179, 1185, 0, 0,
	210, 208, 0, 211, 0, 214, 215, 0, 210, 204,
	0, 0, 1051, 339, 969, 1021, 0, 1023, 0, 921,
	0, 0, 1022, 390, 0, 397, 0, 0, 1072, 0,
	0, 1095, 1106, 1051, 0, 1144, 1146, 1154, 0, 0,
	0, 1266, 1270, 0, 1259, 1260, 1395, 1272, 1290, -2,
	0, 0, 1376, 1298, 1295, 1301, 1302, 0, 445, 454,
	274, 0, 269, 271, 0, 255, 0, 0, 950, 955,
	0, 0, 0, 0, 0, 1283, 1285, 0, 0, 0,
	0, 0, 0, 240, 261, 0, 736, 760, 823, 860,
	974, 0, 0, 862, 0, 0, 1398, 1385, 1386, 1383,
	1171, 1684, 1688, 0, 0, 0, 1690, -2, 0, 1712,
	-2, -2, 1919, 1971, 1761, 1376, 1783, 1785, 1772, 1965,
	1634, 0, 1870, 1867, 0, 1854, 0, 1807, 1808, 0,
	0, 1811, 1813, 1814, 1815, 1573, 1566, 1565, 1944, 0,
	0, 0, 0, 1845, 1360, 0, 1859, 0, 0, 1426,
	1859, 1859, 1465, 0, 1467, 1434, 1427, 0, 2039, 1460,
	1452, 0, 0, 282, 0, 1507, 1512, 0, 1518, 1588,
	199, 135, 136, 138, 0, 988, 0, 991, 0, 0,
	0, 0, 998, 999, 0, 0, 0, 0, 0, 1008,
	0, 1037, 1047, 0, 1161, 1171, 1165, 0, 1163, 0,
	0, 0, 143, 164, 0, 0, 1194, 0, 0, 169,
	169, 0, 0, 1175, 1177, 0, 0, 0, 0, 123,
	0, 0, 1180, 1186, 1183, 1189, 0, 0, 0, 1191,
	181, 182, 0, 169, 0, 174, 169, 169, 1168, 0,
	0, 0, 201, 0, 0, 0, 0, 203, 267, 210,
	0, 977, 0, 1033, 1025, 1026, 1027, 0, 1032, 1034,
	0, 0, 935, 922, 0, 931, 0, 0, 948, 923,
	0, 395, 913, 1069, 1103, 1051, 0, 1137, 0, 0,
	0, 0, 0, 0, 1268, 1270, 0, 1261, 1262, 1292,
	1394, 0, 0, 0, 1280, 1395, 0, 276, 277, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 242,
	0, 243, 244, 245, 232, 597, 599, 0, 0, 605,
	973, 0, 0, 0, 0, 1384, 1692, -2, -2, 1713,
	0, 2040, 2042, 1376, 0, 1856, 1378, 0, 0, -2,
	0, 0, 0, 1361, 1344, 0, 1417, 1409, 1411, 1413,
	2322, 2130, 2425, 1345, 1346, 1486, 0, 1455, 283, 0,
	1514, 140, 0, 992, 993, 2022, 995, 0, 997, 1000,
	0, 1003, 2063, 0, 1007, 0, 1016, 1038, 0, 969,
	0, 1043, 1044, 1045, 1160, 1387, 1166, 1049, 0, 142,
	144, 163, 1168, 0, 145, 152, 0, 0, 99, 0,
	0, 2125, 126, 124, 122, 1172, 101, 0, 183, 191,
	1167, 178, 193, 169, 0, 1181, 1187, 212, 0, 213,
	216, 0, 0, 923, 976, 0, 1024, 0, 1035, 1036,
	925, 0, 924, 0, 0, 0, 0, 0, 396, 399,
	0, 402, 0, 0, 1147, 0, 1153, 0, 0, 0,
	1256, 0, 0, 1263, 1264, 411, 1286, 0, 0, 1292,
	1303, 254, 0, 0, 956, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 957, 1049, 0, 0, 1013, 0,
	259, 239, 0, 601, 0, 603, 0, 861, 863, 0,
	0, 1784, 1874, 0, 0, 1809, 1810, -2, 0, 1750,
	1858, 1860, 0, 0, 0, 0, 0, 1428, 1508, 990,
	994, 0, 0, 0, 1055, 0, 0, 1009, 0, 1041,
	1042, 977, 0, 1164, 1162, 969, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 173, 194, 1168, 209,
	226, 0, 1104, 925, 0, 0, 933, 0, 936, 0,
	932, 929, 930, 969, 0, 400, 401, 0, 1107, 0,
	1154, 0, 0, 1270, 1265, 1266, 1505, 1289, 1293, 0,
	0, 1047, 1049, 923, 0, 600, 0, 0, 866, 867,
	0, 0, 0, 0, 1869, 1379, 1751, 0, 0, 1412,
	1414, 1415, 1416, 0, 0, 1002, 1060, 0, 0, 0,
	1039, 1040, 1037, 0, 1018, 0, 1051, 147, 0, 1049,
	0, 981, 0, 0, 984, 0, 0, 127, 2125, 125,
	0, 169, 229, 0, 223, 221, 222, 918, 0, 0,
	1029, 1031, 0, 937, 977, 935, 1105, 1049, 0, 1047,
	0, 0, 1268, 0, 277, 277, 969, 1047, 1505, 0,
	277, 602, 604, 1866, 1886, 1875, -2, 2385, 2131, 0,
	1886, 1886, 1861, 1862, 0, 0, 1004, 1056, 1057, 0,
	1052, 1053, 1054, 2062, 1005, 1006, 1505, 1046, 0, 1055,
	165, 969, 978, 0, 0, 979, 0, 0, 130, 0,
	132, 195, 217, 0, 0, 0, 1028, 0, 0, 0,
	0, 923, 925, 1047, 0, 969, 0, 1267, 1257, 0,
	256, 257, 977, 969, 1012, 258, 1871, 0, 0, 1877,
	1878, 1879, 1880, 1881, 1872, 1873, 996, 0, 1058, 0,
	1059, 0, 0, 0, 1017, 0, 1060, 150, 982, 0,
	985, 0, 128, 0, 224, 225, 0, 1030, 926, 0,
	928, 925, 934, 969, 0, 977, 0, 1287, 0, 923,
	977, 0, 1883, 1884, 0, 0, 0, 1061, 0, 1064,
	1065, 0, 1062, 0, 1037, 0, 0, 0, 972, 927,
	919, 977, 1049, 923, 1047, 0, 1505, 923, 1882, 1885,
	1876, 1001, 1063, 1066, 1067, 1048, 1019, 0, 0, 227,
	0, 968, 970, 971, 923, 1047, 1505, 969, 1505, 1010,
	1505, 977, 0, 0, 1505, 969, 1150, 977, 1288, 1011,
	983, 0, 228, 1148, 977, 923, 0, 923, 1505, 0,
	1505, 1151, 977, 1149, 986,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 549, 3, 555, 550, 3,
	560, 561, 553, 551, 565, 552, 562, 554, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 568, 3,
	541, 543, 542, 546, 564, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 558, 3, 559, 556, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 566, 548, 567, 544,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 545, 57884, 547,
	57885, 557, 57886, 563, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1237
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1263
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1282
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1283
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1366
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1379
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1425
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1446
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1482
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1486
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1492
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1496
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1526
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1532
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1540
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1550
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1564
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1575
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1582
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1594
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1601
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1629
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1648
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1668
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1677
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1688
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1694
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1702
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1720
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1725
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1787
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1797
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1802
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1849
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1894
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1914
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1924
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1957
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1961
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2055
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2059
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2080
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2122
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2163
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2213
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2240
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = nil
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2466
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2470
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2480
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2510
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2539
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2590
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2599
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2605
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2610
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2615
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2620
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2625
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2629
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2648
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2732
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2762
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2770
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2782
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2783
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2809
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2812
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2845
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2848
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2867
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2896
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2909
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2932
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2935
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2936
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			return helpWith(sqllex, "CREATE")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplemented(sqllex, "create access method")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "create cast")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "create operator")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "create publication")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "create rule")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "create server")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2975
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
		}
	case 350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2979
		{
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2983
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2986
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2987
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2988
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2992
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2994
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2995
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2996
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2997
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2999
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3000
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			return unimplemented(sqllex, "drop server")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3003
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3004
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3008
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3010
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3011
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3012
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3016
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3035
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3053
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3085
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3124
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3159
		{

			sqlVAL.union.val = nil
		}
	case 411:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3183
		{
			return helpWith(sqllex, "DELETE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3186
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3211
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3212
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3213
		{
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3311
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3387
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3394
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3423
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3457
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3512
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3520
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3538
		{
			return helpWith(sqllex, "DELETE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "INSERT")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3555
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "DELETE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{
			return helpWith(sqllex, "INSERT")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3589
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3597
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3605
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3630
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3671
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3701
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3705
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3709
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3718
		{
			return helpWith(sqllex, "GRANT")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3748
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3770
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3774
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3784
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "RESET")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "RESET")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3843
		{
			return helpWith(sqllex, "USE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3847
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3848
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "USE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 613:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4027
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4032
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4036
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4055
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4062
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplemented(sqllex, "set from current")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4078
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4091
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4166
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4172
		{
			sqlVAL.union.val = tree.Low
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = tree.Normal
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = tree.High
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4204
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4208
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4235
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4243
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4251
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "SHOW")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4261
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4264
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4278
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4283
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4300
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.str = "client_encoding"
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.str = "timezone"
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4315
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4333
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4337
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4348
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4356
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4396
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4405
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4435
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4444
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4509
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4522
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4551
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4576
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4599
		{
			sqlVAL.union.val = true
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4601
		{
			sqlVAL.union.val = true
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4603
		{
			sqlVAL.union.val = false
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4635
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4724
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4728
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = true
		}
	case 818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = false
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4748
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4766
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = false
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4812
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4857
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4865
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4879
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4891
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4934
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4942
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4968
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4979
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4987
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5002
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5011
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5018
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5150
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5154
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5158
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5210
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5256
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			return helpWith(sqllex, "RESUME")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5320
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5391
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5438
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5453
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{

			sqlVAL.union.val = nil
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = nil
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5487
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5498
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5503
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5508
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5535
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5549
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5564
		{
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5584
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5594
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5649
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5652
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5656
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5662
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5678
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.str = ""
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 978:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 986:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5778
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5799
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5857
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5872
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5897
		{
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5898
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5903
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5931
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5955
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5996
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6007
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6034
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6191
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6248
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6275
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6303
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6318
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6321
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6323
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6327
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6331
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6333
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6346
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6379
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = true
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6396
		{

			sqlVAL.union.val = true
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = false
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6411
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6425
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6437
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6449
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6459
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6477
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6501
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6529
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6537
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6541
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6560
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = nil
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6579
		{
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6600
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6602
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6606
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6620
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6644
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6662
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6681
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6698
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6715
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = false
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = true
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = false
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6750
		{
			sqlVAL.union.val = true
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = false
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[1].union))
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6778
		{

			return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", sqlDollar[2].union))
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.str = ""
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.str = ""
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6850
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6856
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6878
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6894
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6900
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6926
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6932
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6944
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6950
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6964
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6988
		{
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6992
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7021
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7027
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7043
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7051
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7080
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7099
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7103
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7121
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7129
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7139
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7142
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7147
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7156
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7157
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7158
		{
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7175
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7179
		{
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7197
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7222
		{
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7226
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.str = ""
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.str = ""
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7351
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7364
		{
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7365
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7416
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7425
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7430
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7474
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7501
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7505
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7543
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7595
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7669
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7722
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7775
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7776
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7859
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = true
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = false
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7951
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = nil
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = true
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = false
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = false
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = true
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7995
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8036
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8057
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8062
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8091
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8124
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8183
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8184
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8218
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8219
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8224
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8250
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8252
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8289
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8294
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8299
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8333
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8341
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8380
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8408
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8436
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8466
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8501
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = nil
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = true
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = false
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8548
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.str = tree.AstFull
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.str = tree.AstRight
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.str = tree.AstInner
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8619
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.str = tree.AstHash
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8704
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8726
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = true
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = false
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8788
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8796
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8815
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8817
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8825
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8838
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8845
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8894
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8906
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8913
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8917
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8919
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8921
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8927
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8928
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8929
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8931
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8932
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8933
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8935
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8936
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8939
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8940
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = types.Geography
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8956
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8964
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8998
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = nil
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = types.Int2
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
			sqlVAL.union.val = types.Int
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = types.Float4
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = types.Float
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9049
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = types.Bool
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9071
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9084
		{
			sqlVAL.union.val = types.Float
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9090
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9096
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9104
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9118
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = types.String
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = true
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = false
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = types.Date
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9175
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9198
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9206
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9223
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = true
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = false
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = types.Interval
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9247
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9258
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9266
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9290
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = nil
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9368
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9376
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9436
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9477
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9481
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9533
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9557
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9573
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9629
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9633
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9641
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9645
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9688
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9754
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9868
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9876
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9880
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9975
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10001
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10025
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10052
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10055
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10066
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10067
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10079
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10082
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10091
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10157
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10192
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10210
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10214
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10282
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10328
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10333
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10352
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10353
		{
			return unimplemented(sqllex, "treat")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10449
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.str = ""
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10515
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10528
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10564
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10596
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10625
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = tree.Any
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = tree.Some
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = tree.All
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = tree.Div
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = tree.LT
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.GT
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = tree.LE
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10664
		{
			sqlVAL.union.val = tree.GE
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.NE
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.Like
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10751
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10761
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10882
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10898
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10927
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10931
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10943
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10987
		{
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11140
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11156
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11165
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11176
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11185
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11205
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11385
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11405
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.str = ""
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
