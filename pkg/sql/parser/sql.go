// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:878
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13831

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1607,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 423,
	-2, 0,
	-1, 74,
	245, 254,
	520, 254,
	-2, 0,
	-1, 88,
	234, 1343,
	247, 1343,
	263, 419,
	394, 419,
	405, 1101,
	445, 419,
	458, 1101,
	505, 1101,
	531, 419,
	557, 1101,
	-2, 0,
	-1, 94,
	133, 1607,
	240, 1607,
	542, 1607,
	543, 1607,
	-2, 0,
	-1, 112,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	345, 1578,
	355, 1578,
	537, 1578,
	-2, 1549,
	-1, 153,
	160, 940,
	262, 940,
	397, 901,
	463, 901,
	504, 901,
	523, 940,
	525, 901,
	-2, 0,
	-1, 157,
	4, 1609,
	21, 1609,
	22, 1609,
	23, 1609,
	24, 1609,
	25, 1609,
	26, 1609,
	27, 1609,
	29, 1609,
	30, 1609,
	36, 1609,
	41, 1609,
	42, 1609,
	44, 1609,
	45, 1609,
	46, 1609,
	47, 1609,
	48, 1609,
	49, 1609,
	50, 1609,
	51, 1609,
	53, 1609,
	54, 1609,
	55, 1609,
	56, 1609,
	58, 1609,
	59, 1609,
	60, 1609,
	61, 1609,
	62, 1609,
	63, 1609,
	64, 1609,
	68, 1609,
	69, 1609,
	70, 1609,
	71, 1609,
	73, 1609,
	74, 1609,
	75, 1609,
	79, 1609,
	80, 1609,
	81, 1609,
	82, 1609,
	83, 1609,
	84, 1609,
	85, 1609,
	88, 1609,
	89, 1609,
	90, 1609,
	91, 1609,
	92, 1609,
	94, 1609,
	96, 1609,
	97, 1609,
	98, 1609,
	99, 1609,
	100, 1609,
	101, 1609,
	103, 1609,
	104, 1609,
	105, 1609,
	107, 1609,
	108, 1609,
	109, 1609,
	117, 1609,
	118, 1609,
	119, 1609,
	120, 1609,
	121, 1609,
	123, 1609,
	124, 1609,
	125, 1609,
	126, 1609,
	128, 1609,
	129, 1609,
	130, 1609,
	132, 1609,
	133, 1609,
	134, 1609,
	136, 1609,
	137, 1609,
	138, 1609,
	141, 1609,
	142, 1609,
	143, 1609,
	145, 1609,
	146, 1609,
	147, 1609,
	149, 1609,
	150, 1609,
	151, 1609,
	153, 1609,
	154, 1609,
	155, 1609,
	156, 1609,
	157, 1609,
	158, 1609,
	159, 1609,
	160, 1609,
	161, 1609,
	162, 1609,
	163, 1609,
	164, 1609,
	165, 1609,
	166, 1609,
	167, 1609,
	168, 1609,
	169, 1609,
	171, 1609,
	177, 1609,
	178, 1609,
	179, 1609,
	180, 1609,
	184, 1609,
	186, 1609,
	187, 1609,
	188, 1609,
	192, 1609,
	193, 1609,
	194, 1609,
	195, 1609,
	196, 1609,
	197, 1609,
	198, 1609,
	199, 1609,
	200, 1609,
	201, 1609,
	202, 1609,
	203, 1609,
	204, 1609,
	205, 1609,
	207, 1609,
	208, 1609,
	210, 1609,
	211, 1609,
	213, 1609,
	214, 1609,
	215, 1609,
	216, 1609,
	217, 1609,
	218, 1609,
	219, 1609,
	220, 1609,
	221, 1609,
	223, 1609,
	224, 1609,
	226, 1609,
	227, 1609,
	228, 1609,
	229, 1609,
	230, 1609,
	234, 1609,
	235, 1609,
	236, 1609,
	237, 1609,
	240, 1609,
	241, 1609,
	242, 1609,
	244, 1609,
	246, 1609,
	247, 1609,
	249, 1609,
	251, 1609,
	252, 1609,
	253, 1609,
	255, 1609,
	259, 1609,
	260, 1609,
	261, 1609,
	262, 1609,
	263, 1609,
	264, 1609,
	266, 1609,
	267, 1609,
	268, 1609,
	270, 1609,
	271, 1609,
	273, 1609,
	274, 1609,
	277, 1609,
	278, 1609,
	279, 1609,
	280, 1609,
	281, 1609,
	282, 1609,
	283, 1609,
	286, 1609,
	287, 1609,
	288, 1609,
	289, 1609,
	291, 1609,
	292, 1609,
	293, 1609,
	294, 1609,
	295, 1609,
	296, 1609,
	297, 1609,
	298, 1609,
	299, 1609,
	300, 1609,
	301, 1609,
	302, 1609,
	303, 1609,
	304, 1609,
	305, 1609,
	306, 1609,
	307, 1609,
	308, 1609,
	309, 1609,
	310, 1609,
	311, 1609,
	312, 1609,
	314, 1609,
	316, 1609,
	317, 1609,
	318, 1609,
	319, 1609,
	320, 1609,
	321, 1609,
	322, 1609,
	323, 1609,
	324, 1609,
	325, 1609,
	326, 1609,
	327, 1609,
	328, 1609,
	329, 1609,
	330, 1609,
	332, 1609,
	333, 1609,
	335, 1609,
	337, 1609,
	338, 1609,
	340, 1609,
	341, 1609,
	342, 1609,
	343, 1609,
	344, 1609,
	347, 1609,
	350, 1609,
	351, 1609,
	352, 1609,
	353, 1609,
	356, 1609,
	357, 1609,
	358, 1609,
	360, 1609,
	362, 1609,
	363, 1609,
	364, 1609,
	365, 1609,
	366, 1609,
	367, 1609,
	368, 1609,
	369, 1609,
	370, 1609,
	371, 1609,
	372, 1609,
	373, 1609,
	374, 1609,
	376, 1609,
	377, 1609,
	378, 1609,
	379, 1609,
	380, 1609,
	381, 1609,
	382, 1609,
	383, 1609,
	384, 1609,
	385, 1609,
	386, 1609,
	387, 1609,
	388, 1609,
	389, 1609,
	390, 1609,
	392, 1609,
	393, 1609,
	395, 1609,
	396, 1609,
	397, 1609,
	398, 1609,
	399, 1609,
	400, 1609,
	401, 1609,
	402, 1609,
	403, 1609,
	404, 1609,
	405, 1609,
	406, 1609,
	407, 1609,
	409, 1609,
	411, 1609,
	412, 1609,
	413, 1609,
	419, 1609,
	420, 1609,
	422, 1609,
	423, 1609,
	424, 1609,
	425, 1609,
	426, 1609,
	427, 1609,
	428, 1609,
	429, 1609,
	430, 1609,
	431, 1609,
	433, 1609,
	434, 1609,
	435, 1609,
	437, 1609,
	438, 1609,
	439, 1609,
	440, 1609,
	441, 1609,
	442, 1609,
	443, 1609,
	445, 1609,
	446, 1609,
	447, 1609,
	448, 1609,
	449, 1609,
	450, 1609,
	451, 1609,
	452, 1609,
	453, 1609,
	454, 1609,
	455, 1609,
	456, 1609,
	458, 1609,
	459, 1609,
	460, 1609,
	461, 1609,
	462, 1609,
	463, 1609,
	465, 1609,
	466, 1609,
	467, 1609,
	468, 1609,
	469, 1609,
	470, 1609,
	472, 1609,
	473, 1609,
	474, 1609,
	475, 1609,
	476, 1609,
	477, 1609,
	478, 1609,
	479, 1609,
	481, 1609,
	483, 1609,
	484, 1609,
	485, 1609,
	486, 1609,
	487, 1609,
	488, 1609,
	489, 1609,
	490, 1609,
	491, 1609,
	492, 1609,
	493, 1609,
	494, 1609,
	495, 1609,
	496, 1609,
	497, 1609,
	498, 1609,
	500, 1609,
	501, 1609,
	503, 1609,
	504, 1609,
	506, 1609,
	507, 1609,
	508, 1609,
	509, 1609,
	510, 1609,
	511, 1609,
	512, 1609,
	513, 1609,
	515, 1609,
	516, 1609,
	517, 1609,
	518, 1609,
	519, 1609,
	521, 1609,
	523, 1609,
	524, 1609,
	525, 1609,
	526, 1609,
	527, 1609,
	528, 1609,
	530, 1609,
	531, 1609,
	532, 1609,
	533, 1609,
	535, 1609,
	536, 1609,
	539, 1609,
	540, 1609,
	541, 1609,
	542, 1609,
	543, 1609,
	544, 1609,
	545, 1609,
	547, 1609,
	550, 1609,
	551, 1609,
	552, 1609,
	553, 1609,
	554, 1609,
	555, 1609,
	557, 1609,
	558, 1609,
	559, 1609,
	560, 1609,
	561, 1609,
	562, 1609,
	567, 1609,
	568, 1609,
	569, 1609,
	570, 1609,
	571, 1609,
	572, 1609,
	-2, 0,
	-1, 158,
	1, 1460,
	131, 1460,
	251, 1460,
	334, 1460,
	392, 1460,
	401, 1460,
	576, 1460,
	605, 1460,
	-2, 0,
	-1, 160,
	1, 1460,
	605, 1460,
	-2, 0,
	-1, 161,
	1, 1460,
	605, 1460,
	-2, 0,
	-1, 162,
	1, 1460,
	520, 1460,
	605, 1460,
	-2, 0,
	-1, 191,
	152, 1577,
	172, 1577,
	185, 1577,
	243, 1577,
	276, 1577,
	345, 1577,
	355, 1577,
	537, 1577,
	-2, 1552,
	-1, 241,
	4, 1616,
	5, 1616,
	6, 1616,
	7, 1616,
	8, 1616,
	9, 1616,
	10, 1616,
	21, 1616,
	22, 1616,
	23, 1616,
	24, 1616,
	25, 1616,
	26, 1616,
	27, 1616,
	29, 1616,
	30, 1616,
	36, 1616,
	37, 1616,
	41, 1616,
	42, 1616,
	43, 1616,
	44, 1616,
	45, 1616,
	46, 1616,
	47, 1616,
	48, 1616,
	49, 1616,
	50, 1616,
	51, 1616,
	53, 1616,
	54, 1616,
	55, 1616,
	56, 1616,
	58, 1616,
	59, 1616,
	60, 1616,
	61, 1616,
	62, 1616,
	63, 1616,
	64, 1616,
	65, 1616,
	66, 1616,
	67, 1616,
	68, 1616,
	69, 1616,
	70, 1616,
	71, 1616,
	73, 1616,
	74, 1616,
	75, 1616,
	77, 1616,
	79, 1616,
	80, 1616,
	81, 1616,
	82, 1616,
	83, 1616,
	84, 1616,
	85, 1616,
	88, 1616,
	89, 1616,
	90, 1616,
	91, 1616,
	92, 1616,
	94, 1616,
	96, 1616,
	97, 1616,
	98, 1616,
	99, 1616,
	100, 1616,
	101, 1616,
	103, 1616,
	104, 1616,
	105, 1616,
	106, 1616,
	107, 1616,
	108, 1616,
	109, 1616,
	110, 1616,
	111, 1616,
	112, 1616,
	113, 1616,
	114, 1616,
	115, 1616,
	116, 1616,
	117, 1616,
	118, 1616,
	119, 1616,
	120, 1616,
	121, 1616,
	122, 1616,
	123, 1616,
	124, 1616,
	125, 1616,
	126, 1616,
	127, 1616,
	128, 1616,
	129, 1616,
	130, 1616,
	132, 1616,
	133, 1616,
	134, 1616,
	136, 1616,
	137, 1616,
	138, 1616,
	141, 1616,
	142, 1616,
	143, 1616,
	145, 1616,
	146, 1616,
	147, 1616,
	149, 1616,
	150, 1616,
	151, 1616,
	153, 1616,
	154, 1616,
	155, 1616,
	156, 1616,
	157, 1616,
	158, 1616,
	159, 1616,
	160, 1616,
	161, 1616,
	162, 1616,
	163, 1616,
	164, 1616,
	165, 1616,
	166, 1616,
	167, 1616,
	168, 1616,
	169, 1616,
	170, 1616,
	171, 1616,
	177, 1616,
	178, 1616,
	179, 1616,
	180, 1616,
	184, 1616,
	186, 1616,
	187, 1616,
	188, 1616,
	191, 1616,
	192, 1616,
	193, 1616,
	194, 1616,
	195, 1616,
	196, 1616,
	197, 1616,
	198, 1616,
	199, 1616,
	200, 1616,
	201, 1616,
	202, 1616,
	203, 1616,
	204, 1616,
	205, 1616,
	207, 1616,
	208, 1616,
	210, 1616,
	211, 1616,
	213, 1616,
	214, 1616,
	215, 1616,
	216, 1616,
	217, 1616,
	218, 1616,
	219, 1616,
	220, 1616,
	221, 1616,
	222, 1616,
	223, 1616,
	224, 1616,
	226, 1616,
	227, 1616,
	228, 1616,
	229, 1616,
	230, 1616,
	234, 1616,
	235, 1616,
	236, 1616,
	237, 1616,
	239, 1616,
	240, 1616,
	241, 1616,
	242, 1616,
	244, 1616,
	246, 1616,
	247, 1616,
	248, 1616,
	249, 1616,
	250, 1616,
	251, 1616,
	252, 1616,
	253, 1616,
	254, 1616,
	255, 1616,
	259, 1616,
	260, 1616,
	261, 1616,
	262, 1616,
	263, 1616,
	264, 1616,
	266, 1616,
	267, 1616,
	268, 1616,
	270, 1616,
	271, 1616,
	272, 1616,
	273, 1616,
	274, 1616,
	275, 1616,
	277, 1616,
	278, 1616,
	279, 1616,
	280, 1616,
	281, 1616,
	282, 1616,
	283, 1616,
	284, 1616,
	285, 1616,
	286, 1616,
	287, 1616,
	288, 1616,
	289, 1616,
	291, 1616,
	292, 1616,
	293, 1616,
	294, 1616,
	295, 1616,
	296, 1616,
	297, 1616,
	298, 1616,
	299, 1616,
	300, 1616,
	301, 1616,
	302, 1616,
	303, 1616,
	304, 1616,
	305, 1616,
	306, 1616,
	307, 1616,
	308, 1616,
	309, 1616,
	310, 1616,
	311, 1616,
	312, 1616,
	314, 1616,
	315, 1616,
	316, 1616,
	317, 1616,
	318, 1616,
	319, 1616,
	320, 1616,
	321, 1616,
	322, 1616,
	323, 1616,
	324, 1616,
	325, 1616,
	326, 1616,
	327, 1616,
	328, 1616,
	329, 1616,
	330, 1616,
	331, 1616,
	332, 1616,
	333, 1616,
	334, 1616,
	335, 1616,
	336, 1616,
	337, 1616,
	338, 1616,
	339, 1616,
	340, 1616,
	341, 1616,
	342, 1616,
	343, 1616,
	344, 1616,
	347, 1616,
	351, 1616,
	352, 1616,
	353, 1616,
	356, 1616,
	357, 1616,
	358, 1616,
	359, 1616,
	360, 1616,
	361, 1616,
	362, 1616,
	363, 1616,
	364, 1616,
	365, 1616,
	366, 1616,
	367, 1616,
	368, 1616,
	369, 1616,
	370, 1616,
	371, 1616,
	372, 1616,
	373, 1616,
	374, 1616,
	376, 1616,
	377, 1616,
	378, 1616,
	379, 1616,
	380, 1616,
	381, 1616,
	382, 1616,
	383, 1616,
	384, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	388, 1616,
	389, 1616,
	390, 1616,
	392, 1616,
	393, 1616,
	395, 1616,
	396, 1616,
	397, 1616,
	398, 1616,
	399, 1616,
	400, 1616,
	401, 1616,
	402, 1616,
	403, 1616,
	404, 1616,
	405, 1616,
	406, 1616,
	407, 1616,
	409, 1616,
	411, 1616,
	412, 1616,
	413, 1616,
	419, 1616,
	420, 1616,
	422, 1616,
	423, 1616,
	424, 1616,
	425, 1616,
	426, 1616,
	427, 1616,
	428, 1616,
	429, 1616,
	430, 1616,
	431, 1616,
	433, 1616,
	434, 1616,
	435, 1616,
	436, 1616,
	437, 1616,
	438, 1616,
	439, 1616,
	440, 1616,
	441, 1616,
	442, 1616,
	443, 1616,
	445, 1616,
	446, 1616,
	447, 1616,
	448, 1616,
	449, 1616,
	450, 1616,
	451, 1616,
	452, 1616,
	453, 1616,
	454, 1616,
	455, 1616,
	456, 1616,
	458, 1616,
	459, 1616,
	460, 1616,
	461, 1616,
	462, 1616,
	463, 1616,
	464, 1616,
	465, 1616,
	466, 1616,
	467, 1616,
	468, 1616,
	469, 1616,
	470, 1616,
	471, 1616,
	472, 1616,
	473, 1616,
	474, 1616,
	475, 1616,
	476, 1616,
	477, 1616,
	478, 1616,
	479, 1616,
	481, 1616,
	483, 1616,
	484, 1616,
	485, 1616,
	486, 1616,
	487, 1616,
	488, 1616,
	489, 1616,
	490, 1616,
	491, 1616,
	492, 1616,
	493, 1616,
	494, 1616,
	495, 1616,
	496, 1616,
	497, 1616,
	498, 1616,
	500, 1616,
	501, 1616,
	502, 1616,
	503, 1616,
	504, 1616,
	506, 1616,
	507, 1616,
	508, 1616,
	509, 1616,
	510, 1616,
	511, 1616,
	512, 1616,
	513, 1616,
	515, 1616,
	516, 1616,
	517, 1616,
	518, 1616,
	519, 1616,
	521, 1616,
	523, 1616,
	524, 1616,
	525, 1616,
	526, 1616,
	527, 1616,
	528, 1616,
	529, 1616,
	530, 1616,
	531, 1616,
	532, 1616,
	533, 1616,
	535, 1616,
	536, 1616,
	538, 1616,
	539, 1616,
	540, 1616,
	541, 1616,
	542, 1616,
	543, 1616,
	544, 1616,
	545, 1616,
	546, 1616,
	547, 1616,
	550, 1616,
	551, 1616,
	552, 1616,
	553, 1616,
	554, 1616,
	555, 1616,
	557, 1616,
	558, 1616,
	559, 1616,
	560, 1616,
	561, 1616,
	562, 1616,
	567, 1616,
	568, 1616,
	569, 1616,
	570, 1616,
	571, 1616,
	572, 1616,
	573, 1616,
	586, 1616,
	593, 1616,
	594, 1616,
	595, 1616,
	602, 1616,
	606, 1616,
	-2, 0,
	-1, 756,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	171, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	234, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	335, 1341,
	337, 1341,
	338, 1341,
	340, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	347, 1341,
	351, 1341,
	352, 1341,
	353, 1341,
	356, 1341,
	357, 1341,
	358, 1341,
	360, 1341,
	362, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	376, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	392, 1341,
	393, 1341,
	395, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	409, 1341,
	411, 1341,
	412, 1341,
	413, 1341,
	419, 1341,
	420, 1341,
	422, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	433, 1341,
	434, 1341,
	435, 1341,
	437, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	445, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	458, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	465, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	472, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	481, 1341,
	483, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	500, 1341,
	501, 1341,
	503, 1341,
	504, 1341,
	506, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	515, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	521, 1341,
	523, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	530, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	535, 1341,
	536, 1341,
	539, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	547, 1341,
	550, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	557, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	567, 1341,
	568, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	-2, 0,
	-1, 775,
	190, 2408,
	520, 2408,
	585, 2408,
	604, 2408,
	-2, 0,
	-1, 776,
	190, 2395,
	520, 2395,
	585, 2395,
	604, 2395,
	-2, 0,
	-1, 778,
	190, 2660,
	520, 2660,
	585, 2660,
	604, 2660,
	-2, 0,
	-1, 781,
	190, 2520,
	520, 2520,
	585, 2520,
	604, 2520,
	-2, 0,
	-1, 782,
	190, 2701,
	520, 2701,
	585, 2701,
	604, 2701,
	-2, 0,
	-1, 790,
	190, 2547,
	520, 2547,
	585, 2547,
	604, 2547,
	-2, 722,
	-1, 825,
	604, 2344,
	607, 2344,
	-2, 1022,
	-1, 826,
	604, 2346,
	607, 2346,
	-2, 1023,
	-1, 827,
	604, 2345,
	607, 2345,
	-2, 1024,
	-1, 828,
	607, 2270,
	-2, 1025,
	-1, 853,
	185, 273,
	-2, 0,
	-1, 877,
	43, 2317,
	-2, 0,
	-1, 878,
	557, 1319,
	-2, 1102,
	-1, 894,
	4, 1750,
	21, 1750,
	22, 1750,
	23, 1750,
	24, 1750,
	25, 1750,
	26, 1750,
	27, 1750,
	29, 1750,
	30, 1750,
	36, 1750,
	41, 1750,
	42, 1750,
	44, 1750,
	45, 1750,
	46, 1750,
	47, 1750,
	48, 1750,
	49, 1750,
	50, 1750,
	51, 1750,
	53, 1750,
	54, 1750,
	55, 1750,
	56, 1750,
	58, 1750,
	59, 1750,
	60, 1750,
	61, 1750,
	62, 1750,
	63, 1750,
	64, 1750,
	68, 1750,
	69, 1750,
	70, 1750,
	71, 1750,
	73, 1750,
	74, 1750,
	75, 1750,
	79, 1750,
	80, 1750,
	81, 1750,
	82, 1750,
	83, 1750,
	84, 1750,
	85, 1750,
	88, 1750,
	89, 1750,
	90, 1750,
	91, 1750,
	92, 1750,
	94, 1750,
	96, 1750,
	97, 1750,
	98, 1750,
	99, 1750,
	100, 1750,
	101, 1750,
	103, 1750,
	104, 1750,
	105, 1750,
	107, 1750,
	108, 1750,
	109, 1750,
	117, 1750,
	118, 1750,
	119, 1750,
	120, 1750,
	121, 1750,
	123, 1750,
	124, 1750,
	125, 1750,
	126, 1750,
	128, 1750,
	129, 1750,
	130, 1750,
	132, 1750,
	133, 1750,
	134, 1750,
	136, 1750,
	137, 1750,
	138, 1750,
	141, 1750,
	142, 1750,
	143, 1750,
	145, 1750,
	146, 1750,
	147, 1750,
	149, 1750,
	150, 1750,
	151, 1750,
	153, 1750,
	154, 1750,
	155, 1750,
	156, 1750,
	157, 1750,
	158, 1750,
	159, 1750,
	160, 1750,
	161, 1750,
	162, 1750,
	163, 1750,
	164, 1750,
	165, 1750,
	166, 1750,
	167, 1750,
	168, 1750,
	169, 1750,
	171, 1750,
	177, 1750,
	178, 1750,
	179, 1750,
	180, 1750,
	184, 1750,
	186, 1750,
	187, 1750,
	188, 1750,
	192, 1750,
	193, 1750,
	194, 1750,
	195, 1750,
	196, 1750,
	197, 1750,
	198, 1750,
	199, 1750,
	200, 1750,
	201, 1750,
	202, 1750,
	203, 1750,
	204, 1750,
	205, 1750,
	207, 1750,
	208, 1750,
	210, 1750,
	211, 1750,
	213, 1750,
	214, 1750,
	215, 1750,
	216, 1750,
	217, 1750,
	218, 1750,
	219, 1750,
	220, 1750,
	221, 1750,
	223, 1750,
	224, 1750,
	226, 1750,
	227, 1750,
	228, 1750,
	229, 1750,
	230, 1750,
	234, 1750,
	235, 1750,
	236, 1750,
	237, 1750,
	240, 1750,
	241, 1750,
	242, 1750,
	244, 1750,
	246, 1750,
	247, 1750,
	249, 1750,
	251, 1750,
	252, 1750,
	253, 1750,
	255, 1750,
	259, 1750,
	260, 1750,
	261, 1750,
	262, 1750,
	263, 1750,
	264, 1750,
	266, 1750,
	267, 1750,
	268, 1750,
	270, 1750,
	271, 1750,
	273, 1750,
	274, 1750,
	277, 1750,
	278, 1750,
	279, 1750,
	280, 1750,
	281, 1750,
	282, 1750,
	283, 1750,
	286, 1750,
	287, 1750,
	288, 1750,
	289, 1750,
	291, 1750,
	292, 1750,
	293, 1750,
	294, 1750,
	295, 1750,
	296, 1750,
	297, 1750,
	298, 1750,
	299, 1750,
	300, 1750,
	301, 1750,
	302, 1750,
	303, 1750,
	304, 1750,
	305, 1750,
	306, 1750,
	307, 1750,
	308, 1750,
	309, 1750,
	310, 1750,
	311, 1750,
	312, 1750,
	314, 1750,
	316, 1750,
	317, 1750,
	318, 1750,
	319, 1750,
	320, 1750,
	321, 1750,
	322, 1750,
	323, 1750,
	324, 1750,
	325, 1750,
	326, 1750,
	327, 1750,
	328, 1750,
	329, 1750,
	330, 1750,
	332, 1750,
	333, 1750,
	335, 1750,
	337, 1750,
	338, 1750,
	340, 1750,
	341, 1750,
	342, 1750,
	343, 1750,
	344, 1750,
	347, 1750,
	351, 1750,
	352, 1750,
	353, 1750,
	356, 1750,
	357, 1750,
	358, 1750,
	360, 1750,
	362, 1750,
	363, 1750,
	364, 1750,
	365, 1750,
	366, 1750,
	367, 1750,
	368, 1750,
	369, 1750,
	370, 1750,
	371, 1750,
	372, 1750,
	373, 1750,
	374, 1750,
	376, 1750,
	377, 1750,
	378, 1750,
	379, 1750,
	380, 1750,
	381, 1750,
	382, 1750,
	383, 1750,
	384, 1750,
	385, 1750,
	386, 1750,
	387, 1750,
	388, 1750,
	389, 1750,
	390, 1750,
	392, 1750,
	393, 1750,
	395, 1750,
	396, 1750,
	397, 1750,
	398, 1750,
	399, 1750,
	400, 1750,
	401, 1750,
	402, 1750,
	403, 1750,
	404, 1750,
	405, 1750,
	406, 1750,
	407, 1750,
	409, 1750,
	411, 1750,
	412, 1750,
	413, 1750,
	419, 1750,
	420, 1750,
	422, 1750,
	423, 1750,
	424, 1750,
	425, 1750,
	426, 1750,
	427, 1750,
	428, 1750,
	429, 1750,
	430, 1750,
	431, 1750,
	433, 1750,
	434, 1750,
	435, 1750,
	437, 1750,
	438, 1750,
	439, 1750,
	440, 1750,
	441, 1750,
	442, 1750,
	443, 1750,
	445, 1750,
	446, 1750,
	447, 1750,
	448, 1750,
	449, 1750,
	450, 1750,
	451, 1750,
	452, 1750,
	453, 1750,
	454, 1750,
	455, 1750,
	456, 1750,
	458, 1750,
	459, 1750,
	460, 1750,
	461, 1750,
	462, 1750,
	463, 1750,
	465, 1750,
	466, 1750,
	467, 1750,
	468, 1750,
	469, 1750,
	470, 1750,
	472, 1750,
	473, 1750,
	474, 1750,
	475, 1750,
	476, 1750,
	477, 1750,
	478, 1750,
	479, 1750,
	481, 1750,
	483, 1750,
	484, 1750,
	485, 1750,
	486, 1750,
	487, 1750,
	488, 1750,
	489, 1750,
	490, 1750,
	491, 1750,
	492, 1750,
	493, 1750,
	494, 1750,
	495, 1750,
	496, 1750,
	497, 1750,
	498, 1750,
	500, 1750,
	501, 1750,
	503, 1750,
	504, 1750,
	506, 1750,
	507, 1750,
	508, 1750,
	509, 1750,
	510, 1750,
	511, 1750,
	512, 1750,
	513, 1750,
	515, 1750,
	516, 1750,
	517, 1750,
	518, 1750,
	519, 1750,
	521, 1750,
	523, 1750,
	524, 1750,
	525, 1750,
	526, 1750,
	527, 1750,
	528, 1750,
	530, 1750,
	531, 1750,
	532, 1750,
	533, 1750,
	535, 1750,
	536, 1750,
	539, 1750,
	540, 1750,
	541, 1750,
	542, 1750,
	543, 1750,
	544, 1750,
	545, 1750,
	547, 1750,
	550, 1750,
	551, 1750,
	552, 1750,
	553, 1750,
	554, 1750,
	555, 1750,
	557, 1750,
	558, 1750,
	559, 1750,
	560, 1750,
	561, 1750,
	562, 1750,
	567, 1750,
	568, 1750,
	569, 1750,
	570, 1750,
	571, 1750,
	572, 1750,
	-2, 0,
	-1, 904,
	263, 423,
	-2, 0,
	-1, 981,
	397, 902,
	463, 902,
	504, 902,
	525, 902,
	-2, 0,
	-1, 982,
	397, 901,
	463, 901,
	504, 901,
	525, 901,
	-2, 833,
	-1, 986,
	1, 954,
	601, 954,
	603, 954,
	605, 954,
	-2, 0,
	-1, 988,
	1, 876,
	601, 876,
	603, 876,
	605, 876,
	-2, 0,
	-1, 989,
	1, 880,
	601, 880,
	603, 880,
	605, 880,
	-2, 0,
	-1, 990,
	1, 1021,
	185, 1021,
	601, 1021,
	603, 1021,
	605, 1021,
	-2, 0,
	-1, 998,
	1, 907,
	601, 907,
	603, 907,
	605, 907,
	-2, 0,
	-1, 1005,
	1, 954,
	601, 954,
	603, 954,
	605, 954,
	-2, 0,
	-1, 1006,
	1, 956,
	601, 956,
	603, 956,
	605, 956,
	-2, 0,
	-1, 1007,
	1, 959,
	601, 959,
	603, 959,
	605, 959,
	-2, 0,
	-1, 1013,
	1, 985,
	601, 985,
	603, 985,
	605, 985,
	-2, 0,
	-1, 1014,
	1, 987,
	601, 987,
	603, 987,
	605, 987,
	-2, 0,
	-1, 1019,
	1, 1015,
	601, 1015,
	603, 1015,
	605, 1015,
	-2, 0,
	-1, 1071,
	172, 1620,
	185, 1620,
	276, 1620,
	345, 1620,
	-2, 1556,
	-1, 1086,
	172, 1619,
	185, 1619,
	276, 1619,
	345, 1619,
	-2, 1553,
	-1, 1113,
	604, 2343,
	-2, 730,
	-1, 1142,
	5, 2335,
	602, 2333,
	-2, 2324,
	-1, 1150,
	5, 2356,
	602, 2353,
	-2, 2344,
	-1, 1151,
	5, 2357,
	602, 2354,
	-2, 2345,
	-1, 1159,
	604, 2341,
	-2, 2323,
	-1, 1160,
	602, 2785,
	-2, 2342,
	-1, 1183,
	602, 2784,
	-2, 2358,
	-1, 1184,
	5, 1825,
	-2, 2755,
	-1, 1185,
	5, 1826,
	-2, 2756,
	-1, 1186,
	5, 1827,
	-2, 2770,
	-1, 1187,
	5, 1828,
	-2, 2734,
	-1, 1188,
	5, 1829,
	-2, 2768,
	-1, 1189,
	5, 1837,
	-2, 2747,
	-1, 1190,
	5, 1824,
	-2, 2743,
	-1, 1191,
	5, 1824,
	-2, 2742,
	-1, 1192,
	5, 1824,
	-2, 2761,
	-1, 1193,
	5, 1835,
	-2, 2736,
	-1, 1194,
	5, 1840,
	-2, 2735,
	-1, 1195,
	5, 1842,
	-2, 2780,
	-1, 1198,
	5, 1864,
	-2, 2773,
	-1, 1199,
	5, 1856,
	-2, 2774,
	-1, 1200,
	5, 1864,
	-2, 2775,
	-1, 1201,
	5, 1860,
	-2, 2776,
	-1, 1202,
	5, 1810,
	-2, 2748,
	-1, 1203,
	5, 1811,
	-2, 2749,
	-1, 1204,
	5, 1812,
	-2, 2737,
	-1, 1232,
	5, 1847,
	-2, 2781,
	-1, 1233,
	5, 1848,
	-2, 2771,
	-1, 1234,
	5, 1849,
	558, 1849,
	-2, 2738,
	-1, 1235,
	5, 1850,
	558, 1850,
	-2, 2739,
	-1, 1272,
	602, 2353,
	-2, 2344,
	-1, 1273,
	602, 2354,
	-2, 2345,
	-1, 1370,
	190, 2701,
	520, 2701,
	585, 2701,
	604, 2701,
	-2, 0,
	-1, 1375,
	1, 706,
	605, 706,
	-2, 1468,
	-1, 1505,
	364, 2318,
	422, 2318,
	465, 2318,
	595, 2318,
	-2, 2308,
	-1, 1513,
	90, 2697,
	-2, 132,
	-1, 1514,
	90, 2453,
	-2, 133,
	-1, 1515,
	90, 2622,
	-2, 134,
	-1, 1522,
	606, 2318,
	-2, 2320,
	-1, 1530,
	1, 1316,
	427, 1280,
	465, 1280,
	579, 1280,
	601, 1316,
	603, 1316,
	605, 1316,
	-2, 1605,
	-1, 1536,
	206, 1413,
	225, 1413,
	435, 1413,
	-2, 0,
	-1, 1591,
	405, 1101,
	557, 1101,
	-2, 418,
	-1, 1608,
	43, 2316,
	-2, 1067,
	-1, 1615,
	1, 1316,
	601, 1316,
	603, 1316,
	605, 1316,
	-2, 1605,
	-1, 1623,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	337, 1341,
	338, 1341,
	340, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	347, 1341,
	349, 1341,
	351, 1341,
	352, 1341,
	353, 1341,
	356, 1341,
	357, 1341,
	358, 1341,
	360, 1341,
	362, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	376, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	392, 1341,
	393, 1341,
	395, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	409, 1341,
	411, 1341,
	412, 1341,
	413, 1341,
	419, 1341,
	420, 1341,
	422, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	433, 1341,
	434, 1341,
	435, 1341,
	437, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	445, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	458, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	465, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	472, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	481, 1341,
	483, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	500, 1341,
	501, 1341,
	503, 1341,
	504, 1341,
	506, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	515, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	521, 1341,
	523, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	530, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	535, 1341,
	536, 1341,
	539, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	547, 1341,
	550, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	557, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	567, 1341,
	568, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	-2, 0,
	-1, 1646,
	1, 563,
	601, 563,
	603, 563,
	605, 563,
	-2, 1576,
	-1, 1649,
	4, 2779,
	11, 2779,
	12, 2779,
	14, 2779,
	15, 2779,
	16, 2779,
	17, 2779,
	18, 2779,
	19, 2779,
	21, 2779,
	22, 2779,
	23, 2779,
	24, 2779,
	25, 2779,
	26, 2779,
	27, 2779,
	29, 2779,
	30, 2779,
	33, 2779,
	34, 2779,
	36, 2779,
	38, 2779,
	41, 2779,
	42, 2779,
	44, 2779,
	45, 2779,
	46, 2779,
	47, 2779,
	48, 2779,
	49, 2779,
	50, 2779,
	51, 2779,
	53, 2779,
	54, 2779,
	55, 2779,
	56, 2779,
	58, 2779,
	59, 2779,
	60, 2779,
	61, 2779,
	62, 2779,
	63, 2779,
	64, 2779,
	67, 2779,
	68, 2779,
	69, 2779,
	70, 2779,
	71, 2779,
	73, 2779,
	74, 2779,
	75, 2779,
	76, 2779,
	79, 2779,
	80, 2779,
	81, 2779,
	82, 2779,
	83, 2779,
	84, 2779,
	85, 2779,
	86, 2779,
	88, 2779,
	89, 2779,
	90, 2779,
	91, 2779,
	92, 2779,
	94, 2779,
	95, 2779,
	96, 2779,
	97, 2779,
	98, 2779,
	99, 2779,
	100, 2779,
	101, 2779,
	103, 2779,
	104, 2779,
	105, 2779,
	106, 2779,
	107, 2779,
	108, 2779,
	109, 2779,
	117, 2779,
	118, 2779,
	119, 2779,
	120, 2779,
	121, 2779,
	123, 2779,
	124, 2779,
	125, 2779,
	126, 2779,
	128, 2779,
	129, 2779,
	130, 2779,
	132, 2779,
	133, 2779,
	134, 2779,
	136, 2779,
	137, 2779,
	138, 2779,
	141, 2779,
	142, 2779,
	143, 2779,
	145, 2779,
	146, 2779,
	147, 2779,
	149, 2779,
	150, 2779,
	151, 2779,
	153, 2779,
	154, 2779,
	155, 2779,
	156, 2779,
	157, 2779,
	158, 2779,
	159, 2779,
	160, 2779,
	161, 2779,
	162, 2779,
	163, 2779,
	164, 2779,
	165, 2779,
	166, 2779,
	167, 2779,
	168, 2779,
	169, 2779,
	173, 2779,
	174, 2779,
	175, 2779,
	176, 2779,
	177, 2779,
	178, 2779,
	179, 2779,
	180, 2779,
	183, 2779,
	184, 2779,
	186, 2779,
	187, 2779,
	188, 2779,
	191, 2779,
	192, 2779,
	193, 2779,
	194, 2779,
	195, 2779,
	196, 2779,
	197, 2779,
	198, 2779,
	199, 2779,
	200, 2779,
	201, 2779,
	202, 2779,
	203, 2779,
	204, 2779,
	205, 2779,
	207, 2779,
	208, 2779,
	210, 2779,
	211, 2779,
	213, 2779,
	214, 2779,
	215, 2779,
	216, 2779,
	217, 2779,
	218, 2779,
	219, 2779,
	220, 2779,
	221, 2779,
	222, 2779,
	223, 2779,
	224, 2779,
	225, 2779,
	226, 2779,
	227, 2779,
	228, 2779,
	229, 2779,
	230, 2779,
	232, 2779,
	233, 2779,
	235, 2779,
	236, 2779,
	237, 2779,
	239, 2779,
	240, 2779,
	241, 2779,
	242, 2779,
	244, 2779,
	246, 2779,
	247, 2779,
	248, 2779,
	249, 2779,
	250, 2779,
	251, 2779,
	252, 2779,
	253, 2779,
	254, 2779,
	255, 2779,
	257, 2779,
	258, 2779,
	259, 2779,
	260, 2779,
	261, 2779,
	262, 2779,
	263, 2779,
	264, 2779,
	266, 2779,
	267, 2779,
	268, 2779,
	270, 2779,
	271, 2779,
	272, 2779,
	273, 2779,
	274, 2779,
	275, 2779,
	277, 2779,
	278, 2779,
	279, 2779,
	280, 2779,
	281, 2779,
	282, 2779,
	283, 2779,
	286, 2779,
	287, 2779,
	288, 2779,
	289, 2779,
	290, 2779,
	291, 2779,
	292, 2779,
	293, 2779,
	294, 2779,
	295, 2779,
	296, 2779,
	297, 2779,
	298, 2779,
	299, 2779,
	300, 2779,
	301, 2779,
	302, 2779,
	303, 2779,
	304, 2779,
	305, 2779,
	306, 2779,
	307, 2779,
	308, 2779,
	309, 2779,
	310, 2779,
	311, 2779,
	312, 2779,
	314, 2779,
	315, 2779,
	316, 2779,
	317, 2779,
	318, 2779,
	319, 2779,
	320, 2779,
	321, 2779,
	322, 2779,
	323, 2779,
	324, 2779,
	325, 2779,
	326, 2779,
	327, 2779,
	328, 2779,
	329, 2779,
	330, 2779,
	332, 2779,
	333, 2779,
	336, 2779,
	337, 2779,
	338, 2779,
	340, 2779,
	341, 2779,
	342, 2779,
	343, 2779,
	344, 2779,
	347, 2779,
	351, 2779,
	352, 2779,
	353, 2779,
	354, 2779,
	356, 2779,
	357, 2779,
	358, 2779,
	360, 2779,
	362, 2779,
	363, 2779,
	364, 2779,
	365, 2779,
	366, 2779,
	367, 2779,
	368, 2779,
	369, 2779,
	370, 2779,
	371, 2779,
	372, 2779,
	373, 2779,
	374, 2779,
	376, 2779,
	377, 2779,
	378, 2779,
	379, 2779,
	380, 2779,
	381, 2779,
	382, 2779,
	383, 2779,
	384, 2779,
	385, 2779,
	386, 2779,
	387, 2779,
	388, 2779,
	389, 2779,
	390, 2779,
	392, 2779,
	393, 2779,
	395, 2779,
	396, 2779,
	397, 2779,
	398, 2779,
	399, 2779,
	400, 2779,
	401, 2779,
	402, 2779,
	403, 2779,
	404, 2779,
	405, 2779,
	406, 2779,
	407, 2779,
	409, 2779,
	411, 2779,
	412, 2779,
	413, 2779,
	419, 2779,
	420, 2779,
	421, 2779,
	422, 2779,
	423, 2779,
	424, 2779,
	425, 2779,
	426, 2779,
	427, 2779,
	428, 2779,
	429, 2779,
	430, 2779,
	431, 2779,
	433, 2779,
	434, 2779,
	435, 2779,
	436, 2779,
	437, 2779,
	438, 2779,
	439, 2779,
	440, 2779,
	441, 2779,
	442, 2779,
	443, 2779,
	444, 2779,
	445, 2779,
	446, 2779,
	447, 2779,
	448, 2779,
	449, 2779,
	450, 2779,
	451, 2779,
	452, 2779,
	453, 2779,
	454, 2779,
	455, 2779,
	456, 2779,
	458, 2779,
	459, 2779,
	460, 2779,
	461, 2779,
	462, 2779,
	463, 2779,
	465, 2779,
	466, 2779,
	467, 2779,
	468, 2779,
	469, 2779,
	470, 2779,
	471, 2779,
	472, 2779,
	473, 2779,
	474, 2779,
	475, 2779,
	476, 2779,
	477, 2779,
	478, 2779,
	479, 2779,
	481, 2779,
	483, 2779,
	484, 2779,
	485, 2779,
	486, 2779,
	487, 2779,
	488, 2779,
	489, 2779,
	490, 2779,
	491, 2779,
	492, 2779,
	493, 2779,
	494, 2779,
	495, 2779,
	496, 2779,
	497, 2779,
	498, 2779,
	500, 2779,
	501, 2779,
	502, 2779,
	503, 2779,
	504, 2779,
	506, 2779,
	507, 2779,
	508, 2779,
	509, 2779,
	510, 2779,
	511, 2779,
	512, 2779,
	513, 2779,
	515, 2779,
	516, 2779,
	517, 2779,
	518, 2779,
	519, 2779,
	521, 2779,
	523, 2779,
	524, 2779,
	525, 2779,
	526, 2779,
	527, 2779,
	528, 2779,
	530, 2779,
	531, 2779,
	532, 2779,
	533, 2779,
	535, 2779,
	536, 2779,
	539, 2779,
	540, 2779,
	541, 2779,
	542, 2779,
	543, 2779,
	544, 2779,
	545, 2779,
	547, 2779,
	550, 2779,
	551, 2779,
	552, 2779,
	553, 2779,
	554, 2779,
	555, 2779,
	557, 2779,
	558, 2779,
	559, 2779,
	560, 2779,
	561, 2779,
	562, 2779,
	567, 2779,
	568, 2779,
	569, 2779,
	570, 2779,
	571, 2779,
	572, 2779,
	573, 2779,
	575, 2779,
	583, 2779,
	584, 2779,
	585, 2779,
	586, 2779,
	587, 2779,
	588, 2779,
	590, 2779,
	591, 2779,
	592, 2779,
	593, 2779,
	594, 2779,
	595, 2779,
	596, 2779,
	597, 2779,
	598, 2779,
	600, 2779,
	603, 2779,
	604, 2779,
	606, 2779,
	607, 2779,
	-2, 0,
	-1, 1654,
	190, 2660,
	520, 2660,
	585, 2660,
	604, 2660,
	-2, 0,
	-1, 1707,
	397, 902,
	463, 902,
	504, 902,
	525, 902,
	-2, 0,
	-1, 1718,
	1, 1413,
	601, 1413,
	603, 1413,
	605, 1413,
	-2, 0,
	-1, 1735,
	1, 897,
	601, 897,
	603, 897,
	605, 897,
	-2, 0,
	-1, 1736,
	1, 941,
	601, 941,
	603, 941,
	605, 941,
	-2, 0,
	-1, 1737,
	1, 949,
	601, 949,
	603, 949,
	605, 949,
	-2, 0,
	-1, 1740,
	1, 906,
	601, 906,
	603, 906,
	605, 906,
	-2, 0,
	-1, 1742,
	1, 912,
	601, 912,
	603, 912,
	605, 912,
	-2, 0,
	-1, 1745,
	1, 908,
	601, 908,
	603, 908,
	605, 908,
	-2, 0,
	-1, 1750,
	1, 922,
	601, 922,
	603, 922,
	605, 922,
	-2, 0,
	-1, 1781,
	1, 2643,
	601, 2643,
	603, 2643,
	604, 2643,
	605, 2643,
	-2, 0,
	-1, 1785,
	1, 996,
	601, 996,
	603, 996,
	605, 996,
	-2, 0,
	-1, 1802,
	1, 1463,
	605, 1463,
	-2, 1468,
	-1, 1805,
	172, 1619,
	185, 1619,
	276, 1619,
	345, 1619,
	-2, 1557,
	-1, 1905,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	345, 1578,
	355, 1578,
	537, 1578,
	-2, 2029,
	-1, 1966,
	603, 2204,
	-2, 0,
	-1, 2001,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	345, 1578,
	355, 1578,
	537, 1578,
	-2, 1711,
	-1, 2040,
	520, 2657,
	604, 2657,
	607, 2657,
	-2, 0,
	-1, 2057,
	602, 1852,
	-2, 1840,
	-1, 2089,
	190, 2657,
	604, 2657,
	607, 2657,
	-2, 0,
	-1, 2132,
	1, 708,
	605, 708,
	-2, 1468,
	-1, 2277,
	225, 268,
	-2, 2352,
	-1, 2278,
	225, 269,
	-2, 320,
	-1, 2387,
	1, 899,
	601, 899,
	603, 899,
	605, 899,
	-2, 0,
	-1, 2388,
	1, 943,
	601, 943,
	603, 943,
	605, 943,
	-2, 0,
	-1, 2389,
	1, 951,
	601, 951,
	603, 951,
	605, 951,
	-2, 0,
	-1, 2390,
	1, 998,
	601, 998,
	603, 998,
	605, 998,
	-2, 0,
	-1, 2431,
	1, 924,
	601, 924,
	603, 924,
	605, 924,
	-2, 0,
	-1, 2451,
	1, 981,
	601, 981,
	603, 981,
	605, 981,
	-2, 0,
	-1, 2498,
	442, 1646,
	443, 1646,
	-2, 1885,
	-1, 2529,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1905,
	-1, 2530,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1906,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1907,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1908,
	-1, 2533,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1909,
	-1, 2534,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1910,
	-1, 2535,
	95, 0,
	257, 0,
	258, 0,
	587, 0,
	588, 0,
	-2, 1911,
	-1, 2536,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1912,
	-1, 2548,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1924,
	-1, 2549,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1925,
	-1, 2550,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1926,
	-1, 2554,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1933,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1937,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1945,
	-1, 2563,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1946,
	-1, 2564,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1947,
	-1, 2565,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1948,
	-1, 2739,
	5, 2356,
	190, 2215,
	602, 2353,
	-2, 2344,
	-1, 2740,
	190, 2216,
	-2, 2730,
	-1, 2741,
	190, 2217,
	-2, 2546,
	-1, 2742,
	190, 2218,
	-2, 2426,
	-1, 2743,
	190, 2219,
	-2, 2484,
	-1, 2744,
	190, 2220,
	-2, 2531,
	-1, 2745,
	190, 2221,
	-2, 2655,
	-1, 2746,
	190, 2222,
	-2, 2012,
	-1, 2817,
	1, 1712,
	2, 1712,
	106, 1712,
	152, 1712,
	172, 1712,
	185, 1712,
	191, 1712,
	209, 1712,
	212, 1712,
	239, 1712,
	243, 1712,
	254, 1712,
	272, 1712,
	276, 1712,
	315, 1712,
	345, 1712,
	349, 1712,
	355, 1712,
	432, 1712,
	436, 1712,
	537, 1712,
	548, 1712,
	564, 1712,
	565, 1712,
	566, 1712,
	576, 1712,
	601, 1712,
	603, 1712,
	605, 1712,
	607, 1712,
	-2, 1711,
	-1, 2830,
	602, 2325,
	-2, 2339,
	-1, 2832,
	1, 337,
	564, 337,
	-2, 1605,
	-1, 2862,
	602, 1851,
	-2, 1841,
	-1, 3055,
	1, 1316,
	427, 1280,
	465, 1280,
	579, 1280,
	601, 1316,
	603, 1316,
	605, 1316,
	-2, 1605,
	-1, 3230,
	350, 1649,
	-2, 2769,
	-1, 3231,
	350, 1650,
	-2, 2640,
	-1, 3235,
	442, 2281,
	443, 2281,
	-2, 2010,
	-1, 3236,
	442, 2285,
	443, 2285,
	-2, 2011,
	-1, 3237,
	442, 2282,
	443, 2282,
	-2, 2010,
	-1, 3238,
	442, 2286,
	443, 2286,
	-2, 2011,
	-1, 3251,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1935,
	-1, 3252,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1939,
	-1, 3258,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1941,
	-1, 3485,
	1, 703,
	601, 703,
	603, 703,
	605, 703,
	-2, 1468,
	-1, 3668,
	43, 2316,
	-2, 1068,
	-1, 3673,
	1, 1316,
	601, 1316,
	603, 1316,
	605, 1316,
	-2, 1605,
	-1, 3776,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1943,
	-1, 3783,
	248, 0,
	250, 0,
	336, 0,
	-2, 1962,
	-1, 3851,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1991,
	-1, 3852,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1992,
	-1, 3853,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1993,
	-1, 3857,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1997,
	-1, 3858,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1998,
	-1, 3859,
	14, 0,
	15, 0,
	16, 0,
	583, 0,
	584, 0,
	585, 0,
	-2, 1999,
	-1, 3907,
	602, 2326,
	-2, 2340,
	-1, 4103,
	604, 2886,
	-2, 1531,
	-1, 4157,
	248, 0,
	250, 0,
	336, 0,
	-2, 1963,
	-1, 4160,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1966,
	-1, 4161,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1968,
	-1, 4270,
	604, 2341,
	-2, 1351,
	-1, 4429,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1967,
	-1, 4430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 1969,
	-1, 4441,
	248, 0,
	-2, 2002,
	-1, 4629,
	248, 0,
	-2, 2003,
	-1, 4843,
	50, 0,
	222, 0,
	275, 0,
	471, 0,
	573, 0,
	586, 0,
	-2, 2733,
}

const sqlPrivate = 57344

const sqlLast = 134833

var sqlAct = [...]int{
	277, 4783, 4782, 5025, 3657, 4957, 3389, 3127, 4675, 4904,
	4854, 4970, 4888, 4497, 4842, 4718, 3140, 4667, 4739, 4830,
	4855, 3656, 4814, 4140, 4796, 4856, 1265, 4911, 2274, 4793,
	1544, 4575, 4599, 2101, 2969, 4562, 4773, 3816, 4479, 1276,
	4546, 4633, 4391, 4266, 3917, 4386, 4502, 2994, 2351, 2181,
	4841, 4346, 3768, 4320, 1343, 2508, 3503, 4095, 4418, 2363,
	4087, 4450, 4373, 3097, 3506, 4375, 4584, 1571, 4703, 2772,
	3690, 4015, 3244, 4366, 715, 827, 2361, 4267, 4247, 2577,
	2927, 2114, 1341, 3684, 2928, 3013, 1814, 3641, 1087, 3509,
	4396, 4042, 2509, 3646, 1096, 4044, 4061, 1153, 2516, 4446,
	2189, 1409, 2044, 827, 3721, 3152, 3723, 787, 3116, 3566,
	3086, 2844, 1672, 3645, 3910, 3113, 3648, 2359, 3623, 3622,
	2045, 1348, 3630, 3404, 3442, 3435, 3412, 4139, 2324, 726,
	3372, 3395, 906, 4196, 3142, 3128, 1502, 1976, 902, 4,
	2261, 1142, 3147, 3111, 2263, 3062, 1095, 182, 3393, 2201,
	3877, 2810, 824, 3371, 4889, 2513, 1952, 2655, 1883, 4634,
	271, 2590, 3528, 3228, 897, 270, 1509, 1913, 2812, 822,
	2217, 3090, 2262, 3146, 1149, 1346, 1610, 783, 3030, 1256,
	3098, 2257, 2238, 1146, 2169, 2173, 2245, 1802, 1390, 1320,
	2657, 2112, 1148, 2646, 2574, 1151, 1351, 1715, 2159, 2790,
	2478, 1977, 2497, 2480, 2845, 1647, 3121, 2311, 2025, 2914,
	1334, 1613, 828, 2809, 829, 760, 1996, 1670, 702, 2769,
	2234, 4740, 724, 975, 3649, 2649, 1573, 2873, 1377, 2799,
	1259, 1238, 2701, 1947, 1986, 833, 2780, 1993, 2735, 2627,
	836, 182, 191, 1815, 1273, 2479, 1897, 192, 1816, 2481,
	768, 1735, 1750, 779, 1255, 923, 1196, 2310, 1331, 2271,
	1645, 2337, 1638, 833, 1540, 1510, 4905, 4958, 836, 2502,
	111, 1127, 719, 44, 43, 1261, 1801, 743, 41, 32,
	716, 30, 728, 28, 1236, 1821, 3281, 1550, 996, 817,
	3891, 878, 3892, 1144, 3275, 5036, 2968, 3391, 5028, 2789,
	3918, 2103, 3709, 5017, 879, 2103, 5016, 2789, 4990, 4988,
	2789, 1516, 4501, 4501, 2103, 4464, 1091, 4931, 2103, 2103,
	2103, 2283, 4890, 4880, 1681, 4878, 4891, 2789, 4875, 2789,
	4872, 4851, 4876, 4839, 4873, 4838, 4470, 2283, 4837, 2283,
	3699, 2124, 3157, 4828, 4826, 4823, 4818, 4501, 4501, 4587,
	4501, 4817, 4791, 4759, 4752, 4501, 4501, 2853, 2789, 4751,
	4744, 1741, 4717, 2789, 2283, 4714, 2283, 4697, 898, 4501,
	4631, 4336, 4613, 4577, 2853, 1253, 4124, 4578, 4520, 4519,
	4508, 4467, 2283, 2283, 2283, 1271, 4223, 4507, 4500, 1829,
	1830, 4501, 4501, 1386, 3452, 73, 4457, 901, 900, 4431,
	2283, 1386, 2121, 2853, 1239, 1239, 4407, 4404, 2875, 4315,
	3157, 3709, 74, 2789, 1081, 3700, 4293, 4159, 1268, 1832,
	2789, 2853, 4111, 1091, 2360, 1072, 3716, 2124, 79, 4105,
	1071, 4058, 3881, 3716, 3902, 4059, 1267, 3900, 3903, 3884,
	1290, 3901, 3800, 2789, 1663, 3796, 2283, 3715, 3470, 2789,
	2849, 3716, 3709, 73, 1831, 1564, 3467, 3388, 3383, 3382,
	3290, 2789, 2789, 2789, 1092, 3333, 3291, 94, 88, 3334,
	74, 3331, 3323, 3321, 3292, 3332, 3324, 2789, 2789, 1086,
	3156, 2121, 2283, 3138, 3157, 3137, 79, 2347, 2898, 2347,
	2852, 2124, 2789, 2842, 2853, 2124, 2782, 2789, 2834, 2788,
	2652, 2346, 2283, 2789, 1298, 2347, 1242, 1552, 1243, 904,
	2124, 3243, 2789, 4760, 4635, 4626, 4614, 4587, 3157, 3881,
	2781, 1240, 49, 4384, 110, 4336, 88, 1291, 241, 2121,
	94, 107, 4294, 4124, 4060, 3003, 2194, 2913, 2138, 2102,
	2118, 3092, 1291, 2282, 1552, 3023, 2911, 3342, 3343, 1972,
	1539, 3992, 3771, 3745, 1994, 2250, 3701, 1717, 2826, 2825,
	2824, 1837, 2823, 2822, 1244, 1241, 4214, 904, 2789, 1080,
	1829, 1830, 1558, 241, 1079, 3702, 243, 1078, 1077, 1076,
	49, 1075, 110, 1074, 1070, 1069, 1068, 1067, 94, 107,
	95, 1066, 1065, 2653, 1064, 3201, 1516, 1063, 1062, 1061,
	1832, 1060, 1059, 1829, 1830, 1058, 1862, 1863, 1864, 1873,
	1874, 1875, 1057, 1056, 1055, 1054, 1053, 1035, 973, 972,
	971, 243, 970, 969, 242, 1866, 1860, 1552, 3342, 3343,
	968, 967, 966, 1832, 965, 1831, 964, 235, 963, 962,
	961, 960, 1879, 959, 958, 957, 236, 956, 95, 955,
	954, 953, 952, 951, 950, 949, 948, 947, 946, 1885,
	2603, 2604, 2605, 2622, 2623, 2624, 2104, 945, 1831, 242,
	2104, 1563, 944, 193, 2654, 3280, 2651, 943, 1851, 2104,
	2625, 3342, 3343, 2104, 2104, 2104, 942, 1848, 941, 940,
	939, 938, 927, 926, 925, 921, 920, 913, 912, 911,
	896, 895, 852, 851, 850, 849, 840, 839, 838, 837,
	803, 794, 793, 1885, 792, 774, 265, 264, 193, 3348,
	263, 4617, 262, 261, 260, 259, 258, 257, 256, 255,
	3342, 3343, 2615, 3360, 3361, 3362, 254, 99, 253, 252,
	251, 2611, 1837, 1882, 250, 249, 4398, 248, 2121, 247,
	246, 4171, 4155, 2121, 1551, 245, 244, 3927, 1125, 3896,
	241, 1353, 1151, 3717, 3438, 1854, 1855, 1856, 1857, 3303,
	3386, 3286, 3277, 153, 3181, 1837, 3072, 2857, 2831, 241,
	2423, 1997, 2816, 2470, 2167, 2684, 2682, 2123, 1557, 1151,
	1151, 1151, 3106, 190, 102, 99, 1955, 106, 2121, 2020,
	3348, 1924, 2668, 1954, 1796, 3357, 1546, 1412, 243, 1828,
	2666, 1412, 3387, 1398, 1870, 1275, 241, 1880, 1353, 2616,
	2617, 2618, 2619, 241, 1859, 1861, 3358, 243, 4492, 2610,
	1958, 905, 3699, 2656, 4865, 4864, 153, 4861, 4840, 4825,
	1876, 4725, 1877, 1151, 2124, 1151, 4623, 1151, 2885, 1846,
	1847, 190, 102, 3348, 1576, 106, 242, 2102, 1915, 1381,
	4445, 2121, 2118, 2473, 243, 1291, 4615, 1868, 1685, 235,
	1667, 243, 1955, 2121, 4638, 242, 4405, 4383, 236, 1954,
	1353, 241, 1852, 1394, 1395, 1396, 4229, 4194, 235, 905,
	4193, 4187, 4186, 1518, 153, 1523, 157, 236, 4185, 241,
	1576, 1882, 3348, 2620, 2621, 193, 1953, 1576, 4178, 4071,
	241, 194, 242, 2781, 4177, 1359, 1151, 1915, 1151, 242,
	4175, 1291, 1743, 1576, 193, 235, 3342, 3343, 1878, 243,
	4170, 1151, 235, 1151, 236, 1094, 2613, 1552, 4167, 4166,
	4057, 236, 3931, 3930, 1325, 1328, 1867, 243, 2650, 2007,
	3929, 3906, 3872, 3871, 157, 4400, 3870, 1882, 243, 1373,
	3358, 193, 3124, 1338, 1619, 1622, 3792, 3364, 899, 194,
	1375, 1833, 1834, 1835, 1836, 1838, 1839, 242, 3787, 2866,
	3359, 1576, 1882, 3433, 3379, 1405, 3370, 1499, 1504, 3341,
	235, 833, 1528, 3338, 3337, 242, 836, 3335, 3330, 236,
	3329, 1151, 1269, 3328, 1151, 3325, 242, 3322, 235, 3358,
	1917, 1252, 3302, 1858, 1530, 3285, 1916, 236, 1914, 235,
	1507, 3278, 3276, 3139, 2817, 1922, 193, 241, 236, 2639,
	1828, 2327, 1367, 2290, 2288, 1882, 1853, 1827, 5031, 4072,
	4979, 4978, 3108, 1542, 193, 1541, 4903, 182, 182, 4901,
	3342, 3343, 3990, 1608, 1277, 193, 3818, 4784, 4702, 4688,
	4683, 4682, 4681, 1871, 4661, 1650, 1652, 1686, 4660, 4658,
	4637, 4636, 4611, 2580, 4597, 243, 1615, 2586, 4594, 4593,
	3384, 4588, 4573, 4572, 1882, 4516, 4487, 4443, 4426, 4425,
	2614, 4369, 4362, 4359, 1884, 1625, 4337, 4213, 3348, 4192,
	4125, 3978, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	3342, 3343, 3977, 3960, 3359, 3959, 1381, 3957, 3887, 1381,
	3875, 3782, 1902, 242, 3718, 3357, 1648, 3351, 3352, 3344,
	3345, 3346, 3347, 3349, 3350, 1151, 235, 3710, 3459, 3676,
	3589, 1151, 3541, 3508, 3461, 236, 3307, 3306, 1884, 1641,
	3342, 3343, 3301, 3267, 1835, 1836, 1838, 1839, 3085, 1961,
	1806, 1639, 1960, 3359, 4072, 1869, 1959, 1956, 1948, 1946,
	1092, 2864, 193, 2863, 2828, 1843, 1844, 1850, 1872, 1849,
	1845, 2821, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 3430, 2787, 1829, 1830, 4181, 2664, 1901, 2019, 4180,
	1691, 1975, 1970, 1759, 1662, 1969, 1968, 1967, 4399, 241,
	3344, 3345, 3346, 3347, 3349, 3350, 1800, 1966, 1965, 1680,
	1964, 2194, 3348, 1832, 1963, 1962, 1943, 1942, 1941, 2600,
	2601, 2602, 2626, 2612, 2606, 241, 2608, 2609, 2607, 2594,
	2595, 2596, 2597, 2598, 2599, 3107, 1151, 1151, 1151, 1940,
	1939, 1938, 1151, 1937, 1936, 1935, 1934, 243, 1831, 1273,
	1933, 1273, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 1932,
	1931, 1708, 3705, 1930, 1929, 1928, 1412, 1917, 1903, 1974,
	1900, 1895, 3348, 243, 1366, 1295, 1744, 1151, 1286, 4640,
	827, 1353, 241, 2192, 4465, 4618, 2062, 827, 4639, 1353,
	4372, 1353, 3354, 3355, 3356, 242, 1807, 4225, 2023, 3353,
	3351, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 235, 1803,
	1644, 1983, 3348, 241, 4163, 241, 3926, 236, 3899, 3358,
	3890, 242, 3289, 1811, 2855, 2819, 4227, 1810, 1072, 3925,
	243, 1916, 3457, 1071, 235, 1898, 2150, 2149, 2031, 2015,
	2158, 2160, 1393, 236, 193, 1391, 2035, 1957, 1805, 2108,
	4296, 1353, 2110, 2158, 2030, 3342, 3343, 1151, 2115, 2158,
	241, 243, 2117, 243, 4976, 1824, 1825, 2120, 4969, 3544,
	193, 2995, 4684, 4589, 1980, 1981, 2683, 2681, 242, 3358,
	241, 1151, 2004, 2056, 2158, 4580, 4579, 4403, 4340, 1412,
	1271, 235, 1271, 2667, 1882, 1092, 1239, 2183, 4339, 182,
	236, 2665, 2041, 4338, 4295, 4216, 4130, 1392, 243, 242,
	2091, 242, 2093, 2029, 2156, 1949, 1950, 4129, 4491, 3358,
	4128, 4127, 235, 1268, 235, 1268, 2130, 3123, 243, 4126,
	4616, 236, 2036, 236, 3894, 3893, 2973, 1381, 3720, 2085,
	833, 1267, 3719, 1267, 3712, 836, 3711, 833, 4857, 4927,
	2228, 4585, 836, 4925, 1882, 2028, 242, 4075, 193, 2153,
	193, 1386, 2129, 1997, 2279, 4004, 3769, 1386, 2005, 235,
	1938, 1938, 2126, 3359, 3327, 2165, 242, 3975, 236, 2024,
	1955, 2002, 1798, 3326, 1995, 3249, 2955, 1954, 3028, 235,
	1707, 1389, 2144, 1051, 1882, 3659, 3510, 3658, 236, 1644,
	3346, 3347, 3349, 3350, 2106, 193, 1386, 1926, 4947, 2352,
	2247, 4576, 1973, 4886, 1760, 4868, 1716, 4853, 3631, 3153,
	1717, 1092, 2265, 4079, 1999, 193, 2014, 2013, 1576, 1576,
	1387, 2012, 2010, 3359, 2009, 2264, 2008, 1412, 1052, 4054,
	4065, 2193, 2059, 2379, 3575, 4012, 4001, 3983, 2132, 4862,
	3742, 3483, 2357, 4447, 2042, 3391, 3820, 2647, 4281, 2862,
	1643, 1971, 3295, 4511, 4483, 1951, 4278, 2652, 3639, 2321,
	2190, 1618, 1535, 3359, 1362, 1324, 2155, 3020, 4877, 2050,
	4874, 3695, 3017, 3015, 3951, 2328, 4676, 3180, 3064, 4387,
	4790, 3009, 1695, 4654, 3000, 3513, 3970, 3120, 2224, 2953,
	2232, 1251, 2227, 3614, 2186, 4962, 4928, 2233, 4929, 2242,
	4514, 2128, 1923, 4510, 2154, 4863, 4489, 3763, 4542, 3353,
	3351, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 3487, 4283,
	2930, 1593, 1585, 2191, 2219, 2899, 4025, 5027, 1537, 4692,
	2275, 2280, 1576, 1757, 1576, 2437, 1576, 1049, 2133, 2161,
	1383, 2151, 2435, 3008, 1376, 1047, 3002, 1045, 4535, 891,
	2653, 2952, 2187, 2188, 1576, 1576, 4522, 4329, 4328, 2235,
	4313, 4312, 4023, 2200, 2451, 1393, 2448, 1576, 4022, 3353,
	3351, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 4014, 1576,
	833, 1576, 1576, 1576, 1043, 836, 2267, 2268, 1031, 2488,
	2194, 4008, 1758, 4024, 1040, 2269, 2192, 4007, 3998, 2225,
	3997, 3954, 2145, 1090, 3995, 827, 2015, 1594, 3994, 2222,
	4262, 3458, 3344, 3345, 3346, 3347, 3349, 3350, 3982, 2449,
	3946, 3945, 3620, 1388, 3619, 3580, 2488, 1151, 2378, 2317,
	1392, 2654, 1542, 2651, 1541, 1756, 2322, 2933, 3451, 1643,
	1511, 1393, 3300, 2220, 4255, 3299, 2450, 3298, 3297, 2486,
	2334, 3253, 3026, 3025, 2221, 2218, 892, 2237, 766, 766,
	1839, 1543, 1151, 4277, 2241, 1693, 3022, 1387, 3011, 3543,
	2997, 2355, 2989, 1387, 2988, 4512, 4484, 2983, 4279, 2982,
	2917, 1384, 2917, 2981, 2281, 2960, 2486, 2959, 2921, 2342,
	1385, 2843, 2383, 2561, 1089, 2915, 1804, 2915, 1151, 4256,
	1151, 3489, 4963, 2697, 2696, 2518, 1392, 1151, 3117, 4234,
	2062, 2062, 1412, 2472, 1151, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	2303, 1151, 2870, 1151, 1151, 1151, 1151, 2408, 1648, 2344,
	1648, 2847, 2331, 2302, 3510, 833, 2265, 1641, 2484, 2339,
	836, 2339, 2365, 2236, 2352, 2336, 2236, 2856, 2340, 1151,
	2371, 2236, 2490, 1151, 1151, 1688, 2301, 1383, 1367, 2236,
	2656, 1151, 2348, 1383, 2349, 1151, 2477, 1151, 1151, 2487,
	3573, 2977, 1092, 1538, 1092, 1412, 1091, 2056, 2056, 1037,
	4239, 1151, 1151, 1151, 1151, 2162, 2163, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 2370, 3743, 4551, 2970, 2971,
	2514, 2515, 3350, 4297, 2970, 2971, 2487, 4424, 1589, 2932,
	2387, 2463, 2395, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 2628, 2629, 2193, 1631, 1151, 1630, 2398, 2970,
	2971, 1629, 1310, 1628, 2216, 1386, 2628, 2644, 1273, 2468,
	1388, 2647, 2485, 4238, 2229, 1412, 1388, 2375, 1709, 4964,
	2957, 2460, 1794, 1602, 1273, 2431, 765, 765, 2906, 2576,
	4280, 2231, 2576, 2692, 2230, 3160, 1755, 1269, 2501, 1269,
	1151, 1412, 1985, 1689, 2833, 2650, 4251, 4928, 4275, 2485,
	1739, 4252, 2738, 2738, 2752, 1607, 2628, 1769, 3196, 2773,
	2775, 4257, 2226, 2944, 1739, 2779, 2441, 2228, 1384, 4859,
	3226, 2202, 2476, 1705, 1384, 2474, 2475, 1385, 2489, 801,
	2592, 2482, 1797, 1385, 1072, 3019, 2191, 1072, 1072, 2505,
	1773, 2392, 2506, 2507, 2206, 2462, 2396, 2386, 894, 893,
	2804, 3574, 1904, 4254, 2643, 2223, 2059, 2059, 1717, 2829,
	1717, 3486, 2429, 2846, 714, 4992, 2388, 3018, 2584, 4965,
	4258, 2943, 3016, 3014, 2341, 2582, 2931, 1989, 1088, 2920,
	1736, 3752, 1809, 3241, 1365, 767, 767, 2230, 3967, 2796,
	709, 4669, 1614, 2050, 2050, 1353, 1353, 2656, 3751, 1271,
	3198, 2203, 4646, 4327, 3996, 2004, 3993, 1738, 2572, 2694,
	2880, 1239, 2869, 2588, 2695, 1271, 2884, 2698, 1694, 2699,
	2700, 1738, 3934, 936, 1752, 1992, 2641, 3921, 2389, 4973,
	2895, 3626, 1268, 3618, 2558, 2872, 3809, 73, 1412, 2570,
	1987, 1092, 1737, 799, 2920, 1612, 2436, 2891, 1268, 1041,
	1267, 1092, 2850, 2434, 74, 1092, 2795, 1041, 1990, 1041,
	182, 4034, 3571, 3021, 2734, 4552, 1267, 2980, 2868, 2227,
	79, 2888, 2747, 2062, 2777, 1100, 2764, 4550, 3207, 4967,
	2803, 2958, 2808, 4548, 1381, 2814, 2815, 2785, 2786, 2818,
	2801, 2802, 889, 2797, 888, 4860, 1042, 4940, 4423, 2469,
	4253, 1988, 1386, 1957, 2002, 4273, 1041, 3965, 1386, 2858,
	88, 2207, 3979, 4949, 2916, 4948, 4671, 2894, 3240, 4035,
	4276, 1412, 2841, 2174, 2251, 2287, 2286, 2896, 2175, 2258,
	4547, 3233, 3234, 4993, 4916, 3406, 4145, 1353, 2922, 4263,
	4264, 2956, 2459, 4144, 1092, 3746, 2902, 3692, 3980, 3204,
	2103, 904, 3627, 2993, 4756, 1591, 2865, 4549, 1151, 1151,
	841, 1151, 4033, 3560, 49, 2879, 110, 2890, 2904, 2882,
	2056, 2883, 94, 107, 2807, 1949, 1950, 2208, 2209, 3342,
	3343, 2566, 3360, 3361, 3362, 827, 848, 1353, 2897, 1770,
	2874, 2893, 3210, 2963, 2889, 2656, 2919, 2887, 1569, 3264,
	4858, 3012, 2204, 2567, 3624, 2905, 2556, 3693, 2568, 2559,
	3089, 3497, 2573, 2918, 1588, 3552, 2461, 2394, 1576, 2978,
	2962, 3561, 1991, 2248, 1023, 2260, 2903, 4832, 4768, 4833,
	3262, 1576, 95, 1576, 3104, 2947, 2900, 4474, 1309, 2996,
	3806, 2985, 2176, 2252, 2984, 4677, 2205, 4699, 1085, 2961,
	1576, 1656, 2194, 3059, 3357, 2935, 2938, 1614, 3488, 2555,
	2180, 800, 2979, 3067, 3559, 4274, 3151, 1671, 3069, 2925,
	3150, 2987, 1767, 3553, 1353, 4966, 1353, 3592, 1690, 2951,
	764, 1281, 2917, 2259, 4971, 4356, 2214, 1718, 3161, 3162,
	3692, 928, 3131, 1536, 1293, 3525, 1283, 2936, 1151, 3168,
	3169, 3170, 1038, 3027, 2231, 3148, 3529, 1944, 3056, 3057,
	802, 3060, 3455, 833, 798, 2986, 3551, 929, 836, 3611,
	3100, 3807, 2991, 1278, 2192, 1699, 3209, 4420, 3001, 2059,
	1771, 3184, 3007, 3055, 3405, 2177, 2182, 3094, 3255, 710,
	1024, 2575, 4754, 3154, 2215, 833, 2229, 2197, 3178, 2248,
	836, 3348, 3524, 3158, 3058, 4141, 3145, 3206, 3065, 3163,
	3531, 3164, 2184, 182, 1151, 1542, 2050, 3070, 2210, 1284,
	1151, 1151, 3259, 2174, 2972, 2974, 2975, 2976, 2175, 99,
	2832, 3135, 3133, 3096, 3083, 4670, 4755, 2213, 1704, 1706,
	3093, 4896, 1768, 3365, 4972, 3182, 4436, 3183, 2569, 3260,
	2430, 4897, 4915, 3265, 1985, 2198, 2754, 2391, 2571, 937,
	842, 843, 3212, 2385, 3214, 914, 3364, 3126, 2178, 3498,
	4938, 711, 2583, 3136, 3530, 1772, 1151, 1151, 4801, 3966,
	4974, 4307, 1151, 3625, 733, 190, 102, 1282, 1989, 106,
	1894, 919, 3305, 2211, 1648, 1151, 1151, 1808, 2196, 1364,
	3155, 1151, 1151, 3134, 2638, 2557, 2992, 1151, 3358, 4994,
	2800, 3175, 3115, 3208, 2255, 241, 2813, 2184, 4419, 4462,
	712, 1091, 713, 905, 4376, 3822, 3177, 3186, 153, 3188,
	2656, 3190, 3185, 3192, 3193, 3065, 1992, 1029, 1028, 1989,
	4981, 3187, 2176, 3189, 4377, 3191, 4371, 4135, 4332, 3922,
	1299, 2798, 1151, 1151, 1151, 4357, 3202, 4047, 1151, 3256,
	2180, 1297, 4719, 243, 4146, 2104, 3765, 4045, 1151, 1990,
	3224, 3492, 2253, 3221, 4806, 1723, 4712, 4738, 4596, 4331,
	2248, 3232, 4330, 1882, 1025, 1151, 4093, 1992, 157, 3288,
	3680, 930, 931, 3469, 3215, 2840, 3222, 3217, 2309, 1982,
	3223, 1296, 1987, 194, 1289, 845, 844, 701, 4047, 4070,
	1819, 242, 2501, 3912, 3242, 2254, 3227, 4142, 4045, 1818,
	1990, 4190, 3283, 3284, 235, 3861, 2504, 3287, 2195, 4704,
	2146, 1109, 2193, 236, 2244, 2177, 2182, 4999, 3279, 3261,
	4509, 4605, 4705, 3504, 3443, 2937, 1818, 2143, 4653, 3263,
	4049, 4094, 4018, 3999, 3952, 4914, 3950, 4421, 3681, 1813,
	1653, 2243, 3359, 1988, 3672, 3500, 1269, 3913, 3105, 3099,
	846, 847, 3087, 3254, 2335, 2329, 4706, 1151, 1151, 1151,
	1151, 4048, 1269, 2323, 2315, 2295, 2294, 1151, 1151, 1151,
	3805, 3414, 1151, 1582, 3914, 2239, 3911, 1301, 4895, 2964,
	2179, 4049, 1151, 1273, 1412, 1279, 773, 1026, 1151, 3876,
	1151, 3766, 3398, 3399, 2494, 915, 916, 4774, 2178, 1273,
	4720, 2920, 2141, 1817, 2191, 4741, 1818, 2442, 3942, 2139,
	4096, 4392, 4048, 1991, 1027, 3084, 1312, 1412, 4147, 4568,
	4566, 3916, 4708, 4486, 3516, 2376, 3512, 3511, 3247, 1273,
	1817, 2791, 1412, 2240, 3225, 3889, 3403, 3402, 1280, 3294,
	4374, 3381, 2368, 3535, 1353, 4707, 2142, 2184, 1746, 1745,
	2358, 1092, 3423, 4043, 2062, 3436, 2292, 3400, 1412, 1740,
	2839, 2838, 2837, 4709, 1991, 2794, 1030, 3415, 1353, 932,
	933, 2836, 1819, 2835, 1637, 4053, 1353, 3091, 1089, 1635,
	935, 3354, 3355, 3356, 1623, 4664, 4066, 4347, 3353, 3351,
	3352, 3344, 3345, 3346, 3347, 3349, 3350, 1624, 1151, 1819,
	3862, 3533, 4498, 4148, 2941, 4191, 2793, 1894, 3958, 3863,
	1817, 2792, 1151, 3473, 2333, 2183, 3475, 3476, 3437, 3413,
	3420, 3479, 1353, 3480, 1271, 3481, 3634, 4935, 2062, 4998,
	3408, 4472, 4471, 2495, 4046, 3947, 3063, 4570, 3468, 3453,
	1271, 3159, 3068, 3066, 3534, 1151, 2362, 2264, 1698, 2183,
	4780, 2056, 4665, 3419, 4494, 2965, 2966, 1268, 3593, 4493,
	1353, 3445, 3446, 3447, 3448, 3450, 4481, 3477, 4787, 4771,
	1271, 4197, 3429, 1268, 3456, 1267, 1381, 3441, 3878, 3915,
	3422, 2663, 1353, 3392, 1353, 4046, 3376, 3377, 3378, 3465,
	4463, 1267, 3484, 917, 918, 3493, 3494, 3407, 4220, 1790,
	4721, 3515, 1724, 1268, 3520, 2247, 3490, 3522, 3943, 4499,
	4569, 1792, 1412, 4482, 2247, 2455, 3514, 3409, 3501, 3518,
	4808, 1267, 3421, 1353, 1789, 2056, 1787, 1353, 3424, 3425,
	2179, 4939, 1764, 4937, 3427, 4879, 3428, 1762, 1734, 3546,
	4695, 4781, 4685, 4666, 3576, 1732, 4469, 4442, 3507, 1730,
	1728, 1726, 4231, 1576, 3462, 3463, 4189, 3464, 3444, 1720,
	3416, 3417, 3418, 4052, 1714, 1712, 1353, 1576, 1692, 1576,
	1023, 3474, 3471, 1412, 3373, 1633, 772, 3781, 3478, 3740,
	827, 1576, 3739, 3582, 3581, 3466, 3336, 3485, 3266, 3550,
	3088, 3010, 1576, 2999, 1085, 3569, 3595, 3590, 3597, 3491,
	3948, 3601, 2998, 2954, 1353, 3607, 2867, 2464, 2353, 2029,
	2059, 1410, 2022, 2018, 4710, 1512, 1793, 1636, 3499, 3564,
	4711, 1273, 1634, 934, 1674, 2433, 3688, 3496, 4554, 2400,
	2350, 4531, 3532, 4530, 3374, 2273, 4006, 3761, 4314, 3664,
	3671, 3760, 1813, 3200, 3542, 3199, 1576, 2050, 2364, 2366,
	3166, 3555, 2483, 1751, 2403, 2314, 3549, 2293, 1576, 3558,
	1576, 2369, 2092, 2090, 1927, 3686, 3644, 3548, 1687, 1606,
	2662, 3594, 4852, 2377, 4308, 2380, 2381, 2382, 3563, 3629,
	3565, 3632, 4292, 4003, 2059, 4002, 1024, 3628, 3708, 3562,
	3583, 4912, 4770, 3679, 4220, 3591, 3616, 3697, 2457, 1791,
	3572, 4390, 4385, 2456, 3148, 3604, 2987, 1412, 3610, 4319,
	1412, 4305, 1788, 3148, 1786, 4244, 3744, 2034, 3802, 3603,
	1763, 2050, 4243, 3609, 4092, 1761, 1733, 4083, 3617, 4021,
	3602, 4000, 3973, 1731, 3608, 3754, 3971, 1729, 1727, 1725,
	833, 3621, 3949, 3675, 1151, 836, 3670, 1719, 2962, 3636,
	1151, 1151, 1713, 1711, 1151, 1151, 1151, 3660, 1151, 3682,
	1039, 3118, 1271, 1632, 3737, 3615, 3667, 1151, 2062, 3689,
	3556, 3668, 3669, 3735, 3557, 3110, 1151, 3103, 4929, 3095,
	3081, 1151, 3685, 3080, 182, 182, 3061, 1412, 4909, 2886,
	2881, 2291, 3759, 2289, 3696, 1268, 1151, 3694, 2266, 2249,
	3673, 2212, 3706, 3707, 1412, 39, 3703, 2199, 2432, 2185,
	2125, 3758, 2399, 1267, 2062, 2062, 1151, 1151, 2272, 1151,
	1151, 1151, 2122, 2119, 2116, 2111, 2109, 2105, 2096, 3687,
	3605, 1822, 3245, 1029, 1028, 2258, 3767, 1151, 2147, 4663,
	2467, 1151, 1248, 2062, 2062, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151, 1151,
	1151, 1151, 1151, 1151, 1151, 2056, 1151, 3834, 1249, 3835,
	3784, 3794, 3795, 3755, 1151, 1151, 2062, 3738, 3218, 4376,
	1025, 1151, 2135, 2136, 3216, 3748, 2465, 3749, 3054, 3750,
	4820, 3764, 1151, 4406, 1092, 4326, 4235, 3149, 269, 4377,
	2166, 2917, 1587, 1273, 1273, 2917, 4607, 1151, 2942, 4600,
	4104, 2056, 2056, 2427, 2194, 2390, 2915, 1333, 3756, 2332,
	2939, 1044, 1046, 1048, 1784, 1785, 2422, 3762, 3246, 1083,
	2397, 1023, 2466, 1332, 2514, 3825, 3791, 3789, 4819, 1412,
	2056, 2056, 1823, 4284, 4321, 1829, 1830, 3908, 1710, 3606,
	3873, 2945, 1353, 1353, 4625, 1085, 3808, 3810, 3811, 3801,
	1829, 1830, 3895, 2514, 3840, 3817, 4496, 1353, 1353, 3824,
	827, 1353, 3733, 2056, 4198, 1832, 4176, 4932, 3527, 1250,
	2946, 2967, 3832, 2946, 1826, 3731, 3833, 4923, 1360, 1300,
	1151, 4017, 3812, 3837, 4887, 3724, 3869, 3079, 3839, 266,
	4080, 1084, 3865, 1026, 1333, 2134, 2316, 1371, 3940, 1151,
	1831, 3880, 3941, 4016, 3017, 3831, 3015, 3024, 1333, 3006,
	2950, 3004, 2948, 3874, 2059, 1831, 3866, 4779, 4761, 4968,
	1027, 182, 3005, 2949, 3885, 3886, 4732, 4726, 4662, 4591,
	4561, 1269, 1151, 1151, 1271, 1271, 698, 1024, 4473, 3882,
	3883, 4090, 3972, 4082, 3974, 4069, 3905, 1269, 3674, 3125,
	2778, 2050, 2131, 2043, 4495, 2990, 1534, 1533, 3454, 4997,
	2059, 2059, 4728, 3919, 3920, 1516, 4810, 1268, 1268, 3897,
	2021, 4811, 1030, 3342, 3343, 1829, 1830, 1269, 3932, 3933,
	1151, 3953, 3939, 4810, 3726, 1267, 1267, 4168, 4811, 2059,
	2059, 4942, 2909, 2910, 2907, 2908, 2658, 2050, 2050, 3725,
	1697, 3984, 1576, 3924, 2909, 1576, 1696, 2907, 2693, 4089,
	1353, 1766, 3935, 4592, 1765, 4536, 4323, 4318, 4317, 1159,
	833, 4020, 2059, 4164, 3923, 836, 2050, 2050, 3813, 3599,
	3596, 1921, 3898, 1920, 3220, 2062, 3989, 3991, 2471, 4985,
	4950, 3988, 3928, 4765, 4764, 4763, 4694, 4693, 4642, 4013,
	4564, 4526, 4466, 4460, 4364, 3734, 4344, 4282, 4226, 2050,
	4120, 4110, 4056, 3969, 3961, 273, 273, 273, 4019, 704,
	705, 4039, 720, 704, 720, 731, 4005, 1576, 771, 3981,
	3976, 3678, 791, 1151, 1029, 1028, 3677, 797, 3521, 4036,
	4037, 1273, 1151, 2168, 273, 4106, 4062, 3472, 2962, 3205,
	3197, 3174, 1576, 1576, 1576, 3173, 3172, 3171, 3109, 1576,
	1576, 1576, 3082, 2940, 2877, 910, 2871, 4113, 2860, 2859,
	2848, 2587, 273, 4097, 2458, 2428, 2421, 2420, 4076, 2419,
	1576, 1025, 2056, 2418, 2417, 2330, 1412, 4041, 2304, 4032,
	4050, 2300, 2299, 2298, 4098, 3410, 4051, 2297, 2296, 2099,
	2098, 2097, 4101, 4117, 2095, 3507, 2033, 1783, 4055, 1782,
	4068, 3432, 1412, 4040, 1721, 1151, 1151, 4100, 4121, 1601,
	3131, 1151, 1151, 2062, 1600, 1599, 1151, 1151, 4029, 1151,
	1598, 1597, 1596, 1595, 1151, 4064, 1590, 3148, 1586, 1584,
	1583, 1527, 1526, 1525, 4086, 1151, 1403, 4081, 1402, 1401,
	1400, 1399, 1363, 1319, 4084, 1318, 4031, 1317, 1316, 1315,
	1314, 1151, 3732, 3727, 3728, 3729, 3730, 4030, 1313, 1311,
	4102, 1306, 4099, 1305, 1304, 4107, 1303, 1302, 903, 8,
	1231, 4131, 1271, 4149, 4112, 2137, 1907, 1050, 4118, 4108,
	1912, 2284, 4133, 1036, 3167, 4668, 4132, 4150, 4162, 4119,
	4261, 4260, 4259, 2454, 1026, 704, 704, 93, 1592, 865,
	87, 2256, 3968, 273, 1002, 1268, 4807, 4698, 1567, 1269,
	2056, 873, 1273, 4789, 4078, 4158, 3523, 4143, 3029, 1082,
	1273, 1027, 2402, 1267, 1412, 1412, 1722, 1412, 2404, 3431,
	2820, 2059, 4753, 4172, 1273, 3304, 4632, 4435, 2661, 1925,
	3733, 3385, 89, 1135, 1181, 1576, 1576, 4355, 4203, 4354,
	4245, 3955, 3647, 3731, 4351, 4350, 2047, 2049, 1412, 1099,
	3436, 1415, 4831, 3724, 2148, 1141, 2164, 2157, 2050, 2861,
	2737, 1158, 1155, 1030, 2051, 2053, 1157, 3577, 3578, 3579,
	1156, 4138, 2052, 1945, 1154, 2046, 4088, 3129, 1273, 3704,
	1273, 1642, 1640, 1004, 4221, 4222, 2152, 2581, 4188, 2645,
	3293, 1918, 1115, 1137, 2642, 1294, 4224, 1126, 1114, 4206,
	4208, 3411, 3390, 1353, 4268, 3691, 4268, 3904, 2493, 4230,
	883, 4272, 4233, 1412, 3339, 1353, 2648, 1285, 1353, 2761,
	2753, 2749, 3482, 4271, 3119, 1799, 4449, 1896, 4287, 4288,
	4202, 3130, 1795, 4199, 4195, 1412, 4200, 4201, 4205, 1397,
	1119, 4204, 182, 1271, 4215, 2498, 4236, 4237, 2579, 4212,
	1909, 1271, 3726, 3271, 2503, 3698, 3434, 2854, 4286, 2059,
	4813, 4219, 3821, 4242, 3203, 1271, 2308, 3725, 4232, 1247,
	1246, 1292, 4285, 1576, 1576, 1245, 1268, 4795, 4240, 4792,
	2246, 4358, 3642, 3643, 1268, 2140, 2901, 2591, 1358, 3661,
	1131, 1521, 2446, 3396, 1267, 4067, 2050, 1603, 1268, 796,
	4503, 1353, 1267, 1143, 1881, 3050, 3049, 4657, 1382, 1380,
	1379, 1378, 4959, 1412, 3964, 4345, 1267, 3963, 1576, 1271,
	4316, 1271, 4322, 3734, 4324, 3962, 240, 4325, 3239, 1820,
	4306, 1812, 4342, 237, 239, 238, 4365, 3909, 3440, 4885,
	3986, 3633, 23, 22, 4301, 21, 4382, 1576, 1576, 1576,
	1576, 1576, 1268, 116, 1268, 4304, 2517, 42, 20, 3722,
	4348, 155, 1412, 133, 4393, 4379, 152, 151, 125, 1549,
	1267, 1556, 1267, 1562, 1151, 1151, 1151, 1342, 150, 4334,
	4333, 1269, 1269, 149, 4335, 4394, 4343, 148, 147, 154,
	146, 2755, 1412, 4341, 4353, 145, 4349, 1151, 4388, 4291,
	1151, 1151, 4361, 140, 4370, 144, 143, 4397, 142, 4290,
	1151, 4300, 141, 2062, 4303, 4402, 139, 137, 1151, 1151,
	138, 132, 4299, 136, 135, 4302, 134, 1505, 4395, 4360,
	1522, 1342, 4381, 131, 130, 1412, 129, 1576, 128, 127,
	126, 124, 1661, 4427, 1666, 156, 123, 122, 121, 2659,
	4409, 4408, 1353, 120, 119, 118, 117, 1679, 4415, 1684,
	4411, 784, 785, 4422, 61, 60, 115, 113, 114, 1412,
	19, 4416, 40, 14, 4432, 65, 66, 1151, 18, 13,
	3732, 3727, 3728, 3729, 3730, 35, 92, 105, 104, 4438,
	1151, 103, 36, 101, 100, 34, 17, 4378, 16, 1151,
	1342, 1342, 15, 98, 2062, 97, 96, 33, 31, 11,
	2056, 9, 37, 1151, 2006, 4444, 1151, 12, 5, 187,
	4455, 4456, 186, 189, 1742, 185, 188, 91, 184, 4476,
	183, 4477, 90, 29, 10, 1151, 179, 4506, 4583, 4517,
	4518, 4074, 1412, 82, 181, 2830, 180, 178, 177, 1353,
	176, 83, 80, 175, 86, 174, 1287, 4475, 81, 1576,
	1576, 1576, 85, 4485, 84, 27, 6, 4478, 2183, 64,
	7, 4417, 3741, 4468, 4537, 108, 4539, 109, 4540, 38,
	1273, 78, 77, 76, 75, 26, 63, 25, 173, 220,
	1308, 219, 4553, 218, 217, 216, 215, 214, 213, 4541,
	208, 2056, 273, 207, 273, 273, 4268, 1337, 273, 1347,
	4525, 1412, 4582, 4574, 1576, 4567, 4563, 212, 210, 4527,
	1361, 209, 4523, 4571, 4515, 211, 206, 230, 791, 229,
	223, 791, 222, 228, 227, 4528, 226, 225, 224, 221,
	4538, 4590, 234, 205, 204, 203, 1151, 1151, 201, 4556,
	4606, 197, 4555, 196, 200, 273, 202, 273, 273, 1337,
	4601, 273, 273, 1151, 2062, 4565, 1347, 199, 4586, 2059,
	3644, 198, 4558, 4559, 4610, 195, 4612, 4581, 4545, 1269,
	273, 4602, 1545, 233, 232, 1353, 4560, 4604, 1353, 231,
	1353, 1353, 2912, 72, 171, 172, 4598, 71, 1565, 4603,
	170, 169, 168, 4609, 167, 1580, 2050, 166, 1151, 4397,
	1151, 165, 1151, 4608, 164, 4621, 4622, 70, 24, 2,
	1, 1271, 1273, 0, 1605, 0, 4620, 1347, 0, 0,
	0, 273, 273, 0, 1337, 1151, 0, 1273, 4529, 0,
	4652, 0, 0, 0, 4624, 4544, 0, 3612, 4268, 0,
	4009, 4010, 4011, 0, 1268, 791, 4543, 273, 273, 0,
	2059, 2056, 0, 4268, 0, 0, 4630, 0, 0, 1668,
	0, 0, 1267, 0, 0, 3637, 4651, 0, 0, 1675,
	4680, 4650, 0, 0, 910, 0, 3665, 0, 2011, 4679,
	0, 0, 0, 1273, 1273, 4690, 4673, 2050, 0, 4672,
	1151, 1151, 4647, 0, 4701, 0, 4641, 0, 0, 4643,
	1151, 4644, 4645, 0, 0, 1273, 0, 0, 1273, 4268,
	4268, 0, 1576, 0, 0, 0, 2585, 0, 4689, 0,
	0, 0, 1576, 4077, 0, 0, 4715, 4716, 0, 0,
	3714, 4268, 1907, 0, 4268, 4691, 1151, 1151, 0, 4696,
	0, 0, 3736, 0, 0, 0, 1151, 0, 4735, 4713,
	1269, 4737, 273, 1271, 0, 0, 0, 4749, 1269, 4750,
	4727, 4730, 4722, 4729, 4734, 0, 0, 0, 1271, 0,
	4586, 4743, 1269, 0, 0, 0, 273, 0, 0, 4742,
	0, 4747, 4745, 4748, 4723, 4724, 1268, 2760, 0, 4746,
	0, 1522, 4758, 0, 1151, 1151, 4766, 0, 0, 1151,
	0, 1268, 0, 1353, 1267, 4757, 1353, 4762, 0, 3229,
	2059, 4767, 0, 0, 0, 4794, 4797, 4769, 0, 1267,
	0, 0, 0, 0, 1271, 1271, 1269, 4812, 1269, 0,
	0, 4786, 0, 4816, 4777, 4778, 4785, 0, 4809, 0,
	1522, 0, 0, 0, 0, 0, 1271, 2050, 0, 1271,
	0, 0, 0, 0, 0, 4803, 0, 1268, 1268, 0,
	0, 4836, 0, 4798, 0, 1151, 1151, 1151, 4802, 0,
	0, 0, 0, 0, 0, 1267, 1267, 0, 0, 1268,
	0, 0, 1268, 0, 0, 0, 0, 4821, 0, 4799,
	2755, 2755, 4827, 4815, 0, 0, 4835, 1267, 0, 4834,
	1267, 1151, 0, 0, 0, 0, 4866, 0, 0, 4850,
	4871, 0, 4849, 0, 0, 0, 4847, 4848, 0, 0,
	0, 0, 0, 0, 4804, 4867, 0, 4805, 0, 0,
	0, 4894, 0, 2183, 0, 0, 4893, 0, 4869, 0,
	0, 0, 0, 0, 4892, 4900, 0, 4881, 0, 4883,
	0, 0, 0, 0, 1151, 0, 4902, 4884, 0, 4882,
	0, 4211, 1353, 0, 4899, 0, 2174, 4898, 4913, 0,
	0, 2175, 0, 0, 0, 0, 0, 704, 4908, 4907,
	0, 4563, 0, 4930, 0, 4919, 4920, 4926, 0, 4906,
	0, 4924, 0, 0, 0, 0, 4910, 0, 273, 0,
	273, 4922, 0, 0, 273, 4944, 0, 4794, 0, 4946,
	4797, 4936, 1273, 4934, 1273, 4955, 4933, 1545, 1337, 2026,
	273, 4945, 273, 2032, 4943, 4952, 4941, 0, 4953, 273,
	4951, 720, 0, 0, 0, 0, 273, 4961, 4268, 0,
	4268, 0, 0, 0, 0, 0, 0, 4960, 0, 0,
	1353, 4975, 2100, 0, 4977, 4954, 0, 4956, 4983, 4982,
	0, 0, 0, 4984, 273, 0, 4987, 4310, 4311, 0,
	4989, 273, 2755, 2755, 2755, 2755, 0, 4986, 0, 1151,
	1151, 0, 4815, 4921, 0, 2176, 0, 1151, 0, 1151,
	1151, 4991, 0, 4995, 0, 0, 0, 0, 5008, 5007,
	0, 5001, 5010, 2180, 791, 0, 5012, 5011, 5005, 5009,
	5015, 5014, 0, 0, 0, 0, 0, 0, 5013, 0,
	0, 2320, 0, 0, 5004, 5019, 5022, 5020, 5026, 0,
	5023, 0, 5024, 5018, 5029, 0, 0, 5030, 0, 5021,
	0, 0, 1151, 0, 5032, 0, 0, 5033, 5026, 5035,
	5037, 0, 0, 1271, 0, 1271, 0, 0, 5002, 5003,
	0, 2424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4980, 0, 0, 0, 0, 0, 0, 2177, 2182,
	0, 0, 0, 3131, 0, 4262, 1268, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 4026, 0, 3397, 4027,
	0, 0, 0, 0, 1267, 0, 1267, 0, 0, 0,
	0, 5034, 0, 0, 0, 0, 0, 0, 0, 4255,
	0, 3268, 3269, 4248, 0, 0, 0, 0, 1269, 0,
	0, 3426, 0, 0, 0, 0, 0, 0, 0, 0,
	4246, 0, 0, 0, 0, 0, 3439, 0, 0, 4250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 4458, 0, 4459,
	0, 0, 3460, 0, 4256, 273, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 2447, 0, 1829,
	1830, 0, 0, 0, 0, 0, 4114, 4115, 4116, 0,
	0, 0, 0, 2364, 4122, 4123, 2172, 0, 0, 0,
	2184, 0, 1860, 0, 0, 2760, 0, 0, 4249, 1832,
	0, 0, 0, 0, 0, 0, 0, 3045, 0, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 1885, 273, 0, 0, 0,
	0, 0, 273, 0, 1831, 0, 0, 0, 273, 0,
	3037, 3035, 0, 0, 2170, 0, 0, 3039, 3041, 3031,
	1269, 0, 4532, 4533, 273, 0, 273, 0, 0, 0,
	704, 0, 273, 0, 0, 1269, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 2760, 2760, 910, 0,
	0, 0, 0, 3366, 3367, 3368, 3369, 2171, 0, 0,
	3051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 1337,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 1269, 0, 791, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 2401,
	0, 1837, 0, 1269, 273, 273, 1269, 273, 0, 273,
	0, 273, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 4251, 0, 0, 0, 0, 4252, 3439, 0, 0,
	0, 0, 0, 2179, 0, 0, 4257, 0, 2438, 4217,
	4218, 2439, 0, 2440, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 273, 273, 273, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 4254, 0,
	0, 0, 0, 0, 771, 0, 1342, 0, 791, 1866,
	1860, 3033, 0, 0, 0, 4258, 0, 1832, 0, 0,
	0, 0, 3047, 0, 275, 0, 1879, 0, 1852, 0,
	2755, 2755, 0, 0, 0, 0, 0, 0, 2760, 2760,
	2760, 2760, 0, 1885, 3046, 3038, 3036, 3040, 3042, 3032,
	3034, 3048, 1831, 0, 0, 1342, 0, 0, 0, 0,
	0, 3044, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1512, 0, 0, 1410, 0, 0, 1342, 1342, 0,
	0, 0, 0, 0, 3052, 0, 0, 2364, 0, 0,
	0, 2593, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	0, 2755, 0, 0, 0, 4253, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 3798, 3073, 0, 0, 3076, 0, 3078, 0, 0,
	0, 4410, 704, 4412, 4413, 4414, 0, 0, 3814, 0,
	0, 1505, 1853, 0, 4263, 4264, 0, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 1870, 0,
	0, 1880, 0, 273, 0, 704, 0, 0, 1859, 1861,
	0, 0, 0, 3122, 0, 0, 3122, 273, 1522, 1113,
	0, 0, 0, 0, 1876, 0, 1877, 0, 0, 0,
	1269, 0, 1269, 1846, 1847, 0, 0, 273, 1347, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4461, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 3053, 0, 0, 0, 0, 0,
	0, 0, 0, 3043, 0, 0, 273, 1347, 0, 0,
	720, 0, 720, 0, 0, 0, 2876, 0, 3194, 0,
	0, 0, 273, 0, 0, 273, 0, 0, 0, 273,
	0, 273, 1878, 3907, 0, 0, 1337, 0, 273, 273,
	0, 1347, 1347, 2892, 0, 1829, 1830, 0, 273, 0,
	1867, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 3777, 3778, 0, 0, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 2929, 0, 1342, 0, 0, 0,
	0, 1885, 0, 4557, 0, 273, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 1858, 0, 273,
	1851, 0, 0, 0, 0, 0, 3342, 3343, 0, 3360,
	3361, 3362, 273, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 791, 0, 0, 0, 0, 0, 1522,
	0, 1522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 273,
	0, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849,
	3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859,
	3860, 0, 3864, 0, 0, 0, 0, 0, 1884, 0,
	0, 3357, 273, 3071, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1545,
	0, 0, 273, 0, 273, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3114, 0, 0, 0, 0, 2760, 2760, 0, 0,
	0, 2929, 0, 704, 0, 0, 1859, 1861, 0, 1869,
	0, 0, 3143, 910, 2929, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 273, 0, 0, 3348, 3317,
	0, 0, 0, 3318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 1337, 273, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 1347, 273, 0, 0,
	1337, 0, 1337, 0, 1337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2760, 2760, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760, 2760,
	2760, 2760, 2760, 2760, 2760, 2760, 0, 2760, 0, 0,
	0, 0, 0, 0, 73, 0, 2364, 0, 0, 273,
	273, 273, 273, 1337, 0, 0, 1337, 0, 273, 0,
	0, 74, 0, 273, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 3358, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 904, 0,
	0, 4210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 0, 0, 94,
	107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1113, 1113, 1113, 1884, 0, 0, 0,
	0, 0, 0, 0, 3536, 3537, 0, 3538, 3539, 3540,
	0, 1496, 0, 0, 0, 1496, 0, 0, 1545, 3359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 1522, 1522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3584, 3585, 0, 3586, 3587, 3588, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2851, 0, 3354, 3355,
	3356, 0, 273, 0, 0, 3353, 3351, 3352, 3344, 3345,
	3346, 3347, 3349, 3350, 0, 0, 99, 0, 273, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 704, 0,
	0, 704, 0, 0, 704, 704, 1410, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	0, 0, 2755, 0, 0, 0, 0, 0, 73, 0,
	273, 0, 0, 0, 0, 0, 4433, 0, 0, 0,
	0, 0, 190, 102, 0, 74, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 1342,
	0, 273, 241, 0, 0, 273, 273, 0, 0, 4433,
	905, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 2929, 2929, 273, 0, 2026, 0,
	0, 0, 0, 2517, 2929, 0, 2032, 0, 0, 0,
	243, 0, 0, 0, 0, 2929, 2032, 0, 2929, 2032,
	0, 0, 2032, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 904, 0, 0, 157, 273, 273, 2026, 0,
	273, 0, 0, 0, 0, 49, 0, 110, 0, 0,
	194, 0, 0, 94, 107, 0, 0, 0, 242, 1522,
	2026, 0, 273, 0, 3568, 3568, 0, 0, 0, 1337,
	0, 235, 0, 0, 0, 0, 2517, 0, 0, 0,
	236, 0, 0, 0, 0, 3342, 3343, 0, 3360, 3361,
	3362, 0, 0, 0, 0, 2929, 0, 2929, 2755, 3600,
	2929, 2026, 1829, 1830, 2929, 2026, 0, 193, 791, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 1337, 0, 0, 0, 0, 0,
	0, 273, 0, 0, 0, 2755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 273,
	3357, 3638, 0, 0, 3640, 2929, 0, 1831, 273, 0,
	2755, 0, 273, 0, 0, 1347, 4441, 1851, 0, 0,
	1496, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	273, 0, 0, 0, 0, 3114, 0, 0, 1337, 0,
	273, 0, 0, 2929, 0, 704, 0, 0, 0, 0,
	0, 0, 2929, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 1865,
	3342, 3343, 0, 3360, 3361, 3362, 0, 0, 0, 0,
	0, 0, 4153, 4488, 0, 0, 0, 0, 0, 0,
	0, 0, 4154, 0, 0, 0, 0, 3348, 0, 0,
	99, 3747, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 3753, 0, 0, 1545, 0, 0, 1337, 273, 0,
	273, 0, 0, 0, 0, 1113, 1337, 0, 0, 0,
	0, 0, 0, 1496, 0, 3357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 102, 0, 0,
	106, 0, 3364, 1859, 1861, 0, 0, 273, 0, 1865,
	0, 0, 0, 0, 1865, 0, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 1865, 1846, 1847,
	0, 2760, 1865, 0, 905, 0, 0, 0, 0, 153,
	0, 815, 0, 0, 3358, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 3819, 0, 0, 1866, 1860,
	0, 0, 0, 0, 243, 0, 1832, 0, 0, 0,
	0, 0, 3348, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 2760, 157,
	0, 0, 1885, 1865, 0, 0, 0, 0, 0, 4629,
	4085, 1831, 0, 0, 194, 0, 0, 0, 0, 1882,
	0, 1851, 242, 0, 1342, 0, 0, 0, 0, 0,
	1848, 1496, 0, 0, 809, 235, 1882, 0, 0, 0,
	0, 821, 0, 0, 236, 0, 0, 3364, 0, 0,
	0, 0, 0, 0, 0, 814, 4656, 0, 0, 0,
	0, 0, 273, 273, 0, 0, 0, 0, 0, 0,
	0, 1651, 0, 0, 0, 0, 4134, 0, 0, 0,
	0, 4678, 0, 0, 0, 0, 0, 704, 704, 3358,
	0, 0, 1858, 0, 0, 0, 0, 0, 3359, 2320,
	0, 0, 0, 0, 0, 0, 813, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 1853, 0, 0, 1837, 0,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 273,
	0, 1829, 1830, 0, 0, 0, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 0, 0, 0, 0, 811, 0,
	0, 0, 0, 0, 1860, 0, 1865, 1870, 0, 0,
	1880, 1832, 0, 0, 1882, 0, 0, 1859, 1861, 1865,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 2760, 1877, 0, 1885, 0, 0,
	0, 0, 1846, 1847, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 791, 0, 0, 820, 0, 0, 0,
	1868, 0, 0, 0, 0, 2759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 1865, 0,
	0, 2760, 0, 0, 1865, 0, 3568, 3354, 3355, 3356,
	0, 0, 0, 3359, 3353, 3351, 3352, 3344, 3345, 3346,
	3347, 3349, 3350, 0, 0, 273, 2760, 0, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 1878, 0, 0, 0, 0, 0, 0, 2026, 0,
	273, 0, 806, 0, 720, 720, 1347, 0, 0, 1867,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 273,
	1882, 0, 0, 1837, 0, 0, 0, 0, 1984, 0,
	273, 3114, 0, 810, 3114, 2032, 1496, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 273, 0, 0, 0, 0,
	273, 0, 4309, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 1859, 1861, 0, 0, 1858, 0, 0, 2929,
	273, 0, 0, 0, 0, 1342, 816, 0, 0, 3143,
	3143, 0, 808, 0, 0, 910, 2929, 0, 0, 1853,
	0, 0, 3354, 3355, 3356, 0, 0, 0, 0, 3353,
	3351, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 0, 0,
	0, 0, 0, 273, 0, 4363, 1871, 0, 0, 1496,
	1852, 3342, 3343, 0, 3360, 3361, 3362, 0, 4380, 805,
	0, 0, 0, 0, 0, 0, 0, 2320, 0, 0,
	0, 0, 0, 3786, 0, 0, 0, 1884, 0, 0,
	0, 4401, 0, 0, 0, 0, 812, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 3342,
	3343, 807, 3360, 3361, 3362, 0, 0, 0, 4173, 1496,
	0, 0, 0, 0, 0, 1882, 3357, 0, 0, 0,
	0, 3785, 0, 0, 818, 819, 0, 0, 0, 0,
	0, 0, 0, 1098, 0, 1496, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 2636, 0,
	0, 273, 2637, 0, 3357, 0, 0, 1545, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 3348, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 273, 1347, 0, 0,
	0, 0, 0, 0, 0, 2929, 2929, 0, 3568, 2929,
	0, 0, 0, 0, 0, 0, 0, 4270, 0, 4270,
	1545, 0, 1884, 0, 0, 0, 0, 0, 0, 0,
	0, 2929, 0, 2032, 0, 0, 0, 1545, 1545, 273,
	2026, 3348, 0, 0, 0, 0, 0, 0, 3364, 0,
	0, 0, 1496, 2026, 0, 273, 2026, 0, 273, 0,
	3568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 2929, 0, 2929, 273, 0, 0, 0, 0, 0,
	3358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 3364, 0, 0, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 2929,
	2929, 0, 0, 0, 0, 3114, 3114, 0, 0, 0,
	0, 0, 4367, 0, 0, 1496, 0, 0, 0, 0,
	0, 0, 1865, 273, 0, 0, 1865, 0, 3358, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 1882, 0, 0, 0, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 1865, 1865, 1865, 0, 0, 0, 0, 0,
	1865, 0, 1865, 1865, 1865, 1865, 0, 0, 0, 0,
	0, 0, 0, 1882, 2759, 2759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1829, 1830, 3359, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 4686, 4687, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 4700, 1885, 0,
	0, 0, 3359, 2929, 2032, 0, 2032, 1831, 0, 4480,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 0,
	1865, 0, 0, 1865, 0, 0, 1865, 4733, 4504, 1865,
	4504, 0, 0, 0, 0, 1865, 1865, 1865, 1865, 1865,
	1865, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3568, 0, 1337, 0, 0,
	0, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3354, 3355, 3356, 0, 2026, 0, 273,
	3353, 3351, 3352, 3344, 3345, 3346, 3347, 3349, 3350, 0,
	0, 1865, 0, 0, 3363, 0, 2759, 2759, 2759, 2759,
	0, 0, 0, 1865, 1837, 1865, 4480, 0, 0, 4270,
	1865, 0, 1545, 0, 0, 0, 0, 0, 0, 2929,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3354, 3355, 3356, 0, 0, 0, 4595, 3353, 3351,
	3352, 3344, 3345, 3346, 3347, 3349, 3350, 0, 0, 1545,
	0, 0, 4822, 1859, 1861, 0, 0, 0, 4824, 0,
	1356, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 273, 0, 0, 0, 0, 0,
	0, 1183, 0, 0, 0, 0, 0, 1098, 1098, 1098,
	1829, 1830, 0, 0, 0, 0, 0, 3819, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 3568, 4649, 0, 0, 0, 0, 0, 0,
	0, 4480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1547, 0, 1553, 0, 1559, 1885, 0, 0, 0,
	0, 4270, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 4270, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 1664, 0, 0, 0,
	1829, 1830, 4270, 4270, 0, 0, 0, 0, 4367, 1677,
	3780, 1682, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1860, 4270, 0, 273, 4270, 0, 0,
	1832, 0, 1854, 1855, 1856, 1857, 0, 2032, 1496, 0,
	0, 0, 1837, 0, 0, 1853, 1545, 0, 1545, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 1496, 0, 0, 0, 1851, 1347, 0, 0, 1747,
	0, 0, 1753, 0, 1848, 0, 1496, 0, 4775, 0,
	0, 1859, 1861, 0, 1865, 1865, 73, 1865, 0, 0,
	0, 0, 0, 1884, 4504, 1274, 0, 273, 0, 0,
	0, 0, 1496, 74, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 1829, 1830, 0, 0, 0, 0, 79,
	0, 0, 2929, 0, 0, 0, 0, 0, 0, 0,
	3775, 0, 0, 0, 0, 0, 1860, 0, 0, 1852,
	0, 0, 1113, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 1113, 0, 273, 88,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1831, 0,
	3819, 0, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	904, 0, 0, 1906, 1545, 1865, 0, 0, 0, 1919,
	0, 1859, 1861, 0, 1882, 110, 0, 0, 0, 0,
	0, 94, 107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 1829, 1830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 1865, 1865, 0, 2759, 2759, 0, 1860, 1865, 1852,
	1858, 0, 4480, 0, 1832, 0, 0, 0, 3363, 3363,
	0, 95, 1865, 1865, 0, 1837, 0, 0, 0, 0,
	0, 0, 1865, 1853, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 0, 0, 1865, 0, 0, 1831,
	0, 2929, 0, 0, 1978, 1978, 1978, 1496, 1865, 1851,
	0, 4270, 0, 4270, 0, 0, 1545, 0, 1848, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 2759, 2759, 2759, 2759, 2759, 2759,
	2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759, 2759,
	2759, 2759, 2759, 2759, 0, 2759, 3363, 3363, 3363, 3363,
	0, 0, 0, 0, 3774, 0, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	1858, 3143, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 1865, 2929, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 3143, 0, 99, 0,
	0, 0, 1147, 0, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 1496, 0, 0, 1496, 0, 0, 0, 0, 1098,
	0, 0, 0, 0, 0, 1859, 1861, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 1884, 0, 0, 190, 102, 0, 0, 106, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 905, 1852, 0, 0, 0, 153, 0, 0,
	0, 1496, 0, 0, 0, 834, 1865, 2730, 2731, 2732,
	2733, 2726, 2727, 2728, 2729, 0, 1853, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 194, 0, 1884, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 2706, 2707,
	2708, 2709, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 2718, 2719, 2720, 2721, 2714, 2715, 2716, 2717, 2722,
	2723, 2724, 2725, 0, 1858, 0, 0, 0, 1274, 193,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1270, 1853, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2702,
	2703, 2704, 2705, 2710, 2711, 2712, 2713, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 1865, 1865, 0, 0, 1865, 3363, 3363, 1865,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 2425, 0, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 1274, 0, 0, 0, 1865, 1865, 1865, 1865,
	1865, 0, 0, 0, 0, 0, 1865, 0, 1865, 0,
	2452, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363,
	3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363, 3363,
	3363, 0, 0, 0, 3363, 0, 0, 1865, 1865, 0,
	0, 0, 0, 0, 0, 0, 2492, 0, 2496, 1865,
	0, 0, 0, 0, 0, 2510, 0, 0, 1865, 0,
	0, 0, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 0, 2560,
	0, 2562, 2563, 2564, 2565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 2589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1906,
	0, 0, 0, 2640, 0, 0, 0, 0, 0, 0,
	1496, 0, 0, 0, 0, 1865, 0, 0, 0, 2670,
	2673, 2676, 2679, 0, 0, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2751, 0, 2763, 2765, 2770, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 0, 1274, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 1496,
	0, 1496, 0, 0, 0, 0, 0, 2063, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1865, 0, 0, 0, 1865, 1865, 0, 0,
	1865, 1865, 1496, 0, 0, 1865, 0, 0, 0, 1865,
	0, 0, 0, 0, 1865, 272, 0, 272, 272, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 2759,
	0, 0, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 46, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 74, 0, 0, 158, 1496, 272, 0,
	272, 272, 0, 0, 272, 272, 0, 0, 0, 79,
	1274, 0, 0, 0, 0, 0, 0, 0, 0, 1496,
	67, 0, 0, 834, 0, 0, 2759, 48, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 47, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 50, 68, 0, 0,
	0, 0, 0, 0, 0, 51, 0, 0, 0, 0,
	57, 0, 0, 0, 0, 161, 0, 1496, 0, 0,
	272, 272, 0, 49, 0, 110, 0, 0, 0, 0,
	0, 94, 107, 0, 0, 0, 3074, 3075, 751, 3077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 734, 0,
	0, 0, 0, 735, 0, 0, 1496, 0, 0, 1274,
	1274, 0, 0, 52, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 1496, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 1865, 1865,
	1865, 0, 0, 0, 0, 272, 0, 0, 0, 1865,
	1865, 3363, 2759, 0, 738, 0, 0, 0, 1865, 1496,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 3195, 739, 3363, 2759,
	0, 0, 0, 1274, 0, 1274, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 740, 1865, 2759, 1274, 1274, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 1274, 0,
	1113, 0, 0, 0, 1865, 741, 0, 0, 742, 0,
	1274, 0, 1274, 1274, 1274, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 766, 1496, 0, 1886, 1887,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	756, 56, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 58, 190, 102, 0, 0, 106, 0,
	0, 0, 54, 0, 3251, 3252, 162, 0, 0, 0,
	3258, 0, 0, 0, 55, 1496, 0, 0, 0, 3363,
	0, 0, 0, 0, 241, 0, 0, 0, 753, 3272,
	3273, 0, 62, 0, 0, 2640, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 1865, 3363, 0, 0, 1865,
	0, 0, 159, 0, 0, 0, 0, 0, 0, 1829,
	1830, 2063, 2063, 1274, 0, 1873, 1874, 1875, 3363, 0,
	0, 2000, 243, 1270, 0, 0, 0, 272, 0, 0,
	3282, 0, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 272, 2000, 272, 3296, 157, 1879, 763,
	0, 744, 834, 0, 0, 0, 0, 0, 0, 834,
	0, 0, 194, 3308, 0, 1885, 0, 0, 0, 0,
	242, 1865, 0, 0, 1831, 0, 0, 0, 0, 0,
	764, 0, 745, 235, 1851, 0, 0, 272, 0, 0,
	0, 0, 236, 1848, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 3, 765, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 0, 761, 762, 759, 0,
	0, 0, 0, 0, 754, 0, 0, 747, 0, 0,
	0, 0, 0, 0, 1113, 1113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2770, 2770, 2770, 0, 1274,
	0, 1854, 1855, 1856, 1857, 0, 1274, 0, 0, 0,
	1978, 1837, 0, 0, 0, 1274, 1865, 0, 3401, 748,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 749,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 750, 0, 0, 0, 0, 758, 751,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 767, 0, 0, 0, 0, 0, 0, 734,
	0, 0, 0, 752, 735, 0, 0, 0, 0, 0,
	0, 1829, 1830, 0, 0, 1846, 1847, 0, 0, 1113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 736, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 737, 0, 1098, 0, 272, 0,
	0, 0, 834, 0, 0, 0, 0, 1885, 0, 0,
	1098, 0, 0, 0, 0, 738, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 1865, 757, 0, 0,
	1865, 0, 0, 3526, 0, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 739, 0,
	0, 0, 0, 1882, 0, 272, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 272, 0, 740, 2063, 0, 0, 0, 0, 0,
	0, 3257, 0, 0, 0, 0, 0, 272, 0, 272,
	0, 0, 0, 0, 0, 272, 741, 0, 0, 742,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 1858,
	0, 0, 0, 1837, 0, 0, 766, 0, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	272, 756, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 1859, 1861, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 272, 0,
	272, 0, 272, 0, 272, 0, 272, 1846, 1847, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	1852, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 272, 1274, 0, 1274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 744, 0, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 764, 0, 745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2510, 0, 0, 0, 0, 0, 3772, 3773,
	0, 0, 3776, 0, 765, 0, 3779, 0, 0, 0,
	0, 1858, 746, 0, 0, 3783, 0, 761, 762, 759,
	0, 0, 0, 0, 3790, 754, 0, 0, 747, 3401,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3803, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3826, 3827, 0, 3828, 3829, 3830,
	748, 0, 755, 0, 0, 0, 0, 0, 0, 0,
	749, 0, 0, 0, 0, 3836, 0, 0, 0, 3838,
	0, 0, 1884, 0, 750, 0, 0, 0, 0, 758,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 1270, 0, 0, 0,
	0, 0, 3867, 3868, 752, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 3888, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 272, 0,
	0, 0, 272, 0, 272, 0, 0, 0, 0, 0,
	0, 272, 272, 0, 0, 0, 0, 0, 3944, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3956, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3985, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 1274, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 274, 274, 0,
	1274, 0, 0, 0, 0, 0, 1829, 1830, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 1860,
	1274, 0, 272, 1274, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 2063, 0, 0, 0, 1274,
	0, 0, 1885, 0, 0, 834, 0, 0, 0, 1829,
	1830, 1831, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 1866, 1860, 0, 0, 272, 0, 834, 0, 1832,
	0, 0, 0, 0, 272, 0, 0, 0, 1879, 0,
	0, 1978, 0, 0, 0, 0, 0, 0, 0, 0,
	4109, 0, 0, 0, 0, 1885, 0, 0, 0, 2063,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 3250, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 272, 1837, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 4151, 4152, 0, 0, 0, 0, 4156,
	4157, 0, 0, 0, 4160, 4161, 0, 0, 0, 0,
	0, 0, 4165, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4169, 0, 0, 0, 1859, 1861, 0,
	1263, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 4174,
	0, 1837, 272, 272, 272, 272, 0, 0, 0, 0,
	0, 272, 1846, 1847, 1274, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	1274, 0, 0, 0, 1274, 0, 268, 268, 700, 0,
	1870, 0, 1274, 1880, 0, 1852, 0, 272, 0, 0,
	1859, 1861, 0, 1274, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1274, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	1882, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 1274, 1867, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 854, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 856, 0, 0, 0, 0, 857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 0,
	0, 0, 0, 0, 0, 0, 858, 1884, 875, 0,
	0, 0, 1853, 0, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2063, 2063, 0, 0, 0,
	0, 0, 0, 859, 0, 0, 0, 0, 860, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2063, 2063, 0, 0, 0, 0,
	884, 0, 0, 0, 0, 0, 0, 861, 0, 0,
	1884, 0, 0, 0, 0, 1270, 0, 0, 0, 0,
	0, 882, 4428, 4429, 4430, 0, 0, 2063, 0, 0,
	0, 1270, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 2510, 855, 0, 4439, 4440,
	0, 0, 0, 0, 1274, 1274, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 4448, 4451, 0, 862,
	0, 0, 863, 272, 0, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 886, 0, 0, 0, 0, 766,
	1274, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 272, 4179, 0, 0, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4505, 0,
	0, 0, 0, 0, 0, 0, 0, 4513, 0, 272,
	0, 0, 0, 274, 0, 274, 274, 0, 0, 274,
	0, 4521, 885, 0, 1098, 0, 0, 0, 0, 0,
	0, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4534, 0, 0, 0, 0, 0, 272,
	272, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	2000, 0, 0, 0, 0, 0, 274, 1416, 274, 274,
	0, 1416, 274, 274, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 866, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 1274, 0, 0, 0,
	0, 0, 0, 278, 0, 0, 867, 0, 0, 0,
	0, 0, 274, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 2063, 0, 0, 0,
	1416, 0, 0, 0, 0, 876, 0, 1416, 274, 274,
	0, 0, 834, 0, 0, 0, 0, 765, 0, 0,
	0, 272, 0, 1416, 0, 272, 0, 0, 0, 0,
	853, 0, 877, 0, 0, 0, 0, 0, 1274, 0,
	0, 868, 0, 272, 0, 0, 0, 0, 826, 0,
	0, 0, 1274, 1270, 0, 0, 4655, 0, 0, 0,
	4659, 0, 0, 1274, 1274, 1274, 874, 0, 0, 0,
	1274, 1274, 1274, 0, 0, 0, 826, 0, 0, 0,
	0, 1416, 0, 869, 0, 0, 0, 870, 889, 0,
	888, 1274, 0, 871, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 872, 0, 0,
	0, 0, 881, 274, 0, 0, 0, 0, 890, 0,
	887, 0, 0, 1274, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 1323, 2063, 1323, 1323, 274, 0, 0,
	0, 272, 0, 272, 0, 0, 0, 0, 1098, 1098,
	0, 0, 0, 0, 0, 0, 0, 0, 4731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 1407, 0, 0, 0,
	0, 0, 1520, 0, 0, 2510, 0, 0, 0, 0,
	0, 0, 0, 0, 4451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 1274, 0, 0, 0, 1274, 1274, 0, 1274, 0,
	0, 0, 0, 1098, 0, 1274, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1274, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 1860, 1657, 1658,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1274,
	0, 1274, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 4846, 4846, 4846, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1270, 1270, 0, 0, 1851,
	0, 0, 0, 0, 1274, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4870,
	0, 0, 0, 0, 0, 274, 1274, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 274, 274, 274, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 1774, 0, 0, 0, 274, 0, 0,
	0, 0, 834, 0, 1274, 1274, 0, 0, 0, 0,
	0, 0, 4846, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 1854, 1855, 1856, 1857,
	0, 0, 274, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 0, 0, 1274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 1274,
	1274, 1274, 1274, 0, 0, 1859, 1861, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 4846, 4996, 0,
	0, 0, 0, 1852, 2063, 5000, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 1274, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	1274, 0, 0, 272, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1270, 0, 2063, 274, 0, 1416, 1416,
	274, 0, 0, 0, 0, 2016, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1274, 1858, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1274, 1274, 1274, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 274, 0, 1323, 0, 274, 0, 0,
	0, 1274, 1520, 274, 0, 0, 0, 0, 0, 274,
	0, 0, 1136, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 274, 0, 0,
	0, 0, 1274, 274, 0, 1274, 0, 0, 0, 0,
	0, 0, 1416, 0, 1416, 1884, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1416, 0, 0, 0, 0,
	1413, 0, 0, 0, 1413, 0, 0, 1416, 274, 0,
	0, 274, 0, 0, 0, 2063, 0, 0, 0, 1416,
	0, 1416, 1416, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 1270, 0, 0, 112, 0, 0,
	0, 0, 1270, 0, 0, 274, 274, 1577, 274, 0,
	274, 0, 274, 0, 274, 0, 2000, 0, 0, 0,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1274, 272,
	0, 0, 0, 1577, 0, 0, 274, 274, 274, 274,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2000, 0, 2000, 0, 0, 0, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 1274, 1274, 0, 0, 272, 0,
	0, 272, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 0, 1274,
	0, 0, 0, 1274, 1577, 0, 0, 272, 0, 0,
	0, 0, 0, 1274, 0, 0, 1257, 0, 0, 0,
	0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 2306, 0, 0, 0, 2313, 0, 0,
	0, 0, 0, 0, 1860, 0, 0, 0, 0, 2326,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 2338, 272, 2338, 0, 0,
	0, 0, 0, 2345, 0, 1416, 272, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2313, 0,
	0, 2373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2393, 0, 0, 1416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2409, 0, 2411, 0,
	2413, 0, 2415, 0, 2416, 0, 0, 0, 274, 0,
	0, 1416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 274, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2443, 2444, 2445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1870, 0, 0, 1880, 0, 274, 0, 0,
	0, 272, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 274, 0, 0, 0,
	274, 0, 274, 0, 0, 1152, 0, 1846, 1847, 274,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	1852, 0, 0, 1274, 0, 1274, 0, 0, 0, 0,
	0, 0, 272, 826, 0, 0, 0, 0, 1416, 0,
	826, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 1416, 0, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2827, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 274, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 2000, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 2000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1416, 1884, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 274, 0, 0, 0,
	1416, 0, 0, 2878, 0, 112, 1323, 0, 0, 0,
	1323, 0, 1323, 0, 0, 274, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 2000, 2000, 0, 274, 2326,
	0, 1577, 1577, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 2000, 0, 272,
	2000, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	274, 274, 274, 274, 0, 0, 112, 0, 112, 274,
	112, 0, 0, 0, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	272, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 112, 112, 1577, 0, 1577, 0, 1577,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 112, 0, 0, 0, 0, 0, 1577, 1577, 0,
	0, 0, 0, 0, 112, 0, 112, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 1577, 0, 1577, 1577, 1577, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2313, 0, 0, 0, 0, 826, 0,
	0, 0, 2326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3176, 0, 3179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2000, 0, 2000, 0, 0, 1899,
	3211, 1520, 3213, 1520, 0, 0, 0, 0, 0, 3219,
	0, 0, 0, 0, 0, 0, 0, 1905, 0, 0,
	0, 1911, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1323, 0, 0, 0, 0,
	0, 0, 0, 3248, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1998, 274, 2001, 0, 112, 274, 274, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 1414, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 274, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 274, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 1578, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 0, 0, 0, 0, 1416, 0, 1416,
	0, 0, 0, 1416, 0, 0, 0, 0, 0, 0,
	274, 1416, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 1416, 274, 0, 0, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3449, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1416, 0,
	1416, 0, 1323, 0, 0, 0, 1520, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 0, 3495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 0, 274,
	1416, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 0, 1577, 3545, 3547, 0,
	0, 2326, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 1577, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 1093, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 1866, 1860, 0, 1416, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 3662,
	0, 0, 0, 3666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 1416,
	0, 0, 0, 0, 1073, 0, 0, 1073, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 3757,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 2578, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 1868, 0, 3770, 0,
	0, 0, 0, 1905, 0, 0, 0, 1905, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	1257, 0, 1416, 0, 0, 1416, 1882, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 2001, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 1578, 1578, 0, 0, 1413, 0, 0,
	0, 274, 1414, 0, 0, 0, 112, 0, 0, 0,
	0, 274, 1858, 0, 0, 0, 274, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 1416, 0, 0,
	1413, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 1416, 1416, 1416, 0, 0, 0, 0, 1416,
	1416, 1416, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	1416, 0, 0, 0, 274, 0, 1416, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1578, 0, 1578,
	0, 1578, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1578,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 1578, 1578, 1578, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 3788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 1416, 1416, 0, 1416, 0, 0,
	0, 2326, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 112, 0, 112, 1416, 1416, 0, 0, 0,
	2326, 0, 0, 0, 0, 0, 1577, 0, 1416, 0,
	0, 4063, 0, 0, 0, 0, 0, 274, 0, 0,
	1577, 4073, 1577, 0, 0, 0, 1413, 1414, 0, 0,
	0, 0, 0, 826, 1577, 0, 2326, 0, 0, 0,
	112, 4091, 0, 112, 0, 1577, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 0, 0, 274, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 1577,
	0, 0, 0, 0, 4136, 274, 0, 0, 0, 0,
	0, 1577, 0, 1577, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 1416, 1416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 1413, 274, 0, 0, 0, 0, 0,
	0, 0, 0, 1416, 274, 0, 0, 0, 1416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1416, 1416, 1416,
	1416, 1416, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 2578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 1416, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 1416,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 274,
	4289, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2326, 0, 0, 1885,
	0, 0, 0, 1414, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 1416,
	1416, 1416, 0, 826, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2326, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 4389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 1416, 0, 0, 1416, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1257, 0, 0, 274, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 1578, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 1578, 0, 1578, 0,
	0, 0, 0, 0, 0, 1577, 0, 1868, 1577, 0,
	0, 0, 0, 0, 0, 1578, 0, 0, 0, 0,
	0, 0, 1852, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4490,
	0, 0, 0, 274, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 112, 112, 0, 112, 112, 112, 1882, 0, 0,
	0, 0, 0, 0, 0, 1577, 1577, 1577, 0, 0,
	0, 0, 1577, 1577, 1577, 0, 0, 274, 0, 0,
	0, 0, 1416, 0, 0, 0, 0, 0, 0, 0,
	2326, 0, 1416, 1577, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 112, 112, 0,
	112, 112, 112, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 274, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 4619, 1520, 0, 0, 1879, 0,
	0, 0, 0, 0, 1884, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 274,
	0, 0, 0, 1257, 1851, 0, 1093, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	112, 112, 0, 0, 0, 0, 0, 1413, 1413, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 1577, 1577,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 1413, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 3320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4736, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 1413, 0,
	1859, 1861, 0, 0, 0, 0, 0, 0, 0, 1414,
	0, 0, 0, 0, 0, 0, 1876, 0, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1577, 1577, 0, 0,
	0, 0, 1414, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4788, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 1577, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 1878, 0, 0, 0, 0, 0,
	1577, 1577, 1577, 1577, 1577, 1866, 1860, 112, 0, 0,
	0, 0, 1867, 1832, 0, 1413, 0, 0, 0, 4829,
	0, 0, 1879, 1882, 0, 1257, 1257, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 1413, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 1414, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 1578, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 1578, 0, 0, 0, 1414, 0,
	0, 0, 0, 0, 1870, 1413, 1578, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 1578, 0, 0,
	0, 0, 1577, 1577, 1577, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 1868, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 1578, 1852, 0, 1413, 3319, 0, 1577, 0, 0,
	0, 0, 0, 1578, 0, 1578, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1414, 1257, 0, 1414, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 112, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 1858, 0, 0, 0, 0, 0, 0,
	1879, 0, 1414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 1885, 0, 1414,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 1871, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1884, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 1257, 0, 0, 0, 0, 0,
	0, 0, 1257, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 1870, 0, 0, 1880, 0, 0, 0, 3316,
	0, 0, 1859, 1861, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 1878, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 1867, 112, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 1578, 112, 1848,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 1578, 1578, 1578,
	0, 0, 0, 0, 1578, 1578, 1578, 0, 0, 0,
	0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 1884, 0, 0, 1578, 1870, 0, 0, 1880,
	0, 1414, 0, 0, 1866, 1860, 1859, 1861, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 1876, 0, 1877, 0, 0, 1414, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 1869, 1852, 0, 1848, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 3315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 1414,
	1414, 0, 1414, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2578, 0, 0, 0,
	1578, 1578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 1858, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 1868, 0, 1414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 1578, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1869, 1414, 0,
	0, 0, 0, 1578, 112, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 3314, 1578, 1578, 1578, 1578, 1578, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1414, 0, 1578, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 0, 0, 0, 1414, 2637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 1578, 1578, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 1578,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421,
	646, 1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 1426, 651, 301, 302, 303, 304, 305, 306, 1427,
	1428, 0, 307, 652, 653, 654, 1429, 308, 309, 655,
	1430, 1497, 1431, 310, 311, 312, 313, 314, 315, 316,
	0, 1432, 318, 319, 320, 317, 321, 1433, 322, 0,
	323, 324, 325, 326, 327, 328, 1434, 329, 330, 331,
	1215, 332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440,
	1441, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 1442, 345, 341, 343, 1443, 346, 344, 347, 1444,
	348, 349, 350, 1445, 1446, 351, 352, 353, 1447, 354,
	355, 356, 1448, 357, 358, 359, 1449, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 1450, 279, 1451, 1578, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 1578, 377, 1452,
	378, 379, 380, 1453, 1454, 1216, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	1455, 393, 664, 1456, 665, 394, 1457, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 1218, 400, 401, 1458,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 1459, 1217, 410, 669, 670, 1460, 671, 1461,
	411, 412, 1219, 672, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 1462,
	423, 425, 424, 1463, 426, 673, 1222, 427, 428, 1223,
	1464, 429, 430, 431, 432, 433, 434, 437, 1465, 1466,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1467, 281,
	1226, 480, 481, 1468, 674, 482, 675, 484, 485, 1469,
	0, 486, 0, 1470, 1471, 488, 489, 490, 1472, 1473,
	491, 492, 676, 1227, 493, 1228, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 1474,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 1475, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 1476, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 1477, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 1478, 571, 572, 570, 573, 574, 575, 1479, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 1480, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 1481, 603, 604, 0, 600, 591, 1482,
	605, 606, 607, 608, 609, 610, 611, 612, 1483, 613,
	687, 688, 689, 690, 1484, 622, 1485, 614, 615, 616,
	691, 617, 692, 1486, 618, 619, 620, 621, 0, 623,
	624, 1487, 1488, 625, 626, 627, 629, 630, 628, 631,
	1489, 632, 1490, 0, 633, 634, 635, 693, 694, 695,
	1491, 637, 636, 638, 696, 639, 640, 1492, 1493, 1494,
	1495, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 2805, 0, 0, 0, 0, 0,
	0, 0, 2806, 282, 284, 283, 285, 286, 287, 288,
	1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646, 1422,
	1423, 1424, 1425, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 1426,
	651, 301, 302, 303, 304, 305, 306, 1427, 1428, 0,
	307, 652, 653, 654, 1429, 308, 309, 655, 1430, 1497,
	1431, 310, 311, 312, 313, 314, 315, 316, 0, 1432,
	318, 319, 320, 317, 321, 1433, 322, 0, 323, 324,
	325, 326, 327, 328, 1434, 329, 330, 331, 1215, 332,
	333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 1442,
	345, 341, 343, 1443, 346, 344, 347, 1444, 348, 349,
	350, 1445, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 359, 1449, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 1450, 279, 1451, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 1452, 378, 379,
	380, 1453, 1454, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 1455, 393,
	664, 1456, 665, 394, 1457, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1218, 400, 401, 1458, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	1459, 1217, 410, 669, 670, 1460, 671, 1461, 411, 412,
	1219, 672, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1462, 423, 425,
	424, 1463, 426, 673, 1222, 427, 428, 1223, 1464, 429,
	430, 431, 432, 433, 434, 437, 1465, 1466, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1467, 281, 1226, 480,
	481, 1468, 674, 482, 675, 484, 485, 1469, 0, 486,
	0, 1470, 1471, 488, 489, 490, 1472, 1473, 491, 492,
	676, 1227, 493, 1228, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 1474, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 1475, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	1476, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 1477, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 1478,
	571, 572, 570, 573, 574, 575, 1479, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 1480, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 1481, 603, 604, 0, 600, 591, 1482, 605, 606,
	607, 608, 609, 610, 611, 612, 1483, 613, 687, 688,
	689, 690, 1484, 622, 1485, 614, 615, 616, 691, 617,
	692, 1486, 618, 619, 620, 621, 0, 623, 624, 1487,
	1488, 625, 626, 627, 629, 630, 628, 631, 1489, 632,
	1490, 0, 633, 634, 635, 693, 694, 695, 1491, 637,
	636, 638, 696, 639, 640, 1492, 1493, 1494, 1495, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 3797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3799, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4209, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4207, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4434, 282, 284, 283, 285, 286, 287,
	288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646,
	1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1426, 651, 301, 302, 303, 304, 305, 306, 1427, 1428,
	0, 307, 652, 653, 654, 1429, 308, 309, 655, 1430,
	1497, 1431, 310, 311, 312, 313, 314, 315, 316, 0,
	1432, 318, 319, 320, 317, 321, 1433, 322, 0, 323,
	324, 325, 326, 327, 328, 1434, 329, 330, 331, 1215,
	332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1442, 345, 341, 343, 1443, 346, 344, 347, 1444, 348,
	349, 350, 1445, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 359, 1449, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1450, 279, 1451, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1452, 378,
	379, 380, 1453, 1454, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1455,
	393, 664, 1456, 665, 394, 1457, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 1458, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1459, 1217, 410, 669, 670, 1460, 671, 1461, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1462, 423,
	425, 424, 1463, 426, 673, 1222, 427, 428, 1223, 1464,
	429, 430, 431, 432, 433, 434, 437, 1465, 1466, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1467, 281, 1226,
	480, 481, 1468, 674, 482, 675, 484, 485, 1469, 0,
	486, 0, 1470, 1471, 488, 489, 490, 1472, 1473, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1474, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1475, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1476, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1477, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1478, 571, 572, 570, 573, 574, 575, 1479, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1480, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1481, 603, 604, 0, 600, 591, 1482, 605,
	606, 607, 608, 609, 610, 611, 612, 1483, 613, 687,
	688, 689, 690, 1484, 622, 1485, 614, 615, 616, 691,
	617, 692, 1486, 618, 619, 620, 621, 0, 623, 624,
	1487, 1488, 625, 626, 627, 629, 630, 628, 631, 1489,
	632, 1490, 0, 633, 634, 635, 693, 694, 695, 1491,
	637, 636, 638, 696, 639, 640, 1492, 1493, 1494, 1495,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4298, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4137, 282, 284, 283, 285, 286, 287,
	288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646,
	1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1426, 651, 301, 302, 303, 304, 305, 306, 1427, 1428,
	0, 307, 652, 653, 654, 1429, 308, 309, 655, 1430,
	1497, 1431, 310, 311, 312, 313, 314, 315, 316, 0,
	1432, 318, 319, 320, 317, 321, 1433, 322, 0, 323,
	324, 325, 326, 327, 328, 1434, 329, 330, 331, 1215,
	332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1442, 345, 341, 343, 1443, 346, 344, 347, 1444, 348,
	349, 350, 1445, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 359, 1449, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1450, 279, 1451, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1452, 378,
	379, 380, 1453, 1454, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1455,
	393, 664, 1456, 665, 394, 1457, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 1458, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1459, 1217, 410, 669, 670, 1460, 671, 1461, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1462, 423,
	425, 424, 1463, 426, 673, 1222, 427, 428, 1223, 1464,
	429, 430, 431, 432, 433, 434, 437, 1465, 1466, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1467, 281, 1226,
	480, 481, 1468, 674, 482, 675, 484, 485, 1469, 0,
	486, 0, 1470, 1471, 488, 489, 490, 1472, 1473, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1474, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1475, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1476, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1477, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1478, 571, 572, 570, 573, 574, 575, 1479, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1480, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1481, 603, 604, 0, 600, 591, 1482, 605,
	606, 607, 608, 609, 610, 611, 612, 1483, 613, 687,
	688, 689, 690, 1484, 622, 1485, 614, 615, 616, 691,
	617, 692, 1486, 618, 619, 620, 621, 0, 623, 624,
	1487, 1488, 625, 626, 627, 629, 630, 628, 631, 1489,
	632, 1490, 0, 633, 634, 635, 693, 694, 695, 1491,
	637, 636, 638, 696, 639, 640, 1492, 1493, 1494, 1495,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3815, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3635, 282, 284, 283, 285, 286, 287,
	288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646,
	1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1426, 651, 301, 302, 303, 304, 305, 306, 1427, 1428,
	0, 307, 652, 653, 654, 1429, 308, 309, 655, 1430,
	1497, 1431, 310, 311, 312, 313, 314, 315, 316, 0,
	1432, 318, 319, 320, 317, 321, 1433, 322, 0, 323,
	324, 325, 326, 327, 328, 1434, 329, 330, 331, 1215,
	332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1442, 345, 341, 343, 1443, 346, 344, 347, 1444, 348,
	349, 350, 1445, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 359, 1449, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1450, 279, 1451, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1452, 378,
	379, 380, 1453, 1454, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1455,
	393, 664, 1456, 665, 394, 1457, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 1458, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1459, 1217, 410, 669, 670, 1460, 671, 1461, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1462, 423,
	425, 424, 1463, 426, 673, 1222, 427, 428, 1223, 1464,
	429, 430, 431, 432, 433, 434, 437, 1465, 1466, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1467, 281, 1226,
	480, 481, 1468, 674, 482, 675, 484, 485, 1469, 0,
	486, 0, 1470, 1471, 488, 489, 490, 1472, 1473, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1474, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1475, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1476, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1477, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1478, 571, 572, 570, 573, 574, 575, 1479, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1480, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1481, 603, 604, 0, 600, 591, 1482, 605,
	606, 607, 608, 609, 610, 611, 612, 1483, 613, 687,
	688, 689, 690, 1484, 622, 1485, 614, 615, 616, 691,
	617, 692, 1486, 618, 619, 620, 621, 0, 623, 624,
	1487, 1488, 625, 626, 627, 629, 630, 628, 631, 1489,
	632, 1490, 0, 633, 634, 635, 693, 694, 695, 1491,
	637, 636, 638, 696, 639, 640, 1492, 1493, 1494, 1495,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2660, 282,
	284, 283, 285, 286, 287, 288, 1417, 289, 290, 1418,
	1419, 1420, 0, 1421, 646, 1422, 1423, 1424, 1425, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 1426, 651, 301, 302, 303,
	304, 305, 306, 1427, 1428, 0, 307, 652, 653, 654,
	1429, 308, 309, 655, 1430, 1497, 1431, 310, 311, 312,
	313, 314, 315, 316, 0, 1432, 318, 319, 320, 317,
	321, 1433, 322, 0, 323, 324, 325, 326, 327, 328,
	1434, 329, 330, 331, 1215, 332, 333, 334, 1435, 1436,
	1438, 1437, 1439, 1440, 1441, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 1442, 345, 341, 343, 1443,
	346, 344, 347, 1444, 348, 349, 350, 1445, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 359,
	1449, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 1450, 279,
	1451, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 1452, 378, 379, 380, 1453, 1454, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 1455, 393, 664, 1456, 665, 394,
	1457, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 1458, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 1459, 1217, 410, 669,
	670, 1460, 671, 1461, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 1462, 423, 425, 424, 1463, 426, 673,
	1222, 427, 428, 1223, 1464, 429, 430, 431, 432, 433,
	434, 437, 1465, 1466, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1467, 281, 1226, 480, 481, 1468, 674, 482,
	675, 484, 485, 1469, 0, 486, 0, 1470, 1471, 488,
	489, 490, 1472, 1473, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 1474, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 1475,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 1476, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	1477, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 1478, 571, 572, 570, 573,
	574, 575, 1479, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	1480, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 1481, 603, 604,
	0, 600, 591, 1482, 605, 606, 607, 608, 609, 610,
	611, 612, 1483, 613, 687, 688, 689, 690, 1484, 622,
	1485, 614, 615, 616, 691, 617, 692, 1486, 618, 619,
	620, 621, 0, 623, 624, 1487, 1488, 625, 626, 627,
	629, 630, 628, 631, 1489, 632, 1490, 0, 633, 634,
	635, 693, 694, 695, 1491, 637, 636, 638, 696, 639,
	640, 1492, 1493, 1494, 1495, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 1508, 0, 1411, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2285, 282, 284, 283, 285, 286, 287,
	288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646,
	1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1426, 651, 301, 302, 303, 304, 305, 306, 1427, 1428,
	0, 307, 652, 653, 654, 1429, 308, 309, 655, 1430,
	1497, 1431, 310, 311, 312, 313, 314, 315, 316, 0,
	1432, 318, 319, 320, 317, 321, 1433, 322, 0, 323,
	324, 325, 326, 327, 328, 1434, 329, 330, 331, 1215,
	332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1442, 345, 341, 343, 1443, 346, 344, 347, 1444, 348,
	349, 350, 1445, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 359, 1449, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 1514, 369, 370, 371, 372,
	659, 660, 373, 1450, 279, 1451, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1452, 378,
	379, 380, 1453, 1454, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1455,
	393, 664, 1456, 665, 394, 1457, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 1458, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1459, 1217, 410, 669, 670, 1460, 671, 1461, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1462, 423,
	425, 424, 1463, 426, 673, 1222, 427, 428, 1223, 1464,
	429, 430, 431, 432, 433, 434, 437, 1465, 1466, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1467, 281, 1226,
	480, 481, 1468, 674, 482, 675, 484, 485, 1469, 0,
	486, 0, 1470, 1471, 488, 489, 490, 1472, 1473, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1474, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1475, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1476, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 1515, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1477, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1478, 571, 572, 570, 573, 574, 575, 1479, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1480, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1481, 603, 604, 0, 600, 591, 1482, 605,
	606, 607, 608, 609, 610, 1513, 612, 1483, 613, 687,
	688, 689, 690, 1484, 622, 1485, 614, 615, 616, 691,
	617, 692, 1486, 618, 619, 620, 621, 0, 623, 624,
	1487, 1488, 625, 626, 627, 629, 630, 628, 631, 1489,
	632, 1490, 0, 633, 634, 635, 693, 694, 695, 1491,
	637, 636, 638, 696, 639, 640, 1492, 1493, 1494, 1495,
	641, 642, 697, 643, 644, 645, 1408, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421,
	646, 1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 1426, 651, 301, 302, 303, 304, 305, 306, 1427,
	1428, 0, 307, 652, 653, 654, 1429, 308, 309, 655,
	1430, 1497, 1431, 310, 311, 312, 313, 314, 315, 316,
	0, 1432, 318, 319, 320, 317, 321, 1433, 322, 0,
	323, 324, 325, 326, 327, 328, 1434, 329, 330, 331,
	1215, 332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440,
	1441, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 1442, 345, 341, 343, 1443, 346, 344, 347, 1444,
	348, 349, 350, 1445, 1446, 351, 352, 353, 1447, 354,
	355, 356, 1448, 357, 358, 359, 1449, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 1450, 279, 1451, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 1452,
	378, 379, 380, 1453, 1454, 1216, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	1455, 393, 664, 1456, 665, 394, 1457, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 1218, 400, 401, 1458,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 1459, 1217, 410, 669, 670, 1460, 671, 1461,
	411, 412, 1219, 672, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 1462,
	423, 425, 424, 1463, 426, 673, 1222, 427, 428, 1223,
	1464, 429, 430, 431, 432, 433, 434, 437, 1465, 1466,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1467, 281,
	1226, 480, 481, 1468, 674, 482, 675, 484, 485, 1469,
	0, 486, 0, 1470, 1471, 488, 489, 490, 1472, 1473,
	491, 492, 676, 1227, 493, 1228, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 1474,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 1475, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 1476, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 1477, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 1478, 571, 572, 570, 573, 574, 575, 1479, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 1480, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 1481, 603, 604, 0, 600, 591, 1482,
	605, 606, 607, 608, 609, 610, 611, 612, 1483, 613,
	687, 688, 689, 690, 1484, 622, 1485, 614, 615, 616,
	691, 617, 692, 1486, 618, 619, 620, 621, 0, 623,
	624, 1487, 1488, 625, 626, 627, 629, 630, 628, 631,
	1489, 632, 1490, 0, 633, 634, 635, 693, 694, 695,
	1491, 637, 636, 638, 696, 639, 640, 1492, 1493, 1494,
	1495, 641, 642, 697, 643, 644, 645, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 1417, 289, 290, 1418, 1419, 1420, 0, 1421, 646,
	1422, 1423, 1424, 1425, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	1426, 651, 301, 302, 303, 304, 305, 306, 1427, 1428,
	0, 307, 652, 653, 654, 1429, 308, 309, 655, 1430,
	1497, 1431, 310, 311, 312, 313, 314, 315, 316, 0,
	1432, 318, 319, 320, 317, 321, 1433, 322, 0, 323,
	324, 325, 326, 327, 328, 1434, 329, 330, 331, 1215,
	332, 333, 334, 1435, 1436, 1438, 1437, 1439, 1440, 1441,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	1442, 345, 341, 343, 1443, 346, 344, 347, 1444, 348,
	349, 350, 1445, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 359, 1449, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 1450, 279, 1451, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 1452, 378,
	379, 380, 1453, 1454, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 1455,
	393, 664, 1456, 665, 394, 1457, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 1458, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 1459, 1217, 410, 669, 670, 1460, 671, 1461, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1462, 423,
	425, 424, 1463, 426, 673, 1222, 427, 428, 1223, 1464,
	429, 430, 431, 432, 433, 434, 437, 1465, 1466, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1467, 281, 1226,
	480, 481, 1468, 674, 482, 675, 484, 485, 1469, 0,
	486, 0, 1470, 1471, 488, 489, 490, 1472, 1473, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 1474, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 1475, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 1476, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 1477, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	1478, 571, 572, 570, 573, 574, 575, 1479, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 1480, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 1481, 603, 604, 0, 600, 591, 1482, 605,
	606, 607, 608, 609, 610, 611, 612, 1483, 613, 687,
	688, 689, 690, 1484, 622, 1485, 614, 615, 616, 691,
	617, 692, 1486, 618, 619, 620, 621, 0, 623, 624,
	1487, 1488, 625, 626, 627, 629, 630, 628, 631, 1489,
	632, 1490, 0, 633, 634, 635, 693, 694, 695, 1491,
	637, 636, 638, 696, 639, 640, 1492, 1493, 1494, 1495,
	641, 642, 697, 643, 644, 645, 2635, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 2632, 289, 290, 0, 0, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 2633, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	2631, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 2634,
	0, 0, 0, 0, 0, 0, 1134, 2630, 0, 1094,
	1132, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1174, 1138, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 1187, 0,
	299, 1194, 300, 1193, 0, 1204, 301, 302, 303, 304,
	305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 1197,
	340, 342, 1191, 1190, 1110, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1182,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1116, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 1129, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1189, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 1202, 1203, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 1139, 394, 0,
	395, 396, 397, 398, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 1184, 1185,
	0, 1145, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 1117, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1188,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 1118,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 241, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 1186, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1233, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 1104,
	600, 591, 243, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1198, 1199, 1200, 1201, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 1128, 618, 619, 620,
	621, 0, 623, 624, 0, 1111, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	1649, 1195, 1232, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 235, 641, 642, 697, 643, 644, 645,
	1108, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	1101, 1102, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 1910,
	1908, 0, 0, 1132, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 241, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 243, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 1649, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 235, 641, 642, 697, 643, 644,
	645, 1108, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 1150, 1122, 1123, 1124, 1120, 1121, 1133,
	1910, 3270, 0, 0, 1132, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1174, 1138, 0, 0, 0,
	291, 292, 1214, 293, 294, 295, 296, 297, 298, 647,
	1187, 0, 299, 1194, 300, 1193, 0, 1204, 301, 302,
	303, 304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235,
	654, 0, 308, 309, 1180, 0, 1161, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1215, 332, 333, 334, 1164,
	1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338,
	339, 1197, 340, 342, 1191, 1190, 1110, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1182, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1116, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1205, 1206, 373, 1129,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1189,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1216, 381, 382, 383, 1202, 1203, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1212, 0, 1139,
	394, 0, 395, 396, 397, 398, 399, 1175, 1176, 1179,
	483, 1218, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1217, 410,
	1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220,
	413, 414, 415, 1221, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1213, 1222, 427, 428, 1223, 0, 429, 430, 431, 432,
	433, 434, 437, 1168, 1167, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1224, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1225, 479, 467, 1107, 281, 1226, 480, 481, 1130, 1178,
	482, 1192, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1227, 493,
	1228, 1207, 494, 495, 1117, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1208, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1188, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1229, 549, 550, 551, 552,
	553, 1118, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 241, 571, 572, 570,
	573, 574, 575, 1171, 576, 577, 559, 560, 578, 579,
	1230, 580, 581, 582, 583, 584, 585, 586, 1186, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1233, 594, 595, 596, 597, 1209, 601, 602, 0, 603,
	604, 1104, 600, 591, 243, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1198, 1199, 1200, 1201, 0,
	622, 0, 614, 615, 616, 1210, 617, 1211, 1128, 618,
	619, 620, 621, 0, 623, 624, 0, 1111, 625, 626,
	627, 629, 630, 628, 631, 1172, 632, 0, 0, 633,
	634, 635, 1649, 1195, 1232, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 235, 641, 642, 697, 643,
	644, 645, 1108, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 1101, 1102, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 1910, 1908, 0, 0, 1132, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 2766, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	2771, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 2767,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 2768, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 2680, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 0,
	0, 0, 0, 0, 0, 0, 1134, 2678, 0, 2677,
	1132, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1174, 1138, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 1187, 0,
	299, 1194, 300, 1193, 0, 1204, 301, 302, 303, 304,
	305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 1197,
	340, 342, 1191, 1190, 1110, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1182,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1116, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 1129, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1189, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 1202, 1203, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 1139, 394, 0,
	395, 396, 397, 398, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 1184, 1185,
	0, 1145, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 1117, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1188,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 1118,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 1186, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1233, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 1104,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1198, 1199, 1200, 1201, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 1128, 618, 619, 620,
	621, 0, 623, 624, 0, 1111, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	693, 1195, 1232, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	1101, 1102, 0, 0, 0, 0, 0, 0, 0, 1134,
	2675, 0, 2674, 1132, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 0, 0, 0, 0, 0,
	0, 0, 1134, 2672, 0, 2671, 1132, 1150, 1122, 1123,
	1124, 1120, 1121, 1133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 1174,
	1138, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 1187, 0, 299, 1194, 300, 1193,
	0, 1204, 301, 302, 303, 304, 305, 306, 1140, 1173,
	1105, 307, 1234, 1235, 654, 0, 308, 309, 1180, 0,
	1161, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169,
	335, 336, 337, 338, 339, 1197, 340, 342, 1191, 1190,
	1110, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1182, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1116, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1205, 1206, 373, 1129, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1189, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 1202, 1203,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1212, 0, 1139, 394, 0, 395, 396, 397, 398,
	399, 1175, 1176, 1179, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1217, 410, 1184, 1185, 0, 1145, 0, 411,
	412, 1219, 1177, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1213, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 1168, 1167, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1107, 281, 1226,
	480, 481, 1130, 1178, 482, 1192, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 1207, 494, 495, 1117, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1208,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1188, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 1118, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1171, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 1186, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1233, 594, 595, 596, 597, 1209,
	601, 602, 0, 603, 604, 1104, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1198,
	1199, 1200, 1201, 0, 622, 0, 614, 615, 616, 1210,
	617, 1211, 1128, 618, 619, 620, 621, 0, 623, 624,
	0, 1111, 625, 626, 627, 629, 630, 628, 631, 1172,
	632, 0, 0, 633, 634, 635, 693, 1195, 1232, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1103,
	0, 0, 0, 0, 0, 0, 1101, 1102, 0, 0,
	0, 0, 0, 0, 0, 1134, 2669, 0, 1749, 1132,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1175, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 623, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 1748,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 1097, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 1101,
	1102, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 1112,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 0, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 4800, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 1112, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	0, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 2512, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 2511,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1108, 0, 0, 0, 0, 1150, 1122, 1123, 1124,
	1120, 1121, 1133, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 1138,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 1187, 0, 299, 1194, 300, 1193, 0,
	1204, 301, 302, 303, 304, 305, 306, 1140, 1173, 1105,
	307, 1234, 1235, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 1197, 340, 342, 1191, 1190, 1110,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1182, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1116, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 1129, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1189, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 1202, 1203, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 1139, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 1184, 1185, 0, 1145, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1107, 281, 1226, 480,
	481, 1130, 1178, 482, 1192, 484, 485, 0, 0, 486,
	0, 1112, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 1117, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1188, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 1118, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 1186, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1233, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 1104, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1198, 1199,
	1200, 1201, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 1128, 618, 619, 620, 621, 0, 623, 624, 0,
	1111, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 693, 1195, 1232, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1108, 0, 0, 0, 0,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0,
	0, 0, 0, 0, 0, 1101, 1102, 282, 284, 283,
	285, 286, 287, 288, 1134, 289, 290, 0, 1132, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 4524, 328, 0, 329,
	330, 331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1175, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 1112, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 623, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 0, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 1101,
	1102, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 4103, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 1979, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 0, 1132, 1150, 1122, 1123,
	1124, 1120, 1121, 1133, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 1174,
	1138, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 1187, 0, 299, 1194, 300, 1193,
	0, 1204, 301, 302, 303, 304, 305, 306, 1140, 1173,
	1105, 307, 1234, 1235, 654, 0, 308, 309, 1180, 0,
	1161, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169,
	335, 336, 337, 338, 339, 1197, 340, 342, 1191, 1190,
	1110, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1182, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1116, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1205, 1206, 373, 1129, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1189, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 1202, 1203,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1212, 0, 1139, 394, 0, 395, 396, 397, 398,
	399, 1175, 1176, 1179, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1217, 410, 1184, 1185, 0, 1145, 0, 411,
	412, 1219, 1177, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1213, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 1168, 1167, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1107, 281, 1226,
	480, 481, 1130, 1178, 482, 1192, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 1207, 494, 495, 1117, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1208,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1188, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 1118, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1171, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 1186, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1233, 594, 595, 596, 597, 1209,
	601, 602, 0, 603, 604, 1104, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1198,
	1199, 1200, 1201, 0, 622, 0, 614, 615, 616, 1210,
	617, 1211, 1128, 618, 619, 620, 621, 0, 623, 624,
	0, 1111, 625, 626, 627, 629, 630, 628, 631, 1172,
	632, 0, 0, 633, 634, 635, 693, 1195, 1232, 3793,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1108, 0, 0, 0,
	0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103,
	0, 0, 0, 0, 0, 0, 1101, 1102, 282, 284,
	283, 285, 286, 287, 288, 1134, 289, 290, 0, 1132,
	0, 0, 0, 1174, 1138, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 1187, 0,
	299, 1194, 300, 1193, 0, 1204, 301, 302, 303, 304,
	305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 1197,
	340, 342, 1191, 1190, 1110, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1182,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1116, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 1129, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1189, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 1202, 1203, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 1139, 394, 0,
	395, 396, 397, 398, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 1184, 1185,
	0, 1145, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 1117, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1188,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 1118,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 1186, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1233, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 1104,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1198, 1199, 1200, 1201, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 1128, 618, 619, 620,
	621, 0, 623, 624, 0, 1111, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	693, 1195, 1232, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	1101, 1102, 1979, 0, 0, 0, 0, 0, 0, 1134,
	0, 0, 0, 1132, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	2771, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 0, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 0,
	0, 0, 0, 0, 0, 0, 1134, 1908, 0, 2776,
	1132, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1174, 1138, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 1187, 0,
	299, 1194, 300, 1193, 0, 1204, 301, 302, 303, 304,
	305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 1197,
	340, 342, 1191, 1190, 1110, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1182,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1116, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 1129, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1189, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 1202, 1203, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 1139, 394, 0,
	395, 396, 397, 398, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 1184, 1185,
	0, 1145, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 1117, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1188,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 1118,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 1186, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1233, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 1104,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1198, 1199, 1200, 1201, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 1128, 618, 619, 620,
	621, 0, 623, 624, 0, 1111, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	693, 1195, 1232, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	1108, 0, 0, 2774, 0, 1150, 1122, 1123, 1124, 1120,
	1121, 1133, 0, 1103, 0, 0, 0, 0, 0, 0,
	1101, 1102, 282, 284, 283, 285, 286, 287, 288, 1134,
	289, 290, 0, 1132, 0, 0, 0, 1174, 1138, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 1187, 0, 299, 1194, 300, 1193, 0, 1204,
	301, 302, 303, 304, 305, 306, 1140, 1173, 1105, 307,
	1234, 1235, 654, 0, 308, 309, 1180, 0, 1161, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336,
	337, 338, 339, 1197, 340, 342, 1191, 1190, 1110, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1182, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1116, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1205, 1206,
	373, 1129, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1189, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 1202, 1203, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1212,
	0, 1139, 394, 0, 395, 396, 397, 398, 399, 1175,
	1176, 1179, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1217, 410, 1184, 1185, 0, 1145, 0, 411, 412, 1219,
	1177, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1213, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 1168, 1167, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 1107, 281, 1226, 480, 481,
	1130, 1178, 482, 1192, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 1207, 494, 495, 1117, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1208, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1188, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 1118, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1171, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	1186, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1233, 594, 595, 596, 597, 1209, 601, 602,
	0, 603, 604, 1104, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1198, 1199, 1200,
	1201, 0, 622, 0, 614, 615, 616, 1210, 617, 1211,
	1128, 618, 619, 620, 621, 0, 623, 624, 0, 1111,
	625, 626, 627, 629, 630, 628, 631, 1172, 632, 0,
	0, 633, 634, 635, 693, 1195, 1232, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1108, 0, 0, 2762, 0, 1150,
	1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0,
	0, 0, 0, 0, 1101, 1102, 282, 284, 283, 285,
	286, 287, 288, 1134, 289, 290, 0, 1132, 0, 0,
	0, 1174, 1138, 0, 0, 0, 291, 292, 1214, 293,
	294, 295, 296, 297, 298, 647, 1187, 0, 299, 1194,
	300, 1193, 0, 1204, 301, 302, 303, 304, 305, 306,
	1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308, 309,
	1180, 0, 1161, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166,
	1165, 1169, 335, 336, 337, 338, 339, 1197, 340, 342,
	1191, 1190, 1110, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1182, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	1116, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1205, 1206, 373, 1129, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 1189, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1216, 381, 382, 383,
	1202, 1203, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1212, 0, 1139, 394, 0, 395, 396,
	397, 398, 399, 1175, 1176, 1179, 483, 1218, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1217, 410, 1184, 1185, 0, 1145,
	0, 411, 412, 1219, 1177, 1220, 413, 414, 415, 1221,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 1213, 1222, 427, 428,
	1223, 0, 429, 430, 431, 432, 433, 434, 437, 1168,
	1167, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1224, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1225, 479, 467, 1107,
	281, 1226, 480, 481, 1130, 1178, 482, 1192, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 1227, 493, 1228, 1207, 494, 495,
	1117, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1208, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 1188, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1229, 549, 550, 551, 552, 553, 1118, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1171,
	576, 577, 559, 560, 578, 579, 1230, 580, 581, 582,
	583, 584, 585, 586, 1186, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 1233, 594, 595, 596,
	597, 1209, 601, 602, 0, 603, 604, 1104, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 1198, 1199, 1200, 1201, 0, 622, 0, 614, 615,
	616, 1210, 617, 1211, 1128, 618, 619, 620, 621, 0,
	623, 624, 0, 1111, 625, 626, 627, 629, 630, 628,
	631, 1172, 632, 0, 0, 633, 634, 635, 693, 1195,
	1232, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 1108, 0,
	0, 2750, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133,
	0, 1103, 0, 0, 0, 0, 0, 0, 1101, 1102,
	282, 284, 283, 285, 286, 287, 288, 1134, 289, 290,
	0, 1132, 0, 0, 0, 1174, 1138, 0, 0, 0,
	291, 292, 1214, 293, 294, 295, 296, 297, 298, 647,
	1187, 0, 299, 1194, 300, 1193, 0, 1204, 301, 302,
	303, 304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235,
	654, 0, 308, 309, 1180, 0, 1161, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1215, 332, 333, 334, 1164,
	1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338,
	339, 1197, 340, 342, 1191, 1190, 1110, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1182, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 1116, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1205, 1206, 373, 1129,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 1189,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1216, 381, 382, 383, 1202, 1203, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1212, 0, 1139,
	394, 0, 395, 396, 397, 398, 399, 1175, 1176, 1179,
	483, 1218, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1217, 410,
	1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220,
	413, 414, 415, 1221, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1213, 1222, 427, 428, 1223, 0, 429, 430, 431, 432,
	433, 434, 437, 1168, 1167, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1224, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1225, 479, 467, 1107, 281, 1226, 480, 481, 1130, 1178,
	482, 1192, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1227, 493,
	1228, 1207, 494, 495, 1117, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1208, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 1188, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1229, 549, 550, 551, 552,
	553, 1118, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1171, 576, 577, 559, 560, 578, 579,
	1230, 580, 581, 582, 583, 584, 585, 586, 1186, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	1233, 594, 595, 596, 597, 1209, 601, 602, 0, 603,
	604, 1104, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 1198, 1199, 1200, 1201, 0,
	622, 0, 614, 615, 616, 1210, 617, 1211, 1128, 618,
	619, 620, 621, 0, 623, 624, 0, 1111, 625, 626,
	627, 629, 630, 628, 631, 1172, 632, 0, 0, 633,
	634, 635, 693, 1195, 1232, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1108, 0, 0, 2748, 0, 2739, 2746, 1123,
	1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0, 0,
	0, 0, 1101, 1102, 282, 284, 283, 285, 286, 287,
	288, 1134, 289, 290, 0, 1132, 0, 0, 0, 1174,
	1138, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 1187, 0, 299, 1194, 300, 1193,
	0, 1204, 301, 302, 303, 304, 305, 306, 1140, 1173,
	1105, 307, 1234, 1235, 654, 0, 308, 309, 1180, 0,
	1161, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169,
	335, 336, 337, 338, 339, 1197, 2742, 342, 1191, 1190,
	1110, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1182, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 1116, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1205, 1206, 373, 1129, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 1189, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 1202, 1203,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1212, 0, 1139, 394, 0, 395, 396, 397, 2743,
	399, 1175, 1176, 1179, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1217, 410, 1184, 1185, 0, 1145, 0, 411,
	412, 1219, 1177, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 1213, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 1168, 1167, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	2744, 447, 2741, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 1107, 281, 1226,
	480, 481, 1130, 1178, 482, 1192, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 1207, 494, 495, 1117, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1208,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 1188, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 1118, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 2745,
	0, 571, 572, 570, 573, 574, 575, 1171, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 1186, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 1233, 594, 595, 596, 597, 1209,
	601, 602, 0, 603, 604, 1104, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 1198,
	1199, 1200, 1201, 0, 622, 0, 614, 615, 616, 1210,
	617, 1211, 1128, 618, 619, 620, 621, 0, 623, 624,
	0, 1111, 625, 626, 627, 629, 630, 628, 631, 1172,
	632, 0, 0, 633, 634, 635, 693, 1195, 1232, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 2740, 645, 1108, 0, 0, 2736,
	0, 2739, 2746, 1123, 1124, 1120, 1121, 1133, 0, 1103,
	0, 0, 0, 0, 0, 0, 1101, 1102, 282, 284,
	283, 285, 286, 287, 288, 1134, 289, 290, 0, 1132,
	0, 0, 0, 1174, 1138, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 1187, 0,
	299, 1194, 300, 1193, 0, 1204, 301, 302, 303, 304,
	305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 1197,
	2742, 342, 1191, 1190, 1110, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1182,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 1116, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 1129, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 1189, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 1202, 1203, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 1139, 394, 0,
	395, 396, 397, 2743, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 1184, 1185,
	0, 1145, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 2744, 447, 2741, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 1117, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 1188,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 1118,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 2745, 0, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 1186, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 1233, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 1104,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 1198, 1199, 1200, 1201, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 1128, 618, 619, 620,
	621, 0, 623, 624, 0, 1111, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	693, 1195, 1232, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 2740, 645,
	1108, 0, 0, 0, 0, 1150, 1122, 1123, 1124, 1120,
	1121, 1133, 0, 1103, 0, 0, 0, 0, 0, 0,
	1101, 1102, 282, 284, 283, 285, 286, 287, 288, 1134,
	289, 290, 0, 1132, 0, 0, 0, 1174, 1138, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 1187, 0, 299, 1194, 300, 1193, 0, 1204,
	301, 302, 303, 304, 305, 306, 1140, 1173, 1105, 307,
	1234, 1235, 654, 0, 308, 309, 1180, 0, 1161, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336,
	337, 338, 339, 1197, 340, 342, 1191, 1190, 1110, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1182, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 1116, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1205, 1206,
	373, 1129, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 1189, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 1202, 1203, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1212,
	0, 1139, 394, 0, 395, 396, 397, 398, 399, 1175,
	1176, 1179, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1217, 410, 1184, 1185, 0, 1145, 0, 411, 412, 1219,
	1177, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1213, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 1168, 1167, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 1107, 281, 1226, 480, 481,
	1130, 1178, 482, 1192, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 1207, 494, 495, 1117, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1208, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 1188, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 1118, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1171, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	1186, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 1233, 594, 595, 596, 597, 1209, 601, 602,
	0, 603, 604, 1104, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 1198, 1199, 1200,
	1201, 0, 622, 0, 614, 615, 616, 1210, 617, 1211,
	1128, 618, 619, 620, 621, 0, 623, 624, 0, 1111,
	625, 626, 627, 629, 630, 628, 631, 1172, 632, 0,
	0, 633, 634, 635, 693, 1195, 1232, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 1101, 1102, 0, 0, 0, 0,
	0, 1916, 0, 1134, 0, 0, 0, 1132, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 2491, 289, 290, 0, 0, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	2453, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1108, 0, 0, 2426, 0, 1150, 1122, 1123, 1124,
	1120, 1121, 1133, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 1138,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 1187, 0, 299, 1194, 300, 1193, 0,
	1204, 301, 302, 303, 304, 305, 306, 1140, 1173, 1105,
	307, 1234, 1235, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 1197, 340, 342, 1191, 1190, 1110,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1182, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1116, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 1129, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1189, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 1202, 1203, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 1139, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 1184, 1185, 0, 1145, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1107, 281, 1226, 480,
	481, 1130, 1178, 482, 1192, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 1117, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1188, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 1118, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 1186, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1233, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 1104, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1198, 1199,
	1200, 1201, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 1128, 618, 619, 620, 621, 0, 623, 624, 0,
	1111, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 693, 1195, 1232, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1108, 0, 0, 1754, 0,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0,
	0, 0, 0, 0, 0, 1101, 1102, 282, 284, 283,
	285, 286, 287, 288, 1134, 289, 290, 0, 1132, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1175, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 623, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 1683, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 1101,
	1102, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 1678, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	1665, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1108, 0, 0, 1660, 0, 1150, 1122, 1123, 1124,
	1120, 1121, 1133, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 1138,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 1187, 0, 299, 1194, 300, 1193, 0,
	1204, 301, 302, 303, 304, 305, 306, 1140, 1173, 1105,
	307, 1234, 1235, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 1197, 340, 342, 1191, 1190, 1110,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1182, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1116, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 1129, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1189, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 1202, 1203, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 1139, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 1184, 1185, 0, 1145, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1107, 281, 1226, 480,
	481, 1130, 1178, 482, 1192, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 1117, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1188, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 1118, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 1186, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1233, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 1104, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1198, 1199,
	1200, 1201, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 1128, 618, 619, 620, 621, 0, 623, 624, 0,
	1111, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 693, 1195, 1232, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1108, 0, 0, 1561, 0,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0,
	0, 0, 0, 0, 0, 1101, 1102, 282, 284, 283,
	285, 286, 287, 288, 1134, 289, 290, 0, 1132, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1560, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 623, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 1555, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 1101,
	1102, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1554, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 1548, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	1357, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1108, 0, 0, 0, 0, 1150, 1122, 1123, 1124,
	1120, 1121, 1133, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 1138,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 1187, 0, 299, 1194, 300, 1193, 0,
	1204, 301, 302, 303, 304, 305, 306, 1140, 1173, 1105,
	307, 1234, 1235, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 1197, 340, 342, 1191, 1190, 1110,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1182, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1116, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 1129, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1189, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 1202, 1203, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 1139, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 1184, 1185, 0, 1145, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1107, 281, 1226, 480,
	481, 1130, 1178, 482, 1192, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 1117, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1188, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 1118, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 1186, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1233, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 1104, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1198, 1199,
	1200, 1201, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 1128, 618, 619, 620, 621, 0, 623, 624, 0,
	1111, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 693, 1195, 1232, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1108, 0, 0, 0, 0,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0,
	0, 0, 0, 0, 0, 1101, 1102, 282, 284, 283,
	285, 286, 287, 288, 1134, 289, 290, 0, 1132, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1215, 332, 333, 4845, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1175, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 4844, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 0, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 1101,
	1102, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	4843, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 1105, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 4845,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 1110, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 1107, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 1104, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 4844, 624, 0, 1111, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1108, 0, 0, 0, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 1103, 0, 0, 0,
	0, 0, 0, 1101, 1102, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 1105, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 4453, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 1110, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 4454, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 1107, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 1117,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 4452, 553, 1118, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 1104, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 1111, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 1108, 0, 0,
	0, 0, 1150, 1122, 1123, 1124, 3237, 3238, 1133, 0,
	1103, 0, 0, 0, 0, 0, 0, 1101, 1102, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 1219, 1177, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 1226, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 623, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1108, 0, 0, 0, 0, 1150, 1122, 1123, 1124,
	3235, 3236, 1133, 0, 1103, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 1138,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 1187, 0, 299, 1194, 300, 1193, 0,
	1204, 301, 302, 303, 304, 305, 306, 1140, 1173, 1105,
	307, 1234, 1235, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 1197, 340, 342, 1191, 1190, 1110,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1182, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 1116, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 1129, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 1189, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 1202, 1203, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 1139, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 1184, 1185, 0, 1145, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 1107, 281, 1226, 480,
	481, 1130, 1178, 482, 1192, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 1117, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 1188, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 1118, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 1186, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 1233, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 1104, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 1198, 1199,
	1200, 1201, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 1128, 618, 619, 620, 621, 0, 623, 624, 0,
	1111, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 693, 1195, 1232, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1108, 0, 0, 0, 0,
	1150, 1122, 1123, 1124, 1120, 1121, 1133, 0, 1103, 0,
	0, 0, 0, 0, 0, 1101, 1102, 282, 284, 283,
	285, 286, 287, 288, 1134, 289, 290, 0, 1132, 0,
	0, 0, 1174, 1138, 0, 0, 0, 291, 292, 1214,
	293, 294, 295, 296, 297, 298, 647, 1187, 0, 299,
	1194, 300, 1193, 0, 1204, 301, 302, 303, 304, 305,
	306, 1140, 1173, 1105, 307, 1234, 1235, 654, 0, 308,
	309, 1180, 0, 1161, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170,
	1166, 1165, 1169, 335, 336, 337, 338, 339, 1197, 340,
	342, 1191, 1190, 1110, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1182, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 1116, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 1205, 1206, 373, 1129, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 1189, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 1216, 381, 382,
	383, 1202, 1203, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 1212, 0, 1139, 394, 0, 395,
	396, 397, 398, 399, 1175, 1176, 1179, 483, 1218, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 1217, 410, 1184, 1185, 0,
	1145, 0, 411, 412, 1219, 1177, 1220, 413, 414, 415,
	1221, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 1213, 1222, 427,
	428, 1223, 0, 429, 430, 431, 432, 433, 434, 437,
	1168, 1167, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 1224, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 1225, 479, 467,
	1107, 281, 1226, 480, 481, 1130, 1178, 482, 1192, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 1227, 493, 1228, 1207, 494,
	495, 1117, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 1208, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 1188, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 1229, 549, 550, 551, 552, 553, 1118, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	1171, 576, 577, 559, 560, 578, 579, 1230, 580, 581,
	582, 583, 584, 585, 586, 1186, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 1233, 594, 595,
	596, 597, 1209, 601, 602, 0, 603, 604, 1104, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 1198, 1199, 1200, 1201, 0, 622, 0, 614,
	615, 616, 1210, 617, 1211, 1128, 618, 619, 620, 621,
	0, 623, 624, 0, 1111, 625, 626, 627, 629, 630,
	628, 631, 1172, 632, 0, 0, 633, 634, 635, 693,
	1195, 1232, 0, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 1108,
	0, 0, 0, 0, 1150, 1122, 1123, 1124, 1120, 1121,
	1133, 0, 1103, 0, 0, 0, 0, 0, 0, 2499,
	2500, 282, 284, 283, 285, 286, 287, 288, 1134, 289,
	290, 0, 1132, 0, 0, 0, 1174, 1138, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 1187, 0, 299, 1194, 300, 1193, 0, 1204, 301,
	302, 303, 304, 305, 306, 1140, 1173, 0, 307, 1234,
	1235, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 1197, 340, 342, 1191, 1190, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1182, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 1116, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	1129, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	1189, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 1202, 1203, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	1139, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 1184, 1185, 0, 1145, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 0, 281, 1226, 480, 481, 1130,
	1178, 482, 1192, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 1117, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 1188, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 1118, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 1186,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 1233, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 1198, 1199, 1200, 1201,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 1128,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 1195, 1232, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 1150, 1122,
	1123, 1124, 1120, 1121, 1133, 0, 2758, 0, 0, 0,
	0, 0, 0, 2756, 2757, 282, 284, 283, 285, 286,
	287, 288, 1134, 289, 290, 0, 1132, 0, 0, 0,
	1174, 1138, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 647, 1187, 0, 299, 1194, 300,
	1193, 0, 1204, 301, 302, 303, 304, 305, 306, 1140,
	1173, 0, 307, 1234, 1235, 654, 0, 308, 309, 1180,
	0, 1161, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165,
	1169, 335, 336, 337, 338, 339, 1197, 340, 342, 1191,
	1190, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 1116,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 1205, 1206, 373, 1129, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 1189, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 1202,
	1203, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 1212, 0, 1139, 394, 0, 395, 396, 397,
	398, 399, 1175, 1176, 1179, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 1217, 410, 1184, 1185, 0, 1145, 0,
	411, 412, 1219, 1177, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 1213, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 1168, 1167,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 0, 281,
	1226, 480, 481, 1130, 1178, 482, 1192, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 1227, 493, 1228, 1207, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	1208, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 1188, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 3230, 3231, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 1171, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 1186, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 1233, 594, 595, 596, 597,
	1209, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	1198, 1199, 1200, 1201, 0, 622, 0, 614, 615, 616,
	1210, 617, 1211, 1128, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	1172, 632, 0, 0, 633, 634, 635, 693, 1195, 1232,
	0, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 1150, 1122, 1123, 1124, 1120, 1121, 1133, 0,
	0, 0, 0, 0, 0, 0, 0, 2162, 2163, 282,
	284, 283, 285, 286, 287, 288, 1134, 289, 290, 0,
	1132, 0, 0, 0, 1174, 1138, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 0, 1187,
	0, 299, 1194, 300, 1193, 0, 1204, 301, 302, 303,
	304, 305, 306, 1140, 1173, 1105, 307, 1234, 1235, 654,
	0, 308, 309, 1180, 0, 1161, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 4845, 1164, 1162,
	1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338, 339,
	1197, 340, 342, 1191, 1190, 1110, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1182, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 1116, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 1205, 1206, 373, 1129, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 1189, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 1202, 1203, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 1212, 0, 1139, 394,
	0, 395, 396, 397, 398, 399, 1175, 1176, 1179, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 1217, 410, 1184,
	1185, 0, 1145, 0, 411, 412, 0, 1177, 0, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 1213,
	1222, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 1168, 1167, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 1107, 281, 0, 480, 481, 1130, 1178, 482,
	1192, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	1207, 494, 495, 1117, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 1208, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	1188, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	1118, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 1171, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 1186, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 1233,
	594, 595, 596, 597, 1209, 601, 602, 0, 603, 604,
	1104, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 1198, 1199, 1200, 1201, 0, 622,
	0, 614, 615, 616, 1210, 617, 1211, 1128, 618, 619,
	620, 621, 0, 4844, 624, 0, 1111, 625, 626, 627,
	629, 630, 628, 631, 1172, 632, 0, 0, 633, 634,
	635, 693, 1195, 1232, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 1094, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1101, 1102, 282, 284, 283, 285, 286, 287, 288,
	1134, 289, 290, 0, 1132, 0, 0, 0, 1174, 0,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 1173, 0,
	307, 652, 653, 654, 0, 308, 309, 1180, 0, 1161,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 1205,
	1206, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	1212, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1175, 1176, 1179, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 1217, 410, 669, 670, 0, 671, 0, 411, 412,
	1219, 1177, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 1258, 423, 425,
	424, 0, 426, 1213, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 1168, 1167, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 0, 281, 1226, 480,
	481, 0, 1178, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 1264, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 1207, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 1208, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 1266, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 241,
	571, 572, 570, 573, 574, 575, 1171, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 1209, 601,
	602, 0, 603, 604, 0, 600, 591, 243, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 1210, 617,
	1211, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 1172, 632,
	0, 0, 633, 634, 635, 1649, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 235, 641,
	642, 697, 643, 644, 645, 1272, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 1262, 0, 2003, 0, 0, 1174, 0, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 1173, 0, 307,
	652, 653, 654, 0, 308, 309, 1180, 0, 1161, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1205, 1206,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1212,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1175,
	1176, 1179, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1217, 410, 669, 670, 0, 671, 0, 411, 412, 1219,
	1177, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 1258, 423, 425, 424,
	0, 426, 1213, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 1168, 1167, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 0, 281, 1226, 480, 481,
	0, 1178, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 1264, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 1207, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1208, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 683, 1266, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 241, 571,
	572, 570, 573, 574, 575, 1171, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 1209, 601, 602,
	0, 603, 604, 0, 600, 591, 243, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 1210, 617, 1211,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 1172, 632, 0,
	0, 633, 634, 635, 1649, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 235, 641, 642,
	697, 643, 644, 645, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 3394, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1262, 0, 2003, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 1174,
	0, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 1173,
	0, 307, 652, 653, 654, 0, 308, 309, 1180, 0,
	1161, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 1164, 1162, 1163, 1170, 1166, 1165, 1169,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	1205, 1206, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 1212, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 1175, 1176, 1179, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 1217, 410, 669, 670, 0, 671, 0, 411,
	412, 1219, 1177, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 1258, 423,
	425, 424, 0, 426, 1213, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 1168, 1167, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 0, 281, 1226,
	480, 481, 0, 1178, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 1264, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 1207, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 1208,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 1266, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1171, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 1209,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 1210,
	617, 1211, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 1172,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 0, 1254, 0, 1272,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1174, 0, 1262, 0, 1260, 291, 292, 1214, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 1173, 0, 307, 652, 653, 654, 0, 308, 309,
	1180, 0, 1161, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1215, 332, 333, 334, 1164, 1162, 1163, 1170, 1166,
	1165, 1169, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 1205, 1206, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 1216, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 1212, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 1175, 1176, 1179, 483, 1218, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 1217, 410, 669, 670, 0, 671,
	0, 411, 412, 1219, 1177, 1220, 413, 414, 415, 1221,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	1258, 423, 425, 424, 0, 426, 1213, 1222, 427, 428,
	1223, 0, 429, 430, 431, 432, 433, 434, 437, 1168,
	1167, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	1224, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 1225, 479, 467, 0,
	281, 1226, 480, 481, 0, 1178, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 1264, 488, 489, 490, 0,
	0, 491, 492, 676, 1227, 493, 1228, 1207, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 1208, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 1229, 549, 550, 551, 552, 553, 683, 1266, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1171,
	576, 577, 559, 560, 578, 579, 1230, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 1209, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 1210, 617, 1211, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 1172, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 1272, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1174, 0, 1262, 0, 1260, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 1173, 0, 307, 652, 653, 654, 0,
	308, 309, 1180, 0, 1161, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 1164, 1162, 1163,
	1170, 1166, 1165, 1169, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 1205, 1206, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 1212, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 1175, 1176, 1179, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 1217, 410, 669, 670,
	0, 671, 0, 411, 412, 1219, 1177, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 1258, 423, 425, 424, 0, 426, 1213, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 1168, 1167, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 0, 281, 1226, 480, 481, 0, 1178, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 1264, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 1207,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 1208, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 683,
	1266, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1171, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 1209, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 1210, 617, 1211, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 1172, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 1272, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1174, 0, 1262, 0, 1260,
	291, 292, 1214, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 1173, 0, 307, 652, 653,
	654, 0, 308, 309, 1180, 0, 1161, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1215, 332, 333, 334, 1164,
	1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 1205, 1206, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1216, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 1212, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 1175, 1176, 1179,
	483, 1218, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 1217, 410,
	669, 670, 0, 671, 0, 411, 412, 1219, 1177, 1220,
	413, 414, 415, 1221, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	1213, 1222, 427, 428, 1223, 0, 429, 430, 431, 432,
	433, 434, 437, 1168, 1167, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1224, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1225, 479, 467, 0, 281, 1226, 480, 481, 0, 1178,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1227, 493,
	1228, 1207, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 1208, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1229, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1171, 576, 577, 559, 560, 578, 579,
	1230, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 1209, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 1210, 617, 1211, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 1172, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 1272, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1174, 0, 0,
	0, 4269, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 1173, 0, 307,
	652, 653, 654, 0, 308, 309, 1180, 0, 1161, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 1205, 1206,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 1212,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1175,
	1176, 1179, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	1217, 410, 669, 670, 0, 671, 0, 411, 412, 1219,
	1177, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 1213, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 1168, 1167, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 0, 281, 1226, 480, 481,
	0, 1178, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 1207, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 1208, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 683, 1266, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1171, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 1209, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 1210, 617, 1211,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 1172, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 276, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 2603, 2604, 2605, 2622, 2623, 2624,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 2625, 0, 646, 0, 0, 0,
	0, 291, 292, 1900, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 1885, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 2615, 0, 318, 319,
	320, 317, 321, 0, 322, 2611, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 2616, 2617, 2618, 2619, 374, 375, 376,
	661, 0, 0, 2610, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 2620, 2621, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	2613, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 2614, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 1884, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 1575, 2600, 2601, 2602, 2626, 2612, 2606, 0,
	2608, 2609, 2607, 2594, 2595, 2596, 2597, 2598, 2599, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 1497, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1217, 410, 669,
	670, 0, 671, 0, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 0, 0, 1226, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 241, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 243, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 1649, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 235, 641, 642, 697, 643, 644,
	645, 0, 0, 236, 1646, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	193, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 1497,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 1217, 410, 669, 670, 0, 671, 0, 411, 412,
	1219, 672, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 0, 0, 1226, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 241,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 243, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 1649, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 235, 641,
	642, 697, 643, 644, 645, 1575, 1574, 236, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 193, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 1497, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	1217, 410, 669, 670, 0, 671, 0, 411, 412, 1219,
	672, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 0, 0, 1226, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1575, 1574, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 1673, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 1497, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 1217,
	410, 669, 670, 0, 671, 0, 411, 412, 1219, 672,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 0, 0, 1226, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 1575, 1574, 0, 0, 0, 0, 1572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 3713, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1214, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 1497, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1215, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	1216, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 1218, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 1217, 410,
	669, 670, 0, 671, 0, 411, 412, 1219, 672, 1220,
	413, 414, 415, 1221, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 1222, 427, 428, 1223, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 1224, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	1225, 479, 467, 0, 0, 1226, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 1227, 493,
	1228, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 2367, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 1229, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	1230, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 1575, 2277, 0, 0, 0, 0, 2278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 1673, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1214, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 1497, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1215, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 1216,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	1218, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 1217, 410, 669,
	670, 0, 671, 0, 411, 412, 1219, 672, 1220, 413,
	414, 415, 1221, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 2276, 425, 424, 0, 426, 673,
	1222, 427, 428, 1223, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 1224, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 1225,
	479, 467, 0, 0, 1226, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 1227, 493, 1228,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 1229, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 1230,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 1575, 1574, 0, 0, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	1673, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	1214, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 1497, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1215, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 1216, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 1218,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 1217, 410, 669, 670,
	0, 671, 0, 411, 412, 1219, 672, 1220, 413, 414,
	415, 1221, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 1222,
	427, 428, 1223, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 1224, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 1225, 479,
	467, 0, 0, 1226, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 1227, 493, 1228, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 1229, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 1230, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 1094, 0, 276, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 1655,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 241, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 243, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 1649, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 276, 0, 0, 235, 641, 642, 697, 643,
	644, 645, 0, 0, 236, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 193, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 1272, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1174, 0, 0, 0,
	2017, 291, 292, 1214, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 1173, 0, 307, 652,
	653, 654, 0, 308, 309, 1180, 0, 1161, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1215, 332, 333, 334,
	1164, 1162, 1163, 1170, 1166, 1165, 1169, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 1205, 1206, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 1216, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 1212, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1175, 1176,
	1179, 483, 1218, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 1217,
	410, 669, 670, 0, 671, 0, 411, 412, 1219, 1177,
	1220, 413, 414, 415, 1221, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 1213, 1222, 427, 428, 1223, 0, 429, 430, 431,
	432, 433, 434, 437, 1168, 1167, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 1224, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 1225, 479, 467, 0, 281, 1226, 480, 481, 0,
	1178, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 1227,
	493, 1228, 1207, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 1208, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 1229, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 1171, 576, 577, 559, 560, 578,
	579, 1230, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 1209, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 1210, 617, 1211, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 1172, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 276, 3144, 0, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 276, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 5006, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 276, 0, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 3663, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 0, 276, 0, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 1643, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 276, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	3132, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	276, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 3818,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 0,
	924, 0, 825, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 2354, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 832, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 922, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 830, 605, 606, 607, 608, 609, 831,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 825, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 3938, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 835, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	832, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 3937, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 830, 605, 606, 607, 608,
	609, 831, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 3936, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 825, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	2088, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 835, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 832, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 2087, 566, 567, 568, 569, 0,
	2089, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 830, 605, 606,
	607, 608, 609, 831, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 2086, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 825, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 2039, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 835, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 832, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 2038, 566, 567, 568,
	569, 0, 2040, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 830,
	605, 606, 607, 608, 609, 831, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 2037, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 823, 0, 825,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 835,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 832, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	830, 605, 606, 607, 608, 609, 831, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 2061, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	835, 0, 0, 0, 0, 291, 292, 1214, 293, 294,
	295, 296, 297, 298, 0, 2067, 0, 299, 2057, 300,
	2073, 0, 2080, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 2083, 2084, 0, 0, 308, 309, 0,
	0, 1497, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1215, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 1197, 340, 342, 2071,
	2070, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1182, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 0,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 2069, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 1216, 381, 382, 383, 2078,
	2079, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 0, 0, 0, 394, 0, 395, 396, 397,
	398, 399, 0, 0, 0, 483, 1218, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 1217, 410, 2064, 2065, 0, 2060, 0,
	411, 412, 1219, 0, 1220, 413, 414, 415, 1221, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 0, 1222, 427, 428, 1223,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 1224,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 1225, 479, 467, 0, 0,
	1226, 480, 481, 0, 0, 482, 2072, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 0, 1227, 493, 1228, 0, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 2054, 507, 508, 509, 2055, 510, 511, 512,
	0, 513, 0, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 2068, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	1229, 549, 550, 551, 552, 553, 0, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 1230, 580, 581, 582, 583,
	584, 585, 586, 2066, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 2082, 594, 595, 596, 597,
	0, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	2074, 2075, 2076, 2077, 0, 622, 0, 614, 615, 616,
	0, 617, 0, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 0, 2058, 2081,
	0, 637, 636, 638, 0, 639, 640, 0, 0, 0,
	0, 641, 642, 0, 643, 644, 645, 825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	2048, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 832, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 830, 605,
	606, 607, 608, 609, 831, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 825,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 835, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 832, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 2405, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 2406, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	830, 605, 606, 607, 608, 609, 831, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 2407, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	835, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 835, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 1497,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 1217, 410, 669, 670, 0, 671, 0, 411, 412,
	1219, 672, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 0, 0, 1226, 480,
	481, 4028, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1575, 1574, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 1497, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	1217, 410, 669, 670, 0, 671, 0, 411, 412, 1219,
	672, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 0, 0, 1226, 480, 481,
	3613, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 1703, 0, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 1497,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 1702,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 1217, 410, 669, 670, 0, 671, 0, 411, 412,
	1219, 672, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 0, 0, 1226, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 1701, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 1700, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 1568, 0, 1575, 1574, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	1497, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 1570, 667, 668, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1217, 410, 669, 670, 0, 671, 0, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 0, 0, 1226,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 1575, 1574, 0, 0,
	0, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 1214, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 1497,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1215, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 1216, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 1218, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 1217, 410, 669, 670, 0, 671, 0, 411, 412,
	1219, 672, 1220, 413, 414, 415, 1221, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 1222, 427, 428, 1223, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 1224, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 1225, 479, 467, 0, 0, 1226, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 1227, 493, 1228, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 1229, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 1230, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 1575, 1574, 0, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 1214, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 1497, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1215, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 1216, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 1218, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	1217, 410, 669, 670, 0, 671, 0, 411, 412, 1219,
	672, 1220, 413, 414, 415, 1221, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 1222, 427, 428, 1223, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 1224, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 1225, 479, 467, 0, 0, 1226, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	1227, 493, 1228, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 1229, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 1230, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 1575, 637, 636,
	638, 696, 639, 640, 0, 0, 0, 0, 641, 642,
	697, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 1214, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	1497, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1215,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 1216, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 1218, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 1217, 410, 669, 670, 0, 671, 0, 411,
	412, 1219, 672, 1220, 413, 414, 415, 1221, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 1222, 427, 428, 1223, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 1224, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 1225, 479, 467, 0, 0, 1226,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 1227, 493, 1228, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 1229,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 1230, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 2930, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 3655, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 2934, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 3654, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 2933, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 3651,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 3653, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	3650, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 2932, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 3652, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 2930,
	308, 309, 655, 0, 0, 2924, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	2926, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	2934, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 2933, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 2923, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 2932, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 2931, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1780, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 1779, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 1778, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 1781, 558,
	565, 566, 567, 568, 569, 0, 1777, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 1775, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 1776, 636, 638, 696, 639,
	640, 1501, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 1503, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 1264,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1498, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1500, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	1264, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1404, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 1406,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 1264, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 730, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 729, 287, 288,
	718, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 721, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 727, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 723,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 717, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 718, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 721, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 722,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	723, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 718, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 721, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 722, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 723, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 718, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 721,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 4038, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 723, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 1264,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 276, 637, 636, 638, 696,
	639, 640, 0, 0, 0, 0, 641, 642, 697, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 3554, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 3102, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	3101, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 2374, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	2312, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 2319, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 2318, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 2305,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 2307, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	279, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 2270, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 280, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 281, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 1264,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1621, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1620, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1524, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 279, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 280, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 281, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1517, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1519, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 1340, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 279, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 1339, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 280, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 281, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 1330, 0, 276, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 1329, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1327, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 279, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 1326, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 280,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	281, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 1322, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 1321, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 699,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 279, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 280, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 281, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	267, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 721, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 722, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 723,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 2414, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 2412, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 279, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	280, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 281, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 276, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 2410, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 279,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 280, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 281, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 279, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 2325, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 280, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 281, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 279, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	2113, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 280, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 281, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 279, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 2107, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 280, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 281,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 909, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	908, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	907, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 3654, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 4352, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1368, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 1371, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 1369,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 790, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 789, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	788, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	1372, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 786, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 1368, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 1371, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	1369, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 790, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 789, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 788, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 1372, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 786, 688, 689, 690, 0,
	622, 0, 614, 1370, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 708, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 707, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 706,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 276, 3144, 0, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 276, 4368, 0, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 4648, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 4241, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 3987, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 2811, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 276,
	3144, 0, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 3141, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 2231, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 789, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 788,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 786, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 276, 637, 636, 638, 696, 639, 640,
	0, 0, 0, 0, 641, 642, 697, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 2384, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 2372, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1676, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1669, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 780, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 776, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 666, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 781, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 790, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	789, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 788, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 1654, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 786,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 0,
	637, 636, 638, 696, 639, 640, 1627, 0, 276, 0,
	641, 642, 697, 643, 644, 645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 1626, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1611, 0, 276,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 1609, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 0, 637, 636, 638, 696, 639, 640, 1604, 0,
	276, 0, 641, 642, 697, 643, 644, 645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 0, 637, 636, 638, 696, 639, 640, 1581,
	0, 276, 0, 641, 642, 697, 643, 644, 645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 1579, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	1566, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 1529, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 1506, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 1374, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 789, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 788, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 786, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 1345, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	1344, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 0, 637,
	636, 638, 696, 639, 640, 1336, 0, 276, 0, 641,
	642, 697, 643, 644, 645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 647, 648, 0, 299, 649, 300, 650,
	0, 651, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 652, 653, 654, 0, 308, 309, 655, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 656, 657,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 658, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	659, 660, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 661, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 662, 663,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 664, 0, 665, 394, 0, 395, 396, 397, 398,
	399, 1335, 667, 668, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 669, 670, 0, 671, 0, 411,
	412, 0, 672, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 673, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 674, 482, 675, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 676, 0, 493, 0, 677, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 678, 507, 508, 509, 679, 510, 511, 512, 680,
	513, 681, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 682, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 683, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 0, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 684, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 685, 594, 595, 596, 597, 686,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 687,
	688, 689, 690, 0, 622, 0, 614, 615, 616, 691,
	617, 692, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 693, 694, 695, 276,
	637, 636, 638, 696, 639, 640, 0, 0, 0, 0,
	641, 642, 697, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 1288, 289, 290, 0, 0, 0, 0,
	0, 646, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 647, 648, 0, 299, 649,
	300, 650, 0, 651, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 652, 653, 654, 0, 308, 309,
	655, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	656, 657, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	658, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 659, 660, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 661, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	662, 663, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 664, 0, 665, 394, 0, 395, 396,
	397, 398, 399, 666, 667, 668, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 669, 670, 0, 671,
	0, 411, 412, 0, 672, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 673, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 674, 482, 675, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 676, 0, 493, 0, 677, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 678, 507, 508, 509, 679, 510, 511,
	512, 680, 513, 681, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 682, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 683, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 0,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 684, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 685, 594, 595, 596,
	597, 686, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 687, 688, 689, 690, 0, 622, 0, 614, 615,
	616, 691, 617, 692, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 693, 694,
	695, 276, 637, 636, 638, 696, 639, 640, 0, 0,
	0, 0, 641, 642, 697, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 795, 289, 290, 0, 0,
	0, 0, 0, 646, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 647, 648, 0,
	299, 649, 300, 650, 0, 651, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 652, 653, 654, 0,
	308, 309, 655, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 656, 657, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 658, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 659, 660, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 661, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 662, 663, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 664, 0, 665, 394, 0,
	395, 396, 397, 398, 399, 666, 667, 668, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 669, 670,
	0, 671, 0, 411, 412, 0, 672, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 673, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 674, 482, 675,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 676, 0, 493, 0, 677,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 678, 507, 508, 509, 679,
	510, 511, 512, 680, 513, 681, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 682,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 683,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 0, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 684, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 685, 594,
	595, 596, 597, 686, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 687, 688, 689, 690, 0, 622, 0,
	614, 615, 616, 691, 617, 692, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	693, 694, 695, 0, 637, 636, 638, 696, 639, 640,
	780, 0, 276, 0, 641, 642, 697, 643, 644, 645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 776, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 775, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	781, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 790, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 789, 550, 551, 552, 553,
	777, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	788, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	778, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 786, 688, 689, 690, 0, 622,
	0, 614, 782, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 0, 637, 636, 638, 696, 639,
	640, 769, 0, 276, 0, 641, 642, 697, 643, 644,
	645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 646, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 647,
	648, 0, 299, 649, 300, 650, 0, 651, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 652, 653,
	654, 0, 308, 309, 655, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 656, 657, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 658, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 659, 660, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 661,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 662, 663, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 664, 0, 665,
	394, 0, 395, 396, 397, 398, 399, 666, 667, 668,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	669, 670, 0, 671, 0, 411, 412, 0, 672, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	673, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 674,
	482, 675, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 676, 0, 493,
	0, 677, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 678, 507, 508,
	509, 679, 510, 511, 512, 680, 513, 681, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 682, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 683, 554, 0, 555, 556, 770, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 0, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 684, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	685, 594, 595, 596, 597, 686, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 687, 688, 689, 690, 0,
	622, 0, 614, 615, 616, 691, 617, 692, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 693, 694, 695, 0, 637, 636, 638, 696,
	639, 640, 732, 0, 276, 0, 641, 642, 697, 643,
	644, 645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 666, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 0, 637, 636, 638,
	696, 639, 640, 725, 0, 276, 0, 641, 642, 697,
	643, 644, 645, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 646, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 647, 648, 0, 299, 649, 300, 650, 0, 651,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	652, 653, 654, 0, 308, 309, 655, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 656, 657, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 658, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 659, 660,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 661, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 662, 663, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 664,
	0, 665, 394, 0, 395, 396, 397, 398, 399, 666,
	667, 668, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 669, 670, 0, 671, 0, 411, 412, 0,
	672, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 673, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 674, 482, 675, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 676,
	0, 493, 0, 677, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 678,
	507, 508, 509, 679, 510, 511, 512, 680, 513, 681,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 682, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 683, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 0, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	684, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 685, 594, 595, 596, 597, 686, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 687, 688, 689,
	690, 0, 622, 0, 614, 615, 616, 691, 617, 692,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 693, 694, 695, 0, 637, 636,
	638, 696, 639, 640, 703, 0, 276, 0, 641, 642,
	697, 643, 644, 645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 3683, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 276, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 789, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	788, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 786, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 3598, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	3570, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 3567, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 3519, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 562, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 276, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 3517, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 576, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 3505, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	3502, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 528, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 394, 0, 395, 396, 397,
	398, 399, 3112, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 554, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	276, 637, 636, 638, 696, 639, 640, 0, 0, 0,
	0, 641, 642, 697, 643, 644, 645, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 646, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 647, 648, 0, 299,
	649, 300, 650, 0, 651, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 652, 653, 654, 0, 308,
	309, 655, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 656, 657, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 359, 0, 360,
	361, 658, 362, 363, 364, 366, 368, 365, 367, 369,
	370, 371, 372, 659, 660, 373, 0, 0, 0, 0,
	0, 0, 0, 374, 375, 376, 661, 0, 0, 0,
	377, 0, 378, 379, 380, 0, 0, 0, 381, 382,
	383, 662, 663, 384, 385, 386, 387, 388, 389, 390,
	391, 392, 0, 393, 664, 0, 665, 394, 0, 395,
	396, 397, 398, 399, 666, 667, 668, 483, 0, 400,
	401, 0, 402, 403, 404, 405, 406, 0, 0, 0,
	0, 407, 408, 409, 0, 0, 410, 669, 670, 0,
	671, 0, 411, 412, 0, 672, 0, 413, 414, 415,
	0, 416, 0, 0, 0, 417, 418, 419, 420, 421,
	422, 0, 423, 425, 424, 0, 426, 673, 0, 427,
	428, 0, 0, 429, 430, 431, 432, 433, 434, 437,
	0, 0, 435, 436, 438, 439, 0, 440, 441, 443,
	446, 442, 444, 445, 447, 460, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 459, 462, 0,
	461, 0, 463, 464, 465, 466, 473, 475, 476, 471,
	472, 474, 477, 478, 468, 469, 470, 0, 479, 467,
	0, 0, 0, 480, 481, 0, 674, 482, 675, 484,
	485, 0, 0, 486, 0, 0, 0, 488, 489, 490,
	0, 0, 491, 492, 676, 0, 493, 0, 677, 494,
	495, 487, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 0, 505, 506, 678, 507, 508, 509, 679, 510,
	511, 512, 680, 513, 681, 514, 515, 0, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 524, 682, 525,
	526, 528, 527, 529, 0, 530, 0, 531, 532, 533,
	0, 0, 0, 0, 0, 534, 536, 0, 537, 538,
	539, 540, 535, 541, 542, 543, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 683, 554,
	0, 555, 556, 770, 563, 564, 557, 558, 565, 566,
	567, 568, 569, 0, 571, 572, 570, 573, 574, 575,
	0, 576, 577, 559, 560, 578, 579, 0, 580, 581,
	582, 583, 584, 585, 586, 684, 0, 587, 0, 588,
	589, 590, 592, 561, 593, 598, 599, 685, 594, 595,
	596, 597, 686, 601, 602, 0, 603, 604, 0, 600,
	591, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	0, 613, 687, 688, 689, 690, 0, 622, 0, 614,
	615, 616, 691, 617, 692, 0, 618, 619, 620, 621,
	0, 623, 624, 0, 0, 625, 626, 627, 629, 630,
	628, 631, 0, 632, 0, 0, 633, 634, 635, 693,
	694, 695, 276, 637, 636, 638, 696, 639, 640, 0,
	0, 0, 0, 641, 642, 697, 643, 644, 645, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 646, 0, 2343, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 647, 648,
	0, 299, 649, 300, 650, 0, 651, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 652, 653, 654,
	0, 308, 309, 655, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 656, 657, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 359,
	0, 360, 361, 658, 362, 363, 364, 366, 368, 365,
	367, 369, 370, 371, 372, 659, 660, 373, 0, 0,
	0, 0, 0, 0, 0, 374, 375, 376, 661, 0,
	0, 0, 377, 0, 378, 379, 380, 0, 0, 0,
	381, 382, 383, 662, 663, 384, 385, 386, 387, 388,
	389, 390, 391, 392, 0, 393, 664, 0, 665, 394,
	0, 395, 396, 397, 398, 399, 666, 667, 668, 483,
	0, 400, 401, 0, 402, 403, 404, 405, 406, 0,
	0, 0, 0, 407, 408, 409, 0, 0, 410, 669,
	670, 0, 671, 0, 411, 412, 0, 672, 0, 413,
	414, 415, 0, 416, 0, 0, 0, 417, 418, 419,
	420, 421, 422, 0, 423, 425, 424, 0, 426, 673,
	0, 427, 428, 0, 0, 429, 430, 431, 432, 433,
	434, 437, 0, 0, 435, 436, 438, 439, 0, 440,
	441, 443, 446, 442, 444, 445, 447, 460, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 0, 461, 0, 463, 464, 465, 466, 473, 475,
	476, 471, 472, 474, 477, 478, 468, 469, 470, 0,
	479, 467, 0, 0, 0, 480, 481, 0, 674, 482,
	675, 484, 485, 0, 0, 486, 0, 0, 0, 488,
	489, 490, 0, 0, 491, 492, 676, 0, 493, 0,
	677, 494, 495, 487, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 0, 505, 506, 678, 507, 508, 509,
	679, 510, 511, 512, 680, 513, 681, 514, 515, 0,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 524,
	682, 525, 526, 528, 527, 529, 0, 530, 0, 531,
	532, 533, 0, 0, 0, 0, 0, 534, 536, 0,
	537, 538, 539, 540, 535, 541, 542, 543, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	683, 554, 0, 555, 556, 562, 563, 564, 557, 558,
	565, 566, 567, 568, 569, 0, 571, 572, 570, 573,
	574, 575, 0, 0, 577, 559, 560, 578, 579, 0,
	580, 581, 582, 583, 584, 585, 586, 684, 0, 587,
	0, 588, 589, 590, 592, 561, 593, 598, 599, 685,
	594, 595, 596, 597, 686, 601, 602, 0, 603, 604,
	0, 600, 591, 0, 605, 606, 607, 608, 609, 610,
	611, 612, 0, 613, 687, 688, 689, 690, 0, 622,
	0, 614, 615, 616, 691, 617, 692, 0, 618, 619,
	620, 621, 0, 623, 624, 0, 0, 625, 626, 627,
	629, 630, 628, 631, 0, 632, 0, 0, 633, 634,
	635, 693, 694, 695, 276, 637, 636, 638, 696, 639,
	640, 0, 0, 0, 0, 641, 642, 697, 643, 644,
	645, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 646, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	647, 648, 0, 299, 649, 300, 650, 0, 651, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 652,
	653, 654, 0, 308, 309, 655, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 656, 657, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 359, 0, 360, 361, 658, 362, 363, 364, 366,
	368, 365, 367, 369, 370, 371, 372, 659, 660, 373,
	0, 0, 0, 0, 0, 0, 0, 374, 375, 376,
	661, 0, 0, 0, 377, 0, 378, 379, 380, 0,
	0, 0, 381, 382, 383, 662, 663, 384, 385, 386,
	387, 388, 389, 390, 391, 392, 0, 393, 664, 0,
	665, 394, 0, 395, 396, 397, 398, 399, 1307, 667,
	668, 483, 0, 400, 401, 0, 402, 403, 404, 405,
	406, 0, 0, 0, 0, 407, 408, 409, 0, 0,
	410, 669, 670, 0, 671, 0, 411, 412, 0, 672,
	0, 413, 414, 415, 0, 416, 0, 0, 0, 417,
	418, 419, 420, 421, 422, 0, 423, 425, 424, 0,
	426, 673, 0, 427, 428, 0, 0, 429, 430, 431,
	432, 433, 434, 437, 0, 0, 435, 436, 438, 439,
	0, 440, 441, 443, 446, 442, 444, 445, 447, 460,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 0, 461, 0, 463, 464, 465, 466,
	473, 475, 476, 471, 472, 474, 477, 478, 468, 469,
	470, 0, 479, 467, 0, 0, 0, 480, 481, 0,
	674, 482, 675, 484, 485, 0, 0, 486, 0, 0,
	0, 488, 489, 490, 0, 0, 491, 492, 676, 0,
	493, 0, 677, 494, 495, 487, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 0, 505, 506, 678, 507,
	508, 509, 679, 510, 511, 512, 680, 513, 681, 514,
	515, 0, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 524, 682, 525, 526, 528, 527, 529, 0, 530,
	0, 531, 532, 533, 0, 0, 0, 0, 0, 534,
	536, 0, 537, 538, 539, 540, 535, 541, 542, 543,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 683, 554, 0, 555, 556, 562, 563, 564,
	557, 558, 565, 566, 567, 568, 569, 0, 571, 572,
	570, 573, 574, 575, 0, 576, 577, 559, 560, 578,
	579, 0, 580, 581, 582, 583, 584, 585, 586, 684,
	0, 587, 0, 588, 589, 590, 592, 561, 593, 598,
	599, 685, 594, 595, 596, 597, 686, 601, 602, 0,
	603, 604, 0, 600, 591, 0, 605, 606, 607, 608,
	609, 610, 611, 612, 0, 613, 687, 688, 689, 690,
	0, 622, 0, 614, 615, 616, 691, 617, 692, 0,
	618, 619, 620, 621, 0, 623, 624, 0, 0, 625,
	626, 627, 629, 630, 628, 631, 0, 632, 0, 0,
	633, 634, 635, 693, 694, 695, 276, 637, 636, 638,
	696, 639, 640, 0, 0, 0, 0, 641, 642, 697,
	643, 644, 645, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 647, 648, 0, 299, 649, 300, 650, 0,
	651, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 652, 653, 654, 0, 308, 309, 655, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 656, 657, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 359, 0, 360, 361, 658, 362, 363,
	364, 366, 368, 365, 367, 369, 370, 371, 372, 659,
	660, 373, 0, 0, 0, 0, 0, 0, 0, 374,
	375, 376, 661, 0, 0, 0, 377, 0, 378, 379,
	380, 0, 0, 0, 381, 382, 383, 662, 663, 384,
	385, 386, 387, 388, 389, 390, 391, 392, 0, 393,
	664, 0, 665, 394, 0, 395, 396, 397, 398, 399,
	666, 667, 668, 483, 0, 400, 401, 0, 402, 403,
	404, 405, 406, 0, 0, 0, 0, 407, 408, 409,
	0, 0, 410, 669, 670, 0, 671, 0, 411, 412,
	0, 672, 0, 413, 414, 415, 0, 416, 0, 0,
	0, 417, 418, 419, 420, 421, 422, 0, 423, 425,
	424, 0, 426, 673, 0, 427, 428, 0, 0, 429,
	430, 431, 432, 433, 434, 437, 0, 0, 435, 436,
	438, 439, 0, 440, 441, 443, 446, 442, 444, 445,
	447, 460, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 459, 462, 0, 461, 0, 463, 464,
	465, 466, 473, 475, 476, 471, 472, 474, 477, 478,
	468, 469, 470, 0, 479, 467, 0, 0, 0, 480,
	481, 0, 674, 482, 675, 484, 485, 0, 0, 486,
	0, 0, 0, 488, 489, 490, 0, 0, 491, 492,
	676, 0, 493, 0, 677, 494, 495, 487, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 0, 505, 506,
	678, 507, 508, 509, 679, 510, 511, 512, 680, 513,
	681, 514, 515, 0, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 524, 682, 525, 526, 1237, 527, 529,
	0, 530, 0, 531, 532, 533, 0, 0, 0, 0,
	0, 534, 536, 0, 537, 538, 539, 540, 535, 541,
	542, 543, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 683, 554, 0, 555, 556, 562,
	563, 564, 557, 558, 565, 566, 567, 568, 569, 0,
	571, 572, 570, 573, 574, 575, 0, 576, 577, 559,
	560, 578, 579, 0, 580, 581, 582, 583, 584, 585,
	586, 684, 0, 587, 0, 588, 589, 590, 592, 561,
	593, 598, 599, 685, 594, 595, 596, 597, 686, 601,
	602, 0, 603, 604, 0, 600, 591, 0, 605, 606,
	607, 608, 609, 610, 611, 612, 0, 613, 687, 688,
	689, 690, 0, 622, 0, 614, 615, 616, 691, 617,
	692, 0, 618, 619, 620, 621, 0, 623, 624, 0,
	0, 625, 626, 627, 629, 630, 628, 631, 0, 632,
	0, 0, 633, 634, 635, 693, 694, 695, 276, 637,
	636, 638, 696, 639, 640, 0, 0, 0, 0, 641,
	642, 697, 643, 644, 645, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	646, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 647, 648, 0, 299, 649, 300,
	650, 0, 651, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 652, 653, 654, 0, 308, 309, 655,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 656,
	657, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 359, 0, 360, 361, 658,
	362, 363, 364, 366, 368, 365, 367, 369, 370, 371,
	372, 659, 660, 373, 0, 0, 0, 0, 0, 0,
	0, 374, 375, 376, 661, 0, 0, 0, 377, 0,
	378, 379, 380, 0, 0, 0, 381, 382, 383, 662,
	663, 384, 385, 386, 387, 388, 389, 390, 391, 392,
	0, 393, 664, 0, 665, 0, 0, 395, 396, 397,
	398, 399, 666, 667, 668, 483, 0, 400, 401, 0,
	402, 403, 404, 405, 406, 0, 0, 0, 0, 407,
	408, 409, 0, 0, 410, 669, 670, 0, 671, 0,
	411, 412, 0, 672, 0, 413, 414, 415, 0, 416,
	0, 0, 0, 417, 418, 419, 420, 421, 422, 0,
	423, 425, 424, 0, 426, 673, 0, 427, 428, 0,
	0, 429, 430, 431, 432, 433, 434, 437, 0, 0,
	435, 436, 438, 439, 0, 440, 441, 443, 446, 442,
	444, 445, 447, 460, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 462, 0, 461, 0,
	463, 464, 465, 466, 473, 475, 476, 471, 472, 474,
	477, 478, 468, 469, 470, 0, 479, 467, 0, 0,
	0, 480, 481, 0, 674, 482, 675, 484, 485, 0,
	0, 486, 0, 0, 0, 488, 489, 490, 0, 0,
	491, 492, 676, 0, 493, 0, 677, 494, 495, 487,
	496, 497, 0, 499, 500, 501, 502, 503, 504, 0,
	505, 506, 678, 507, 508, 509, 679, 510, 511, 512,
	680, 513, 681, 514, 515, 0, 516, 517, 0, 518,
	519, 520, 521, 0, 523, 524, 682, 525, 526, 528,
	527, 529, 0, 530, 0, 531, 532, 533, 0, 0,
	0, 0, 0, 534, 536, 0, 537, 538, 539, 540,
	535, 541, 542, 543, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 683, 0, 0, 555,
	556, 562, 563, 564, 557, 558, 565, 566, 567, 568,
	569, 0, 571, 572, 570, 573, 574, 575, 0, 576,
	577, 559, 560, 578, 579, 0, 580, 581, 582, 583,
	584, 585, 586, 684, 0, 587, 0, 588, 589, 590,
	592, 561, 593, 598, 599, 685, 594, 595, 596, 597,
	686, 601, 602, 0, 603, 604, 0, 600, 591, 0,
	605, 606, 607, 608, 609, 610, 611, 612, 0, 613,
	687, 688, 689, 690, 0, 622, 0, 614, 615, 616,
	691, 617, 692, 0, 618, 619, 620, 621, 0, 623,
	624, 0, 0, 625, 626, 627, 629, 630, 628, 631,
	0, 632, 0, 0, 633, 634, 635, 693, 694, 695,
	0, 637, 636, 638, 696, 639, 640, 1617, 0, 1352,
	0, 641, 642, 697, 643, 644, 645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 0, 0, 0, 0, 308, 309,
	0, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 1354, 335, 336, 337, 338, 339, 0, 340, 342,
	0, 0, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	0, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 0, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	0, 0, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 0, 0, 0, 394, 0, 395, 396,
	397, 398, 399, 1616, 0, 0, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 0, 0, 0, 0,
	0, 411, 412, 0, 0, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 0, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 0, 482, 0, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 0, 0, 493, 0, 0, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 0, 513, 0, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 0, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1355,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 0, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 0, 594, 595, 596,
	597, 0, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 0, 0, 0, 0, 0, 622, 0, 614, 615,
	616, 0, 617, 0, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 0, 1532,
	0, 1352, 637, 636, 638, 0, 639, 640, 0, 0,
	0, 0, 641, 642, 0, 643, 644, 645, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 0, 0, 0, 0,
	308, 309, 0, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 1354, 335, 336, 337, 338, 339, 0,
	340, 342, 0, 0, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 359, 0,
	360, 361, 0, 362, 363, 364, 366, 368, 365, 367,
	369, 370, 371, 372, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 374, 375, 376, 0, 0, 0,
	0, 377, 0, 378, 379, 380, 0, 0, 0, 381,
	382, 383, 0, 0, 384, 385, 386, 387, 388, 389,
	390, 391, 392, 0, 393, 0, 0, 0, 394, 0,
	395, 396, 397, 398, 399, 1531, 0, 0, 483, 0,
	400, 401, 0, 402, 403, 404, 405, 406, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 410, 0, 0,
	0, 0, 0, 411, 412, 0, 0, 0, 413, 414,
	415, 0, 416, 0, 0, 0, 417, 418, 419, 420,
	421, 422, 0, 423, 425, 424, 0, 426, 0, 0,
	427, 428, 0, 0, 429, 430, 431, 432, 433, 434,
	437, 0, 0, 435, 436, 438, 439, 0, 440, 441,
	443, 446, 442, 444, 445, 447, 460, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	0, 461, 0, 463, 464, 465, 466, 473, 475, 476,
	471, 472, 474, 477, 478, 468, 469, 470, 0, 479,
	467, 0, 0, 0, 480, 481, 0, 0, 482, 0,
	484, 485, 0, 0, 486, 0, 0, 0, 488, 489,
	490, 0, 0, 491, 492, 0, 0, 493, 0, 0,
	494, 495, 487, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 0, 505, 506, 0, 507, 508, 509, 0,
	510, 511, 512, 0, 513, 0, 514, 515, 0, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 524, 0,
	525, 526, 528, 527, 529, 0, 530, 0, 531, 532,
	533, 0, 0, 0, 0, 0, 534, 536, 0, 537,
	538, 539, 540, 535, 541, 542, 543, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 0,
	554, 0, 555, 556, 562, 563, 564, 557, 558, 565,
	566, 567, 568, 569, 0, 571, 572, 570, 573, 574,
	575, 1355, 576, 577, 559, 560, 578, 579, 0, 580,
	581, 582, 583, 584, 585, 586, 0, 0, 587, 0,
	588, 589, 590, 592, 561, 593, 598, 599, 0, 594,
	595, 596, 597, 0, 601, 602, 0, 603, 604, 0,
	600, 591, 0, 605, 606, 607, 608, 609, 610, 611,
	612, 0, 613, 0, 0, 0, 0, 0, 622, 0,
	614, 615, 616, 0, 617, 0, 0, 618, 619, 620,
	621, 0, 623, 624, 0, 0, 625, 626, 627, 629,
	630, 628, 631, 0, 632, 0, 0, 633, 634, 635,
	0, 1350, 0, 1352, 637, 636, 638, 0, 639, 640,
	0, 0, 0, 0, 641, 642, 0, 643, 644, 645,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	0, 0, 299, 0, 300, 0, 0, 0, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 0, 0,
	0, 0, 308, 309, 0, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 1354, 335, 336, 337, 338,
	339, 0, 340, 342, 0, 0, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	359, 0, 360, 361, 0, 362, 363, 364, 366, 368,
	365, 367, 369, 370, 371, 372, 0, 0, 373, 0,
	0, 0, 0, 0, 0, 0, 374, 375, 376, 0,
	0, 0, 0, 377, 0, 378, 379, 380, 0, 0,
	0, 381, 382, 383, 0, 0, 384, 385, 386, 387,
	388, 389, 390, 391, 392, 0, 393, 0, 0, 0,
	394, 0, 395, 396, 397, 398, 399, 1349, 0, 0,
	483, 0, 400, 401, 0, 402, 403, 404, 405, 406,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 410,
	0, 0, 0, 0, 0, 411, 412, 0, 0, 0,
	413, 414, 415, 0, 416, 0, 0, 0, 417, 418,
	419, 420, 421, 422, 0, 423, 425, 424, 0, 426,
	0, 0, 427, 428, 0, 0, 429, 430, 431, 432,
	433, 434, 437, 0, 0, 435, 436, 438, 439, 0,
	440, 441, 443, 446, 442, 444, 445, 447, 460, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 0, 461, 0, 463, 464, 465, 466, 473,
	475, 476, 471, 472, 474, 477, 478, 468, 469, 470,
	0, 479, 467, 0, 0, 0, 480, 481, 0, 0,
	482, 0, 484, 485, 0, 0, 486, 0, 0, 0,
	488, 489, 490, 0, 0, 491, 492, 0, 0, 493,
	0, 0, 494, 495, 487, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 0, 505, 506, 0, 507, 508,
	509, 0, 510, 511, 512, 0, 513, 0, 514, 515,
	0, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	524, 0, 525, 526, 528, 527, 529, 0, 530, 0,
	531, 532, 533, 0, 0, 0, 0, 0, 534, 536,
	0, 537, 538, 539, 540, 535, 541, 542, 543, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 0, 554, 0, 555, 556, 562, 563, 564, 557,
	558, 565, 566, 567, 568, 569, 0, 571, 572, 570,
	573, 574, 575, 1355, 576, 577, 559, 560, 578, 579,
	0, 580, 581, 582, 583, 584, 585, 586, 0, 0,
	587, 0, 588, 589, 590, 592, 561, 593, 598, 599,
	0, 594, 595, 596, 597, 0, 601, 602, 0, 603,
	604, 0, 600, 591, 0, 605, 606, 607, 608, 609,
	610, 611, 612, 0, 613, 0, 0, 0, 0, 0,
	622, 0, 614, 615, 616, 0, 617, 0, 0, 618,
	619, 620, 621, 0, 623, 624, 0, 0, 625, 626,
	627, 629, 630, 628, 631, 0, 632, 0, 0, 633,
	634, 635, 0, 2127, 0, 1352, 637, 636, 638, 0,
	639, 640, 0, 0, 0, 0, 641, 642, 0, 643,
	644, 645, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 0, 0, 299, 0, 300, 0, 0, 0,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	0, 0, 0, 0, 308, 309, 0, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 1354, 335, 336,
	337, 338, 339, 0, 340, 342, 0, 0, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 359, 0, 360, 361, 0, 362, 363, 364,
	366, 368, 365, 367, 369, 370, 371, 372, 0, 0,
	373, 0, 0, 0, 0, 0, 0, 0, 374, 375,
	376, 0, 0, 0, 0, 377, 0, 378, 379, 380,
	0, 0, 0, 381, 382, 383, 0, 0, 384, 385,
	386, 387, 388, 389, 390, 391, 392, 0, 393, 0,
	0, 0, 394, 0, 395, 396, 397, 398, 399, 0,
	0, 0, 483, 0, 400, 401, 0, 402, 403, 404,
	405, 406, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 410, 0, 0, 0, 0, 0, 411, 412, 0,
	0, 0, 413, 414, 415, 0, 416, 0, 0, 0,
	417, 418, 419, 420, 421, 422, 0, 423, 425, 424,
	0, 426, 0, 0, 427, 428, 0, 0, 429, 430,
	431, 432, 433, 434, 437, 0, 0, 435, 436, 438,
	439, 0, 440, 441, 443, 446, 442, 444, 445, 447,
	460, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 459, 462, 0, 461, 0, 463, 464, 465,
	466, 473, 475, 476, 471, 472, 474, 477, 478, 468,
	469, 470, 0, 479, 467, 0, 0, 0, 480, 481,
	0, 0, 482, 0, 484, 485, 0, 0, 486, 0,
	0, 0, 488, 489, 490, 0, 0, 491, 492, 0,
	0, 493, 0, 0, 494, 495, 487, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 0, 505, 506, 0,
	507, 508, 509, 0, 510, 511, 512, 0, 513, 0,
	514, 515, 0, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 524, 0, 525, 526, 528, 527, 529, 0,
	530, 0, 531, 532, 533, 0, 0, 0, 0, 0,
	534, 536, 0, 537, 538, 539, 540, 535, 541, 542,
	543, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 0, 554, 0, 555, 556, 562, 563,
	564, 557, 558, 565, 566, 567, 568, 569, 0, 571,
	572, 570, 573, 574, 575, 1355, 576, 577, 559, 560,
	578, 579, 0, 580, 581, 582, 583, 584, 585, 586,
	0, 0, 587, 0, 588, 589, 590, 592, 561, 593,
	598, 599, 0, 594, 595, 596, 597, 0, 601, 602,
	0, 603, 604, 0, 600, 591, 0, 605, 606, 607,
	608, 609, 610, 611, 612, 0, 613, 0, 0, 0,
	0, 0, 622, 0, 614, 615, 616, 0, 617, 0,
	0, 618, 619, 620, 621, 0, 623, 624, 0, 0,
	625, 626, 627, 629, 630, 628, 631, 0, 632, 0,
	0, 633, 634, 635, 0, 2094, 0, 1352, 637, 636,
	638, 0, 639, 640, 0, 0, 0, 0, 641, 642,
	0, 643, 644, 645, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 0, 0, 0, 0, 308, 309, 0, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 1354,
	335, 336, 337, 338, 339, 0, 340, 342, 0, 0,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 359, 0, 360, 361, 0, 362,
	363, 364, 366, 368, 365, 367, 369, 370, 371, 372,
	0, 0, 373, 0, 0, 0, 0, 0, 0, 0,
	374, 375, 376, 0, 0, 0, 0, 377, 0, 378,
	379, 380, 0, 0, 0, 381, 382, 383, 0, 0,
	384, 385, 386, 387, 388, 389, 390, 391, 392, 0,
	393, 0, 0, 0, 394, 0, 395, 396, 397, 398,
	399, 0, 0, 0, 483, 0, 400, 401, 0, 402,
	403, 404, 405, 406, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 410, 0, 0, 0, 0, 0, 411,
	412, 0, 0, 0, 413, 414, 415, 0, 416, 0,
	0, 0, 417, 418, 419, 420, 421, 422, 0, 423,
	425, 424, 0, 426, 0, 0, 427, 428, 0, 0,
	429, 430, 431, 432, 433, 434, 437, 0, 0, 435,
	436, 438, 439, 0, 440, 441, 443, 446, 442, 444,
	445, 447, 460, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 0, 461, 0, 463,
	464, 465, 466, 473, 475, 476, 471, 472, 474, 477,
	478, 468, 469, 470, 0, 479, 467, 0, 0, 0,
	480, 481, 0, 0, 482, 0, 484, 485, 0, 0,
	486, 0, 0, 0, 488, 489, 490, 0, 0, 491,
	492, 0, 0, 493, 0, 0, 494, 495, 487, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 0, 505,
	506, 0, 507, 508, 509, 0, 510, 511, 512, 0,
	513, 0, 514, 515, 0, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 524, 0, 525, 526, 528, 527,
	529, 0, 530, 0, 531, 532, 533, 0, 0, 0,
	0, 0, 534, 536, 0, 537, 538, 539, 540, 535,
	541, 542, 543, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 0, 554, 0, 555, 556,
	562, 563, 564, 557, 558, 565, 566, 567, 568, 569,
	0, 571, 572, 570, 573, 574, 575, 1355, 576, 577,
	559, 560, 578, 579, 0, 580, 581, 582, 583, 584,
	585, 586, 0, 0, 587, 0, 588, 589, 590, 592,
	561, 593, 598, 599, 0, 594, 595, 596, 597, 0,
	601, 602, 0, 603, 604, 0, 600, 591, 0, 605,
	606, 607, 608, 609, 610, 611, 612, 0, 613, 0,
	0, 0, 0, 0, 622, 0, 614, 615, 616, 0,
	617, 0, 0, 618, 619, 620, 621, 0, 623, 624,
	0, 0, 625, 626, 627, 629, 630, 628, 631, 0,
	632, 0, 0, 633, 634, 635, 0, 0, 0, 1352,
	637, 636, 638, 0, 639, 640, 0, 0, 0, 0,
	641, 642, 0, 643, 644, 645, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 0, 0, 0, 0, 308, 309,
	0, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 1354, 335, 336, 337, 338, 339, 0, 340, 342,
	0, 0, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 359, 0, 360, 361,
	0, 362, 363, 364, 366, 368, 365, 367, 369, 370,
	371, 372, 0, 0, 373, 0, 0, 0, 0, 0,
	0, 0, 374, 375, 376, 0, 0, 0, 0, 377,
	0, 378, 379, 380, 0, 0, 0, 381, 382, 383,
	0, 0, 384, 385, 386, 387, 388, 389, 390, 391,
	392, 0, 393, 0, 0, 0, 394, 0, 395, 396,
	397, 398, 399, 0, 0, 0, 483, 0, 400, 401,
	0, 402, 403, 404, 405, 406, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 410, 0, 0, 0, 0,
	0, 411, 412, 0, 0, 0, 413, 414, 415, 0,
	416, 0, 0, 0, 417, 418, 419, 420, 421, 422,
	0, 423, 425, 424, 0, 426, 0, 0, 427, 428,
	0, 0, 429, 430, 431, 432, 433, 434, 437, 0,
	0, 435, 436, 438, 439, 0, 440, 441, 443, 446,
	442, 444, 445, 447, 460, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 459, 462, 0, 461,
	0, 463, 464, 465, 466, 473, 475, 476, 471, 472,
	474, 477, 478, 468, 469, 470, 0, 479, 467, 0,
	0, 0, 480, 481, 0, 0, 482, 0, 484, 485,
	0, 0, 486, 0, 0, 0, 488, 489, 490, 0,
	0, 491, 492, 0, 0, 493, 0, 0, 494, 495,
	487, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	0, 505, 506, 0, 507, 508, 509, 0, 510, 511,
	512, 0, 513, 0, 514, 515, 0, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 524, 0, 525, 526,
	528, 527, 529, 0, 530, 0, 531, 532, 533, 0,
	0, 0, 0, 0, 534, 536, 0, 537, 538, 539,
	540, 535, 541, 542, 543, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 0, 554, 0,
	555, 556, 562, 563, 564, 557, 558, 565, 566, 567,
	568, 569, 0, 571, 572, 570, 573, 574, 575, 1355,
	576, 577, 559, 560, 578, 579, 0, 580, 581, 582,
	583, 584, 585, 586, 0, 0, 587, 0, 588, 589,
	590, 592, 561, 593, 598, 599, 0, 594, 595, 596,
	597, 0, 601, 602, 0, 603, 604, 0, 600, 591,
	0, 605, 606, 607, 608, 609, 610, 611, 612, 0,
	613, 0, 0, 0, 0, 0, 622, 0, 614, 615,
	616, 0, 617, 0, 0, 618, 619, 620, 621, 0,
	623, 624, 0, 0, 625, 626, 627, 629, 630, 628,
	631, 0, 632, 0, 0, 633, 634, 635, 0, 0,
	0, 0, 637, 636, 638, 0, 639, 640, 0, 0,
	0, 0, 641, 642, 0, 643, 644, 645, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1879, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 1866, 1860, 0,
	0, 0, 0, 1831, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1851, 1879, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1877, 0, 0, 1852, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 1860, 0, 0, 1852, 0, 0, 0, 1832, 0,
	0, 0, 0, 1878, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 1882, 1831, 0, 0, 0, 0, 0, 0,
	1878, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 1867, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 1871, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 1884, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	4776, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 1878, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 0, 0, 4772, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1830, 0,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	1860, 0, 0, 0, 0, 0, 0, 1832, 1858, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 1885, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1831, 1862, 1863, 1864, 1873, 1874, 1875, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 1871, 0,
	0, 1848, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 1870, 0,
	4674, 1880, 0, 0, 0, 0, 0, 0, 1859, 1861,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 0, 0,
	0, 0, 1837, 0, 1876, 0, 1877, 0, 0, 0,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 1870, 0, 0, 1880, 0, 1852, 0, 0, 0,
	0, 1859, 1861, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 1876, 0, 1877,
	0, 1879, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 1878, 0, 1868, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 1852,
	1867, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	1853, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 1884, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 0, 0, 1878, 0, 4628,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 4627, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 1869, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 4437, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 1866, 1860, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	1876, 0, 1877, 0, 1879, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 1868, 1829, 1830,
	1831, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0,
	1851, 0, 1852, 0, 0, 0, 0, 0, 0, 1848,
	1866, 1860, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 1878, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1867, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 1853, 0, 0, 0,
	1837, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 1868,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 1870,
	0, 0, 1880, 0, 1852, 0, 0, 0, 0, 1859,
	1861, 0, 1866, 1860, 1884, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1876, 0, 1877, 0, 1879,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	1878, 0, 1868, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 1852, 1867, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 1878, 0, 4265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1884, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 1878, 0, 4184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	4183, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1858, 0, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 1869, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 4182, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 1866, 1860, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 1876, 0,
	1877, 0, 1879, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 1868, 1829, 1830, 1831, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 1851, 0,
	1852, 0, 0, 0, 0, 0, 0, 1848, 1866, 1860,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 1878, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 0, 0, 1867, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 1870, 0, 0, 1880, 0, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 1853, 0, 0, 0, 1837, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 1868, 1829, 1830,
	0, 1862, 1863, 1864, 1873, 1874, 1875, 1870, 0, 0,
	1880, 0, 1852, 0, 0, 0, 0, 1859, 1861, 0,
	1866, 1860, 1884, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 1876, 0, 1877, 0, 1879, 0, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 1878, 0,
	1868, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 1852, 1867, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 1878, 0, 3823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 1853, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 1870,
	0, 0, 1880, 0, 0, 0, 0, 0, 0, 1859,
	1861, 0, 0, 0, 1884, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 1876, 0, 1877, 0, 0,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1852, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 1878, 0, 3312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 0, 0, 3311, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	1869, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0, 0,
	3310, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 1866, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1879, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 0, 0, 1868, 1829, 1830, 1831, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 1851, 0, 1852, 0,
	0, 0, 0, 0, 0, 1848, 1866, 1860, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1885, 0, 0, 0, 1878, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	0, 0, 1867, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 1853, 0, 0, 0, 1837, 4918, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 1880, 0,
	1852, 0, 0, 0, 0, 1859, 1861, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 1877, 0, 0, 0, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1878, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1852, 1867, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 1878,
	0, 3309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	4917, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 1866, 1860, 0, 0, 0, 0,
	0, 0, 1832, 0, 1858, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1884, 0, 0, 0, 0, 1853, 1885, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 1871, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 0, 0, 0, 0,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 3274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 1855, 1856, 1857, 0, 0,
	0, 0, 0, 0, 1837, 0, 3374, 0, 0, 0,
	0, 3373, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 1870, 0, 0, 1880, 0, 0, 0,
	0, 0, 0, 1859, 1861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1877, 0, 0, 0, 0, 0, 0, 1846, 1847,
	0, 0, 0, 0, 0, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 0,
	0, 1852, 0, 3245, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 1878, 0, 0,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1867, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2784, 0, 0, 3246,
	0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864, 1873,
	1874, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 1860, 0, 0, 0,
	2783, 0, 1858, 1832, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 1879, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 1871, 0, 0, 0, 1870, 1848, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 1884, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 1855, 1856, 1857, 0,
	0, 0, 0, 0, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845,
	1878, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839,
	0, 0, 0, 0, 1870, 0, 0, 1880, 1867, 0,
	0, 0, 0, 0, 1859, 1861, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 1877, 0, 0, 0, 0, 0, 0, 1846,
	1847, 0, 0, 0, 0, 0, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	0, 0, 1852, 0, 0, 1858, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 1878, 0,
	0, 1851, 0, 0, 0, 1871, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 1853, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 1871, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 1884, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 1872, 1849,
	1845, 1878, 1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 1867,
	1091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 0, 1862, 1863, 1864,
	1873, 1874, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 1860, 0, 0,
	0, 0, 0, 0, 1832, 0, 1858, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	1885, 0, 0, 0, 0, 0, 0, 1829, 1830, 1831,
	1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 1871, 0, 1848, 1866,
	1860, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1884, 0, 0,
	0, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 1855, 1856, 1857,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 1870, 0, 0, 1880, 0,
	0, 0, 0, 0, 0, 1859, 1861, 0, 0, 1854,
	1855, 1856, 1857, 0, 0, 0, 0, 0, 0, 1837,
	0, 1876, 0, 1877, 0, 0, 3380, 0, 0, 0,
	1846, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1829,
	1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 1870, 0,
	0, 1880, 0, 1852, 0, 0, 0, 0, 1859, 1861,
	0, 1866, 1860, 0, 0, 0, 3375, 0, 0, 1832,
	0, 0, 0, 0, 1876, 0, 1877, 0, 1879, 0,
	0, 0, 0, 1846, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 1878,
	0, 1868, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 1852, 1867, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1878, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	1870, 0, 0, 1880, 0, 0, 0, 0, 0, 0,
	1859, 1861, 0, 0, 0, 1884, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 1876, 3804, 1877, 0,
	0, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1884, 0,
	0, 0, 0, 0, 0, 0, 1869, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 1872,
	1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835, 1836,
	1838, 1839, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 1869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833,
	1834, 1835, 1836, 1838, 1839, 1829, 1830, 0, 1862, 1863,
	1864, 1873, 1874, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 1860, 1858,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 1885, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1831, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0, 1871,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	1866, 1860, 0, 0, 0, 3313, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1885, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 1855, 1856,
	1857, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 1859, 1861, 0, 0,
	1854, 1855, 1856, 1857, 0, 0, 0, 0, 0, 0,
	1837, 0, 1876, 0, 1877, 0, 0, 0, 0, 0,
	0, 1846, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875, 1870,
	0, 0, 1880, 0, 1852, 0, 0, 0, 0, 1859,
	1861, 0, 1866, 1860, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 1876, 0, 1877, 0, 1879,
	0, 0, 0, 0, 1846, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1885, 0, 0, 0,
	1878, 0, 1868, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 1852, 1867, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 1855, 1856, 1857, 0, 0, 1853, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 1870, 0, 0, 1880, 0, 0, 0, 0, 0,
	0, 1859, 1861, 0, 0, 0, 1884, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 1876, 0, 1877,
	0, 0, 0, 0, 0, 0, 1846, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1884,
	0, 0, 0, 0, 0, 0, 0, 1869, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834, 1835,
	1836, 1838, 1839, 0, 0, 1878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840, 1841,
	1833, 1834, 1835, 1836, 1838, 1839, 1829, 1830, 0, 1862,
	1863, 1864, 1873, 1874, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1860,
	1858, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 1885, 0, 0, 0, 0, 0, 0, 1829,
	1830, 1831, 1862, 1863, 1864, 1873, 1874, 1875, 0, 0,
	1871, 1851, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 1866, 1860, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1884, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1885, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 1855,
	1856, 1857, 0, 0, 0, 2356, 0, 0, 1837, 0,
	0, 0, 1869, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842,
	1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	1880, 0, 0, 0, 0, 0, 0, 1859, 1861, 0,
	0, 1854, 1855, 1856, 1857, 0, 0, 0, 0, 0,
	0, 1837, 0, 1876, 0, 1877, 0, 0, 0, 0,
	0, 0, 1846, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1829, 1830, 0, 1862, 1863, 1864, 1873, 1874, 1875,
	1870, 0, 0, 1880, 0, 1852, 0, 0, 0, 0,
	1859, 1861, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 1876, 0, 1877, 0,
	1879, 0, 0, 0, 0, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1885, 0, 0,
	0, 1878, 0, 1868, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 0, 1852, 1867,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1854, 1855, 1856, 1857, 0, 0, 1853,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 1870, 0, 0, 1880, 0, 0, 0, 0,
	0, 0, 1859, 1861, 0, 0, 0, 1884, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 1876, 0,
	1877, 0, 0, 0, 0, 0, 0, 1846, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1852, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1884, 0, 0, 0, 0, 0, 0, 0, 1869, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 1872, 1849, 1845, 0, 1842, 1840, 1841, 1833, 1834,
	1835, 1836, 1838, 1839, 0, 0, 1878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1850, 1872, 1849, 1845, 0, 1842, 1840,
	1841, 1833, 1834, 1835, 1836, 1838, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 1023, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 997, 0, 980, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 999, 0,
	0, 0, 0, 0, 981, 0, 0, 0, 0, 984,
	0, 0, 0, 0, 1034, 0, 0, 0, 0, 0,
	0, 0, 1884, 994, 995, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1024, 986, 0, 0, 0, 0, 0, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 0, 0, 0, 0, 0, 1021,
	0, 0, 0, 1869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 1872, 1849, 1845, 0,
	1842, 1840, 1841, 1833, 1834, 1835, 1836, 1838, 1839, 0,
	0, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 990, 0, 0,
	0, 0, 0, 0, 0, 978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 991, 992, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1000, 998, 0, 0, 0, 0, 0, 0,
	993, 0, 0, 0, 1009, 0, 0, 1029, 1028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 1020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 985,
	0, 0, 1033, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 983, 0, 0, 0, 1016,
	1017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 1014, 0,
	0, 0, 0, 0, 0, 0, 1032, 1010, 0, 0,
	1003, 1001, 0, 1006, 0, 0, 0, 0, 0, 1007,
	0, 0, 976, 0, 1027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1018, 0,
	1008, 0, 0, 0, 0, 0, 1005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1030, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1015,
}

var sqlPact = [...]int{
	9397, -1000, -1000, -1000, -1000, 151, -1000, -1000, 150, 145,
	144, 142, 140, 139, 135, 134, 133, 131, 124, -1000,
	-1000, -1000, -1000, -1000, -1000, 123, -1000, -1000, 122, -1000,
	121, 120, 119, -1000, -1000, 118, -1000, 117, -1000, -1000,
	-1000, -1000, 115, 112, 111, 90908, 90347, 91460, 2338, 114872,
	98120, 2092, 80303, 114311, 79742, 113750, 2201, 9566, 113189, 2784,
	110, -1000, 112628, 109, 107, 106, -1000, 112067, -1000, 1939,
	-1000, 105, -1000, 6884, 69635, 104, 103, 102, 101, 2288,
	100, -1000, 99, 98, -1000, -1000, 97, -1000, 11290, 1536,
	-1000, 96, 95, -1000, 366, 95885, 94, 93, 92, 2543,
	91, 90, 67418, 89, 88, 87, 2419, 2878, -1000, -1000,
	2085, -1000, -1000, 86, 85, 84, 83, 81, 72, 67,
	62, 53, 52, 51, 50, 49, -1000, 48, 47, 46,
	45, 44, -1000, 42, 40, 39, -1000, 38, -1000, 36,
	35, 34, 33, 31, 29, 27, 26, 25, 18, 17,
	15, 14, 13, 134260, -1000, -1000, 12, 1927, 1712, 1702,
	1665, 1663, 1655, 979, 11, 10, 9, 8, 7, 0,
	-3, -4, -6, -7, -8, -11, -13, -14, -18, -19,
	-20, -21, 116, -22, -24, -26, -27, -28, -31, -36,
	3427, -1000, 1571, 933, 31360, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 123152, 115424, -40, -99, -41,
	-1000, 3340, 1009, 55575, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 211, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	452, 2333, 686, -1000, -1000, -1000, 111515, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2335, -80, -1000, 2031, -1000,
	-1000, -1000, -1000, -1000, 683, -1000, 2332, 2289, 314, 2278,
	-1000, -1000, -1000, 3429, 2481, 3835, 3834, 3832, 3831, 3829,
	122600, 1863, 3827, 2553, 3826, 3818, 3817, 3816, 3815, 3813,
	3811, -1000, 89786, 1028, 89225, 88664, 3431, 110963, 88103, 110402,
	125369, 47548, 913, 3428, -1000, -1000, -1000, -1000, -1000, -1000,
	115424, -1000, 1027, -1000, -1000, 3810, 2112, 682, 97559, -1000,
	-1000, 109841, 1662, -1000, -1000, -1000, 929, 1165, 33082, 33082,
	33082, 209, -1000, -1000, -1000, -1000, -1000, -1000, 3809, 3808,
	3807, 3806, 3804, -1000, -1000, 79181, 24284, 78620, 78059, 109280,
	23713, 87542, 86981, 3801, 3800, 3799, 108719, 124817, 3539, 3538,
	1025, 2030, 1403, -1000, -1000, -1000, -1000, -1000, -1000, -57,
	71867, 3567, 115424, -1000, 202, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46974, 752, 46400, 570, 45826, 453, 108158, -1000,
	-1000, -1000, -1000, 74153, -1000, 107597, 2477, 3798, 3797, 1115,
	3796, 3304, 1839, 3794, 1861, 1196, 3791, 3790, 3789, 3788,
	3783, 3782, 3777, 1498, 107036, 2984, 1546, 106475, 1717, 124265,
	1024, 86420, 91460, 2650, 105914, 1473, 1467, -1000, -1000, -1000,
	-1000, 3073, 2877, 2872, 1159, -1000, -1000, -1000, -1000, 58972,
	6439, 2138, -1000, -1000, 10097, 105353, 61817, 91460, 91460, -1000,
	-1000, -1000, -1000, -1000, -1000, 45252, 442, 44678, 868, 104792,
	-1000, -1000, 59541, 2934, -1000, -1000, -1000, -1000, -1000, 104231,
	44104, 322, 43530, 866, 115424, -1000, 2983, 1903, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3066, 1600, 3608, 2723,
	73582, 2051, 1426, 3374, 3063, 3062, 1524, 2024, 3057, 3772,
	2653, 3049, 3048, 3047, 3043, 3036, 1647, 2606, 359, 2596,
	30786, 2968, 1703, 42956, 1493, 1522, 3035, 3030, 3619, 2004,
	2035, 2068, 77498, 3767, 3765, 3336, 3024, 3022, 2794, 3009,
	-1000, 2926, 1497, 200, -1000, -1000, -1000, -1000, -1000, -1000,
	1490, -1000, -1000, -1000, -1000, -1000, 81959, -1000, -1000, 1409,
	-1000, -1000, 1409, -1000, -1000, -1000, -1000, -1000, 1296, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2350, -1000, 2110, -1000, -1000, 2554, 3303, 3303,
	3303, 3424, 434, 427, -1000, 116, -1000, -1000, 133585, -1000,
	-1000, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 2209,
	-1000, 679, -1000, -1000, 745, -1000, 678, 595, 520, -1000,
	-1000, -1000, -1000, -1000, -1000, 676, -1000, -1000, -1000, -1000,
	-1000, -1000, 3567, -1000, 27209, -1000, -1000, -1000, 416, 675,
	48122, -1000, -1000, 3638, 3636, 1020, -1000, 197, 950, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2979, 673, 672, -1000, 671, 668, 667, 658, 654,
	-1000, 653, -1000, 652, 651, 649, 648, 647, 626, 625,
	624, -1000, 2049, -1000, -1000, -1000, -1000, -1000, -1000, 567,
	566, 566, 566, -1000, 1017, -1000, -1000, -1000, 304, 565,
	228, 564, 560, 557, -1000, 623, 622, 618, 616, 615,
	605, 604, 603, 600, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1013, -1000, -1000, -1000, -1000, -58, 115424, -1000, 452,
	-58, -1000, -1000, 599, -1000, 35407, 35407, 35407, -1000, -1000,
	2330, 48122, -1000, 2428, -1000, -52, -52, 898, 57261, -1000,
	54431, 898, 303, 754, 62938, -1000, 2923, -1000, -1000, 596,
	195, -1000, -1000, -1000, -1000, 24853, 2922, 115424, 115424, 115424,
	91460, 91460, 91460, 115424, 3764, 3079, 48122, -1000, -1000, 69074,
	127025, 92012, -1000, -1000, 3525, 70194, 68522, 2978, 127025, 2977,
	126473, 3762, -1000, -1000, -1000, -1000, -1000, 3173, 3759, 3758,
	3757, -1000, 115424, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	250, 3172, -1000, -1000, 95324, 250, 3171, -1000, 250, 3170,
	-1000, 94772, -1000, -1000, 2216, 3169, -1000, -1000, 255, 3168,
	-1000, -1000, -1000, 254, 3167, -1000, -1000, 183, -97, 3155,
	-1000, -1000, -1000, -1000, -1000, -1000, 133585, -1000, -1000, -1000,
	125921, -1000, 3330, -1000, 115424, -1000, 48122, -1000, -1000, 3524,
	1656, 3378, 3464, -1000, -1000, -69, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2535, 2513, 1152, 2367, -1000, 3207, 1342,
	33082, 3291, -1000, -1000, -1000, -1000, -1000, 180, 24853, -1000,
	-1000, -1000, -1000, -1000, -1000, 4832, 3154, 1131, -1000, 2365,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2113,
	3152, -1000, 2013, 3146, 2052, -1000, -1000, 1620, -1000, 3324,
	1347, 1554, -1000, -1000, -1000, -1000, -1000, -1000, 2292, 3144,
	-51, -1000, -1000, 2230, -1000, -1000, -1000, -1000, 1991, -1000,
	1320, 3143, -1000, 2722, 2722, 85859, 3133, 61248, 59541, 71867,
	-64, -1000, -1000, -1000, -125, -1000, 23138, 133585, -1000, -1000,
	-1000, -1000, 1805, 133585, 879, -1000, -1000, 3138, -1000, 133585,
	878, -1000, -1000, 3136, -1000, 2603, -1000, 2972, -1000, -1000,
	2432, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2431,
	-1000, -1000, 3756, -1000, -1000, 3755, -1000, 3751, 3750, 3749,
	-1000, 1714, 2016, 3746, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 85307, 2329, -1000, -1000, 84185, 2970, -1000, 2430,
	3463, -1000, 84746, 1022, -1000, 966, 2429, -1000, 94220, 993,
	2421, -1000, 3743, 3417, 2680, 966, 2420, -1000, -1000, -1000,
	-1000, -1000, 970, -1000, 65178, -1000, 65178, -1000, 1639, -1000,
	122048, -52, 91460, 3567, -1000, -102, -1000, -1000, -1000, 1009,
	-1000, 58398, -1000, 58398, 96998, 74722, 953, 2918, 66856, 133199,
	-1000, 996, -1000, -1000, 133585, -1000, -1000, -1000, 2597, -1000,
	-183, 2721, -1000, 74722, 60679, 2589, -1000, 133585, -1000, -1000,
	-1000, -1000, 133585, -1000, -1000, -1000, 74722, 84185, -1000, 103670,
	83633, -1000, -1000, 1492, 2570, -1000, -1000, -1000, 74722, 1328,
	74722, 74722, 74722, -1000, 103109, -1000, -1000, 2075, 1633, 3326,
	2069, 91460, -1000, 1842, -1000, -1000, -1000, 3350, 3127, 115424,
	-1000, -1000, 2969, -1000, 71315, 93668, -1000, 93116, -1000, 92564,
	-1000, 91460, -1000, 91460, -1000, 3742, 3741, 3737, -1000, -1000,
	3735, -1000, 3734, 3341, -1000, 778, 42382, 133585, 3328, -1000,
	3733, 2046, 2968, 133585, -1000, 3123, 1660, 1653, 115424, -1000,
	-1000, 115424, -1000, 115424, -1000, -1000, -1000, 1560, -1000, -1000,
	2533, -1000, -1000, -1000, -1000, 91460, 91460, 91460, 91460, 1233,
	-1000, 41808, -1000, -1000, 3013, 3732, 1767, -1000, 1841, -1000,
	2917, 3312, -1000, 1484, 1781, 179, 3644, -1000, -1000, 256,
	-1000, -1000, -69, -1000, 121496, -1000, 2554, -1000, 115424, -1000,
	2527, 2957, 2967, 1487, 2345, 2634, -1000, 41234, 2615, 51566,
	2363, 116, -1000, -1000, 116, 116, 32508, -1000, -1000, 70194,
	70194, 24853, 1309, 48122, 48122, 48122, 48122, 48122, 48122, 48122,
	48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122,
	48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122,
	48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 48122, 2114,
	48122, 1293, 48122, 48122, 48122, 48122, 1999, -1000, -1000, 1972,
	471, 2070, 595, -1000, -1000, -1000, 3574, 3574, 3574, 378,
	378, 378, 133850, 133850, 475, 3729, 745, -1000, 48122, -1000,
	71, 57820, 48122, 25424, -1000, 427, 6905, 2546, -1000, 426,
	26027, -1000, -1000, -1000, 27209, 520, 40631, 48122, 1004, 133585,
	-1000, -1000, 1454, 3598, 22563, 2992, 2772, 594, 808, 800,
	30183, 29580, 28977, 28374, 784, 783, 48122, 48122, 48122, 48122,
	48122, 48122, 48122, 48122, -1000, -1000, 3610, -1000, 3598, -1000,
	-1000, -1000, -1000, 3598, 1308, 1307, 3598, -1000, 3598, 3598,
	8551, 8551, 40057, 39483, 38909, 52140, 38335, 48122, 27800, 37761,
	37187, -1000, 115424, -58, 3522, 48122, 306, -1000, 131652, -1000,
	306, 306, 590, -104, 133585, 2618, 2618, 56137, 2377, 2231,
	2231, 2231, -1000, 898, 17354, 898, 101446, 2240, 898, 898,
	178, 206, 421, 53862, 2428, 101446, 734, 579, -42, -43,
	-45, -1000, -1000, -46, -47, -1000, -1000, 91460, 572, 25424,
	24853, 174, 2022, -105, 2625, 2623, -1000, 2614, 2613, -1000,
	2612, 2326, -1000, -1000, 1809, -110, 1291, 91460, 115424, 1375,
	3728, -116, -1000, 6055, -113, -1000, 1297, 173, 3598, -1000,
	-1000, -1000, -1000, -1000, 3727, 3726, -1000, 1011, 571, 569,
	377, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 567,
	566, 566, 566, -1000, 304, 565, 228, 564, 560, 557,
	-1000, -1000, -1000, -1000, -1000, 2916, 91460, 115424, 1366, 3724,
	80855, -97, 92012, -112, -1000, -1000, 115424, -1000, -1000, -1000,
	3722, -1000, 91460, -1000, -1000, 91460, 250, 3135, -1000, 91460,
	-1000, 91460, 241, 3134, -1000, -1000, 115424, -1000, 91460, 91460,
	-1000, 115424, 115424, 115424, 127025, 127025, 237, -1000, 91460, 832,
	-115, 1121, -69, -1000, -1000, -1000, -1000, 1409, -1000, 1875,
	-1000, -1000, -1000, -1000, -1000, -1000, 1507, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1020, -1000, -1000, -1000, -1000,
	-1000, -1000, 3596, 3594, -61, -1000, -1000, 24853, -1000, -70,
	1724, 1891, 1288, -1000, 76937, 2334, 3327, 3721, 2668, 3315,
	1636, -1000, 1557, -1000, 3423, 81959, 3481, 3492, 1339, -1000,
	2913, -1000, -1000, -1000, 924, 1766, 1759, 1287, 1285, 81959,
	2013, -1000, 70194, -1000, 2661, 3421, 1361, 1386, 1361, 1361,
	1355, -1000, 81959, 1745, 1283, 1279, 1277, -1000, -1000, 1963,
	1960, -1000, -1000, 102557, -1000, 1274, 1272, 3537, 2350, 2156,
	796, 1958, -1000, 1270, 2912, 2903, -1000, 1334, -72, 3480,
	3491, 1331, -1000, 2901, 1268, -1000, -1000, -1000, 3420, 91460,
	24853, 1551, 1550, 1545, 1741, 1266, -62, -1000, 3475, 1253,
	1252, -1000, 1033, 5154, 3268, -1000, 127025, 1033, 1033, 2019,
	3131, 2711, 1570, -1000, 2718, 895, 2717, -1000, -1000, -1000,
	895, -64, 71867, 115424, 172, -1000, 71, 48122, 48122, 71,
	48122, 71, -1000, 3451, 3128, 3125, -1000, -1000, -1000, -1000,
	-1000, 3720, 1982, 2552, -1000, -1000, 556, 2418, 2900, 115424,
	2632, -66, 91460, -1000, 70763, 3124, 127025, 2013, 2415, -1000,
	-1000, 83072, -1000, 3122, 452, 2414, -1000, 643, 3716, 3120,
	-1000, 120944, -1000, 3330, 1319, 3106, 1059, 835, 3521, -1000,
	835, 65738, -1000, 115424, -1000, -52, 424, 75833, -118, -120,
	420, -1000, 102005, 115424, 115424, 3278, 1997, 1993, -1000, 963,
	59541, -1000, 59541, -123, -1000, -183, 2716, 1526, -1000, 953,
	953, 895, -1000, 895, -1000, 91460, 2965, -1000, -1000, 74722,
	953, 953, 953, -1000, -1000, -1000, -1000, 3715, 3714, 3713,
	3709, -1000, -1000, 964, 91460, 115424, 91460, -1000, -1000, 1569,
	-1000, 170, -1000, 127025, -1000, 127025, 115424, 91460, -1000, 964,
	115424, 964, 115424, 964, 115424, 964, 964, -1000, -1000, -1000,
	-1000, -1000, 71, -1000, -1000, 133585, -1000, 48122, -1000, -1000,
	1552, 3708, 1668, -1000, 2960, -1000, 2958, -1000, -9, -1000,
	-1000, 1847, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3707, 133585, -1000, 2088, -1000, -1000, -1000, -1000, 91460,
	91460, 91460, 91460, 115424, 3264, -1000, 115424, 3257, 91460, -1000,
	3640, -1000, -1000, 81959, -1000, 2527, 2957, -1000, -1000, -1000,
	-1000, -1000, -1000, 1450, 2300, -1000, 2575, -1000, 1581, -1000,
	-1000, -1000, 133585, 52714, -1000, -1000, 133585, 1819, -1000, 50992,
	50418, -1000, -1000, 1775, 91460, 2635, -1000, 2635, -96, -1000,
	131524, 2569, 91460, -1000, -1000, -1000, -1000, -1000, 923, 559,
	559, 1182, 1182, 1182, 1182, 3434, 8312, 5168, 7801, 9878,
	9878, 5744, 5744, 5744, 5744, 5744, 9878, 7090, 378, 378,
	7090, 7090, 7090, 7090, 7090, 378, 378, 378, 9878, 9878,
	9878, 378, 133850, 133648, 10855, 48122, 48122, 1251, 1969, 471,
	10120, 48122, 11963, 11963, 11963, 11963, -1000, 2190, -1000, -1000,
	-1000, -1000, 2898, 551, 52140, 52140, -1000, -1000, -1000, -1000,
	26618, 48122, -1000, -1000, -1000, -1000, 36584, -1000, -1000, 130830,
	-316, 419, -1000, 168, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 418, -95, 68,
	-1000, 48122, 48122, 48122, 412, -1000, 167, 48122, 115424, -1000,
	16641, 731, -141, -1000, -129, 1428, -1000, 48122, -1000, -1000,
	1248, -1000, 1247, 1245, 1242, -1000, 550, 409, -1000, 165,
	-1000, 2212, 545, 544, 48122, -1000, -1000, -1000, -1000, -1000,
	130628, -1000, -1000, 130237, -1000, -1000, 130035, -1000, -1000, 129972,
	-1000, -1000, -1000, -1000, -1000, 132997, 16444, 16160, 15782, 5406,
	15468, 15022, -130, 404, -131, 402, 921, 912, 400, 397,
	395, -132, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -138, 394, -1000, 2896, -95, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 391, -1000, 390,
	-1000, 132934, -95, 386, 2298, -1000, 52140, 52140, 52140, 52140,
	-1000, 383, -1000, 131271, -1000, 132548, 36010, 36010, 36010, 381,
	132346, 48122, -95, -144, -1000, -145, -1000, -1000, 478, -146,
	1001, 35407, 55013, 24853, -1000, 1001, 1001, 48122, -1000, 48122,
	2583, -1000, -1000, -1000, -1000, 2582, 1916, 2618, 56137, -1000,
	-1000, -1000, -1000, 101446, -1000, 3567, 2732, -1000, 101446, -1000,
	-1000, 115424, 452, -1000, 101446, 101446, 24853, 898, -1000, 898,
	101446, 588, -1000, -1000, -1000, -1000, -1000, 380, 63500, 68,
	160, 24853, 966, -1000, -1000, 2719, 2719, 2719, 2719, 2719,
	91460, -1000, -1000, 127025, 1238, -67, -126, 2714, -1000, 3543,
	-1000, 2066, -1000, 70194, -1000, 742, 1130, 24853, -1000, -1000,
	-1000, 542, -1000, 3598, 3598, -1000, 3598, 127025, 2895, 266,
	2713, -1000, 2324, -65, 258, 127025, 3705, -1000, -1000, 250,
	-1000, 91460, 250, 250, -1000, 91460, 91460, 2216, -1000, 255,
	-1000, 254, -1000, -1000, -97, -1000, 995, 33082, -1000, 1409,
	-1000, -1000, 1555, -1000, 1987, -1000, 1305, -1000, -1000, -1000,
	-1000, 33082, -1000, 2229, 115424, 115424, 91460, -1000, 115424, -1000,
	2137, 127025, -1000, 2411, 120392, 2389, 119840, 70194, -1000, -1000,
	541, 938, 2568, 2567, 1057, 115424, 115424, 2565, 119288, 118736,
	-1000, 3696, 115424, 2081, 48122, 3418, 2155, 2479, 71, 71,
	-1000, 71, 71, 71, 540, 1241, 91460, 91460, 115424, 127025,
	91460, 1981, -1000, -1000, -1000, -1000, -1000, 82511, -1000, -1000,
	3609, 3606, -1000, 1361, -1000, -1000, -1000, 1361, 2013, 1929,
	115424, 127025, 91460, 127025, 118184, 117632, -1000, -1000, 1740, 115424,
	-1000, -1000, -1000, -1000, 1509, -1000, 796, 3567, 3567, 3567,
	1225, 2894, 2893, 2111, 71, 71, -1000, 71, 71, 71,
	538, 24853, 1985, -1000, 2953, 115424, 3635, 117080, 3634, 115424,
	115424, 115424, 127025, 3306, 115424, 115424, 127025, -1000, 116528, 5154,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2079, 73011, 1069, 115424, 1320, -1000, -1000, 1711, 1224,
	1222, 81959, 2128, 1709, 1844, 127025, 59541, 962, 59541, 2697,
	-1000, -1000, 21988, -1000, 133585, 133585, -1000, 133585, -1000, 70763,
	74722, 115424, -1000, 1021, 115424, 76385, 939, 3102, 64618, -125,
	953, 74722, 91460, -66, 2632, 115424, -1000, -1000, 2013, 3091,
	452, 2410, -1000, 127025, 3520, 3088, 537, 3694, 3689, -1000,
	91460, 2321, 2404, -1000, -1000, 115976, 3137, 796, 115424, 1001,
	56137, 1988, -1000, 62379, 1038, 115424, 1845, 225, -1000, -1000,
	-1000, -29, 115424, -1000, 677, -1000, -1000, 424, 424, 953,
	-155, 535, -1000, 871, 869, 60110, -156, -1000, 159, 522,
	867, 863, -1000, 3786, -1000, -183, -1000, 74722, 963, 59541,
	2892, 2889, -1000, -1000, 994, -1000, 1441, 953, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -53,
	1837, 115424, -97, -97, -78, -67, -1000, 964, -1000, 964,
	-1000, 964, -1000, -1000, -1000, 133585, -1000, -1000, -1000, 1666,
	1649, 115424, -1000, -1000, 115424, -1000, 24853, 115424, 91460, 24853,
	91460, 2956, 2952, -1000, -1000, -1000, 115424, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1085, -1000, 1819, 2296, -1000,
	520, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2505, -1000, -68, 32508, 902, -1000, -1000, 91460, -54, 48122,
	48122, 8443, 8189, 48122, 52140, 52140, -1000, 48122, 8059, -1000,
	-1000, -1000, -1000, -1000, 2887, 519, 48122, 70194, 7428, 7370,
	-1000, 375, 14061, 7090, -1000, 48122, -1000, 646, -1000, 363,
	34833, -1000, 131905, -39, -158, -1000, 17942, -95, -161, -1000,
	-1000, 741, -1000, 3070, -1000, 48122, 132283, 2471, 2154, 1869,
	1671, 3598, 3633, 21413, -1000, 66297, 1002, 2250, 129770, -1000,
	-1000, -1000, -1000, 70194, 70194, 48122, 48122, -1000, 48122, 48122,
	48122, -1000, -1000, -1000, 3598, 922, -1000, -1000, -1000, 922,
	-1000, -1000, 1361, -1000, 1361, -1000, 48122, -1000, -1000, 2884,
	48122, -1000, 70194, 70194, 52140, 52140, 52140, 52140, 52140, 52140,
	52140, 52140, 52140, 52140, 52140, 52140, 52140, 52140, 52140, 52140,
	52140, 52140, 52140, 52140, 2566, 52140, 3572, 3572, 3572, 617,
	-1000, 2949, 2884, 48122, 48122, 70194, 353, 350, 349, -1000,
	48122, -95, -1000, -1000, 8267, 518, -1000, 2497, -1000, 2769,
	-1000, 48122, -1000, -175, -1000, 2428, -1000, -1000, 2769, 2769,
	-164, 133585, 56137, 56137, -1000, 516, 48122, 2581, -1000, -1000,
	729, -317, -1000, 860, -1000, -1000, -1000, -1000, -1000, -1000,
	859, -1000, 452, -1000, -1000, -1000, 155, 101446, 101446, 727,
	-1000, -166, -1000, -1000, -169, -1000, 3518, 348, 24853, -1000,
	1001, 2640, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2573,
	-266, 127025, 127025, 1705, 2277, 3629, -1000, 3605, 739, 725,
	153, 3598, 347, 340, 339, -97, 127025, 127025, 1700, 67970,
	127025, -1000, -1000, -1000, 250, -1000, -1000, -1000, 241, -1000,
	-1000, -1000, -1000, 2689, -1000, -69, -1000, -1000, -1000, 48122,
	-1000, -1000, 3323, 1221, 1220, -1000, -1000, -1000, 2875, -1000,
	3087, -1000, 2402, -1000, 1044, 2400, 1568, -1000, 48122, 515,
	2674, 513, 511, 3672, 2094, 3671, 1058, 3081, 2216, 3077,
	2216, -1000, -1000, -1000, 917, -1000, 133585, 2155, -1000, 510,
	499, -1000, -70, 1722, 1826, 1218, 991, -1000, -1000, -1000,
	-1000, 48122, 48122, 100894, -1000, 446, 3324, -55, -1000, -1000,
	-1000, 1684, 1208, 1204, -1000, -1000, -1000, -1000, 2013, 1682,
	1200, 1198, -1000, -1000, -1000, -1000, -1000, 2399, -1000, -1000,
	3076, 990, -1000, 3016, 3014, 903, 115424, 2951, 1197, 1191,
	3567, 3567, 3567, -1000, 989, -1000, -1000, -1000, -1000, 48122,
	-1000, -72, 1178, 3465, 2398, 91460, -1000, 2216, 3074, 1168,
	-1000, 1162, -1000, -1000, -1000, 3474, 3472, 1181, -1000, -1000,
	-1000, 74722, -1000, -1000, 72442, -1000, -1000, 1033, 115424, 127025,
	91460, 1827, -1000, -1000, 80855, 81407, 115424, 2711, -97, 895,
	-1000, 2500, 895, 962, 2873, -1000, 2630, -1000, 983, 91460,
	3670, 337, -172, -73, 70194, -1000, -1000, -1000, -1000, 2389,
	91460, 115424, 1316, 2652, 115424, 115424, 3517, -1000, 2342, 562,
	91460, 901, -1000, 3567, -1000, -1000, -1000, 967, -1000, 3457,
	91460, 3515, 3072, 966, 71, 91460, 3614, -1000, -1000, 3513,
	91460, 3069, 2317, 2397, 2542, 796, 75281, 966, 2246, -88,
	-1000, 1845, 34230, 3319, -174, -1000, -1000, -1000, 1001, 65738,
	56137, 48122, 3669, -181, -1000, -1000, -1000, -1000, -1000, 98679,
	98679, 74722, 74722, 74722, 953, 115424, 115424, 3668, 74722, 74722,
	74722, -74, 498, -1000, 854, 846, 845, -1000, -1000, -1000,
	-1000, -1000, -1000, 842, 831, 963, -1000, -1000, -183, 59541,
	71, -1000, 2274, 91460, -1000, 20838, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 964, -125, -1000, -1000, 2117, 2354, 2117,
	1831, 1824, -1000, -1000, 2294, -1000, -1000, -1000, -1000, 2639,
	3293, 24853, 3449, 11963, 48122, 48122, 6641, 6769, 719, 11963,
	48122, 48122, 70194, 12670, -186, 48122, 48122, -1000, 48122, 723,
	133585, -1000, 3628, 48122, 336, 335, -1000, -1000, -1000, 3589,
	-1000, -1000, -1000, 133585, 48122, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 327, -1000, 147, -1000, -1000, -1000, 123704, -1000,
	48122, 317, 3416, -1000, 311, 305, 10918, 592, 129379, 129177,
	129114, 295, -1000, -1000, 289, 288, 133585, 2949, 133585, -1000,
	-1000, 915, 915, 1354, 1354, 1354, 1354, 3572, 670, 1139,
	536, 1039, 1039, 1039, 1099, 617, 617, 1039, 1039, 1039,
	617, 2866, 2562, 497, 6624, -1000, -1000, 133585, 133585, 287,
	-1000, -1000, -1000, -95, 284, 8267, -1000, 2759, 3414, 133585,
	-1000, 56137, 2759, 2759, -1000, -1000, 1916, 115424, 133585, 56137,
	-1000, 2732, -1000, 19108, 18528, -1000, 24853, -1000, -1000, -1000,
	-1000, 3567, -1000, 63500, -1000, 495, -1000, -38, -1000, 2640,
	-1000, 830, -1000, -1000, 74722, 74722, 2719, -1000, 2792, -266,
	-180, 115424, -1000, -1000, 706, 3666, 736, 24853, 283, -1000,
	-1000, -1000, -97, -97, 115424, 2862, 91460, 115424, 1323, -97,
	-1000, -1000, -1000, 3277, 133585, 115424, 115424, 1488, 100342, 115424,
	3067, -1000, 3060, -1000, 1057, 5037, 128912, 56699, -1000, 56699,
	115424, -1000, -1000, -1000, -1000, 1901, 1449, 3665, 1107, -1000,
	3364, 115424, -1000, 115424, -1000, -1000, -1000, 115424, 115424, 91460,
	115424, -1000, 127025, 3019, -187, 133585, -75, -1000, 829, -1000,
	1358, -1000, 20263, 115424, 127025, 91460, 115424, 127025, 91460, 3056,
	115424, 2195, -1000, -1000, 3005, -1000, 71, 3567, 3567, -1000,
	1161, 1160, 2975, -194, 24853, -1000, 3623, 3622, 3054, 3368,
	-1000, 115424, 3621, 115424, 91460, 3276, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1681, 1158, 1157, 2313, 2310, 2276, -78,
	2128, 962, -82, 494, -1000, 828, -1000, -1000, 823, 813,
	962, -1000, 74722, 59541, 3664, 452, -1000, 2651, -1000, 96437,
	76385, 2244, -1000, -1000, 491, 115424, 115424, 490, -1000, 71,
	-1000, 3662, 99238, 489, -1000, 2273, -1000, 699, -1000, 2487,
	127025, 2013, 71, 91460, -1000, -1000, 452, 274, -84, -1000,
	3053, 1051, 24853, 91460, 3046, 2544, 796, 75281, -1000, 1319,
	2634, -1000, -87, -1000, 606, 71, 2246, -1000, -88, 133585,
	-1000, 812, -1000, -196, -1000, -1000, 273, -1000, 3274, -1000,
	-1000, -197, -1000, -1000, 3348, 3348, 74722, 59541, 74722, 74722,
	74722, -1000, 963, 895, -1000, 2364, -1000, -1000, -1000, -1000,
	-1000, 24853, 1723, -1000, 487, 486, -1000, -1000, -1000, -1000,
	3293, 11963, 11963, 48122, 48122, 48122, 11963, 12670, -204, -1000,
	11963, 11963, -95, -1000, -1000, 131905, -1000, -1000, -1000, 133585,
	-1000, 19688, 2158, -1000, 128521, -1000, 32508, -1000, -1000, 48122,
	48122, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52140,
	2857, 485, 70194, -1000, -1000, 257, 998, 48122, 49844, 2428,
	998, 998, -1000, -207, -1000, -1000, -1000, 3567, -1000, 3567,
	-38, -1000, -1000, 3661, 24853, -1000, 74722, -1000, -1000, -1000,
	2247, -1000, -1000, 2988, -205, 694, -1000, 3660, -1000, -1000,
	191, 127025, 2856, 146, 2707, -1000, -1000, -1000, 2706, 3510,
	-1000, 1956, -1000, 115424, 115424, -1000, 115424, -1000, 24853, 115424,
	2795, 1235, -1000, 938, 2564, 484, 52140, 1084, 91460, 826,
	2742, 2737, -1000, 3534, 3406, 2771, -215, -1000, 115424, 48122,
	115424, -216, -223, 2381, -1000, -1000, 1081, 1234, 48122, 1078,
	-1000, -1000, -1000, 70194, 483, 2216, 2216, -224, -225, -1000,
	-1000, -1000, 48122, 1156, 115424, 33656, -1000, 3659, 3324, -1000,
	-1000, -1000, -1000, -1000, -1000, 115424, -1000, 115424, -1000, -1000,
	2948, 2946, 3567, 3567, 48122, 1148, -1000, -1000, -1000, 3620,
	2216, 24853, 2216, -1000, 2216, 3368, 1096, 115424, 127025, 91460,
	1754, 1754, 2943, -1000, -1000, -1000, 2551, 2551, 74722, 59541,
	59541, -1000, -89, 962, -1000, 3502, 2124, 3658, -1000, -1000,
	-1000, -1000, 2561, -1000, -1000, -1000, 115424, 2560, 2783, 56699,
	481, 480, 115424, 955, -1000, -230, -1000, 811, 810, 76385,
	939, 940, -1000, -90, 479, -1000, 798, -1000, -1000, -1000,
	-1000, 452, 3501, -1000, 3618, 477, 476, 115424, 2309, 472,
	24853, 3317, 796, 75281, -1000, 3137, 1845, -1000, 2386, 115424,
	3313, -1000, 2634, 471, -1000, 953, 470, 953, -1000, -231,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -91, -1000, 838,
	693, -1000, -1000, 91460, 91460, 48122, 48122, -1000, 11963, 11963,
	11963, -1000, 243, -1000, -1000, 2246, 3394, -1000, -92, 128319,
	128256, 5825, 52140, 70194, -233, -1000, -1000, 115424, 133585, -93,
	-1000, 133585, 469, 468, 408, -1000, -1000, -1000, 697, 688,
	-1000, -1000, -1000, -1000, 127025, 3656, -1000, 127025, -97, 127025,
	127025, 1680, 99790, 115424, -1000, -1000, 1568, 1692, -1000, -1000,
	-1000, 115424, 2394, -1000, -1000, -1000, 1055, 48122, 6624, 52140,
	467, 48122, -1000, 466, 462, 3500, 3212, -1000, 2647, 2820,
	2020, 56699, -1000, 3293, -1000, 127877, -1000, 1048, 1967, -1000,
	-1000, -1000, -1000, 133585, 52140, 3368, 56699, -1000, -1000, 460,
	459, 133585, 458, 797, 2852, -1000, -1000, -1000, -1000, -1000,
	71, 71, -1000, -1000, 133585, 457, 3465, -1000, -1000, -1000,
	-1000, 2216, 91460, -1000, -1000, -1000, 1129, -1000, -1000, -1000,
	-1000, 3655, 3654, 2850, 80855, -1000, -236, -1000, -1000, -1000,
	1971, 71, 939, -1000, -1000, 2244, 456, -1000, -1000, 2628,
	2628, -238, 56699, 56699, -241, 2293, 2681, -1000, 99238, 33082,
	33082, 238, 3499, 940, -1000, 3563, -1000, 3262, 3262, 48122,
	3498, 71, -1000, 3614, 56699, -1000, 91460, 56699, 2308, 2043,
	2529, 75281, -1000, 2542, -1000, -1000, -243, 115424, 1845, -1000,
	-1000, 74722, -1000, -1000, 2364, -1000, 115424, -1000, 115424, -1000,
	-1000, -244, -249, -1000, 2073, 48122, 32508, -1000, -1000, 5825,
	-250, -1000, -94, -1000, 3490, 49844, 3653, 3652, 3651, -1000,
	-1000, -266, -1000, -97, -97, -97, 115424, -1000, 1947, -1000,
	2389, -1000, -1000, 3037, 2756, 127624, 6624, 2506, 115424, 127587,
	2013, 2013, -1000, 3489, 2818, -1000, -1000, 2111, 455, -1000,
	-1000, -1000, -1000, 902, 115424, -1000, 2755, 91460, 6624, 1052,
	-251, 2117, 2117, 48122, 31934, 2192, -1000, -1000, 48122, -1000,
	-1000, 3368, 127025, -1000, -1000, 127025, 2305, -1000, 2829, 3588,
	-1000, 2293, 115424, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1048, -252, -257, -1000, -1000, 3356,
	-1000, 3271, -1000, -1000, -1000, 2651, 71, -1000, -1000, -1000,
	-258, 133585, 71, -1000, 236, -259, 1051, -260, 91460, 1946,
	-1000, 796, -1000, 2544, 1001, -1000, -1000, -265, -1000, -268,
	-270, -1000, -1000, 235, 49270, 49270, 49270, -95, -96, -1000,
	115424, 454, -1000, -1000, -1000, -1000, -1000, 141, -1000, -1000,
	3001, 961, -1000, 876, 1858, 234, 1065, 232, 231, -1000,
	-1000, -1000, 2771, -1000, 115424, -1000, -1000, 959, 452, -1000,
	48122, 1048, -273, -1000, 1037, -275, -1000, 1035, -278, -1000,
	2845, -1000, -280, 2216, -266, 237, 1754, 957, 3448, -1000,
	-1000, -1000, 2518, -281, -1000, -1000, 2020, 1048, 2111, 2388,
	-1000, 2124, 955, -1000, -1000, -1000, 1048, 447, 2020, 444,
	1517, 796, -1000, -1000, 1361, 3317, 3148, 953, -1000, -1000,
	-1000, 3038, -1000, 53288, 2348, 1822, 130893, 3038, 3038, -1000,
	-1000, 127025, 115424, 3432, -1000, 881, 877, 1485, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1001, -286, 3422, 2506,
	133585, -1000, -1000, 2117, 2702, -1000, 2117, 2843, -1000, 2184,
	-1000, -1000, -1000, -1000, 2841, -1000, 1777, 3571, -1000, -1000,
	-1000, 115424, 2111, 2020, 952, 1802, 1800, 3648, 939, 2293,
	2020, 56699, 2111, 56699, 2102, -1000, 115424, -1000, 2043, 1280,
	-1000, -1000, 1890, 3496, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -97, -1000, 793, -1000, 3145, -1000, 1074, 2095, 2095,
	-1000, -1000, 789, 876, -1000, 439, -1000, 438, -1000, 127025,
	2267, -1000, -1000, -1000, 952, 2111, 1001, 437, -1000, 3647,
	-1000, 2293, -1000, 2111, -294, 952, -295, -1000, -1000, -1000,
	-125, 1946, -1000, 1630, 1821, -1000, -1000, 2232, 48696, 48122,
	-1000, 3546, -1000, -1000, 2590, -1000, 48122, 2771, 48122, 48122,
	237, 64059, 1001, 952, -1000, -1000, 2518, 952, 1048, 1001,
	2020, 1517, 65738, -1000, -1000, -1000, 133585, -1000, -1000, -1000,
	133585, -1000, -297, -300, -1000, -155, 98679, -1000, 1001, -1000,
	1001, 2020, -1000, 2111, 2102, -267, 2111, 1127, -305, -1000,
	-1000, 2111, 952, -1000, -1000, -1000, -1000, 436, -1000, 952,
	1001, 48122, 1001, -1000, -308, -1000, 2111, -1000,
}

var sqlPgo = [...]int{
	0, 4500, 4499, 4498, 4497, 4494, 4491, 4487, 4484, 4482,
	4481, 4480, 4477, 170, 4475, 4474, 4473, 4469, 4464, 4463,
	4455, 4451, 4447, 4436, 4434, 4433, 4431, 4428, 4425, 4424,
	4423, 4422, 4419, 4418, 4417, 4416, 4414, 4413, 4412, 4410,
	4409, 4407, 4406, 4405, 4401, 4398, 4397, 4383, 4380, 4378,
	4377, 4376, 4375, 4374, 4373, 4371, 4369, 4368, 4367, 4366,
	4365, 4364, 4363, 4362, 4361, 4359, 4357, 4355, 4352, 4351,
	58, 4350, 4349, 4346, 4345, 4344, 4342, 4338, 4335, 4334,
	4333, 4332, 4331, 4330, 4328, 4327, 4326, 4324, 4323, 4321,
	4318, 66, 4316, 283, 4314, 4313, 4312, 4310, 4308, 4307,
	4306, 4305, 4303, 4302, 4299, 4298, 281, 4297, 138, 164,
	4294, 4292, 3838, 4291, 4289, 279, 4288, 4287, 4286, 4285,
	4283, 287, 4282, 4278, 4276, 4275, 4274, 4273, 4272, 4271,
	4268, 4267, 4266, 4265, 112, 217, 4259, 4258, 3305, 4256,
	4255, 4253, 4252, 4250, 4248, 4247, 4246, 4245, 4244, 4242,
	253, 177, 4241, 278, 4236, 4235, 4234, 4233, 4228, 4227,
	4226, 4225, 4221, 4220, 4219, 4218, 4216, 4214, 4213, 4206,
	4204, 4203, 4201, 4200, 4197, 4196, 4192, 4188, 4186, 4185,
	4183, 4175, 4170, 4169, 4168, 4167, 4163, 4158, 4148, 4147,
	4146, 4143, 4141, 251, 223, 124, 4138, 4137, 274, 273,
	4133, 4125, 4123, 4122, 4121, 134, 16, 48, 4120, 4119,
	122, 95, 91, 105, 106, 104, 4118, 114, 4117, 132,
	73, 4116, 21, 4, 270, 247, 12432, 242, 4115, 4114,
	4113, 249, 203, 4111, 248, 4109, 4108, 4106, 4105, 4097,
	4094, 72, 52, 185, 184, 186, 182, 33, 56, 108,
	83, 57, 42, 19, 109, 221, 18, 5, 267, 4092,
	266, 9, 154, 12, 32, 4091, 4090, 4089, 4088, 3629,
	115, 4087, 272, 250, 178, 4086, 4085, 4084, 758, 4083,
	4080, 53, 4079, 210, 85, 143, 80, 142, 4077, 159,
	172, 38, 4075, 168, 64, 4073, 166, 101, 98, 8642,
	11090, 4072, 4071, 136, 82, 128, 3398, 165, 160, 204,
	208, 175, 176, 54, 214, 212, 183, 141, 4070, 261,
	4069, 3499, 81, 191, 158, 5219, 4067, 4066, 4065, 87,
	4063, 110, 4062, 4061, 68, 15, 3, 1, 162, 35,
	49, 2, 4060, 23, 127, 51, 29, 4059, 24, 4057,
	4055, 4051, 4050, 4049, 39, 173, 4046, 4044, 286, 4042,
	88, 55, 43, 4040, 30, 227, 4037, 236, 148, 4036,
	4035, 264, 207, 189, 4034, 69, 239, 4033, 4030, 4028,
	4020, 4019, 4012, 137, 7, 135, 4011, 4007, 150, 4006,
	61, 245, 200, 4005, 70, 4004, 4002, 180, 63, 149,
	285, 197, 229, 123, 234, 199, 238, 4001, 4000, 3999,
	219, 3997, 3996, 225, 157, 3994, 3990, 258, 288, 89,
	45, 86, 243, 90, 202, 163, 3988, 206, 3987, 3985,
	276, 187, 228, 8, 17, 93, 113, 3982, 6, 246,
	161, 237, 126, 3981, 7278, 2536, 2205, 3978, 3977, 153,
	130, 79, 133, 167, 271, 102, 3975, 3974, 2711, 3973,
	3972, 3971, 3970, 193, 3969, 3967, 3966, 151, 213, 216,
	3963, 92, 77, 46, 22, 131, 254, 275, 125, 230,
	179, 262, 3962, 3961, 3959, 201, 3957, 76, 117, 171,
	205, 260, 60, 3956, 120, 3955, 155, 293, 71, 156,
	3954, 233, 3953, 3952, 3950, 3946, 3945, 3944, 3942, 256,
	232, 3941, 3940, 3939, 34, 198, 3937, 269, 190, 296,
	949, 94, 3936, 107, 2304, 3935, 97, 226, 67, 196,
	121, 3934, 1474, 59, 3932, 0, 12925, 8061, 10810, 11683,
	3931, 5454, 3929, 3927, 3926, 224, 84, 3925, 3924, 3922,
	116, 3921, 96, 3920, 3919, 78, 3917, 36, 10, 11,
	25, 20, 192, 174, 3914, 3913, 26, 144, 146, 3912,
	284, 231, 3911, 3909, 3908, 3907, 99, 3906, 41, 3905,
	37, 3903, 3902, 50, 14, 27, 3900, 3899, 152, 3898,
	111, 257, 3896, 169, 3892, 74, 140, 3888, 3886, 3884,
	65, 62, 265, 100, 3883, 291, 3881, 215, 3878, 3877,
	28, 3876, 3874, 252, 119, 118, 44, 259, 145, 40,
	220, 188, 209, 3872, 3871, 181, 3870, 3869, 3868, 277,
	3867, 3863, 31, 3862, 3861, 3860, 13, 3855, 3853, 211,
	3260, 3847, 3845, 47, 3840, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 54, 54, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 39, 41, 40,
	34, 34, 35, 35, 36, 37, 37, 10, 10, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	20, 20, 42, 42, 21, 21, 44, 44, 22, 22,
	45, 45, 602, 602, 602, 620, 620, 25, 25, 47,
	47, 26, 48, 17, 18, 18, 19, 19, 19, 19,
	603, 603, 603, 603, 38, 27, 49, 31, 31, 31,
	31, 31, 208, 208, 208, 208, 24, 24, 43, 43,
	244, 244, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	598, 598, 246, 246, 245, 238, 238, 239, 239, 240,
	240, 604, 604, 247, 247, 247, 248, 248, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 137, 137, 396, 396, 396, 58,
	58, 58, 58, 58, 593, 593, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 82, 82, 610, 610,
	609, 608, 608, 608, 611, 611, 611, 209, 209, 209,
	133, 133, 133, 133, 133, 133, 134, 134, 135, 135,
	213, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 219, 16, 16, 16,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 532,
	532, 533, 533, 204, 204, 205, 205, 205, 205, 206,
	206, 207, 207, 207, 73, 73, 216, 216, 218, 218,
	217, 217, 217, 217, 217, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	195, 195, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 79, 79, 79, 79, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 627, 627,
	628, 628, 629, 629, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	88, 88, 356, 356, 320, 320, 89, 89, 89, 90,
	90, 91, 91, 75, 75, 591, 591, 372, 372, 489,
	489, 76, 599, 599, 599, 601, 601, 600, 600, 93,
	93, 395, 395, 94, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 95, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	103, 103, 103, 103, 103, 104, 104, 104, 101, 101,
	101, 98, 98, 98, 97, 97, 97, 102, 102, 102,
	590, 309, 309, 100, 100, 100, 99, 99, 99, 373,
	373, 105, 105, 105, 105, 321, 106, 106, 106, 106,
	106, 106, 106, 106, 109, 109, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 491,
	491, 107, 107, 107, 456, 456, 112, 112, 112, 411,
	411, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 595, 595, 365,
	365, 272, 272, 272, 272, 125, 125, 125, 125, 126,
	126, 126, 127, 127, 200, 200, 143, 143, 143, 143,
	142, 142, 142, 142, 142, 142, 142, 142, 65, 65,
	65, 66, 66, 67, 67, 68, 68, 69, 69, 70,
	70, 70, 70, 70, 146, 146, 621, 621, 148, 145,
	145, 145, 145, 145, 144, 144, 147, 147, 147, 147,
	149, 151, 151, 151, 151, 151, 150, 150, 150, 150,
	150, 152, 152, 523, 523, 381, 381, 521, 521, 542,
	542, 522, 522, 327, 327, 327, 327, 327, 328, 328,
	328, 531, 531, 531, 531, 531, 531, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	201, 201, 202, 203, 203, 203, 203, 203, 178, 178,
	178, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 382, 382, 181, 181, 181, 165, 165, 154,
	154, 154, 154, 154, 154, 154, 159, 159, 159, 159,
	159, 159, 159, 159, 155, 155, 167, 167, 167, 167,
	167, 160, 160, 161, 161, 161, 162, 162, 162, 162,
	188, 188, 164, 164, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 156, 156, 156, 156, 169, 169, 169,
	169, 418, 418, 418, 193, 193, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 191, 191, 191, 191, 191, 191, 612, 612,
	613, 613, 613, 185, 185, 185, 185, 185, 185, 470,
	470, 179, 179, 179, 179, 184, 184, 184, 184, 187,
	187, 187, 187, 401, 401, 176, 176, 176, 177, 177,
	177, 182, 182, 183, 357, 357, 180, 180, 186, 186,
	186, 186, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 158, 158, 158, 158, 189, 189, 175, 175, 190,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	631, 631, 171, 171, 171, 170, 170, 170, 170, 173,
	173, 174, 174, 174, 174, 174, 174, 172, 163, 192,
	592, 592, 588, 588, 588, 588, 588, 588, 588, 588,
	589, 589, 589, 589, 594, 594, 117, 117, 117, 117,
	117, 117, 117, 128, 128, 128, 128, 128, 128, 128,
	131, 131, 118, 118, 118, 118, 118, 118, 118, 121,
	121, 119, 119, 119, 119, 120, 120, 83, 83, 83,
	83, 83, 15, 15, 15, 84, 84, 263, 263, 222,
	222, 222, 345, 345, 223, 223, 335, 335, 335, 335,
	220, 220, 221, 221, 85, 85, 632, 632, 632, 605,
	605, 605, 606, 606, 606, 606, 606, 606, 329, 329,
	330, 330, 436, 436, 436, 436, 436, 333, 333, 333,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 343,
	344, 344, 336, 336, 342, 341, 341, 340, 340, 339,
	339, 337, 338, 338, 338, 347, 347, 346, 349, 349,
	348, 435, 551, 551, 553, 553, 553, 553, 553, 553,
	553, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 419, 419,
	633, 633, 634, 635, 549, 549, 549, 550, 545, 545,
	546, 546, 546, 546, 546, 331, 331, 332, 332, 332,
	332, 547, 548, 363, 363, 474, 552, 552, 554, 554,
	556, 636, 636, 636, 636, 636, 636, 637, 637, 637,
	434, 434, 433, 433, 354, 354, 557, 557, 557, 557,
	558, 558, 558, 558, 558, 561, 560, 559, 559, 559,
	559, 559, 87, 87, 87, 398, 398, 397, 397, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 197, 197, 275, 275, 275, 81,
	81, 81, 12, 12, 12, 12, 12, 12, 12, 290,
	290, 13, 13, 13, 607, 607, 607, 86, 86, 86,
	86, 86, 86, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 597, 597, 596, 596, 276, 276, 639,
	639, 92, 92, 92, 92, 92, 92, 92, 92, 492,
	492, 493, 493, 80, 80, 80, 80, 80, 420, 420,
	417, 417, 416, 416, 362, 362, 472, 472, 472, 473,
	280, 280, 281, 281, 241, 241, 241, 33, 32, 23,
	23, 28, 28, 29, 29, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 30, 30, 51, 51, 51, 51,
	52, 52, 52, 52, 55, 55, 56, 56, 50, 50,
	50, 50, 53, 53, 46, 46, 57, 57, 57, 57,
	57, 614, 616, 616, 615, 615, 619, 619, 619, 619,
	619, 619, 617, 617, 618, 618, 622, 622, 623, 623,
	124, 124, 129, 129, 129, 129, 129, 130, 130, 130,
	130, 132, 132, 132, 132, 141, 141, 196, 196, 196,
	196, 196, 196, 196, 59, 59, 59, 59, 72, 72,
	72, 72, 139, 641, 641, 641, 140, 140, 140, 640,
	640, 273, 273, 430, 430, 431, 431, 642, 642, 432,
	432, 432, 432, 432, 266, 265, 267, 267, 268, 268,
	78, 78, 78, 256, 256, 255, 257, 257, 258, 258,
	253, 253, 534, 534, 260, 260, 260, 261, 261, 249,
	249, 250, 250, 251, 251, 252, 252, 264, 264, 643,
	643, 115, 115, 115, 199, 199, 319, 319, 319, 427,
	427, 427, 355, 355, 287, 287, 429, 429, 429, 429,
	394, 394, 394, 198, 198, 370, 370, 384, 384, 385,
	385, 486, 486, 386, 122, 122, 123, 123, 138, 138,
	226, 226, 224, 224, 224, 224, 224, 224, 224, 224,
	231, 231, 232, 232, 233, 233, 234, 235, 235, 235,
	235, 374, 374, 236, 236, 236, 225, 225, 225, 227,
	227, 227, 227, 227, 227, 227, 230, 230, 230, 230,
	237, 237, 237, 229, 229, 568, 568, 568, 570, 570,
	572, 572, 571, 571, 567, 567, 569, 569, 638, 638,
	400, 400, 400, 352, 353, 350, 350, 351, 351, 360,
	360, 358, 359, 359, 361, 361, 471, 471, 471, 242,
	242, 242, 391, 391, 391, 391, 392, 392, 423, 423,
	421, 421, 421, 421, 422, 422, 424, 424, 424, 425,
	425, 426, 426, 388, 388, 389, 389, 390, 390, 390,
	390, 452, 452, 228, 228, 228, 367, 367, 367, 368,
	368, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 443, 443, 441, 441, 441, 441, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 476, 477, 477,
	369, 369, 478, 428, 428, 586, 586, 586, 587, 587,
	469, 469, 479, 479, 479, 479, 479, 479, 467, 467,
	468, 468, 487, 488, 488, 404, 404, 404, 404, 402,
	402, 405, 405, 405, 405, 405, 403, 403, 480, 480,
	480, 480, 393, 393, 481, 481, 481, 481, 482, 483,
	483, 484, 484, 437, 438, 438, 494, 494, 494, 494,
	496, 366, 366, 366, 366, 366, 544, 543, 543, 495,
	495, 495, 495, 495, 495, 495, 495, 495, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	511, 511, 511, 511, 511, 511, 511, 497, 497, 497,
	497, 497, 501, 501, 501, 500, 500, 500, 500, 500,
	500, 500, 500, 500, 500, 500, 502, 502, 507, 507,
	508, 508, 508, 503, 504, 509, 509, 509, 509, 644,
	644, 513, 513, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 499, 499, 499, 506, 506, 506, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 412, 412, 414, 414, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 446, 446, 446, 446,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 562, 562, 562, 562, 562,
	562, 562, 562, 448, 448, 565, 565, 566, 566, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	573, 573, 574, 574, 576, 576, 577, 577, 578, 579,
	579, 579, 580, 581, 581, 575, 575, 582, 582, 582,
	582, 583, 583, 584, 584, 584, 584, 584, 585, 585,
	585, 585, 585, 458, 458, 459, 459, 465, 465, 465,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 326, 326, 325, 277, 277,
	277, 277, 277, 277, 379, 379, 377, 377, 377, 380,
	380, 378, 378, 376, 376, 375, 375, 455, 455, 453,
	453, 457, 457, 406, 406, 512, 512, 512, 512, 512,
	512, 512, 512, 407, 407, 407, 415, 408, 408, 409,
	409, 409, 409, 409, 449, 450, 410, 410, 410, 451,
	451, 460, 464, 464, 463, 462, 462, 461, 461, 439,
	439, 440, 440, 387, 387, 645, 645, 383, 383, 485,
	485, 485, 485, 323, 323, 371, 371, 322, 322, 314,
	314, 315, 315, 315, 315, 364, 364, 466, 466, 514,
	514, 515, 515, 516, 516, 517, 517, 518, 519, 520,
	454, 454, 298, 297, 284, 285, 296, 295, 294, 283,
	286, 291, 292, 293, 288, 289, 305, 304, 303, 254,
	259, 310, 311, 311, 313, 313, 312, 312, 300, 301,
	302, 490, 282, 316, 316, 317, 317, 317, 318, 318,
	318, 318, 278, 278, 279, 279, 306, 306, 307, 308,
	308, 299, 299, 299, 269, 269, 269, 270, 270, 271,
	271, 528, 528, 525, 525, 525, 526, 526, 526, 527,
	527, 527, 527, 524, 524, 524, 524, 524, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 536, 536, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 538, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 541, 541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 4, 8, 7, 10, 9, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 5, 2, 6, 9, 4, 7, 7,
	10, 7, 10, 10, 13, 5, 2, 2, 1, 1,
	3, 1, 1, 1, 1, 1, 2, 1, 2, 2,
	3, 2, 4, 3, 2, 2, 1, 2, 1, 3,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 3, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 2,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 3, 5, 7, 3, 3, 3, 4,
	4, 6, 5, 5, 5, 3, 4, 4, 3, 4,
	4, 3, 4, 4, 5, 3, 5, 5, 5, 7,
	3, 3, 3, 4, 6, 4, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 5, 3, 5, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 3, 4,
	3, 4, 3, 5, 3, 4, 4, 3, 4, 5,
	3, 4, 3, 4, 4, 5, 3, 3, 1, 1,
	0, 2, 3, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 3,
	4, 4, 5, 2, 0, 4, 2, 3, 4, 2,
	3, 3, 3, 5, 2, 0, 3, 3, 4, 3,
	3, 3, 3, 4, 4, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 10, 11, 9, 5, 3, 1,
	5, 9, 6, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 3, 2, 2, 4,
	7, 3, 4, 6, 5, 7, 5, 5, 3, 3,
	0, 2, 2, 2, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 605, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-196, -201, -202, -203, -3, -58, -60, -74, -93, -95,
	-106, -116, -115, -117, -125, -133, -128, -111, -65, -138,
	-142, -153, -197, -198, -199, 32, 31, 100, 80, 156,
	129, 138, 206, 389, 435, 447, 404, 143, 426, 409,
	-147, -148, 465, -59, -72, -140, -139, 73, 130, 419,
	-4, -12, -16, 29, 46, -61, -62, -63, -64, 62,
	-81, -77, -88, -82, -75, -76, -79, -626, 102, -569,
	-96, -99, -132, -630, 164, 224, -118, -119, -120, 371,
	-126, -127, 428, -129, -130, -131, 431, 165, -67, -66,
	158, -224, -226, -145, -144, -146, -200, -154, -155, -156,
	-157, -158, -159, -160, -162, -188, -163, -164, -165, -166,
	-167, -168, -172, -191, -169, -170, -171, -174, -173, -175,
	-180, -176, -177, -178, -179, -181, -182, -184, -185, -186,
	-187, -189, -190, 470, -183, -192, -161, 530, 49, 485,
	82, 148, 439, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -57, -78, -80, -83, -84, -85, -92,
	-86, -87, -568, -97, -98, -101, -103, -104, -100, -102,
	427, -227, -225, 602, 545, -20, -25, -26, -21, -22,
	-24, -27, -23, -28, -29, -30, -42, -47, -48, -44,
	-45, -43, -46, -49, -50, -51, -52, -53, -54, -55,
	-56, -32, -38, -39, -33, -34, -35, -36, -37, -40,
	-41, -17, -18, -19, -31, 566, 575, -230, -228, -229,
	-237, 457, 553, 505, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, -321, 2, -300, -306,
	-307, -308, -299, -269, -538, -541, 4, -535, -539, 171,
	234, 335, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 147, 149, 150, 151,
	153, 154, 156, 157, 158, 161, 159, 162, 160, 163,
	164, 165, 166, 169, 177, 178, 179, 184, 186, 187,
	188, 192, 193, 194, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 207, 211, 213, 214, 215, 216, 217,
	223, 224, 226, 227, 228, 229, 230, 235, 236, 237,
	240, 246, 247, 251, 252, 253, 255, 259, 260, 261,
	262, 263, 264, 266, 268, 267, 270, 273, 274, 277,
	278, 279, 280, 281, 282, 286, 287, 283, 288, 289,
	291, 292, 295, 293, 296, 297, 294, 298, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	299, 314, 312, 316, 317, 318, 319, 333, 328, 329,
	330, 323, 324, 320, 325, 321, 322, 326, 327, 332,
	337, 338, 341, 221, 343, 344, 347, 365, 351, 352,
	353, 356, 357, 360, 363, 364, 366, 367, 368, 369,
	370, 371, 372, 373, 374, 376, 377, 379, 380, 381,
	383, 384, 385, 387, 389, 390, 392, 393, 395, 396,
	397, 398, 399, 400, 401, 403, 404, 406, 405, 407,
	409, 411, 412, 413, 419, 426, 420, 422, 423, 424,
	425, 427, 428, 429, 430, 431, 433, 434, 435, 437,
	438, 439, 440, 441, 443, 445, 446, 450, 451, 467,
	468, 487, 447, 448, 449, 452, 453, 454, 455, 456,
	460, 458, 459, 461, 462, 463, 465, 466, 469, 470,
	472, 473, 474, 475, 476, 477, 478, 481, 483, 484,
	485, 504, 486, 488, 492, 493, 494, 495, 489, 490,
	503, 497, 498, 500, 501, 506, 507, 508, 509, 510,
	511, 512, 513, 515, 523, 524, 525, 527, 530, 531,
	532, 533, 521, 535, 536, 539, 540, 541, 544, 542,
	543, 545, 547, 550, 551, 552, 558, 557, 559, 561,
	562, 567, 568, 570, 571, 572, 36, 50, 51, 54,
	56, 58, 69, 70, 71, 75, 125, 126, 155, 167,
	168, 180, 195, 196, 208, 210, 218, 219, 220, 241,
	242, 244, 249, 271, 340, 342, 358, 362, 378, 382,
	386, 388, 402, 442, 479, 491, 496, 516, 517, 518,
	519, 526, 528, 553, 554, 555, 560, 569, -321, 2,
	-300, 349, -293, 2, -269, -269, 389, 28, 2, 28,
	377, 459, 508, 510, 2, -595, -365, 2, 28, -272,
	-269, 102, 206, 457, -293, 2, -595, 206, -365, 25,
	2, -269, 2, 363, 22, 27, 66, 77, 98, 141,
	166, 189, 192, -629, 365, 396, 445, 461, 503, 513,
	527, 2, 557, 292, 458, 505, 234, 120, 532, 452,
	-607, 450, 451, 363, 394, 437, 209, 546, -273, 2,
	447, -269, 292, 2, 605, 94, 74, 442, 462, -150,
	2, 282, 524, -151, -152, -149, 516, -523, 452, 437,
	314, -269, 605, 605, 605, 28, -282, -269, 505, 234,
	452, 120, 501, 605, 2, 505, 368, 557, 458, 120,
	399, 234, 532, 192, 141, 27, 452, -607, 580, 581,
	292, 127, -593, 2, -588, 4, -539, -535, -315, -314,
	505, 511, 120, -308, -299, 595, -307, 605, 605, 605,
	605, 2, 252, 253, 398, 397, 462, 463, 28, 605,
	605, 605, 605, 450, 2, 166, 22, 27, 66, 93,
	98, 127, 189, 192, 354, -627, 365, 396, 461, 503,
	507, 513, 527, -606, 486, 68, 425, 452, -605, -607,
	292, 532, 141, -416, 120, 282, 204, 540, 510, 508,
	538, 133, 240, 543, 542, 605, 605, -109, 2, 602,
	32, 31, -108, -112, 143, 465, -219, 505, 245, 2,
	-269, 605, 605, 605, 2, 252, 253, 450, 451, 28,
	605, 605, 190, -588, 2, 605, 605, 605, 2, 28,
	252, 253, 450, 451, 245, 2, 68, 454, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 2, -194, 462, 486, 215, 47,
	46, 74, 28, 395, 79, 369, 121, 127, 150, 533,
	207, 234, 235, 260, 93, 94, -418, 44, 253, 68,
	252, 451, -612, 450, -470, 506, 453, 459, 500, 264,
	447, 524, 102, 547, 438, 572, 399, 400, 498, 413,
	283, 159, 191, 4, 120, 314, 437, 464, 268, 267,
	516, 282, 446, 372, 84, 605, -638, 2, 505, -640,
	2, 524, 524, 2, -640, 2, -640, 2, -640, 2,
	-641, 524, 569, 605, 605, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, -225, -227, -226, 605, 605, 605, 605, 605, 605,
	605, -194, 462, 2, 74, 28, -358, -360, 537, 243,
	152, 355, -224, -226, 2, -568, -521, 2, -444, -542,
	-446, 593, 594, 586, 502, 67, -325, 334, 573, -458,
	127, 538, 349, -541, -447, -460, 155, 365, 442, -380,
	8, 9, 5, 6, 7, -278, -448, -454, 529, 170,
	339, -318, 606, 10, 602, -565, -226, -459, 37, 210,
	65, -525, -317, -279, -497, 244, -316, -299, -562, -563,
	4, -535, -536, -526, -500, -508, -504, -505, -511, -269,
	-538, 77, 111, 112, 110, 115, 114, 285, 284, 116,
	113, 464, 546, 66, 36, 218, 219, 249, 340, 220,
	75, -564, 142, -537, 241, 242, 479, 51, 402, 180,
	126, 125, 342, 56, 54, 554, -509, 122, 516, 517,
	518, 519, 195, 196, 58, 167, 168, 362, 386, 496,
	526, 528, 208, 271, 43, 106, 191, 239, 222, 248,
	250, 254, 272, 275, 315, 331, 336, 359, 361, 436,
	471, -644, 555, 491, 69, 70, -570, 405, -571, -293,
	-570, 605, 605, 607, 605, -350, -352, -353, 2, 28,
	139, 602, 2, -475, 2, -476, -480, -226, 265, -479,
	602, -477, 600, -300, 350, -566, 443, -562, -563, -278,
	-299, -317, 4, -535, -537, 604, -354, 602, 120, 452,
	505, 78, 234, 93, 166, -411, 602, -269, 28, 349,
	520, 607, -351, 393, -456, 602, 349, 352, 190, 352,
	60, 296, 2, 2, 2, 2, 2, 218, -269, 505,
	119, 2, 263, 2, 2, 2, 2, 2, 2, 2,
	-373, 218, 2, -300, 557, -373, 218, 2, -373, 218,
	2, -417, 2, 87, -283, 218, 2, -269, -309, 218,
	2, -304, -306, -313, 218, 2, -311, -269, -530, 218,
	2, -529, 4, -535, 116, 464, -444, 2, -138, 2,
	60, -269, 557, 2, 467, 2, 602, -150, 2, 71,
	524, 43, 462, -151, 2, -431, 2, -432, -265, -266,
	-267, -487, -268, 251, 392, 401, 576, 131, 334, 572,
	-621, 190, 585, 520, -521, -521, -521, -381, 604, 2,
	2, 2, 2, 2, 2, -480, 218, -300, 2, -297,
	-524, 4, -535, -539, -536, -540, -538, 28, 31, 32,
	33, 35, 37, 38, 39, 40, 57, 65, 66, 72,
	76, 78, 87, 93, 102, 110, 111, 113, 112, 114,
	115, 116, 127, 131, 135, 139, 140, 144, 148, 152,
	170, 172, 185, 189, 190, 206, 209, 212, 225, 238,
	243, 245, 265, 269, 276, 284, 285, 334, 339, 345,
	349, 350, 354, 355, 375, 391, 408, 432, 457, 464,
	482, 499, 505, 514, 520, 522, 529, 537, 538, 546,
	548, 556, 563, 564, 565, 566, -541, 77, 2, -480,
	218, 2, -303, 218, -480, -306, 2, -283, 2, -296,
	-602, -520, -524, 512, 162, 420, 8, 2, -322, 218,
	-300, -302, -306, -304, 2, 2, 2, 2, -311, 2,
	-529, 218, 2, 28, 28, 557, 393, 245, 520, 607,
	-371, -314, -315, -520, -364, -269, 604, -444, 2, -138,
	-121, 2, 185, -444, 218, 2, -138, 218, 2, -444,
	218, 2, -138, 218, 2, -269, 2, -608, 2, -532,
	218, -528, 10, -527, 5, 4, -535, -539, -536, 218,
	-269, 2, 296, 2, 2, 527, 2, 98, 505, 119,
	2, 424, -628, 445, 531, 2, 2, 2, 2, 2,
	2, 2, 505, -288, 2, -269, 185, 489, -311, 218,
	-312, 2, 458, -639, 405, -529, 218, 2, 557, -304,
	218, 2, -304, 234, 247, -283, 218, 2, 510, 508,
	510, 508, 190, 2, 245, 2, 245, 2, -481, 2,
	-482, -476, -483, 600, 350, -491, 2, -490, -527, 553,
	-109, 602, -109, 602, 462, 602, -532, -300, -300, -444,
	2, -138, -121, 2, -444, 2, -138, 2, -269, 2,
	-135, -532, -134, 602, 190, -269, 2, -444, 2, -138,
	-121, 2, -444, 2, -138, 2, -219, 185, 2, 120,
	505, -194, 2, 185, 548, 2, 8, 2, 225, -532,
	453, 400, 177, 2, 467, 2, 468, 74, -418, 572,
	74, 190, 2, 190, 2, -401, 2, 566, 393, 190,
	2, 2, -592, 2, 349, 190, 2, 190, 2, 190,
	2, 190, 2, 190, 2, -193, 463, 525, 504, 397,
	253, 2, -138, 563, -121, 253, 252, -444, 563, 2,
	-613, 185, 451, -444, 2, 523, 262, 160, 190, -401,
	2, 190, 2, 190, 2, 5, 2, 398, 487, 2,
	251, 392, 487, 2, -300, 505, 557, 458, 120, 28,
	2, 450, 2, 2, 88, 89, 190, 2, 190, 2,
	205, 190, 2, 190, 505, -382, 604, 572, 2, -393,
	-480, -430, -431, -430, 520, -358, -360, -194, 467, 2,
	-231, -391, -233, 185, -421, -422, -234, 276, 172, 345,
	-235, -400, 28, 139, -400, -400, 60, 603, 603, 11,
	12, 76, 41, 593, 594, 595, 596, 183, 597, 598,
	591, 592, 590, 583, 584, 588, 257, 258, 95, 587,
	585, 86, 290, 444, 173, 174, 175, 176, 421, 232,
	34, 233, 14, 15, 16, -325, 33, 354, 275, 573,
	222, 471, 586, 17, 18, 19, 248, 250, 336, 50,
	225, -277, 365, -324, 502, 67, -444, -444, -444, -444,
	-444, -444, -444, -444, 361, 602, -387, -439, 600, -226,
	602, 602, 602, 602, -520, -226, -444, -458, 603, -378,
	602, -226, -458, -453, 602, 442, 600, 602, -461, -444,
	5, 5, 5, 602, 604, -573, 567, 185, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 388, -502, 602, -501, 602, -501,
	-501, 558, -499, 602, 575, 568, 602, -499, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 558, 607, -570, -354, 602, -383, -485, -444, 595,
	-383, -383, 349, -375, -444, 106, -404, 254, 315, 191,
	272, 436, 239, -441, 606, -441, -469, 575, -226, -477,
	-299, -226, -479, 602, -475, -469, -110, -520, -93, -106,
	-115, -138, -153, -198, -199, 595, -300, 602, 190, 602,
	604, -524, 190, -364, -283, -310, -269, -300, -316, -317,
	-322, -294, -269, 2, 138, -375, -588, 532, 452, 28,
	458, -530, -272, 38, -455, -494, -495, -544, 606, -543,
	-497, -507, -503, -506, 378, 382, -526, 54, 554, -509,
	244, 4, -535, -537, 241, 242, 479, 51, 402, 180,
	126, 125, 342, 56, 516, 517, 518, 519, 195, 196,
	58, 555, 491, 69, 70, -588, 532, 452, 28, 458,
	185, -530, 185, -530, 2, 2, 155, 2, 2, 2,
	-269, -247, 607, 64, 429, 155, -373, 218, -247, 155,
	-247, 155, -323, 218, -322, -247, 155, -247, 607, 155,
	-247, 607, 155, 604, 607, 155, -530, 2, -417, -523,
	-375, 38, -431, 2, 127, 4, 5, -642, 607, 274,
	-328, 289, 333, 214, 350, 570, 343, 131, -531, 5,
	4, -454, -466, 127, 282, 244, -514, -516, 8, -515,
	9, -517, 593, 594, -522, -521, 109, 604, -524, -244,
	422, 465, 364, -243, 24, 29, 143, 236, 319, 551,
	161, -340, 237, -337, 368, 155, 483, 541, -602, -603,
	449, 512, 162, 420, 90, 343, 465, 364, 422, 155,
	-397, -399, 38, 118, 319, 363, 61, 228, 294, 295,
	485, 560, 155, 465, 364, 422, 364, -13, -258, 24,
	143, -260, -255, 465, -603, 99, 422, 579, 427, 374,
	497, 391, -603, 270, -620, 332, 562, -602, -246, 483,
	541, -602, -603, 449, 422, -245, -342, -337, 368, 155,
	606, 24, 143, 422, 465, 364, -624, -625, 29, 422,
	364, -596, -290, -567, 225, 566, 155, -290, -290, -480,
	218, -617, 185, 2, -610, -134, 266, 5, 10, -532,
	-134, -371, 607, 607, -524, 595, 451, 450, 155, 155,
	155, 155, 253, 185, 334, 334, 2, 2, 2, 2,
	2, 192, -605, -629, 2, 2, -300, 218, -356, 349,
	-591, -372, 505, -300, 185, 334, 43, -303, 218, 2,
	-306, 557, -596, 334, -305, 218, -300, 38, 602, 334,
	2, -417, 2, 234, -567, 334, -481, -319, -300, -476,
	-319, 465, -293, 38, -441, -300, 603, 607, -491, -491,
	-532, -207, 566, 190, 602, -219, 566, 566, 253, -488,
	607, -487, 225, -533, -532, -135, -532, 425, 253, -532,
	-591, -283, 2, -300, 2, 505, 255, -532, -207, 225,
	-532, -532, -532, -523, 28, 468, 2, -193, 463, 525,
	89, 468, 2, -300, 505, 120, 234, 80, -617, 185,
	2, -269, -594, 185, -589, 437, 452, 532, -588, -300,
	120, -300, 120, -300, 120, -300, -300, 2, 2, 2,
	2, 2, 85, 2, -138, -444, 2, 85, 2, 46,
	484, -613, 185, 2, 523, 2, 523, 2, -269, -269,
	-269, 486, 274, -300, -300, -300, -301, -306, 453, 506,
	533, 451, -444, 2, -631, 2, 190, 185, 2, 505,
	234, 505, 234, 120, 190, 74, 120, 28, 505, 448,
	604, 4, -247, 607, -273, -231, -391, -523, -392, -391,
	-232, -231, -234, 185, 401, 542, 319, 469, 259, -422,
	-421, 28, -444, -426, 179, 318, -444, -424, -446, 593,
	594, -515, -517, -374, 343, -225, -225, -225, -361, -471,
	-444, 391, 234, -496, -494, -494, -298, -524, 516, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, 275, 222, 471, 50, 225,
	-444, 520, -444, -444, -444, -444, 312, 334, 339, 529,
	170, 539, 139, 343, -645, 499, 40, -451, -226, -379,
	602, -465, 35, 482, 28, -458, 602, 2, -439, -444,
	-440, -326, -324, -269, 593, 594, 595, 596, 597, 598,
	583, 584, 585, 14, 15, 16, 588, 592, 590, 591,
	183, 95, 587, 290, 444, 86, 173, 174, 175, 176,
	257, 258, 17, 18, 19, 34, 586, -376, -375, -375,
	603, 556, 28, 139, 595, 2, 603, 607, 38, 603,
	-444, -376, -457, -453, -375, -464, -463, 563, -412, -413,
	571, 299, 123, 216, 297, -414, 456, -518, 8, -524,
	595, -574, 178, 209, 602, 603, 2, 603, 2, 603,
	-444, 2, 603, -444, 2, 603, -444, 2, 603, -444,
	2, 603, 2, 603, 2, -444, -444, -444, -444, -444,
	-444, -444, -375, 8, -518, -518, 516, 516, -518, -518,
	-518, -510, 378, 379, 380, 381, 277, 278, 279, 280,
	382, 383, 384, 385, 304, 305, 306, 307, 300, 301,
	302, 303, 308, 309, 310, 311, 200, 201, 202, 203,
	196, 197, 198, 199, -510, -406, 2, -512, -375, 4,
	571, 299, 123, 216, 297, 456, 5, -406, 2, -407,
	2, -444, -375, -408, -445, -446, 593, 594, 586, -325,
	-458, -409, 2, -444, -376, -444, 57, 269, 522, -410,
	-444, 190, -375, -375, 2, -375, 2, -571, 38, -375,
	-367, 607, 190, 38, 4, -367, -367, 602, 603, 607,
	-405, 213, 293, 288, 247, -405, -475, -404, 254, -402,
	359, -402, -402, -469, -284, 600, 608, -524, -469, -468,
	-467, 38, -293, 356, -469, -469, 604, 603, -468, 601,
	-586, 602, 605, 605, 605, 605, 605, -300, 602, -375,
	-524, 604, 488, 2, 603, 248, 248, 248, 248, 248,
	349, 443, 603, 520, -590, -309, -313, 506, 2, 566,
	-108, 351, 603, 607, -366, 37, 600, 604, -518, 2,
	2, -513, 558, 602, 602, -413, 602, 190, -590, -313,
	506, 2, -595, -365, -365, 520, -269, 2, -300, -373,
	-247, 155, -373, -373, -247, 607, 155, -283, -304, -309,
	-311, -313, -269, -529, -530, -247, -305, -621, 603, 524,
	-432, -327, 401, 481, 423, 460, 501, 8, 9, 8,
	9, 607, -524, 607, -622, 93, 520, 78, 452, -262,
	283, 520, -435, 218, 78, -545, 93, -286, -546, -269,
	72, 538, 391, 189, 153, -622, 93, 391, -622, 93,
	2, 236, 93, 465, 486, 28, 60, -480, 41, 41,
	28, -620, 332, 270, 190, 572, 505, 234, 452, 520,
	520, -480, -399, -494, 118, 294, 295, 60, -519, -514,
	593, 594, -519, 60, -519, -519, -519, 566, -303, -480,
	452, 520, 520, 520, 411, 411, -255, -151, 520, 520,
	28, -194, 430, 127, -643, 585, 411, 520, 190, 190,
	270, -620, 332, 607, 41, 41, 28, -620, 332, 270,
	190, 520, -322, -284, 552, 42, 552, 42, 552, 520,
	42, 452, 520, 607, 42, 520, 520, -13, 465, -597,
	-274, 105, 325, 287, 326, 97, 322, 96, 321, 103,
	323, 104, 324, 559, 337, 63, 320, 298, 327, -275,
	-276, 146, 370, 550, 120, -529, -13, -13, 465, 364,
	422, 155, -618, 225, 28, -607, 225, -488, 225, -488,
	-314, -269, 604, -138, -444, -444, -138, -444, -138, 46,
	155, 155, 2, -639, 263, 602, -331, 334, 190, -364,
	-489, 245, 607, -372, -588, 155, -529, -398, -397, 334,
	-305, 218, 2, 155, -354, 334, 149, 602, 399, 2,
	155, -285, 218, -270, -269, -417, -249, 509, 155, -395,
	548, -427, -138, 602, 127, 38, -427, -384, -385, -486,
	-386, -286, 602, -293, -441, -109, -490, 603, 603, 603,
	-206, 353, -205, -269, 5, -219, -355, -287, -286, 119,
	403, 403, -213, 566, -134, -135, 603, 607, -488, 225,
	489, -207, -207, -488, -488, -300, 185, -532, -207, -207,
	-207, 2, 2, 2, 2, -401, -300, -283, -322, -300,
	28, 604, -530, -530, -313, -309, -401, -283, -401, -283,
	-401, -283, -401, -401, -138, -444, 486, 2, 462, 185,
	185, 604, -401, -357, 432, 2, 399, 120, 505, 368,
	234, -300, -322, -300, -322, -283, 120, -283, 121, -300,
	4, -480, -392, -232, 350, 259, 469, -424, -425, -446,
	442, 443, -425, 442, 443, 8, 9, 8, 9, -236,
	473, 338, -373, 607, -241, 39, 135, 259, -300, 572,
	151, -444, -444, 520, -645, 499, -451, 151, -444, 312,
	339, 529, 170, 539, 139, 343, 190, 602, -445, -445,
	603, -377, -444, -444, 601, 610, 603, 604, 603, -360,
	607, -358, -444, -375, -375, 603, 604, -375, -364, 601,
	601, 607, 603, -462, -463, 144, -444, 520, 520, 520,
	520, 602, 603, 604, -579, 360, 602, 602, -444, 603,
	603, 603, 603, 38, 607, 607, 607, 603, 607, 607,
	607, 603, 603, 603, 607, 603, 572, 572, 603, 603,
	603, 603, 607, 603, 607, 603, 190, 603, 603, -415,
	375, 603, 11, 12, 593, 594, 595, 596, 183, 597,
	598, 591, 592, 590, 583, 584, 585, 86, 290, 444,
	14, 15, 16, -325, 248, 225, -445, -445, -445, -445,
	603, -449, -450, 190, 185, 38, -410, -410, -410, 603,
	190, -375, 603, 603, 602, -572, 292, 334, 603, -438,
	-437, 564, -485, -368, 2, -475, -295, -524, -438, -438,
	-375, -444, 254, 254, -403, 548, 349, -405, -475, -468,
	-520, -443, -442, 187, 39, 135, 328, 329, 330, 221,
	188, -468, -293, -354, -468, -468, -524, -469, -469, -467,
	603, -587, -520, 603, -369, -478, -566, -360, 604, -524,
	-216, -567, -195, 5, 339, -195, -195, -195, -195, -300,
	-530, 520, 520, 225, 25, 376, -494, 600, 601, 8,
	-524, 602, -518, -518, -518, -530, 190, 190, 225, 349,
	190, -529, 2, -247, -373, -247, -247, -322, -323, -247,
	-247, -247, -396, 566, -521, -431, 536, 83, 401, 516,
	-521, -243, 422, -286, -286, -300, -310, 204, 412, -529,
	334, -435, 218, -248, 334, 218, -294, -494, 602, -419,
	568, 259, 259, 548, -286, -294, 259, 218, -286, 218,
	-294, 2, -294, -598, 401, 344, -444, 60, -338, 281,
	399, 335, -244, 422, 465, 364, -138, -138, -138, -138,
	-138, 602, -621, 548, 138, -300, -322, -300, -310, -529,
	-305, 465, 364, 422, 331, -316, -519, -519, -397, 465,
	364, 422, -310, -529, -303, -529, -254, 218, -269, -254,
	218, 452, -283, 411, 572, 45, -643, -520, -520, -520,
	520, 190, 190, -245, -138, -138, -138, -138, -138, 602,
	-284, -246, 422, 5, 218, -286, 5, -286, 218, 5,
	-269, -286, -310, -529, -625, 24, 143, -286, -310, -529,
	-274, 370, -532, 339, 544, -283, -596, -290, 452, 520,
	520, -480, -614, -615, 206, 435, 452, 438, -530, -134,
	-210, 566, -134, -204, 229, 595, -593, -532, -269, 557,
	-269, -329, -332, -330, -286, -436, -435, -549, -550, -545,
	275, 234, 538, 247, 171, 93, -222, -223, 568, 566,
	155, -320, -300, 600, -207, -532, -300, -489, -311, -312,
	155, -354, 334, -529, 38, 155, 602, 2, 2, -304,
	349, 334, -285, 218, -250, 145, -643, -283, -438, -368,
	-394, -429, 432, 349, -355, 553, -293, -394, -370, 607,
	190, 585, 604, -355, -484, 595, -109, -109, -207, 607,
	602, 585, 585, 602, -532, 603, 607, 604, 602, 585,
	585, -215, 353, -214, 147, 261, 246, 475, 476, 477,
	478, 137, 474, 124, 317, -488, -532, -213, -135, 190,
	190, -68, 566, 505, -207, 606, 438, -269, -401, -401,
	-401, 462, 462, -269, -364, -296, -283, -300, -297, -322,
	185, 185, -283, 542, -425, 350, 286, -471, -242, 574,
	-300, 606, -444, -444, 151, 151, -444, -445, -445, -444,
	151, 190, 602, -444, -455, 33, 33, 603, 607, -440,
	-444, -324, 603, 556, -360, -360, 603, 595, -524, 606,
	603, -453, 148, -444, 514, 299, 216, 297, -414, 297,
	-414, -414, -518, 5, -524, 595, -580, -289, 602, -269,
	564, -359, 355, 603, -496, -494, -444, -444, -444, -444,
	-444, -518, -499, -499, -514, -514, -444, -449, -444, -496,
	-494, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, 139, 334, 343, -445, -450, -449, -444, -444, -494,
	603, 603, 603, -375, -108, 602, 292, -388, 209, -444,
	-488, 607, -388, -388, 603, -475, -475, 602, -444, 254,
	601, 607, 609, 585, 585, -354, 604, -467, -468, 601,
	603, 607, 603, 607, -428, 38, 603, -524, -438, -218,
	-217, 136, 53, 107, 134, 339, 248, -616, 566, -530,
	-530, 452, 352, 5, 8, 600, 601, 604, -518, 603,
	603, 603, -530, -530, 452, -588, 532, 452, 28, -530,
	-247, -247, 119, 319, -444, 520, 520, 60, 225, 155,
	334, 550, 334, -546, 153, -551, -444, 602, 234, 602,
	602, 2, -238, -239, -240, 143, 465, 24, -623, 2,
	548, 155, -247, 155, -247, 570, -338, 602, 602, 520,
	452, -262, 520, 566, -375, -444, -208, 127, -523, -603,
	606, -603, 606, 452, 520, 520, 452, 520, 520, 334,
	155, 566, 169, 169, 572, -254, 185, 520, 520, -520,
	-520, -520, 566, -375, 520, -498, 48, 26, 334, -304,
	-247, 155, 520, 520, 532, 465, -532, -532, 339, -13,
	-310, -529, -305, 465, 364, 422, -595, -595, 206, -313,
	-618, -488, -212, 353, -211, 147, 434, 137, 261, 230,
	-488, -210, 190, 245, 566, -305, 2, 603, 603, 607,
	607, -552, -248, -300, -285, 234, 234, -292, -270, 38,
	347, 347, 602, -300, -89, 566, -487, -520, -599, 566,
	43, -303, 38, 155, -596, -138, -305, -492, -493, 5,
	38, -300, 155, 349, 334, -251, 268, -643, -528, -567,
	-360, -394, -383, 335, 91, 603, -438, -385, -368, -444,
	2, 603, -205, -206, -532, -532, -532, -207, -219, -287,
	2, -533, -532, -532, 607, 602, 585, 585, 585, 585,
	585, -213, -488, -134, -138, 353, -300, 595, -401, -344,
	-343, 368, 343, -344, 442, 442, 350, 179, 264, -241,
	-284, -444, -444, 151, 33, 33, -444, -444, -455, 603,
	-444, -444, -375, 601, 5, -444, 603, 603, 8, -444,
	603, 604, -581, -269, -444, 603, 60, 603, 603, 607,
	607, 603, 603, 603, 603, 603, 603, 603, -450, 190,
	139, 343, 602, 603, 603, -108, -452, 212, 60, -475,
	-452, -452, -403, -364, -475, -442, -284, 600, -284, 600,
	-524, -520, -478, 602, 604, -217, 585, -532, -532, -195,
	206, -616, -616, 566, -313, 601, 2, 600, -524, 603,
	-313, 190, -590, -313, 506, 119, -286, -286, 505, 442,
	-254, 391, -435, 155, 155, -553, 93, -555, 76, 171,
	102, 334, 339, 538, 391, 72, 127, 349, 408, -633,
	-634, -635, 38, 577, 578, 603, -362, -472, -566, 602,
	-269, -362, -364, 334, 494, 127, 349, 334, 127, 349,
	561, 119, 2, 532, 79, -286, -294, -364, -364, -300,
	-310, -529, 163, 603, 607, 585, 2, 595, 595, -310,
	-529, -305, -310, -529, -303, 155, -254, 366, 169, -138,
	-520, -520, 520, 520, 163, 603, -284, 5, 5, 155,
	-281, 76, -286, 5, -286, -304, 119, 452, 520, 520,
	349, 349, 352, -614, -615, -210, 607, 602, 585, 585,
	585, -210, -533, -134, 2, -354, -345, 236, -286, -550,
	-547, -548, 391, -436, -554, -556, 171, 391, -333, 602,
	-285, -270, 602, -138, 2, -221, -220, -269, 5, 602,
	-331, 353, 601, -601, 353, -600, 117, 137, -529, -398,
	-138, -305, -354, 603, 607, 149, -420, 548, -284, -300,
	155, -252, 267, -643, -528, -249, -423, -421, 140, 602,
	349, -138, -360, 585, 603, 603, 119, 603, -214, -215,
	-532, -134, -532, -532, -532, -213, -488, -69, -70, 234,
	93, 373, -297, 505, 234, 602, 602, -241, -444, -444,
	-444, 603, -360, -524, 595, -575, 368, 603, -471, -444,
	-444, -445, 190, 602, -455, 603, -576, 565, -444, -389,
	-390, -444, 440, 108, 210, -576, -576, 603, -520, -520,
	2, -532, 352, 2, 520, 600, 2, 190, -530, 190,
	190, 225, 225, 38, 411, -435, -294, -294, -298, -291,
	-269, 171, 218, 339, 561, -419, 259, 602, -445, 542,
	-300, 602, 2, 217, 217, 30, 60, -636, 131, 238,
	603, 607, -473, -280, -269, -444, -473, 603, 603, 339,
	542, 339, 561, -444, 542, -494, 602, -247, -247, 603,
	603, -444, 520, -523, 100, -521, 2, -603, -254, -283,
	185, 185, -520, -520, -444, 520, 5, -247, -298, -247,
	-247, -281, 532, -310, -529, -305, -619, 506, 459, 533,
	453, 193, 441, -619, 185, -211, -212, -532, -134, -134,
	-210, 38, -339, -340, 2, -552, 259, -291, 259, 227,
	154, -362, 602, 602, -364, -632, 566, 603, 607, 585,
	585, -329, -222, -90, -91, 521, -487, 607, 602, 585,
	-354, 38, 5, 602, 602, -269, 349, 602, -284, -264,
	92, -643, -528, -250, -394, 335, -364, 93, -423, -451,
	-207, 602, -207, 603, 607, 28, 602, 28, 602, -300,
	-322, -375, -375, 603, -360, 60, 607, 603, 603, -445,
	-455, 603, -577, -578, -289, 607, 602, 602, 466, 601,
	601, -530, 2, -530, -530, -530, 452, -254, 391, -269,
	-546, -555, -291, 334, 548, -444, -445, -271, 602, -444,
	602, 602, 38, 127, 238, 132, 223, -434, -637, 101,
	495, 226, -472, -241, 603, -433, 548, 408, -445, -281,
	-362, 602, 602, 602, 585, 190, -138, -138, 602, -498,
	-247, -304, 520, 2, 2, 190, -595, 603, -609, 406,
	-138, -222, 602, -334, 81, 94, 128, 217, 194, 235,
	486, 492, 28, -334, 603, -362, -362, 603, -335, 349,
	119, 319, -220, -521, -521, 603, 38, -91, 9, -600,
	-601, -444, 38, -138, -492, -362, -300, -362, 349, -256,
	-255, 276, -528, -251, 603, -294, -394, -533, -70, -364,
	-364, 603, 603, -582, 399, 443, 211, -375, -361, 603,
	607, 38, -390, 2, 2, 2, -616, -313, 411, -248,
	155, 213, 603, -557, 291, -269, 603, -398, -398, 38,
	132, 223, -341, -337, 602, -242, -473, 213, -300, -604,
	548, 603, -347, -346, -343, -349, -348, -343, -375, -521,
	100, 366, -375, -281, -530, -530, 349, -611, 191, -610,
	5, 10, -335, -363, -474, -286, -433, 603, 603, 82,
	119, -345, -138, 603, -138, 603, 603, -420, 603, -300,
	-253, -534, 411, 413, -643, -252, -438, 603, 603, 603,
	603, -583, -584, 50, 535, 109, -444, -583, -583, -578,
	-580, 190, 171, 566, -558, -561, -560, 582, 472, 191,
	367, 603, 494, 560, 603, 603, -636, -364, 566, -354,
	-444, -433, 603, 607, 553, 603, 607, 553, 603, 190,
	603, -247, -616, -247, -619, -209, 566, 46, -263, -262,
	603, 607, -434, -433, -341, 390, 133, 143, -339, -632,
	-433, 602, -434, 602, -261, -260, -643, -514, -264, 140,
	-207, -585, 153, -584, 387, 184, 442, 387, 184, -585,
	-585, -530, -291, 55, -560, 582, -561, 582, 542, 133,
	-438, 603, 55, -557, -346, 225, -348, 190, 366, 190,
	450, -610, 30, -474, -341, -434, -223, 566, 443, 443,
	2, -222, -335, -434, -362, -341, -362, -257, -258, -259,
	-364, -256, 335, 542, 109, 209, 515, 319, 33, 585,
	-559, 319, 429, 64, 465, -559, 585, -558, 602, 602,
	-530, 353, -223, -341, -438, 2, -335, -341, 603, -223,
	603, -253, 465, 442, 357, -584, -444, 23, 339, 127,
	-444, -636, -375, -375, -247, -206, 602, -438, -223, -263,
	-223, -433, -438, -434, -261, -384, 603, 603, -206, -438,
	-438, -434, -341, -257, -438, -336, -337, 520, 603, -341,
	-223, 602, -223, -438, -375, -438, 603, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 566, 567, 569, 570, 571, 573,
	574, 576, 578, 580, 581, 582, 584, 585, 587, 588,
	589, 590, 591, 593, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	666, 668, 0, 1437, 1439, 1441, 1443, 0, 822, 0,
	36, 37, 39, 0, -2, 345, 347, 349, 351, 0,
	382, 384, 385, 387, 389, 390, 391, 393, -2, 0,
	499, 500, 502, 504, -2, 0, 1036, 1038, 1040, 0,
	655, 657, 0, 1043, 1045, 1047, 0, 0, 678, 679,
	0, 1548, -2, 670, 672, 674, 676, 747, 749, 751,
	753, 755, 757, 759, 761, 763, 765, 766, 768, 770,
	772, 774, 776, 777, 779, 781, 783, 784, 786, 787,
	789, 791, 793, 795, 797, 799, 801, 803, 805, 807,
	809, 811, 813, -2, 816, 817, 818, -2, -2, 0,
	-2, -2, -2, 1455, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 443, 445, 447, 449, 451, 454,
	456, 458, 1606, 506, 508, 510, 512, 514, 516, 518,
	0, -2, 1620, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 111, 112, 113, 114,
	115, 116, 117, 118, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 108, 109, 73, 0, 0, 1579, 1581, 1583,
	1585, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 568, 572, 575, 577,
	579, 583, 586, 592, 594, 596, 551, 552, 555, 2318,
	2336, 2337, 2338, 2341, 2342, 2343, 2344, 2345, 2346, 2804,
	2885, 2886, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385,
	2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395,
	2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405,
	2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415,
	2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425,
	2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435,
	2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445,
	2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455,
	2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465,
	2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475,
	2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485,
	2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495,
	2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 553, 554,
	1225, 0, 620, 618, 2303, 621, 2600, 623, 625, 493,
	494, 495, 496, 497, 498, 0, 648, 634, 1618, 649,
	651, 652, 653, 654, 615, 613, 0, 653, 648, 2372,
	646, 1435, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 505, 0, 0, 0, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 422, 1284, 1285, 1286, 1420, 1421,
	2648, 1462, 0, 245, 667, -2, -2, 2769, -2, 701,
	702, -2, -2, 716, 720, 711, 2773, 0, 2651, 2635,
	-2, 723, 1438, 1440, 1442, 820, 821, 2322, 0, 0,
	0, 0, 0, 38, 40, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 255, -2, -2, -2, -2, 0,
	0, 2696, 2424, 2271, 2338, 2274, 2269, 346, 348, 350,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 383,
	386, 388, 392, -2, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 0, 0, 0, 0, 1107, 1099, 1100,
	1342, 0, 0, 0, -2, 501, 503, 556, 557, 0,
	1607, 1607, 564, 565, -2, 0, 0, 0, 0, 316,
	306, 1037, 1039, 1041, 1042, 0, 0, 0, 0, 0,
	656, 658, 0, 0, 285, 1044, 1046, 1048, 1049, 0,
	0, 0, 0, 0, 0, 318, 0, 0, 671, 673,
	675, 677, 748, 750, 752, 754, 756, 758, 760, 762,
	764, 767, 769, 771, 773, 775, 778, 780, 782, 785,
	788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
	808, 810, 812, 814, 815, 828, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, -2, 0, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 930, 0, 0, 0, -2, -2, -2, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, -2,
	1017, 0, 0, 831, 834, 835, 836, 837, 838, 839,
	0, 903, 928, 929, 939, 819, 0, 1265, 1608, 1464,
	1445, 1459, 1464, 1447, 1448, 1449, 1450, 1451, 1456, 1458,
	1452, 1453, 1454, 42, 44, 46, 48, 50, 52, 54,
	56, 58, 60, 444, 446, 448, 450, 452, 455, 457,
	459, -2, 1577, 1578, 507, 509, 511, 513, 515, 517,
	519, 659, 0, 661, 0, 833, -2, 0, 1612, 1612,
	1612, 0, 0, 1578, 1576, 0, 664, 665, 727, 728,
	1885, 0, 0, 0, 0, 0, 0, 0, 0, 2145,
	1973, 0, 729, -2, 2006, 2008, 2744, 2573, 2769, 2144,
	2010, 2011, 2012, 2013, 2014, 0, 2016, 2017, 2018, 2019,
	2020, 2021, 0, 2023, 0, 2028, 2029, 2030, 0, 2751,
	2248, 2332, -2, 0, 0, 2757, 2328, 0, 2111, 2046,
	-2, -2, 2355, 2334, 1817, 1818, 1819, 1820, 1821, -2,
	-2, 2787, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 0, 2732, 2752, 2753, 2758, 2760, 2754,
	2741, 2071, 2438, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 1844, 1853, -2, -2,
	-2, -2, -2, -2, -2, 2745, 2746, 2763, 2766, 2772,
	2777, 2778, 2750, 2759, 2786, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 1845, -2, -2, -2, -2, 1595, 2614, 1598, 1225,
	1596, 1580, 1582, 0, 1584, 0, 0, 0, 1589, 1615,
	1613, 0, 1664, 1593, 1594, 1687, 1687, 1711, 0, 1692,
	0, 1711, 1607, 1738, 0, 1698, 2640, 2047, 2048, 0,
	2338, 2333, -2, -2, 2784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 622, 624, 0,
	0, 0, 647, 1617, 0, 0, 0, 0, 0, 0,
	0, 0, 425, 426, 427, 428, 429, 2752, 0, 0,
	0, 434, 0, 436, 437, 438, 439, 440, 441, 442,
	215, 2752, 524, 549, 0, 215, 2752, 527, 215, 2752,
	530, 0, 533, 1340, 215, 2752, 536, 2299, 215, 2752,
	539, 541, 2307, 215, 2752, 545, 2314, 2312, 546, 0,
	548, 235, 231, 232, 233, 234, 1431, 1432, 1433, 1434,
	0, 1461, 1341, 669, 0, 695, 0, 699, 700, 2740,
	-2, 0, 2660, 704, 705, -2, 707, 1465, 1469, 1470,
	1471, 1472, 1473, 0, 0, 0, 0, 1478, 0, 0,
	0, 0, 696, 697, 714, 715, 721, 724, 0, 823,
	824, 825, 826, 827, 72, 0, 2752, 1738, 74, 0,
	2293, 2363, 2364, 2365, 2366, 2367, 2785, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837,
	2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857,
	2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867,
	2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877,
	2878, 2879, 2880, 2881, 2882, 2883, 2884, 2787, 78, 0,
	2752, 83, 0, 2752, 0, -2, 96, 0, 110, 0,
	136, 0, 2296, -2, -2, -2, 2289, 119, 0, 2752,
	0, 2268, -2, 0, 227, 307, 308, 309, 0, 1074,
	-2, 0, 1278, 1280, 1280, 0, -2, 0, 0, 0,
	1027, 2265, 2270, 1028, 1029, 2275, 0, 354, 355, 356,
	357, 358, 0, 359, 2752, 361, 362, 0, 364, 365,
	2752, 367, 368, 0, 370, 0, 372, 0, 267, 271,
	2752, 319, 320, 2351, 2352, 2359, 2360, 2361, 2362, 2752,
	396, 398, 0, 400, 401, 0, 403, 0, 0, 0,
	407, -2, 423, 0, 420, 410, 411, 413, 414, 415,
	416, 417, 0, 463, 461, 2304, 0, 0, -2, 2752,
	0, 1071, 0, 0, 1320, -2, 0, 1271, 0, 1327,
	2752, 1323, 0, -2, 0, 1605, 2752, 1482, 1103, 1104,
	1105, 1106, 1750, 490, 0, 1513, 0, 1515, 0, 1534,
	1744, 1687, 0, 0, 1749, 0, -2, 609, 2321, -2,
	559, 0, 560, 0, -2, 0, 333, 0, 0, 1052,
	1054, 1055, 1057, 1058, 1061, 1062, 1063, 1064, 0, 1066,
	1724, 286, 288, 0, 0, 0, 1051, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 0, 0, 680, 0,
	0, 829, 830, 0, 0, 846, 847, 848, 0, 333,
	2652, 2609, 2460, 855, 0, 858, 861, -2, 0, 0,
	0, 0, 865, 0, 870, 871, 872, 0, -2, 0,
	879, 881, 1035, 883, 0, 0, 885, 0, 889, 0,
	892, 0, 894, 0, 896, -2, -2, -2, 904, 905,
	-2, 910, -2, 0, 914, -2, 0, 917, 0, 920,
	-2, 0, 930, 926, 927, 0, 0, 0, 0, 947,
	948, 0, 957, 0, 960, 961, 962, 0, 966, 967,
	0, 969, 970, 971, 972, 0, 2723, 2657, 2424, 0,
	980, -2, 986, 988, 0, -2, 0, 1004, 0, 1008,
	0, 0, 1016, 0, 0, 832, 0, 840, 841, 215,
	1742, 1444, -2, 1446, 0, -2, 0, 660, 0, 663,
	1637, 1563, 1560, 0, 1634, 1635, 1564, 0, 0, 0,
	1571, 0, 1610, 1611, 0, 0, 0, 1550, 1551, 0,
	0, 0, 0, 2150, 2151, 2152, 2153, 2166, 2154, 2155,
	2165, 2163, 2164, 2156, 2157, 2162, 2176, 2177, 2167, 2168,
	2158, 2171, 2169, 2170, 2172, 2173, 2174, 2175, 0, 0,
	2181, 0, 2159, 2160, 2161, 2189, 0, 0, 2190, 0,
	2192, 0, 2182, 2178, 2179, 2180, 0, 1952, 1954, 2256,
	0, 0, 0, 2188, 2183, 2184, 1890, 1891, 1892, 1893,
	1894, 1927, 1931, 1932, 0, 0, 2007, 2253, 2252, 2009,
	0, 0, 2204, 0, 2022, -2, 0, 2145, 2199, 0,
	0, 2031, 2032, 2033, 0, 0, 2204, 0, 0, 2247,
	2043, 2044, 1882, 0, 0, 2113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 1830, 0, 1832, 0, 1833,
	1834, 1841, 1854, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 2228, -2, 0, 0, 0,
	0, 1846, 0, 1597, 0, 0, 1668, 2257, 2261, 2262,
	1668, 1668, 0, 0, 2205, 1735, 1735, 0, 0, 1730,
	1730, 1730, 1728, 1711, 0, 1711, 1721, 0, 1711, 1711,
	0, -2, 1692, 0, 0, 1721, 0, 1705, 597, 599,
	601, 603, 604, 605, 607, 1739, 1740, 0, 0, 0,
	0, 2339, 0, 0, 0, 0, 2311, 0, 0, 2324,
	0, 0, 2298, 379, 0, 0, 0, 2706, 2651, 0,
	-2, 627, 650, 1607, 0, 2207, 1765, 1769, 0, 1771,
	1772, 1773, 1774, 1775, 0, 0, 1766, -2, 1842, 1844,
	1865, 2356, 2357, 2358, 1825, 1826, 1827, 1828, 1829, 1837,
	1824, 1824, 1824, 1835, 1864, 1856, 1864, 1860, 1810, 1811,
	1812, 1847, 1848, 1849, 1850, 0, 2706, 2651, 0, -2,
	0, 637, 0, 0, 1545, 424, 0, 431, 432, 433,
	0, 520, 0, 213, 214, 0, 215, 2752, 525, 0,
	528, 0, 215, 2752, 2263, 534, 0, 537, 0, 0,
	543, 0, 0, 0, 0, 0, 215, 1547, 0, 0,
	0, 0, -2, 709, 717, 718, 719, 0, 1467, 0,
	1474, 738, 739, 740, 1476, 1477, 0, 1479, 712, 741,
	742, 743, 744, 745, 746, 0, 2277, 2278, 2279, 2280,
	2283, 2284, 0, 0, 710, 731, 713, 0, 725, 120,
	1417, 0, 0, 170, 0, 1417, 1417, 0, 0, 0,
	0, 198, 0, 1137, 0, 0, 0, 0, 136, 155,
	166, 132, 133, 134, 0, 0, 0, 0, 0, 0,
	84, 1247, 0, 1250, 0, 0, 0, 0, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 98, 99, 0,
	0, 104, 105, 0, 154, 0, 0, 0, 0, 0,
	1510, 0, 143, 0, 0, 0, 135, 136, 122, 0,
	0, 136, 156, 168, 0, 202, 204, 1134, 0, 0,
	0, 0, 0, 0, 0, 0, 226, 237, 0, 0,
	0, 1272, 0, 0, 0, 1604, 0, 0, 0, 0,
	2752, 1415, 0, 1400, 0, 1724, 2509, -2, -2, 286,
	1724, 1026, 0, 0, 2339, 2273, 0, 0, 0, 0,
	0, 0, 371, 0, 0, 0, 399, 402, 404, 405,
	406, 0, 1319, 0, 412, 453, 1196, 2752, 0, 0,
	480, 475, 0, 477, 0, 0, 0, 1246, 2752, 1244,
	2308, 0, 1269, 0, 1225, 2752, 2306, 0, 0, 0,
	1328, 2348, 1337, 1341, 1500, 0, 492, 0, 1516, 1518,
	0, 0, 1745, 0, 1747, 1687, 1607, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 1065, 292,
	0, 1723, 0, 0, 321, 1724, 286, 2626, 1050, 333,
	333, 1724, 682, 1724, 684, 0, 0, 849, 850, 0,
	333, 333, 333, 856, 857, 859, 860, -2, -2, -2,
	-2, 862, 863, 954, 0, 0, 0, 953, 873, 0,
	875, 878, 882, 0, 1020, 2635, 2651, 2706, 1033, 954,
	2424, 954, 2424, 954, 2424, 954, 954, 898, 942, 950,
	909, 916, 0, 911, 915, 918, 921, 0, 923, 931,
	0, -2, 0, 934, 0, 936, 0, 938, 954, 955,
	958, 965, 968, 973, 974, 975, 976, 2319, 977, 978,
	979, -2, 983, 984, 0, 995, 1000, 1001, 997, 0,
	0, 0, 0, 0, 0, 1011, 1012, 0, 0, 1019,
	0, 842, 1264, 0, 1457, 1637, 1563, 662, 1554, 1636,
	1555, 1562, 1565, 0, 0, 1567, 0, 1569, 0, 1632,
	1633, 1640, 1641, 0, 1651, 1652, 1644, 0, -2, 0,
	0, 1647, 1648, 1573, 0, 1590, 1591, 1592, 1621, 1624,
	1356, 0, 2885, 1886, 1760, 1887, 1888, 2292, 0, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, -2,
	-2, -2, -2, -2, -2, -2, -2, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, -2, -2,
	-2, 1928, 1929, 1930, -2, 2191, 2193, 0, 2256, 0,
	-2, 0, -2, -2, -2, -2, 1949, 0, 1951, 1956,
	1958, 1960, 0, 0, 0, 0, 2255, 1970, 2239, 2240,
	0, 0, 2147, 2148, 2149, 1955, 0, 1974, 2254, 2251,
	0, 0, 2185, 0, 2150, 2151, 2152, 2153, 2154, 2155,
	2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165,
	2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175,
	2176, 2177, 2178, 2179, 2180, 2181, 2182, 0, 2203, 1620,
	2035, 0, 0, 0, 0, 2042, 2027, 2201, 0, 2200,
	0, 0, 0, 2211, 0, 2246, 2242, 0, 2290, 1881,
	1868, 1869, 1870, 1871, 1872, 1873, 1883, 0, 2287, 2325,
	2331, 2121, 0, 0, 0, 2072, 2073, 2074, 2075, 2076,
	0, 2078, 2079, 0, 2081, 2082, 0, 2084, 2085, 0,
	2087, 2088, 2089, 2090, 2091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 0, 0, 2093, 0, 2214, -2,
	-2, -2, -2, -2, -2, -2, -2, 0, 2095, 0,
	2097, 2205, 2225, 0, 0, 1975, 0, 0, 0, 0,
	2145, 0, 2100, 2205, 2233, 0, 0, 0, 0, 0,
	2205, 0, 2238, 0, 2107, 0, 2109, 1599, 0, 0,
	1755, 0, 0, 0, 2260, 1755, 1755, 0, 1663, 0,
	0, 1731, 1732, 1733, 1734, 0, 0, 1735, 0, 1725,
	1729, 1726, 1727, 1721, 1684, 0, 0, 2294, 1721, 1690,
	1720, 0, 1225, 1710, 1721, 1721, 0, -2, 1694, 1711,
	0, 0, 598, 600, 602, 606, 608, 0, 0, 1620,
	-2, 0, -2, 335, 1224, 0, 0, 0, 0, 0,
	0, 617, 619, 0, 0, 540, 0, 0, 633, 0,
	611, 0, 614, 0, 1756, 1759, 0, 0, 1770, 1776,
	1777, 0, -2, 0, 0, 1866, 0, 0, 0, 0,
	0, 645, 0, 648, 0, 0, 0, 435, 550, 215,
	522, 0, 215, 215, 531, 0, 0, 215, 542, 215,
	2315, 215, 2313, 236, 547, 1546, 248, 0, 698, 0,
	1466, 1475, 0, 735, 0, 737, 0, 2281, 2285, 2282,
	2286, 0, 726, 0, 0, 0, 0, 1416, 0, 1363,
	0, 0, 174, 2752, 0, 217, 0, 0, 1189, 2300,
	0, 1179, 0, 0, 2446, 0, 0, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 1249, 1251, 1258, 1260, 0, 1254, 2288,
	0, 0, 1255, 0, 1257, 1259, 1261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 106, 1281, 0, 0,
	1282, 1283, 1488, 1489, 0, 1509, 1510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	0, 0, 0, 2267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1274, 0, 1315,
	1313, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 0, 0, 0, 0, -2, 1276, 1277, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 324,
	2266, 2276, 0, 1059, 1060, 360, 363, 366, 369, 254,
	0, 0, 408, 0, 0, 1109, 1084, 0, 0, 462,
	333, 0, 0, 476, 480, 2317, 1069, 1242, 1245, 0,
	1225, 2752, 1292, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 2752, 2295, 2347, 2348, 1502, 1510, 0, 1755,
	0, 1532, 1519, 0, 0, 0, 1532, 1536, 1537, 1539,
	1540, 0, 0, 1746, 1752, 558, 610, 1607, 1607, 333,
	331, 2576, 329, 326, 328, 0, 0, 1522, 1524, 0,
	0, 0, 280, 0, 289, 1724, 287, 0, 292, 0,
	0, 0, 474, 681, 686, 844, 0, 333, 852, 853,
	854, 900, 944, 952, 999, 864, 866, 867, 868, 0,
	0, 0, 1034, 1030, 1031, 1032, 884, 954, 887, 954,
	890, 954, 893, 895, 913, 919, 932, 925, 933, 0,
	0, 0, 946, 963, 0, 982, 0, 0, 0, 0,
	0, 0, 0, 1005, 1006, 1007, 1009, 1014, 1013, 1018,
	843, 1743, 1558, 1559, 1561, 0, 1570, 0, 0, 1646,
	-2, -2, 1645, 1649, 1650, -2, -2, -2, -2, 1566,
	0, 1575, 1572, 0, 1631, 1354, 1355, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1971, 0, -2, 1950,
	1953, 1957, 1959, 1961, 0, 0, 0, 0, 0, 0,
	2194, 0, 2196, 1972, 2249, 2252, 2187, 0, 2143, 0,
	0, 1619, 1620, 1620, 0, 2041, 0, 2202, 0, 2209,
	2210, 0, 2034, 0, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2045, 0, 0, 0, 0, 2077,
	2080, 2083, 2086, 0, 0, 0, 0, 2066, 0, 0,
	0, 2070, 1836, 1822, 0, 1864, 1862, 1863, 1857, 1864,
	1861, 1814, 0, 1813, 0, 2092, 0, 2094, 2096, 0,
	0, 2098, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1978, 1979, 1980, 2000,
	2099, 2231, 2232, 0, 0, 0, 0, 0, 0, 2105,
	0, 2237, 2106, 2108, 1607, 0, 1600, 0, 1665, 1654,
	1754, 0, 2258, 1724, 1667, 1669, 2259, 2297, 1654, 1654,
	0, 2206, 0, 0, 1715, 0, 0, 0, 1717, 1688,
	0, 0, 1682, 0, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1689, 1225, 1719, 1691, 1695, 2325, 0, 1721, 0,
	1706, 0, 1708, 1741, 0, 1700, 1703, 0, 0, 2340,
	1755, 0, 373, 380, 381, 374, 375, 376, 377, 0,
	1403, 0, 0, 0, 0, 0, 2208, 0, 1761, 0,
	1767, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	0, 1544, 430, 521, 215, 526, 529, 2264, 215, 535,
	538, 544, 244, 0, 694, -2, 733, 734, 736, 0,
	732, 171, 1417, 0, 0, 1359, 1361, 1365, 1371, 1374,
	0, 176, 2752, 188, 0, 2752, 0, 1153, 0, 0,
	0, 0, 0, 0, 1419, 0, 0, 2752, 215, 2752,
	215, 192, 194, 197, 0, 201, 199, 0, 1141, 0,
	0, 1144, 121, 1417, 0, 0, 124, 128, 137, 138,
	141, 0, 0, 0, 153, 0, 0, 0, 1376, 1380,
	1388, 0, 0, 0, 1252, 1253, 1256, 1262, 85, 0,
	0, 0, 1384, 1386, 1392, 97, 100, 2752, 2309, 102,
	2752, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 126, 130, 139, 140, 142, 0,
	1394, 123, 0, 230, 0, 0, 220, 215, 2752, 0,
	222, 0, 223, 224, 238, 0, 0, 0, 1072, 1073,
	1314, 0, 1267, 1268, 0, 1279, 1273, 0, 0, 0,
	0, 0, 1396, 1397, 0, 0, 0, 1415, 1412, 1724,
	250, 0, 1724, 258, 0, 2272, 0, 272, 395, 0,
	0, 0, 0, 1108, 1207, 1110, 1112, 1113, 1114, 217,
	0, 2348, 1179, 2498, 2348, 0, 0, 1079, 0, 0,
	0, 468, 464, 0, 473, 479, 478, 484, -2, 0,
	0, 0, 0, -2, 0, 0, 1330, 1324, 1325, 0,
	0, 0, 0, 2752, 1504, 1510, 0, 1605, 1620, 491,
	1511, 1532, 0, 0, 0, 1521, 1517, 1514, 1755, 0,
	0, 0, 0, 0, 1748, 1751, 561, 562, 310, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 290, 0, 293, 0, 0, 0, 298, 299, 300,
	301, 302, 303, 0, 0, 292, 322, 282, 1724, 0,
	0, 683, 0, 0, 851, 0, 874, 877, 886, 888,
	891, 935, 937, 954, 964, 989, 990, 1131, 0, 1131,
	0, 0, 1010, 1568, 0, 1643, 1574, 1625, 1626, 0,
	1356, 0, 1889, 1934, 0, 0, -2, 0, 0, 1938,
	0, 0, 0, -2, 0, 0, 0, 2195, 2197, 0,
	2251, 2186, 2036, 0, 0, 0, 2040, 2024, 2025, 0,
	2146, 2212, 2241, 2245, 0, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 0, 2291, 2326, 2330, 2119, 2120, 2124, 2305,
	0, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 1859, 0, 0, 2213, 2224, 2226, 1976,
	1977, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, -2, -2, -2, 1994, 1995, 1996, -2, -2, -2,
	2001, 0, 0, 0, 2227, 2229, 2230, 2234, 2235, 0,
	2102, 2103, 2104, 2236, 0, 1607, 1601, 1662, 0, 1753,
	1666, 0, 1662, 1662, 1614, 1713, 0, 0, 1737, 0,
	1685, 0, 1686, 0, 0, 1718, 0, 1693, 1696, 1697,
	1707, 0, 1699, 0, 1702, 0, 2036, -2, 334, 336,
	338, 0, 341, 342, 0, 0, 0, 626, 0, 1403,
	1403, 0, 628, 612, 0, 0, 1763, 0, 0, 1839,
	1843, 1867, 639, 641, 0, 0, 2706, 2651, 0, 638,
	523, 532, 246, 0, 1722, 0, 0, 0, 0, 0,
	0, 216, 0, 1188, 0, 1151, 0, 0, 1178, 0,
	0, 1194, 178, 179, 180, 0, 0, 0, 0, 190,
	0, 0, 186, 0, 196, 200, 1138, 0, 0, 0,
	0, 1364, 0, 0, 0, 150, 151, 152, 0, 157,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1494, 1495, 0, 1485, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 218, 0, 0, 0, 1353,
	240, 0, 0, 0, 0, 0, 1266, 1317, 1318, 1275,
	1377, 1381, 1389, 0, 0, 0, 0, 0, 653, 1414,
	0, 258, 256, 0, 259, 0, 262, 263, 0, 0,
	258, 252, 0, 0, 0, 1225, 409, 1082, 1195, 0,
	0, 1197, 1115, 1119, 0, 2348, 2348, 0, 2302, 0,
	1080, 0, 0, 1196, 460, 0, 467, 0, 481, 0,
	0, 1246, 0, 0, 1270, 1290, 1225, 0, 1329, 1331,
	0, 1339, 0, 0, 0, 1506, 1510, 0, 1499, 1500,
	1639, 1512, 1530, -2, 0, 0, 1620, 1538, 1535, 1541,
	1542, 0, 330, 0, 325, 327, 0, 313, 0, 1523,
	1525, 0, 1053, 1056, 0, 0, 0, 0, 0, 0,
	0, 281, 292, 1724, 317, 0, 845, 869, 945, 991,
	1130, 0, 0, 993, 0, 0, 1642, 1629, 1630, 1627,
	1356, 1936, 1940, 0, 0, 0, 1942, -2, 0, 1964,
	-2, -2, 2198, 2250, 2015, 1620, 2037, 2039, 2026, 2244,
	1884, 0, 2126, 2123, 0, 2110, 0, 2061, 2062, 0,
	0, 2065, 2067, 2068, 2069, 1823, 1816, 1815, 2223, 0,
	0, 0, 0, 2101, 1602, 0, 2115, 0, 0, 1670,
	2115, 2115, 1714, 0, 1716, 1683, 1671, 0, 1680, 0,
	2326, 1709, 1701, 0, 0, 339, 0, 343, 344, 378,
	0, 629, 630, 0, 0, 1757, 1762, 0, 1768, 1838,
	0, 0, 0, 0, 0, 247, 172, 173, 1368, 1372,
	1369, 0, 175, 0, 0, 1152, 0, 1155, 0, 0,
	0, 0, 1162, 1179, 0, 0, 0, 0, 0, 0,
	1181, 0, 1180, 0, 0, 1211, 0, 1344, 1351, 0,
	-2, 0, 0, 0, 182, 206, 0, 0, 0, 0,
	209, 1418, 184, 0, 0, 215, 215, 0, 0, 1360,
	1362, 1375, 0, 0, 0, 0, 160, 0, 0, 1378,
	1382, 1390, 1385, 1387, 1393, 0, 103, 0, 1496, 144,
	0, 0, 0, 0, 0, 0, 1395, 228, 229, 0,
	215, 0, 215, 221, 215, 1353, 0, 0, 0, 0,
	0, 0, 0, 1398, 1399, 249, 0, 0, 0, 0,
	0, 251, 323, 258, 397, 0, 1140, 0, 1207, 1199,
	1200, 1201, 0, 1111, 1206, 1208, 0, 0, 1116, 0,
	0, 0, 0, 1096, 1081, 0, 1092, 0, 0, 1109,
	1084, 0, 465, 482, 0, 485, 0, 488, 1070, 1243,
	1287, 1225, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 1508, 1510, 0, 1501, 1502, 1532, 1638, 0, 0,
	0, 1520, 1639, 0, 332, 333, 0, 333, 294, 0,
	295, 296, 297, 304, 305, 283, 284, 685, 687, 0,
	0, 693, 1129, 0, 0, 0, 0, 1628, 1944, -2,
	-2, 1965, 0, 2327, 2329, 1620, 0, 2112, 1622, 0,
	0, -2, 0, 0, 0, 1603, 1586, 0, 1661, 1653,
	1655, 1657, 2638, 2419, 2751, 1587, 1588, 1736, 0, 0,
	1704, 340, 1402, 631, 0, 0, 1764, 0, 636, 0,
	0, 0, 0, 0, 1370, 177, 0, 0, 1156, 1157,
	2301, 1159, 0, 1161, 1163, 1164, 1165, 0, 1168, 0,
	2350, 0, 1173, 1176, 1177, 0, 0, 1190, 1212, 0,
	1221, 0, 1346, 1356, 1350, 0, 1348, 1223, 0, 181,
	208, 183, 210, 205, 0, 1353, 0, 185, 195, 0,
	0, 125, 0, 0, 2413, 163, 161, 159, 101, 1357,
	0, 0, 147, 149, 127, 0, 230, 239, 1352, 241,
	225, 215, 0, 1379, 1383, 1391, 0, 1406, 1407, 1408,
	1409, 0, 0, 0, 0, 260, 0, 261, 264, 265,
	0, 0, 1084, 1139, 1083, 1198, 0, 1209, 1210, 0,
	0, 0, 0, 0, 0, 1086, 0, 1085, 0, 0,
	0, 0, 0, 466, 469, 0, 472, 0, 0, 0,
	0, 0, 1332, 1330, 0, 1338, 0, 0, 0, 1484,
	0, 0, 1503, 1504, 489, 1526, 0, 0, 1532, 1543,
	312, 0, 315, 291, 0, 689, 0, 691, 0, 992,
	994, 0, 0, 2038, 2130, 0, 0, 2063, 2064, -2,
	0, 2004, 2114, 2116, 0, 0, 0, 0, 0, 1672,
	1681, 1403, 1758, 643, 640, 642, 0, 1366, 0, 1373,
	217, 1154, 1158, 0, 0, 0, 1169, 1229, 0, 0,
	1246, 1246, 1182, 0, 0, 1215, 1216, 1136, 0, 1217,
	1218, 1219, 1345, 1631, 1351, 1192, 0, 0, 207, 212,
	0, 0, 0, 0, 0, 0, 146, 148, 0, 219,
	242, 1353, 0, 1410, 1411, 0, 0, 257, 276, 0,
	1288, 1086, 0, 1117, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1118, 1223, 0, 0, 1187, 1094, 0,
	1097, 0, 1093, 1090, 1091, 1082, 0, 470, 471, 486,
	0, 487, 0, 1291, 0, 0, 1339, 0, 0, 1491,
	1483, 1510, 1505, 1506, 1755, 1529, 1533, 0, 688, 0,
	0, 1002, 1003, 0, 0, 0, 0, 2125, 1623, 2005,
	0, 0, 1656, 1658, 1659, 1660, 632, 0, 1367, 189,
	0, 0, 1167, 1234, 0, 0, 0, 0, 0, 1183,
	1213, 1214, 1211, 1135, 0, 1349, 1347, 0, 1225, 187,
	0, 1223, 0, 1145, 0, 0, 1148, 0, 0, 164,
	2413, 162, 0, 215, 1403, 215, 0, 279, 0, 270,
	268, 269, 1078, 0, 1203, 1205, 1221, 1223, 1136, 0,
	1098, 1140, 1096, 483, 1289, 1322, 1223, 0, 1221, 0,
	1498, 1510, 1492, 1493, 0, 1508, 0, 333, 690, 692,
	2122, 2142, 2131, -2, 2709, 2420, 0, 2142, 2142, 2117,
	2118, 0, 0, 0, 1170, 1230, 1231, 0, 1226, 1227,
	1228, 2349, 1171, 1172, 1174, 1175, 1755, 0, 0, 1229,
	211, 193, 1142, 0, 0, 1143, 0, 0, 167, 0,
	169, 243, 1401, 1404, 0, 266, 0, 0, 1075, 1077,
	1202, 0, 1136, 1221, 1084, 0, 0, 0, 1084, 1086,
	1221, 0, 1136, 0, 1487, 1497, 0, 1507, 1484, 0,
	314, 2127, 0, 0, 2133, 2134, 2135, 2136, 2137, 2128,
	2129, 644, 1160, 0, 1232, 0, 1233, 0, 0, 0,
	1191, 1220, 0, 1234, 1146, 0, 1149, 0, 165, 0,
	0, 274, 275, 1204, 1084, 1136, 1755, 0, 1087, 0,
	1089, 1086, 1095, 1136, 0, 1084, 0, 1480, 1486, 1490,
	2310, 1491, 1527, 0, 0, 2139, 2140, 0, 0, 0,
	1235, 0, 1238, 1239, 0, 1236, 0, 1211, 0, 0,
	215, 0, 1755, 1084, 1186, 1088, 1078, 1084, 1223, 1755,
	1221, 1498, 0, 2138, 2141, 2132, 1166, 1237, 1240, 1241,
	1222, 1193, 0, 0, 1405, 277, 0, 1184, 1755, 1076,
	1755, 1221, 1335, 1136, 1487, 1755, 1133, 0, 0, 1185,
	1333, 1136, 1084, 1481, 1528, 1147, 1132, 0, 278, 1084,
	1755, 0, 1755, 1336, 0, 1334, 1133, 1150,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 591, 3, 597, 592, 3,
	602, 603, 595, 593, 607, 594, 604, 596, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 610, 3,
	583, 585, 584, 588, 606, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 600, 3, 601, 598, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 608, 590, 609, 586,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 587, 57926, 589, 57927, 599, 57928, 605, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
		}
	case 136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1975
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[8].union.slct(),
				ToStoreID:         sqlDollar[6].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				ToStoreID:         sqlDollar[7].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2110
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2130
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2136
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2555
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2559
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "alter function")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3198
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3209
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = nil
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3322
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3567
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CREATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create access method")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create cast")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplemented(sqllex, "create publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "create rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "create server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3610
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3614
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3615
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplemented(sqllex, "drop server")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{

			sqlVAL.union.val = nil
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DELETE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4208
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "DELETE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "INSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "INSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4289
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4322
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4413
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4429
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "GRANT")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4455
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4459
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4525
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4548
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "RESET")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4593
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "USE")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4611
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4612
		{
		}
	case 669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4617
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4620
		{
			return helpWith(sqllex, "USE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4654
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4720
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4785
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4838
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			return unimplemented(sqllex, "set from current")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4865
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4886
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4953
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.Low
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = tree.Normal
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = tree.High
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4999
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5003
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5046
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5048
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5051
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5057
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5062
		{
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5063
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5066
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5090
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.str = "client_encoding"
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.str = "timezone"
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5152
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5215
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5224
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5251
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5254
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5256
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5260
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5263
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5271
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5377
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5393
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5429
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5434
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5445
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = true
		}
	case 902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = true
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = false
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5483
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5487
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5488
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5494
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5507
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5556
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5600
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5605
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5607
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5611
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = true
		}
	case 940:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = false
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5631
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = true
		}
	case 954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = false
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5716
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5720
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5724
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5735
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5749
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5757
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5762
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5802
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5807
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5828
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5831
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5833
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5847
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5858
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5868
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5876
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5884
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5910
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5912
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5928
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5942
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5951
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5960
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5963
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5976
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6010
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6026
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6032
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6281
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6303
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6379
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6381
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6387
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6395
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6498
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6513
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6541
		{

			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.str = ""
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6557
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = nil
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6580
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6610
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6623
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6637
		{
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6638
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6658
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6664
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6666
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6694
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6731
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6737
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6738
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6751
		{
			sqlVAL.str = ""
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6812
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6819
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6905
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6990
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6998
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7025
		{

			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7035
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7039
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7042
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7102
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7138
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7149
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7166
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7176
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7191
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7256
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7257
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7258
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7259
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7260
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7261
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7382
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7418
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7427
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7435
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7459
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7477
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7481
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7493
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7527
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7542
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.str = ""
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = true
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{

			sqlVAL.union.val = true
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = false
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7610
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7624
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7636
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7648
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7658
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7668
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7762
		{
			sqlVAL.union.val = nil
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7777
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7787
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7803
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7805
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7807
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7809
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7813
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7848
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7865
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7883
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7899
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7915
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7979
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.str = ""
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.str = ""
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8052
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8058
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8175
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8237
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8263
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8283
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8289
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8301
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8307
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8321
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8327
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8339
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8378
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8386
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = tree.Types
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8446
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8450
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8475
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8479
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8517
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8538
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8546
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8583
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8591
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8629
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8631
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8634
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8643
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8644
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8645
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8662
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8666
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8674
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8690
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8694
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8707
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8736
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8758
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8802
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8825
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8830
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8841
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{

		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8862
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.str = ""
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.str = ""
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.str = ""
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8917
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8930
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8931
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8960
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8982
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9040
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9059
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9067
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9071
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9097
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9109
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9141
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9162
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9177
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9314
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9321
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9356
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9357
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9419
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9479
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9500
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9532
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9533
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9537
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = nil
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9547
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = true
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = false
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9565
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9576
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9577
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9580
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9581
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9622
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9639
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9665
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9685
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9698
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9753
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9794
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9802
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9824
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9826
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9841
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9863
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9868
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9873
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9905
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9910
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9922
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9983
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9993
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10028
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10039
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10069
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10102
		{
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = nil
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = false
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.str = tree.AstFull
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.str = tree.AstRight
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.str = tree.AstInner
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10222
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.str = tree.AstHash
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10254
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.str = ""
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10296
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10320
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10336
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = false
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10356
		{
			sqlVAL.union.val = true
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = false
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10385
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10398
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10406
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10425
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10427
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10435
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10448
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10455
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10464
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10504
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10517
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = types.Geography
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10566
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10574
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10600
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10608
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = nil
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = types.Int2
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = types.Int
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = types.Float4
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = types.Float
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10651
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10667
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = types.Bool
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = types.Float
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10700
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10706
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10728
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.String
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = true
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = false
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10773
		{
			sqlVAL.union.val = types.Date
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10777
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10785
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10799
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10808
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10816
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10833
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = true
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = false
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = false
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = types.Interval
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10857
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10923
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10956
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = nil
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10986
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11046
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11309
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11324
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11390
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11412
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11520
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11542
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11546
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11612
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11629
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11655
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11664
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11679
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11689
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11698
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11713
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11724
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11725
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11749
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11815
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11940
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11945
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11965
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11981
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11996
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12001
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12016
		{
			return unimplemented(sqllex, "treat")
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12018
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12037
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.str = ""
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12164
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12191
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12288
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12328
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12332
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12364
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12389
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12417
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12463
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12672
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12704
		{
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12705
		{
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12719
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12785
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12808
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12817
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12858
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12870
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12874
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12883
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12894
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12903
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12911
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12928
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13035
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13077
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13081
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13085
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13099
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13103
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13129
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13160
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13167
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13192
		{
			sqlVAL.str = ""
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
