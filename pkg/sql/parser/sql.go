// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}

//line sql-gen.y:677
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11716

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1325,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	224, 199,
	454, 199,
	-2, 0,
	-1, 79,
	213, 1128,
	226, 1128,
	242, 337,
	345, 337,
	354, 912,
	386, 337,
	398, 912,
	439, 912,
	464, 337,
	489, 912,
	-2, 0,
	-1, 85,
	242, 341,
	-2, 0,
	-1, 86,
	127, 1325,
	219, 1325,
	474, 1325,
	475, 1325,
	-2, 0,
	-1, 102,
	144, 1296,
	162, 1296,
	175, 1296,
	222, 1296,
	255, 1296,
	304, 1296,
	314, 1296,
	469, 1296,
	-2, 1267,
	-1, 136,
	152, 797,
	241, 797,
	348, 766,
	403, 766,
	457, 797,
	-2, 0,
	-1, 138,
	4, 1327,
	21, 1327,
	22, 1327,
	23, 1327,
	24, 1327,
	25, 1327,
	26, 1327,
	28, 1327,
	29, 1327,
	35, 1327,
	40, 1327,
	41, 1327,
	42, 1327,
	43, 1327,
	44, 1327,
	45, 1327,
	46, 1327,
	47, 1327,
	48, 1327,
	49, 1327,
	51, 1327,
	52, 1327,
	53, 1327,
	54, 1327,
	56, 1327,
	57, 1327,
	58, 1327,
	59, 1327,
	60, 1327,
	61, 1327,
	62, 1327,
	66, 1327,
	67, 1327,
	68, 1327,
	69, 1327,
	71, 1327,
	72, 1327,
	73, 1327,
	77, 1327,
	78, 1327,
	79, 1327,
	80, 1327,
	81, 1327,
	82, 1327,
	83, 1327,
	86, 1327,
	87, 1327,
	88, 1327,
	89, 1327,
	91, 1327,
	93, 1327,
	94, 1327,
	95, 1327,
	96, 1327,
	97, 1327,
	98, 1327,
	100, 1327,
	101, 1327,
	102, 1327,
	104, 1327,
	105, 1327,
	113, 1327,
	114, 1327,
	115, 1327,
	116, 1327,
	118, 1327,
	119, 1327,
	120, 1327,
	122, 1327,
	123, 1327,
	124, 1327,
	126, 1327,
	127, 1327,
	129, 1327,
	130, 1327,
	131, 1327,
	134, 1327,
	135, 1327,
	136, 1327,
	138, 1327,
	139, 1327,
	141, 1327,
	142, 1327,
	143, 1327,
	145, 1327,
	146, 1327,
	147, 1327,
	148, 1327,
	149, 1327,
	150, 1327,
	151, 1327,
	152, 1327,
	153, 1327,
	154, 1327,
	155, 1327,
	156, 1327,
	157, 1327,
	158, 1327,
	159, 1327,
	161, 1327,
	167, 1327,
	168, 1327,
	169, 1327,
	170, 1327,
	174, 1327,
	176, 1327,
	180, 1327,
	181, 1327,
	182, 1327,
	183, 1327,
	184, 1327,
	185, 1327,
	187, 1327,
	188, 1327,
	190, 1327,
	191, 1327,
	193, 1327,
	194, 1327,
	195, 1327,
	196, 1327,
	197, 1327,
	198, 1327,
	199, 1327,
	200, 1327,
	201, 1327,
	203, 1327,
	204, 1327,
	206, 1327,
	207, 1327,
	208, 1327,
	209, 1327,
	213, 1327,
	214, 1327,
	215, 1327,
	216, 1327,
	219, 1327,
	220, 1327,
	221, 1327,
	223, 1327,
	225, 1327,
	226, 1327,
	228, 1327,
	230, 1327,
	231, 1327,
	232, 1327,
	234, 1327,
	238, 1327,
	239, 1327,
	240, 1327,
	241, 1327,
	242, 1327,
	243, 1327,
	245, 1327,
	246, 1327,
	247, 1327,
	249, 1327,
	250, 1327,
	252, 1327,
	253, 1327,
	256, 1327,
	257, 1327,
	258, 1327,
	261, 1327,
	262, 1327,
	263, 1327,
	264, 1327,
	266, 1327,
	267, 1327,
	268, 1327,
	269, 1327,
	270, 1327,
	271, 1327,
	272, 1327,
	273, 1327,
	274, 1327,
	275, 1327,
	276, 1327,
	278, 1327,
	280, 1327,
	281, 1327,
	282, 1327,
	283, 1327,
	284, 1327,
	285, 1327,
	286, 1327,
	287, 1327,
	288, 1327,
	289, 1327,
	290, 1327,
	292, 1327,
	294, 1327,
	296, 1327,
	297, 1327,
	299, 1327,
	300, 1327,
	301, 1327,
	302, 1327,
	303, 1327,
	306, 1327,
	309, 1327,
	310, 1327,
	311, 1327,
	312, 1327,
	315, 1327,
	316, 1327,
	317, 1327,
	319, 1327,
	321, 1327,
	322, 1327,
	323, 1327,
	324, 1327,
	325, 1327,
	326, 1327,
	327, 1327,
	328, 1327,
	329, 1327,
	330, 1327,
	331, 1327,
	332, 1327,
	334, 1327,
	335, 1327,
	336, 1327,
	337, 1327,
	338, 1327,
	339, 1327,
	340, 1327,
	341, 1327,
	342, 1327,
	344, 1327,
	346, 1327,
	347, 1327,
	348, 1327,
	349, 1327,
	350, 1327,
	351, 1327,
	352, 1327,
	353, 1327,
	354, 1327,
	355, 1327,
	356, 1327,
	358, 1327,
	364, 1327,
	366, 1327,
	367, 1327,
	368, 1327,
	369, 1327,
	370, 1327,
	371, 1327,
	372, 1327,
	373, 1327,
	375, 1327,
	376, 1327,
	377, 1327,
	379, 1327,
	380, 1327,
	381, 1327,
	382, 1327,
	383, 1327,
	384, 1327,
	386, 1327,
	387, 1327,
	388, 1327,
	389, 1327,
	390, 1327,
	391, 1327,
	392, 1327,
	393, 1327,
	394, 1327,
	395, 1327,
	396, 1327,
	398, 1327,
	399, 1327,
	400, 1327,
	401, 1327,
	402, 1327,
	403, 1327,
	405, 1327,
	406, 1327,
	407, 1327,
	408, 1327,
	409, 1327,
	411, 1327,
	412, 1327,
	413, 1327,
	414, 1327,
	415, 1327,
	416, 1327,
	417, 1327,
	419, 1327,
	421, 1327,
	422, 1327,
	423, 1327,
	424, 1327,
	425, 1327,
	426, 1327,
	427, 1327,
	428, 1327,
	429, 1327,
	430, 1327,
	431, 1327,
	432, 1327,
	433, 1327,
	435, 1327,
	436, 1327,
	438, 1327,
	440, 1327,
	441, 1327,
	442, 1327,
	443, 1327,
	444, 1327,
	445, 1327,
	446, 1327,
	447, 1327,
	449, 1327,
	450, 1327,
	451, 1327,
	452, 1327,
	453, 1327,
	455, 1327,
	457, 1327,
	458, 1327,
	459, 1327,
	460, 1327,
	461, 1327,
	463, 1327,
	464, 1327,
	465, 1327,
	467, 1327,
	468, 1327,
	471, 1327,
	472, 1327,
	473, 1327,
	474, 1327,
	475, 1327,
	476, 1327,
	477, 1327,
	479, 1327,
	482, 1327,
	483, 1327,
	484, 1327,
	485, 1327,
	486, 1327,
	487, 1327,
	489, 1327,
	490, 1327,
	491, 1327,
	492, 1327,
	497, 1327,
	498, 1327,
	499, 1327,
	500, 1327,
	501, 1327,
	502, 1327,
	-2, 0,
	-1, 139,
	1, 1201,
	230, 1201,
	344, 1201,
	352, 1201,
	505, 1201,
	529, 1201,
	-2, 0,
	-1, 141,
	1, 1201,
	529, 1201,
	-2, 0,
	-1, 142,
	1, 1201,
	529, 1201,
	-2, 0,
	-1, 143,
	1, 1201,
	454, 1201,
	529, 1201,
	-2, 0,
	-1, 172,
	144, 1295,
	162, 1295,
	175, 1295,
	222, 1295,
	255, 1295,
	304, 1295,
	314, 1295,
	469, 1295,
	-2, 1270,
	-1, 210,
	4, 1334,
	5, 1334,
	6, 1334,
	7, 1334,
	8, 1334,
	9, 1334,
	10, 1334,
	21, 1334,
	22, 1334,
	23, 1334,
	24, 1334,
	25, 1334,
	26, 1334,
	28, 1334,
	29, 1334,
	35, 1334,
	36, 1334,
	40, 1334,
	41, 1334,
	42, 1334,
	43, 1334,
	44, 1334,
	45, 1334,
	46, 1334,
	47, 1334,
	48, 1334,
	49, 1334,
	51, 1334,
	52, 1334,
	53, 1334,
	54, 1334,
	56, 1334,
	57, 1334,
	58, 1334,
	59, 1334,
	60, 1334,
	61, 1334,
	62, 1334,
	63, 1334,
	64, 1334,
	65, 1334,
	66, 1334,
	67, 1334,
	68, 1334,
	69, 1334,
	71, 1334,
	72, 1334,
	73, 1334,
	75, 1334,
	77, 1334,
	78, 1334,
	79, 1334,
	80, 1334,
	81, 1334,
	82, 1334,
	83, 1334,
	86, 1334,
	87, 1334,
	88, 1334,
	89, 1334,
	91, 1334,
	93, 1334,
	94, 1334,
	95, 1334,
	96, 1334,
	97, 1334,
	98, 1334,
	100, 1334,
	101, 1334,
	102, 1334,
	103, 1334,
	104, 1334,
	105, 1334,
	106, 1334,
	107, 1334,
	108, 1334,
	109, 1334,
	110, 1334,
	111, 1334,
	112, 1334,
	113, 1334,
	114, 1334,
	115, 1334,
	116, 1334,
	117, 1334,
	118, 1334,
	119, 1334,
	120, 1334,
	121, 1334,
	122, 1334,
	123, 1334,
	124, 1334,
	126, 1334,
	127, 1334,
	129, 1334,
	130, 1334,
	131, 1334,
	134, 1334,
	135, 1334,
	136, 1334,
	138, 1334,
	139, 1334,
	141, 1334,
	142, 1334,
	143, 1334,
	145, 1334,
	146, 1334,
	147, 1334,
	148, 1334,
	149, 1334,
	150, 1334,
	151, 1334,
	152, 1334,
	153, 1334,
	154, 1334,
	155, 1334,
	156, 1334,
	157, 1334,
	158, 1334,
	159, 1334,
	160, 1334,
	161, 1334,
	167, 1334,
	168, 1334,
	169, 1334,
	170, 1334,
	174, 1334,
	176, 1334,
	179, 1334,
	180, 1334,
	181, 1334,
	182, 1334,
	183, 1334,
	184, 1334,
	185, 1334,
	187, 1334,
	188, 1334,
	190, 1334,
	191, 1334,
	193, 1334,
	194, 1334,
	195, 1334,
	196, 1334,
	197, 1334,
	198, 1334,
	199, 1334,
	200, 1334,
	201, 1334,
	202, 1334,
	203, 1334,
	204, 1334,
	206, 1334,
	207, 1334,
	208, 1334,
	209, 1334,
	213, 1334,
	214, 1334,
	215, 1334,
	216, 1334,
	218, 1334,
	219, 1334,
	220, 1334,
	221, 1334,
	223, 1334,
	225, 1334,
	226, 1334,
	227, 1334,
	228, 1334,
	229, 1334,
	230, 1334,
	231, 1334,
	232, 1334,
	233, 1334,
	234, 1334,
	238, 1334,
	239, 1334,
	240, 1334,
	241, 1334,
	242, 1334,
	243, 1334,
	245, 1334,
	246, 1334,
	247, 1334,
	249, 1334,
	250, 1334,
	251, 1334,
	252, 1334,
	253, 1334,
	254, 1334,
	256, 1334,
	257, 1334,
	258, 1334,
	259, 1334,
	260, 1334,
	261, 1334,
	262, 1334,
	263, 1334,
	264, 1334,
	266, 1334,
	267, 1334,
	268, 1334,
	269, 1334,
	270, 1334,
	271, 1334,
	272, 1334,
	273, 1334,
	274, 1334,
	275, 1334,
	276, 1334,
	278, 1334,
	279, 1334,
	280, 1334,
	281, 1334,
	282, 1334,
	283, 1334,
	284, 1334,
	285, 1334,
	286, 1334,
	287, 1334,
	288, 1334,
	289, 1334,
	290, 1334,
	291, 1334,
	292, 1334,
	293, 1334,
	294, 1334,
	295, 1334,
	296, 1334,
	297, 1334,
	298, 1334,
	299, 1334,
	300, 1334,
	301, 1334,
	302, 1334,
	303, 1334,
	306, 1334,
	310, 1334,
	311, 1334,
	312, 1334,
	315, 1334,
	316, 1334,
	317, 1334,
	318, 1334,
	319, 1334,
	320, 1334,
	321, 1334,
	322, 1334,
	323, 1334,
	324, 1334,
	325, 1334,
	326, 1334,
	327, 1334,
	328, 1334,
	329, 1334,
	330, 1334,
	331, 1334,
	332, 1334,
	334, 1334,
	335, 1334,
	336, 1334,
	337, 1334,
	338, 1334,
	339, 1334,
	340, 1334,
	341, 1334,
	342, 1334,
	344, 1334,
	346, 1334,
	347, 1334,
	348, 1334,
	349, 1334,
	350, 1334,
	351, 1334,
	352, 1334,
	353, 1334,
	354, 1334,
	355, 1334,
	356, 1334,
	358, 1334,
	364, 1334,
	366, 1334,
	367, 1334,
	368, 1334,
	369, 1334,
	370, 1334,
	371, 1334,
	372, 1334,
	373, 1334,
	375, 1334,
	376, 1334,
	377, 1334,
	378, 1334,
	379, 1334,
	380, 1334,
	381, 1334,
	382, 1334,
	383, 1334,
	384, 1334,
	386, 1334,
	387, 1334,
	388, 1334,
	389, 1334,
	390, 1334,
	391, 1334,
	392, 1334,
	393, 1334,
	394, 1334,
	395, 1334,
	396, 1334,
	398, 1334,
	399, 1334,
	400, 1334,
	401, 1334,
	402, 1334,
	403, 1334,
	404, 1334,
	405, 1334,
	406, 1334,
	407, 1334,
	408, 1334,
	409, 1334,
	410, 1334,
	411, 1334,
	412, 1334,
	413, 1334,
	414, 1334,
	415, 1334,
	416, 1334,
	417, 1334,
	419, 1334,
	421, 1334,
	422, 1334,
	423, 1334,
	424, 1334,
	425, 1334,
	426, 1334,
	427, 1334,
	428, 1334,
	429, 1334,
	430, 1334,
	431, 1334,
	432, 1334,
	433, 1334,
	435, 1334,
	436, 1334,
	437, 1334,
	438, 1334,
	440, 1334,
	441, 1334,
	442, 1334,
	443, 1334,
	444, 1334,
	445, 1334,
	446, 1334,
	447, 1334,
	449, 1334,
	450, 1334,
	451, 1334,
	452, 1334,
	453, 1334,
	455, 1334,
	457, 1334,
	458, 1334,
	459, 1334,
	460, 1334,
	461, 1334,
	462, 1334,
	463, 1334,
	464, 1334,
	465, 1334,
	467, 1334,
	468, 1334,
	470, 1334,
	471, 1334,
	472, 1334,
	473, 1334,
	474, 1334,
	475, 1334,
	476, 1334,
	477, 1334,
	478, 1334,
	479, 1334,
	482, 1334,
	483, 1334,
	484, 1334,
	485, 1334,
	486, 1334,
	487, 1334,
	489, 1334,
	490, 1334,
	491, 1334,
	492, 1334,
	497, 1334,
	498, 1334,
	499, 1334,
	500, 1334,
	501, 1334,
	502, 1334,
	503, 1334,
	510, 1334,
	517, 1334,
	518, 1334,
	519, 1334,
	526, 1334,
	530, 1334,
	-2, 0,
	-1, 638,
	178, 2044,
	454, 2044,
	509, 2044,
	528, 2044,
	-2, 0,
	-1, 639,
	178, 2136,
	454, 2136,
	509, 2136,
	528, 2136,
	-2, 0,
	-1, 640,
	178, 2032,
	454, 2032,
	509, 2032,
	528, 2032,
	-2, 0,
	-1, 642,
	178, 2241,
	454, 2241,
	509, 2241,
	528, 2241,
	-2, 0,
	-1, 644,
	178, 2275,
	454, 2275,
	509, 2275,
	528, 2275,
	-2, 0,
	-1, 651,
	178, 2151,
	454, 2151,
	509, 2151,
	528, 2151,
	-2, 614,
	-1, 682,
	528, 1982,
	531, 1982,
	-2, 851,
	-1, 683,
	528, 1984,
	531, 1984,
	-2, 852,
	-1, 684,
	528, 1983,
	531, 1983,
	-2, 853,
	-1, 685,
	531, 1917,
	-2, 854,
	-1, 707,
	175, 213,
	-2, 0,
	-1, 729,
	489, 1105,
	-2, 913,
	-1, 769,
	4, 1126,
	21, 1126,
	22, 1126,
	23, 1126,
	24, 1126,
	25, 1126,
	26, 1126,
	28, 1126,
	29, 1126,
	35, 1126,
	40, 1126,
	41, 1126,
	42, 1126,
	43, 1126,
	44, 1126,
	45, 1126,
	46, 1126,
	47, 1126,
	48, 1126,
	49, 1126,
	51, 1126,
	52, 1126,
	53, 1126,
	54, 1126,
	56, 1126,
	57, 1126,
	58, 1126,
	59, 1126,
	60, 1126,
	61, 1126,
	62, 1126,
	66, 1126,
	67, 1126,
	68, 1126,
	69, 1126,
	71, 1126,
	72, 1126,
	73, 1126,
	77, 1126,
	78, 1126,
	79, 1126,
	80, 1126,
	81, 1126,
	82, 1126,
	83, 1126,
	86, 1126,
	87, 1126,
	88, 1126,
	89, 1126,
	91, 1126,
	93, 1126,
	94, 1126,
	95, 1126,
	96, 1126,
	97, 1126,
	98, 1126,
	100, 1126,
	101, 1126,
	102, 1126,
	104, 1126,
	105, 1126,
	113, 1126,
	114, 1126,
	115, 1126,
	116, 1126,
	118, 1126,
	119, 1126,
	120, 1126,
	122, 1126,
	123, 1126,
	124, 1126,
	126, 1126,
	127, 1126,
	129, 1126,
	130, 1126,
	131, 1126,
	134, 1126,
	135, 1126,
	136, 1126,
	138, 1126,
	139, 1126,
	141, 1126,
	142, 1126,
	143, 1126,
	145, 1126,
	146, 1126,
	147, 1126,
	148, 1126,
	149, 1126,
	150, 1126,
	151, 1126,
	152, 1126,
	153, 1126,
	154, 1126,
	155, 1126,
	156, 1126,
	157, 1126,
	158, 1126,
	159, 1126,
	161, 1126,
	167, 1126,
	168, 1126,
	169, 1126,
	170, 1126,
	174, 1126,
	176, 1126,
	180, 1126,
	181, 1126,
	182, 1126,
	183, 1126,
	184, 1126,
	185, 1126,
	187, 1126,
	188, 1126,
	190, 1126,
	191, 1126,
	193, 1126,
	194, 1126,
	195, 1126,
	196, 1126,
	197, 1126,
	198, 1126,
	199, 1126,
	200, 1126,
	201, 1126,
	203, 1126,
	204, 1126,
	206, 1126,
	207, 1126,
	208, 1126,
	209, 1126,
	213, 1126,
	214, 1126,
	215, 1126,
	216, 1126,
	219, 1126,
	220, 1126,
	221, 1126,
	223, 1126,
	225, 1126,
	226, 1126,
	228, 1126,
	230, 1126,
	231, 1126,
	232, 1126,
	234, 1126,
	238, 1126,
	239, 1126,
	240, 1126,
	241, 1126,
	242, 1126,
	243, 1126,
	245, 1126,
	246, 1126,
	247, 1126,
	249, 1126,
	250, 1126,
	252, 1126,
	253, 1126,
	256, 1126,
	257, 1126,
	258, 1126,
	261, 1126,
	262, 1126,
	263, 1126,
	264, 1126,
	266, 1126,
	267, 1126,
	268, 1126,
	269, 1126,
	270, 1126,
	271, 1126,
	272, 1126,
	273, 1126,
	274, 1126,
	275, 1126,
	276, 1126,
	278, 1126,
	280, 1126,
	281, 1126,
	282, 1126,
	283, 1126,
	284, 1126,
	285, 1126,
	286, 1126,
	287, 1126,
	288, 1126,
	289, 1126,
	290, 1126,
	292, 1126,
	294, 1126,
	296, 1126,
	297, 1126,
	299, 1126,
	300, 1126,
	301, 1126,
	302, 1126,
	303, 1126,
	306, 1126,
	310, 1126,
	311, 1126,
	312, 1126,
	315, 1126,
	316, 1126,
	317, 1126,
	319, 1126,
	321, 1126,
	322, 1126,
	323, 1126,
	324, 1126,
	325, 1126,
	326, 1126,
	327, 1126,
	328, 1126,
	329, 1126,
	330, 1126,
	331, 1126,
	332, 1126,
	334, 1126,
	335, 1126,
	336, 1126,
	337, 1126,
	338, 1126,
	339, 1126,
	340, 1126,
	341, 1126,
	342, 1126,
	344, 1126,
	346, 1126,
	347, 1126,
	348, 1126,
	349, 1126,
	350, 1126,
	351, 1126,
	352, 1126,
	353, 1126,
	354, 1126,
	355, 1126,
	356, 1126,
	358, 1126,
	364, 1126,
	366, 1126,
	367, 1126,
	368, 1126,
	369, 1126,
	370, 1126,
	371, 1126,
	372, 1126,
	373, 1126,
	375, 1126,
	376, 1126,
	377, 1126,
	379, 1126,
	380, 1126,
	381, 1126,
	382, 1126,
	383, 1126,
	384, 1126,
	386, 1126,
	387, 1126,
	388, 1126,
	389, 1126,
	390, 1126,
	391, 1126,
	392, 1126,
	393, 1126,
	394, 1126,
	395, 1126,
	396, 1126,
	398, 1126,
	399, 1126,
	400, 1126,
	401, 1126,
	402, 1126,
	403, 1126,
	405, 1126,
	406, 1126,
	407, 1126,
	408, 1126,
	409, 1126,
	411, 1126,
	412, 1126,
	413, 1126,
	414, 1126,
	415, 1126,
	416, 1126,
	417, 1126,
	419, 1126,
	421, 1126,
	422, 1126,
	423, 1126,
	424, 1126,
	425, 1126,
	426, 1126,
	427, 1126,
	428, 1126,
	429, 1126,
	430, 1126,
	431, 1126,
	432, 1126,
	433, 1126,
	435, 1126,
	436, 1126,
	438, 1126,
	440, 1126,
	441, 1126,
	442, 1126,
	443, 1126,
	444, 1126,
	445, 1126,
	446, 1126,
	447, 1126,
	449, 1126,
	450, 1126,
	451, 1126,
	452, 1126,
	453, 1126,
	455, 1126,
	457, 1126,
	458, 1126,
	459, 1126,
	460, 1126,
	461, 1126,
	463, 1126,
	464, 1126,
	465, 1126,
	467, 1126,
	468, 1126,
	471, 1126,
	472, 1126,
	473, 1126,
	474, 1126,
	475, 1126,
	476, 1126,
	477, 1126,
	479, 1126,
	482, 1126,
	483, 1126,
	484, 1126,
	485, 1126,
	486, 1126,
	487, 1126,
	489, 1126,
	490, 1126,
	491, 1126,
	492, 1126,
	497, 1126,
	498, 1126,
	499, 1126,
	500, 1126,
	501, 1126,
	502, 1126,
	-2, 0,
	-1, 848,
	348, 767,
	403, 767,
	-2, 0,
	-1, 849,
	348, 766,
	403, 766,
	-2, 710,
	-1, 853,
	1, 807,
	525, 807,
	527, 807,
	529, 807,
	-2, 0,
	-1, 854,
	1, 745,
	525, 745,
	527, 745,
	529, 745,
	-2, 0,
	-1, 855,
	1, 850,
	175, 850,
	525, 850,
	527, 850,
	529, 850,
	-2, 0,
	-1, 863,
	1, 770,
	525, 770,
	527, 770,
	529, 770,
	-2, 0,
	-1, 869,
	1, 807,
	525, 807,
	527, 807,
	529, 807,
	-2, 0,
	-1, 870,
	1, 809,
	525, 809,
	527, 809,
	529, 809,
	-2, 0,
	-1, 871,
	1, 812,
	525, 812,
	527, 812,
	529, 812,
	-2, 0,
	-1, 877,
	1, 829,
	525, 829,
	527, 829,
	529, 829,
	-2, 0,
	-1, 878,
	1, 831,
	525, 831,
	527, 831,
	529, 831,
	-2, 0,
	-1, 927,
	162, 1336,
	175, 1336,
	255, 1336,
	304, 1336,
	-2, 1274,
	-1, 942,
	162, 1335,
	175, 1335,
	255, 1335,
	304, 1335,
	-2, 1271,
	-1, 968,
	528, 1981,
	-2, 622,
	-1, 996,
	5, 1973,
	526, 1971,
	-2, 1962,
	-1, 1004,
	5, 1994,
	526, 1991,
	-2, 1982,
	-1, 1005,
	5, 1995,
	526, 1992,
	-2, 1983,
	-1, 1013,
	528, 1979,
	-2, 1961,
	-1, 1014,
	526, 2355,
	-2, 1980,
	-1, 1037,
	526, 2354,
	-2, 1996,
	-1, 1038,
	5, 1501,
	-2, 2325,
	-1, 1039,
	5, 1502,
	-2, 2326,
	-1, 1040,
	5, 1503,
	-2, 2340,
	-1, 1041,
	5, 1504,
	-2, 2304,
	-1, 1042,
	5, 1505,
	-2, 2338,
	-1, 1043,
	5, 1513,
	-2, 2317,
	-1, 1044,
	5, 1500,
	-2, 2313,
	-1, 1045,
	5, 1500,
	-2, 2312,
	-1, 1046,
	5, 1500,
	-2, 2331,
	-1, 1047,
	5, 1511,
	-2, 2306,
	-1, 1048,
	5, 1516,
	-2, 2305,
	-1, 1049,
	5, 1518,
	-2, 2350,
	-1, 1052,
	5, 1540,
	-2, 2343,
	-1, 1053,
	5, 1532,
	-2, 2344,
	-1, 1054,
	5, 1540,
	-2, 2345,
	-1, 1055,
	5, 1536,
	-2, 2346,
	-1, 1056,
	5, 1486,
	-2, 2318,
	-1, 1057,
	5, 1487,
	-2, 2319,
	-1, 1058,
	5, 1488,
	-2, 2307,
	-1, 1085,
	5, 1523,
	-2, 2351,
	-1, 1086,
	5, 1524,
	-2, 2341,
	-1, 1087,
	5, 1525,
	490, 1525,
	-2, 2308,
	-1, 1088,
	5, 1526,
	490, 1526,
	-2, 2309,
	-1, 1125,
	526, 1991,
	-2, 1982,
	-1, 1126,
	526, 1992,
	-2, 1983,
	-1, 1156,
	178, 2275,
	454, 2275,
	509, 2275,
	528, 2275,
	-2, 0,
	-1, 1159,
	1, 600,
	529, 600,
	-2, 1209,
	-1, 1284,
	366, 1957,
	405, 1957,
	519, 1957,
	-2, 1955,
	-1, 1296,
	530, 1957,
	-2, 1958,
	-1, 1303,
	1, 1102,
	525, 1102,
	527, 1102,
	529, 1102,
	-2, 1323,
	-1, 1357,
	354, 912,
	489, 912,
	-2, 336,
	-1, 1378,
	1, 1102,
	525, 1102,
	527, 1102,
	529, 1102,
	-2, 1323,
	-1, 1385,
	4, 1126,
	21, 1126,
	22, 1126,
	23, 1126,
	24, 1126,
	25, 1126,
	26, 1126,
	28, 1126,
	29, 1126,
	35, 1126,
	40, 1126,
	41, 1126,
	42, 1126,
	43, 1126,
	44, 1126,
	45, 1126,
	46, 1126,
	47, 1126,
	48, 1126,
	49, 1126,
	51, 1126,
	52, 1126,
	53, 1126,
	54, 1126,
	56, 1126,
	57, 1126,
	58, 1126,
	59, 1126,
	60, 1126,
	61, 1126,
	62, 1126,
	66, 1126,
	67, 1126,
	68, 1126,
	69, 1126,
	71, 1126,
	72, 1126,
	73, 1126,
	77, 1126,
	78, 1126,
	79, 1126,
	80, 1126,
	81, 1126,
	82, 1126,
	83, 1126,
	86, 1126,
	87, 1126,
	88, 1126,
	89, 1126,
	91, 1126,
	93, 1126,
	94, 1126,
	95, 1126,
	96, 1126,
	97, 1126,
	98, 1126,
	100, 1126,
	101, 1126,
	102, 1126,
	104, 1126,
	105, 1126,
	113, 1126,
	114, 1126,
	115, 1126,
	116, 1126,
	118, 1126,
	119, 1126,
	120, 1126,
	122, 1126,
	123, 1126,
	124, 1126,
	126, 1126,
	127, 1126,
	129, 1126,
	130, 1126,
	131, 1126,
	134, 1126,
	135, 1126,
	136, 1126,
	138, 1126,
	139, 1126,
	141, 1126,
	142, 1126,
	143, 1126,
	145, 1126,
	146, 1126,
	147, 1126,
	148, 1126,
	149, 1126,
	150, 1126,
	151, 1126,
	152, 1126,
	153, 1126,
	154, 1126,
	155, 1126,
	156, 1126,
	157, 1126,
	158, 1126,
	159, 1126,
	167, 1126,
	168, 1126,
	169, 1126,
	170, 1126,
	174, 1126,
	176, 1126,
	180, 1126,
	181, 1126,
	182, 1126,
	183, 1126,
	184, 1126,
	185, 1126,
	187, 1126,
	188, 1126,
	190, 1126,
	191, 1126,
	193, 1126,
	194, 1126,
	195, 1126,
	196, 1126,
	197, 1126,
	198, 1126,
	199, 1126,
	200, 1126,
	201, 1126,
	203, 1126,
	204, 1126,
	206, 1126,
	207, 1126,
	208, 1126,
	209, 1126,
	214, 1126,
	215, 1126,
	216, 1126,
	219, 1126,
	220, 1126,
	221, 1126,
	223, 1126,
	225, 1126,
	226, 1126,
	228, 1126,
	230, 1126,
	231, 1126,
	232, 1126,
	234, 1126,
	238, 1126,
	239, 1126,
	240, 1126,
	241, 1126,
	242, 1126,
	243, 1126,
	245, 1126,
	246, 1126,
	247, 1126,
	249, 1126,
	250, 1126,
	252, 1126,
	253, 1126,
	256, 1126,
	257, 1126,
	258, 1126,
	261, 1126,
	262, 1126,
	263, 1126,
	264, 1126,
	266, 1126,
	267, 1126,
	268, 1126,
	269, 1126,
	270, 1126,
	271, 1126,
	272, 1126,
	273, 1126,
	274, 1126,
	275, 1126,
	276, 1126,
	278, 1126,
	280, 1126,
	281, 1126,
	282, 1126,
	283, 1126,
	284, 1126,
	285, 1126,
	286, 1126,
	287, 1126,
	288, 1126,
	289, 1126,
	290, 1126,
	292, 1126,
	296, 1126,
	297, 1126,
	299, 1126,
	300, 1126,
	301, 1126,
	302, 1126,
	303, 1126,
	306, 1126,
	308, 1126,
	310, 1126,
	311, 1126,
	312, 1126,
	315, 1126,
	316, 1126,
	317, 1126,
	319, 1126,
	321, 1126,
	322, 1126,
	323, 1126,
	324, 1126,
	325, 1126,
	326, 1126,
	327, 1126,
	328, 1126,
	329, 1126,
	330, 1126,
	331, 1126,
	332, 1126,
	334, 1126,
	335, 1126,
	336, 1126,
	337, 1126,
	338, 1126,
	339, 1126,
	340, 1126,
	341, 1126,
	342, 1126,
	344, 1126,
	346, 1126,
	347, 1126,
	348, 1126,
	349, 1126,
	350, 1126,
	351, 1126,
	352, 1126,
	353, 1126,
	354, 1126,
	355, 1126,
	356, 1126,
	358, 1126,
	364, 1126,
	366, 1126,
	367, 1126,
	368, 1126,
	369, 1126,
	370, 1126,
	371, 1126,
	372, 1126,
	373, 1126,
	375, 1126,
	376, 1126,
	377, 1126,
	379, 1126,
	380, 1126,
	381, 1126,
	382, 1126,
	383, 1126,
	384, 1126,
	386, 1126,
	387, 1126,
	388, 1126,
	389, 1126,
	390, 1126,
	391, 1126,
	392, 1126,
	393, 1126,
	394, 1126,
	395, 1126,
	396, 1126,
	398, 1126,
	399, 1126,
	400, 1126,
	401, 1126,
	402, 1126,
	403, 1126,
	405, 1126,
	406, 1126,
	407, 1126,
	408, 1126,
	409, 1126,
	411, 1126,
	412, 1126,
	413, 1126,
	414, 1126,
	415, 1126,
	416, 1126,
	417, 1126,
	419, 1126,
	421, 1126,
	422, 1126,
	423, 1126,
	424, 1126,
	425, 1126,
	426, 1126,
	427, 1126,
	428, 1126,
	429, 1126,
	430, 1126,
	431, 1126,
	432, 1126,
	433, 1126,
	435, 1126,
	436, 1126,
	438, 1126,
	440, 1126,
	441, 1126,
	442, 1126,
	443, 1126,
	444, 1126,
	445, 1126,
	446, 1126,
	447, 1126,
	449, 1126,
	450, 1126,
	451, 1126,
	452, 1126,
	453, 1126,
	455, 1126,
	457, 1126,
	458, 1126,
	459, 1126,
	460, 1126,
	461, 1126,
	463, 1126,
	464, 1126,
	465, 1126,
	467, 1126,
	468, 1126,
	471, 1126,
	472, 1126,
	473, 1126,
	474, 1126,
	475, 1126,
	476, 1126,
	477, 1126,
	479, 1126,
	482, 1126,
	483, 1126,
	484, 1126,
	485, 1126,
	486, 1126,
	487, 1126,
	489, 1126,
	490, 1126,
	491, 1126,
	492, 1126,
	497, 1126,
	498, 1126,
	499, 1126,
	500, 1126,
	501, 1126,
	502, 1126,
	-2, 0,
	-1, 1458,
	1, 475,
	525, 475,
	527, 475,
	529, 475,
	-2, 1294,
	-1, 1461,
	4, 2349,
	11, 2349,
	12, 2349,
	14, 2349,
	15, 2349,
	16, 2349,
	17, 2349,
	18, 2349,
	19, 2349,
	21, 2349,
	22, 2349,
	23, 2349,
	24, 2349,
	25, 2349,
	26, 2349,
	28, 2349,
	29, 2349,
	32, 2349,
	33, 2349,
	35, 2349,
	37, 2349,
	40, 2349,
	41, 2349,
	42, 2349,
	43, 2349,
	44, 2349,
	45, 2349,
	46, 2349,
	47, 2349,
	48, 2349,
	49, 2349,
	51, 2349,
	52, 2349,
	53, 2349,
	54, 2349,
	56, 2349,
	57, 2349,
	58, 2349,
	59, 2349,
	60, 2349,
	61, 2349,
	62, 2349,
	66, 2349,
	67, 2349,
	68, 2349,
	69, 2349,
	71, 2349,
	72, 2349,
	73, 2349,
	74, 2349,
	77, 2349,
	78, 2349,
	79, 2349,
	80, 2349,
	81, 2349,
	82, 2349,
	83, 2349,
	84, 2349,
	86, 2349,
	87, 2349,
	88, 2349,
	89, 2349,
	91, 2349,
	92, 2349,
	93, 2349,
	94, 2349,
	95, 2349,
	96, 2349,
	97, 2349,
	98, 2349,
	100, 2349,
	101, 2349,
	102, 2349,
	103, 2349,
	104, 2349,
	105, 2349,
	113, 2349,
	114, 2349,
	115, 2349,
	116, 2349,
	118, 2349,
	119, 2349,
	120, 2349,
	122, 2349,
	123, 2349,
	124, 2349,
	126, 2349,
	127, 2349,
	129, 2349,
	130, 2349,
	131, 2349,
	134, 2349,
	135, 2349,
	136, 2349,
	138, 2349,
	139, 2349,
	141, 2349,
	142, 2349,
	143, 2349,
	145, 2349,
	146, 2349,
	147, 2349,
	148, 2349,
	149, 2349,
	150, 2349,
	151, 2349,
	152, 2349,
	153, 2349,
	154, 2349,
	155, 2349,
	156, 2349,
	157, 2349,
	158, 2349,
	159, 2349,
	163, 2349,
	164, 2349,
	165, 2349,
	166, 2349,
	167, 2349,
	168, 2349,
	169, 2349,
	170, 2349,
	173, 2349,
	174, 2349,
	176, 2349,
	179, 2349,
	180, 2349,
	181, 2349,
	182, 2349,
	183, 2349,
	184, 2349,
	185, 2349,
	187, 2349,
	188, 2349,
	190, 2349,
	191, 2349,
	193, 2349,
	194, 2349,
	195, 2349,
	196, 2349,
	197, 2349,
	198, 2349,
	199, 2349,
	200, 2349,
	201, 2349,
	202, 2349,
	203, 2349,
	204, 2349,
	205, 2349,
	206, 2349,
	207, 2349,
	208, 2349,
	209, 2349,
	211, 2349,
	212, 2349,
	214, 2349,
	215, 2349,
	216, 2349,
	218, 2349,
	219, 2349,
	220, 2349,
	221, 2349,
	223, 2349,
	225, 2349,
	226, 2349,
	227, 2349,
	228, 2349,
	229, 2349,
	230, 2349,
	231, 2349,
	232, 2349,
	233, 2349,
	234, 2349,
	236, 2349,
	237, 2349,
	238, 2349,
	239, 2349,
	240, 2349,
	241, 2349,
	242, 2349,
	243, 2349,
	245, 2349,
	246, 2349,
	247, 2349,
	249, 2349,
	250, 2349,
	251, 2349,
	252, 2349,
	253, 2349,
	254, 2349,
	256, 2349,
	257, 2349,
	258, 2349,
	261, 2349,
	262, 2349,
	263, 2349,
	264, 2349,
	265, 2349,
	266, 2349,
	267, 2349,
	268, 2349,
	269, 2349,
	270, 2349,
	271, 2349,
	272, 2349,
	273, 2349,
	274, 2349,
	275, 2349,
	276, 2349,
	278, 2349,
	279, 2349,
	280, 2349,
	281, 2349,
	282, 2349,
	283, 2349,
	284, 2349,
	285, 2349,
	286, 2349,
	287, 2349,
	288, 2349,
	289, 2349,
	290, 2349,
	292, 2349,
	295, 2349,
	296, 2349,
	297, 2349,
	299, 2349,
	300, 2349,
	301, 2349,
	302, 2349,
	303, 2349,
	306, 2349,
	310, 2349,
	311, 2349,
	312, 2349,
	313, 2349,
	315, 2349,
	316, 2349,
	317, 2349,
	319, 2349,
	321, 2349,
	322, 2349,
	323, 2349,
	324, 2349,
	325, 2349,
	326, 2349,
	327, 2349,
	328, 2349,
	329, 2349,
	330, 2349,
	331, 2349,
	332, 2349,
	334, 2349,
	335, 2349,
	336, 2349,
	337, 2349,
	338, 2349,
	339, 2349,
	340, 2349,
	341, 2349,
	342, 2349,
	344, 2349,
	346, 2349,
	347, 2349,
	348, 2349,
	349, 2349,
	350, 2349,
	351, 2349,
	352, 2349,
	353, 2349,
	354, 2349,
	355, 2349,
	356, 2349,
	358, 2349,
	364, 2349,
	365, 2349,
	366, 2349,
	367, 2349,
	368, 2349,
	369, 2349,
	370, 2349,
	371, 2349,
	372, 2349,
	373, 2349,
	375, 2349,
	376, 2349,
	377, 2349,
	378, 2349,
	379, 2349,
	380, 2349,
	381, 2349,
	382, 2349,
	383, 2349,
	384, 2349,
	385, 2349,
	386, 2349,
	387, 2349,
	388, 2349,
	389, 2349,
	390, 2349,
	391, 2349,
	392, 2349,
	393, 2349,
	394, 2349,
	395, 2349,
	396, 2349,
	398, 2349,
	399, 2349,
	400, 2349,
	401, 2349,
	402, 2349,
	403, 2349,
	405, 2349,
	406, 2349,
	407, 2349,
	408, 2349,
	409, 2349,
	410, 2349,
	411, 2349,
	412, 2349,
	413, 2349,
	414, 2349,
	415, 2349,
	416, 2349,
	417, 2349,
	419, 2349,
	421, 2349,
	422, 2349,
	423, 2349,
	424, 2349,
	425, 2349,
	426, 2349,
	427, 2349,
	428, 2349,
	429, 2349,
	430, 2349,
	431, 2349,
	432, 2349,
	433, 2349,
	435, 2349,
	436, 2349,
	438, 2349,
	440, 2349,
	441, 2349,
	442, 2349,
	443, 2349,
	444, 2349,
	445, 2349,
	446, 2349,
	447, 2349,
	449, 2349,
	450, 2349,
	451, 2349,
	452, 2349,
	453, 2349,
	455, 2349,
	457, 2349,
	458, 2349,
	459, 2349,
	460, 2349,
	461, 2349,
	463, 2349,
	464, 2349,
	465, 2349,
	467, 2349,
	468, 2349,
	471, 2349,
	472, 2349,
	473, 2349,
	474, 2349,
	475, 2349,
	476, 2349,
	477, 2349,
	479, 2349,
	482, 2349,
	483, 2349,
	484, 2349,
	485, 2349,
	486, 2349,
	487, 2349,
	489, 2349,
	490, 2349,
	491, 2349,
	492, 2349,
	497, 2349,
	498, 2349,
	499, 2349,
	500, 2349,
	501, 2349,
	502, 2349,
	503, 2349,
	504, 2349,
	507, 2349,
	508, 2349,
	509, 2349,
	510, 2349,
	511, 2349,
	512, 2349,
	514, 2349,
	515, 2349,
	516, 2349,
	517, 2349,
	518, 2349,
	519, 2349,
	520, 2349,
	521, 2349,
	522, 2349,
	524, 2349,
	527, 2349,
	528, 2349,
	530, 2349,
	531, 2349,
	-2, 0,
	-1, 1466,
	178, 2241,
	454, 2241,
	509, 2241,
	528, 2241,
	-2, 0,
	-1, 1515,
	348, 767,
	403, 767,
	-2, 0,
	-1, 1540,
	1, 762,
	525, 762,
	527, 762,
	529, 762,
	-2, 0,
	-1, 1541,
	1, 798,
	525, 798,
	527, 798,
	529, 798,
	-2, 0,
	-1, 1542,
	1, 769,
	525, 769,
	527, 769,
	529, 769,
	-2, 0,
	-1, 1544,
	1, 773,
	525, 773,
	527, 773,
	529, 773,
	-2, 0,
	-1, 1550,
	1, 780,
	525, 780,
	527, 780,
	529, 780,
	-2, 0,
	-1, 1578,
	1, 2295,
	525, 2295,
	527, 2295,
	528, 2295,
	529, 2295,
	-2, 827,
	-1, 1579,
	1, 2238,
	525, 2238,
	527, 2238,
	528, 2238,
	529, 2238,
	-2, 828,
	-1, 1594,
	1, 1204,
	529, 1204,
	-2, 1209,
	-1, 1597,
	162, 1335,
	175, 1335,
	255, 1335,
	304, 1335,
	-2, 1275,
	-1, 1691,
	144, 1296,
	162, 1296,
	175, 1296,
	222, 1296,
	255, 1296,
	304, 1296,
	314, 1296,
	469, 1296,
	-2, 1701,
	-1, 1751,
	527, 1851,
	-2, 0,
	-1, 1786,
	144, 1296,
	162, 1296,
	175, 1296,
	222, 1296,
	255, 1296,
	304, 1296,
	314, 1296,
	469, 1296,
	-2, 1416,
	-1, 1834,
	526, 1528,
	-2, 1516,
	-1, 1870,
	1, 602,
	529, 602,
	-2, 1209,
	-1, 1982,
	205, 214,
	-2, 1990,
	-1, 1983,
	205, 215,
	-2, 257,
	-1, 2110,
	1, 764,
	525, 764,
	527, 764,
	529, 764,
	-2, 0,
	-1, 2111,
	1, 800,
	525, 800,
	527, 800,
	529, 800,
	-2, 0,
	-1, 2141,
	1, 782,
	525, 782,
	527, 782,
	529, 782,
	-2, 0,
	-1, 2187,
	383, 1362,
	384, 1362,
	-2, 1561,
	-1, 2218,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1581,
	-1, 2219,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1582,
	-1, 2220,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1583,
	-1, 2221,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1584,
	-1, 2222,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1585,
	-1, 2223,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1586,
	-1, 2224,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1587,
	-1, 2225,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1588,
	-1, 2237,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1600,
	-1, 2238,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1601,
	-1, 2239,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1602,
	-1, 2242,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1607,
	-1, 2248,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1611,
	-1, 2250,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1619,
	-1, 2251,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1620,
	-1, 2252,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1621,
	-1, 2253,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1622,
	-1, 2365,
	5, 1994,
	178, 1862,
	526, 1991,
	-2, 1982,
	-1, 2366,
	178, 1863,
	-2, 2300,
	-1, 2367,
	178, 1864,
	-2, 2150,
	-1, 2368,
	178, 1865,
	-2, 2060,
	-1, 2369,
	178, 1866,
	-2, 2104,
	-1, 2370,
	178, 1867,
	-2, 2145,
	-1, 2371,
	178, 1868,
	-2, 2236,
	-1, 2372,
	178, 1869,
	-2, 1684,
	-1, 2441,
	1, 1417,
	2, 1417,
	103, 1417,
	144, 1417,
	162, 1417,
	175, 1417,
	179, 1417,
	189, 1417,
	192, 1417,
	218, 1417,
	222, 1417,
	233, 1417,
	251, 1417,
	255, 1417,
	279, 1417,
	304, 1417,
	308, 1417,
	314, 1417,
	374, 1417,
	378, 1417,
	469, 1417,
	480, 1417,
	494, 1417,
	495, 1417,
	496, 1417,
	505, 1417,
	525, 1417,
	527, 1417,
	529, 1417,
	531, 1417,
	-2, 1416,
	-1, 2454,
	526, 1963,
	-2, 1977,
	-1, 2456,
	1, 273,
	-2, 1323,
	-1, 2480,
	526, 1527,
	-2, 1517,
	-1, 2614,
	1, 1102,
	525, 1102,
	527, 1102,
	529, 1102,
	-2, 1323,
	-1, 2786,
	309, 1365,
	-2, 2339,
	-1, 2787,
	309, 1366,
	-2, 2222,
	-1, 2791,
	383, 1928,
	384, 1928,
	-2, 1682,
	-1, 2792,
	383, 1932,
	384, 1932,
	-2, 1683,
	-1, 2793,
	383, 1929,
	384, 1929,
	-2, 1682,
	-1, 2794,
	383, 1933,
	384, 1933,
	-2, 1683,
	-1, 2807,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1609,
	-1, 2808,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1613,
	-1, 2814,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1615,
	-1, 3014,
	230, 1209,
	344, 1209,
	352, 1209,
	505, 1209,
	-2, 599,
	-1, 3148,
	1, 1102,
	525, 1102,
	527, 1102,
	529, 1102,
	-2, 1323,
	-1, 3256,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1617,
	-1, 3263,
	227, 0,
	229, 0,
	295, 0,
	-2, 1636,
	-1, 3330,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1665,
	-1, 3331,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1666,
	-1, 3332,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1667,
	-1, 3336,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1671,
	-1, 3337,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1672,
	-1, 3338,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1673,
	-1, 3384,
	526, 1964,
	-2, 1978,
	-1, 3517,
	528, 2455,
	-2, 1253,
	-1, 3575,
	227, 0,
	229, 0,
	295, 0,
	-2, 1637,
	-1, 3578,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1640,
	-1, 3579,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1642,
	-1, 3789,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1641,
	-1, 3790,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1643,
	-1, 3801,
	227, 0,
	-2, 1674,
	-1, 3951,
	227, 0,
	-2, 1675,
	-1, 4101,
	48, 0,
	202, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 2303,
}

const sqlPrivate = 57344

const sqlLast = 107268

var sqlAct = [...]int{

	244, 3994, 3973, 3833, 3879, 4100, 4111, 2705, 4209, 3133,
	4075, 3558, 4059, 3836, 4112, 2515, 1323, 2941, 4056, 4113,
	4041, 1979, 3412, 4159, 3821, 2675, 1129, 3714, 2050, 3886,
	3955, 2079, 3295, 4099, 2942, 37, 3746, 3741, 952, 3696,
	3778, 3509, 3895, 2197, 2088, 3134, 3165, 3451, 3728, 1444,
	3032, 3644, 1821, 1449, 3918, 2265, 3129, 2063, 3751, 3486,
	1606, 3158, 2579, 3471, 3248, 3160, 1923, 3469, 3806, 3413,
	684, 649, 1481, 3211, 2664, 2205, 1286, 2198, 1188, 3213,
	2397, 1792, 2646, 2727, 2716, 2637, 3386, 1281, 2800, 2984,
	1306, 2964, 2024, 1118, 684, 3557, 2713, 2724, 2956, 2659,
	2924, 2707, 783, 3614, 2661, 951, 163, 2945, 2947, 3119,
	2517, 2676, 1761, 2714, 1933, 1737, 1974, 2433, 2923, 1973,
	2554, 2202, 2434, 3956, 3355, 2307, 2278, 1523, 1699, 1289,
	1480, 1968, 1424, 2061, 2784, 943, 679, 2593, 1959, 2647,
	3051, 2723, 1000, 1906, 1952, 1909, 1781, 1109, 1172, 3880,
	4, 1762, 1007, 2298, 2262, 2436, 1594, 2186, 238, 1448,
	2415, 1003, 2169, 1050, 1896, 237, 2167, 2394, 2991, 1445,
	3131, 1459, 1822, 2466, 1376, 2669, 1005, 2013, 2553, 1435,
	2717, 685, 686, 1161, 2506, 2465, 615, 2301, 1771, 1732,
	1112, 2423, 163, 1091, 2405, 2361, 2279, 1607, 2351, 998,
	2086, 172, 1684, 601, 2168, 1308, 1608, 623, 2170, 173,
	101, 631, 1550, 1126, 2012, 681, 643, 729, 2036, 1108,
	756, 1922, 1318, 2191, 981, 618, 1400, 1457, 690, 42,
	41, 39, 30, 28, 26, 693, 1089, 777, 842, 626,
	1114, 1613, 1593, 2835, 1329, 861, 3369, 2831, 3370, 2943,
	1621, 1622, 690, 1654, 1655, 1656, 1664, 1665, 1666, 693,
	4272, 4266, 4251, 947, 2414, 3192, 2414, 2052, 3175, 2309,
	4250, 1657, 1652, 1778, 2414, 2052, 4226, 4224, 4220, 1624,
	3660, 3660, 1987, 3012, 4141, 4135, 3174, 1670, 4142, 2414,
	4133, 1169, 4130, 4127, 2414, 2052, 4131, 4128, 4122, 2672,
	2052, 4097, 1987, 2052, 4096, 1987, 4095, 947, 1987, 798,
	2072, 236, 4090, 1623, 4089, 4084, 2072, 2087, 2072, 3660,
	4082, 1106, 4054, 1643, 3660, 778, 3660, 2407, 1621, 1622,
	4035, 1640, 4028, 4027, 2471, 4022, 2414, 2414, 4021, 3660,
	4015, 3987, 3660, 3953, 1987, 3706, 3192, 2471, 3935, 2799,
	1652, 68, 3546, 781, 780, 3932, 2414, 1624, 3929, 1987,
	1092, 1092, 3660, 1169, 3888, 928, 3853, 69, 3889, 4036,
	1987, 1621, 1622, 927, 1121, 3852, 3844, 3843, 3812, 1987,
	1987, 3660, 1987, 73, 3791, 948, 3770, 3948, 2471, 3359,
	2072, 1623, 3759, 1652, 1140, 3691, 3192, 1621, 1622, 2414,
	1624, 3936, 1646, 1647, 1648, 1649, 1095, 3679, 1096, 3659,
	937, 2414, 1629, 3660, 1621, 1622, 3577, 942, 2072, 1652,
	2471, 3525, 79, 3519, 3484, 3208, 1624, 3208, 3485, 2896,
	2897, 3379, 2844, 3377, 1623, 3380, 1652, 3378, 2845, 3359,
	2575, 1661, 1093, 1624, 1671, 3362, 2896, 2897, 3279, 2414,
	1651, 1653, 1987, 3275, 3207, 2406, 2467, 2414, 3208, 85,
	1623, 3199, 3740, 2940, 1145, 3200, 1667, 2414, 1668, 3706,
	2935, 1141, 3680, 100, 2414, 1638, 1639, 1623, 86, 97,
	2414, 2934, 2887, 1987, 2885, 2414, 2888, 1643, 2886, 3546,
	1629, 1987, 2877, 1659, 2875, 1640, 2878, 2846, 2414, 2730,
	3200, 2414, 2703, 2072, 1644, 2702, 2075, 2570, 2505, 2075,
	1876, 2896, 2897, 2490, 2914, 2915, 2916, 2414, 2051, 2911,
	2643, 2470, 2896, 2897, 2834, 2471, 2463, 87, 1651, 1653,
	2414, 2457, 3573, 1629, 1669, 1987, 2413, 2074, 2067, 1986,
	2414, 2075, 2587, 2503, 1927, 1757, 3571, 1317, 3442, 1621,
	1622, 3251, 1658, 3229, 1779, 1962, 2450, 1525, 2449, 1629,
	3176, 2448, 2447, 1621, 1622, 2446, 1646, 1647, 1648, 1649,
	1097, 1651, 1653, 1094, 936, 210, 1629, 2053, 1624, 3177,
	3630, 210, 1644, 964, 2911, 2053, 1493, 935, 210, 2764,
	3589, 2902, 1624, 1322, 934, 933, 932, 1651, 1653, 931,
	930, 926, 925, 924, 1650, 2053, 923, 922, 2902, 921,
	2053, 920, 1623, 2053, 1651, 1653, 919, 212, 918, 4118,
	917, 3174, 916, 212, 1645, 1644, 1623, 915, 914, 913,
	212, 912, 911, 910, 2334, 892, 1141, 840, 839, 1638,
	1639, 1543, 838, 837, 836, 835, 834, 833, 1005, 1662,
	832, 1644, 1005, 90, 996, 831, 830, 829, 828, 827,
	826, 825, 824, 211, 823, 822, 1343, 1191, 1644, 211,
	821, 1191, 1489, 2902, 204, 1311, 211, 820, 2320, 819,
	2406, 1475, 205, 2912, 2902, 818, 1171, 204, 817, 1165,
	1176, 816, 815, 171, 93, 205, 96, 814, 813, 1005,
	2912, 1005, 1645, 1005, 2671, 812, 811, 3395, 1311, 801,
	174, 1629, 800, 1322, 796, 795, 789, 174, 788, 747,
	210, 746, 1297, 706, 705, 1629, 1479, 2917, 782, 1292,
	704, 1311, 136, 2896, 2897, 1328, 2691, 1335, 696, 1341,
	86, 695, 1660, 1330, 2051, 1645, 1635, 1636, 1642, 1663,
	1641, 1637, 694, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 212, 663, 2070, 2912, 4044, 2318, 1650, 2067,
	1321, 1645, 2162, 2304, 1311, 1005, 2912, 1337, 655, 654,
	1311, 653, 1382, 1384, 1311, 637, 138, 232, 1645, 231,
	230, 229, 1005, 228, 1005, 227, 226, 225, 1311, 224,
	175, 1159, 223, 2913, 1005, 222, 1005, 221, 211, 220,
	219, 1455, 1387, 1184, 1331, 1278, 1283, 1141, 218, 204,
	2913, 217, 216, 215, 214, 213, 3373, 205, 1473, 3209,
	1478, 2987, 2938, 1300, 1625, 1626, 1627, 1628, 1630, 1631,
	1487, 2857, 1492, 2840, 2655, 1331, 690, 1438, 1311, 779,
	2624, 2305, 2475, 693, 1331, 1740, 2455, 2440, 2939, 1154,
	1904, 1739, 1342, 1805, 1710, 1005, 1740, 1124, 1005, 1320,
	1319, 1325, 1739, 1178, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1743, 1128, 2913, 163, 163, 1372, 1782,
	4098, 2082, 2896, 2897, 1738, 2902, 2913, 1701, 4001, 1544,
	1429, 1432, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 3945,
	1494, 3939, 1620, 3937, 1641, 1637, 1331, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 2306, 2303, 2896, 2897,
	3831, 1462, 1464, 2905, 2906, 2898, 2899, 2900, 2901, 2903,
	2904, 1165, 2896, 2897, 1165, 1441, 3805, 1456, 3760, 2907,
	2905, 2906, 2898, 2899, 2900, 2901, 2903, 2904, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1403, 3755, 3739, 3637, 3612,
	2081, 3611, 3605, 1336, 3604, 3603, 3596, 3595, 3593, 3588,
	1284, 210, 210, 1296, 1299, 1460, 3440, 2912, 3585, 1005,
	948, 3584, 950, 3483, 136, 1005, 3489, 1559, 3399, 3398,
	3397, 3383, 3350, 3349, 3348, 3271, 3267, 2908, 2909, 2910,
	3203, 2982, 2931, 2922, 2907, 2905, 2906, 2898, 2899, 2900,
	2901, 2903, 2904, 212, 212, 2907, 2905, 2906, 2898, 2899,
	2900, 2901, 2903, 2904, 2539, 2895, 210, 1474, 1702, 2892,
	1700, 1592, 2891, 2889, 1299, 1299, 2884, 2883, 2882, 1488,
	2879, 2308, 2876, 2657, 2902, 1625, 1626, 1627, 1628, 1630,
	1631, 210, 2856, 1598, 2839, 1708, 2832, 210, 1690, 211,
	211, 1627, 1628, 1630, 1631, 2704, 210, 2441, 212, 1105,
	204, 204, 1499, 1299, 2291, 1620, 1994, 1701, 205, 205,
	2902, 2936, 2027, 1992, 1619, 1516, 4265, 4218, 4217, 1005,
	1005, 1005, 3490, 212, 2902, 1005, 4151, 2913, 1546, 212,
	174, 174, 1126, 4149, 1126, 4140, 1130, 3297, 212, 1759,
	3993, 210, 3983, 3980, 211, 3979, 3978, 3972, 3965, 1191,
	3933, 3917, 1545, 3916, 2268, 204, 3904, 1005, 210, 3901,
	684, 3849, 1595, 205, 1839, 684, 2912, 1808, 1603, 211,
	3827, 1796, 1602, 928, 1005, 211, 2302, 1818, 1311, 2333,
	204, 927, 1864, 212, 211, 174, 204, 3803, 205, 3786,
	1742, 1597, 210, 1005, 205, 204, 3785, 1599, 3767, 1191,
	212, 2484, 210, 205, 3754, 1768, 3766, 1616, 1617, 3731,
	174, 3707, 1813, 3629, 3610, 3547, 174, 3541, 3538, 948,
	3430, 1165, 3957, 2319, 3429, 174, 3416, 210, 1809, 211,
	3415, 1902, 1765, 1766, 212, 3365, 3490, 1815, 3353, 3262,
	204, 163, 1789, 1867, 212, 1688, 211, 3210, 205, 2656,
	2274, 3734, 2979, 3193, 1868, 1734, 1735, 204, 2906, 2898,
	2899, 2900, 2901, 2903, 2904, 205, 1092, 3151, 1873, 212,
	174, 3091, 3064, 3035, 3034, 3006, 2861, 2860, 2855, 2823,
	211, 1790, 3004, 2636, 1746, 1745, 2913, 174, 1744, 1741,
	211, 204, 1733, 1121, 1731, 1121, 1811, 2482, 2481, 205,
	2452, 204, 2445, 2412, 2316, 1804, 1760, 1755, 1754, 205,
	1753, 1893, 2317, 1752, 1751, 211, 1833, 1750, 690, 1749,
	1748, 174, 1747, 690, 1787, 693, 204, 1836, 1728, 1727,
	693, 174, 1726, 1870, 205, 1725, 1311, 1311, 2083, 1724,
	1723, 1722, 1721, 3035, 948, 1720, 1191, 1758, 1866, 1621,
	1622, 1719, 1718, 1717, 1915, 1716, 174, 1715, 1714, 1703,
	1689, 1687, 210, 1827, 1682, 1799, 1798, 1797, 1795, 1794,
	1793, 1153, 1784, 1948, 1143, 1816, 1951, 1136, 1624, 1956,
	1862, 3633, 3581, 3394, 3376, 3368, 2843, 1819, 2473, 2443,
	3816, 3635, 2896, 2897, 3393, 1702, 3002, 1685, 1895, 1927,
	1895, 1800, 3067, 1780, 212, 3682, 4215, 210, 1980, 1984,
	1175, 4208, 1623, 3896, 1898, 1888, 3981, 3161, 2898, 2899,
	2900, 2901, 2903, 2904, 3891, 1895, 3890, 3758, 1173, 3709,
	3940, 3708, 3938, 3681, 3632, 3550, 3549, 3548, 3371, 3195,
	3194, 1932, 2380, 3493, 1166, 1169, 1782, 1740, 2558, 212,
	211, 1712, 1169, 1739, 2898, 2899, 2900, 2901, 2903, 2904,
	1590, 204, 1960, 1169, 2881, 1174, 1296, 3428, 1524, 205,
	2900, 2901, 2903, 2904, 3830, 2304, 2880, 2805, 2057, 2541,
	1170, 2059, 1977, 2017, 1311, 1723, 1311, 2064, 1311, 4094,
	2066, 174, 1723, 2080, 2069, 211, 690, 908, 3136, 1882,
	3135, 2102, 3887, 693, 1311, 1311, 204, 1887, 1886, 1515,
	4138, 1895, 1897, 4123, 205, 1311, 4110, 3120, 2022, 1320,
	1319, 2728, 1871, 1560, 2033, 1525, 1975, 1311, 3448, 1311,
	1311, 1311, 1160, 3447, 1955, 3807, 174, 3433, 909, 3226,
	2943, 3299, 2849, 2299, 4119, 2480, 1756, 1736, 3127, 2021,
	684, 1428, 1381, 2305, 1314, 1148, 4132, 2089, 1167, 2101,
	1985, 4129, 3170, 2584, 2581, 1002, 1168, 3407, 3974, 3742,
	4053, 3962, 3038, 3423, 2711, 2668, 3113, 956, 2041, 1503,
	4175, 2055, 4176, 4014, 3243, 2030, 3870, 3016, 3670, 742,
	1349, 906, 1693, 2085, 2094, 2004, 1698, 904, 2491, 2005,
	902, 2028, 1315, 4260, 2106, 4120, 1709, 900, 897, 3863,
	3855, 2147, 3704, 2145, 3457, 1927, 3456, 2509, 3450, 3446,
	3444, 3404, 3403, 1104, 1890, 1557, 2519, 3116, 2306, 2303,
	1005, 2507, 1005, 3461, 1403, 2090, 2038, 2039, 2038, 1005,
	2161, 2035, 1839, 1839, 1191, 2998, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 743, 1005, 2854, 1005, 1005, 1005, 1005, 2179, 1460,
	1883, 1460, 2166, 3460, 948, 888, 948, 2043, 2044, 1558,
	1924, 3410, 979, 1154, 1175, 946, 1005, 2020, 690, 1005,
	1005, 2076, 2853, 2077, 1556, 693, 2852, 1005, 2851, 1169,
	2177, 1005, 2177, 1005, 1005, 1175, 1892, 2809, 3018, 1359,
	2093, 1191, 1920, 2522, 2591, 2590, 2586, 1005, 1005, 1005,
	1005, 2577, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1166, 3066, 1501, 2308, 2569, 2568, 1925, 1926, 2567, 1174,
	1166, 1891, 2566, 4013, 2175, 2124, 2175, 1296, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 2545, 1120, 2532,
	1174, 1005, 2464, 945, 1921, 2141, 1124, 2249, 1124, 2280,
	2281, 1596, 2080, 1126, 1833, 1833, 2190, 2509, 2347, 3003,
	1191, 2346, 2767, 2280, 2296, 1836, 1836, 1360, 1812, 1126,
	2207, 2507, 2665, 3227, 2203, 2204, 1393, 2003, 1392, 2160,
	1391, 1414, 1390, 2165, 2178, 1005, 1191, 2164, 2163, 2342,
	1800, 2171, 1316, 2431, 2173, 928, 1355, 2098, 928, 928,
	1367, 1827, 1827, 2194, 3784, 661, 2195, 2196, 2364, 2364,
	2378, 2295, 2280, 2264, 1918, 2398, 2400, 2543, 2302, 2159,
	1631, 2404, 2428, 2117, 1167, 2896, 2897, 2498, 2914, 2915,
	2916, 1496, 1168, 1910, 1167, 947, 2474, 1500, 1911, 883,
	2156, 894, 1168, 2264, 1569, 4203, 3572, 2456, 2562, 2531,
	2176, 2151, 2176, 1958, 3838, 1311, 2782, 2114, 2299, 2521,
	2770, 2420, 941, 2904, 2109, 2453, 2276, 2555, 2556, 2555,
	2556, 1482, 4087, 3419, 2797, 1122, 1957, 1789, 948, 2293,
	3656, 2530, 3683, 4212, 1133, 1191, 3234, 948, 2442, 4175,
	1555, 948, 1601, 1092, 2555, 2556, 745, 744, 2911, 1517,
	1165, 3666, 2272, 660, 2040, 2427, 163, 2432, 1953, 2270,
	2438, 2439, 2419, 3652, 1121, 1839, 2174, 2158, 2174, 3467,
	1589, 2118, 1525, 1131, 2373, 2360, 3233, 2110, 2389, 4204,
	1121, 2402, 1925, 1926, 3015, 1513, 2583, 2761, 2538, 2488,
	2410, 2411, 2421, 1191, 1497, 1873, 1912, 2425, 2426, 1742,
	884, 2468, 1152, 3081, 809, 3431, 3288, 1311, 3466, 1787,
	1954, 1552, 3840, 1914, 3653, 4116, 2582, 2580, 2308, 4192,
	3703, 2574, 1005, 1005, 2769, 1005, 3074, 1525, 883, 948,
	1899, 1900, 2111, 2344, 3445, 1169, 2520, 2902, 2345, 2796,
	944, 2348, 3080, 2349, 2350, 1169, 2489, 2766, 1910, 2578,
	2246, 941, 1540, 1911, 2511, 2483, 2625, 898, 2640, 2628,
	2616, 2630, 2563, 898, 2260, 3073, 898, 1502, 1734, 1735,
	3443, 1134, 4206, 899, 898, 1916, 2146, 2547, 2144, 2486,
	3783, 2653, 2487, 3432, 3115, 613, 2679, 2820, 740, 2492,
	739, 2917, 2258, 2542, 3927, 1946, 1930, 2534, 1573, 2615,
	3085, 1377, 2670, 1311, 1311, 2670, 1311, 1541, 2585, 2546,
	608, 2565, 2544, 3285, 2686, 2818, 2155, 1833, 1311, 2510,
	2690, 2514, 2564, 3664, 4219, 2476, 2524, 2527, 1836, 2912,
	2725, 2308, 4191, 1311, 1945, 1929, 2768, 2548, 4229, 884,
	1991, 1990, 2789, 2790, 2649, 1375, 3919, 2694, 2557, 2559,
	2560, 2561, 2462, 4210, 2733, 2734, 1413, 2699, 3920, 1299,
	4164, 1912, 4117, 885, 1827, 2740, 2741, 2742, 2750, 1005,
	2751, 1354, 2693, 3167, 3563, 690, 662, 3562, 1914, 659,
	4242, 1357, 693, 1917, 2052, 2508, 3648, 1918, 3286, 3921,
	2729, 3649, 3420, 2157, 4032, 1963, 3168, 2116, 1320, 2622,
	1970, 3975, 1918, 2758, 2244, 1299, 2748, 2247, 2254, 2634,
	163, 2619, 3989, 1005, 2710, 2621, 1377, 2685, 3049, 1005,
	1005, 2688, 2644, 2689, 2747, 2255, 3059, 1567, 2681, 3017,
	2256, 2815, 697, 2753, 2261, 2755, 3651, 2757, 3839, 4205,
	1916, 3094, 2663, 4211, 2772, 2674, 2774, 4115, 3923, 2913,
	3654, 776, 3723, 2816, 4144, 2700, 2243, 2821, 2811, 3221,
	2696, 3665, 3167, 4145, 3922, 3060, 2775, 3048, 3214, 1729,
	1927, 2697, 2695, 2745, 1005, 1005, 4213, 2701, 1949, 1972,
	1005, 3924, 3474, 2752, 2712, 2754, 1284, 2756, 2263, 886,
	1774, 3472, 3000, 1005, 1005, 2273, 1918, 1132, 3221, 1005,
	1005, 3559, 885, 1296, 3055, 1005, 2765, 3214, 1969, 2494,
	1693, 1460, 2113, 2308, 1005, 1005, 1005, 1568, 1498, 2108,
	1005, 2731, 1971, 4163, 2496, 2735, 1570, 2736, 895, 1777,
	1005, 3796, 810, 2812, 4185, 887, 4064, 2842, 3992, 802,
	2777, 3057, 3689, 1913, 2422, 2271, 1600, 1005, 1917, 1681,
	2859, 2788, 1918, 4030, 3216, 2424, 2798, 2497, 2779, 2359,
	2355, 2778, 1775, 3650, 2385, 3474, 4230, 2290, 2437, 3215,
	2783, 2908, 2909, 2910, 3472, 947, 2495, 2190, 2907, 2905,
	2906, 2898, 2899, 2900, 2901, 2903, 2904, 4031, 1770, 1512,
	1514, 1907, 3475, 3216, 2257, 2837, 2838, 3056, 3301, 3657,
	2841, 4240, 3733, 2259, 3780, 2509, 1151, 3553, 3215, 1299,
	1299, 3390, 2245, 1005, 1005, 1005, 242, 2817, 609, 2525,
	1146, 3564, 1005, 1005, 1005, 3245, 2819, 1005, 886, 2780,
	1908, 2810, 2353, 3995, 3724, 1611, 4114, 1005, 1126, 1191,
	1571, 3212, 4174, 1005, 4172, 1005, 4010, 2833, 3903, 2357,
	2358, 2356, 3507, 1126, 3154, 1528, 2011, 1124, 2950, 2951,
	1296, 698, 699, 1767, 1774, 1144, 1139, 600, 3488, 4143,
	3608, 1191, 3560, 1124, 887, 3475, 2193, 1928, 3339, 1884,
	3249, 2848, 610, 1126, 4235, 2992, 1191, 3846, 4162, 1776,
	4243, 3925, 3845, 2972, 2053, 1966, 3926, 3825, 1296, 3961,
	1296, 790, 1839, 1777, 3508, 1947, 1191, 2933, 1913, 948,
	1189, 2997, 2352, 2354, 1290, 1881, 3454, 3406, 1772, 3155,
	1005, 1572, 1610, 2952, 611, 3147, 612, 3779, 3473, 3030,
	3026, 2654, 3010, 1610, 1005, 1605, 1775, 2648, 1964, 2638,
	2034, 2962, 3217, 3218, 3219, 3220, 1839, 3470, 1950, 2023,
	2016, 1999, 3022, 3023, 3996, 2183, 3284, 2981, 3013, 3354,
	636, 2960, 1005, 1311, 1773, 4042, 1165, 3246, 803, 804,
	3039, 2152, 3019, 3043, 3510, 2961, 2985, 1965, 701, 700,
	2970, 3217, 3218, 3219, 3220, 1879, 2973, 2974, 2944, 2928,
	2929, 2930, 968, 2958, 1877, 3747, 1303, 2978, 1311, 1121,
	1610, 3061, 3062, 2990, 2635, 3063, 3040, 1416, 1191, 3045,
	3046, 3473, 2959, 1880, 1121, 1609, 2416, 1311, 2976, 2986,
	2977, 2971, 1311, 3885, 2099, 3883, 1609, 3097, 3565, 1346,
	3100, 3069, 702, 703, 3105, 3107, 3826, 3088, 3089, 3340,
	3609, 3090, 3041, 1311, 1121, 2966, 3781, 2549, 3341, 1311,
	1681, 1311, 1378, 3052, 1833, 1191, 3037, 3027, 2994, 2995,
	2996, 4234, 684, 1776, 1611, 1836, 3036, 2184, 3072, 2803,
	3092, 2781, 2526, 1311, 3001, 1611, 3086, 3367, 3014, 2955,
	2954, 3020, 3132, 1311, 3083, 1915, 2418, 1120, 3052, 1120,
	3669, 2417, 1542, 1609, 2461, 1452, 2460, 3668, 1833, 1126,
	3025, 1827, 3566, 3141, 2459, 1468, 3146, 3052, 3058, 1836,
	2458, 1385, 3052, 3479, 1915, 3163, 2642, 2725, 3031, 945,
	3065, 3118, 3997, 3121, 1386, 3076, 2725, 805, 806, 1399,
	791, 792, 1397, 3079, 3071, 2967, 3834, 808, 3084, 3087,
	3968, 1311, 1311, 3715, 3180, 1827, 1934, 3182, 3183, 3103,
	1960, 3172, 3186, 3093, 3187, 3082, 3188, 3102, 1960, 3204,
	3110, 1529, 3109, 1311, 3114, 2957, 3191, 3077, 1938, 1507,
	2032, 3078, 3123, 3162, 4182, 3101, 3881, 2732, 2993, 3184,
	3108, 3007, 3008, 2965, 3009, 3764, 2620, 2618, 1506, 4045,
	3969, 3095, 2547, 3156, 3823, 3117, 2385, 1191, 3125, 4050,
	1191, 3228, 4039, 2550, 2551, 3615, 3164, 3356, 2969, 2315,
	4068, 1587, 4184, 4134, 1585, 3982, 1564, 1562, 1539, 1537,
	690, 3802, 1935, 1535, 1122, 635, 1122, 693, 3835, 3607,
	1005, 3824, 3478, 2925, 3261, 3144, 1005, 1005, 163, 163,
	1005, 1005, 1005, 3169, 1005, 3222, 3763, 1533, 1531, 3202,
	3181, 1522, 3178, 1005, 1839, 3224, 3185, 3206, 3240, 3171,
	1121, 3011, 1005, 2890, 1520, 1005, 4046, 3970, 1395, 3667,
	2822, 1191, 2639, 2576, 3237, 2540, 2385, 2385, 3239, 2485,
	1005, 1807, 1803, 3189, 3190, 1296, 1588, 2143, 1191, 793,
	794, 1484, 2926, 3223, 3242, 3241, 1605, 2968, 1839, 1839,
	1005, 1005, 4186, 1005, 1005, 1005, 3264, 3247, 2020, 2763,
	2314, 3230, 948, 3231, 2762, 3232, 2738, 1939, 2172, 2154,
	1551, 1005, 2121, 1996, 1865, 1005, 3236, 1839, 1839, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 3244, 1005,
	1713, 1398, 1495, 1371, 1396, 4109, 1005, 1005, 1839, 807,
	3690, 3678, 1614, 1005, 3910, 4038, 3745, 3695, 1814, 3641,
	3506, 3498, 1806, 3459, 1005, 3426, 3424, 3405, 1940, 1941,
	3150, 3145, 3137, 2692, 3096, 1126, 1126, 1586, 3269, 1005,
	1584, 1936, 1563, 1561, 1538, 1536, 2385, 2385, 2385, 1534,
	2687, 2666, 3273, 3274, 3280, 1770, 1833, 2652, 3287, 3289,
	3290, 2645, 2632, 3296, 2617, 2073, 2071, 1836, 1191, 3303,
	2068, 2065, 1905, 1532, 1530, 3311, 2060, 1521, 3372, 3312,
	2058, 1937, 4160, 1296, 1296, 2054, 2045, 3313, 1995, 3314,
	1519, 1993, 3316, 3351, 1394, 3389, 1976, 1961, 3318, 1005,
	1833, 1833, 1944, 1827, 3343, 1931, 1919, 3281, 3400, 3401,
	2142, 1836, 1836, 3159, 968, 1005, 1005, 1615, 968, 2801,
	2203, 3304, 163, 3344, 896, 4176, 3388, 4078, 1101, 1833,
	1833, 1774, 3769, 1275, 1910, 3762, 3761, 1275, 3702, 1911,
	1836, 1836, 1124, 3363, 3364, 1005, 1005, 1827, 1827, 2203,
	3319, 2726, 3425, 1102, 3427, 3360, 3361, 1124, 1903, 3104,
	1833, 1351, 1296, 3912, 1970, 1927, 2529, 3352, 3518, 2509,
	1777, 1836, 1005, 2112, 2509, 3375, 1827, 1827, 2138, 3374,
	3347, 1437, 1942, 2507, 2137, 1772, 2031, 1124, 2528, 1582,
	1583, 1013, 4077, 2119, 1311, 3671, 1121, 1121, 674, 1436,
	1518, 3697, 3947, 1775, 3387, 3291, 3616, 1827, 3594, 2802,
	1621, 1622, 2552, 1839, 3458, 3439, 3441, 2533, 3438, 1988,
	1618, 4178, 4170, 3409, 4139, 3434, 3358, 3455, 3310, 2631,
	614, 1773, 3453, 1621, 1622, 240, 240, 240, 2140, 603,
	604, 1311, 619, 603, 619, 629, 634, 1912, 1005, 2187,
	652, 1943, 3449, 3452, 233, 658, 1126, 1005, 1103, 1874,
	2581, 240, 1624, 3494, 1914, 3500, 901, 903, 905, 1437,
	2679, 3520, 1969, 1623, 2547, 1311, 1311, 1311, 730, 787,
	2589, 3529, 1437, 625, 773, 240, 2588, 1812, 2573, 3465,
	3526, 1311, 2571, 3515, 3527, 2537, 1623, 2535, 4233, 597,
	3481, 2572, 3495, 4037, 2725, 3511, 4005, 4002, 2536, 3533,
	1191, 3967, 3477, 3496, 3899, 3878, 3497, 3487, 3382, 3149,
	2673, 2403, 1869, 3501, 1820, 4207, 1916, 3832, 4070, 2999,
	1776, 3512, 1191, 4071, 4070, 1005, 1005, 2896, 2897, 4071,
	3552, 1005, 1005, 1839, 3545, 4004, 1005, 1005, 3499, 1005,
	1621, 1622, 4188, 1005, 1322, 3464, 3396, 2501, 2502, 3513,
	3516, 2499, 2500, 3522, 1005, 1833, 3521, 1505, 3586, 2310,
	3392, 2501, 2499, 1504, 3528, 2343, 1836, 3536, 3900, 3514,
	1005, 3534, 3535, 3539, 1566, 3031, 3543, 1565, 2381, 3540,
	3542, 3864, 3698, 3694, 3568, 3576, 603, 603, 1120, 3468,
	3693, 3582, 3476, 1124, 240, 3504, 3391, 3292, 3098, 1707,
	1706, 4221, 1827, 4193, 1120, 3958, 3561, 1121, 3859, 3567,
	3817, 3814, 3726, 3634, 3544, 3524, 3482, 3480, 3422, 3580,
	3417, 3179, 3153, 3152, 1917, 2760, 2744, 2743, 1918, 2078,
	1126, 2683, 2658, 3556, 2633, 2478, 2477, 2275, 1126, 2139,
	2136, 2135, 1191, 2134, 1191, 1452, 2091, 2133, 2048, 2047,
	2046, 1126, 3621, 2029, 2006, 2002, 2092, 2001, 2000, 1998,
	1997, 1581, 1580, 1526, 2385, 2385, 1191, 3021, 2100, 1423,
	2103, 2104, 2105, 1422, 1421, 1420, 1419, 1418, 1417, 1299,
	1415, 1410, 1409, 1408, 1407, 1833, 1005, 3606, 1406, 3638,
	3639, 1366, 1365, 1364, 3551, 1363, 1836, 1362, 1361, 1356,
	1350, 1348, 1347, 3663, 3624, 1182, 1181, 2206, 3662, 1180,
	3672, 1179, 1150, 1191, 1149, 1084, 3674, 3675, 1875, 907,
	893, 1191, 3837, 3655, 1575, 1122, 84, 2020, 1358, 163,
	3627, 3623, 1827, 3620, 3618, 3619, 718, 78, 3617, 1967,
	3628, 1122, 3631, 3699, 2985, 3700, 3622, 3673, 3421, 1311,
	1311, 866, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385,
	2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385,
	2385, 3716, 2385, 3661, 3613, 4067, 1344, 1191, 3713, 3988,
	3701, 725, 1311, 3692, 1913, 1275, 4052, 3047, 2592, 3640,
	2120, 1121, 1527, 3725, 2311, 2122, 2980, 2444, 3738, 1121,
	4029, 3590, 3711, 3736, 3688, 2858, 3954, 3686, 3795, 1005,
	2313, 1711, 1121, 2937, 80, 989, 1035, 3722, 3721, 1311,
	1311, 1311, 3712, 3642, 3408, 3756, 2715, 3719, 3768, 968,
	1191, 3765, 3718, 1824, 1826, 1275, 955, 1194, 1885, 3743,
	3717, 995, 1005, 1005, 1005, 3752, 3748, 3732, 3705, 3735,
	1901, 1894, 2479, 2363, 1012, 1009, 3710, 1828, 3750, 1830,
	1191, 3737, 3677, 1011, 1010, 1005, 1829, 1730, 1005, 1005,
	1008, 1823, 3749, 3685, 3503, 3687, 3502, 2641, 1005, 1124,
	1124, 1839, 2677, 1402, 868, 1889, 1005, 1005, 2269, 2454,
	2297, 3772, 3774, 939, 2847, 883, 3771, 1704, 970, 991,
	2294, 1191, 1142, 1311, 980, 3776, 969, 2963, 3782, 3166,
	3381, 3753, 2182, 734, 2893, 2300, 1191, 1135, 941, 2386,
	2379, 2375, 2667, 1591, 1005, 1683, 3757, 3787, 2678, 1177,
	973, 1005, 2267, 3804, 1695, 2827, 2192, 3173, 2983, 1005,
	2472, 1839, 3798, 4074, 3300, 2010, 1100, 1099, 1098, 1005,
	4058, 4055, 1005, 3537, 3130, 2824, 2825, 3810, 3811, 1878,
	2493, 1005, 1673, 940, 3819, 3138, 985, 3809, 1191, 1295,
	2948, 3850, 3851, 3205, 1368, 657, 997, 3813, 1672, 1311,
	1311, 2611, 1275, 2610, 3964, 1164, 1163, 1137, 2504, 3792,
	3858, 3820, 1162, 3029, 4241, 3865, 3842, 3418, 3867, 3868,
	3841, 209, 2795, 1612, 1604, 206, 884, 208, 207, 3727,
	2785, 3869, 3893, 3385, 2989, 1147, 1191, 3132, 3884, 1311,
	4137, 3860, 3856, 3436, 652, 3818, 3122, 21, 2020, 20,
	19, 105, 40, 1833, 3898, 18, 3861, 1005, 1005, 119,
	3873, 3911, 1299, 3866, 1836, 3874, 3882, 240, 3897, 240,
	240, 1287, 3876, 240, 240, 1302, 1005, 1005, 3892, 3930,
	3931, 135, 3915, 134, 133, 132, 131, 3872, 3909, 240,
	137, 1324, 3934, 1005, 1839, 2919, 2920, 2921, 3905, 130,
	1827, 129, 3908, 3906, 3914, 124, 3913, 128, 3752, 3928,
	2381, 2381, 3877, 1833, 127, 126, 1353, 125, 1005, 123,
	1124, 1005, 122, 121, 1836, 120, 118, 117, 1370, 3907,
	1302, 116, 3942, 3848, 240, 240, 115, 1287, 3960, 114,
	1005, 113, 112, 111, 110, 109, 3952, 240, 108, 107,
	106, 648, 645, 3871, 3971, 1412, 3943, 3944, 2614, 57,
	1827, 3959, 3977, 56, 104, 103, 17, 240, 38, 240,
	240, 14, 1287, 240, 1302, 61, 62, 16, 3976, 3991,
	13, 1005, 1005, 33, 652, 83, 240, 240, 3985, 885,
	95, 94, 1005, 34, 92, 1005, 91, 1311, 32, 15,
	89, 88, 3984, 31, 3990, 29, 11, 1311, 1311, 787,
	3986, 9, 8, 35, 4007, 1791, 12, 4009, 5, 3999,
	4000, 3946, 4020, 168, 1311, 4006, 167, 4003, 3998, 3897,
	2381, 2381, 2381, 170, 166, 169, 82, 165, 1005, 1005,
	4012, 164, 81, 1120, 27, 4025, 1833, 4026, 10, 160,
	4017, 3894, 3492, 4016, 2698, 1452, 76, 1836, 1120, 162,
	4018, 4019, 161, 159, 158, 157, 4047, 4024, 77, 74,
	156, 1005, 1005, 155, 1005, 75, 154, 4023, 240, 4048,
	4057, 4060, 4034, 4072, 2739, 25, 6, 4011, 1120, 60,
	7, 4049, 3777, 1827, 3225, 240, 98, 99, 36, 4076,
	1275, 4069, 72, 71, 1124, 70, 24, 59, 23, 197,
	4062, 196, 1124, 938, 4092, 886, 4066, 195, 4033, 4079,
	194, 1005, 1005, 1005, 4091, 1124, 193, 192, 4080, 187,
	186, 4081, 191, 189, 188, 190, 4083, 185, 200, 4086,
	4088, 4121, 199, 201, 1005, 198, 203, 4126, 184, 182,
	178, 4061, 177, 181, 4065, 4105, 4106, 4107, 4093, 183,
	4108, 887, 180, 179, 176, 202, 152, 153, 4124, 67,
	151, 150, 149, 148, 4146, 4148, 147, 146, 145, 66,
	1122, 22, 2, 1, 0, 4136, 1296, 1275, 4150, 0,
	0, 0, 1005, 2679, 0, 1122, 4156, 4161, 0, 0,
	4147, 4157, 0, 4152, 0, 0, 0, 0, 0, 4155,
	0, 4153, 4154, 0, 0, 0, 0, 4158, 4173, 4167,
	4168, 0, 4171, 0, 4169, 1122, 0, 0, 0, 4177,
	4057, 0, 0, 4060, 4183, 4179, 0, 4181, 0, 4195,
	1005, 0, 1005, 4190, 4180, 0, 4194, 4189, 4076, 0,
	4201, 4187, 4196, 0, 0, 2608, 1275, 0, 0, 0,
	4200, 0, 4197, 0, 4199, 0, 0, 0, 4198, 68,
	0, 0, 1299, 0, 4202, 4214, 4216, 0, 0, 0,
	0, 2385, 1275, 0, 0, 69, 4222, 2600, 2598, 0,
	0, 0, 603, 4225, 2602, 2604, 2594, 4228, 1005, 1005,
	0, 73, 0, 4231, 1120, 0, 1005, 0, 1005, 1005,
	4237, 0, 2949, 240, 4223, 240, 0, 4245, 4244, 240,
	0, 0, 0, 3257, 3258, 0, 0, 2385, 0, 0,
	4247, 0, 1324, 1287, 240, 4248, 240, 4227, 4252, 68,
	79, 240, 1324, 619, 2975, 4259, 240, 1324, 0, 4255,
	0, 4261, 4264, 652, 4256, 69, 1005, 4258, 4267, 2988,
	0, 4246, 4262, 0, 4249, 4257, 0, 4274, 0, 0,
	0, 73, 0, 4263, 0, 0, 4271, 85, 4273, 3005,
	4254, 1275, 0, 0, 0, 0, 0, 0, 4238, 4239,
	0, 100, 0, 0, 0, 0, 86, 97, 0, 0,
	4268, 0, 0, 4270, 0, 0, 0, 0, 0, 0,
	79, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328,
	3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338,
	0, 3342, 0, 0, 0, 0, 4269, 0, 0, 1275,
	0, 1122, 0, 0, 0, 87, 0, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 2596, 0, 2381, 2381,
	0, 100, 0, 0, 0, 0, 86, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 2385, 2609, 2601, 2599,
	2603, 2605, 2595, 2597, 0, 0, 0, 0, 0, 0,
	2607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 240, 0, 0, 240,
	0, 0, 0, 2612, 0, 0, 0, 0, 2988, 0,
	0, 0, 0, 0, 0, 0, 2896, 2897, 664, 2914,
	2915, 2916, 0, 0, 0, 0, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 2381, 2381, 0, 2381, 0, 0, 240,
	0, 90, 0, 240, 0, 0, 0, 240, 0, 0,
	0, 0, 3656, 240, 0, 0, 0, 0, 0, 0,
	1120, 1120, 0, 0, 3111, 0, 240, 0, 240, 0,
	240, 0, 0, 0, 603, 0, 0, 0, 0, 2911,
	0, 171, 93, 0, 96, 3652, 0, 0, 2049, 3645,
	0, 2469, 0, 0, 3142, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 3148, 3643, 0, 240, 210, 0,
	0, 90, 0, 0, 3647, 0, 782, 0, 0, 0,
	136, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3653, 0, 652, 0,
	1290, 0, 787, 1189, 0, 0, 2613, 0, 0, 0,
	212, 171, 93, 0, 96, 2606, 0, 0, 0, 0,
	0, 0, 3197, 3198, 0, 1621, 1622, 240, 2902, 1287,
	240, 0, 0, 0, 138, 0, 3646, 0, 210, 0,
	0, 0, 0, 0, 652, 0, 782, 1652, 175, 0,
	136, 240, 0, 0, 1624, 677, 211, 1122, 1122, 0,
	2918, 240, 240, 0, 240, 0, 240, 204, 240, 0,
	240, 0, 0, 0, 3277, 205, 0, 0, 0, 671,
	212, 0, 2917, 0, 0, 0, 0, 0, 1623, 0,
	2148, 3293, 0, 2149, 0, 2150, 0, 174, 1643, 0,
	0, 0, 0, 0, 138, 0, 1640, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 0,
	2912, 0, 0, 0, 0, 0, 211, 0, 634, 0,
	0, 0, 652, 675, 0, 0, 0, 204, 0, 0,
	0, 1120, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 174, 3648, 0,
	0, 0, 0, 3649, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 1621, 1622, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 1275, 670, 0, 3651, 0,
	1624, 3384, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 3654, 0, 1621, 1622, 0, 0, 0, 0,
	2913, 0, 0, 0, 0, 676, 0, 1275, 0, 0,
	1638, 1639, 0, 0, 1623, 0, 1652, 0, 673, 0,
	0, 0, 1275, 1624, 668, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 1122, 1644,
	0, 0, 1275, 0, 0, 0, 0, 1657, 1652, 603,
	0, 0, 0, 0, 0, 1624, 968, 1623, 0, 0,
	0, 0, 0, 1670, 240, 665, 0, 1643, 0, 0,
	968, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	240, 0, 603, 0, 0, 1120, 0, 0, 0, 1623,
	0, 672, 0, 1120, 240, 0, 0, 2896, 2897, 1643,
	2914, 2915, 2916, 0, 678, 3650, 1120, 1640, 0, 240,
	0, 0, 0, 1629, 0, 667, 0, 0, 0, 0,
	0, 0, 2908, 2909, 2910, 0, 0, 0, 0, 2907,
	2905, 2906, 2898, 2899, 2900, 2901, 2903, 2904, 0, 1650,
	0, 3657, 0, 0, 1275, 0, 1646, 1647, 1648, 1649,
	0, 1651, 1653, 0, 0, 240, 1629, 619, 240, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2911, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 3462, 0, 0, 1629, 0,
	0, 1275, 0, 0, 1651, 1653, 0, 0, 0, 0,
	0, 0, 2518, 0, 0, 1644, 0, 0, 0, 0,
	3801, 240, 0, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 1122, 240, 0, 0, 1651, 1653, 0, 0,
	1122, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 1667, 1122, 1668, 0, 0, 0, 1644, 0,
	0, 1638, 1639, 240, 0, 0, 3828, 0, 0, 2902,
	0, 0, 0, 0, 0, 0, 3530, 3531, 3532, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 2623,
	1644, 0, 1452, 0, 0, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 0, 0, 1324, 0, 0, 240, 0, 0, 0,
	1669, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 2662, 0, 0, 1645, 0, 0, 1658, 0,
	0, 0, 2518, 1275, 603, 0, 1275, 2682, 0, 0,
	0, 0, 0, 240, 0, 2381, 240, 0, 1650, 0,
	240, 2912, 240, 0, 0, 0, 0, 1287, 0, 240,
	240, 0, 1302, 1302, 0, 0, 0, 3626, 1645, 0,
	0, 0, 2708, 787, 0, 2518, 2518, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 3636,
	240, 2381, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 3951, 0, 1275, 240, 1287,
	240, 1621, 1622, 1324, 0, 1324, 0, 0, 1287, 0,
	1287, 0, 1287, 0, 1275, 1662, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 240, 240, 240,
	240, 1287, 240, 0, 240, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 2913, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 240, 0, 0, 0, 0,
	0, 1769, 1640, 240, 0, 0, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	2381, 0, 3599, 3255, 0, 0, 3598, 0, 0, 0,
	1452, 0, 0, 1189, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 3793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2908, 2909, 2910, 0, 0, 0, 0,
	2907, 2905, 2906, 2898, 2899, 2900, 2901, 2903, 2904, 0,
	0, 1651, 1653, 2896, 2897, 0, 2914, 2915, 2916, 0,
	3773, 0, 3775, 0, 3793, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 3266, 0, 1638, 1639, 0, 2206,
	0, 0, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 1644, 0, 954, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2911, 0, 0, 0,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 240,
	1621, 1622, 79, 0, 3815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 603,
	0, 0, 1652, 0, 603, 0, 0, 603, 0, 1624,
	603, 603, 0, 0, 0, 0, 603, 0, 0, 85,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 100, 0, 0, 1324, 0, 86, 97,
	0, 0, 0, 1623, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 2902, 0, 1324, 0, 0,
	3875, 1640, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 2518, 2518,
	240, 0, 1302, 0, 0, 2518, 0, 87, 3033, 0,
	0, 0, 0, 0, 0, 0, 2518, 3033, 1275, 2518,
	3033, 3033, 0, 0, 0, 0, 0, 0, 0, 2917,
	0, 0, 3254, 0, 240, 240, 1302, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 1302, 240, 0,
	0, 1287, 1629, 0, 0, 0, 0, 2912, 0, 0,
	0, 0, 0, 2518, 0, 3099, 2518, 1302, 0, 0,
	2518, 2518, 1302, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 240, 3126, 1638, 1639, 3128, 2518, 0,
	0, 240, 0, 90, 0, 240, 0, 1302, 1275, 0,
	1275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 2662, 0, 0, 1287, 0,
	240, 0, 1275, 2518, 0, 603, 0, 0, 0, 0,
	0, 0, 2518, 171, 93, 0, 96, 0, 0, 240,
	0, 0, 0, 240, 240, 0, 0, 2913, 1452, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 1452, 0, 0, 782, 1275,
	240, 2662, 136, 0, 2662, 0, 0, 1275, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 1650, 0, 3235, 0, 0, 1287,
	240, 1670, 240, 0, 2896, 2897, 138, 2914, 2915, 2916,
	0, 0, 0, 1275, 1645, 0, 0, 0, 0, 0,
	175, 0, 0, 0, 0, 3265, 0, 1623, 211, 0,
	0, 0, 0, 0, 0, 240, 0, 1643, 0, 204,
	0, 0, 0, 0, 0, 1640, 0, 205, 0, 2908,
	2909, 2910, 0, 0, 0, 0, 2907, 2905, 2906, 2898,
	2899, 2900, 2901, 2903, 2904, 0, 1275, 0, 0, 1465,
	0, 0, 0, 0, 0, 0, 0, 2911, 0, 954,
	0, 0, 0, 954, 0, 0, 0, 0, 0, 0,
	0, 3298, 0, 0, 0, 0, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	1326, 0, 1332, 0, 1338, 0, 0, 1275, 0, 0,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1275, 0, 0, 1661, 0, 0, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 2902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 240, 240, 968, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1275, 0, 1453, 1659, 603, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	2917, 0, 0, 1471, 0, 1476, 0, 0, 0, 0,
	1324, 0, 0, 68, 0, 1485, 0, 1490, 0, 0,
	0, 0, 0, 1324, 1324, 0, 0, 0, 1669, 69,
	0, 0, 1275, 0, 0, 0, 0, 0, 2912, 0,
	0, 0, 0, 0, 0, 73, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 0, 0, 1547, 0, 652, 1553,
	0, 0, 0, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 1650, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 2896, 2897, 0, 2914, 2915, 2916, 0, 1645, 0,
	0, 85, 0, 0, 0, 0, 0, 1302, 240, 0,
	0, 0, 0, 0, 1623, 100, 0, 0, 0, 240,
	86, 97, 0, 1662, 1643, 0, 0, 0, 0, 240,
	0, 0, 1640, 0, 0, 0, 0, 240, 2913, 0,
	0, 0, 240, 0, 0, 0, 240, 0, 0, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 0, 968, 968, 0,
	0, 0, 0, 0, 2911, 0, 2518, 240, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 0, 0, 2813, 2708, 2708, 1705, 0, 0, 0,
	787, 787, 2518, 0, 0, 2662, 2662, 0, 0, 787,
	2518, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 1660, 0, 0, 240,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0,
	2871, 0, 0, 0, 2872, 0, 0, 0, 968, 0,
	0, 1651, 1653, 2902, 0, 0, 0, 0, 1621, 1622,
	2908, 2909, 2910, 0, 0, 0, 0, 2907, 2905, 2906,
	2898, 2899, 2900, 2901, 2903, 2904, 1638, 1639, 0, 0,
	1652, 0, 0, 0, 0, 0, 0, 1624, 0, 3591,
	1763, 1763, 1763, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 2917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 0, 171, 93, 0, 96, 1640,
	0, 0, 0, 0, 0, 2912, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 1324, 0, 240,
	0, 0, 210, 0, 954, 0, 0, 0, 0, 0,
	782, 0, 240, 0, 136, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2806, 0, 0, 0, 0, 2518, 2518, 2518, 0, 0,
	0, 0, 0, 0, 212, 1650, 0, 0, 1324, 0,
	1646, 1647, 1648, 1649, 0, 0, 2518, 0, 3033, 0,
	1629, 1324, 1324, 240, 1302, 1645, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 1302, 240, 1302, 240, 0,
	0, 0, 175, 0, 0, 0, 0, 0, 0, 2518,
	211, 2518, 240, 0, 0, 0, 0, 0, 1651, 1653,
	0, 204, 0, 0, 0, 2913, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 2518, 0, 0,
	0, 0, 3729, 1638, 1639, 0, 0, 0, 0, 0,
	240, 1463, 0, 0, 0, 0, 0, 0, 0, 240,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 1324, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 2908, 2909, 2910,
	0, 0, 0, 0, 2907, 2905, 2906, 2898, 2899, 2900,
	2901, 2903, 2904, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1645, 2518, 0, 3033, 0, 0, 3822, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 652, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 0, 1671, 1302, 240, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3822, 1667, 0, 1668, 0,
	0, 0, 0, 2518, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 3902, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 0, 0, 240, 240, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3298,
	0, 2181, 1658, 2185, 0, 0, 0, 0, 0, 0,
	2199, 0, 0, 0, 0, 3822, 0, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 0, 2248, 1650, 2250, 2251, 2252, 2253, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 2277, 0, 0,
	0, 3729, 0, 0, 0, 0, 0, 0, 1692, 0,
	0, 0, 2292, 0, 0, 240, 0, 0, 0, 1662,
	0, 0, 0, 0, 3033, 0, 0, 0, 2322, 2325,
	2328, 2331, 0, 2335, 2336, 2337, 2338, 2339, 2340, 2341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 1324, 0, 0, 0, 0, 0, 0, 0,
	0, 2377, 0, 2388, 2390, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4043, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 2518, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 240, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 4040, 0, 0, 241,
	241, 241, 0, 0, 0, 0, 0, 0, 3298, 0,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 241,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 2518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 3822, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 1324, 0, 2518, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2626, 2627, 1623, 2629, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 1643, 0, 1629, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 2708, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 2708, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 1659, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 1671, 0, 0, 1669,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	2759, 0, 0, 0, 0, 0, 0, 1658, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	1674, 1675, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 2807, 2808, 0, 0, 0,
	0, 2814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2828, 2829, 0, 0, 0, 0, 2292, 0, 0, 0,
	0, 0, 0, 0, 0, 2836, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2850, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 2288, 0, 0, 0, 2289, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2395, 2395, 2395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1763, 0,
	0, 0, 0, 0, 0, 0, 2953, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 0, 3950, 0,
	0, 241, 1195, 241, 241, 0, 1195, 241, 241, 0,
	1195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 954, 0, 1195, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 954, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 1195, 0, 241, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 3050, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 241, 0, 241, 241, 1640, 0, 241, 0, 1195,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 1195,
	241, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 1195, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 1661, 0, 0, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 1624, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2199, 0, 0, 0, 0, 0, 3252, 3253, 0,
	0, 3256, 0, 0, 0, 3259, 0, 0, 0, 0,
	0, 0, 0, 0, 3263, 0, 0, 0, 1650, 0,
	0, 0, 0, 3270, 0, 0, 2953, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 1645, 1629,
	0, 3282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3305, 3306, 1662, 3307, 3308, 3309, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 3315, 0, 0, 0, 3317, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 1638, 1639, 1195, 0, 0, 0, 241, 241,
	241, 0, 0, 0, 0, 241, 0, 3345, 3346, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 1195, 0, 3357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3366, 0, 0, 0, 1195, 0, 1660, 0, 0, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0,
	0, 0, 0, 0, 3597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3411, 3414, 0, 144,
	0, 1650, 0, 0, 0, 0, 68, 0, 44, 43,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 69, 0, 0, 139, 0, 3435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 46, 0, 141, 0,
	241, 1195, 1195, 241, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 45, 0, 79, 990, 102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 64, 0, 0, 0, 0, 0, 0, 49,
	0, 0, 0, 241, 85, 0, 0, 241, 142, 0,
	0, 241, 0, 0, 0, 0, 47, 241, 100, 1763,
	0, 0, 0, 86, 97, 0, 0, 0, 3523, 0,
	241, 0, 241, 0, 241, 0, 0, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 0, 50, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 241, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 1195, 0, 1195, 0, 0, 3569, 3570, 0, 0,
	0, 0, 3574, 3575, 0, 708, 0, 3578, 3579, 1195,
	1195, 0, 0, 0, 3583, 0, 0, 0, 0, 0,
	1195, 241, 929, 0, 241, 3587, 0, 0, 0, 709,
	0, 0, 1195, 949, 1195, 1195, 1195, 0, 0, 0,
	0, 3592, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 241, 0, 241, 0,
	241, 0, 241, 0, 241, 0, 0, 710, 0, 727,
	0, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 711, 0, 0, 0, 0, 712, 51,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 735, 0,
	0, 0, 65, 0, 713, 0, 0, 54, 171, 93,
	0, 96, 0, 0, 764, 52, 0, 733, 0, 143,
	0, 0, 0, 0, 0, 0, 53, 0, 0, 1195,
	0, 0, 0, 0, 0, 210, 0, 3414, 748, 0,
	714, 0, 0, 58, 0, 0, 0, 136, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	715, 140, 0, 716, 0, 0, 0, 0, 737, 0,
	0, 0, 677, 0, 0, 0, 749, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 751, 0, 0,
	0, 0, 0, 0, 0, 175, 1195, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 770, 0, 0,
	0, 0, 0, 1001, 204, 0, 0, 0, 0, 0,
	0, 736, 205, 0, 0, 0, 752, 0, 0, 0,
	731, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3414, 0, 0, 0, 174, 0, 0, 3, 0, 753,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 239,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 754,
	0, 0, 755, 3788, 3789, 3790, 717, 0, 0, 0,
	0, 677, 0, 691, 0, 0, 0, 719, 241, 0,
	0, 1195, 0, 0, 0, 0, 2199, 0, 0, 3799,
	3800, 0, 0, 241, 0, 769, 0, 691, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 3808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 676, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 241, 707, 0, 728, 0, 0, 0, 766,
	1195, 0, 3414, 0, 721, 0, 0, 0, 0, 0,
	3847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3854, 0, 0, 954, 0, 0, 0, 726, 0, 0,
	1195, 0, 3862, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 740, 241, 739, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 757, 241, 0, 0,
	1116, 0, 0, 724, 0, 0, 1123, 0, 732, 0,
	241, 0, 0, 741, 0, 738, 0, 776, 0, 758,
	0, 678, 0, 0, 0, 0, 0, 241, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 235, 235, 599, 0, 3414, 3414,
	0, 676, 241, 0, 0, 0, 0, 0, 759, 0,
	0, 0, 774, 775, 772, 0, 0, 0, 0, 0,
	767, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	102, 0, 102, 0, 0, 0, 0, 0, 0, 3963,
	761, 768, 3966, 0, 0, 0, 0, 241, 0, 762,
	241, 0, 0, 0, 241, 0, 241, 0, 0, 0,
	0, 3414, 763, 241, 241, 0, 0, 771, 1195, 1195,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	678, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 0, 241, 0, 0, 0, 1195, 0,
	0, 0, 954, 954, 102, 0, 0, 0, 949, 102,
	102, 0, 241, 3414, 241, 0, 3414, 0, 0, 0,
	0, 102, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 241, 241, 241, 0, 241, 0, 241, 0,
	2199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 102, 954, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4104, 4104, 4104, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4125, 0, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	929, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 4104, 0, 0, 0, 1691, 0, 0,
	1643, 1697, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3414, 0, 3414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 239, 239, 0, 0, 239, 239, 0, 0, 1646,
	1647, 1648, 1649, 0, 1195, 0, 0, 0, 0, 1629,
	0, 691, 0, 0, 0, 0, 0, 0, 0, 4104,
	4232, 0, 0, 0, 0, 0, 0, 4236, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 1661, 0,
	1783, 1671, 1786, 0, 102, 0, 0, 1651, 1653, 0,
	0, 1195, 0, 0, 0, 0, 239, 239, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 239,
	0, 1195, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	1659, 239, 239, 0, 0, 239, 0, 0, 0, 0,
	0, 1644, 0, 0, 241, 0, 0, 0, 239, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 241, 241,
	0, 241, 0, 0, 0, 0, 0, 0, 241, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	239, 1650, 1294, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 241, 1195, 0, 1195, 239, 0, 0,
	1195, 1645, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 1195, 241,
	0, 0, 0, 0, 0, 0, 1662, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 241, 241, 0,
	0, 0, 0, 0, 0, 0, 1427, 0, 1427, 1427,
	0, 0, 0, 0, 0, 0, 1195, 1195, 0, 0,
	0, 0, 0, 0, 241, 1469, 1470, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 1195, 0, 241, 1195, 241, 3268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 949, 0, 949, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 1195, 1123, 0, 0,
	0, 239, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 1195, 0, 0, 239, 1785, 239, 0,
	0, 0, 0, 691, 1657, 1652, 0, 0, 691, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929, 0, 0, 929, 929, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	2266, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 0, 0, 1691,
	0, 0, 0, 0, 1661, 0, 0, 1671, 239, 0,
	0, 691, 0, 1651, 1653, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 1810, 0, 1294, 0, 0, 1638, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 239, 0, 241, 0, 239, 0, 1644, 0, 239,
	0, 1110, 0, 0, 0, 239, 0, 0, 0, 1195,
	0, 0, 241, 0, 0, 0, 0, 1786, 239, 0,
	239, 0, 239, 241, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 1658, 241, 0, 0, 102,
	241, 0, 239, 0, 0, 0, 1195, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1195, 1195, 1195, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 239,
	0, 0, 239, 241, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 239, 0, 0, 0, 1195, 0, 0,
	0, 102, 0, 691, 239, 0, 239, 0, 239, 0,
	239, 0, 239, 0, 1037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 239,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 102, 1404, 0, 2037, 0, 2037,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0, 1427,
	0, 0, 0, 2874, 0, 102, 1294, 1195, 102, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2015, 241, 0, 2096,
	0, 0, 0, 0, 0, 0, 0, 0, 1195, 0,
	241, 0, 241, 0, 0, 0, 1195, 0, 0, 0,
	2115, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 2125, 0, 2127, 0, 2129, 102, 2131, 0, 2132,
	0, 0, 0, 0, 1195, 1195, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 1123, 0, 0, 0,
	0, 0, 1195, 241, 0, 0, 2153, 1195, 0, 0,
	0, 0, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 1195, 1195, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2266, 0, 0, 0,
	0, 0, 0, 0, 0, 1195, 0, 239, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1195, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 239, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1195, 1195, 0, 0, 0, 0,
	691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2451, 0, 0, 1110, 0, 239, 0,
	0, 1195, 0, 0, 1195, 239, 0, 0, 0, 0,
	0, 1110, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 239, 241,
	241, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 239, 239, 0, 0, 0, 0, 2026, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	239, 0, 239, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 102, 102, 241, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	239, 239, 239, 0, 239, 0, 239, 0, 1623, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 1643, 241,
	102, 102, 1195, 0, 102, 0, 1640, 0, 0, 0,
	0, 0, 1195, 1195, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 1195,
	0, 1127, 0, 0, 0, 1127, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 2015, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 1127, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 2684, 0, 0, 1427, 0, 1629, 241, 1427,
	0, 1427, 0, 0, 0, 1127, 0, 1110, 0, 0,
	949, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 245, 0, 2737,
	0, 102, 102, 0, 0, 0, 0, 0, 1127, 0,
	0, 1667, 0, 1668, 1127, 0, 0, 2746, 1127, 2749,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 2771, 1294, 2773, 1294,
	0, 2776, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 683, 0, 0, 1427, 0, 0, 1658, 0, 0,
	0, 1123, 2804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 1657, 1652, 1650,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 1643,
	0, 0, 239, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 239, 239, 0, 239,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 1110, 1110, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 1660, 1629, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 239, 0, 0, 0, 2873, 0, 1661, 0, 0,
	1671, 0, 0, 0, 0, 691, 1651, 1653, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 239, 0, 0,
	0, 0, 1667, 0, 1668, 0, 1127, 0, 1127, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 1127, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	1644, 239, 0, 0, 0, 239, 239, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3024,
	1669, 0, 239, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3068, 3070, 0, 2026, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1110, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3139, 0, 0, 0, 3143, 0, 0, 0, 0, 0,
	1127, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1427, 0,
	0, 0, 1294, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 3201,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1123, 1123,
	0, 0, 102, 0, 0, 0, 0, 0, 1110, 0,
	0, 0, 0, 0, 1192, 0, 1110, 0, 1192, 3238,
	0, 1294, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	1127, 0, 1127, 0, 3250, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1127,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 1127, 0, 1127, 1127, 1127, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 1312, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 1312, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 239, 0, 0, 1623, 1312, 102, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 0,
	239, 0, 1640, 0, 0, 0, 0, 0, 102, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 239, 1312, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 1840, 1840, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 1127, 1669, 0, 2026, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 3491, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 1123, 0, 3505, 0, 2266, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 0, 0, 0, 1193,
	0, 0, 0, 1313, 0, 1645, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 1192, 0, 3554, 0,
	1662, 0, 0, 0, 0, 0, 1313, 683, 239, 1127,
	239, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 1312, 0, 0, 0, 1313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	0, 0, 0, 0, 0, 0, 1192, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 1127, 102, 0,
	0, 239, 1313, 0, 0, 0, 0, 0, 1313, 0,
	0, 1127, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 1313, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 2870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 1127, 1127, 0,
	1127, 0, 0, 1312, 1312, 0, 0, 0, 0, 0,
	0, 0, 1127, 1192, 0, 0, 0, 0, 0, 0,
	0, 0, 3676, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 3744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 1312, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 239, 0,
	0, 1312, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 1312, 1312, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 683, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3829, 0, 1193, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 1193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1622, 1192, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1652, 1127, 1127, 0, 0, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 1670, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 1623, 0, 3941, 1294, 239, 1127, 0, 0,
	1127, 0, 1643, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 239, 0, 1840, 0, 1192, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1313, 1313, 0, 0, 0, 0,
	1840, 0, 0, 0, 1193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 1192, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 1192, 4008, 0, 0, 0, 0, 0,
	1661, 0, 1127, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 1127, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 1127, 0, 0,
	0, 0, 0, 1127, 0, 1127, 0, 0, 0, 1127,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1312, 1644, 0, 0, 4051, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 1313, 4073, 1313, 0, 1313, 0, 0, 0,
	0, 0, 1192, 1127, 0, 0, 0, 0, 0, 0,
	0, 4085, 1313, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 0, 1313, 1313, 1313,
	0, 0, 0, 0, 0, 1127, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 1650, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1193, 0, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 1312, 0, 1312, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 1840, 1840, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 1840, 1840, 0, 0, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 1127,
	1127, 0, 0, 1624, 0, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 1643, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 0, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 1661, 0, 0, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 1193, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 1192, 1659, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	1127, 1127, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 1669, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 1658, 0, 0, 0,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 0,
	0, 1313, 1313, 0, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 1313, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1662, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 0, 1127, 0, 1127, 0,
	1312, 0, 0, 0, 0, 1127, 1312, 0, 1312, 0,
	0, 0, 1192, 0, 0, 0, 0, 0, 0, 683,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 1127, 0, 0,
	0, 0, 0, 0, 2869, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1312,
	0, 0, 0, 1127, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1312, 0, 0, 0, 841, 0, 883, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 1192, 0, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 862, 847, 846, 0, 0,
	0, 0, 0, 1127, 1127, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 891, 0, 0, 0, 0, 0,
	0, 0, 859, 860, 1127, 0, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 1193, 1192, 0,
	0, 0, 0, 0, 0, 1840, 0, 884, 853, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1127, 0, 1127, 0, 1193,
	0, 0, 0, 0, 854, 0, 0, 0, 0, 0,
	1127, 0, 0, 882, 1193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 1840, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 845, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 1127, 856, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1313, 0, 864, 863, 0, 0, 0, 0, 0,
	0, 858, 0, 0, 0, 873, 0, 0, 0, 0,
	1127, 0, 0, 1127, 0, 1192, 0, 0, 0, 0,
	888, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	885, 0, 0, 0, 0, 1313, 0, 0, 0, 0,
	1313, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 1313, 1657, 1652, 0, 0, 0, 1313, 0, 1313,
	1624, 0, 0, 1193, 0, 0, 0, 0, 1670, 0,
	852, 0, 0, 890, 0, 0, 0, 0, 0, 0,
	0, 1313, 0, 0, 0, 0, 0, 0, 850, 0,
	0, 1313, 880, 881, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 878, 0, 0, 0, 0, 0, 0, 889,
	874, 0, 867, 865, 0, 870, 0, 0, 0, 0,
	0, 871, 0, 0, 843, 0, 886, 0, 0, 1313,
	1313, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 1127, 0, 0, 0, 844, 0, 1312, 0,
	0, 1313, 0, 0, 0, 0, 0, 872, 1127, 0,
	0, 0, 869, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 887, 1629, 0, 0, 0, 0, 0, 0,
	875, 0, 1312, 1312, 1312, 1193, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 0,
	0, 877, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 1192, 0, 0,
	0, 0, 0, 0, 879, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 1192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 1192, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1192, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 0, 0, 0, 1312,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 2868, 1313, 0, 0, 0, 1312, 1312, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 1192, 0, 1313,
	0, 0, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 1313, 1313, 0, 0, 1192, 0,
	1312, 0, 0, 0, 0, 1623, 0, 0, 0, 1313,
	0, 0, 0, 1192, 0, 1643, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1312, 1312, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 1657, 1652, 1629, 0, 0, 0, 0, 0,
	1624, 0, 0, 1192, 0, 0, 1312, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 1671, 0, 0, 0,
	0, 0, 1651, 1653, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 1667, 0,
	1668, 0, 1640, 0, 0, 0, 0, 1638, 1639, 0,
	1193, 0, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 1193, 0, 1629, 1658, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1312, 1671, 0, 1313, 1313, 0,
	0, 1651, 1653, 0, 1312, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 1667, 0, 1668,
	0, 1312, 0, 0, 0, 1193, 1638, 1639, 0, 0,
	1313, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 1313, 1313, 1313,
	0, 0, 0, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1193,
	0, 1313, 0, 0, 1660, 1650, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 1193, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 1645, 0, 0, 0, 0,
	0, 0, 2289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1313, 1313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 3949, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1190, 0, 1313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 1313, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1196, 255, 256, 1197,
	1198, 1199, 1313, 1200, 545, 1201, 1202, 1203, 1204, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 1205, 550, 267, 268, 269, 270,
	271, 272, 1206, 1207, 0, 273, 551, 552, 553, 1208,
	274, 275, 554, 1209, 1276, 1210, 276, 277, 278, 279,
	280, 281, 282, 0, 1211, 284, 285, 286, 283, 1212,
	287, 0, 288, 289, 290, 291, 292, 293, 1213, 294,
	295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218,
	1219, 1220, 299, 300, 301, 302, 0, 303, 555, 556,
	1221, 307, 304, 305, 1222, 308, 306, 1223, 309, 310,
	311, 1224, 1225, 312, 313, 314, 1226, 315, 316, 1227,
	317, 318, 319, 1228, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 1229,
	246, 1230, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 1231, 337, 1232, 1233, 1069, 338,
	339, 561, 562, 340, 341, 1234, 342, 563, 1235, 564,
	343, 1236, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 1237, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 1238, 1070, 357, 568,
	569, 1239, 570, 1240, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 1241, 371, 373, 372, 1242, 374, 572,
	1075, 375, 376, 1076, 1243, 377, 378, 379, 1244, 1245,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 1246, 248, 1079, 408, 409, 1247, 573, 410,
	574, 412, 413, 1248, 0, 414, 0, 1249, 1250, 416,
	417, 418, 1251, 1252, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 1253, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 1254, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 1255, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 1256, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 1257, 481, 482, 480,
	483, 484, 485, 1258, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 1259,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 1260, 507, 508, 0, 506, 1261, 509,
	510, 511, 512, 513, 514, 327, 515, 1262, 516, 586,
	587, 588, 589, 1263, 523, 1264, 517, 518, 590, 519,
	591, 1265, 520, 521, 522, 0, 524, 525, 1266, 1267,
	526, 527, 528, 530, 531, 529, 532, 1268, 533, 1269,
	0, 534, 535, 536, 592, 593, 594, 1270, 538, 537,
	539, 595, 1271, 1272, 1273, 1274, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 2429, 0, 0, 0, 0, 0, 0,
	0, 2430, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	3276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3278, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3625, 249, 250, 251, 252,
	253, 254, 1196, 255, 256, 1197, 1198, 1199, 0, 1200,
	545, 1201, 1202, 1203, 1204, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	1205, 550, 267, 268, 269, 270, 271, 272, 1206, 1207,
	0, 273, 551, 552, 553, 1208, 274, 275, 554, 1209,
	1276, 1210, 276, 277, 278, 279, 280, 281, 282, 0,
	1211, 284, 285, 286, 283, 1212, 287, 0, 288, 289,
	290, 291, 292, 293, 1213, 294, 295, 296, 1068, 297,
	298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300,
	301, 302, 0, 303, 555, 556, 1221, 307, 304, 305,
	1222, 308, 306, 1223, 309, 310, 311, 1224, 1225, 312,
	313, 314, 1226, 315, 316, 1227, 317, 318, 319, 1228,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 1229, 246, 1230, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	1231, 337, 1232, 1233, 1069, 338, 339, 561, 562, 340,
	341, 1234, 342, 563, 1235, 564, 343, 1236, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	1237, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 1238, 1070, 357, 568, 569, 1239, 570, 1240,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 1241,
	371, 373, 372, 1242, 374, 572, 1075, 375, 376, 1076,
	1243, 377, 378, 379, 1244, 1245, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 1246, 248,
	1079, 408, 409, 1247, 573, 410, 574, 412, 413, 1248,
	0, 414, 0, 1249, 1250, 416, 417, 418, 1251, 1252,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 1253, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 1254, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 1255, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 1256,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 1257, 481, 482, 480, 483, 484, 485, 1258,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 1259, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 1260,
	507, 508, 0, 506, 1261, 509, 510, 511, 512, 513,
	514, 327, 515, 1262, 516, 586, 587, 588, 589, 1263,
	523, 1264, 517, 518, 590, 519, 591, 1265, 520, 521,
	522, 0, 524, 525, 1266, 1267, 526, 527, 528, 530,
	531, 529, 532, 1268, 533, 1269, 0, 534, 535, 536,
	592, 593, 594, 1270, 538, 537, 539, 595, 1271, 1272,
	1273, 1274, 540, 541, 596, 542, 543, 544, 1190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3794, 249, 250, 251, 252, 253,
	254, 1196, 255, 256, 1197, 1198, 1199, 0, 1200, 545,
	1201, 1202, 1203, 1204, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 1205,
	550, 267, 268, 269, 270, 271, 272, 1206, 1207, 0,
	273, 551, 552, 553, 1208, 274, 275, 554, 1209, 1276,
	1210, 276, 277, 278, 279, 280, 281, 282, 0, 1211,
	284, 285, 286, 283, 1212, 287, 0, 288, 289, 290,
	291, 292, 293, 1213, 294, 295, 296, 1068, 297, 298,
	1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300, 301,
	302, 0, 303, 555, 556, 1221, 307, 304, 305, 1222,
	308, 306, 1223, 309, 310, 311, 1224, 1225, 312, 313,
	314, 1226, 315, 316, 1227, 317, 318, 319, 1228, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 1229, 246, 1230, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 1231,
	337, 1232, 1233, 1069, 338, 339, 561, 562, 340, 341,
	1234, 342, 563, 1235, 564, 343, 1236, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 1237,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 1238, 1070, 357, 568, 569, 1239, 570, 1240, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1241, 371,
	373, 372, 1242, 374, 572, 1075, 375, 376, 1076, 1243,
	377, 378, 379, 1244, 1245, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 1246, 248, 1079,
	408, 409, 1247, 573, 410, 574, 412, 413, 1248, 0,
	414, 0, 1249, 1250, 416, 417, 418, 1251, 1252, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 1253, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 1254, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 1255, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 1256, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 1257, 481, 482, 480, 483, 484, 485, 1258, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 1259, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 1260, 507,
	508, 0, 506, 1261, 509, 510, 511, 512, 513, 514,
	327, 515, 1262, 516, 586, 587, 588, 589, 1263, 523,
	1264, 517, 518, 590, 519, 591, 1265, 520, 521, 522,
	0, 524, 525, 1266, 1267, 526, 527, 528, 530, 531,
	529, 532, 1268, 533, 1269, 0, 534, 535, 536, 592,
	593, 594, 1270, 538, 537, 539, 595, 1271, 1272, 1273,
	1274, 540, 541, 596, 542, 543, 544, 1190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3684, 249, 250, 251, 252, 253, 254,
	1196, 255, 256, 1197, 1198, 1199, 0, 1200, 545, 1201,
	1202, 1203, 1204, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 1205, 550,
	267, 268, 269, 270, 271, 272, 1206, 1207, 0, 273,
	551, 552, 553, 1208, 274, 275, 554, 1209, 1276, 1210,
	276, 277, 278, 279, 280, 281, 282, 0, 1211, 284,
	285, 286, 283, 1212, 287, 0, 288, 289, 290, 291,
	292, 293, 1213, 294, 295, 296, 1068, 297, 298, 1214,
	1215, 1217, 1216, 1218, 1219, 1220, 299, 300, 301, 302,
	0, 303, 555, 556, 1221, 307, 304, 305, 1222, 308,
	306, 1223, 309, 310, 311, 1224, 1225, 312, 313, 314,
	1226, 315, 316, 1227, 317, 318, 319, 1228, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 1229, 246, 1230, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 1231, 337,
	1232, 1233, 1069, 338, 339, 561, 562, 340, 341, 1234,
	342, 563, 1235, 564, 343, 1236, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 1237, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	1238, 1070, 357, 568, 569, 1239, 570, 1240, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 1241, 371, 373,
	372, 1242, 374, 572, 1075, 375, 376, 1076, 1243, 377,
	378, 379, 1244, 1245, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 1246, 248, 1079, 408,
	409, 1247, 573, 410, 574, 412, 413, 1248, 0, 414,
	0, 1249, 1250, 416, 417, 418, 1251, 1252, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 1253, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 1254, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	1255, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 1256, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	1257, 481, 482, 480, 483, 484, 485, 1258, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 1259, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 1260, 507, 508,
	0, 506, 1261, 509, 510, 511, 512, 513, 514, 327,
	515, 1262, 516, 586, 587, 588, 589, 1263, 523, 1264,
	517, 518, 590, 519, 591, 1265, 520, 521, 522, 0,
	524, 525, 1266, 1267, 526, 527, 528, 530, 531, 529,
	532, 1268, 533, 1269, 0, 534, 535, 536, 592, 593,
	594, 1270, 538, 537, 539, 595, 1271, 1272, 1273, 1274,
	540, 541, 596, 542, 543, 544, 1190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3555, 249, 250, 251, 252, 253, 254, 1196,
	255, 256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202,
	1203, 1204, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 1205, 550, 267,
	268, 269, 270, 271, 272, 1206, 1207, 0, 273, 551,
	552, 553, 1208, 274, 275, 554, 1209, 1276, 1210, 276,
	277, 278, 279, 280, 281, 282, 0, 1211, 284, 285,
	286, 283, 1212, 287, 0, 288, 289, 290, 291, 292,
	293, 1213, 294, 295, 296, 1068, 297, 298, 1214, 1215,
	1217, 1216, 1218, 1219, 1220, 299, 300, 301, 302, 0,
	303, 555, 556, 1221, 307, 304, 305, 1222, 308, 306,
	1223, 309, 310, 311, 1224, 1225, 312, 313, 314, 1226,
	315, 316, 1227, 317, 318, 319, 1228, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 1229, 246, 1230, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 1231, 337, 1232,
	1233, 1069, 338, 339, 561, 562, 340, 341, 1234, 342,
	563, 1235, 564, 343, 1236, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 1237, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 1238,
	1070, 357, 568, 569, 1239, 570, 1240, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1241, 371, 373, 372,
	1242, 374, 572, 1075, 375, 376, 1076, 1243, 377, 378,
	379, 1244, 1245, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 1246, 248, 1079, 408, 409,
	1247, 573, 410, 574, 412, 413, 1248, 0, 414, 0,
	1249, 1250, 416, 417, 418, 1251, 1252, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 1253, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 1254, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 1255,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 1256, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 1257,
	481, 482, 480, 483, 484, 485, 1258, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 1259, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 1260, 507, 508, 0,
	506, 1261, 509, 510, 511, 512, 513, 514, 327, 515,
	1262, 516, 586, 587, 588, 589, 1263, 523, 1264, 517,
	518, 590, 519, 591, 1265, 520, 521, 522, 0, 524,
	525, 1266, 1267, 526, 527, 528, 530, 531, 529, 532,
	1268, 533, 1269, 0, 534, 535, 536, 592, 593, 594,
	1270, 538, 537, 539, 595, 1271, 1272, 1273, 1274, 540,
	541, 596, 542, 543, 544, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3294, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3124, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 1190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2312,
	249, 250, 251, 252, 253, 254, 1196, 255, 256, 1197,
	1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 1205, 550, 267, 268, 269, 270,
	271, 272, 1206, 1207, 0, 273, 551, 552, 553, 1208,
	274, 275, 554, 1209, 1276, 1210, 276, 277, 278, 279,
	280, 281, 282, 0, 1211, 284, 285, 286, 283, 1212,
	287, 0, 288, 289, 290, 291, 292, 293, 1213, 294,
	295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218,
	1219, 1220, 299, 300, 301, 302, 0, 303, 555, 556,
	1221, 307, 304, 305, 1222, 308, 306, 1223, 309, 310,
	311, 1224, 1225, 312, 313, 314, 1226, 315, 316, 1227,
	317, 318, 319, 1228, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 1229,
	246, 1230, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 1231, 337, 1232, 1233, 1069, 338,
	339, 561, 562, 340, 341, 1234, 342, 563, 1235, 564,
	343, 1236, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 1237, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 1238, 1070, 357, 568,
	569, 1239, 570, 1240, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 1241, 371, 373, 372, 1242, 374, 572,
	1075, 375, 376, 1076, 1243, 377, 378, 379, 1244, 1245,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 1246, 248, 1079, 408, 409, 1247, 573, 410,
	574, 412, 413, 1248, 0, 414, 0, 1249, 1250, 416,
	417, 418, 1251, 1252, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 1253, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 1254, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 1255, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 1256, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 1257, 481, 482, 480,
	483, 484, 485, 1258, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 1259,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 1260, 507, 508, 0, 506, 1261, 509,
	510, 511, 512, 513, 514, 327, 515, 1262, 516, 586,
	587, 588, 589, 1263, 523, 1264, 517, 518, 590, 519,
	591, 1265, 520, 521, 522, 0, 524, 525, 1266, 1267,
	526, 527, 528, 530, 531, 529, 532, 1268, 533, 1269,
	0, 534, 535, 536, 592, 593, 594, 1270, 538, 537,
	539, 595, 1271, 1272, 1273, 1274, 540, 541, 596, 542,
	543, 544, 1288, 0, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1989, 0,
	0, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 1187, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 2287, 0, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 2284, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 2285, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 2283,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	2286, 0, 0, 0, 0, 0, 0, 988, 2282, 0,
	950, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 210, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 212, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 1461, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 204, 540, 541, 596, 542, 543,
	544, 963, 205, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 1004, 976, 977,
	978, 974, 975, 987, 1696, 1694, 0, 0, 986, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	210, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 212, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 1461, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 204,
	540, 541, 596, 542, 543, 544, 963, 205, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 1004, 976, 977, 978, 974, 975, 987, 1696,
	2826, 0, 0, 986, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 210, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 212, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 1461, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 204, 540, 541, 596, 542, 543,
	544, 963, 205, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 1004, 976, 977,
	978, 974, 975, 987, 1696, 1694, 0, 0, 986, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 2391, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 2396, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 2392, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 2393,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 2332, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 2330, 0, 2329,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 2327, 0, 2326, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 2324, 0, 2323, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 2321, 0,
	1549, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 1548, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 953, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 967, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 4063, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 967, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1004,
	976, 977, 978, 974, 975, 987, 988, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 2201, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 2200, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 967, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1004,
	976, 977, 978, 974, 975, 987, 988, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 3857, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 967, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 3517, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 1764,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 0,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 3272, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 1004, 976, 977, 978,
	974, 975, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1764, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 986, 1004, 976, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 2396, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 1004, 976,
	977, 978, 974, 975, 987, 988, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 1694, 0, 2401, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	2399, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 2387, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 2376, 986, 1004, 976, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 2374, 986, 2365, 2372, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 2368, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 2369, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	2370, 2367, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 2371, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	2366, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 2362, 986,
	2365, 2372, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 2368, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 2369, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 2370, 2367, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 2371, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 2366, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 1702, 0, 988, 0, 0,
	0, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 2180, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 1554, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 1491, 986, 1004, 976, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 1486, 986, 1004, 976, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 1477, 986,
	1004, 976, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 0, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 1472, 986, 1004, 976, 977,
	978, 974, 975, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 1454, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 1340,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1339, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 1334, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1333, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 1327, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 4103, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 4102, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 4101, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 4103, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 4102, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 2793,
	2794, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 2791, 2792, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 2188, 2189,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 0, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1004,
	976, 977, 978, 974, 975, 987, 2384, 0, 0, 0,
	0, 0, 0, 2382, 2383, 0, 249, 250, 251, 252,
	253, 254, 988, 255, 256, 0, 986, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	0, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 2786, 2787,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 1899, 1900, 0, 249, 250, 251, 252, 253,
	254, 988, 255, 256, 0, 986, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 0, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 4103,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 0, 1031, 0, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 0, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 0,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 4102, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 1125, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 0, 986, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 1027, 0,
	273, 551, 552, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 1066, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1111, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 248, 1079,
	408, 409, 0, 1032, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 1119, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 1063, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 1064, 519, 1065, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 1125, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1115, 1028,
	1788, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 1027, 0,
	273, 551, 552, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 1066, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 1111, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 248, 1079,
	408, 409, 0, 1032, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 1119, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 1063, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 1064, 519, 1065, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 2946, 0, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	1788, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 1027, 0, 273, 551, 552, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 1066, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1111, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 248, 1079, 408, 409, 0, 1032,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 1119, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 1063, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 1064,
	519, 1065, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 1107, 0, 1125, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 1115, 0, 1113, 1028, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1111, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1125, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 1115, 1028, 1113, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 1111, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1125, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 1115, 1028, 1113, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 1119, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 950, 0, 1310, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1687, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 1461,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 0, 205, 0,
	0, 0, 1458, 0, 1310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 210, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 212,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 1461, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 204, 540, 541, 596,
	542, 543, 544, 0, 205, 0, 0, 0, 0, 0,
	1310, 1309, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 1276, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 1075, 375, 376,
	1076, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	0, 1079, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1310,
	1309, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 1483, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 568, 569, 0, 570, 0,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 1310, 1982,
	0, 0, 0, 0, 1983, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 3196, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 1981,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1310, 1309, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	1483, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 1276, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 1070, 357, 568, 569, 0, 570, 0, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 1075, 375, 376, 1076, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 0, 0, 1079, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1125, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 0, 1467,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 1027, 0, 273, 551,
	552, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	1066, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	0, 1032, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 1064, 519, 1065, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 950, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	210, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 212, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 1461, 593,
	594, 0, 538, 537, 539, 595, 243, 0, 0, 204,
	540, 541, 596, 542, 543, 544, 0, 205, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 174,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 1401, 0, 243, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1802, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 243, 2709,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 1405, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 243, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	4253, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 243, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 3140, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 243, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 1405, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 243, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 2680,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 243, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 3297, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 0, 799, 0, 682, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 2084, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 689, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 797, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 687, 509, 510, 511, 512, 688, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 680, 0, 682,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 692, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	689, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 687, 509, 510, 511, 512, 688,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 682, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 692, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 689,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 687, 509, 510, 511, 512, 688, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 682, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 692, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 689, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 2123, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 687, 509, 510, 511, 512, 688, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 682, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 692, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 689, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 687, 509, 510, 511, 512, 688, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 1863, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 682, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 692, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 689, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	687, 509, 510, 511, 512, 688, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 1817, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 1838,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	692, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 0, 1844, 0, 265, 1834, 266, 1850,
	0, 1857, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 1860, 1861, 0, 0, 274, 275, 0, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 1051, 303, 1848, 1847, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 1846, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1855, 1856, 340,
	341, 0, 342, 0, 0, 0, 343, 0, 344, 345,
	346, 347, 348, 0, 0, 0, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 1841, 1842, 0, 1837, 0,
	359, 360, 1072, 0, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 0, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 0, 410, 1849, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 0, 1080, 421, 1081, 0, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 1831, 1832, 0, 434, 0, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1845, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 0, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1843, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1859, 501, 502, 503, 504, 0, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1851, 1852, 1853, 1854, 0,
	523, 0, 517, 518, 0, 519, 0, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	0, 1835, 1858, 0, 538, 537, 539, 0, 0, 0,
	0, 0, 540, 541, 0, 542, 543, 544, 1310, 1309,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 1825, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 3463, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1310, 1309, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 1276, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 1070, 357, 568, 569, 0, 570, 0, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 1075, 375, 376, 1076, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 0, 0, 1079, 408,
	409, 3112, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1310, 1309, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 1276, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 0, 0,
	0, 0, 0, 0, 3053, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 1075, 375, 376, 1076, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 0, 1079, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 3054, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1511,
	0, 1310, 1309, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 692, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 1276, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 1510, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 1070, 357, 568, 569, 0,
	570, 0, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 1075, 375,
	376, 1076, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	0, 0, 1079, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 1509, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	1508, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	1451, 0, 1310, 1309, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1450, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 1380, 0, 1310, 1309, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1379, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 1345, 0, 1310, 1309, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 1305, 0, 1310, 1309, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 1276, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 1304,
	566, 567, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 1070,
	357, 568, 569, 0, 570, 0, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 1075, 375, 376, 1076, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 0, 0, 1079, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 1310, 1309, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1310, 1309, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	1872, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1310, 1309, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 1310, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 1276, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 1075, 375, 376, 1076, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 0, 1079, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 2519, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 2516, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 2523, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 2722, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 2522, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 2719,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 2721, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	2718, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 2521,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 2720, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	2519, 274, 275, 554, 0, 0, 2513, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	2516, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 2523, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 2522, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 2512, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 2521, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	2520, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1576, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 1579,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	1577, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	1578, 537, 539, 595, 1280, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1282, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1277, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1279, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 1117, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1183, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1185, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 1117, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 628, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 627,
	253, 254, 617, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 620, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 621, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 622, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 616, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 617, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 620, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 621, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 622, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 3075, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 2651, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 2650, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 2097, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 2014,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 2019, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 2018,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 2007, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	2009, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1978, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 1117, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1443,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 1442, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1434, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1433, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1431, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1430, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1426, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1425, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1383, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 1298, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1291, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1293, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 598, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 234, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 620, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 621,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	622, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 2130, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 2128, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	2126, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 2062, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 2056, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 2025, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	786, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 785, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 784, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 2722, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 3720, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 607, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	606, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 605, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 243, 2709, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 243, 3730, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 3437, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 2435, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 243, 2709, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	2706, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 2107,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 2095, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 650, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 1157, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 1155, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 651, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 647, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 1158, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 646, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 650, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 640, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 651, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 647, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 1466, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 646, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 1447, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1446, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1440,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 1439, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1389, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1388, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1374, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1373, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1369, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 1301, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 1285, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 650, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 1157, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 1155, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 651, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 647, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 1158, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 646, 587, 588, 589, 0, 523, 0,
	517, 1156, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 1138, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 656, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 650, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 640, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 638, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	639, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	651, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 641, 465, 0, 466, 467,
	473, 474, 468, 469, 647, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 642, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 646, 587, 588, 589, 0, 523, 0, 517,
	644, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 632, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 633, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 630, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 624, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 602, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 3157, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 3106, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	3044, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 3042, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 3028, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 2660, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 633, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 2042,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 0, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1411, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1352, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 1090, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 0,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 0, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 0, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 0, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 1643, 0, 0, 0, 0, 0,
	1624, 0, 1640, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 1659, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 1657, 1652, 0, 0, 1650, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	1662, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 3797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 3658, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 1657,
	1652, 0, 0, 0, 1644, 0, 0, 1624, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 1658, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 1650, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 1623, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 1643, 0, 0, 1662,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 1661,
	0, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 1667, 0, 1668, 1670, 0, 0,
	0, 0, 0, 1638, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 1623, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 1644, 1643, 0, 1629, 0, 0, 0, 0,
	0, 1640, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1669, 0, 1661, 0, 3602, 1671, 0, 0,
	0, 0, 0, 1651, 1653, 0, 0, 0, 0, 0,
	1658, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 1659, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1645, 0, 1671, 0, 0, 1669, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 1667, 1662, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	1660, 0, 1662, 0, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 0, 3601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 0, 0, 0, 1662,
	0, 0, 1670, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 1623, 3600,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 1623, 0, 0, 3302, 1646, 1647, 1648,
	1649, 0, 0, 1643, 0, 0, 0, 1629, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 1659, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 1669,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 1658, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 1650, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 1662,
	0, 0, 1640, 0, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 2866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1661, 0, 0, 1671, 2865, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 0, 1644, 0, 0, 1624, 0,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1658, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 1650, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 1623, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 1643, 0, 0,
	1662, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 0, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 1668, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 1644, 0, 0, 1629, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1669, 0, 1661, 0, 2864, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 0, 1644, 0,
	0, 1624, 0, 1650, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 1658, 0, 1662, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 0, 1629, 4166, 0, 0, 0, 0,
	0, 1660, 0, 1662, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 0, 1661, 0, 2863, 1671, 0, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 1644, 2801, 0, 1624,
	0, 0, 0, 0, 0, 0, 1660, 1670, 0, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 1669, 0, 2830, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1658, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4165, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2802, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 1661, 0, 0, 1671, 0, 1657, 1652, 0, 0,
	1651, 1653, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 1643, 0,
	0, 0, 0, 0, 1644, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 2926,
	0, 0, 2925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1661, 0, 0, 1671,
	0, 0, 0, 0, 1645, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 2409, 1662,
	1638, 1639, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 1644,
	0, 2408, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 1643, 0,
	0, 0, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	0, 0, 1621, 1622, 1662, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 1661, 0, 0, 1671,
	0, 1624, 0, 0, 0, 1651, 1653, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 1659, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 1661, 0, 0, 1671, 0, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 0, 1662, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 1658, 947, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 1662, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 1661, 0, 0,
	1671, 1624, 0, 0, 0, 0, 1651, 1653, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 1659,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 2932,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 1661, 0, 0, 1671, 0, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 1621, 1622, 1662, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 1644, 0, 0, 2927,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 3283, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 1621,
	1622, 1662, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 1661, 0, 0, 1671, 1624, 0,
	0, 0, 0, 1651, 1653, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 0, 0, 1659, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	1661, 0, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 1668, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	1621, 1622, 1662, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1652, 1644, 0, 0, 2867, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 1658, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2894, 0, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 1621, 1622, 1662, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 1661, 0, 0, 1671, 1624, 0, 0, 0, 0,
	1651, 1653, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 1659, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1650, 1652, 0, 1661, 0, 0,
	1671, 0, 1624, 0, 0, 0, 1651, 1653, 0, 0,
	1670, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 1623, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 1659,
	0, 0, 0, 0, 1640, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 1660, 0, 0, 1629, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 1661, 0, 0, 1671, 0, 0,
	0, 0, 0, 1651, 1653, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 1621, 1622, 0, 1667,
	0, 1668, 1664, 1665, 1666, 0, 0, 0, 1638, 1639,
	0, 0, 0, 0, 0, 1662, 0, 0, 1652, 0,
	0, 0, 0, 0, 0, 1624, 1659, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 1644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 1669, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 1645, 1629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
}
var sqlPact = [...]int{

	8328, -1000, -1000, -1000, -1000, 296, -1000, -1000, 295, 294,
	293, 292, 289, 281, 280, 278, 276, -1000, -1000, -1000,
	-1000, -1000, -1000, 273, -1000, -1000, 270, -1000, 268, 267,
	266, -1000, -1000, 264, -1000, 262, -1000, -1000, -1000, -1000,
	261, 260, 258, 78395, 77904, 78879, 2129, 95476, 83733, 2053,
	70076, 94985, 69585, 94494, 94003, 2528, 256, -1000, 93512, 252,
	250, 249, -1000, 93021, -1000, 1710, -1000, 234, 4446, 57285,
	223, 212, 209, 2200, 201, -1000, 195, 194, -1000, 8573,
	1442, -1000, 192, 190, -1000, 8702, 323, 82758, 189, 187,
	2469, 186, 185, 56793, 183, 180, 2307, 2705, -1000, -1000,
	1908, -1000, -1000, 177, 176, 169, 168, 163, 162, 159,
	156, 150, 148, -1000, 141, 136, 135, 133, 132, 131,
	130, 129, -1000, 128, 127, 126, 121, 118, 117, 116,
	115, 114, 113, 109, 108, -1000, 13862, 106, 1859, 1586,
	1585, 1578, 1575, 1569, 1019, 104, 103, 102, 100, 99,
	98, 93, 91, 89, -1000, 87, 82, 80, 78, 77,
	74, 73, 72, 184, 71, 70, 67, 66, 65, 58,
	45, 3621, -1000, 1541, 990, 27215, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 101284, 95960, 44, -123, 41, -1000,
	3046, 1077, 47422, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 356,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 590,
	1828, 831, -1000, -1000, -1000, 92537, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2128, -60, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 828, -1000, 2127, 286, 2079, -1000, -1000,
	-1000, -1000, -1000, 95960, -1000, 1046, -1000, -1000, 3442, 3440,
	1970, 825, 92053, -1000, 1510, -1000, 958, 28760, -1000, 1230,
	-1000, 28760, 345, -1000, -1000, -1000, -1000, -1000, -1000, 3439,
	3437, 3434, 3433, -1000, -1000, 69094, 20981, 68603, 68112, 91562,
	20480, 77413, 76922, 91071, 64201, 1045, -1000, -1000, -1000, 1358,
	-1000, -1000, -1000, -1000, -1000, -1000, 16, 61696, 3266, 95960,
	-1000, 343, -1000, -1000, -1000, -1000, -1000, -1000, 40821, 741,
	40294, 775, 39767, 664, -1000, -1000, -1000, 63700, -1000, 3430,
	3429, 1110, 3428, 2986, 100800, 1702, 3427, 1783, 1323, 3426,
	3425, 3423, 3421, 3420, 3419, 1381, 90580, 2748, 90089, 1717,
	63199, 1043, 76431, 78879, 2468, 89598, 1359, 1355, -1000, -1000,
	-1000, -1000, 2836, 2700, 2697, 53364, -1000, -1000, 3416, 3412,
	3411, 3410, 3409, 100316, 1687, 3408, 2335, 3406, 3405, 3404,
	3403, 3402, 3401, 3397, -1000, 75940, 1042, 75449, 74958, 3117,
	89107, 74467, 88616, 62698, 39240, 945, -1000, -1000, -1000, 49400,
	6085, 5423, 88125, 51403, 78879, 78879, -1000, -1000, -1000, -1000,
	-1000, 38713, 679, 38186, 724, -1000, -1000, 49906, 2683, -1000,
	-1000, -1000, -1000, 37659, 670, 37132, 584, 95960, -1000, 2747,
	1849, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1855, 1557, 3285, 2553, 62197, 1953, 1417,
	3048, 2832, 2819, 1446, 3391, 2423, 2816, 2815, 2791, 2787,
	2786, 1674, 2430, 639, 26688, 2715, 1590, 36605, 1453, 1501,
	2785, 2784, 3302, 1848, 1862, 2066, 67621, 3390, 3389, 3023,
	2782, 2779, 2678, -1000, -1000, -1000, -1000, 1438, -1000, -1000,
	-1000, -1000, -1000, 70560, -1000, -1000, 1194, -1000, -1000, 1194,
	-1000, -1000, -1000, -1000, -1000, 1317, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1541, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1994, -1000,
	1910, -1000, -1000, 2330, 2905, 2905, 2905, 3082, 567, 558,
	-1000, 184, -1000, -1000, 106365, -1000, -1000, 41336, 41336, 41336,
	41336, 41336, 41336, 41336, 1999, -1000, 818, -1000, -1000, 853,
	-1000, 815, 699, -1000, -1000, -1000, -1000, -1000, -1000, 814,
	-1000, -1000, -1000, -1000, -1000, -1000, 3266, -1000, 23538, -1000,
	-1000, -1000, 514, 813, 41336, -1000, -1000, 3325, 3324, 1060,
	-1000, 336, 934, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2745, 812, 811, -1000, 809,
	807, 806, 805, 799, -1000, -1000, -1000, 796, 795, 794,
	793, 789, 786, 783, 782, -1000, 1899, -1000, -1000, -1000,
	-1000, -1000, -1000, 748, 746, 746, 746, -1000, 1037, -1000,
	-1000, -1000, 368, 743, 357, 742, 739, 738, -1000, 776,
	774, 773, 771, 768, 767, 764, 762, 761, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1036, -1000, -1000, -1000, -1000, 14,
	95960, -1000, 590, 14, -1000, -1000, 760, -1000, 30832, 30832,
	30832, -1000, -1000, 2125, 41336, -1000, 2872, -1000, 24, 24,
	922, 48402, -1000, 46424, 922, 585, 862, 52872, -1000, 2674,
	-1000, -1000, 759, 335, -1000, -1000, -1000, -1000, 21480, 2673,
	95960, 95960, 78879, 78879, 78879, 2807, 41336, -1000, -1000, 59241,
	95960, 79363, 3207, 59725, 58752, 95960, 2719, -1000, 3016, -1000,
	-1000, 95960, -1000, 41336, -1000, 3205, 1500, 65189, 3137, -21,
	-1000, -1000, -1000, -1000, -1000, -1000, 2311, 2291, 1170, 2147,
	1483, -1000, 28760, 2973, -1000, -1000, -1000, 332, 21480, -1000,
	-1000, -1000, -1000, -1000, 1995, 2879, 1291, -1000, 2145, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1700, 2878,
	-1000, 2679, 2875, 1699, -1000, -1000, 2152, -1000, -1000, 2997,
	-1000, -1000, 1507, 2870, 25, -1000, -1000, 2142, -1000, -1000,
	1926, -1000, -1000, 1010, 2869, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 73976, 50904, 49906, 61696, 8, -1000,
	-1000, -1000, -1000, -48, -1000, 19979, 106365, -1000, -1000, -1000,
	-1000, 1720, 106365, 946, -1000, -1000, 2864, -1000, 106365, 939,
	-1000, -1000, 2861, -1000, 2718, -1000, -1000, -1000, -1000, 3388,
	-1000, 3387, 2228, 3386, 3385, 3383, -1000, 1617, 1876, 3382,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 73492, 2118, -1000,
	-1000, 72510, -1000, 2227, -1000, 73001, 1040, -1000, 1010, 2226,
	-1000, 82267, 1055, -1000, 3381, 3104, 2527, 1010, 2217, -1000,
	-1000, -1000, -1000, -1000, 54833, -1000, 54833, -1000, 54833, -1000,
	1519, -1000, 99832, 24, 24, 3266, -1000, -1000, -1000, -1000,
	-1000, 2859, 3378, 3377, 3376, -1000, 95960, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 213, 2858, -1000, -1000, 81783, 213,
	2853, -1000, 213, 2849, -1000, 81299, -1000, -1000, 2092, 2844,
	-1000, 238, 2843, -1000, -1000, 233, 2839, -1000, -1000, -113,
	2838, -1000, -1000, 106365, -1000, -1000, -1000, 10, -1000, -1000,
	-1000, 1077, -1000, 48894, -1000, 48894, 87634, 64700, 977, 792,
	56301, 106365, -1000, -1000, -1000, -1000, 106365, -1000, -1000, -1000,
	-214, -1000, -1000, 64700, 49906, 106365, -1000, -1000, -1000, -1000,
	106365, -1000, -1000, -1000, 64700, 72510, -1000, 87143, 72026, -1000,
	-1000, 1378, 2360, -1000, -1000, -1000, 64700, 1276, 64700, 64700,
	64700, -1000, 86652, -1000, -1000, 1882, 1599, 3006, 1875, 78879,
	-1000, 1728, -1000, -1000, -1000, 3035, -1000, 2717, -1000, 58263,
	80815, -1000, 80331, -1000, 79847, -1000, 78879, -1000, 78879, -1000,
	3375, 3371, 3369, -1000, 3368, 3021, -1000, 106365, 3015, -1000,
	3367, 3114, 2715, 106365, -1000, 2855, 1591, 1589, 95960, -1000,
	-1000, 95960, -1000, 95960, -1000, -1000, -1000, 1447, -1000, -1000,
	2288, -1000, -1000, -1000, -1000, 78879, -1000, -1000, -1000, -1000,
	-1000, -1000, 2714, -1000, 1647, -1000, 1724, -1000, 1360, -1000,
	-1000, 241, -1000, -1000, -21, -1000, 99348, -1000, 2330, -1000,
	95960, -1000, 2341, 2691, 2713, 1462, 2101, 2408, -1000, 36078,
	2356, 43911, 2144, 184, -1000, -1000, 184, 184, 28245, -1000,
	-1000, 59725, 59725, 21480, 1340, 41336, 41336, 41336, 41336, 41336,
	41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336,
	41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336,
	41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336,
	1972, 41336, 1313, 41336, 41336, 41336, 41336, 1902, -1000, -1000,
	1824, 608, 1895, -1000, 3259, 3259, 3259, 538, 538, 106532,
	106532, 704, 3365, 853, -1000, 41336, -1000, 810, 41336, 21981,
	-1000, 558, 7144, 2300, -1000, 557, 22508, -1000, -1000, -1000,
	23538, 699, 35551, 41336, 1030, 106365, -1000, -1000, 1337, 3281,
	19480, 2712, 2590, 758, 765, 676, 26161, 25634, 25107, 24580,
	632, 41336, 41336, 41336, 41336, 41336, 41336, 41336, 41336, -1000,
	-1000, 3287, -1000, 3281, -1000, -1000, -1000, -1000, 3281, 1331,
	1328, 3281, -1000, 3281, 3281, 2146, 2146, 35036, 34509, 33982,
	44426, 33455, 41336, 24053, 32928, 32401, -1000, 95960, 14, 3204,
	41336, 149, -1000, 105004, -1000, 149, 149, 757, 9, 106365,
	2393, 2393, 47912, 2081, 2007, 2007, 2007, -1000, 922, 15459,
	922, 85679, 2023, 922, 922, 329, 385, 550, 45934, 2872,
	85679, 844, 756, 36, 33, 32, -1000, -1000, 29, 27,
	-1000, -1000, 78879, 754, 21981, 21480, 328, 1441, 4, 2453,
	2447, 2439, -1000, 2437, 1738, -1, 1308, 78879, -40, -1000,
	4221, -6, -1000, 1332, 324, 3281, -1000, -1000, -1000, -1000,
	-1000, 3364, 3363, -1000, 1035, 752, 751, 655, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 748, 746, 746, 746,
	-1000, 368, 743, 357, 742, 739, 738, -1000, -1000, -1000,
	-1000, -1000, 2671, 78879, -48, 79363, 78879, 936, -14, 1120,
	-21, -1000, -1000, -1000, 65189, 1194, -1000, 1927, -1000, -1000,
	-1000, -1000, -1000, -1000, 1411, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1060, -1000, -1000, -1000, -1000, -1000, -1000, 3273,
	3269, 12, -1000, -1000, 21480, -1000, -23, 1701, 1697, -1000,
	67130, 2299, 3018, 2996, 1496, -1000, 1445, 1305, 3079, 70560,
	3177, 3188, 785, -1000, 2667, -1000, -1000, 957, 1624, 1690,
	1303, 70560, 2679, -1000, 59725, -1000, 2504, 3074, 1397, 1370,
	1397, 1397, 1372, -1000, 70560, 1689, 1288, 1284, -1000, 1281,
	1280, -1000, -24, 3172, 3181, 191, -1000, 2665, 1267, -1000,
	-1000, 78879, 21480, 1503, 1502, 1686, 1262, 11, -1000, 3165,
	3159, 1261, 1260, -1000, 4104, -1000, 64700, 1664, 2837, 2552,
	920, 2551, -1000, -1000, 920, 8, 61696, 95960, 322, -1000,
	810, 41336, 41336, 810, 41336, 810, 3105, -1000, -1000, 2835,
	-1000, -1000, -1000, 3362, 1832, 2332, -1000, -1000, 737, 2216,
	2664, 95960, 2462, -11, 78879, -1000, 2834, 2679, 2214, -1000,
	-1000, 71535, -1000, 2830, 590, 2208, -1000, 703, 3360, -1000,
	98864, -1000, 3016, 1350, 2824, 1075, 178, 3203, -1000, 178,
	55323, -1000, 95960, -1000, -1000, 95960, -1000, -1000, -1000, 3359,
	-1000, 78879, -1000, -1000, 78879, 213, 2823, -1000, 78879, -1000,
	78879, 205, 2806, -1000, -1000, 95960, -1000, 78879, 78879, -1000,
	95960, 95960, 64700, 64700, 4151, 66162, -22, -25, 548, -1000,
	86168, 95960, 1074, 66646, 95960, 2957, 1005, 49906, -1000, -28,
	-214, 2542, 977, 977, 920, -1000, 920, -1000, 78879, 2711,
	-1000, -1000, 64700, 977, 977, 977, -1000, -1000, -1000, -1000,
	3355, 3354, -1000, -1000, -1000, 1009, 78879, 95960, 78879, -1000,
	-1000, 95960, -1000, 95960, -1000, 1009, 95960, 1009, 95960, 1009,
	95960, -1000, -1000, -1000, -1000, -1000, -1000, 810, 41336, -1000,
	-1000, 3353, 1555, -1000, 2709, -1000, 2704, -1000, 61, -1000,
	-1000, -1000, -1000, -1000, 1667, 78879, 78879, 78879, 78879, 95960,
	78879, -1000, 70560, -1000, 2341, 2691, -1000, -1000, -1000, -1000,
	-1000, -1000, 1464, 2090, -1000, 2403, -1000, 1468, -1000, -1000,
	-1000, 106365, 44925, -1000, -1000, 106365, 1729, -1000, 43396, 42881,
	-1000, -1000, 1597, 78879, 2467, -1000, 2467, -182, -1000, 104599,
	2401, 78879, -1000, -1000, -1000, -1000, -1000, 955, 552, 552,
	1318, 1318, 1318, 1318, 3142, 386, 317, 4760, 106745, 106745,
	4803, 4803, 4803, 4803, 4803, 106745, 360, 538, 538, 360,
	360, 360, 360, 360, 538, 538, 538, 106745, 106745, 106745,
	106532, 11245, 6367, 41336, 41336, 1253, 1794, 608, 6160, 41336,
	7986, 7986, 7986, 7986, -1000, 1925, -1000, -1000, -1000, -1000,
	2662, 733, 44426, 44426, -1000, -1000, -1000, -1000, 23023, 41336,
	-1000, -1000, -1000, -1000, 31874, -1000, -1000, 104143, -287, 539,
	-175, -7, -1000, 41336, 41336, 41336, 537, -1000, 315, 41336,
	95960, -1000, 14691, 841, -93, -1000, -30, 1385, -1000, 41336,
	-1000, -1000, 1244, -1000, 1242, 1238, 1209, -1000, 732, 535,
	-1000, 313, -1000, 2001, 731, 730, 41336, -1000, -1000, -1000,
	-1000, -1000, 104048, -1000, -1000, 103820, -1000, -1000, 103499, -1000,
	-1000, 103414, -1000, -1000, -1000, 106199, 14140, 13283, 11850, 5833,
	10914, 9932, -33, 525, -35, 523, 954, 942, 521, 520,
	519, -43, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-45, 516, -1000, 2655, -175, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 515, -1000, 512, -1000, 105968, -175, 508,
	4435, -1000, 44426, 44426, 44426, -1000, 486, -1000, 104774, -1000,
	105802, 31359, 31359, 31359, 485, 105571, 41336, -175, -46, -1000,
	-57, -1000, -1000, 565, -64, 1026, 30832, 46930, 21480, -1000,
	1026, 1026, 41336, -1000, 41336, 2417, -1000, -1000, -1000, 2416,
	2255, 2393, 47912, -1000, -1000, -1000, -1000, 85679, -1000, 3266,
	2577, -1000, 85679, -1000, -1000, 95960, 590, -1000, 85679, 85679,
	21480, 922, -1000, 922, 85679, 705, -1000, -1000, -1000, -1000,
	-1000, 484, 51892, -7, 303, 21480, 1010, -1000, 2450, 2450,
	2450, 2450, -1000, -1000, 95960, 1171, 7, 3225, -1000, 1928,
	-1000, 59725, -1000, 852, 1254, 21480, -1000, -1000, -1000, 729,
	-1000, 3281, 3281, -1000, 3281, 95960, 2653, 105, -1000, 28760,
	-1000, 1194, -1000, -1000, 1486, -1000, 1847, -1000, 1258, -1000,
	-1000, -1000, -1000, 28760, -1000, 3031, 95960, 95960, 78879, -1000,
	95960, -1000, 2207, 98380, 2206, 59725, 95960, -1000, -1000, 728,
	727, 2398, 2388, 1072, 95960, 95960, 2374, 97896, 97412, 95960,
	1885, 41336, 61212, 2017, 1830, 810, 810, -1000, -1000, 810,
	726, 1251, 78879, 78879, 95960, 78879, 1630, -1000, -1000, -1000,
	-1000, -1000, 71044, -1000, -1000, 3284, 3283, -1000, 1397, -1000,
	-1000, -1000, 1397, 2679, 1607, 95960, 78879, 61212, 1678, 95960,
	1939, 810, 810, -1000, -1000, 810, 725, 21480, 1845, -1000,
	2756, 95960, 3323, 95960, 95960, 95960, 61212, 3056, 96928, 95960,
	95960, 61212, 4104, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 60723, 1080, 1010, 1662, 1153, 70560, 49906, 1001,
	49906, 2533, -1000, -1000, 18981, -1000, 106365, 106365, -1000, 106365,
	-1000, 57774, 95960, -1000, 1039, 95960, 66646, 982, 2805, 54343,
	-48, 977, 64700, 78879, -11, 95960, -1000, 2679, 2804, 590,
	2202, -1000, 64700, 3202, 2803, 721, 3351, 3350, -1000, 2116,
	2196, -1000, -1000, 96444, 2895, 888, 95960, 1026, 47912, 1858,
	-1000, 52383, 1057, 95960, 1769, 90, -1000, -1000, -1000, 51,
	95960, -1000, 3349, -1000, -1000, 213, -1000, 78879, 213, 213,
	-1000, 78879, 78879, 2092, -1000, 238, -1000, 233, -1000, -113,
	-1000, -1000, 4151, 4151, 977, -185, 707, -1000, 911, 910,
	50405, 64700, -66, -1000, -1000, -1000, -1000, -1000, 78879, 95960,
	797, 2516, 95960, -73, -1000, 301, 701, -1000, 2099, -1000,
	-1000, 1005, 49906, 2647, -1000, -1000, 1023, -1000, 1354, 977,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23,
	-48, -48, -1000, 1009, -1000, 1009, -1000, 1009, -1000, 106365,
	-1000, -1000, 1544, 1504, 95960, -1000, 21480, 95960, 78879, 21480,
	78879, 2690, 2689, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1090, -1000, 1729, 2086, -1000, 699, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2276, -1000, -13, 28245,
	2150, -1000, -1000, 78879, 21, 41336, 41336, 5509, 5220, 41336,
	44426, 44426, -1000, 41336, 4594, -1000, -1000, -1000, -1000, -1000,
	2626, 693, 41336, 59725, 5873, 5422, -1000, 479, 9336, 360,
	-1000, 41336, -1000, 478, 30317, -1000, 105171, -51, -74, -1000,
	15971, -175, -79, -1000, -1000, 851, -1000, 2887, -1000, 41336,
	105405, 2254, 1887, 1705, 1592, 3281, 3322, 18482, -1000, 55812,
	1027, 2054, 103049, -1000, -1000, -1000, -1000, 59725, 59725, 41336,
	41336, -1000, 41336, 41336, 41336, -1000, -1000, -1000, 3281, 929,
	-1000, -1000, -1000, 929, -1000, -1000, 1397, -1000, 1397, -1000,
	41336, -1000, -1000, 2625, 41336, -1000, 59725, 59725, 44426, 44426,
	44426, 44426, 44426, 44426, 44426, 44426, 44426, 44426, 44426, 44426,
	44426, 44426, 44426, 44426, 44426, 44426, 44426, 2316, 44426, 3246,
	3246, 3246, -1000, 2687, 2625, 41336, 41336, 59725, 477, 476,
	475, -1000, 41336, -175, -1000, -1000, 4151, 692, -1000, 2262,
	-1000, 2588, -1000, 41336, -1000, -142, -1000, 2872, -1000, -1000,
	2588, 2588, -82, 106365, 47912, 47912, -1000, 689, 41336, 2414,
	-1000, -1000, 840, -285, -1000, 909, -1000, -1000, -1000, -1000,
	-1000, 590, -1000, -1000, -1000, 298, 85679, 85679, 839, -1000,
	-94, -1000, -1000, -96, -1000, 3201, 474, 21480, -1000, -1000,
	2995, -1000, -1000, -1000, -1000, -1000, -1000, -48, 95960, 2070,
	3321, -1000, 3282, 850, 838, 179, 3281, 473, 472, 471,
	-48, 95960, 95960, -1000, -21, -1000, -1000, -1000, 41336, -1000,
	-1000, 3013, 1148, 1147, -1000, -1000, 2800, -1000, 2194, -1000,
	1065, -1000, 1536, -1000, 41336, 41336, 684, 680, 3348, 1757,
	3346, 1073, 2799, 2092, 2798, 2092, -1000, -1000, 947, -1000,
	106365, -1000, -1000, -1000, -1000, 678, 674, -1000, -23, 1521,
	1661, 1021, -1000, -1000, 41336, 41336, 85195, -1000, 456, 2997,
	18, -1000, -1000, 1648, 1146, -1000, -1000, -1000, -1000, 2679,
	1612, 1145, -1000, -1000, -1000, 1017, -1000, -1000, 1012, -1000,
	-1000, 41336, -1000, -24, 1144, 3127, 2193, 78879, 1142, -1000,
	1140, -1000, -1000, -1000, 3139, 2092, 2796, 1208, -1000, -1000,
	-1000, -1000, -1000, 60224, -1000, 95960, 78879, 1573, 920, -1000,
	2205, 920, 1001, 2624, -1000, 2459, 3345, 78879, 3344, 466,
	-103, -31, 59725, 3200, -1000, 2132, 690, 78879, 927, -1000,
	3266, -1000, -1000, -1000, -1000, 78879, 3199, 2794, 1010, 810,
	78879, 3320, -1000, -1000, 78879, 2793, 2114, 2181, 2297, 888,
	65678, -1000, 1010, 2031, -92, -1000, 1769, 29790, 2999, -104,
	-1000, -1000, -1000, 1026, 55323, 47912, 41336, 3343, -106, -1000,
	-1000, 213, -1000, -1000, -1000, 205, -1000, -1000, -1000, -1000,
	-1000, -1000, 84222, 84222, 64700, 64700, 64700, 977, 95960, 95960,
	66646, -1000, 672, 95960, 95960, 671, -1000, 95960, 95960, 3342,
	64700, -42, 669, -1000, 908, 907, 906, -1000, -1000, -1000,
	-1000, -1000, -1000, -214, 810, -1000, 2065, 78879, -1000, 17983,
	-1000, -1000, -1000, -1000, -1000, 1009, -1000, -1000, 1944, 2140,
	1944, 1764, 1761, -1000, 2082, -1000, -1000, -1000, -1000, 2429,
	3001, 21480, 3119, 7986, 41336, 41336, 403, 1834, 500, 7986,
	41336, 41336, 59725, 12738, -111, 41336, 41336, -1000, 41336, 837,
	106365, 3316, 41336, 464, 461, -1000, -1000, -1000, 3280, -1000,
	-1000, -1000, 106365, 41336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 452, -1000, 62, -1000, -1000, -1000, 101768, -1000, 41336,
	451, 3070, -1000, 450, 449, 7773, 4835, 102962, 102867, 102639,
	448, -1000, -1000, 447, 445, 106365, 2687, 106365, -1000, -1000,
	931, 931, 1361, 1361, 1361, 1361, 3246, 722, 881, 418,
	435, 435, 435, 511, 917, 917, 435, 435, 435, 2621,
	2308, 668, 6200, -1000, -1000, 106365, 106365, 444, -1000, -1000,
	-1000, -175, 442, 4151, -1000, 2583, 3068, 106365, -1000, 47912,
	2583, 2583, -1000, -1000, 2255, 95960, 106365, 47912, -1000, 2577,
	-1000, 16481, -1000, 21480, -1000, -1000, -1000, -1000, 3266, -1000,
	51892, -1000, 667, -1000, 52, 2995, -1000, 905, -1000, -48,
	-1000, -1000, 836, 3341, 847, 21480, 441, -1000, -1000, -1000,
	-48, -48, 106365, 95960, 95960, 95960, 2792, -1000, 4455, -1000,
	1072, 102310, -118, -1000, 104599, 41336, 95960, -1000, -1000, 1800,
	2546, 1103, -1000, 3038, 95960, -1000, 95960, -1000, -1000, 95960,
	95960, 78879, 95960, 2777, -120, 106365, -59, -1000, 904, -1000,
	1383, -1000, 17484, 95960, 78879, 95960, 78879, 1987, 2776, -132,
	21480, -1000, 3315, 3308, 2790, 3047, 3307, 95960, -1000, 95960,
	78879, 2944, -1000, -1000, -1000, -1000, 1598, 1138, 1001, -62,
	665, -1000, 902, -1000, -1000, 900, 1001, -1000, 64700, 49906,
	-1000, 590, -1000, 2497, -1000, 83242, 2061, 810, -1000, 3340,
	84711, 663, -1000, 2060, -1000, 706, 2679, 810, 78879, -1000,
	-1000, 590, 440, -69, -1000, 1069, 21480, 78879, 2789, 2319,
	888, 65678, -1000, 1350, 2408, -1000, -76, -1000, 658, 810,
	2031, -1000, -92, 106365, -1000, 898, -1000, -1000, -1000, -135,
	-1000, -1000, 421, -1000, 2942, 2941, -1000, 2609, 41336, 660,
	652, 95960, 2938, -1000, -1000, -141, 2138, 2138, 64700, 49906,
	64700, 1005, -1000, 2284, -1000, -1000, -1000, -1000, -1000, 21480,
	1611, -1000, 650, 643, -1000, -1000, -1000, -1000, 3001, 7986,
	7986, 41336, 41336, 41336, 7986, 12738, -143, -1000, 7986, 7986,
	-175, -1000, -1000, 105171, -1000, -1000, -1000, 106365, -1000, 16985,
	1974, -1000, 102260, -1000, 28245, -1000, -1000, 41336, 41336, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 44426, 2613, 641,
	59725, -1000, -1000, 419, 1020, 41336, 41336, 2872, 1020, 1020,
	-1000, -149, -1000, -1000, -1000, 3266, 52, -1000, -1000, 3339,
	21480, -1000, 64700, 846, -1000, 3338, -1000, -1000, -1000, -1000,
	-1000, 95960, -1000, 95960, -1000, 21480, 95960, 2603, 2169, -1000,
	-1000, 2368, 624, 44426, 78879, 928, -1000, 3218, 2581, 1776,
	41336, 2150, -150, -151, 2164, -1000, -1000, 2159, 41336, -1000,
	59725, 615, 2092, 2092, -152, -161, -1000, -1000, 41336, 1136,
	95960, 29275, -1000, 3336, 2997, -1000, -1000, -1000, -1000, 95960,
	41336, 1135, -1000, -1000, -1000, 3306, 2092, 21480, -1000, 2092,
	2092, 3047, 1101, 95960, 78879, -1000, 2122, 2122, 64700, 49906,
	-1000, -113, 1001, 3198, 1939, 2541, -1000, -1000, -1000, -1000,
	2357, -1000, -1000, 95960, 2355, 986, -1000, -163, -1000, 897,
	895, 66646, 982, 938, -1000, -1000, -1000, 590, 3197, -1000,
	3293, 613, 95960, 2110, 610, 21480, -1000, 888, 65678, -1000,
	2895, 1769, -1000, 2801, 95960, 2993, -1000, 2408, 608, -1000,
	977, 607, 605, 2037, 2037, -169, 41336, 41336, -172, 604,
	977, -1000, -179, -1000, -1000, -1000, -1000, -130, -1000, 886,
	884, -1000, -1000, 78879, 78879, 41336, 41336, -1000, 7986, 7986,
	7986, -1000, 382, -1000, -1000, 2031, 3064, -1000, -144, 14830,
	7231, 4906, 44426, 59725, -184, -1000, -1000, 95960, 106365, -175,
	-1000, -1000, -1000, 677, -1000, -1000, 3333, -1000, -1000, 1863,
	-1000, -1000, -1000, 95960, 2176, -1000, 1071, 41336, 6200, 602,
	41336, -1000, 3194, -1000, 2493, 2634, 2497, 601, -1000, -1000,
	-1000, -1000, -1000, 1068, 1814, -1000, -1000, 106365, 3047, 41336,
	-1000, -1000, 600, 599, 106365, 597, 887, 2607, -1000, -1000,
	-1000, -1000, 106365, 596, 3127, -1000, -1000, -1000, -1000, 2092,
	78879, -1000, -1000, -1000, -186, -1000, -1000, 1827, 810, 982,
	-1000, 1983, 2061, 594, -1000, -1000, 2095, 2410, -1000, 84711,
	28760, 28760, 371, 3190, 938, -1000, 3256, -1000, 3189, 810,
	-1000, 41336, -1000, 78879, 41336, 2108, 65678, -1000, 2297, -1000,
	1269, -187, 95960, 1769, -1000, -1000, 64700, 64700, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1068,
	-189, -192, -1000, 64700, -1000, -1000, 2284, -1000, 95960, -1000,
	95960, -1000, -1000, -194, -195, -1000, 1973, 41336, 28245, -1000,
	-1000, 4906, -197, -1000, -162, -1000, 3186, -1000, -1000, -1000,
	-1000, 2788, 2579, 6609, 2269, 95960, 239, -1000, 2633, -1000,
	-1000, 1939, 95960, 2497, 2576, 78879, 1070, -205, 1944, 1944,
	41336, 27730, 1981, 41336, -1000, -1000, 3047, -1000, 2601, 3249,
	-1000, 2095, 78879, 95960, -1000, 3032, -1000, 2933, -1000, -1000,
	-1000, 2497, 810, -1000, -1000, 810, -1000, -207, 1069, -212,
	78879, -1000, 2319, 1487, -1000, 1026, -1000, -1000, -213, -215,
	1776, 1068, 973, -221, -1000, -223, -226, -1000, -1000, 363,
	42366, 42366, 42366, -175, -182, -1000, 95960, 591, 2764, 1000,
	-1000, 2098, 1806, 92, 1093, -1000, -1000, 2581, -229, -1000,
	997, 590, -1000, 41336, 1068, -234, -1000, 1056, -235, -1000,
	1051, -237, -1000, 2605, -1000, -242, 2092, 994, 3100, -1000,
	-1000, -1000, -1000, 589, -243, -1000, -1000, 2097, -1000, 1939,
	986, -1000, 1068, 587, 1776, 580, -1000, 55323, -1000, 977,
	977, 2497, 1776, 1026, 576, 977, -1000, -1000, -1000, 2857,
	-1000, 45424, 2119, 1747, 104371, 2857, 2857, -1000, -1000, 95960,
	3089, -1000, 2106, 2104, 1435, -1000, -1000, -1000, -1000, -1000,
	-1000, 1026, -1000, 3088, 2269, 106365, 2497, -1000, 1944, 2539,
	-1000, 1944, 2604, -1000, 1979, -1000, -1000, -1000, 2722, 3243,
	95960, -1000, 95960, 1718, 1605, 3331, 982, 2095, 1776, 41336,
	2497, 41336, -245, -1000, -1000, 1939, 2497, -1000, -1000, -1000,
	1760, 3213, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	882, -1000, 2918, -1000, 1086, 1841, 1841, -1000, 877, 2098,
	-1000, -1000, 572, -1000, 571, -1000, 1704, -1000, -1000, -249,
	-1000, -1000, 3329, -1000, 2095, -1000, 2497, -250, 1939, -251,
	-1000, 973, 1939, 1725, -1000, -1000, 2020, 41851, 41336, -1000,
	3196, -1000, -1000, 2333, -1000, 41336, 2581, 41336, 41336, 2059,
	2088, -1000, -1000, 1939, 1068, 973, 1776, 1026, 973, -1000,
	-1000, -1000, 106365, -1000, -1000, -1000, 106365, -1000, -257, -265,
	53854, -1000, -1000, -1000, 973, 1776, 1026, 2497, -1000, 1026,
	1939, 1129, -185, 84222, 1026, 2497, -1000, 1939, -1000, -1000,
	570, -266, -1000, 1939, 973, 41336, -1000, 973, 1026, -267,
	1026, -1000, 1939, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4093, 4092, 4091, 4089, 4088, 4087, 4086, 4083, 4082,
	4081, 4080, 4079, 4077, 4076, 4075, 4074, 4073, 4072, 4069,
	4063, 4062, 4060, 4059, 4058, 4056, 4055, 4053, 4052, 4048,
	4047, 4045, 4044, 4043, 4042, 4040, 4039, 4037, 4036, 4030,
	4027, 4021, 4019, 4018, 4017, 4016, 4015, 4013, 4012, 4008,
	4007, 4006, 4004, 4002, 40, 4000, 3999, 3996, 3995, 3986,
	3985, 3983, 3980, 3979, 3978, 3975, 3974, 3973, 3972, 3969,
	3966, 3962, 3961, 42, 3959, 234, 3958, 3954, 3952, 3951,
	3947, 3946, 3945, 3944, 3943, 3936, 3933, 3928, 233, 3926,
	150, 3925, 3923, 3922, 3921, 3916, 232, 3915, 3913, 3911,
	3910, 244, 3909, 3908, 3906, 3904, 3903, 3901, 3900, 3895,
	3893, 72, 130, 3890, 3887, 35, 3886, 3885, 3881, 3878,
	3876, 3875, 3874, 3873, 3869, 3862, 216, 3861, 231, 3860,
	3859, 3858, 3855, 3854, 3853, 3852, 3851, 3849, 3846, 3841,
	3837, 3836, 3835, 3833, 3832, 3829, 3827, 3825, 3824, 3817,
	3815, 3811, 3809, 3800, 3796, 3795, 3794, 3793, 3791, 3769,
	238, 168, 3765, 3762, 230, 229, 3761, 3760, 3759, 3757,
	3756, 101, 7, 31, 3753, 3750, 109, 63, 67, 83,
	79, 73, 3744, 86, 3743, 102, 48, 3739, 9, 45,
	210, 209, 8428, 201, 3738, 3737, 3735, 208, 162, 3734,
	206, 3733, 3732, 3731, 3727, 88, 64, 145, 143, 138,
	144, 28, 3724, 3723, 74, 61, 41, 36, 3722, 3716,
	3715, 3111, 104, 3714, 225, 211, 137, 3713, 3711, 3708,
	1682, 3706, 39, 3705, 76, 62, 99, 15, 97, 3704,
	123, 24, 3703, 155, 50, 3700, 129, 78, 75, 8823,
	9030, 3699, 87, 49, 92, 311, 165, 158, 173, 159,
	169, 182, 181, 142, 654, 3696, 218, 3695, 3174, 57,
	133, 3692, 3690, 3689, 56, 170, 85, 3684, 3683, 54,
	1, 27, 4, 149, 11, 95, 18, 3681, 12, 3680,
	3678, 3677, 3676, 26, 141, 3675, 243, 3674, 135, 43,
	22, 3673, 16, 186, 3670, 194, 107, 3668, 3667, 222,
	177, 132, 3666, 80, 196, 3665, 3664, 3662, 3660, 3659,
	112, 25, 111, 3658, 3655, 124, 204, 166, 3653, 46,
	3652, 139, 82, 114, 241, 127, 191, 98, 188, 160,
	195, 3651, 3650, 3649, 167, 3647, 3645, 187, 125, 3644,
	3643, 179, 245, 37, 60, 197, 58, 157, 134, 3642,
	175, 3641, 3640, 3639, 242, 156, 183, 2, 13, 113,
	96, 34, 17, 202, 126, 273, 91, 3637, 5311, 1422,
	1557, 3636, 3634, 118, 100, 55, 103, 128, 224, 52,
	3632, 3630, 583, 3629, 3628, 3627, 3624, 153, 3620, 3618,
	3615, 122, 117, 146, 3614, 77, 69, 10, 108, 219,
	240, 89, 190, 147, 226, 3613, 151, 3612, 44, 200,
	3607, 171, 227, 3606, 3604, 172, 3601, 121, 199, 47,
	115, 3600, 189, 3597, 3596, 3594, 3593, 3589, 3587, 3585,
	163, 198, 3584, 3583, 3582, 120, 164, 3581, 223, 269,
	178, 81, 38, 3580, 71, 1813, 3571, 152, 205, 90,
	140, 3568, 1891, 53, 0, 11558, 10364, 7095, 11127, 3567,
	2386, 3566, 3564, 3563, 180, 110, 3562, 3557, 3556, 84,
	3554, 59, 3553, 3548, 51, 3547, 20, 6, 8, 19,
	14, 1545, 161, 3546, 3545, 93, 116, 105, 3544, 236,
	193, 3543, 3541, 3540, 3538, 68, 3536, 30, 3535, 32,
	3531, 3530, 33, 5, 23, 3527, 3526, 215, 3525, 185,
	214, 3522, 136, 3520, 3150, 119, 3518, 3517, 221, 66,
	3516, 217, 3511, 3118, 3509, 3506, 21, 3505, 3481, 212,
	148, 184, 3478, 3469, 131, 3467, 3466, 3458, 220, 3456,
	3454, 29, 3453, 3, 3452, 3450, 174, 3044, 3449, 3448,
	65, 3445, 154,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 43, 43, 43, 43, 43, 522,
	522, 176, 176, 176, 178, 178, 177, 177, 177, 177,
	64, 64, 535, 535, 536, 536, 534, 537, 537, 537,
	175, 175, 175, 110, 110, 110, 110, 111, 111, 112,
	112, 179, 179, 179, 181, 181, 180, 180, 180, 180,
	180, 180, 180, 180, 185, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 92, 92, 462, 462, 463, 463,
	170, 170, 171, 171, 171, 171, 172, 172, 173, 173,
	173, 57, 182, 182, 184, 184, 183, 183, 45, 45,
	45, 45, 45, 45, 45, 46, 46, 46, 46, 46,
	47, 47, 47, 47, 47, 47, 48, 48, 48, 48,
	48, 48, 55, 55, 55, 55, 161, 161, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 546, 546, 547, 547,
	548, 548, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 70, 70,
	295, 295, 267, 267, 71, 71, 71, 72, 72, 73,
	73, 59, 59, 520, 520, 310, 310, 420, 420, 75,
	75, 330, 330, 76, 76, 76, 76, 76, 76, 77,
	77, 77, 77, 77, 77, 77, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	85, 85, 85, 85, 85, 86, 86, 86, 83, 83,
	83, 80, 80, 80, 79, 79, 79, 84, 84, 84,
	519, 258, 258, 82, 82, 82, 260, 260, 81, 81,
	81, 311, 311, 87, 87, 87, 87, 268, 88, 88,
	88, 88, 88, 88, 88, 88, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 422,
	422, 89, 89, 89, 390, 390, 93, 93, 93, 345,
	345, 94, 94, 94, 94, 94, 95, 95, 95, 95,
	95, 113, 113, 113, 113, 113, 524, 524, 303, 303,
	224, 224, 224, 224, 103, 103, 103, 103, 104, 104,
	104, 105, 105, 166, 166, 120, 120, 120, 120, 120,
	119, 119, 119, 119, 119, 119, 49, 49, 49, 50,
	50, 51, 51, 52, 52, 53, 53, 54, 54, 54,
	54, 54, 122, 122, 540, 540, 124, 121, 121, 121,
	123, 123, 123, 123, 125, 126, 126, 126, 126, 126,
	126, 126, 126, 127, 127, 454, 454, 319, 319, 452,
	452, 471, 471, 453, 453, 272, 272, 272, 272, 272,
	273, 273, 273, 461, 461, 461, 461, 461, 461, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 167,
	167, 168, 169, 169, 169, 169, 148, 148, 148, 160,
	160, 160, 160, 160, 160, 160, 151, 151, 151, 138,
	138, 129, 129, 129, 129, 129, 129, 129, 133, 133,
	133, 133, 133, 133, 133, 133, 130, 130, 140, 140,
	140, 140, 140, 134, 134, 135, 135, 137, 137, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 131, 131,
	131, 131, 142, 142, 142, 142, 352, 352, 352, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	159, 159, 159, 159, 159, 159, 538, 538, 539, 539,
	155, 155, 155, 155, 155, 155, 404, 404, 149, 149,
	149, 149, 154, 154, 154, 154, 335, 335, 146, 146,
	146, 147, 147, 147, 152, 152, 153, 150, 150, 156,
	156, 156, 156, 132, 132, 132, 550, 550, 550, 157,
	157, 145, 145, 158, 158, 158, 158, 158, 158, 158,
	158, 144, 144, 144, 143, 143, 143, 143, 136, 521,
	521, 517, 517, 517, 517, 517, 517, 517, 517, 518,
	518, 523, 523, 98, 98, 98, 98, 98, 106, 106,
	106, 106, 106, 99, 99, 99, 99, 99, 101, 101,
	100, 100, 100, 100, 65, 65, 65, 14, 14, 14,
	66, 66, 188, 188, 188, 189, 189, 280, 280, 280,
	280, 186, 186, 187, 187, 67, 67, 551, 551, 551,
	531, 531, 531, 532, 532, 532, 532, 532, 532, 274,
	274, 275, 275, 370, 370, 370, 370, 370, 278, 278,
	278, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	281, 281, 212, 212, 212, 284, 285, 285, 282, 282,
	283, 283, 283, 287, 287, 286, 289, 289, 288, 369,
	480, 480, 482, 482, 482, 482, 482, 482, 482, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	552, 552, 478, 478, 478, 479, 474, 474, 475, 475,
	475, 475, 475, 276, 276, 277, 277, 277, 277, 476,
	477, 301, 301, 407, 481, 481, 483, 483, 485, 553,
	553, 553, 553, 553, 553, 554, 554, 554, 368, 368,
	367, 367, 293, 293, 486, 486, 486, 486, 487, 487,
	487, 487, 487, 490, 489, 488, 488, 488, 488, 488,
	69, 69, 69, 332, 332, 331, 331, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 163, 163, 227, 227, 63, 63, 63, 12,
	12, 12, 533, 533, 533, 68, 68, 68, 68, 68,
	68, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 526,
	526, 525, 525, 228, 228, 556, 556, 74, 74, 74,
	74, 74, 74, 74, 423, 423, 424, 424, 62, 62,
	62, 62, 62, 353, 353, 351, 351, 350, 350, 300,
	300, 406, 232, 232, 205, 205, 205, 27, 26, 19,
	19, 24, 24, 39, 39, 39, 39, 42, 42, 38,
	38, 38, 38, 40, 40, 34, 34, 541, 541, 542,
	542, 102, 102, 107, 107, 107, 107, 107, 108, 108,
	108, 108, 109, 109, 109, 109, 118, 118, 162, 162,
	162, 162, 162, 162, 162, 44, 44, 44, 44, 56,
	56, 56, 56, 116, 558, 558, 558, 117, 117, 117,
	557, 557, 225, 225, 364, 364, 365, 365, 559, 559,
	366, 366, 366, 366, 219, 218, 220, 220, 61, 61,
	61, 214, 214, 215, 215, 216, 216, 217, 217, 560,
	560, 96, 96, 96, 165, 165, 266, 266, 266, 360,
	360, 360, 294, 294, 238, 238, 363, 363, 361, 361,
	361, 361, 329, 329, 329, 164, 164, 308, 308, 321,
	321, 322, 322, 417, 417, 323, 115, 115, 192, 192,
	190, 190, 190, 190, 190, 190, 190, 190, 197, 197,
	198, 198, 199, 199, 200, 201, 201, 201, 201, 312,
	312, 202, 202, 202, 191, 191, 191, 193, 193, 193,
	193, 193, 193, 193, 196, 196, 196, 196, 203, 203,
	203, 195, 195, 497, 497, 497, 499, 499, 501, 501,
	500, 500, 496, 496, 498, 498, 555, 555, 334, 334,
	334, 291, 292, 290, 290, 298, 298, 296, 297, 297,
	299, 299, 405, 405, 405, 206, 206, 206, 326, 326,
	326, 326, 327, 327, 356, 356, 354, 354, 354, 354,
	355, 355, 357, 357, 357, 358, 358, 359, 359, 325,
	325, 386, 386, 194, 194, 194, 305, 305, 305, 306,
	306, 376, 376, 376, 376, 376, 376, 377, 377, 375,
	375, 375, 375, 408, 408, 408, 408, 408, 408, 408,
	408, 408, 409, 410, 410, 307, 307, 411, 362, 362,
	515, 515, 515, 516, 516, 403, 403, 412, 412, 412,
	412, 412, 412, 401, 401, 402, 402, 418, 419, 419,
	338, 338, 338, 338, 336, 336, 339, 339, 339, 339,
	337, 337, 413, 413, 413, 413, 328, 328, 414, 414,
	414, 414, 415, 371, 372, 372, 425, 425, 425, 425,
	427, 304, 304, 304, 304, 304, 473, 472, 472, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 441, 441,
	441, 441, 441, 441, 441, 441, 442, 442, 442, 442,
	442, 442, 442, 428, 428, 428, 428, 428, 432, 432,
	432, 431, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 433, 433, 438, 438, 439, 439, 439, 434,
	435, 440, 440, 440, 440, 561, 561, 444, 444, 436,
	436, 436, 436, 436, 436, 436, 436, 436, 430, 430,
	430, 437, 437, 437, 347, 347, 347, 347, 347, 347,
	347, 347, 347, 347, 347, 347, 347, 346, 346, 348,
	348, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 380, 380,
	380, 380, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 491, 491, 491,
	491, 491, 491, 491, 491, 382, 382, 494, 494, 495,
	495, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	502, 502, 503, 503, 505, 505, 506, 506, 507, 508,
	508, 508, 509, 510, 510, 504, 504, 511, 511, 511,
	511, 512, 512, 513, 513, 513, 513, 513, 514, 514,
	514, 514, 514, 392, 392, 393, 393, 399, 399, 399,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 229, 229, 229, 229,
	229, 317, 317, 315, 315, 315, 318, 318, 316, 316,
	314, 314, 313, 313, 389, 389, 387, 387, 391, 391,
	340, 340, 443, 443, 443, 443, 443, 443, 443, 443,
	341, 341, 341, 349, 342, 342, 343, 343, 343, 343,
	343, 383, 384, 344, 344, 344, 385, 385, 394, 398,
	398, 397, 396, 396, 395, 395, 373, 373, 374, 374,
	324, 324, 562, 562, 320, 320, 416, 416, 416, 416,
	270, 270, 309, 309, 269, 269, 261, 261, 262, 262,
	262, 262, 302, 302, 400, 400, 445, 445, 446, 446,
	447, 447, 448, 448, 449, 450, 451, 388, 388, 248,
	247, 235, 236, 246, 245, 244, 234, 237, 241, 242,
	243, 239, 240, 254, 253, 252, 259, 250, 251, 421,
	233, 263, 263, 264, 264, 264, 265, 265, 265, 265,
	230, 230, 231, 231, 255, 255, 256, 257, 257, 249,
	249, 249, 221, 221, 221, 222, 222, 223, 223, 459,
	459, 456, 456, 456, 457, 457, 457, 458, 458, 458,
	458, 455, 455, 455, 455, 455, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 465, 465, 466, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 467, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 5, 2, 8, 6, 8, 7, 2, 0,
	1, 2, 5, 0, 1, 3, 3, 1, 1, 3,
	12, 3, 1, 0, 1, 1, 2, 3, 3, 0,
	5, 7, 0, 5, 6, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 2, 0, 1, 2, 3, 1, 1, 2,
	1, 2, 1, 2, 2, 3, 3, 3, 3, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 6, 6, 6, 6, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 3, 3, 4,
	3, 4, 7, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 2, 0, 1, 0,
	1, 0, 3, 3, 3, 3, 3, 6, 4, 4,
	4, 3, 5, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 1, 2, 1, 2, 1, 2, 7, 3,
	2, 0, 1, 3, 3, 1, 0, 1, 2, 2,
	1, 6, 5, 1, 2, 1, 3, 2, 0, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 1, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	2, 6, 4, 7, 7, 2, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 2, 3, 3,
	1, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	2, 1, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 4, 3,
	4, 3, 3, 4, 4, 5, 0, 1, 1, 3,
	2, 4, 3, 3, 5, 3, 4, 3, 5, 3,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 3, 1, 1, 1, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 3,
	4, 10, 10, 3, 5, 5, 5, 3, 5, 2,
	0, 1, 1, 1, 1, 3, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 3, 6, 6, 3,
	11, 14, 1, 2, 3, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 1, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	9, 9, 3, 1, 3, 7, 1, 3, 11, 3,
	2, 0, 3, 1, 2, 2, 3, 2, 6, 2,
	1, 1, 2, 8, 4, 2, 5, 5, 5, 2,
	1, 3, 11, 12, 8, 5, 3, 1, 5, 9,
	7, 11, 3, 3, 0, 2, 4, 3, 3, 1,
	5, 1, 3, 1, 2, 0, 1, 2, 2, 0,
	1, 3, 3, 2, 2, 1, 1, 1, 4, 0,
	6, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 4, 2, 2, 2, 4, 7, 3, 4,
	6, 3, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 3, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 2, 3, 2, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 8, 5, 3, 4,
	3, 0, 2, 2, 0, 10, 3, 2, 0, 1,
	3, 1, 1, 3, 3, 5, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 2, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 7, 1, 7, 5, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 529, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 97, 78, 148, 123, 131,
	186, 341, 377, 388, 369, 358, -123, -124, 405, -44,
	-56, -117, -116, 71, 124, 364, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 99,
	-498, -78, -81, -109, -549, 136, 155, 204, -99, -100,
	330, -104, -105, 371, -107, -108, 373, 156, -51, -50,
	150, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 409, -153, 463, 47,
	423, 80, 140, 381, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 370, -193, -191, 526, 477, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 496, 504, -196, -194, -195, -203,
	397, 485, 439, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 161, 213, 294, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 62, 66, 71, 72, 77, 78, 79, 80,
	81, 82, 83, 89, 86, 87, 88, 91, 93, 94,
	95, 96, 97, 98, 100, 101, 102, 104, 105, 113,
	114, 115, 116, 118, 123, 124, 127, 122, 126, 129,
	130, 131, 134, 135, 136, 138, 139, 141, 142, 143,
	145, 146, 148, 149, 150, 153, 151, 446, 152, 154,
	155, 156, 157, 167, 168, 169, 174, 176, 180, 181,
	184, 185, 187, 191, 193, 194, 195, 196, 197, 203,
	204, 206, 207, 208, 209, 214, 215, 219, 216, 225,
	226, 230, 231, 232, 234, 238, 239, 240, 241, 242,
	243, 245, 247, 246, 249, 252, 253, 256, 257, 258,
	261, 262, 263, 264, 266, 267, 270, 268, 271, 269,
	273, 274, 275, 272, 278, 276, 280, 281, 282, 292,
	290, 286, 287, 283, 288, 284, 285, 289, 296, 297,
	300, 201, 302, 303, 306, 324, 310, 311, 312, 315,
	316, 319, 322, 323, 325, 326, 327, 328, 329, 330,
	331, 332, 334, 335, 339, 341, 342, 344, 346, 347,
	348, 349, 350, 351, 352, 355, 354, 356, 358, 364,
	369, 366, 367, 368, 370, 371, 372, 373, 375, 376,
	377, 379, 380, 381, 382, 384, 386, 387, 390, 391,
	406, 407, 425, 388, 389, 392, 393, 394, 395, 396,
	400, 398, 399, 401, 402, 403, 405, 408, 409, 411,
	412, 413, 414, 415, 416, 419, 421, 422, 423, 424,
	426, 429, 430, 431, 432, 427, 438, 435, 436, 440,
	441, 442, 443, 444, 445, 447, 449, 457, 458, 460,
	463, 464, 465, 455, 467, 468, 471, 472, 473, 476,
	474, 475, 477, 479, 482, 483, 484, 490, 489, 491,
	497, 498, 500, 501, 502, 35, 48, 49, 52, 54,
	56, 67, 68, 69, 73, 119, 120, 147, 158, 159,
	170, 182, 183, 188, 190, 198, 199, 200, 220, 221,
	223, 228, 250, 299, 301, 317, 321, 336, 337, 338,
	340, 353, 383, 417, 428, 433, 450, 451, 452, 453,
	459, 461, 485, 486, 487, 492, 499, -268, 2, -250,
	308, -243, 2, -221, -221, 341, 27, 2, 27, 335,
	399, 441, 443, 2, -524, -303, 2, 27, -224, -221,
	99, 186, 397, -243, 2, -524, -303, 24, 2, -221,
	2, -225, 2, 388, -221, 267, 2, 529, 91, 258,
	72, 383, 402, -126, 458, -125, 450, 392, -127, -454,
	2, 278, -221, 529, 529, 529, 27, -233, -221, 439,
	213, 115, 436, 529, 2, 439, 327, 489, 398, 115,
	350, 213, 465, 392, -533, 267, 379, 189, 478, -522,
	2, -517, 4, -468, -464, -262, -261, 439, 444, 115,
	-257, -249, 519, -256, 529, 529, 529, 2, 231, 232,
	349, 348, 402, 403, 529, 529, 529, 390, 2, 26,
	64, 90, 95, 121, 157, 177, 180, 313, -546, 324,
	347, 401, 438, 447, 460, -532, 424, 66, 392, -531,
	-533, 267, 465, 134, -350, 115, 258, 185, 472, 443,
	441, 470, 127, 219, 475, 474, 529, 529, 26, 64,
	75, 95, 134, 157, 177, 180, -548, 324, 347, 386,
	401, 438, 447, 460, 2, 489, 267, 398, 439, 213,
	115, 465, 392, -533, 390, 391, 345, -90, 2, 526,
	31, 30, 405, -185, 439, 224, 2, -221, 529, 529,
	2, 231, 232, 390, 391, 529, 529, 178, -517, 2,
	529, 529, 2, 231, 232, 390, 391, 224, 2, 66,
	394, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 2, -160, 402, 424, 195, 45, 44, 72, 27,
	346, 77, 328, 116, 142, 187, 213, 214, 239, 90,
	91, -352, 43, 232, 231, 391, -538, 390, -404, 440,
	393, 399, 435, 243, 388, 458, 99, 479, 380, 502,
	350, 351, 151, 4, 115, 278, 404, 450, 258, 387,
	331, 82, 529, -555, 2, 439, -557, 2, 458, 458,
	2, -557, 2, -557, 2, -557, 2, -558, 458, 499,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, -191, -193, -192,
	529, 529, 529, 529, 529, 529, 529, -160, 402, 2,
	72, 27, -296, -298, 469, 222, 144, 314, -190, -192,
	2, -497, -452, 2, -378, -471, -380, 517, 518, 510,
	437, 65, 293, 503, -392, 121, 470, 308, -470, -381,
	-394, 147, 383, -318, 8, 9, 5, 6, 7, -230,
	-382, -388, 462, 160, 298, -265, 530, 10, 526, -494,
	-192, -393, 36, 190, 63, -456, -264, -231, -428, 223,
	-263, -249, -491, -492, 4, -464, -465, -457, -431, -439,
	-435, -436, -442, -221, -467, 75, 107, 108, 106, 111,
	110, 260, 259, 112, 109, 404, 478, 64, 35, 198,
	199, 228, 299, 200, 73, -493, 135, -466, 220, 221,
	417, 49, 353, 170, 120, 119, 301, 54, 52, 486,
	-440, 117, 450, 451, 452, 453, 182, 183, 56, 158,
	159, 321, 338, 433, 459, 461, 188, 250, 103, 179,
	218, 202, 227, 229, 233, 251, 254, 279, 291, 295,
	318, 320, 378, 410, -561, 487, 428, 67, 68, -499,
	354, -500, -243, -499, 529, 529, 531, 529, -290, -291,
	-292, 2, 27, 132, 526, 2, -408, 2, -409, -413,
	-192, 244, -412, 526, -410, 524, -250, 309, -495, 384,
	-491, -492, -230, -249, -264, 4, -464, -466, 528, -293,
	526, 115, 439, 76, 213, -345, 526, -221, 27, 308,
	454, 531, -390, 526, 308, 178, 311, -221, 489, 2,
	2, 406, 2, 526, -126, 69, 458, 42, 402, -365,
	2, -366, -218, -219, -220, -418, 230, 344, 352, 505,
	502, -452, -540, 178, 509, 454, -452, -319, 528, 2,
	2, 2, 2, 2, -413, 198, -250, 2, -247, -455,
	4, -464, -468, -465, -469, -467, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 90, 99, 106, 107, 109, 108, 110, 111,
	112, 121, 125, 128, 132, 133, 137, 140, 144, 160,
	162, 175, 177, 178, 186, 189, 192, 205, 217, 222,
	224, 244, 248, 255, 259, 260, 293, 298, 304, 308,
	309, 313, 314, 333, 343, 357, 374, 397, 404, 420,
	434, 439, 448, 454, 456, 462, 469, 470, 478, 480,
	488, 493, 494, 495, 496, -470, 75, 2, -413, 198,
	2, -252, 198, -413, -255, 2, -234, -221, 2, -246,
	-455, 2, -269, 198, -250, -251, -255, -253, 2, -255,
	-259, 2, -221, -462, 198, 2, -459, 10, -458, 5,
	4, -464, -468, -465, 489, 224, 454, 531, -309, -261,
	-262, -451, 8, -302, -221, 528, -378, 2, -115, -101,
	2, 175, -378, 198, 2, -115, 198, 2, -378, 198,
	2, -115, 198, 2, -535, 2, -462, 2, 2, 460,
	2, 95, 198, -221, 439, 114, 2, 368, -547, 386,
	464, 2, 2, 2, 2, 2, 2, 439, -239, 2,
	-221, 175, -259, 198, 2, 398, -556, 354, -462, 198,
	2, 489, -253, 2, -253, 213, 226, -234, 198, 2,
	443, 441, 443, 441, 178, 2, 224, 2, 224, 2,
	-414, 2, -415, -409, -250, 524, 2, 2, 2, 2,
	2, 198, -221, 439, 114, 2, 242, 2, 2, 2,
	2, 2, 2, 2, -311, 198, 2, -250, 489, -311,
	198, 2, -311, 198, 2, -351, 2, 85, -234, 198,
	2, -258, 198, 2, -253, -260, 198, 2, -259, -463,
	198, 2, -462, -378, 2, -115, 2, -422, 2, -421,
	-458, 485, -90, 526, -90, 526, 402, 526, -462, -250,
	-250, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-112, -111, -462, 526, 178, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -185, 175, 2, 115, 439, -160,
	2, 175, 480, 2, 8, 2, 205, -462, 393, 351,
	167, 2, 406, 2, 407, 72, -352, 502, 72, 178,
	2, 178, 2, -335, 2, 496, 2, -521, 2, 308,
	178, 2, 178, 2, 178, 2, 178, 2, 178, 2,
	348, 403, 232, 2, -115, 493, -101, -378, 493, 2,
	-539, 175, 391, -378, 2, 457, 241, 152, 178, -335,
	2, 178, 2, 178, 2, 5, 2, 349, 425, 2,
	230, 344, 425, 2, -250, -550, 2, 439, 489, 398,
	2, 2, 86, 87, 178, 2, 178, 2, 178, 502,
	2, -328, -413, -364, -365, -364, 454, -296, -298, -160,
	406, 2, -197, -326, -199, 175, -354, -355, -200, 255,
	162, 304, -201, -334, 27, 132, -334, -334, 58, 527,
	527, 11, 12, 74, 40, 517, 518, 519, 520, 173,
	521, 522, 515, 516, 514, 507, 508, 512, 236, 237,
	92, 511, 509, 84, 265, 385, 163, 164, 165, 166,
	365, 211, 33, 212, 14, 15, 16, 32, 313, 254,
	503, 202, 410, 510, 17, 18, 19, 227, 229, 295,
	48, 205, -229, -271, -378, -378, -378, -378, -378, -378,
	-378, 320, 526, -324, -373, 524, -192, 526, 526, 526,
	-451, -192, -378, -392, 527, -316, 526, -192, -392, -387,
	526, 383, 524, 526, -395, -378, 5, 5, 5, 526,
	528, -502, 497, 175, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 340,
	-433, 526, -432, 526, -432, -432, 490, -430, 526, 504,
	498, 526, -430, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 490, 531, -499, -293,
	526, -320, -416, -378, 519, -320, -320, 308, -313, -378,
	103, -338, 233, 279, 179, 251, 378, 218, -375, 530,
	-375, -403, 504, -192, -410, -249, -192, -412, 526, -408,
	-403, -91, -451, -75, -88, -96, -115, -128, -164, -165,
	519, -250, 526, 178, 526, 528, -455, 178, -302, -234,
	-250, -263, -264, -269, 131, -313, -517, 465, -302, -224,
	37, -389, -425, -426, -473, 530, -472, -428, -438, -434,
	-437, 336, 337, -457, 52, 486, -440, 223, 4, -464,
	-466, 220, 221, 417, 49, 353, 170, 120, 119, 301,
	54, 450, 451, 452, 453, 182, 183, 56, 487, 428,
	67, 68, -517, 465, -302, 175, -351, -454, -313, 37,
	-365, 2, 121, -459, 42, -559, 531, 253, -273, 264,
	292, 194, 309, 500, 302, -461, 5, 4, -388, -400,
	121, 258, 223, -445, -447, 8, -446, 9, -448, 517,
	518, -453, -452, 105, 528, -455, -208, 366, 405, -207,
	23, 28, 136, 483, 153, -283, 215, 323, 327, 147,
	421, 473, -528, -529, 389, 445, 446, 88, 302, 405,
	366, 147, -331, -333, 37, 113, 282, 322, 59, 208,
	269, 270, 423, 492, 147, 405, 366, 323, -529, 96,
	366, -529, -210, 421, 473, -528, -529, 389, 366, -209,
	-283, 147, 530, 23, 366, 405, 323, -543, -544, 136,
	28, 366, 323, -525, -496, 496, 147, -413, 198, -536,
	-111, 245, 5, 10, -111, -309, 531, 531, -455, 519,
	391, 390, 147, 147, 147, 147, 175, 2, 2, 293,
	2, 2, 2, 180, -531, -548, 2, 2, -250, 198,
	-295, 308, -520, -310, 439, -250, 293, -252, 198, 2,
	-255, 489, -525, 293, -254, 198, -250, 37, 526, 2,
	-351, 2, 213, -496, 293, -414, -266, -250, -409, -266,
	405, -243, 37, -375, -375, 147, 2, 2, 2, -221,
	-211, 531, 62, 372, 147, -311, 198, -211, 147, -211,
	147, -270, 198, -269, -211, 147, -211, 531, 147, -211,
	531, 147, 531, 147, 527, 531, -422, -422, -462, -173,
	496, 178, 99, 526, 526, -185, -419, 531, -418, -463,
	-112, -462, -462, -520, -234, 2, -250, 2, 439, 234,
	-462, -173, 205, -462, -462, -462, -454, 27, 407, 2,
	348, 403, 87, 407, 2, -250, 439, 115, 213, 78,
	-523, 175, -518, 379, -517, -250, 115, -250, 115, -250,
	115, -250, -250, 2, 2, 2, 2, 83, 83, 2,
	44, -539, 175, 2, 457, 2, 457, 2, -221, -221,
	-221, 424, 253, -250, 175, 439, 213, 439, 213, 115,
	439, -211, 531, -225, -197, -326, -454, -327, -326, -198,
	-197, -200, 175, 352, 474, 282, 408, 238, -355, -354,
	27, -378, -359, 169, 281, -378, -357, -380, 517, 518,
	-446, -448, -312, 302, -191, -191, -191, -299, -405, -378,
	343, 213, -427, -425, -425, -248, -455, 450, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, 254, 202, 410, 48, 205, -378, 454,
	-378, -378, -378, -378, 276, 293, 298, 462, 160, 471,
	132, 302, -562, 434, 39, -385, -192, -317, 526, -399,
	34, 420, 27, -392, 526, 2, -373, -378, -374, -314,
	-313, -313, 527, 488, 27, 132, 519, 2, 527, 531,
	37, 527, -378, -314, -391, -387, -313, -398, -397, 493,
	-346, -347, 501, 272, 118, 196, 271, -348, 396, -449,
	8, -455, 519, -503, 168, 189, 526, 527, 2, 527,
	2, 527, -378, 2, 527, -378, 2, 527, -378, 2,
	527, -378, 2, 527, 2, -378, -378, -378, -378, -378,
	-378, -378, -313, 8, -449, -449, 450, 450, -449, -449,
	-449, -441, 336, 256, 337, 184, 275, 273, 274, 183,
	-441, -340, 2, -443, -313, 4, 501, 272, 118, 196,
	271, 396, 5, -340, 2, -341, 2, -378, -313, -342,
	-379, -380, 517, 518, 510, -392, -343, 2, -378, -314,
	-378, 55, 248, 456, -344, -378, 178, -313, -313, 2,
	-313, 2, -500, 37, -313, -305, 531, 178, 37, 4,
	-305, -305, 526, 527, 531, -339, 193, 268, 263, -339,
	-408, -338, 233, -336, 318, -336, -336, -403, -235, 524,
	532, -455, -403, -402, -401, 37, -243, 315, -403, -403,
	528, 527, -402, 525, -515, 526, 529, 529, 529, 529,
	529, -250, 526, -313, -455, 528, 426, 527, 227, 227,
	227, 227, 384, 527, 454, -519, -258, 496, -90, 310,
	527, 531, -304, 36, 524, 528, -449, 2, 2, -444,
	490, 526, 526, -347, 526, 178, -519, -303, -254, -540,
	527, 458, -366, -272, 352, 419, 367, 400, 436, 8,
	9, 8, 9, 531, -455, 531, -541, 90, 454, 76,
	392, -369, 198, 76, -474, -237, 90, -475, -221, 70,
	470, 343, 177, 145, -541, 90, 343, -541, 90, 90,
	405, 424, 454, 58, -413, 40, 40, 27, -115, 249,
	178, 502, 439, 213, 392, 454, -413, -333, -425, 113,
	269, 270, 58, -450, -445, 517, 518, -450, 58, -450,
	-450, -450, 496, -252, -413, 392, 454, 454, 454, 454,
	531, 40, 40, 27, -115, 249, 178, 454, -269, -235,
	484, 41, 484, 454, 41, 392, 454, 531, 41, 41,
	454, 454, -526, -226, 102, 288, 262, 289, 94, 285,
	93, 284, 100, 286, 101, 287, 491, 296, 61, 283,
	-227, -228, 329, 482, -462, 405, 366, 147, 205, -419,
	205, -419, -261, -221, 528, -115, -378, -378, -115, -378,
	-115, 44, 147, 2, -556, 242, 526, -276, 293, 178,
	-302, -420, 224, 531, -310, 147, -332, -331, 293, -254,
	198, 2, 147, -293, 293, 141, 526, 350, 2, -236,
	198, -222, -221, -351, -214, 442, 147, -330, 480, -360,
	-115, 526, 121, 37, -360, -321, -322, -417, -323, -237,
	526, -243, -221, 2, -250, -311, -211, 147, -311, -311,
	-211, 531, 147, -234, -253, -258, -259, -260, -462, -463,
	-90, -421, 527, 527, 527, -172, 312, -171, -221, 5,
	-185, 480, -275, -370, -369, -478, -479, -474, 254, 213,
	470, 226, 161, -294, -238, -237, 114, -179, 496, -111,
	527, -419, 205, -173, -173, -419, -419, -250, 175, -462,
	-173, -173, -173, 2, 2, -335, -250, -234, -269, -250,
	-302, -302, -335, -234, -335, -234, -335, -234, -115, -378,
	2, 402, 175, 175, 528, -335, 350, 115, 439, 327,
	213, -250, -269, -250, -269, -234, -250, -413, -327, -198,
	309, 238, 408, -357, -358, -380, 383, 384, -358, 383,
	384, 8, 9, 8, 9, -202, 412, 297, -311, 531,
	-205, 38, 128, 238, -250, 502, 143, -378, -378, 454,
	-562, 434, -385, 143, -378, 276, 298, 462, 160, 471,
	132, 302, 178, 526, -379, -379, 527, -315, -378, -378,
	525, 534, 527, -298, 531, -296, -378, -313, -313, 527,
	528, -313, -302, 525, 525, 531, 527, -396, -397, 137,
	-378, 454, 454, 454, 454, 526, 527, 528, -508, 319,
	526, 526, -378, 527, 527, 527, 527, 37, 531, 531,
	531, 527, 531, 531, 531, 527, 527, 527, 531, 527,
	502, 502, 527, 527, 527, 527, 531, 527, 531, 527,
	178, 527, 527, -349, 333, 527, 11, 12, 517, 518,
	519, 520, 173, 521, 522, 515, 516, 514, 507, 508,
	509, 84, 265, 385, 14, 15, 16, 227, 205, -379,
	-379, -379, 527, -383, -384, 178, 175, 37, -344, -344,
	-344, 527, 178, -313, 527, 527, 526, -501, 267, 293,
	527, -372, -371, 494, -416, -306, 2, -408, -245, -455,
	-372, -372, -313, -378, 233, 233, -337, 480, 308, -339,
	-408, -402, -451, -377, -376, 176, 38, 128, 290, 201,
	-402, -243, -293, -402, -402, -455, -403, -403, -401, 527,
	-516, -451, 527, -307, -411, -495, -298, 528, -455, -182,
	-496, -161, 5, 298, -161, -161, -161, -302, 454, 24,
	334, -425, 524, 525, 8, -455, 526, -449, -449, -449,
	-302, 178, 178, -452, -365, 468, 81, 352, 450, -452,
	-207, 366, -237, -237, -250, -259, 293, -369, 198, -213,
	293, -425, -244, -221, 526, 526, 238, 238, 480, -237,
	-244, 238, 198, -237, 198, -244, -244, -527, 352, 303,
	-378, -460, -459, 112, 404, 257, 350, 294, -208, 366,
	405, -115, -115, -115, 526, -540, 480, 131, -250, -269,
	-250, -259, -254, 405, 366, 291, -263, -450, -450, -331,
	405, 366, -259, -252, -460, 392, -234, -209, -115, -115,
	-115, 526, -235, -210, 366, 5, 198, -237, 5, -221,
	-237, -259, -460, -544, 23, -237, 198, -237, -259, -460,
	-226, -462, 298, 476, -525, 392, 454, -413, -111, -176,
	496, -111, -170, 209, 519, -522, -221, 489, -221, -274,
	-277, -275, -237, -188, -189, 498, 496, 147, -267, -250,
	524, -173, -462, -250, -259, 147, -293, 293, -462, 37,
	147, 526, 2, 2, 308, 293, -236, 198, -215, 138,
	-560, 509, -234, -372, -306, -329, -363, 374, 308, -294,
	485, -243, -329, -308, 531, 178, 509, 528, -294, 2,
	-211, -311, -211, -211, -269, -270, -211, -211, -211, -90,
	-90, -173, 531, 526, 509, 509, 526, -462, -462, 527,
	531, -250, -236, 213, 213, -242, -222, 527, 531, 528,
	526, -181, 312, -180, 139, 240, 225, 413, 414, 415,
	416, 130, -179, -112, 178, -52, 496, 439, -173, 530,
	-335, -335, -335, 402, 402, -221, -246, -234, -250, -247,
	-269, 175, 175, 474, -358, 309, 261, -405, -206, 300,
	-250, 530, -378, -378, 143, 143, -378, -379, -379, -378,
	143, 178, 526, -378, -389, 32, 32, 527, 531, -374,
	-378, 527, 488, -298, -298, 527, 519, -455, 530, 527,
	-387, 140, -378, 448, 272, 196, 271, -348, 271, -348,
	-348, -449, 5, -455, 519, -509, -240, 526, -221, 494,
	-297, 314, 527, -427, -425, -378, -378, -378, -378, -378,
	-449, -430, -430, -445, -445, -378, -383, -378, -427, -425,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, 132,
	293, 302, -379, -384, -383, -378, -378, -425, 527, 527,
	527, -313, -90, 526, 267, -325, 189, -378, -419, 531,
	-325, -325, 527, -408, -408, 526, -378, 233, 525, 531,
	533, 509, -293, 528, -401, -402, 525, 527, 531, 527,
	531, -362, 37, 527, -455, -184, -183, 129, 51, -302,
	311, 5, 8, 524, 525, 528, -449, 527, 527, 527,
	-302, -302, -378, 454, 454, 147, 293, 482, -480, -475,
	145, -378, -300, -406, -378, 526, 526, 2, -204, 136,
	405, -542, 2, 480, 147, -211, 147, -211, 500, 526,
	526, 454, 392, 496, -313, -378, -174, 121, -454, -529,
	530, -529, 530, 392, 454, 392, 454, 496, 496, -313,
	454, -429, 46, 25, 293, -253, 454, 454, -211, 147,
	465, 405, -462, 298, -259, -254, 405, 366, -419, -178,
	312, -177, 139, 376, 130, 240, -419, -176, 178, 224,
	2, -254, 2, 527, 527, 531, -481, 37, 306, 306,
	526, -250, -71, 496, -418, -451, -252, 37, 147, -525,
	-115, -254, -423, -424, 5, -250, 147, 308, 293, -216,
	247, -560, -459, -496, -298, -329, -320, 294, 89, 527,
	-372, -322, -306, -378, 2, 527, -211, -211, -171, -172,
	-462, -462, -462, -173, -185, -185, -370, -278, 526, -236,
	-222, 526, -185, -238, 2, -463, 531, 526, 509, 509,
	509, -419, -115, 312, -250, 519, -335, -285, -284, 327,
	302, -285, 383, 383, 309, 169, 243, -205, -235, -378,
	-378, 143, 32, 32, -378, -378, -389, 527, -378, -378,
	-313, 525, 5, -378, 527, 527, 8, -378, 527, 528,
	-510, -221, -378, 527, 58, 527, 527, 531, 531, 527,
	527, 527, 527, 527, 527, 527, -384, 178, 132, 302,
	526, 527, 527, -90, -386, 192, 58, -408, -386, -386,
	-337, -302, -408, -376, -235, 524, -455, -451, -411, 526,
	528, -183, 509, 525, 2, 524, -455, 527, -237, -237,
	-369, 147, -482, 90, -484, 74, 161, 99, 293, 298,
	470, 343, 70, 121, 357, -552, 37, 506, 527, 527,
	531, -205, -300, -302, 293, 431, 121, 293, 121, 114,
	465, 77, -237, -244, -302, -302, -250, -259, 154, 527,
	531, 509, 2, 519, 519, -259, -254, -259, -252, 325,
	154, 527, -235, 5, 5, 147, -232, 74, 5, -237,
	-237, -253, 114, 392, 454, -176, 531, 526, 509, 509,
	-176, -463, -111, -293, -281, 216, -237, -479, -476, -477,
	343, -483, -485, 161, 343, -115, 2, -187, -186, -221,
	5, 526, -276, 312, 525, -332, -115, -254, -293, 527,
	531, -353, 480, -235, -250, 147, -217, 246, -560, -459,
	-214, -356, -354, -361, 526, 308, -115, -298, 509, 527,
	527, 114, 114, 207, 146, -300, 526, 526, -302, 114,
	527, -180, -181, -462, -111, -462, -179, -53, -54, 213,
	90, 332, -247, 439, 213, 526, 526, -205, -378, -378,
	-378, 527, -298, -455, 519, -504, 327, 527, -405, -378,
	-378, -379, 178, 526, -389, 527, -505, 495, -378, -313,
	-505, -505, 527, -451, 2, -462, 524, 2, -369, -244,
	-248, -241, -221, 161, 198, 298, 238, 526, -379, -250,
	526, 2, 29, -553, 125, 217, -368, -554, 98, 432,
	206, -406, -206, 527, 527, 298, 298, -378, -425, 526,
	-211, -211, 527, 527, -378, 454, -454, 97, -452, 2,
	-529, -234, -378, 454, 5, -211, -248, -211, -211, -232,
	465, -259, -254, -177, -178, -462, -111, -176, 37, -282,
	-283, 205, -481, 238, -241, 238, -551, 496, 527, 531,
	509, 509, -274, -188, -72, -73, 455, -418, -293, 37,
	5, 526, -221, 308, 526, -235, -560, -459, -215, -329,
	133, -302, 90, -356, -385, -173, 526, 526, -279, 79,
	91, 122, 197, 181, 214, 424, 429, 27, -279, 527,
	-300, -300, 527, 526, -173, 527, 531, 27, 526, 27,
	526, -250, -269, -313, -313, 527, -298, 58, 531, 527,
	527, -379, -389, 527, -506, -507, -240, 525, 2, -484,
	-241, 293, 480, -378, -223, 526, -378, 37, 217, 126,
	203, -281, 526, -367, 480, 357, -232, -300, 526, 526,
	526, 509, 178, 526, -429, -211, -253, 527, -534, 355,
	-115, -188, 325, 526, -280, 308, 114, 282, -186, -452,
	-452, 527, 37, -73, 9, 37, -115, -300, -250, -300,
	308, -459, -216, 474, 294, 527, -244, -329, -463, -463,
	-367, 527, 527, -463, -54, -302, -302, 527, 527, -511,
	350, 384, 191, -313, -299, 527, 531, 37, 147, 193,
	527, -486, 266, -221, 527, 126, 203, -282, -302, -281,
	193, -250, -530, 480, 527, -287, -286, -284, -289, -288,
	-284, -313, -452, 97, 325, -313, -232, -537, 179, -536,
	5, 10, -280, -250, -301, -407, -237, 80, 114, -281,
	-115, -115, 527, -353, 527, -250, -217, 405, -371, 527,
	527, -368, -367, -189, 496, 527, 527, 527, 527, -512,
	-513, 48, 467, 105, -378, -512, -512, -507, -509, 161,
	496, -487, -490, -489, 308, 411, 179, 326, 527, 431,
	492, -553, 527, 496, -293, -378, -367, 527, 531, 485,
	527, 531, 485, 527, 178, 527, -211, -175, 496, 44,
	526, 527, 531, 342, 127, 136, -282, -551, -367, 526,
	-368, 526, -321, -173, -173, -281, -368, -372, -173, -514,
	145, -513, 339, 174, 383, 339, 174, -514, -514, -241,
	53, -489, 308, -490, 308, 474, 127, -372, 53, -486,
	-281, -286, 205, -288, 178, 325, 150, -536, 29, -302,
	-407, 384, 384, 2, -188, -280, -368, -300, -281, -300,
	-372, -282, -281, 105, 189, 449, 282, 32, 509, -488,
	282, 372, 62, 405, -488, 509, -487, 526, 526, 390,
	527, 2, -280, -281, 527, -282, 527, -189, -282, 383,
	316, -513, -378, 22, 298, 121, -378, -553, -313, -313,
	312, -212, 62, 372, -282, -367, -189, -368, -372, -189,
	527, 527, -172, 526, -189, -368, -372, -281, -372, -282,
	454, -172, -372, -281, -282, 526, 527, -282, -189, -313,
	-189, -372, 527, -372, -282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 476, 477, 479, 480, 481, 483, 484, 486,
	488, 490, 491, 492, 494, 495, 497, 498, 499, 500,
	501, 503, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 567, 0, 1178,
	1180, 1182, 1184, 0, 701, 0, 32, 33, 0, -2,
	278, 280, 282, 0, 308, 310, 311, 313, 315, -2,
	0, 409, 410, 412, 414, -2, -2, 0, 863, 865,
	0, 554, 556, 0, 868, 870, 0, 0, 576, 577,
	0, 1266, -2, 570, 572, 574, 639, 641, 643, 645,
	647, 649, 651, 653, 654, 656, 658, 660, 662, 664,
	666, 668, 670, 671, 673, 675, 677, 679, 681, 683,
	685, 687, 689, 691, 693, 695, -2, 697, -2, -2,
	0, -2, -2, -2, 1196, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 360, 361, 363, 365, 367, 369,
	372, 374, 376, 1324, 416, 418, 420, 422, 424, 426,
	428, 0, -2, 1336, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1297, 1299, 1301, 1303,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 478, 482, 485, 487, 489, 493, 496,
	502, 504, 506, 463, 464, 467, 1957, 1974, 1975, 1976,
	1979, 1980, 1981, 1982, 1983, 1984, 2373, 2454, 2455, 2006,
	2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016,
	2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026,
	2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066,
	2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076,
	2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086,
	2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096,
	2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
	2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116,
	2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126,
	2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136,
	2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146,
	2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216,
	2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226,
	2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236,
	2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246,
	2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266,
	2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276,
	2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316,
	2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 465, 466, 1023,
	0, 530, 528, 1950, 531, 2192, 533, 535, 403, 404,
	405, 406, 407, 408, 0, 547, 540, 546, 548, 550,
	551, 552, 553, 525, 523, 0, 547, 2009, 545, 1176,
	1177, 1161, 1162, 2230, 1203, 0, 193, 566, -2, -2,
	-2, 2339, -2, 598, -2, 605, 2343, 2232, 610, 0,
	612, -2, 615, 1179, 1181, 1183, 699, 700, 1960, 0,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 1073, 1074, 0,
	198, 200, -2, -2, -2, -2, 0, 0, 2270, 2058,
	1918, 1976, 1921, 1916, 279, 281, 283, 284, 0, 0,
	0, 0, 0, 0, 309, 312, 314, -2, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 918, 910,
	911, 1127, 0, 0, 0, 0, 411, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 415, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 340, 468, 469, 0,
	1325, 1325, 0, 0, 0, 0, 253, 244, 864, 866,
	867, 0, 0, 0, 0, 555, 557, 0, 0, 226,
	869, 871, 872, 0, 0, 0, 0, 0, 255, 0,
	0, 571, 573, 575, 640, 642, 644, 646, 648, 650,
	652, 655, 657, 659, 661, 663, 665, 667, 669, 672,
	674, 676, 678, 680, 682, 684, 686, 688, 690, 692,
	694, 696, 706, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 788, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 709, 711, 712, 713, 0, 768, 786,
	787, 796, 698, 0, 1063, 1326, 1205, 1186, 1200, 1205,
	1188, 1189, 1190, 1191, 1192, 1197, 1199, 1193, 1194, 1195,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 362,
	364, 366, 368, 370, 373, 375, 377, -2, 1295, 1296,
	417, 419, 421, 423, 425, 427, 429, 558, 0, 560,
	0, 710, -2, 0, 1330, 1330, 1330, 0, 0, 1296,
	1294, 0, 563, 564, 619, 620, 1561, 0, 0, 0,
	0, 0, 0, 0, 1815, 1647, 0, 621, -2, 1678,
	1680, 2314, 2339, 1814, 1682, 1683, 1684, 1685, 1686, 0,
	1688, 1689, 1690, 1691, 1692, 1693, 0, 1695, 0, 1700,
	1701, 1702, 0, 2321, 1895, 1970, -2, 0, 0, 2327,
	1966, 0, 1781, 1718, -2, -2, 1993, 1972, 1493, 1494,
	1495, 1496, 1497, -2, -2, 2356, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 0, 2302, 2322,
	2323, 2328, 2330, 2324, 2311, 1743, 2070, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1520, 1529, -2, -2, -2, -2, -2, -2, -2, 2315,
	2316, 2333, 2336, 2342, 2347, 2348, 2320, 2329, 2357, 2358,
	2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368,
	2369, 2370, 2371, 2372, 1521, -2, -2, -2, -2, 1313,
	2203, 1316, 1023, 1314, 1298, 1300, 0, 1302, 0, 0,
	0, 1307, 1333, 1331, 0, 1374, 1311, 1312, 1392, 1392,
	1416, 0, 1397, 0, 1416, 1325, 1442, 0, 1403, 2222,
	1719, 1720, 0, 1976, 1971, -2, -2, 2354, 0, 0,
	0, 0, 0, 0, 0, 526, 0, 532, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 1202, 1126, 568,
	569, 0, 593, 0, 597, 2310, -2, 2017, 2241, -2,
	601, 1206, 1210, 1211, 1212, 1213, 0, 0, 0, 0,
	0, 607, 0, 0, 594, 595, 613, 616, 0, 702,
	703, 704, 705, 63, 0, 2322, 1442, 65, 0, 1940,
	2001, 2002, 2003, 2004, 2005, 2355, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427,
	2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
	2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2356, 68, 0, 2322,
	72, 0, 2322, 0, -2, 79, 0, 1946, 82, 0,
	1943, 91, 0, 2322, 0, 1915, -2, 0, 178, 1954,
	0, 889, 1956, -2, 2322, 1071, 256, 257, 1989, 1990,
	1997, 1998, 1999, 2000, 0, 0, 0, 0, 856, 1912,
	1917, 857, 1936, 858, 1922, 0, 285, 286, 287, 288,
	289, 0, 290, 2322, 292, 293, 0, 295, 296, 2322,
	298, 299, 0, 301, 0, 211, 212, 317, 318, 0,
	320, 0, 2322, 0, 0, 0, 326, -2, 341, 0,
	338, 329, 330, 332, 333, 334, 335, 0, 381, 379,
	1951, 0, 884, 2322, 886, 0, 0, 1106, -2, 2322,
	1068, 0, 1112, 1108, 0, -2, 0, 1323, 2322, 1220,
	914, 915, 916, 917, 0, 400, 0, 1233, 0, 1235,
	0, 1256, 1448, 1392, 1392, 0, 342, 343, 344, 345,
	346, 2322, 0, 0, 0, 351, 0, 353, 354, 355,
	356, 357, 358, 359, 167, 2322, 434, 461, 0, 167,
	2322, 437, 167, 2322, 440, 0, 443, 1125, 167, 2322,
	446, 167, 2322, 449, 451, 167, 2322, 455, 456, 458,
	2322, 460, 258, 1172, 1173, 1174, 1175, 0, -2, 519,
	1959, -2, 471, 0, 472, 0, -2, 0, 270, 0,
	0, 873, 874, 875, 876, 877, 880, 881, 882, 883,
	1429, 229, 227, 0, 0, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 0, 0, 578, 0, 0, 707,
	708, 0, 0, 718, 719, 720, 0, 270, 2233, 2200,
	2090, 727, 0, 730, 733, -2, 0, 0, 0, 0,
	737, 0, 742, 743, 744, 0, 746, 862, 748, 0,
	0, 750, 0, 754, 0, 757, 0, 759, 0, 761,
	-2, -2, -2, 772, -2, 0, 775, 777, 0, 779,
	-2, 0, 788, 784, 785, 0, 0, 0, 0, 804,
	805, 0, 810, 0, 813, 814, 815, 0, 817, 818,
	0, 820, 821, 822, 823, 0, 825, 826, -2, -2,
	830, 832, 0, 839, 0, 843, 0, 847, 0, 714,
	715, 167, 1446, 1185, -2, 1187, 0, -2, 0, 559,
	0, 562, 1353, 1281, 1278, 0, 1350, 1351, 1282, 0,
	0, 0, 1289, 0, 1328, 1329, 0, 0, 0, 1268,
	1269, 0, 0, 0, 0, 1820, 1821, 1822, 1823, 1824,
	1825, 1828, 1829, 1826, 1827, 1830, 1831, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1834, 1835, 0, 0, 1837,
	0, 1839, 0, 0, 0, 0, 0, 0, 1626, 1628,
	1903, 0, 0, 1836, 1566, 1567, 1568, 1569, 1570, 1605,
	1606, 0, 0, 1679, 1900, 1899, 1681, 0, 1851, 0,
	1694, -2, 0, 1815, 1846, 0, 0, 1703, 1704, 1705,
	0, 0, 1851, 0, 0, 1894, 1715, 1716, 1558, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	1506, 0, 1508, 0, 1509, 1510, 1517, 1530, 0, 0,
	0, 0, 1534, 0, 0, 0, 0, 0, 0, 0,
	1875, -2, 0, 0, 0, 0, 1522, 0, 1315, 0,
	0, 1378, 1904, 1908, 1909, 1378, 1378, 0, 0, 1852,
	1439, 1439, 0, 0, 1435, 1435, 1435, 1433, 1416, 0,
	1416, 1426, 0, 1416, 1416, 0, -2, 1397, 0, 0,
	1426, 0, 1410, 507, 509, 511, 513, 514, 515, 517,
	1443, 1444, 0, 0, 0, 0, 1977, 0, 0, 0,
	0, 0, 1962, 0, 0, 0, 0, 2279, 537, 549,
	1325, 0, 1854, 1465, 1469, 0, 1471, 1472, 1473, 1474,
	1475, 0, 0, 1466, -2, 1518, 1520, 1541, 1994, 1995,
	1996, 1501, 1502, 1503, 1504, 1505, 1513, 1500, 1500, 1500,
	1511, 1540, 1532, 1540, 1536, 1486, 1487, 1488, 1523, 1524,
	1525, 1526, 0, 2279, 542, 0, 0, 0, 0, 0,
	-2, 603, 608, 609, 0, 0, 1208, 0, 1214, 630,
	631, 632, 1216, 1217, 0, 606, 633, 634, 635, 636,
	637, 638, 0, 1924, 1925, 1926, 1927, 1930, 1931, 0,
	0, 604, 623, 611, 0, 617, 92, 1158, 0, 131,
	0, 1158, 1158, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 116, 127, 104, 105, 0, 0, 0,
	0, 0, 73, 1045, 0, 1048, 0, 0, 0, 0,
	0, 0, 0, 1061, 0, 0, 0, 0, 115, 0,
	0, 110, 94, 0, 0, 0, 117, 129, 0, 158,
	160, 0, 0, 0, 0, 0, 0, 177, 185, 0,
	0, 0, 0, 1069, 0, 1322, 0, 0, 2322, 0,
	1429, 2128, -2, -2, 1429, 855, 0, 0, 1977, 1920,
	0, 0, 0, 0, 0, 0, 0, 319, 321, 0,
	323, 324, 325, 0, 1105, 0, 331, 371, 994, 2322,
	0, 0, 398, 393, 0, 395, 0, 1044, 2322, 1042,
	1955, 0, 1066, 0, 1023, 2322, 1953, 0, 0, 1113,
	1986, 1122, 1126, 1222, 0, 402, 0, 1236, 1238, 0,
	0, 1449, 0, 1451, 1452, 0, 348, 349, 350, 0,
	430, 0, 165, 166, 0, 167, 2322, 435, 0, 438,
	0, 167, 2322, 1910, 444, 0, 447, 0, 0, 453,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 233, 0, 1428, 0,
	1429, 227, 270, 270, 1429, 580, 1429, 582, 0, 0,
	721, 722, 0, 270, 270, 270, 728, 729, 731, 732,
	-2, -2, 840, 734, 735, 807, 0, 0, 0, 806,
	747, 0, 849, 2218, 860, 807, 2058, 807, 2058, 807,
	2058, 758, 760, 763, 799, 771, 776, 0, 0, 781,
	789, -2, 0, 791, 0, 793, 0, 795, 807, 808,
	811, 816, 819, 824, 0, 0, 0, 0, 0, 0,
	0, 1062, 0, 1198, 1353, 1281, 561, 1272, 1352, 1273,
	1280, 1283, 0, 0, 1285, 0, 1287, 0, 1348, 1349,
	1356, 1357, 0, 1367, 1368, 1360, 0, -2, 0, 0,
	1363, 1364, 1291, 0, 1308, 1309, 1310, 1337, 1340, 1136,
	0, 2454, 1562, 1460, 1563, 1564, 1939, 0, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, -2, -2,
	-2, -2, -2, -2, -2, -2, 1589, 1590, 1591, 1592,
	1593, 1594, 1595, 1596, 1597, 1598, 1599, -2, -2, -2,
	1603, 1604, -2, 1838, 1840, 0, 1903, 0, -2, 0,
	-2, -2, -2, -2, 1623, 0, 1625, 1630, 1632, 1634,
	0, 0, 0, 0, 1902, 1644, 1886, 1887, 0, 0,
	1817, 1818, 1819, 1629, 0, 1648, 1901, 1898, 0, 0,
	1850, 1336, 1707, 0, 0, 0, 0, 1714, 1699, 1848,
	0, 1847, 0, 0, 0, 1858, 0, 1893, 1889, 0,
	1937, 1557, 1544, 1545, 1546, 1547, 1548, 1549, 1559, 0,
	1934, 1963, 1969, 1791, 0, 0, 0, 1744, 1745, 1746,
	1747, 1748, 0, 1750, 1751, 0, 1753, 1754, 0, 1756,
	1757, 0, 1759, 1760, 1761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	0, 0, 1763, 0, 1861, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1765, 0, 1767, 1852, 1872, 0,
	0, 1649, 0, 0, 0, 1815, 0, 1770, 1852, 1880,
	0, 0, 0, 0, 0, 1852, 0, 1885, 0, 1777,
	0, 1779, 1317, 0, 0, 1455, 0, 0, 0, 1907,
	1455, 1455, 0, 1373, 0, 0, 1436, 1437, 1438, 0,
	0, 1439, 0, 1430, 1434, 1431, 1432, 1426, 1389, 0,
	0, 1941, 1426, 1395, 1425, 0, 1023, 1415, 1426, 1426,
	0, -2, 1399, 1416, 0, 0, 508, 510, 512, 516,
	518, 0, 0, 1336, -2, 0, -2, 1022, 0, 0,
	0, 0, 527, 529, 0, 0, 450, 0, 521, 0,
	524, 0, 1456, 1459, 0, 0, 1470, 1476, 1477, 0,
	-2, 0, 0, 1542, 0, 0, 0, 0, 192, 0,
	596, 0, 1207, 1215, 0, 627, 0, 629, 0, 1928,
	1932, 1929, 1933, 0, 618, 0, 0, 0, 0, 1157,
	0, 135, 2322, 0, 169, 0, 0, 987, 1947, 0,
	0, 0, 0, 2077, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1046, 1047, 1049,
	1056, 1058, 0, 1052, 1935, 0, 0, 1053, 0, 1055,
	1057, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 107, 0, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 1099, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 0, 0, -2, 0, 0, 0, 0, 203,
	0, 261, 1913, 1923, 0, 878, 879, 291, 294, 297,
	300, 199, 0, 327, 0, 0, 920, 895, 0, 0,
	380, 270, 0, 0, 394, 0, 1040, 1043, 0, 1023,
	2322, 1080, 0, 0, 0, 0, 0, 0, 1111, 0,
	2322, 1942, 1985, 1986, 1224, 1230, 0, 1455, 0, 1254,
	1239, 0, 0, 0, 1254, 1258, 1259, 1261, 1262, 0,
	0, 1450, 0, 352, 462, 167, 432, 0, 167, 167,
	441, 0, 0, 167, 452, 167, 457, 167, 259, 459,
	470, 520, 1325, 1325, 270, 268, 2175, 266, 263, 265,
	0, 0, 0, 921, 923, 924, 925, 926, 0, 1986,
	0, 2117, 1986, 0, 1242, 1244, 0, 223, 0, 230,
	228, 233, 0, 0, 392, 579, 584, 716, 0, 270,
	724, 725, 726, 765, 801, 736, 738, 739, 740, 0,
	861, 859, 749, 807, 752, 807, 755, 807, 774, 778,
	783, 790, 0, 0, 0, 803, 0, 0, 0, 0,
	0, 0, 0, 844, 845, 846, 848, 1447, 1276, 1277,
	1279, 0, 1288, 0, 0, 1362, -2, -2, 1361, 1365,
	1366, -2, -2, -2, -2, 1284, 0, 1293, 1290, 0,
	1347, 1134, 1135, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1645, 0, -2, 1624, 1627, 1631, 1633, 1635,
	0, 0, 0, 0, 0, 0, 1841, 0, 1843, 1646,
	1896, 1899, 1813, 0, 0, 1335, 1336, 1336, 0, 1713,
	0, 1849, 0, 1856, 1857, 0, 1706, 0, 1890, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1717, 0,
	0, 0, 0, 1749, 1752, 1755, 1758, 0, 0, 0,
	0, 1738, 0, 0, 0, 1742, 1512, 1498, 0, 1540,
	1538, 1539, 1533, 1540, 1537, 1490, 0, 1489, 0, 1762,
	0, 1764, 1766, 0, 0, 1768, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	1653, 1654, 1769, 1878, 1879, 0, 0, 0, 0, 0,
	0, 1775, 0, 1884, 1776, 1778, 1325, 0, 1318, 0,
	1375, 1370, 1454, 0, 1905, 1429, 1377, 1379, 1906, 1944,
	1370, 1370, 0, 1853, 0, 0, 1420, 0, 0, 0,
	1422, 1393, 0, 0, 1387, 0, 1383, 1384, 1385, 1386,
	1394, 1023, 1424, 1396, 1400, 1963, 0, 1426, 0, 1411,
	0, 1413, 1445, 0, 1405, 1408, 0, 0, 1978, 271,
	0, 302, 306, 307, 303, 304, 305, 536, 0, 0,
	0, 1855, 0, 1461, 0, 1467, 0, 0, 0, 0,
	541, 0, 0, 592, -2, 625, 626, 628, 0, 624,
	132, 1158, 0, 0, 1139, 1141, 0, 137, 2322, 146,
	0, 961, 0, 1945, 0, 0, 0, 0, 0, 1160,
	0, 0, 2322, 167, 2322, 167, 149, 152, 0, 157,
	154, 155, 182, 183, 184, 0, 0, 952, 93, 1158,
	0, 96, 100, 108, 0, 0, 0, 114, 0, 0,
	0, 1143, 1149, 0, 0, 1050, 1051, 1054, 1060, 74,
	0, 0, 1147, 1153, 80, 0, 1138, 159, 98, 102,
	109, 0, 1155, 95, 0, 181, 0, 0, 0, 173,
	0, 174, 175, 186, 0, 167, 2322, 0, 887, 888,
	1100, 1064, 1065, 0, 1070, 0, 0, 0, 1429, 195,
	0, 1429, 203, 0, 1919, 0, 0, 0, 0, 0,
	0, 919, 1005, 0, 892, 0, 0, 0, 386, 382,
	0, 391, 397, 396, 885, 0, 0, 0, -2, 0,
	0, 1115, 1109, 1110, 0, 0, 0, 2322, 1226, 1230,
	0, 1229, 1323, 1336, 401, 1231, 1254, 0, 0, 0,
	1241, 1237, 1234, 1455, 0, 0, 0, 0, 0, 347,
	431, 167, 436, 439, 1911, 167, 445, 448, 454, 473,
	474, 245, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 930, 0, 1986, 1986, 0, 1949, 0, 0, 0,
	0, 231, 0, 234, 0, 0, 0, 239, 240, 241,
	242, 243, 224, 1429, 0, 581, 0, 0, 723, 0,
	751, 753, 756, 792, 794, 807, 833, 834, 947, 0,
	947, 0, 0, 1286, 0, 1359, 1292, 1341, 1342, 0,
	1136, 0, 1565, 1608, 0, 0, -2, 0, 0, 1612,
	0, 0, 0, -2, 0, 0, 0, 1842, 1844, 0,
	1898, 1708, 0, 0, 0, 1712, 1696, 1697, 0, 1816,
	1859, 1888, 1892, 0, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 0, 1938, 1964, 1968, 1789, 1790, 1794, 1952, 0,
	0, 0, 1721, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 1535, 0, 0, 1860, 1871, 1873, 1650, 1651,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	-2, -2, -2, 1668, 1669, 1670, -2, -2, -2, 0,
	0, 0, 1874, 1876, 1877, 1881, 1882, 0, 1772, 1773,
	1774, 1883, 0, 1325, 1319, 1372, 0, 1453, 1376, 0,
	1372, 1372, 1332, 1418, 0, 0, 1441, 0, 1390, 0,
	1391, 0, 1423, 0, 1398, 1401, 1402, 1412, 0, 1404,
	0, 1407, 0, 1708, -2, 272, 274, 0, 277, 539,
	538, 522, 0, 0, 1463, 0, 0, 1515, 1519, 1543,
	544, 543, 1427, 0, 0, 0, 0, 168, 959, 986,
	0, 0, 0, 1129, 1136, 0, 0, 992, 139, 0,
	0, 0, 147, 0, 0, 144, 0, 151, 156, 0,
	0, 0, 0, 0, 0, 111, 112, 113, 0, 118,
	0, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 1133, 0, 0, 188, 0,
	0, 0, 1103, 1104, 1144, 1150, 0, 0, 203, 201,
	0, 204, 0, 207, 208, 0, 203, 197, 0, 0,
	322, 1023, 328, 941, 993, 0, 995, 0, 893, 0,
	0, 994, 378, 0, 385, 0, 1044, 0, 0, 1067,
	1078, 1023, 0, 1114, 1116, 1124, 0, 0, 0, 1228,
	1230, 0, 1221, 1222, 1355, 1232, 1252, -2, 1251, 0,
	1336, 1260, 1257, 1263, 1264, 0, 433, 442, 267, 0,
	262, 264, 0, 248, 0, 0, 922, 927, 0, 0,
	0, 0, 0, 1243, 1245, 0, 0, 0, 0, 0,
	0, 233, 254, 0, 717, 741, 802, 835, 946, 0,
	0, 837, 0, 0, 1358, 1345, 1346, 1343, 1136, 1610,
	1614, 0, 0, 0, 1616, -2, 0, 1638, -2, -2,
	1845, 1897, 1687, 1336, 1709, 1711, 1698, 1891, 1560, 0,
	1796, 1793, 0, 1780, 0, 1733, 1734, 0, 0, 1737,
	1739, 1740, 1741, 1499, 1492, 1491, 1870, 0, 0, 0,
	0, 1771, 1320, 0, 1785, 0, 0, 1380, 1785, 1785,
	1419, 0, 1421, 1388, 1381, 0, 1964, 1414, 1406, 0,
	0, 275, 0, 1457, 1462, 0, 1468, 1514, 133, 134,
	136, 0, 960, 0, 963, 0, 0, 0, 0, 970,
	971, 0, 0, 0, 0, 0, 980, 0, 1009, 1019,
	0, 1347, 0, 0, 0, 141, 162, 0, 0, 1159,
	0, 0, 167, 167, 0, 0, 1140, 1142, 0, 0,
	0, 0, 121, 0, 0, 1145, 1151, 1148, 1154, 0,
	0, 0, 1156, 179, 180, 0, 167, 0, 172, 167,
	167, 1133, 0, 0, 0, 194, 0, 0, 0, 0,
	196, 260, 203, 0, 949, 0, 1005, 997, 998, 999,
	0, 1004, 1006, 0, 0, 907, 894, 0, 903, 0,
	0, 920, 895, 0, 383, 1041, 1075, 1023, 0, 1107,
	0, 0, 0, 0, 0, 0, 1218, 1230, 0, 1223,
	1224, 1254, 1354, 0, 0, 0, 1240, 1355, 0, 269,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 235, 0, 236, 237, 238, 225, 583, 585, 0,
	0, 591, 945, 0, 0, 0, 0, 1344, 1618, -2,
	-2, 1639, 0, 1965, 1967, 1336, 0, 1782, 1338, 0,
	0, -2, 0, 0, 0, 1321, 1304, 0, 1371, 1369,
	1305, 1306, 1440, 0, 1409, 276, 0, 1464, 138, 0,
	964, 965, 1948, 967, 0, 969, 972, 0, 975, 1988,
	0, 979, 0, 988, 1010, 0, 941, 0, 1015, 1016,
	1017, 1130, 1131, 1021, 0, 140, 142, 161, 1133, 0,
	143, 150, 0, 0, 97, 0, 0, 2049, 124, 122,
	120, 1137, 99, 0, 181, 187, 1132, 176, 189, 167,
	0, 1146, 1152, 205, 0, 206, 209, 0, 0, 895,
	948, 0, 996, 0, 1007, 1008, 897, 0, 896, 0,
	0, 0, 0, 0, 384, 387, 0, 390, 0, 0,
	1117, 0, 1123, 0, 0, 0, 0, 1225, 1226, 399,
	0, 0, 0, 1254, 1265, 247, 0, 0, 928, 931,
	932, 933, 934, 935, 936, 937, 938, 939, 929, 1021,
	0, 0, 985, 0, 252, 232, 0, 587, 0, 589,
	0, 836, 838, 0, 0, 1710, 1800, 0, 0, 1735,
	1736, -2, 0, 1676, 1784, 1786, 0, 1382, 1458, 962,
	966, 0, 0, 0, 1027, 0, 0, 981, 0, 1013,
	1014, 949, 0, 941, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 171, 190, 1133, 202, 219, 0,
	1076, 897, 0, 0, 905, 0, 908, 0, 904, 901,
	902, 941, 0, 388, 389, 0, 1079, 0, 1124, 0,
	0, 1227, 1228, 0, 1247, 1248, 1250, 1255, 0, 0,
	1019, 1021, 895, 0, 586, 0, 0, 841, 842, 0,
	0, 0, 0, 1795, 1339, 1677, 0, 0, 0, 0,
	974, 1032, 0, 0, 0, 1011, 1012, 1009, 0, 990,
	0, 1023, 145, 0, 1021, 0, 953, 0, 0, 956,
	0, 0, 125, 2049, 123, 0, 167, 222, 0, 216,
	214, 215, 890, 0, 0, 1001, 1003, 0, 909, 949,
	907, 1077, 1021, 0, 1019, 0, 1219, 0, 1249, 270,
	270, 941, 1019, 1455, 0, 270, 588, 590, 1792, 1812,
	1801, -2, 2281, 2055, 0, 1812, 1812, 1787, 1788, 0,
	0, 976, 1028, 1029, 0, 1024, 1025, 1026, 1987, 977,
	978, 1455, 1018, 0, 1027, 163, 941, 950, 0, 0,
	951, 0, 0, 128, 0, 130, 191, 210, 0, 0,
	0, 1000, 0, 0, 0, 0, 895, 897, 1019, 0,
	941, 0, 1455, 249, 250, 949, 941, 984, 251, 1797,
	0, 0, 1803, 1804, 1805, 1806, 1807, 1798, 1799, 968,
	0, 1030, 0, 1031, 0, 0, 0, 989, 0, 1032,
	148, 954, 0, 957, 0, 126, 0, 217, 218, 0,
	1002, 898, 0, 900, 897, 906, 941, 0, 949, 0,
	1246, 895, 949, 0, 1809, 1810, 0, 0, 0, 1033,
	0, 1036, 1037, 0, 1034, 0, 1009, 0, 0, 0,
	944, 899, 891, 949, 1021, 895, 1019, 1455, 895, 1808,
	1811, 1802, 973, 1035, 1038, 1039, 1020, 991, 0, 0,
	0, 940, 942, 943, 895, 1019, 1455, 941, 982, 1455,
	949, 0, 220, 0, 1455, 941, 1120, 949, 983, 955,
	0, 0, 1118, 949, 895, 0, 221, 895, 1455, 0,
	1455, 1121, 949, 1119, 958,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 515, 3, 521, 516, 3,
	526, 527, 519, 517, 531, 518, 528, 520, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 534, 3,
	507, 509, 508, 512, 530, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 524, 3, 525, 522, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 532, 514, 533, 510,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 511,
	57850, 513, 57851, 523, 57852, 529, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1213
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1218
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1220
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1223
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1225
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1226
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1238
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1254
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1354
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1371
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1375
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1396
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1400
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1421
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1453
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1457
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1486
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1497
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1525
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1529
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1539
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1550
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1557
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1569
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1576
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1584
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1589
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1604
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1612
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1623
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1633
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1643
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1652
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1663
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1669
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1695
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1700
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1742
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1752
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1767
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1772
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1777
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1791
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1820
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1824
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1857
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1862
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1869
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1971
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1982
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2003
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2012
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2034
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2037
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2041
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{Name: sqlDollar[5].union.unresolvedObjectName(), Concurrently: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2084
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2153
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2161
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2173
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2177
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2305
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = nil
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2322
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 220:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 221:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2434
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2489
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2497
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2544
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2549
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2553
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2559
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2564
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2569
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2574
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2579
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2583
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2599
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2602
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2610
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2632
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2686
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2712
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2733
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2753
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2762
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2772
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2808
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2846
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2865
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2870
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2882
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2884
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2885
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2886
		{
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			return helpWith(sqllex, "CREATE")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2890
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2891
		{
			return unimplemented(sqllex, "create cast")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2892
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2893
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2894
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2895
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2896
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2897
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2898
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2899
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2900
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2902
		{
			return unimplemented(sqllex, "create operator")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			return unimplemented(sqllex, "create publication")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2904
		{
			return unimplemented(sqllex, "create rule")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2905
		{
			return unimplemented(sqllex, "create server")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2907
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2908
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2911
		{
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2912
		{
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
		}
	case 339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2916
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2920
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "drop server")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2946
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2947
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2948
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2951
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2963
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3021
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3032
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3060
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3095
		{

			sqlVAL.union.val = nil
		}
	case 399:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			return helpWith(sqllex, "DELETE")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3122
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3123
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3147
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3148
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3150
		{
			return helpWith(sqllex, "DROP")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3154
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3155
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3215
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3359
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3415
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3424
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3448
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3456
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DELETE")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "INSERT")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "DELETE")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "INSERT")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3502
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3506
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3525
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3533
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3566
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3574
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "GRANT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3677
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3714
		{
			return helpWith(sqllex, "RESET")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "RESET")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3738
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3741
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "USE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3761
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3767
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "USE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3820
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3832
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3836
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3937
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3977
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3982
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{
			return unimplemented(sqllex, "set from current")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3988
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4001
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4050
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = tree.Low
		}
	case 631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.Normal
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = tree.High
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4101
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4105
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4109
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4137
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4142
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4146
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4147
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4152
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4153
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4172
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4176
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.str = "client_encoding"
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.str = "timezone"
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4236
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4251
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4259
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4299
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4308
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4326
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4330
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4333
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4358
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4378
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4381
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4389
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4392
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4399
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4415
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4431
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4464
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = true
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4494
		{
			sqlVAL.union.val = true
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = false
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4556
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4572
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 788:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4596
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4617
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4624
		{
			sqlVAL.union.val = true
		}
	case 797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = false
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4638
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4649
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4672
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = true
		}
	case 807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = false
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4701
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4715
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4722
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4743
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4769
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4773
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4789
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4804
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4812
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4820
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4857
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4880
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4889
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4896
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5036
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5075
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5079
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5084
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 862:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5116
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5130
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5131
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5142
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "RESUME")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5161
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5218
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5297
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5312
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{

			sqlVAL.union.val = nil
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = nil
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5346
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5362
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5378
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5384
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 905:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5394
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5408
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5423
		{
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5424
		{
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5425
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5452
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5464
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5508
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5511
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5514
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5515
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5516
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5521
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5530
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.str = ""
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 950:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5637
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5731
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5745
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5756
		{
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5762
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5855
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5883
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5908
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5932
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5942
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5952
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5973
		{
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5974
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5976
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5977
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6103
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6134
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6143
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6158
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6162
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6167
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6180
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6192
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6205
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6223
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6230
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6238
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = true
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6255
		{

			sqlVAL.union.val = true
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = false
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6270
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6296
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6308
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6318
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6328
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6348
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6352
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6356
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6360
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = nil
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6430
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6431
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6440
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6449
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6451
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6453
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6455
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6457
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6465
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6495
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6513
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6532
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6549
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6566
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6570
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = false
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6591
		{
			sqlVAL.union.val = true
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6595
		{
			sqlVAL.union.val = false
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6601
		{
			sqlVAL.union.val = true
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = false
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6624
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.str = ""
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6659
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6677
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6683
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6711
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6721
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6739
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6753
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6759
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6771
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6777
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6791
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6797
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6814
		{
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6815
		{
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6818
		{
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6819
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6848
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6857
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6878
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6886
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6915
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6926
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6930
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6931
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6969
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6974
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6983
		{
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6985
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7002
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7006
		{
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7047
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7053
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7078
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7118
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.str = ""
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7136
		{
			sqlVAL.str = ""
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.str = ""
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.str = ""
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7161
		{
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7162
		{
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7188
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7210
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7219
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7230
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7285
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7286
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7294
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7299
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7303
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7469
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7514
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7549
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7600
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7612
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7656
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7668
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7672
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7677
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7687
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7693
		{
			sqlVAL.union.val = true
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = false
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7726
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = nil
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7739
		{
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7740
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = true
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7832
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7837
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7866
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7891
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7899
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7954
		{
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7958
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7959
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8009
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8012
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8014
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8051
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8056
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8072
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8084
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8103
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8142
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8152
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8183
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8187
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8198
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8228
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8261
		{
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8263
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = nil
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8272
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8282
		{
			sqlVAL.union.val = true
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = false
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8322
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.str = tree.AstFull
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			sqlVAL.str = tree.AstRight
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.str = tree.AstInner
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8380
		{
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8381
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.str = tree.AstHash
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.str = ""
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8437
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8448
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8517
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8530
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8538
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8539
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8557
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8567
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8587
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8596
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8648
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8649
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8654
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8659
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = types.Geography
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8663
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8670
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8674
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8682
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8708
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8716
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8724
		{
			sqlVAL.union.val = nil
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = types.Int2
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8743
		{
			sqlVAL.union.val = types.Int
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = types.Float4
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = types.Float
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8759
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8767
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8775
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = types.Bool
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8789
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = types.Float
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8808
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8814
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8822
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8826
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8836
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8854
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8862
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = types.String
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = true
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = false
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = types.Date
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8893
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8907
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8924
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8941
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = true
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8952
		{
			sqlVAL.union.val = false
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8953
		{
			sqlVAL.union.val = false
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = types.Interval
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8965
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9016
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9049
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = nil
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9094
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9139
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9154
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9159
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9231
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9303
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9428
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9436
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9472
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9688
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9693
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9735
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9743
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9773
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9784
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9785
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9800
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9809
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9875
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9990
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10005
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10014
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10041
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10046
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10056
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10061
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10070
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10071
		{
			return unimplemented(sqllex, "treat")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10092
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10097
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10156
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.str = ""
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10246
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10343
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = tree.Any
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = tree.Some
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = tree.All
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10369
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = tree.Div
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10373
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = tree.LT
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = tree.GT
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			sqlVAL.union.val = tree.LE
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = tree.GE
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = tree.NE
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = tree.Like
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10456
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10705
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10777
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10817
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10858
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10874
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10883
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10894
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10903
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10911
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10923
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11101
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11121
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.str = ""
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11156
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
