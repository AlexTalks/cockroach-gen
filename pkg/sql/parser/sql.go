// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:66

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistenceType() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) partitionedBackup() tree.PartitionedBackup {
	return u.val.(tree.PartitionedBackup)
}
func (u *sqlSymUnion) partitionedBackups() []tree.PartitionedBackup {
	return u.val.([]tree.PartitionedBackup)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}

//line sql-gen.y:621
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BLOB = lex.BLOB
const BOOL = lex.BOOL
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const BYTEA = lex.BYTEA
const BYTES = lex.BYTES
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONVERSION = lex.CONVERSION
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEALLOCATE = lex.DEALLOCATE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const END = lex.END
const ENUM = lex.ENUM
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INT2VECTOR = lex.INT2VECTOR
const INT2 = lex.INT2
const INT4 = lex.INT4
const INT8 = lex.INT8
const INT64 = lex.INT64
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEXT = lex.NEXT
const NO = lex.NO
const NOCREATEROLE = lex.NOCREATEROLE
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIAL = lex.SERIAL
const SERIAL2 = lex.SERIAL2
const SERIAL4 = lex.SERIAL4
const SERIAL8 = lex.SERIAL8
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BIT",
	"BUCKET_COUNT",
	"BLOB",
	"BOOL",
	"BOOLEAN",
	"BOTH",
	"BUNDLE",
	"BY",
	"BYTEA",
	"BYTES",
	"CACHE",
	"CANCEL",
	"CASCADE",
	"CASE",
	"CAST",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONVERSION",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEALLOCATE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"END",
	"ENUM",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXISTS",
	"EXECUTE",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INT2VECTOR",
	"INT2",
	"INT4",
	"INT8",
	"INT64",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEXT",
	"NO",
	"NOCREATEROLE",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"REF",
	"REFERENCES",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"SAVEPOINT",
	"SCATTER",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIAL",
	"SERIAL2",
	"SERIAL4",
	"SERIAL8",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:10181

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 24,
	-2, 1103,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	185, 930,
	202, 930,
	217, 252,
	301, 252,
	310, 749,
	337, 252,
	346, 749,
	385, 749,
	409, 252,
	433, 749,
	-2, 0,
	-1, 75,
	217, 256,
	-2, 0,
	-1, 76,
	112, 1103,
	191, 1103,
	419, 1103,
	420, 1103,
	-2, 0,
	-1, 88,
	125, 1077,
	141, 1077,
	154, 1077,
	199, 1077,
	229, 1077,
	265, 1077,
	275, 1077,
	414, 1077,
	-2, 1048,
	-1, 120,
	131, 665,
	216, 665,
	304, 645,
	355, 645,
	402, 665,
	-2, 0,
	-1, 121,
	4, 1105,
	21, 1105,
	22, 1105,
	23, 1105,
	24, 1105,
	25, 1105,
	27, 1105,
	33, 1105,
	38, 1105,
	39, 1105,
	40, 1105,
	41, 1105,
	42, 1105,
	43, 1105,
	44, 1105,
	45, 1105,
	46, 1105,
	47, 1105,
	48, 1105,
	49, 1105,
	50, 1105,
	52, 1105,
	53, 1105,
	54, 1105,
	55, 1105,
	56, 1105,
	57, 1105,
	58, 1105,
	61, 1105,
	62, 1105,
	63, 1105,
	64, 1105,
	66, 1105,
	67, 1105,
	71, 1105,
	72, 1105,
	73, 1105,
	74, 1105,
	75, 1105,
	76, 1105,
	78, 1105,
	79, 1105,
	80, 1105,
	81, 1105,
	83, 1105,
	85, 1105,
	86, 1105,
	87, 1105,
	89, 1105,
	91, 1105,
	92, 1105,
	100, 1105,
	101, 1105,
	102, 1105,
	103, 1105,
	104, 1105,
	105, 1105,
	106, 1105,
	107, 1105,
	109, 1105,
	111, 1105,
	112, 1105,
	114, 1105,
	117, 1105,
	118, 1105,
	119, 1105,
	121, 1105,
	123, 1105,
	124, 1105,
	126, 1105,
	127, 1105,
	128, 1105,
	129, 1105,
	130, 1105,
	131, 1105,
	132, 1105,
	133, 1105,
	134, 1105,
	135, 1105,
	136, 1105,
	137, 1105,
	138, 1105,
	140, 1105,
	146, 1105,
	147, 1105,
	148, 1105,
	149, 1105,
	150, 1105,
	151, 1105,
	153, 1105,
	155, 1105,
	159, 1105,
	160, 1105,
	162, 1105,
	163, 1105,
	165, 1105,
	166, 1105,
	168, 1105,
	169, 1105,
	170, 1105,
	171, 1105,
	172, 1105,
	173, 1105,
	174, 1105,
	175, 1105,
	177, 1105,
	178, 1105,
	180, 1105,
	181, 1105,
	182, 1105,
	185, 1105,
	186, 1105,
	187, 1105,
	188, 1105,
	191, 1105,
	192, 1105,
	193, 1105,
	194, 1105,
	195, 1105,
	196, 1105,
	197, 1105,
	198, 1105,
	200, 1105,
	202, 1105,
	204, 1105,
	206, 1105,
	207, 1105,
	208, 1105,
	210, 1105,
	211, 1105,
	214, 1105,
	215, 1105,
	216, 1105,
	217, 1105,
	218, 1105,
	220, 1105,
	221, 1105,
	223, 1105,
	224, 1105,
	226, 1105,
	227, 1105,
	230, 1105,
	231, 1105,
	234, 1105,
	235, 1105,
	236, 1105,
	238, 1105,
	239, 1105,
	240, 1105,
	241, 1105,
	242, 1105,
	243, 1105,
	244, 1105,
	245, 1105,
	246, 1105,
	247, 1105,
	249, 1105,
	250, 1105,
	251, 1105,
	252, 1105,
	254, 1105,
	256, 1105,
	258, 1105,
	260, 1105,
	261, 1105,
	262, 1105,
	263, 1105,
	264, 1105,
	266, 1105,
	267, 1105,
	268, 1105,
	270, 1105,
	271, 1105,
	272, 1105,
	273, 1105,
	276, 1105,
	277, 1105,
	278, 1105,
	280, 1105,
	282, 1105,
	283, 1105,
	284, 1105,
	285, 1105,
	286, 1105,
	287, 1105,
	288, 1105,
	289, 1105,
	290, 1105,
	291, 1105,
	293, 1105,
	294, 1105,
	295, 1105,
	296, 1105,
	297, 1105,
	298, 1105,
	300, 1105,
	302, 1105,
	303, 1105,
	304, 1105,
	305, 1105,
	306, 1105,
	307, 1105,
	308, 1105,
	309, 1105,
	310, 1105,
	311, 1105,
	313, 1105,
	314, 1105,
	315, 1105,
	316, 1105,
	317, 1105,
	319, 1105,
	320, 1105,
	321, 1105,
	322, 1105,
	323, 1105,
	324, 1105,
	325, 1105,
	326, 1105,
	328, 1105,
	330, 1105,
	331, 1105,
	332, 1105,
	333, 1105,
	334, 1105,
	335, 1105,
	337, 1105,
	338, 1105,
	339, 1105,
	340, 1105,
	341, 1105,
	342, 1105,
	343, 1105,
	344, 1105,
	346, 1105,
	347, 1105,
	348, 1105,
	349, 1105,
	350, 1105,
	351, 1105,
	352, 1105,
	353, 1105,
	354, 1105,
	355, 1105,
	357, 1105,
	358, 1105,
	359, 1105,
	360, 1105,
	361, 1105,
	363, 1105,
	364, 1105,
	365, 1105,
	366, 1105,
	367, 1105,
	369, 1105,
	370, 1105,
	371, 1105,
	372, 1105,
	373, 1105,
	374, 1105,
	375, 1105,
	376, 1105,
	377, 1105,
	378, 1105,
	379, 1105,
	380, 1105,
	382, 1105,
	383, 1105,
	384, 1105,
	386, 1105,
	387, 1105,
	388, 1105,
	389, 1105,
	390, 1105,
	391, 1105,
	392, 1105,
	394, 1105,
	395, 1105,
	396, 1105,
	397, 1105,
	398, 1105,
	400, 1105,
	402, 1105,
	403, 1105,
	404, 1105,
	405, 1105,
	406, 1105,
	408, 1105,
	409, 1105,
	410, 1105,
	412, 1105,
	413, 1105,
	416, 1105,
	417, 1105,
	418, 1105,
	419, 1105,
	420, 1105,
	421, 1105,
	423, 1105,
	425, 1105,
	426, 1105,
	427, 1105,
	428, 1105,
	429, 1105,
	430, 1105,
	431, 1105,
	433, 1105,
	434, 1105,
	435, 1105,
	440, 1105,
	441, 1105,
	442, 1105,
	443, 1105,
	444, 1105,
	445, 1105,
	-2, 0,
	-1, 122,
	1, 982,
	206, 982,
	300, 982,
	308, 982,
	448, 982,
	471, 982,
	-2, 0,
	-1, 124,
	1, 982,
	471, 982,
	-2, 0,
	-1, 125,
	1, 982,
	471, 982,
	-2, 0,
	-1, 126,
	1, 982,
	399, 982,
	471, 982,
	-2, 0,
	-1, 150,
	125, 1076,
	141, 1076,
	154, 1076,
	199, 1076,
	229, 1076,
	265, 1076,
	275, 1076,
	414, 1076,
	-2, 1051,
	-1, 183,
	4, 1112,
	5, 1112,
	6, 1112,
	7, 1112,
	8, 1112,
	9, 1112,
	10, 1112,
	21, 1112,
	22, 1112,
	23, 1112,
	24, 1112,
	25, 1112,
	27, 1112,
	33, 1112,
	34, 1112,
	38, 1112,
	39, 1112,
	40, 1112,
	41, 1112,
	42, 1112,
	43, 1112,
	44, 1112,
	45, 1112,
	46, 1112,
	47, 1112,
	48, 1112,
	49, 1112,
	50, 1112,
	52, 1112,
	53, 1112,
	54, 1112,
	55, 1112,
	56, 1112,
	57, 1112,
	58, 1112,
	59, 1112,
	60, 1112,
	61, 1112,
	62, 1112,
	63, 1112,
	64, 1112,
	66, 1112,
	67, 1112,
	69, 1112,
	71, 1112,
	72, 1112,
	73, 1112,
	74, 1112,
	75, 1112,
	76, 1112,
	78, 1112,
	79, 1112,
	80, 1112,
	81, 1112,
	83, 1112,
	85, 1112,
	86, 1112,
	87, 1112,
	89, 1112,
	90, 1112,
	91, 1112,
	92, 1112,
	93, 1112,
	94, 1112,
	95, 1112,
	96, 1112,
	97, 1112,
	98, 1112,
	99, 1112,
	100, 1112,
	101, 1112,
	102, 1112,
	103, 1112,
	104, 1112,
	105, 1112,
	106, 1112,
	107, 1112,
	108, 1112,
	109, 1112,
	111, 1112,
	112, 1112,
	114, 1112,
	117, 1112,
	118, 1112,
	119, 1112,
	121, 1112,
	123, 1112,
	124, 1112,
	126, 1112,
	127, 1112,
	128, 1112,
	129, 1112,
	130, 1112,
	131, 1112,
	132, 1112,
	133, 1112,
	134, 1112,
	135, 1112,
	136, 1112,
	137, 1112,
	138, 1112,
	139, 1112,
	140, 1112,
	146, 1112,
	147, 1112,
	148, 1112,
	149, 1112,
	150, 1112,
	151, 1112,
	153, 1112,
	155, 1112,
	158, 1112,
	159, 1112,
	160, 1112,
	162, 1112,
	163, 1112,
	165, 1112,
	166, 1112,
	168, 1112,
	169, 1112,
	170, 1112,
	171, 1112,
	172, 1112,
	173, 1112,
	174, 1112,
	175, 1112,
	176, 1112,
	177, 1112,
	178, 1112,
	180, 1112,
	181, 1112,
	182, 1112,
	185, 1112,
	186, 1112,
	187, 1112,
	188, 1112,
	190, 1112,
	191, 1112,
	192, 1112,
	193, 1112,
	194, 1112,
	195, 1112,
	196, 1112,
	197, 1112,
	198, 1112,
	200, 1112,
	202, 1112,
	203, 1112,
	204, 1112,
	205, 1112,
	206, 1112,
	207, 1112,
	208, 1112,
	209, 1112,
	210, 1112,
	211, 1112,
	214, 1112,
	215, 1112,
	216, 1112,
	217, 1112,
	218, 1112,
	220, 1112,
	221, 1112,
	223, 1112,
	224, 1112,
	225, 1112,
	226, 1112,
	227, 1112,
	228, 1112,
	230, 1112,
	231, 1112,
	232, 1112,
	233, 1112,
	234, 1112,
	235, 1112,
	236, 1112,
	238, 1112,
	239, 1112,
	240, 1112,
	241, 1112,
	242, 1112,
	243, 1112,
	244, 1112,
	245, 1112,
	246, 1112,
	247, 1112,
	248, 1112,
	249, 1112,
	250, 1112,
	251, 1112,
	252, 1112,
	253, 1112,
	254, 1112,
	255, 1112,
	256, 1112,
	257, 1112,
	258, 1112,
	259, 1112,
	260, 1112,
	261, 1112,
	262, 1112,
	263, 1112,
	264, 1112,
	266, 1112,
	267, 1112,
	268, 1112,
	271, 1112,
	272, 1112,
	273, 1112,
	276, 1112,
	277, 1112,
	278, 1112,
	279, 1112,
	280, 1112,
	281, 1112,
	282, 1112,
	283, 1112,
	284, 1112,
	285, 1112,
	286, 1112,
	287, 1112,
	288, 1112,
	289, 1112,
	290, 1112,
	291, 1112,
	293, 1112,
	294, 1112,
	295, 1112,
	296, 1112,
	297, 1112,
	298, 1112,
	300, 1112,
	302, 1112,
	303, 1112,
	304, 1112,
	305, 1112,
	306, 1112,
	307, 1112,
	308, 1112,
	309, 1112,
	310, 1112,
	311, 1112,
	313, 1112,
	314, 1112,
	315, 1112,
	316, 1112,
	317, 1112,
	319, 1112,
	320, 1112,
	321, 1112,
	322, 1112,
	323, 1112,
	324, 1112,
	325, 1112,
	326, 1112,
	328, 1112,
	329, 1112,
	330, 1112,
	331, 1112,
	332, 1112,
	333, 1112,
	334, 1112,
	335, 1112,
	337, 1112,
	338, 1112,
	339, 1112,
	340, 1112,
	341, 1112,
	342, 1112,
	343, 1112,
	344, 1112,
	346, 1112,
	347, 1112,
	348, 1112,
	349, 1112,
	350, 1112,
	351, 1112,
	352, 1112,
	353, 1112,
	354, 1112,
	355, 1112,
	356, 1112,
	357, 1112,
	358, 1112,
	359, 1112,
	360, 1112,
	361, 1112,
	362, 1112,
	363, 1112,
	364, 1112,
	365, 1112,
	366, 1112,
	367, 1112,
	369, 1112,
	370, 1112,
	371, 1112,
	372, 1112,
	373, 1112,
	374, 1112,
	375, 1112,
	376, 1112,
	377, 1112,
	378, 1112,
	379, 1112,
	380, 1112,
	382, 1112,
	383, 1112,
	384, 1112,
	386, 1112,
	387, 1112,
	388, 1112,
	389, 1112,
	390, 1112,
	391, 1112,
	392, 1112,
	394, 1112,
	395, 1112,
	396, 1112,
	397, 1112,
	398, 1112,
	400, 1112,
	402, 1112,
	403, 1112,
	404, 1112,
	405, 1112,
	406, 1112,
	407, 1112,
	408, 1112,
	409, 1112,
	410, 1112,
	412, 1112,
	413, 1112,
	415, 1112,
	416, 1112,
	417, 1112,
	418, 1112,
	419, 1112,
	420, 1112,
	421, 1112,
	422, 1112,
	423, 1112,
	425, 1112,
	426, 1112,
	427, 1112,
	428, 1112,
	429, 1112,
	430, 1112,
	431, 1112,
	433, 1112,
	434, 1112,
	435, 1112,
	440, 1112,
	441, 1112,
	442, 1112,
	443, 1112,
	444, 1112,
	445, 1112,
	446, 1112,
	452, 1112,
	459, 1112,
	460, 1112,
	461, 1112,
	468, 1112,
	472, 1112,
	-2, 0,
	-1, 566,
	157, 1814,
	399, 1814,
	451, 1814,
	470, 1814,
	-2, 0,
	-1, 567,
	157, 1894,
	399, 1894,
	451, 1894,
	470, 1894,
	-2, 0,
	-1, 568,
	157, 1803,
	399, 1803,
	451, 1803,
	470, 1803,
	-2, 0,
	-1, 570,
	157, 1988,
	399, 1988,
	451, 1988,
	470, 1988,
	-2, 0,
	-1, 572,
	157, 2018,
	399, 2018,
	451, 2018,
	470, 2018,
	-2, 0,
	-1, 579,
	157, 1905,
	399, 1905,
	451, 1905,
	470, 1905,
	-2, 510,
	-1, 601,
	470, 1759,
	473, 1759,
	-2, 718,
	-1, 602,
	470, 1761,
	473, 1761,
	-2, 719,
	-1, 603,
	470, 1760,
	473, 1760,
	-2, 720,
	-1, 604,
	473, 1698,
	-2, 721,
	-1, 647,
	433, 912,
	-2, 750,
	-1, 754,
	304, 646,
	355, 646,
	-2, 0,
	-1, 755,
	304, 645,
	355, 645,
	-2, 593,
	-1, 759,
	1, 675,
	467, 675,
	469, 675,
	471, 675,
	-2, 0,
	-1, 760,
	1, 717,
	154, 717,
	467, 717,
	469, 717,
	471, 717,
	-2, 0,
	-1, 768,
	1, 649,
	467, 649,
	469, 649,
	471, 649,
	-2, 0,
	-1, 771,
	1, 675,
	467, 675,
	469, 675,
	471, 675,
	-2, 0,
	-1, 772,
	1, 677,
	467, 677,
	469, 677,
	471, 677,
	-2, 0,
	-1, 773,
	1, 680,
	467, 680,
	469, 680,
	471, 680,
	-2, 0,
	-1, 778,
	1, 696,
	467, 696,
	469, 696,
	471, 696,
	-2, 0,
	-1, 779,
	1, 698,
	467, 698,
	469, 698,
	471, 698,
	-2, 0,
	-1, 821,
	141, 1114,
	154, 1114,
	229, 1114,
	265, 1114,
	-2, 1055,
	-1, 834,
	141, 1113,
	154, 1113,
	229, 1113,
	265, 1113,
	-2, 1052,
	-1, 858,
	470, 1758,
	-2, 518,
	-1, 886,
	468, 1750,
	-2, 1741,
	-1, 892,
	5, 1254,
	-2, 1792,
	-1, 893,
	5, 1255,
	-2, 1798,
	-1, 894,
	5, 1256,
	-2, 1797,
	-1, 895,
	5, 1257,
	-2, 2015,
	-1, 896,
	5, 1258,
	-2, 1907,
	-1, 897,
	5, 1259,
	-2, 1980,
	-1, 898,
	5, 1260,
	-2, 1982,
	-1, 899,
	5, 1261,
	-2, 1995,
	-1, 900,
	5, 1262,
	-2, 1983,
	-1, 901,
	5, 1263,
	-2, 1984,
	-1, 902,
	5, 1264,
	-2, 1791,
	-1, 903,
	5, 1265,
	-2, 2031,
	-1, 904,
	5, 1266,
	-2, 1868,
	-1, 905,
	5, 1267,
	-2, 1918,
	-1, 906,
	5, 1268,
	-2, 1920,
	-1, 907,
	5, 1269,
	-2, 1872,
	-1, 908,
	5, 1270,
	468, 1768,
	-2, 1759,
	-1, 914,
	468, 1769,
	-2, 1760,
	-1, 916,
	5, 1274,
	-2, 2064,
	-1, 917,
	5, 1275,
	-2, 2065,
	-1, 918,
	5, 1276,
	-2, 1871,
	-1, 919,
	5, 1277,
	-2, 2077,
	-1, 920,
	5, 1278,
	-2, 1873,
	-1, 921,
	5, 1279,
	-2, 1874,
	-1, 922,
	5, 1280,
	-2, 1875,
	-1, 923,
	5, 1281,
	-2, 2046,
	-1, 924,
	5, 1282,
	-2, 2075,
	-1, 925,
	5, 1283,
	-2, 1851,
	-1, 926,
	5, 1284,
	-2, 1852,
	-1, 927,
	5, 1298,
	-2, 2058,
	-1, 929,
	5, 1273,
	-2, 2054,
	-1, 930,
	5, 1273,
	-2, 2053,
	-1, 931,
	5, 1273,
	-2, 2070,
	-1, 932,
	5, 1290,
	-2, 2048,
	-1, 933,
	5, 1291,
	-2, 1793,
	-1, 934,
	5, 1301,
	-2, 2047,
	-1, 935,
	5, 1303,
	-2, 2086,
	-1, 937,
	5, 1314,
	-2, 1825,
	-1, 938,
	5, 1325,
	-2, 2079,
	-1, 939,
	5, 1317,
	-2, 2080,
	-1, 940,
	5, 1325,
	-2, 2081,
	-1, 941,
	5, 1321,
	-2, 2082,
	-1, 942,
	5, 1242,
	-2, 1881,
	-1, 943,
	5, 1243,
	-2, 1882,
	-1, 944,
	470, 1756,
	-2, 1740,
	-1, 945,
	468, 2107,
	-2, 1757,
	-1, 967,
	5, 1309,
	-2, 2006,
	-1, 985,
	5, 1308,
	-2, 2087,
	-1, 995,
	5, 1310,
	434, 1310,
	-2, 2049,
	-1, 996,
	5, 1311,
	434, 1311,
	-2, 2050,
	-1, 1033,
	468, 1768,
	-2, 1759,
	-1, 1061,
	157, 2018,
	399, 2018,
	451, 2018,
	470, 2018,
	-2, 0,
	-1, 1064,
	1, 496,
	471, 496,
	-2, 990,
	-1, 1184,
	319, 1737,
	461, 1737,
	-2, 1736,
	-1, 1196,
	472, 1737,
	-2, 1738,
	-1, 1197,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 1208,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 1248,
	310, 749,
	433, 749,
	-2, 251,
	-1, 1268,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 1271,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 1277,
	269, 1763,
	-2, 0,
	-1, 1343,
	1, 371,
	467, 371,
	469, 371,
	471, 371,
	-2, 1075,
	-1, 1346,
	4, 2085,
	11, 2085,
	12, 2085,
	14, 2085,
	15, 2085,
	16, 2085,
	17, 2085,
	18, 2085,
	19, 2085,
	21, 2085,
	22, 2085,
	23, 2085,
	24, 2085,
	25, 2085,
	27, 2085,
	30, 2085,
	31, 2085,
	33, 2085,
	35, 2085,
	38, 2085,
	39, 2085,
	40, 2085,
	41, 2085,
	42, 2085,
	43, 2085,
	44, 2085,
	45, 2085,
	46, 2085,
	47, 2085,
	48, 2085,
	49, 2085,
	50, 2085,
	52, 2085,
	53, 2085,
	54, 2085,
	55, 2085,
	56, 2085,
	57, 2085,
	58, 2085,
	61, 2085,
	62, 2085,
	63, 2085,
	64, 2085,
	66, 2085,
	67, 2085,
	68, 2085,
	71, 2085,
	72, 2085,
	73, 2085,
	74, 2085,
	75, 2085,
	76, 2085,
	77, 2085,
	78, 2085,
	79, 2085,
	80, 2085,
	81, 2085,
	83, 2085,
	84, 2085,
	85, 2085,
	86, 2085,
	87, 2085,
	89, 2085,
	90, 2085,
	91, 2085,
	92, 2085,
	100, 2085,
	101, 2085,
	102, 2085,
	103, 2085,
	104, 2085,
	105, 2085,
	106, 2085,
	107, 2085,
	109, 2085,
	111, 2085,
	112, 2085,
	114, 2085,
	117, 2085,
	118, 2085,
	119, 2085,
	121, 2085,
	123, 2085,
	124, 2085,
	126, 2085,
	127, 2085,
	128, 2085,
	129, 2085,
	130, 2085,
	131, 2085,
	132, 2085,
	133, 2085,
	134, 2085,
	135, 2085,
	136, 2085,
	137, 2085,
	138, 2085,
	142, 2085,
	143, 2085,
	144, 2085,
	145, 2085,
	146, 2085,
	147, 2085,
	148, 2085,
	149, 2085,
	150, 2085,
	151, 2085,
	152, 2085,
	153, 2085,
	155, 2085,
	158, 2085,
	159, 2085,
	160, 2085,
	162, 2085,
	163, 2085,
	165, 2085,
	166, 2085,
	168, 2085,
	169, 2085,
	170, 2085,
	171, 2085,
	172, 2085,
	173, 2085,
	174, 2085,
	175, 2085,
	176, 2085,
	177, 2085,
	178, 2085,
	179, 2085,
	180, 2085,
	181, 2085,
	182, 2085,
	183, 2085,
	184, 2085,
	186, 2085,
	187, 2085,
	188, 2085,
	190, 2085,
	191, 2085,
	192, 2085,
	193, 2085,
	194, 2085,
	195, 2085,
	196, 2085,
	197, 2085,
	198, 2085,
	200, 2085,
	202, 2085,
	203, 2085,
	204, 2085,
	205, 2085,
	206, 2085,
	207, 2085,
	208, 2085,
	209, 2085,
	210, 2085,
	211, 2085,
	212, 2085,
	213, 2085,
	214, 2085,
	215, 2085,
	216, 2085,
	217, 2085,
	218, 2085,
	220, 2085,
	221, 2085,
	223, 2085,
	224, 2085,
	225, 2085,
	226, 2085,
	227, 2085,
	228, 2085,
	230, 2085,
	231, 2085,
	234, 2085,
	235, 2085,
	236, 2085,
	237, 2085,
	238, 2085,
	239, 2085,
	240, 2085,
	241, 2085,
	242, 2085,
	243, 2085,
	244, 2085,
	245, 2085,
	246, 2085,
	247, 2085,
	248, 2085,
	249, 2085,
	250, 2085,
	251, 2085,
	252, 2085,
	254, 2085,
	257, 2085,
	258, 2085,
	260, 2085,
	261, 2085,
	262, 2085,
	263, 2085,
	264, 2085,
	266, 2085,
	267, 2085,
	268, 2085,
	271, 2085,
	272, 2085,
	273, 2085,
	274, 2085,
	276, 2085,
	277, 2085,
	278, 2085,
	280, 2085,
	282, 2085,
	283, 2085,
	284, 2085,
	285, 2085,
	286, 2085,
	287, 2085,
	288, 2085,
	289, 2085,
	290, 2085,
	291, 2085,
	293, 2085,
	294, 2085,
	295, 2085,
	296, 2085,
	297, 2085,
	298, 2085,
	300, 2085,
	302, 2085,
	303, 2085,
	304, 2085,
	305, 2085,
	306, 2085,
	307, 2085,
	308, 2085,
	309, 2085,
	310, 2085,
	311, 2085,
	313, 2085,
	314, 2085,
	315, 2085,
	316, 2085,
	317, 2085,
	318, 2085,
	319, 2085,
	320, 2085,
	321, 2085,
	322, 2085,
	323, 2085,
	324, 2085,
	325, 2085,
	326, 2085,
	328, 2085,
	329, 2085,
	330, 2085,
	331, 2085,
	332, 2085,
	333, 2085,
	334, 2085,
	335, 2085,
	336, 2085,
	337, 2085,
	338, 2085,
	339, 2085,
	340, 2085,
	341, 2085,
	342, 2085,
	343, 2085,
	344, 2085,
	346, 2085,
	347, 2085,
	348, 2085,
	349, 2085,
	350, 2085,
	351, 2085,
	352, 2085,
	353, 2085,
	354, 2085,
	355, 2085,
	357, 2085,
	358, 2085,
	359, 2085,
	360, 2085,
	361, 2085,
	362, 2085,
	363, 2085,
	364, 2085,
	365, 2085,
	366, 2085,
	367, 2085,
	369, 2085,
	370, 2085,
	371, 2085,
	372, 2085,
	373, 2085,
	374, 2085,
	375, 2085,
	376, 2085,
	377, 2085,
	378, 2085,
	379, 2085,
	380, 2085,
	382, 2085,
	383, 2085,
	384, 2085,
	386, 2085,
	387, 2085,
	388, 2085,
	389, 2085,
	390, 2085,
	391, 2085,
	392, 2085,
	394, 2085,
	395, 2085,
	396, 2085,
	397, 2085,
	398, 2085,
	400, 2085,
	402, 2085,
	403, 2085,
	404, 2085,
	405, 2085,
	406, 2085,
	408, 2085,
	409, 2085,
	410, 2085,
	412, 2085,
	413, 2085,
	416, 2085,
	417, 2085,
	418, 2085,
	419, 2085,
	420, 2085,
	421, 2085,
	423, 2085,
	425, 2085,
	426, 2085,
	427, 2085,
	428, 2085,
	429, 2085,
	430, 2085,
	431, 2085,
	433, 2085,
	434, 2085,
	435, 2085,
	440, 2085,
	441, 2085,
	442, 2085,
	443, 2085,
	444, 2085,
	445, 2085,
	446, 2085,
	447, 2085,
	449, 2085,
	450, 2085,
	451, 2085,
	452, 2085,
	453, 2085,
	454, 2085,
	456, 2085,
	457, 2085,
	458, 2085,
	459, 2085,
	460, 2085,
	461, 2085,
	462, 2085,
	463, 2085,
	464, 2085,
	466, 2085,
	469, 2085,
	470, 2085,
	472, 2085,
	473, 2085,
	-2, 0,
	-1, 1352,
	157, 1988,
	399, 1988,
	451, 1988,
	470, 1988,
	-2, 0,
	-1, 1384,
	304, 646,
	355, 646,
	-2, 0,
	-1, 1408,
	1, 641,
	467, 641,
	469, 641,
	471, 641,
	-2, 0,
	-1, 1409,
	1, 666,
	467, 666,
	469, 666,
	471, 666,
	-2, 0,
	-1, 1410,
	1, 648,
	467, 648,
	469, 648,
	471, 648,
	-2, 0,
	-1, 1412,
	1, 652,
	467, 652,
	469, 652,
	471, 652,
	-2, 0,
	-1, 1439,
	1, 2038,
	467, 2038,
	469, 2038,
	470, 2038,
	471, 2038,
	-2, 694,
	-1, 1440,
	1, 1985,
	467, 1985,
	469, 1985,
	470, 1985,
	471, 1985,
	-2, 695,
	-1, 1455,
	1, 985,
	471, 985,
	-2, 990,
	-1, 1458,
	141, 1113,
	154, 1113,
	229, 1113,
	265, 1113,
	-2, 1056,
	-1, 1552,
	125, 1077,
	141, 1077,
	154, 1077,
	199, 1077,
	229, 1077,
	265, 1077,
	275, 1077,
	414, 1077,
	-2, 1484,
	-1, 1609,
	469, 1632,
	-2, 0,
	-1, 1643,
	125, 1077,
	141, 1077,
	154, 1077,
	199, 1077,
	229, 1077,
	265, 1077,
	275, 1077,
	414, 1077,
	-2, 1192,
	-1, 1702,
	468, 1313,
	-2, 1301,
	-1, 1746,
	1, 498,
	471, 498,
	-2, 990,
	-1, 1955,
	1, 643,
	467, 643,
	469, 643,
	471, 643,
	-2, 0,
	-1, 1956,
	1, 668,
	467, 668,
	469, 668,
	471, 668,
	-2, 0,
	-1, 2028,
	334, 1138,
	335, 1138,
	-2, 1346,
	-1, 2059,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1364,
	-1, 2060,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1365,
	-1, 2061,
	84, 0,
	212, 0,
	213, 0,
	453, 0,
	454, 0,
	-2, 1366,
	-1, 2062,
	84, 0,
	212, 0,
	213, 0,
	453, 0,
	454, 0,
	-2, 1367,
	-1, 2063,
	84, 0,
	212, 0,
	213, 0,
	453, 0,
	454, 0,
	-2, 1368,
	-1, 2064,
	84, 0,
	212, 0,
	213, 0,
	453, 0,
	454, 0,
	-2, 1369,
	-1, 2065,
	84, 0,
	212, 0,
	213, 0,
	453, 0,
	454, 0,
	-2, 1370,
	-1, 2066,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1371,
	-1, 2078,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1383,
	-1, 2079,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1384,
	-1, 2080,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1385,
	-1, 2083,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1390,
	-1, 2089,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1394,
	-1, 2091,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1402,
	-1, 2092,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1403,
	-1, 2093,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1404,
	-1, 2094,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1405,
	-1, 2196,
	5, 1270,
	157, 1643,
	468, 1768,
	-2, 1759,
	-1, 2197,
	157, 1644,
	-2, 2042,
	-1, 2198,
	157, 1645,
	-2, 1904,
	-1, 2199,
	157, 1646,
	-2, 1826,
	-1, 2200,
	157, 1647,
	-2, 1862,
	-1, 2201,
	157, 1648,
	-2, 1902,
	-1, 2202,
	157, 1649,
	-2, 1979,
	-1, 2203,
	157, 1650,
	-2, 1467,
	-1, 2272,
	1, 1193,
	2, 1193,
	90, 1193,
	125, 1193,
	141, 1193,
	154, 1193,
	158, 1193,
	164, 1193,
	167, 1193,
	190, 1193,
	199, 1193,
	209, 1193,
	225, 1193,
	229, 1193,
	248, 1193,
	265, 1193,
	269, 1193,
	275, 1193,
	327, 1193,
	329, 1193,
	414, 1193,
	424, 1193,
	437, 1193,
	438, 1193,
	439, 1193,
	448, 1193,
	467, 1193,
	469, 1193,
	471, 1193,
	473, 1193,
	-2, 1192,
	-1, 2285,
	468, 1742,
	-2, 1754,
	-1, 2305,
	468, 1312,
	-2, 1302,
	-1, 2402,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 2403,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 2556,
	270, 1141,
	-2, 2076,
	-1, 2557,
	270, 1142,
	-2, 1968,
	-1, 2561,
	334, 1709,
	335, 1709,
	-2, 1465,
	-1, 2562,
	334, 1713,
	335, 1713,
	-2, 1466,
	-1, 2563,
	334, 1710,
	335, 1710,
	-2, 1465,
	-1, 2564,
	334, 1714,
	335, 1714,
	-2, 1466,
	-1, 2577,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1392,
	-1, 2578,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1396,
	-1, 2584,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1398,
	-1, 2773,
	206, 990,
	300, 990,
	308, 990,
	448, 990,
	-2, 495,
	-1, 2870,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 2871,
	89, 1101,
	251, 1101,
	289, 1101,
	-2, 911,
	-1, 2960,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1400,
	-1, 2967,
	203, 0,
	205, 0,
	257, 0,
	-2, 1419,
	-1, 3031,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1448,
	-1, 3032,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1449,
	-1, 3033,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1450,
	-1, 3037,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1454,
	-1, 3038,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1455,
	-1, 3039,
	14, 0,
	15, 0,
	16, 0,
	449, 0,
	450, 0,
	451, 0,
	-2, 1456,
	-1, 3083,
	468, 1743,
	-2, 1755,
	-1, 3174,
	470, 2189,
	-2, 1034,
	-1, 3224,
	203, 0,
	205, 0,
	257, 0,
	-2, 1420,
	-1, 3227,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1423,
	-1, 3228,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1425,
	-1, 3393,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1424,
	-1, 3394,
	17, 0,
	18, 0,
	19, 0,
	43, 0,
	176, 0,
	179, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 1426,
	-1, 3404,
	203, 0,
	-2, 1457,
	-1, 3518,
	203, 0,
	-2, 1458,
	-1, 3648,
	43, 0,
	176, 0,
	228, 0,
	362, 0,
	446, 0,
	452, 0,
	-2, 2045,
}

const sqlPrivate = 57344

const sqlLast = 84145

var sqlAct = [...]int{

	914, 3433, 3462, 3753, 3436, 3647, 3658, 3740, 2704, 3539,
	3625, 3616, 2857, 3207, 3469, 3597, 2228, 3329, 3613, 3660,
	3659, 2999, 1034, 3698, 3522, 3422, 2456, 2705, 2262, 3646,
	844, 2337, 3358, 1335, 2046, 2886, 3382, 1200, 3166, 215,
	3478, 215, 215, 1840, 215, 215, 215, 215, 215, 3342,
	3161, 215, 1467, 2879, 2881, 3286, 2790, 1677, 3363, 1219,
	603, 2106, 2853, 859, 3145, 577, 1797, 3103, 2952, 835,
	3104, 3408, 1678, 2489, 1089, 2445, 207, 2428, 215, 1649,
	2491, 2420, 603, 2727, 1181, 1026, 2719, 2431, 2747, 2499,
	2480, 700, 2690, 1884, 2710, 3259, 1887, 2708, 2339, 2488,
	2482, 1331, 2457, 1834, 1833, 2265, 1618, 3054, 3206, 3523,
	2605, 1929, 936, 2570, 2689, 2043, 1560, 2039, 1392, 2264,
	843, 143, 2119, 2150, 4, 1580, 2554, 2498, 2395, 2148,
	2397, 1822, 2267, 1806, 2404, 1189, 1829, 3463, 1907, 910,
	1077, 1782, 1839, 1784, 2246, 1455, 2429, 2139, 2103, 1638,
	1619, 2225, 2753, 2027, 1772, 2010, 1360, 2008, 2855, 1328,
	2450, 32, 1344, 1869, 1266, 87, 2372, 2329, 545, 1202,
	604, 1318, 2142, 531, 2492, 605, 1066, 553, 215, 215,
	1020, 2254, 1628, 1186, 209, 999, 208, 1543, 2120, 2192,
	1468, 150, 2009, 2236, 2011, 1469, 1868, 143, 1017, 561,
	571, 693, 1635, 599, 1359, 1016, 151, 674, 1342, 1893,
	1292, 647, 1216, 1796, 556, 1575, 2032, 2373, 871, 548,
	37, 36, 34, 1022, 25, 997, 1454, 23, 21, 1474,
	749, 766, 1274, 3068, 2601, 3069, 2706, 2896, 839, 3786,
	1909, 1909, 1909, 2245, 608, 1551, 611, 3776, 3775, 3750,
	3730, 2245, 2245, 1845, 3300, 3728, 3684, 3682, 2771, 3300,
	3685, 2245, 834, 3680, 2238, 3677, 608, 2245, 611, 3678,
	3674, 3669, 2895, 3644, 3675, 1845, 839, 1845, 3643, 3642,
	1014, 1074, 1845, 1921, 3639, 711, 3638, 3611, 1921, 3591,
	1921, 3300, 3585, 2300, 1482, 1483, 2245, 1515, 1516, 1517,
	1525, 1526, 1527, 3584, 3579, 3578, 3058, 2245, 3300, 3300,
	1000, 1000, 3572, 1518, 1513, 3566, 1845, 1074, 840, 3300,
	3564, 1485, 1051, 3520, 3300, 3501, 1531, 2300, 3498, 1845,
	3471, 2391, 3300, 3452, 3472, 822, 3451, 1845, 913, 3443,
	1845, 3442, 1937, 1845, 3414, 3300, 1482, 1483, 1845, 3395,
	821, 1484, 3380, 2300, 3371, 3327, 1921, 3318, 2909, 2245,
	1504, 2245, 2245, 1003, 3299, 1004, 1513, 1501, 3300, 848,
	3226, 76, 3182, 1485, 2300, 3176, 2925, 3143, 3078, 2925,
	829, 3144, 3079, 3076, 3061, 2983, 2979, 3077, 2245, 1845,
	2245, 2924, 2916, 2614, 1046, 2925, 2917, 1482, 1483, 2615,
	3592, 2703, 2701, 1484, 1001, 2245, 2245, 2700, 2654, 2633,
	2616, 2245, 2245, 2634, 2245, 2478, 2477, 1513, 2406, 1925,
	1925, 2296, 1921, 3504, 1485, 1507, 1508, 1509, 1510, 1411,
	1237, 183, 3058, 1231, 2313, 1490, 2245, 2299, 2245, 2294,
	2287, 2300, 2244, 2245, 1845, 1924, 2245, 2237, 1921, 1925,
	3319, 1845, 2917, 183, 1484, 1845, 1482, 1483, 2386, 1522,
	2328, 1801, 1532, 1752, 1908, 2909, 1512, 1514, 1047, 2426,
	2569, 185, 1844, 2326, 2604, 1614, 2145, 1215, 3131, 2955,
	2933, 1636, 1832, 1485, 2281, 1394, 1528, 1490, 1529, 2280,
	2279, 2897, 2278, 185, 2277, 1499, 1500, 1005, 1002, 828,
	2662, 2663, 827, 2680, 2681, 2682, 826, 1910, 1910, 1910,
	2898, 1520, 825, 1484, 824, 184, 2534, 3275, 1512, 1514,
	1505, 820, 819, 818, 1029, 177, 817, 2662, 2663, 816,
	912, 815, 814, 178, 813, 812, 215, 184, 1490, 811,
	1530, 810, 2146, 809, 808, 747, 746, 177, 745, 744,
	743, 2183, 742, 2895, 152, 178, 741, 1519, 2662, 2663,
	740, 2680, 2681, 2682, 215, 739, 2677, 738, 737, 1512,
	1514, 215, 1505, 736, 1047, 735, 152, 3222, 2438, 3238,
	2237, 734, 183, 733, 732, 183, 731, 730, 215, 1092,
	215, 215, 215, 1092, 215, 1205, 1205, 1490, 120, 1205,
	1236, 1511, 729, 1230, 728, 727, 1076, 215, 215, 726,
	1081, 725, 724, 723, 2147, 2144, 1070, 1090, 722, 1506,
	721, 1190, 185, 1505, 2677, 185, 720, 709, 708, 2662,
	2663, 665, 215, 664, 2453, 624, 1551, 623, 1047, 622,
	614, 2668, 613, 612, 585, 1523, 215, 584, 583, 1205,
	1205, 215, 215, 2169, 215, 1917, 1908, 2003, 582, 581,
	565, 205, 204, 203, 215, 202, 184, 1184, 2668, 184,
	1196, 1506, 215, 201, 200, 199, 177, 198, 197, 196,
	195, 194, 193, 192, 178, 191, 215, 215, 215, 215,
	215, 1205, 1205, 190, 189, 1192, 1205, 188, 187, 2668,
	215, 1205, 215, 215, 186, 152, 3072, 3665, 152, 2926,
	2167, 1205, 2750, 2627, 2610, 2149, 1028, 215, 1064, 2410,
	2288, 2271, 1506, 2662, 2663, 1339, 2678, 1275, 1275, 1521,
	1780, 1662, 1496, 1497, 1503, 1524, 1502, 1498, 1932, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1482, 1483,
	2683, 1569, 3248, 2678, 1205, 1211, 3247, 1221, 1583, 1083,
	1583, 2439, 1036, 3645, 1582, 1196, 1582, 3559, 1513, 1562,
	2668, 1059, 183, 183, 3513, 1485, 183, 1218, 215, 1224,
	1639, 1229, 1217, 1235, 2678, 1586, 1085, 1581, 1178, 1183,
	3372, 608, 215, 611, 1486, 1487, 1488, 1489, 1491, 1492,
	3507, 3367, 1481, 3432, 2920, 1484, 3279, 1931, 1364, 2359,
	3258, 3257, 185, 185, 1504, 2143, 185, 143, 143, 143,
	3505, 1347, 1349, 1351, 3245, 2679, 3244, 3243, 3242, 3237,
	3234, 3233, 3142, 3149, 3092, 3091, 3090, 1279, 1070, 2309,
	1013, 1070, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 3082, 2679, 3129, 3051, 2678, 184, 184, 1322, 1325,
	184, 840, 3050, 1413, 2668, 1345, 177, 177, 1358, 1295,
	177, 183, 3049, 1332, 178, 178, 1363, 2975, 178, 1507,
	1508, 1509, 1510, 2679, 1276, 2971, 1482, 1483, 2745, 1490,
	1421, 1459, 2697, 2688, 2661, 152, 152, 1562, 1225, 152,
	1567, 1563, 2658, 1561, 1486, 1487, 1488, 1489, 1491, 1492,
	2657, 185, 2655, 1485, 1881, 2640, 2639, 2638, 2635, 2632,
	1512, 1514, 2626, 2437, 2302, 2609, 2602, 2479, 2272, 2132,
	1412, 183, 1458, 1481, 1850, 1848, 1480, 3783, 2674, 2675,
	2676, 3749, 3748, 1484, 3683, 2673, 2671, 2672, 2664, 2665,
	2666, 2667, 2669, 2670, 2679, 184, 1550, 1771, 1035, 3001,
	3634, 3632, 3553, 3550, 3547, 177, 2662, 2663, 3546, 3545,
	3538, 185, 3532, 178, 1505, 2664, 2665, 2666, 2667, 2669,
	2670, 1369, 3502, 2662, 2663, 3497, 3496, 1385, 2109, 3448,
	1453, 3428, 1482, 1483, 2452, 3406, 2674, 2675, 2676, 215,
	3366, 3390, 3389, 2673, 2671, 2672, 2664, 2665, 2666, 2667,
	2669, 2670, 1513, 3377, 3376, 184, 3356, 2765, 2182, 1485,
	3353, 3346, 3274, 1616, 1456, 177, 215, 1490, 1464, 1625,
	1463, 2115, 3256, 178, 3148, 822, 215, 1092, 215, 215,
	215, 215, 3196, 3193, 840, 3120, 603, 215, 215, 1484,
	821, 603, 215, 3119, 152, 1511, 3107, 215, 3106, 1672,
	3064, 1460, 2966, 1205, 1547, 1665, 1585, 1477, 1478, 2927,
	2910, 2873, 2837, 1506, 2816, 1744, 2672, 2664, 2665, 2666,
	2667, 2669, 2670, 2793, 1092, 2662, 2663, 2793, 2680, 2681,
	2682, 2792, 2766, 2702, 2631, 1664, 3524, 2742, 2630, 2625,
	1749, 2593, 2419, 1587, 3221, 1070, 1674, 2668, 1778, 1584,
	1576, 1741, 1781, 1573, 1622, 1623, 1646, 1196, 1933, 3349,
	2168, 2307, 1743, 2306, 2668, 1482, 1483, 2283, 2276, 2243,
	2165, 1000, 1661, 1490, 842, 1617, 1613, 1612, 1611, 2211,
	1610, 1609, 1670, 1608, 143, 1607, 1577, 1578, 1606, 1605,
	1603, 2677, 1485, 1602, 1601, 1600, 1599, 1598, 1597, 2662,
	2663, 1596, 1704, 1595, 1512, 1514, 1594, 1593, 1592, 1591,
	1590, 1589, 1647, 2666, 2667, 2669, 2670, 2166, 1564, 1668,
	3417, 1548, 1484, 1546, 1541, 1653, 1058, 840, 854, 1049,
	1042, 3276, 3230, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 1644, 3088, 1771, 3075, 3067, 1746, 2613, 2678,
	2274, 3278, 3087, 1563, 1205, 1205, 215, 2763, 1505, 1544,
	1637, 1666, 1092, 1790, 1615, 2677, 2668, 1657, 3321, 3746,
	608, 3739, 611, 2662, 2663, 608, 1080, 611, 3548, 2882,
	3474, 183, 3508, 1641, 1656, 1655, 1654, 1841, 1652, 1673,
	1846, 1651, 1650, 1819, 1740, 3473, 1821, 3370, 1074, 1826,
	3320, 215, 3506, 3070, 1078, 215, 215, 1675, 2912, 3431,
	1771, 1747, 2911, 3479, 1583, 1598, 1598, 2683, 215, 1639,
	1582, 185, 2819, 1801, 2637, 1451, 2636, 215, 1079, 215,
	3152, 215, 1774, 1769, 1764, 215, 1758, 2575, 1384, 1074,
	2668, 2361, 1071, 870, 1075, 3118, 1012, 806, 2679, 215,
	2859, 2678, 2858, 1837, 1571, 2377, 1393, 1506, 1422, 1763,
	1762, 1074, 1930, 1771, 1773, 184, 3470, 3670, 1805, 3409,
	1830, 3657, 1394, 1835, 3754, 177, 1488, 1489, 1491, 1492,
	3134, 3122, 1875, 178, 2931, 2706, 807, 1882, 3003, 1205,
	1872, 1205, 2140, 215, 1205, 3666, 2303, 215, 1029, 2619,
	1029, 2305, 1205, 1568, 152, 1205, 215, 1604, 215, 215,
	1579, 1842, 2851, 1877, 1876, 1252, 1879, 3679, 1205, 1205,
	1205, 3676, 215, 1890, 1065, 2678, 1218, 2891, 2381, 215,
	3099, 1217, 3540, 3609, 3162, 3529, 1072, 1373, 603, 215,
	608, 215, 611, 215, 1073, 215, 1825, 215, 2374, 2375,
	2679, 3113, 3667, 2486, 2664, 2665, 2666, 2667, 2669, 2670,
	2449, 215, 3571, 1766, 215, 3715, 215, 1898, 1843, 2671,
	2672, 2664, 2665, 2666, 2667, 2669, 2670, 215, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 3714, 1951, 1935, 660,
	2947, 3310, 1240, 2775, 2341, 804, 802, 1860, 215, 2314,
	1859, 1912, 215, 789, 1914, 800, 798, 1916, 1250, 1759,
	2332, 1919, 795, 1420, 1989, 1071, 2764, 183, 1419, 886,
	3780, 1987, 2330, 3461, 2679, 1092, 3454, 3136, 1947, 3133,
	2018, 3132, 1295, 3096, 1895, 2332, 1895, 1892, 1900, 1901,
	1896, 3095, 1936, 2624, 2623, 2622, 1080, 2330, 869, 2621,
	2579, 2393, 2385, 2047, 840, 1768, 840, 185, 1345, 2384,
	1345, 2020, 2364, 2674, 2675, 2676, 2016, 2007, 661, 2295,
	2673, 2671, 2672, 2664, 2665, 2666, 2667, 2669, 2670, 838,
	1251, 2090, 1798, 1457, 1074, 2344, 1767, 2777, 1214, 1371,
	1028, 1941, 1028, 1059, 2161, 2044, 2045, 1926, 1079, 1927,
	2160, 184, 1940, 1418, 2121, 2122, 1938, 1080, 2048, 1072,
	1092, 177, 1794, 1285, 1283, 1284, 1282, 1073, 1492, 178,
	2121, 2137, 608, 1627, 611, 3570, 2446, 3734, 1071, 2932,
	792, 2002, 2818, 1799, 1800, 1704, 1704, 2001, 2152, 1306,
	152, 1969, 2018, 1366, 2673, 2671, 2672, 2664, 2665, 2666,
	2667, 2669, 2670, 837, 1807, 215, 2000, 2321, 1962, 1079,
	2191, 1795, 2195, 2195, 2209, 1858, 2121, 2031, 1945, 2229,
	2231, 2145, 1260, 2105, 2235, 1811, 2017, 1092, 2016, 215,
	3388, 2363, 2286, 1997, 2105, 2352, 2087, 1430, 215, 3663,
	1382, 1631, 2006, 1246, 2005, 2374, 2375, 2004, 2019, 3735,
	215, 2012, 2567, 1092, 1657, 1032, 822, 3438, 2552, 822,
	822, 2662, 2663, 1959, 1039, 2140, 1954, 1386, 2284, 1808,
	2136, 2035, 1072, 1634, 2036, 2037, 2670, 3322, 2343, 839,
	1073, 2285, 1434, 3636, 1030, 2015, 2014, 2146, 2351, 1999,
	2158, 1963, 1629, 1367, 2293, 2159, 1037, 1897, 2162, 3109,
	2163, 2164, 840, 1462, 2938, 1955, 1057, 1074, 1632, 1482,
	1483, 2374, 2375, 840, 2251, 2937, 2531, 840, 1450, 1785,
	2117, 2113, 3714, 1786, 2989, 3306, 1267, 2111, 2149, 1513,
	1646, 1630, 1408, 215, 3757, 3737, 1485, 1000, 2017, 1417,
	2992, 1205, 2134, 1394, 3703, 1394, 663, 662, 718, 1812,
	2888, 3212, 2721, 2559, 2560, 2259, 1956, 2273, 2566, 2147,
	2144, 3211, 1265, 2250, 1775, 1776, 1484, 3664, 1248, 2085,
	2830, 1092, 2088, 1801, 2824, 2258, 215, 2263, 1749, 1040,
	2269, 2270, 2774, 1409, 215, 1070, 2204, 143, 2220, 3121,
	2233, 2297, 1792, 1818, 2342, 215, 2990, 2015, 3769, 2327,
	1909, 840, 2668, 2252, 2256, 2257, 2241, 2242, 215, 1372,
	1813, 1814, 1633, 1803, 2331, 1787, 1644, 784, 836, 1809,
	1074, 2084, 215, 1092, 2840, 3541, 615, 1205, 1789, 1205,
	3387, 2362, 2028, 1996, 1785, 215, 215, 2889, 1786, 833,
	1267, 2149, 2776, 658, 3662, 657, 796, 796, 1585, 2333,
	1490, 1370, 1810, 784, 1574, 692, 796, 797, 215, 2806,
	2149, 215, 1792, 796, 1988, 1801, 2332, 215, 2308, 2761,
	2367, 1986, 3304, 1305, 2312, 833, 3208, 3400, 2346, 3736,
	215, 1512, 1514, 1791, 1184, 3723, 1431, 2678, 215, 1998,
	215, 1961, 2382, 215, 3621, 2888, 2101, 2149, 1196, 215,
	3702, 2311, 215, 2805, 215, 3743, 215, 2720, 215, 215,
	1704, 215, 1205, 1205, 1205, 785, 1205, 2423, 2315, 2460,
	2099, 215, 215, 2394, 215, 215, 2398, 1245, 1205, 2366,
	1787, 1577, 1578, 3338, 2537, 1505, 215, 3110, 3552, 2131,
	1815, 1540, 2629, 1789, 2345, 2348, 2473, 2474, 2358, 3439,
	2336, 785, 215, 215, 215, 2086, 2500, 215, 1029, 215,
	2143, 2255, 215, 793, 215, 3758, 215, 2581, 2212, 2376,
	2378, 2379, 2380, 2443, 1029, 2407, 1368, 2390, 2104, 1038,
	1432, 2268, 2354, 1792, 1196, 1196, 2679, 215, 215, 215,
	215, 215, 215, 2365, 215, 3305, 1381, 1383, 1791, 839,
	3348, 2412, 3202, 2414, 1816, 1218, 2383, 1785, 1429, 2469,
	2408, 1786, 1820, 2485, 2417, 2812, 2521, 2540, 2522, 608,
	1958, 611, 2462, 1953, 2427, 215, 2095, 3084, 3297, 719,
	1196, 616, 617, 215, 1506, 143, 2096, 3589, 2502, 2475,
	2097, 2505, 2506, 3701, 2102, 2451, 1052, 2455, 2451, 3213,
	2511, 2512, 2513, 1433, 1631, 2519, 2949, 1554, 3294, 1461,
	786, 1559, 1056, 2112, 1196, 3770, 1196, 1910, 2470, 2516,
	2550, 2504, 1792, 2466, 2507, 2467, 2508, 2468, 2476, 2523,
	3384, 2525, 2487, 2527, 2503, 1345, 1634, 3661, 2399, 2542,
	1396, 2544, 3339, 3147, 2471, 2347, 786, 3741, 1792, 2535,
	3713, 3295, 3711, 1787, 1828, 2253, 2673, 2671, 2672, 2664,
	2665, 2666, 2667, 2669, 2670, 543, 1789, 3485, 1472, 2539,
	3355, 1632, 215, 1788, 1827, 2808, 2401, 2877, 619, 618,
	2780, 2441, 2607, 2608, 2529, 1867, 2518, 2611, 2536, 538,
	2582, 1624, 1050, 2317, 2558, 2524, 1045, 2526, 530, 2528,
	1028, 2810, 2549, 2548, 1823, 2319, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1471, 3254, 2590, 1028, 2553, 2031, 787,
	3040, 1791, 3742, 3209, 2545, 1799, 1800, 3587, 620, 621,
	1471, 2612, 2603, 3383, 2034, 1540, 1802, 2320, 2098, 2588,
	1760, 2953, 2547, 1466, 2754, 3445, 2568, 2100, 3763, 3444,
	3426, 2809, 2318, 1824, 3744, 787, 3588, 3309, 788, 3528,
	3098, 1757, 2878, 2869, 3308, 2788, 2784, 2538, 2442, 586,
	2430, 2421, 1891, 1880, 1878, 1633, 2580, 1854, 3554, 2988,
	1092, 2950, 3598, 2024, 2699, 1471, 1993, 1753, 1788, 2247,
	2713, 2714, 3167, 3359, 788, 3214, 2418, 1308, 3290, 215,
	2715, 1470, 3291, 1946, 215, 2729, 3066, 215, 2712, 3468,
	215, 215, 1092, 2368, 715, 840, 215, 3466, 1470, 2292,
	3427, 1792, 2798, 2795, 2794, 2573, 2618, 2551, 1755, 1092,
	2735, 2718, 2717, 1410, 2291, 2290, 215, 1472, 707, 3385,
	2738, 1291, 3293, 2425, 2289, 2585, 1756, 1277, 837, 3534,
	1289, 215, 3330, 1783, 1472, 3296, 2249, 2752, 2921, 2586,
	3041, 2248, 3255, 2591, 1278, 3215, 717, 1889, 3042, 591,
	215, 215, 215, 1470, 2405, 3720, 215, 3464, 3606, 215,
	2725, 3260, 2730, 2772, 2025, 3595, 215, 215, 2723, 215,
	215, 215, 3055, 1680, 2749, 2759, 2744, 2778, 1070, 3762,
	3424, 2781, 2782, 215, 215, 215, 3601, 1397, 3434, 2748,
	2770, 3307, 215, 2762, 2694, 2695, 2696, 2796, 2724, 2156,
	2800, 2741, 3722, 2733, 2728, 215, 215, 3555, 2707, 2736,
	2737, 597, 3425, 2555, 1092, 3681, 1448, 2722, 2751, 2734,
	1446, 1426, 1205, 2797, 2732, 3535, 2802, 2803, 3549, 2785,
	2789, 1092, 593, 1704, 2369, 2370, 215, 539, 3292, 215,
	215, 1788, 2739, 215, 2740, 3405, 1205, 215, 3253, 1985,
	2767, 2768, 3602, 2769, 2691, 1424, 1205, 1205, 1407, 2752,
	1196, 1405, 215, 2756, 2757, 2758, 1403, 3435, 215, 1401,
	1704, 2856, 2823, 215, 2868, 215, 2155, 2884, 2755, 2965,
	2773, 1875, 215, 2929, 1399, 2821, 1790, 2587, 2847, 2831,
	540, 3536, 2779, 2212, 2212, 2656, 2589, 1391, 1627, 713,
	714, 2731, 1389, 2592, 2500, 1287, 1205, 1205, 2422, 2392,
	2360, 2893, 1790, 2500, 215, 215, 2811, 2310, 215, 1032,
	1290, 1032, 2817, 705, 706, 1663, 1660, 2844, 2845, 1288,
	541, 2826, 542, 1449, 588, 1361, 2846, 2813, 2814, 1669,
	2692, 2815, 2838, 2833, 1830, 716, 2839, 2841, 1030, 2829,
	1030, 2946, 1830, 592, 2945, 215, 2864, 1092, 215, 215,
	1092, 215, 2848, 1466, 2827, 2533, 1631, 2885, 2828, 2834,
	2835, 1447, 3326, 2836, 2532, 1445, 1425, 596, 2510, 2013,
	1995, 1966, 1742, 2366, 1588, 1190, 1365, 1264, 1090, 2832,
	3656, 3317, 794, 590, 215, 3594, 3283, 1029, 1634, 3165,
	2890, 1984, 3157, 2212, 2212, 2212, 3116, 2892, 2919, 2899,
	1423, 2908, 1029, 1406, 2923, 3114, 1404, 1629, 143, 143,
	3097, 1402, 2906, 2907, 1400, 2901, 2902, 2903, 3297, 2904,
	2905, 1092, 587, 1632, 2943, 2876, 2928, 1196, 840, 1398,
	2867, 2860, 1029, 944, 2447, 2436, 2435, 2415, 1092, 1923,
	215, 2883, 1390, 1922, 1920, 1918, 1630, 1388, 3294, 2981,
	1286, 3287, 2944, 2934, 1915, 2935, 1913, 2936, 1911, 594,
	1902, 2968, 1851, 1849, 1838, 3285, 2997, 1836, 1831, 1817,
	589, 3289, 211, 1804, 533, 534, 1793, 549, 533, 549,
	559, 564, 2940, 3699, 580, 2985, 2977, 2978, 2880, 1009,
	2948, 3295, 3490, 211, 1475, 1671, 2571, 2951, 3715, 3627,
	3379, 3374, 3373, 2501, 1779, 1242, 2332, 799, 801, 803,
	2332, 704, 3492, 1010, 2350, 211, 1704, 1801, 2330, 3175,
	1443, 1444, 2349, 3288, 1957, 3052, 1983, 1633, 1982, 2044,
	3010, 2941, 3311, 595, 2973, 1964, 831, 3543, 784, 2114,
	1387, 3515, 2984, 3261, 2371, 2044, 3020, 1482, 1483, 3000,
	215, 215, 3004, 1482, 1483, 2353, 1554, 1479, 3716, 2995,
	833, 1092, 2991, 2993, 2994, 3709, 2389, 3071, 3005, 1704,
	1704, 3006, 3009, 2572, 1485, 3007, 3048, 1750, 2388, 1028,
	544, 2357, 215, 1476, 3017, 1704, 1704, 2387, 3019, 3083,
	2355, 3593, 3044, 2356, 1028, 3563, 1680, 1680, 1029, 3560,
	832, 3156, 1011, 649, 1484, 3146, 3081, 2216, 2454, 691,
	1484, 533, 533, 2234, 1745, 3045, 1704, 1676, 3738, 211,
	2760, 3761, 3062, 3063, 1028, 1551, 555, 2662, 2663, 215,
	3562, 3059, 3060, 143, 1482, 1483, 785, 3053, 3290, 2324,
	2325, 3093, 3291, 3123, 2322, 2323, 1375, 3235, 2151, 3086,
	2324, 2322, 1374, 2157, 1428, 3073, 3231, 1427, 1205, 3085,
	2996, 3057, 1549, 3773, 3135, 3525, 3458, 3418, 3416, 3345,
	3074, 215, 3277, 3199, 3192, 3181, 3160, 3141, 215, 3140,
	3139, 3112, 3293, 2900, 2874, 2872, 2515, 1092, 215, 2514,
	2464, 3137, 1205, 2440, 3127, 3296, 2416, 3128, 3130, 3101,
	3089, 2116, 1981, 1980, 1979, 1978, 215, 1905, 1904, 1903,
	1883, 1862, 1861, 3177, 1857, 3153, 1856, 1855, 1853, 1852,
	215, 215, 1205, 1205, 1205, 1442, 215, 215, 215, 3169,
	1441, 215, 215, 3172, 1317, 215, 215, 2460, 1205, 2789,
	1316, 1315, 1314, 215, 1092, 3168, 1313, 1312, 1311, 3115,
	1310, 3117, 1309, 3154, 1875, 1307, 1302, 1301, 1300, 1299,
	2212, 2212, 3155, 1298, 3171, 1259, 1092, 2500, 1258, 1257,
	3138, 3200, 1256, 2366, 1255, 1254, 1253, 1247, 1241, 1704,
	1239, 786, 1238, 1055, 1054, 3158, 3159, 984, 891, 1751,
	1028, 805, 791, 3437, 1436, 74, 1249, 3170, 3292, 3229,
	635, 68, 3111, 644, 3179, 3173, 3608, 2804, 3178, 2396,
	1965, 3184, 215, 1395, 1967, 3163, 2743, 3189, 3190, 2275,
	3183, 3586, 3239, 2628, 3194, 3198, 3197, 3191, 3195, 3521,
	3399, 2154, 1570, 70, 3225, 879, 3188, 966, 3337, 3336,
	3284, 3100, 2490, 3334, 2212, 2212, 2212, 2212, 2212, 2212,
	2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212, 2212,
	2212, 2212, 2212, 3210, 2212, 3333, 1029, 1029, 3205, 847,
	1095, 1761, 885, 1777, 1770, 215, 2304, 2194, 3216, 1684,
	888, 1092, 1681, 1092, 1683, 890, 889, 1682, 830, 1704,
	787, 1572, 887, 1679, 3217, 2424, 2458, 1294, 770, 1765,
	2110, 3201, 2138, 2617, 1565, 860, 215, 215, 215, 881,
	2135, 3271, 1048, 2726, 2887, 3080, 3365, 2023, 215, 1032,
	3252, 1680, 652, 2659, 2141, 215, 1041, 215, 2217, 788,
	215, 215, 215, 2210, 3266, 1032, 2206, 3280, 3281, 2448,
	1452, 1542, 1092, 215, 215, 2459, 1082, 1092, 1030, 863,
	2108, 1556, 2597, 2033, 2894, 215, 3312, 2746, 2301, 215,
	3265, 3624, 3268, 3262, 1030, 3263, 3264, 3272, 215, 1043,
	2038, 3267, 1866, 215, 1008, 2748, 1092, 3303, 3273, 1205,
	1007, 3282, 1006, 3313, 3302, 3615, 3331, 3612, 2854, 3314,
	3315, 1754, 2316, 1534, 2861, 875, 1195, 1053, 2711, 2922,
	1261, 3542, 1533, 2400, 580, 3531, 1069, 215, 1068, 3269,
	1067, 2787, 3768, 3108, 182, 2565, 3361, 1473, 1465, 1092,
	1875, 211, 2216, 211, 211, 1187, 179, 211, 3325, 3301,
	3324, 181, 3360, 180, 3364, 3332, 3341, 3125, 91, 35,
	211, 1220, 3347, 3350, 16, 1029, 119, 1090, 118, 1092,
	117, 116, 115, 2594, 2595, 3352, 3362, 3369, 1028, 1028,
	114, 113, 108, 112, 111, 1244, 3378, 110, 109, 107,
	106, 3375, 105, 104, 103, 3328, 102, 3397, 101, 1263,
	100, 99, 98, 97, 211, 211, 1092, 1187, 3411, 96,
	95, 94, 93, 3386, 215, 92, 215, 211, 1092, 215,
	576, 573, 2216, 2216, 3357, 1304, 49, 215, 48, 90,
	89, 15, 3396, 33, 3397, 13, 53, 54, 3340, 211,
	211, 211, 211, 1187, 3407, 12, 2047, 28, 3351, 29,
	215, 80, 3421, 580, 79, 211, 211, 27, 14, 26,
	24, 3391, 10, 8, 7, 3412, 3413, 30, 3368, 215,
	704, 1648, 3420, 11, 148, 147, 73, 215, 146, 72,
	3415, 3457, 145, 2685, 2686, 2687, 215, 3419, 144, 71,
	3476, 1205, 22, 9, 3467, 140, 3477, 215, 3151, 1704,
	3441, 3440, 67, 142, 141, 3481, 65, 139, 2856, 138,
	64, 137, 136, 3447, 66, 3455, 135, 20, 215, 215,
	3459, 5, 3480, 52, 6, 3381, 3465, 1029, 3487, 3489,
	2930, 211, 2216, 2216, 2216, 1029, 3511, 3512, 84, 3475,
	215, 85, 31, 62, 3486, 211, 3488, 61, 1029, 60,
	19, 3482, 3364, 1704, 3484, 215, 3491, 1028, 3493, 51,
	18, 172, 3494, 171, 170, 1024, 169, 164, 163, 168,
	166, 165, 167, 162, 3499, 3500, 174, 173, 176, 160,
	3527, 3449, 3450, 156, 3537, 155, 159, 161, 158, 157,
	154, 175, 56, 134, 3519, 1196, 133, 57, 1338, 3514,
	132, 131, 130, 215, 206, 3551, 3526, 129, 128, 55,
	17, 2, 1, 0, 3495, 0, 215, 1205, 0, 0,
	3510, 0, 3503, 215, 0, 0, 0, 1205, 1205, 0,
	0, 0, 0, 1205, 0, 0, 0, 215, 3577, 215,
	0, 0, 0, 0, 0, 0, 3544, 0, 3561, 1704,
	0, 3480, 3556, 0, 3568, 0, 0, 3569, 0, 3574,
	3575, 3576, 3590, 215, 3565, 0, 3580, 3557, 3558, 215,
	3603, 3581, 215, 0, 1092, 0, 0, 0, 0, 3573,
	0, 0, 0, 215, 215, 0, 0, 3605, 0, 3614,
	3617, 0, 0, 0, 3618, 0, 3582, 3622, 3583, 0,
	0, 3633, 2047, 0, 3631, 0, 0, 3628, 3610, 3619,
	0, 0, 3640, 0, 0, 3626, 0, 0, 3641, 1028,
	0, 0, 0, 215, 0, 0, 0, 1028, 3604, 0,
	3637, 0, 3635, 0, 1680, 3668, 0, 0, 0, 0,
	1028, 0, 0, 0, 0, 3655, 0, 3654, 3652, 3653,
	0, 3673, 533, 2212, 0, 0, 0, 0, 0, 0,
	3671, 3686, 0, 0, 0, 0, 3688, 215, 0, 0,
	0, 1680, 0, 211, 3687, 211, 3696, 0, 0, 211,
	0, 3690, 0, 0, 3700, 0, 0, 215, 3695, 1220,
	0, 1187, 211, 3692, 211, 2212, 0, 0, 2460, 211,
	1220, 549, 0, 0, 211, 1220, 3706, 3707, 0, 3710,
	580, 3712, 3708, 0, 215, 0, 215, 3717, 0, 3614,
	3721, 3718, 3617, 3729, 3719, 0, 3725, 0, 3732, 3726,
	3689, 3731, 3691, 0, 0, 0, 3727, 0, 0, 0,
	0, 0, 0, 0, 3733, 0, 0, 3626, 1032, 0,
	2961, 2962, 3629, 3745, 3747, 3630, 0, 0, 0, 0,
	3751, 0, 0, 1032, 0, 3755, 3756, 0, 3752, 0,
	0, 0, 0, 3724, 3759, 0, 0, 1030, 0, 3765,
	3693, 3694, 0, 0, 3697, 3771, 0, 3772, 0, 0,
	0, 0, 1030, 1032, 0, 3766, 3767, 0, 0, 2216,
	2216, 0, 0, 3774, 0, 2212, 0, 3778, 3779, 0,
	3781, 0, 3782, 0, 0, 3784, 0, 0, 0, 3787,
	3777, 0, 1030, 0, 0, 0, 0, 0, 0, 0,
	3785, 0, 0, 0, 3021, 3022, 3023, 3024, 3025, 3026,
	3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036,
	3037, 3038, 3039, 0, 3043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 2216, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216, 2216,
	2216, 2216, 0, 2216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 0, 1482, 1483, 211, 211,
	0, 0, 0, 0, 0, 0, 0, 1680, 0, 0,
	0, 1888, 0, 0, 0, 0, 1513, 0, 0, 0,
	211, 0, 211, 1485, 211, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 0, 1906, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 0, 0, 0,
	1680, 1680, 1504, 0, 0, 0, 0, 0, 1030, 1501,
	0, 0, 0, 0, 0, 0, 1680, 1680, 0, 0,
	0, 0, 0, 0, 2662, 2663, 580, 2680, 2681, 2682,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 1187, 211, 2970, 0, 0, 0, 1680, 0, 3220,
	0, 0, 0, 0, 0, 580, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 1507, 1508, 1509,
	1510, 211, 211, 1087, 211, 0, 211, 1490, 211, 1194,
	211, 0, 0, 0, 880, 88, 0, 0, 0, 0,
	2677, 0, 0, 0, 1990, 0, 0, 1991, 0, 1992,
	0, 0, 0, 0, 0, 0, 0, 0, 1512, 1514,
	211, 0, 0, 1197, 1208, 0, 0, 1212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 580, 0, 1499, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 1505, 0, 0, 2668, 0, 1268, 1271, 0,
	0, 1321, 1321, 1321, 1194, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 2683, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 823, 1212,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 1032, 1032, 0,
	2678, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 1435, 0, 0, 0, 0, 0, 0,
	1018, 0, 1376, 0, 0, 0, 1030, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 2662,
	2663, 0, 2680, 2681, 2682, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 2969, 0,
	0, 0, 533, 0, 0, 0, 0, 0, 0, 211,
	1680, 533, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2679,
	0, 0, 0, 0, 0, 2677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 1483, 1502, 1498,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 0, 0, 0,
	2668, 0, 0, 1484, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 3404, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 2340,
	0, 0, 2674, 2675, 2676, 0, 0, 211, 0, 2673,
	2671, 2672, 2664, 2665, 2666, 2667, 2669, 2670, 211, 0,
	0, 2683, 0, 0, 0, 3429, 0, 0, 0, 2964,
	0, 211, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 0, 1507, 1508, 1509,
	1510, 1658, 0, 0, 0, 2678, 0, 1490, 211, 2409,
	0, 0, 0, 0, 1667, 0, 1194, 0, 0, 0,
	0, 0, 0, 0, 2216, 0, 0, 0, 0, 0,
	0, 1220, 0, 0, 211, 0, 0, 0, 1512, 1514,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1888, 0, 0, 0, 0, 0, 0,
	0, 2340, 0, 533, 0, 0, 2463, 1499, 1500, 0,
	0, 0, 211, 0, 0, 211, 0, 211, 1032, 211,
	0, 211, 211, 0, 1187, 3518, 1032, 0, 0, 0,
	0, 0, 1505, 0, 2483, 704, 0, 2340, 2340, 1032,
	1680, 0, 0, 0, 2679, 0, 0, 1030, 0, 211,
	0, 0, 0, 0, 0, 1030, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 1187, 211, 1030, 0,
	1220, 0, 1220, 0, 2216, 1187, 0, 1187, 0, 1187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	211, 211, 211, 211, 1187, 211, 213, 211, 0, 0,
	0, 0, 0, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1506, 88, 0, 88, 0, 88, 0, 211, 0,
	0, 0, 2216, 2216, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2674, 2675, 2676,
	0, 0, 0, 1212, 2673, 2671, 2672, 2664, 2665, 2666,
	2667, 2669, 2670, 0, 0, 0, 1864, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 1894, 0, 1894, 0, 0, 0,
	841, 88, 88, 88, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 1220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1502, 1498,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 0, 0, 0,
	0, 1871, 0, 88, 1943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1513, 0, 0, 0, 0, 0,
	0, 1485, 1928, 0, 1960, 0, 0, 0, 0, 0,
	1212, 0, 0, 1939, 1970, 0, 1972, 0, 1974, 0,
	1976, 0, 1977, 0, 1626, 0, 1948, 1949, 1950, 0,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 211, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 1994, 0, 0, 0, 0, 211, 823, 0,
	0, 0, 533, 0, 0, 0, 0, 533, 0, 0,
	533, 0, 0, 533, 533, 0, 1545, 0, 0, 533,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 1552, 0, 0, 0, 1558, 0, 1220,
	0, 0, 0, 0, 0, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 1220, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2340, 2340, 211, 0, 0, 0, 2340,
	0, 0, 2791, 0, 0, 0, 1512, 1514, 0, 2340,
	2791, 0, 2340, 2791, 2791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 211, 211, 0,
	0, 0, 0, 0, 0, 1499, 1500, 0, 846, 0,
	0, 0, 0, 0, 0, 0, 1482, 1483, 211, 1187,
	0, 0, 1525, 1526, 1527, 0, 0, 0, 0, 0,
	1505, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 1485, 0, 0, 0, 0, 1531, 2850,
	0, 0, 2852, 2340, 0, 0, 211, 0, 0, 0,
	211, 0, 0, 0, 1640, 0, 1643, 0, 88, 0,
	0, 0, 0, 1484, 0, 211, 0, 0, 0, 0,
	0, 1187, 1504, 211, 0, 0, 2340, 0, 533, 1501,
	0, 0, 0, 0, 0, 2340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2282, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 1888, 1506,
	0, 1888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1508, 1509,
	1510, 0, 0, 0, 0, 0, 0, 1490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2939, 0,
	0, 1187, 211, 0, 211, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 1532, 0, 0, 0, 1512, 1514,
	0, 0, 2662, 2663, 0, 2680, 2681, 2682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 858, 0, 0, 0, 858, 1499, 1500, 0,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 1176,
	0, 0, 0, 1520, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 0, 0, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 2677, 0,
	0, 0, 0, 3002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2402, 1871, 2403, 0, 0,
	0, 0, 2434, 1511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2668, 0, 0, 0, 0, 0, 0,
	0, 1506, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 211, 0, 2465, 0, 0, 1321, 0, 1321,
	2684, 1321, 0, 1194, 1194, 0, 0, 1523, 0, 0,
	0, 0, 0, 533, 533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2683, 0, 0, 0, 0, 0,
	0, 2509, 0, 841, 0, 841, 0, 0, 0, 0,
	2472, 0, 0, 0, 0, 1220, 0, 2517, 0, 2520,
	0, 0, 0, 0, 0, 0, 1212, 0, 2678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	846, 0, 0, 0, 846, 0, 0, 0, 0, 0,
	0, 0, 2541, 1194, 2543, 1194, 0, 2546, 0, 0,
	0, 1521, 580, 0, 0, 0, 0, 1524, 1502, 1498,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 1222, 0, 1226, 0, 1232, 0, 0, 0, 0,
	1321, 0, 0, 0, 0, 0, 0, 0, 2574, 0,
	0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 2679, 0, 823,
	0, 0, 823, 823, 0, 0, 0, 0, 0, 2340,
	211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2483, 2483, 0, 0, 0, 0, 704,
	704, 2340, 0, 0, 1888, 1888, 0, 0, 704, 2340,
	1357, 0, 0, 0, 0, 0, 211, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2662, 2663, 1414, 2680, 2681, 2682, 0, 0,
	2674, 2675, 2676, 0, 0, 3240, 0, 2673, 2671, 2672,
	2664, 2665, 2666, 2667, 2669, 2670, 0, 0, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1513, 1176, 1018, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 2677, 0,
	1643, 0, 211, 0, 0, 0, 0, 0, 1220, 0,
	211, 0, 0, 0, 1535, 1536, 1537, 1538, 1539, 1484,
	0, 0, 0, 211, 858, 0, 0, 0, 1504, 0,
	1176, 88, 0, 0, 0, 1501, 0, 0, 0, 2340,
	2340, 2340, 0, 1553, 0, 0, 0, 0, 0, 1566,
	0, 1220, 0, 0, 0, 0, 0, 0, 2340, 0,
	2791, 0, 0, 1220, 1220, 211, 0, 0, 0, 0,
	0, 0, 0, 2668, 0, 0, 211, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2783, 2340, 0,
	0, 0, 3343, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 211, 0, 1490, 0, 0, 3354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2820, 2822,
	2434, 0, 0, 0, 2683, 0, 0, 1522, 0, 0,
	1532, 0, 0, 0, 1512, 1514, 0, 0, 0, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 0, 0, 1528, 0, 1529, 0, 2678, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 1176, 0,
	0, 1620, 1620, 1620, 0, 0, 0, 0, 2862, 1520,
	88, 0, 2866, 0, 0, 0, 0, 0, 1505, 0,
	2842, 0, 0, 0, 0, 0, 0, 2875, 0, 0,
	0, 0, 0, 0, 88, 0, 88, 0, 1530, 0,
	0, 0, 0, 0, 2865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2870, 2871, 0, 2340, 0, 2791,
	0, 0, 3423, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 846, 0, 0, 0, 0, 0, 88, 2918,
	0, 88, 0, 0, 0, 0, 0, 2679, 0, 0,
	0, 0, 0, 580, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 2914, 2915, 0, 0, 0, 88,
	0, 0, 3423, 0, 0, 0, 0, 1506, 0, 0,
	2340, 0, 0, 0, 2942, 0, 1194, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2954,
	0, 211, 211, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3002, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3423, 0,
	2674, 2675, 2676, 0, 0, 0, 0, 2673, 2671, 2672,
	2664, 2665, 2666, 2667, 2669, 2670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 945, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 3343, 0, 0, 0,
	0, 0, 1482, 1483, 0, 0, 0, 0, 0, 211,
	0, 1176, 0, 0, 0, 0, 2791, 212, 0, 0,
	0, 0, 1513, 2107, 0, 0, 0, 0, 0, 1485,
	1220, 0, 1220, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3599, 0, 0, 1484,
	212, 0, 1220, 0, 0, 211, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 211, 2340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2959, 3002, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2340, 0, 0, 1176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1018, 1512, 1514, 0, 0, 0, 0,
	3423, 0, 0, 0, 0, 0, 0, 0, 1018, 1176,
	0, 0, 0, 0, 0, 0, 3150, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 0, 1220, 0, 2340,
	0, 0, 0, 3164, 0, 2022, 0, 2026, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 1505, 0,
	0, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 0, 2089, 3203, 2091,
	2092, 2093, 2094, 0, 0, 0, 0, 0, 0, 0,
	3185, 3186, 3187, 0, 0, 0, 0, 0, 0, 2118,
	88, 88, 0, 0, 88, 0, 0, 0, 0, 0,
	0, 0, 1553, 0, 0, 0, 2133, 1176, 0, 1511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 88, 0, 0, 88, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 2171, 2174, 2177, 2180,
	0, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 0, 0,
	0, 0, 2208, 0, 2219, 2221, 2226, 0, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1018, 0, 0, 841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 3316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 0, 2434, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1513, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 1097, 212, 212,
	0, 1097, 212, 1097, 1097, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 0, 0, 0,
	0, 0, 0, 2411, 0, 2413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 1097, 1097, 212,
	212, 0, 3430, 0, 0, 0, 0, 88, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 1018, 1018, 0, 1512, 1514, 0, 0, 0,
	0, 0, 0, 0, 212, 212, 212, 212, 0, 1097,
	1097, 0, 0, 0, 1097, 1528, 0, 1529, 0, 1097,
	212, 212, 0, 0, 1499, 1500, 0, 694, 0, 1097,
	0, 3483, 58, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 59, 0, 0, 1505,
	0, 0, 58, 697, 696, 0, 0, 0, 0, 0,
	0, 0, 63, 3509, 1194, 0, 59, 0, 2530, 1530,
	0, 0, 1097, 0, 0, 0, 0, 698, 0, 0,
	0, 0, 63, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 69, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1176, 0, 0, 0,
	212, 0, 0, 69, 1535, 1536, 0, 0, 0, 0,
	0, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 86, 0, 0, 0, 1176, 76,
	83, 0, 0, 0, 75, 0, 0, 0, 1506, 0,
	0, 0, 0, 0, 86, 1176, 0, 0, 0, 76,
	83, 3567, 0, 0, 0, 0, 0, 0, 0, 2577,
	2578, 1018, 0, 0, 1523, 2584, 0, 0, 0, 858,
	0, 0, 0, 77, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 858, 2598, 2599, 0, 0, 0, 0,
	2133, 0, 0, 77, 88, 0, 0, 0, 0, 2606,
	0, 0, 0, 0, 0, 0, 0, 3607, 0, 0,
	0, 0, 0, 0, 0, 2620, 0, 0, 3623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2641, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	1176, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 1176, 0, 0,
	0, 2650, 0, 0, 0, 2651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2226, 2226, 2226,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 1620, 0, 0, 0, 0, 0, 149, 81,
	2716, 82, 0, 1018, 0, 0, 0, 0, 0, 0,
	0, 1018, 0, 0, 212, 0, 0, 0, 149, 81,
	183, 82, 0, 0, 0, 1097, 0, 212, 212, 212,
	0, 0, 699, 0, 212, 0, 120, 0, 0, 212,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1097, 699, 0, 0, 0, 120, 0, 0, 0,
	185, 0, 0, 0, 0, 0, 0, 846, 0, 0,
	0, 0, 1097, 1176, 0, 0, 1176, 0, 0, 0,
	185, 846, 0, 121, 0, 0, 0, 0, 0, 0,
	0, 88, 1482, 1483, 0, 0, 153, 0, 0, 0,
	216, 88, 0, 121, 184, 0, 0, 2807, 0, 0,
	0, 0, 1513, 0, 177, 0, 153, 0, 0, 1485,
	0, 88, 178, 0, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 178, 152, 0, 0, 0, 1176, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	602, 0, 0, 695, 1176, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 1097, 212, 2958, 0, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 0, 0, 212, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1512, 1514, 0, 0, 58, 0,
	0, 0, 0, 0, 0, 212, 0, 212, 0, 212,
	0, 0, 59, 0, 0, 0, 0, 1176, 0, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 63, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2107, 0, 0, 1505, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 69,
	2956, 2957, 0, 0, 2960, 0, 0, 1097, 2963, 1097,
	0, 0, 1097, 0, 0, 0, 0, 2967, 0, 0,
	1097, 0, 0, 1097, 212, 0, 2974, 212, 0, 2716,
	75, 0, 0, 0, 0, 0, 1097, 1097, 1097, 0,
	86, 0, 0, 0, 2986, 76, 83, 212, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 212, 0, 212,
	0, 212, 0, 212, 0, 212, 0, 0, 0, 1511,
	0, 0, 0, 3011, 3012, 0, 3013, 3014, 3015, 0,
	0, 3016, 0, 1176, 0, 3018, 0, 1506, 911, 77,
	0, 0, 0, 0, 0, 212, 0, 0, 1482, 1483,
	0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3046, 3047, 1513, 0,
	0, 0, 0, 0, 0, 1485, 0, 210, 0, 0,
	1531, 3056, 0, 0, 0, 0, 0, 0, 0, 0,
	1176, 0, 0, 1097, 0, 0, 3065, 0, 609, 0,
	0, 0, 0, 0, 0, 1484, 0, 0, 0, 0,
	0, 0, 1176, 0, 1504, 0, 0, 0, 0, 0,
	609, 1501, 0, 0, 0, 88, 0, 0, 88, 0,
	0, 0, 2298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 78, 3094, 0, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 3102, 3105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 1507,
	1508, 1509, 1510, 0, 149, 81, 0, 82, 0, 1490,
	0, 0, 3124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 1532, 0, 699, 0,
	1512, 1514, 120, 0, 1031, 0, 0, 1176, 0, 1176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 1529, 0, 0, 1097, 185, 0, 0, 1499,
	1500, 0, 0, 0, 0, 0, 58, 0, 0, 0,
	0, 0, 0, 1620, 0, 1520, 0, 0, 212, 121,
	59, 1097, 3180, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 63, 0, 1176, 0,
	184, 0, 0, 1176, 1530, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 178, 1093,
	0, 0, 0, 1093, 0, 1206, 1206, 69, 0, 1206,
	0, 0, 1176, 0, 0, 0, 0, 0, 0, 152,
	0, 0, 0, 3218, 3219, 0, 0, 0, 0, 3223,
	3224, 0, 0, 0, 3227, 3228, 0, 0, 75, 0,
	0, 3232, 0, 0, 0, 1511, 0, 0, 86, 1097,
	0, 0, 3236, 76, 83, 1176, 0, 0, 0, 1206,
	1206, 0, 0, 1506, 0, 0, 0, 0, 3241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 1176, 0, 0, 0, 1523,
	0, 0, 212, 0, 0, 0, 0, 77, 0, 0,
	0, 1206, 1206, 212, 0, 0, 1206, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 1206, 1176, 0, 0, 0, 0, 0, 0, 0,
	212, 1097, 0, 0, 1176, 1097, 0, 1097, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 0, 0, 858, 0, 212,
	0, 3105, 0, 1521, 0, 212, 1496, 1497, 1503, 1524,
	1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 78,
	212, 0, 212, 0, 212, 0, 212, 212, 0, 0,
	1097, 1097, 1097, 0, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 149, 81, 212, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3105, 0,
	212, 0, 212, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 699, 0, 0, 0,
	120, 0, 0, 0, 0, 3392, 3393, 3394, 0, 0,
	0, 0, 0, 0, 0, 212, 212, 212, 212, 0,
	212, 0, 212, 0, 185, 0, 0, 0, 0, 0,
	0, 3402, 3403, 0, 0, 0, 210, 0, 210, 210,
	0, 0, 210, 0, 0, 3410, 0, 121, 0, 0,
	0, 0, 0, 212, 0, 609, 0, 0, 0, 0,
	153, 212, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 3105, 178, 0, 0, 0,
	0, 0, 0, 3446, 0, 0, 0, 1482, 1483, 210,
	210, 0, 3453, 0, 0, 846, 0, 1350, 0, 0,
	1176, 3460, 210, 0, 0, 858, 0, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 915, 0,
	0, 0, 0, 0, 210, 210, 210, 210, 3105, 0,
	0, 3105, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 210, 1482, 1483, 1484, 0, 0, 0, 0, 0,
	0, 3105, 3105, 1504, 0, 0, 0, 1093, 0, 0,
	1501, 0, 1513, 0, 0, 0, 602, 0, 0, 1485,
	0, 602, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1484,
	2583, 0, 0, 3530, 1093, 0, 3533, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 210, 0, 1507, 1508,
	1509, 1510, 0, 3105, 0, 0, 0, 0, 1490, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 2576, 0, 0, 0, 1512,
	1514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	1097, 0, 0, 1490, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 1512, 1514, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1206, 1206, 0, 0, 0, 0,
	212, 0, 1093, 1499, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3651, 3651, 3651, 0, 0, 0, 1505, 0,
	0, 212, 212, 212, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 3672, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 1511, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 3105, 0, 3105,
	1097, 0, 1506, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 3651, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 0, 1097, 212, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 1097, 0, 0, 0, 1511,
	212, 0, 0, 0, 0, 0, 0, 0, 1642, 0,
	1031, 0, 0, 0, 210, 0, 0, 1506, 0, 1206,
	0, 1206, 0, 0, 1206, 0, 0, 210, 1642, 210,
	0, 0, 1206, 0, 609, 1206, 0, 0, 0, 609,
	0, 0, 0, 0, 1097, 1097, 0, 0, 1206, 1206,
	1206, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3651, 3760, 0, 0, 0, 602, 0,
	0, 3764, 0, 0, 0, 0, 0, 0, 0, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 0, 0, 1097, 0, 212, 1097, 212,
	58, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	63, 0, 212, 0, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 0, 0,
	0, 69, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 0, 609, 0, 0, 76, 83, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 77, 0, 210, 210, 0, 0, 1094, 0, 0,
	0, 1094, 0, 1207, 1207, 0, 0, 1207, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 210, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 1207, 1207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1093, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 210, 0, 1207,
	1207, 0, 0, 78, 1207, 0, 0, 0, 0, 1207,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 1207,
	0, 0, 0, 0, 0, 0, 609, 210, 0, 210,
	0, 210, 0, 210, 0, 210, 149, 81, 0, 82,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 212,
	0, 1206, 1207, 0, 0, 210, 212, 0, 0, 0,
	699, 0, 0, 0, 120, 1097, 212, 0, 0, 0,
	1097, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 1097, 1097, 0, 0, 0, 0, 0, 0, 0,
	0, 121, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 212, 1097, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 184, 1093, 0, 0, 0, 1206, 0, 1206,
	0, 0, 177, 0, 1097, 0, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1348, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 0, 0, 0, 58, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	122, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 63, 0, 0, 0, 0,
	0, 0, 1206, 1206, 1206, 0, 1206, 0, 0, 0,
	39, 124, 0, 0, 0, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 38, 0, 69, 0, 1031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 1097, 0, 0, 1031, 0, 0, 41, 0, 0,
	0, 0, 42, 0, 0, 0, 0, 75, 210, 0,
	125, 0, 0, 0, 0, 0, 40, 86, 0, 0,
	0, 0, 76, 83, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 43,
	1097, 212, 212, 0, 0, 1097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1094, 77, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 1097, 0, 0,
	0, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1513, 0, 0, 0, 1097, 0, 0,
	1485, 0, 0, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 1097, 0, 0,
	1484, 0, 0, 0, 0, 0, 210, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 78, 0,
	210, 0, 0, 0, 0, 0, 44, 0, 0, 0,
	0, 0, 0, 609, 1097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	47, 149, 81, 0, 82, 212, 45, 0, 0, 210,
	126, 0, 0, 0, 0, 210, 46, 0, 0, 0,
	0, 0, 0, 183, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 1207, 1207, 1490, 50, 0, 0, 0, 120,
	1094, 0, 0, 0, 0, 0, 0, 210, 0, 123,
	210, 0, 210, 0, 210, 0, 210, 210, 1522, 0,
	1093, 1532, 0, 185, 212, 1512, 1514, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 1528, 121, 1529, 0, 0,
	0, 0, 1093, 0, 1499, 1500, 212, 212, 0, 153,
	210, 0, 210, 0, 0, 0, 0, 184, 0, 1093,
	1520, 0, 0, 0, 0, 0, 0, 177, 0, 1505,
	0, 0, 0, 0, 0, 178, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 210, 210, 210, 1530,
	210, 0, 210, 0, 0, 0, 152, 0, 0, 3,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1207, 0, 1207,
	0, 0, 1207, 210, 0, 0, 0, 0, 0, 0,
	1207, 210, 0, 1207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 1097, 1207, 1207, 1207, 0,
	1511, 0, 0, 0, 0, 1097, 1097, 0, 0, 0,
	0, 1097, 0, 0, 1093, 0, 0, 0, 1506, 0,
	0, 0, 1206, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 1206, 0, 0, 0,
	212, 0, 1097, 0, 0, 0, 1206, 1206, 0, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 0, 0, 1206, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0,
	0, 2129, 0, 0, 0, 2130, 0, 1093, 0, 0,
	1093, 0, 0, 0, 0, 0, 1482, 1483, 0, 1515,
	1516, 1517, 1525, 1526, 1527, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 0, 1518, 1513, 0, 1094, 0,
	0, 0, 1031, 1485, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1642, 1484, 0, 0, 0, 0, 0, 0,
	0, 1093, 1504, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 1094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 1508, 1509,
	1510, 210, 210, 210, 0, 0, 0, 1490, 0, 0,
	1642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 0, 0, 0, 0,
	0, 1522, 0, 0, 1532, 0, 0, 0, 1512, 1514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	1529, 210, 0, 0, 0, 210, 0, 1499, 1500, 1207,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 1520, 0, 0, 0, 0, 1031, 0,
	0, 0, 1505, 0, 0, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 0,
	0, 0, 1530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 1519,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 0, 0, 0, 1207, 0, 1207, 0, 0,
	0, 0, 0, 667, 0, 0, 0, 0, 1206, 0,
	0, 0, 668, 1511, 0, 0, 0, 210, 0, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 0,
	0, 1506, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 1206, 0, 0, 689, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 1523, 0, 0,
	670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1206, 1206, 1206, 0, 0, 0, 0, 671,
	1207, 1207, 1207, 0, 1207, 0, 0, 0, 1206, 0,
	0, 0, 0, 0, 1093, 0, 1207, 0, 0, 672,
	0, 0, 673, 0, 0, 0, 0, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502, 1498,
	0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492,
	0, 0, 0, 0, 0, 0, 0, 0, 3246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 1031, 1031, 1518, 1513,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 675, 0, 0,
	0, 1093, 0, 1093, 0, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 692, 1504, 676, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 0, 0, 0, 0, 0,
	677, 0, 0, 678, 0, 0, 0, 0, 0, 686,
	0, 0, 1093, 0, 0, 0, 679, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 1093, 680, 687, 1206,
	0, 0, 0, 0, 0, 681, 0, 0, 0, 210,
	0, 0, 0, 0, 1522, 0, 210, 1532, 683, 0,
	0, 1512, 1514, 682, 0, 0, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 690, 0, 0, 0, 1093,
	0, 1528, 0, 1529, 0, 1031, 685, 0, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 1094, 1093,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	1094, 0, 0, 0, 0, 0, 1093, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 1094, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1206, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 1482, 1483, 1031, 1515, 1516,
	1517, 1525, 1526, 1527, 0, 1031, 0, 0, 0, 0,
	0, 0, 1094, 0, 1518, 1513, 0, 0, 1642, 0,
	1207, 0, 1485, 0, 0, 0, 0, 1531, 0, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1207, 0, 0, 0, 0, 0,
	0, 0, 1484, 0, 1207, 1207, 0, 0, 0, 0,
	210, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 210, 210, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 0, 210, 0, 0, 0,
	0, 2972, 0, 0, 1207, 1207, 0, 1206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1206, 1206, 0,
	0, 0, 0, 1206, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 1094, 0, 0, 1094, 0,
	1522, 1518, 1513, 1532, 1093, 0, 0, 1512, 1514, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 0, 0, 0, 1499, 1500, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 1520, 0, 0, 1501, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 1094,
	0, 0, 0, 0, 0, 210, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 0, 0, 1522, 0, 0,
	1532, 0, 0, 0, 1512, 1514, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 210, 210, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 1523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1520,
	0, 0, 0, 0, 0, 0, 0, 0, 1505, 1094,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 0, 0, 0, 0,
	1521, 0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1511,
	0, 0, 0, 0, 0, 0, 0, 2653, 0, 0,
	0, 0, 0, 0, 0, 0, 1207, 1506, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 1518, 1513,
	0, 210, 0, 1523, 0, 1094, 1485, 0, 0, 0,
	1207, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	1207, 1207, 1207, 0, 0, 1504, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 1207, 0, 0, 0,
	0, 0, 1094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1094, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 2652, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1701, 0, 0, 1520, 0, 0, 1094,
	0, 1094, 0, 0, 0, 1505, 0, 0, 625, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 626, 0, 1718, 1695, 1702, 0, 1685, 1728, 1727,
	0, 0, 1519, 1687, 1686, 0, 0, 0, 0, 0,
	0, 1738, 1739, 0, 0, 0, 0, 0, 0, 0,
	1094, 0, 0, 0, 0, 1094, 627, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 628, 0,
	0, 629, 0, 1729, 1094, 1725, 1724, 1207, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 1723, 653, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 0, 0, 0, 0,
	1523, 0, 0, 0, 0, 0, 0, 1094, 1722, 1720,
	1721, 0, 631, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 632, 0, 0, 633, 655, 1094, 0, 0,
	597, 1697, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1700, 1713, 1715, 1716, 1717, 1712, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	1735, 0, 0, 0, 1094, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 1094, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 1689, 0, 654, 0, 0,
	0, 2649, 0, 0, 0, 636, 0, 0, 0, 0,
	0, 1726, 0, 0, 0, 1698, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 1207,
	637, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 1708, 1706, 1707, 1710, 1709, 0, 0, 638,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 596, 1690, 1691, 1693,
	1694, 0, 0, 0, 0, 0, 639, 0, 0, 0,
	0, 0, 0, 0, 1714, 1692, 0, 0, 0, 640,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 645, 0,
	0, 1688, 0, 0, 1730, 1731, 1732, 1733, 0, 0,
	641, 0, 0, 658, 0, 657, 0, 0, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 0, 0, 1696, 1207, 650, 0, 0, 1703,
	1736, 659, 0, 656, 0, 1207, 1207, 0, 648, 0,
	0, 1207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 1098, 225, 1099,
	1100, 1101, 1094, 1102, 484, 1103, 1104, 1105, 1106, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 1107, 235, 236, 237, 238, 239, 240, 241,
	1108, 1109, 242, 489, 490, 491, 1110, 243, 492, 1111,
	1096, 1112, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 1113, 254, 0, 255, 256, 257, 1114,
	258, 968, 259, 260, 1115, 1116, 1118, 1117, 1119, 1120,
	1121, 261, 262, 263, 264, 265, 266, 493, 494, 1122,
	267, 1123, 269, 268, 1124, 270, 1125, 1126, 271, 272,
	273, 1127, 274, 1128, 275, 276, 1129, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	1130, 217, 1131, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 1132, 294, 1133, 1134, 969,
	295, 296, 1135, 297, 499, 1136, 500, 298, 1137, 299,
	300, 301, 302, 501, 502, 503, 355, 971, 303, 304,
	1138, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	1139, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	1140, 506, 1141, 317, 972, 507, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	1142, 329, 328, 1143, 330, 508, 975, 331, 332, 976,
	1144, 333, 334, 1145, 1146, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 1147, 219, 979, 353,
	1148, 509, 354, 510, 356, 357, 1149, 358, 359, 360,
	1150, 1151, 362, 363, 364, 1152, 1153, 365, 366, 511,
	980, 367, 981, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 1154, 376, 377, 513, 378, 514, 379,
	1155, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 1156, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 1157, 403,
	982, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 1158, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 1159, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 1160,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 1161, 448, 449, 447, 1162, 450, 451, 452,
	453, 454, 282, 455, 1163, 456, 519, 520, 521, 522,
	1164, 463, 1165, 457, 458, 523, 459, 524, 1166, 460,
	461, 462, 0, 464, 465, 1167, 1168, 466, 467, 468,
	469, 470, 472, 1169, 473, 1170, 471, 474, 475, 476,
	525, 526, 527, 1171, 478, 477, 528, 1172, 1173, 1174,
	1175, 479, 480, 529, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 0, 0, 0, 2260, 0, 0,
	0, 0, 0, 0, 0, 2261, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 484, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 1107, 235, 236, 237,
	238, 239, 240, 241, 1108, 1109, 242, 489, 490, 491,
	1110, 243, 492, 1111, 1096, 1112, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1113, 254, 0,
	255, 256, 257, 1114, 258, 968, 259, 260, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 261, 262, 263, 264, 265,
	266, 493, 494, 1122, 267, 1123, 269, 268, 1124, 270,
	1125, 1126, 271, 272, 273, 1127, 274, 1128, 275, 276,
	1129, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 1130, 217, 1131, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 1132,
	294, 1133, 1134, 969, 295, 296, 1135, 297, 499, 1136,
	500, 298, 1137, 299, 300, 301, 302, 501, 502, 503,
	355, 971, 303, 304, 1138, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1139, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 1140, 506, 1141, 317, 972, 507,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1142, 329, 328, 1143, 330, 508,
	975, 331, 332, 976, 1144, 333, 334, 1145, 1146, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	1147, 219, 979, 353, 1148, 509, 354, 510, 356, 357,
	1149, 358, 359, 360, 1150, 1151, 362, 363, 364, 1152,
	1153, 365, 366, 511, 980, 367, 981, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1154, 376, 377,
	513, 378, 514, 379, 1155, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 1156, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 1157, 403, 982, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	1158, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 1159, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 1160, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 1161, 448, 449, 447,
	1162, 450, 451, 452, 453, 454, 282, 455, 1163, 456,
	519, 520, 521, 522, 1164, 463, 1165, 457, 458, 523,
	459, 524, 1166, 460, 461, 462, 0, 464, 465, 1167,
	1168, 466, 467, 468, 469, 470, 472, 1169, 473, 1170,
	471, 474, 475, 476, 525, 526, 527, 1171, 478, 477,
	528, 1172, 1173, 1174, 1175, 479, 480, 529, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 2980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2982, 220, 221,
	222, 223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102,
	484, 1103, 1104, 1105, 1106, 226, 228, 227, 229, 230,
	485, 486, 231, 487, 234, 232, 233, 488, 1107, 235,
	236, 237, 238, 239, 240, 241, 1108, 1109, 242, 489,
	490, 491, 1110, 243, 492, 1111, 1096, 1112, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 1113,
	254, 0, 255, 256, 257, 1114, 258, 968, 259, 260,
	1115, 1116, 1118, 1117, 1119, 1120, 1121, 261, 262, 263,
	264, 265, 266, 493, 494, 1122, 267, 1123, 269, 268,
	1124, 270, 1125, 1126, 271, 272, 273, 1127, 274, 1128,
	275, 276, 1129, 277, 495, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 496, 497, 1130, 217, 1131, 0,
	0, 0, 0, 288, 289, 290, 498, 291, 292, 0,
	293, 1132, 294, 1133, 1134, 969, 295, 296, 1135, 297,
	499, 1136, 500, 298, 1137, 299, 300, 301, 302, 501,
	502, 503, 355, 971, 303, 304, 1138, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 1139, 970, 310, 504,
	312, 311, 313, 314, 315, 505, 1140, 506, 1141, 317,
	972, 507, 973, 318, 319, 320, 974, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 1142, 329, 328, 1143,
	330, 508, 975, 331, 332, 976, 1144, 333, 334, 1145,
	1146, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 347, 345, 977, 348, 349, 352, 351,
	978, 350, 1147, 219, 979, 353, 1148, 509, 354, 510,
	356, 357, 1149, 358, 359, 360, 1150, 1151, 362, 363,
	364, 1152, 1153, 365, 366, 511, 980, 367, 981, 512,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 1154,
	376, 377, 513, 378, 514, 379, 1155, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 515, 388, 389, 1156,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 1157, 403, 982, 404, 405, 406,
	407, 516, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 1158, 425, 426, 420, 422, 423, 424, 421,
	427, 428, 429, 1159, 430, 410, 411, 431, 432, 983,
	433, 434, 517, 435, 436, 1160, 437, 438, 439, 440,
	412, 441, 445, 446, 442, 443, 444, 518, 1161, 448,
	449, 447, 1162, 450, 451, 452, 453, 454, 282, 455,
	1163, 456, 519, 520, 521, 522, 1164, 463, 1165, 457,
	458, 523, 459, 524, 1166, 460, 461, 462, 0, 464,
	465, 1167, 1168, 466, 467, 468, 469, 470, 472, 1169,
	473, 1170, 471, 474, 475, 476, 525, 526, 527, 1171,
	478, 477, 528, 1172, 1173, 1174, 1175, 479, 480, 529,
	481, 482, 483, 0, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3270, 220, 221, 222, 223, 224, 1098,
	225, 1099, 1100, 1101, 0, 1102, 484, 1103, 1104, 1105,
	1106, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 1107, 235, 236, 237, 238, 239,
	240, 241, 1108, 1109, 242, 489, 490, 491, 1110, 243,
	492, 1111, 1096, 1112, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 1113, 254, 0, 255, 256,
	257, 1114, 258, 968, 259, 260, 1115, 1116, 1118, 1117,
	1119, 1120, 1121, 261, 262, 263, 264, 265, 266, 493,
	494, 1122, 267, 1123, 269, 268, 1124, 270, 1125, 1126,
	271, 272, 273, 1127, 274, 1128, 275, 276, 1129, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	496, 497, 1130, 217, 1131, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 1132, 294, 1133,
	1134, 969, 295, 296, 1135, 297, 499, 1136, 500, 298,
	1137, 299, 300, 301, 302, 501, 502, 503, 355, 971,
	303, 304, 1138, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 1139, 970, 310, 504, 312, 311, 313, 314,
	315, 505, 1140, 506, 1141, 317, 972, 507, 973, 318,
	319, 320, 974, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 1142, 329, 328, 1143, 330, 508, 975, 331,
	332, 976, 1144, 333, 334, 1145, 1146, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 977, 348, 349, 352, 351, 978, 350, 1147, 219,
	979, 353, 1148, 509, 354, 510, 356, 357, 1149, 358,
	359, 360, 1150, 1151, 362, 363, 364, 1152, 1153, 365,
	366, 511, 980, 367, 981, 512, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 1154, 376, 377, 513, 378,
	514, 379, 1155, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 1156, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	1157, 403, 982, 404, 405, 406, 407, 516, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 1158, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 1159,
	430, 410, 411, 431, 432, 983, 433, 434, 517, 435,
	436, 1160, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 518, 1161, 448, 449, 447, 1162, 450,
	451, 452, 453, 454, 282, 455, 1163, 456, 519, 520,
	521, 522, 1164, 463, 1165, 457, 458, 523, 459, 524,
	1166, 460, 461, 462, 0, 464, 465, 1167, 1168, 466,
	467, 468, 469, 470, 472, 1169, 473, 1170, 471, 474,
	475, 476, 525, 526, 527, 1171, 478, 477, 528, 1172,
	1173, 1174, 1175, 479, 480, 529, 481, 482, 483, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3398, 0, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 484, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 1107, 235, 236, 237,
	238, 239, 240, 241, 1108, 1109, 242, 489, 490, 491,
	1110, 243, 492, 1111, 1096, 1112, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1113, 254, 0,
	255, 256, 257, 1114, 258, 968, 259, 260, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 261, 262, 263, 264, 265,
	266, 493, 494, 1122, 267, 1123, 269, 268, 1124, 270,
	1125, 1126, 271, 272, 273, 1127, 274, 1128, 275, 276,
	1129, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 1130, 217, 1131, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 1132,
	294, 1133, 1134, 969, 295, 296, 1135, 297, 499, 1136,
	500, 298, 1137, 299, 300, 301, 302, 501, 502, 503,
	355, 971, 303, 304, 1138, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1139, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 1140, 506, 1141, 317, 972, 507,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1142, 329, 328, 1143, 330, 508,
	975, 331, 332, 976, 1144, 333, 334, 1145, 1146, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	1147, 219, 979, 353, 1148, 509, 354, 510, 356, 357,
	1149, 358, 359, 360, 1150, 1151, 362, 363, 364, 1152,
	1153, 365, 366, 511, 980, 367, 981, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1154, 376, 377,
	513, 378, 514, 379, 1155, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 1156, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 1157, 403, 982, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	1158, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 1159, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 1160, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 1161, 448, 449, 447,
	1162, 450, 451, 452, 453, 454, 282, 455, 1163, 456,
	519, 520, 521, 522, 1164, 463, 1165, 457, 458, 523,
	459, 524, 1166, 460, 461, 462, 0, 464, 465, 1167,
	1168, 466, 467, 468, 469, 470, 472, 1169, 473, 1170,
	471, 474, 475, 476, 525, 526, 527, 1171, 478, 477,
	528, 1172, 1173, 1174, 1175, 479, 480, 529, 481, 482,
	483, 1091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3323, 0, 220, 221,
	222, 223, 224, 1098, 225, 1099, 1100, 1101, 0, 1102,
	484, 1103, 1104, 1105, 1106, 226, 228, 227, 229, 230,
	485, 486, 231, 487, 234, 232, 233, 488, 1107, 235,
	236, 237, 238, 239, 240, 241, 1108, 1109, 242, 489,
	490, 491, 1110, 243, 492, 1111, 1096, 1112, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 1113,
	254, 0, 255, 256, 257, 1114, 258, 968, 259, 260,
	1115, 1116, 1118, 1117, 1119, 1120, 1121, 261, 262, 263,
	264, 265, 266, 493, 494, 1122, 267, 1123, 269, 268,
	1124, 270, 1125, 1126, 271, 272, 273, 1127, 274, 1128,
	275, 276, 1129, 277, 495, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 496, 497, 1130, 217, 1131, 0,
	0, 0, 0, 288, 289, 290, 498, 291, 292, 0,
	293, 1132, 294, 1133, 1134, 969, 295, 296, 1135, 297,
	499, 1136, 500, 298, 1137, 299, 300, 301, 302, 501,
	502, 503, 355, 971, 303, 304, 1138, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 1139, 970, 310, 504,
	312, 311, 313, 314, 315, 505, 1140, 506, 1141, 317,
	972, 507, 973, 318, 319, 320, 974, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 1142, 329, 328, 1143,
	330, 508, 975, 331, 332, 976, 1144, 333, 334, 1145,
	1146, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 347, 345, 977, 348, 349, 352, 351,
	978, 350, 1147, 219, 979, 353, 1148, 509, 354, 510,
	356, 357, 1149, 358, 359, 360, 1150, 1151, 362, 363,
	364, 1152, 1153, 365, 366, 511, 980, 367, 981, 512,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 1154,
	376, 377, 513, 378, 514, 379, 1155, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 515, 388, 389, 1156,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 1157, 403, 982, 404, 405, 406,
	407, 516, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 1158, 425, 426, 420, 422, 423, 424, 421,
	427, 428, 429, 1159, 430, 410, 411, 431, 432, 983,
	433, 434, 517, 435, 436, 1160, 437, 438, 439, 440,
	412, 441, 445, 446, 442, 443, 444, 518, 1161, 448,
	449, 447, 1162, 450, 451, 452, 453, 454, 282, 455,
	1163, 456, 519, 520, 521, 522, 1164, 463, 1165, 457,
	458, 523, 459, 524, 1166, 460, 461, 462, 0, 464,
	465, 1167, 1168, 466, 467, 468, 469, 470, 472, 1169,
	473, 1170, 471, 474, 475, 476, 525, 526, 527, 1171,
	478, 477, 528, 1172, 1173, 1174, 1175, 479, 480, 529,
	481, 482, 483, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3204, 0,
	220, 221, 222, 223, 224, 1098, 225, 1099, 1100, 1101,
	0, 1102, 484, 1103, 1104, 1105, 1106, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	1107, 235, 236, 237, 238, 239, 240, 241, 1108, 1109,
	242, 489, 490, 491, 1110, 243, 492, 1111, 1096, 1112,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 1113, 254, 0, 255, 256, 257, 1114, 258, 968,
	259, 260, 1115, 1116, 1118, 1117, 1119, 1120, 1121, 261,
	262, 263, 264, 265, 266, 493, 494, 1122, 267, 1123,
	269, 268, 1124, 270, 1125, 1126, 271, 272, 273, 1127,
	274, 1128, 275, 276, 1129, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 1130, 217,
	1131, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 1132, 294, 1133, 1134, 969, 295, 296,
	1135, 297, 499, 1136, 500, 298, 1137, 299, 300, 301,
	302, 501, 502, 503, 355, 971, 303, 304, 1138, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 1139, 970,
	310, 504, 312, 311, 313, 314, 315, 505, 1140, 506,
	1141, 317, 972, 507, 973, 318, 319, 320, 974, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1142, 329,
	328, 1143, 330, 508, 975, 331, 332, 976, 1144, 333,
	334, 1145, 1146, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 977, 348, 349,
	352, 351, 978, 350, 1147, 219, 979, 353, 1148, 509,
	354, 510, 356, 357, 1149, 358, 359, 360, 1150, 1151,
	362, 363, 364, 1152, 1153, 365, 366, 511, 980, 367,
	981, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 1154, 376, 377, 513, 378, 514, 379, 1155, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 1156, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 1157, 403, 982, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 1158, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 1159, 430, 410, 411, 431,
	432, 983, 433, 434, 517, 435, 436, 1160, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	1161, 448, 449, 447, 1162, 450, 451, 452, 453, 454,
	282, 455, 1163, 456, 519, 520, 521, 522, 1164, 463,
	1165, 457, 458, 523, 459, 524, 1166, 460, 461, 462,
	0, 464, 465, 1167, 1168, 466, 467, 468, 469, 470,
	472, 1169, 473, 1170, 471, 474, 475, 476, 525, 526,
	527, 1171, 478, 477, 528, 1172, 1173, 1174, 1175, 479,
	480, 529, 481, 482, 483, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2998, 0, 220, 221, 222, 223, 224, 1098, 225, 1099,
	1100, 1101, 0, 1102, 484, 1103, 1104, 1105, 1106, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 1107, 235, 236, 237, 238, 239, 240, 241,
	1108, 1109, 242, 489, 490, 491, 1110, 243, 492, 1111,
	1096, 1112, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 1113, 254, 0, 255, 256, 257, 1114,
	258, 968, 259, 260, 1115, 1116, 1118, 1117, 1119, 1120,
	1121, 261, 262, 263, 264, 265, 266, 493, 494, 1122,
	267, 1123, 269, 268, 1124, 270, 1125, 1126, 271, 272,
	273, 1127, 274, 1128, 275, 276, 1129, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	1130, 217, 1131, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 1132, 294, 1133, 1134, 969,
	295, 296, 1135, 297, 499, 1136, 500, 298, 1137, 299,
	300, 301, 302, 501, 502, 503, 355, 971, 303, 304,
	1138, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	1139, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	1140, 506, 1141, 317, 972, 507, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	1142, 329, 328, 1143, 330, 508, 975, 331, 332, 976,
	1144, 333, 334, 1145, 1146, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 1147, 219, 979, 353,
	1148, 509, 354, 510, 356, 357, 1149, 358, 359, 360,
	1150, 1151, 362, 363, 364, 1152, 1153, 365, 366, 511,
	980, 367, 981, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 1154, 376, 377, 513, 378, 514, 379,
	1155, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 1156, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 1157, 403,
	982, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 1158, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 1159, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 1160,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 1161, 448, 449, 447, 1162, 450, 451, 452,
	453, 454, 282, 455, 1163, 456, 519, 520, 521, 522,
	1164, 463, 1165, 457, 458, 523, 459, 524, 1166, 460,
	461, 462, 0, 464, 465, 1167, 1168, 466, 467, 468,
	469, 470, 472, 1169, 473, 1170, 471, 474, 475, 476,
	525, 526, 527, 1171, 478, 477, 528, 1172, 1173, 1174,
	1175, 479, 480, 529, 481, 482, 483, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2849, 0, 220, 221, 222, 223, 224, 1098,
	225, 1099, 1100, 1101, 0, 1102, 484, 1103, 1104, 1105,
	1106, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 1107, 235, 236, 237, 238, 239,
	240, 241, 1108, 1109, 242, 489, 490, 491, 1110, 243,
	492, 1111, 1096, 1112, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 1113, 254, 0, 255, 256,
	257, 1114, 258, 968, 259, 260, 1115, 1116, 1118, 1117,
	1119, 1120, 1121, 261, 262, 263, 264, 265, 266, 493,
	494, 1122, 267, 1123, 269, 268, 1124, 270, 1125, 1126,
	271, 272, 273, 1127, 274, 1128, 275, 276, 1129, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	496, 497, 1130, 217, 1131, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 1132, 294, 1133,
	1134, 969, 295, 296, 1135, 297, 499, 1136, 500, 298,
	1137, 299, 300, 301, 302, 501, 502, 503, 355, 971,
	303, 304, 1138, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 1139, 970, 310, 504, 312, 311, 313, 314,
	315, 505, 1140, 506, 1141, 317, 972, 507, 973, 318,
	319, 320, 974, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 1142, 329, 328, 1143, 330, 508, 975, 331,
	332, 976, 1144, 333, 334, 1145, 1146, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 977, 348, 349, 352, 351, 978, 350, 1147, 219,
	979, 353, 1148, 509, 354, 510, 356, 357, 1149, 358,
	359, 360, 1150, 1151, 362, 363, 364, 1152, 1153, 365,
	366, 511, 980, 367, 981, 512, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 1154, 376, 377, 513, 378,
	514, 379, 1155, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 1156, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	1157, 403, 982, 404, 405, 406, 407, 516, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 1158, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 1159,
	430, 410, 411, 431, 432, 983, 433, 434, 517, 435,
	436, 1160, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 518, 1161, 448, 449, 447, 1162, 450,
	451, 452, 453, 454, 282, 455, 1163, 456, 519, 520,
	521, 522, 1164, 463, 1165, 457, 458, 523, 459, 524,
	1166, 460, 461, 462, 0, 464, 465, 1167, 1168, 466,
	467, 468, 469, 470, 472, 1169, 473, 1170, 471, 474,
	475, 476, 525, 526, 527, 1171, 478, 477, 528, 1172,
	1173, 1174, 1175, 479, 480, 529, 481, 482, 483, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2153, 0, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 484, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 1107, 235, 236, 237,
	238, 239, 240, 241, 1108, 1109, 242, 489, 490, 491,
	1110, 243, 492, 1111, 1096, 1112, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1113, 254, 0,
	255, 256, 257, 1114, 258, 968, 259, 260, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 261, 262, 263, 264, 265,
	266, 493, 494, 1122, 267, 1123, 269, 268, 1124, 270,
	1125, 1126, 271, 272, 273, 1127, 274, 1128, 275, 276,
	1129, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 1130, 217, 1131, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 1132,
	294, 1133, 1134, 969, 295, 296, 1135, 297, 499, 1136,
	500, 298, 1137, 299, 300, 301, 302, 501, 502, 503,
	355, 971, 303, 304, 1138, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1139, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 1140, 506, 1141, 317, 972, 507,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1142, 329, 328, 1143, 330, 508,
	975, 331, 332, 976, 1144, 333, 334, 1145, 1146, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	1147, 219, 979, 353, 1148, 509, 354, 510, 356, 357,
	1149, 358, 359, 360, 1150, 1151, 362, 363, 364, 1152,
	1153, 365, 366, 511, 980, 367, 981, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1154, 376, 377,
	513, 378, 514, 379, 1155, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 1156, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 1157, 403, 982, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	1158, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 1159, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 1160, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 1161, 448, 449, 447,
	1162, 450, 451, 452, 453, 454, 282, 455, 1163, 456,
	519, 520, 521, 522, 1164, 463, 1165, 457, 458, 523,
	459, 524, 1166, 460, 461, 462, 0, 464, 465, 1167,
	1168, 466, 467, 468, 469, 470, 472, 1169, 473, 1170,
	471, 474, 475, 476, 525, 526, 527, 1171, 478, 477,
	528, 1172, 1173, 1174, 1175, 479, 480, 529, 481, 482,
	483, 1188, 0, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	220, 221, 222, 223, 224, 1098, 225, 1099, 1100, 1101,
	0, 1102, 484, 1103, 1104, 1105, 1106, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	1107, 235, 236, 237, 238, 239, 240, 241, 1108, 1109,
	242, 489, 490, 491, 1110, 243, 492, 1111, 1096, 1112,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 1113, 254, 0, 255, 256, 257, 1114, 258, 968,
	259, 260, 1115, 1116, 1118, 1117, 1119, 1120, 1121, 261,
	262, 263, 264, 265, 266, 493, 494, 1122, 267, 1123,
	269, 268, 1124, 270, 1125, 1126, 271, 272, 273, 1127,
	274, 1128, 275, 276, 1129, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 1130, 217,
	1131, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 1132, 294, 1133, 1134, 969, 295, 296,
	1135, 297, 499, 1136, 500, 298, 1137, 299, 300, 301,
	302, 501, 502, 503, 355, 971, 303, 304, 1138, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 1139, 970,
	310, 504, 312, 311, 313, 314, 315, 505, 1140, 506,
	1141, 317, 972, 507, 973, 318, 319, 320, 974, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1142, 329,
	328, 1143, 330, 508, 975, 331, 332, 976, 1144, 333,
	334, 1145, 1146, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 977, 348, 349,
	352, 351, 978, 350, 1147, 219, 979, 353, 1148, 509,
	354, 510, 356, 357, 1149, 358, 359, 360, 1150, 1151,
	362, 363, 364, 1152, 1153, 365, 366, 511, 980, 367,
	981, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 1154, 376, 377, 513, 378, 514, 379, 1155, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 1156, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 1157, 403, 982, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 1158, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 1159, 430, 410, 411, 431,
	432, 983, 433, 434, 517, 435, 436, 1160, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	1161, 448, 449, 447, 1162, 450, 451, 452, 453, 454,
	282, 455, 1163, 456, 519, 520, 521, 522, 1164, 463,
	1165, 457, 458, 523, 459, 524, 1166, 460, 461, 462,
	0, 464, 465, 1167, 1168, 466, 467, 468, 469, 470,
	472, 1169, 473, 1170, 471, 474, 475, 476, 525, 526,
	527, 1171, 478, 477, 528, 1172, 1173, 1174, 1175, 479,
	480, 529, 481, 482, 483, 1088, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 1098,
	225, 1099, 1100, 1101, 0, 1102, 484, 1103, 1104, 1105,
	1106, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 1107, 235, 236, 237, 238, 239,
	240, 241, 1108, 1109, 242, 489, 490, 491, 1110, 243,
	492, 1111, 1096, 1112, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 1113, 254, 0, 255, 256,
	257, 1114, 258, 968, 259, 260, 1115, 1116, 1118, 1117,
	1119, 1120, 1121, 261, 262, 263, 264, 265, 266, 493,
	494, 1122, 267, 1123, 269, 268, 1124, 270, 1125, 1126,
	271, 272, 273, 1127, 274, 1128, 275, 276, 1129, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	496, 497, 1130, 217, 1131, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 1132, 294, 1133,
	1134, 969, 295, 296, 1135, 297, 499, 1136, 500, 298,
	1137, 299, 300, 301, 302, 501, 502, 503, 355, 971,
	303, 304, 1138, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 1139, 970, 310, 504, 312, 311, 313, 314,
	315, 505, 1140, 506, 1141, 317, 972, 507, 973, 318,
	319, 320, 974, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 1142, 329, 328, 1143, 330, 508, 975, 331,
	332, 976, 1144, 333, 334, 1145, 1146, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 977, 348, 349, 352, 351, 978, 350, 1147, 219,
	979, 353, 1148, 509, 354, 510, 356, 357, 1149, 358,
	359, 360, 1150, 1151, 362, 363, 364, 1152, 1153, 365,
	366, 511, 980, 367, 981, 512, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 1154, 376, 377, 513, 378,
	514, 379, 1155, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 1156, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	1157, 403, 982, 404, 405, 406, 407, 516, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 1158, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 1159,
	430, 410, 411, 431, 432, 983, 433, 434, 517, 435,
	436, 1160, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 518, 1161, 448, 449, 447, 1162, 450,
	451, 452, 453, 454, 282, 455, 1163, 456, 519, 520,
	521, 522, 1164, 463, 1165, 457, 458, 523, 459, 524,
	1166, 460, 461, 462, 0, 464, 465, 1167, 1168, 466,
	467, 468, 469, 470, 472, 1169, 473, 1170, 471, 474,
	475, 476, 525, 526, 527, 1171, 478, 477, 528, 1172,
	1173, 1174, 1175, 479, 480, 529, 481, 482, 483, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 1098, 225, 1099, 1100, 1101, 0, 1102, 484, 1103,
	1104, 1105, 1106, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 1107, 235, 236, 237,
	238, 239, 240, 241, 1108, 1109, 242, 489, 490, 491,
	1110, 243, 492, 1111, 1096, 1112, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 1113, 254, 0,
	255, 256, 257, 1114, 258, 968, 259, 260, 1115, 1116,
	1118, 1117, 1119, 1120, 1121, 261, 262, 263, 264, 265,
	266, 493, 494, 1122, 267, 1123, 269, 268, 1124, 270,
	1125, 1126, 271, 272, 273, 1127, 274, 1128, 275, 276,
	1129, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 1130, 217, 1131, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 1132,
	294, 1133, 1134, 969, 295, 296, 1135, 297, 499, 1136,
	500, 298, 1137, 299, 300, 301, 302, 501, 502, 503,
	355, 971, 303, 304, 1138, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 1139, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 1140, 506, 1141, 317, 972, 507,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1142, 329, 328, 1143, 330, 508,
	975, 331, 332, 976, 1144, 333, 334, 1145, 1146, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	1147, 219, 979, 353, 1148, 509, 354, 510, 356, 357,
	1149, 358, 359, 360, 1150, 1151, 362, 363, 364, 1152,
	1153, 365, 366, 511, 980, 367, 981, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 1154, 376, 377,
	513, 378, 514, 379, 1155, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 1156, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 1157, 403, 982, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	1158, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 1159, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 1160, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 1161, 448, 449, 447,
	1162, 450, 451, 452, 453, 454, 282, 455, 1163, 456,
	519, 520, 521, 522, 1164, 463, 1165, 457, 458, 523,
	459, 524, 1166, 460, 461, 462, 0, 464, 465, 1167,
	1168, 466, 467, 468, 469, 470, 472, 1169, 473, 1170,
	471, 474, 475, 476, 525, 526, 527, 1171, 478, 477,
	528, 1172, 1173, 1174, 1175, 479, 480, 529, 481, 482,
	483, 2128, 0, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 2125, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 236, 894, 893, 239, 240, 241, 884, 958,
	242, 995, 996, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 937, 266, 930, 929, 855, 267, 0,
	269, 268, 0, 270, 2126, 0, 271, 928, 273, 0,
	274, 0, 275, 276, 0, 277, 861, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 873, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 927, 925,
	926, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 883, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 904, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 916, 907, 918, 920, 921, 922, 917, 0, 909,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 942,
	943, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 896, 345, 977, 348, 349,
	352, 351, 978, 350, 852, 219, 979, 353, 874, 963,
	354, 931, 356, 357, 0, 905, 359, 906, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 924, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 862, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 897, 898, 900,
	901, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 919, 899, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 967, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 895, 0, 456, 938, 939, 940, 941, 0, 463,
	0, 457, 458, 991, 459, 992, 872, 460, 461, 462,
	0, 464, 465, 0, 856, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 903, 474, 475, 476, 525, 935,
	985, 2124, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 853, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 849, 850,
	2127, 0, 0, 0, 0, 0, 0, 878, 2123, 0,
	842, 876, 908, 866, 867, 868, 864, 865, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 882, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 923, 902, 934, 234, 892, 933, 932, 0,
	235, 236, 894, 893, 239, 240, 241, 884, 958, 242,
	995, 996, 491, 0, 243, 965, 0, 946, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 949, 947, 948, 955, 951, 950, 954, 261, 262,
	263, 264, 937, 266, 930, 929, 855, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 928, 273, 0, 274,
	0, 275, 276, 0, 277, 861, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 927, 925, 926,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 993, 0, 883, 298, 0, 299, 300, 301, 302,
	960, 961, 964, 355, 971, 303, 304, 0, 305, 306,
	904, 0, 0, 218, 307, 309, 316, 0, 970, 310,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	317, 972, 962, 973, 318, 319, 320, 974, 942, 943,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 994, 975, 331, 332, 976, 0, 333, 334,
	953, 952, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 896, 345, 977, 348, 349, 352,
	351, 978, 350, 852, 219, 979, 353, 874, 963, 354,
	931, 356, 357, 0, 905, 359, 906, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	988, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 989, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 924, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 862, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 183, 425, 426, 897, 898, 900, 901,
	421, 427, 428, 429, 956, 430, 410, 411, 431, 432,
	983, 433, 434, 919, 899, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 967, 442, 443, 444, 990, 0,
	448, 449, 447, 185, 450, 451, 452, 453, 454, 282,
	895, 0, 456, 938, 939, 940, 941, 0, 463, 0,
	457, 458, 991, 459, 992, 872, 460, 461, 462, 0,
	464, 465, 0, 856, 466, 467, 468, 469, 470, 472,
	957, 473, 0, 903, 474, 475, 476, 1346, 935, 985,
	0, 478, 477, 528, 0, 0, 0, 177, 479, 480,
	529, 481, 482, 483, 853, 178, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 864, 865, 877, 1557, 1555, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 236, 894,
	893, 239, 240, 241, 884, 958, 242, 995, 996, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 937,
	266, 930, 929, 855, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 928, 273, 0, 274, 0, 275, 276,
	0, 277, 861, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 927, 925, 926, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	883, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 904, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 942, 943, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 896, 345, 977, 348, 349, 352, 351, 978, 350,
	852, 219, 979, 353, 874, 963, 354, 931, 356, 357,
	0, 905, 359, 906, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 924, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 862,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	183, 425, 426, 897, 898, 900, 901, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	919, 899, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 967, 442, 443, 444, 990, 0, 448, 449, 447,
	185, 450, 451, 452, 453, 454, 282, 895, 0, 456,
	938, 939, 940, 941, 0, 463, 0, 457, 458, 991,
	459, 992, 872, 460, 461, 462, 0, 464, 465, 0,
	856, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	903, 474, 475, 476, 1346, 935, 985, 0, 478, 477,
	528, 0, 0, 0, 177, 479, 480, 529, 481, 482,
	483, 853, 178, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 849, 850, 908, 866, 867, 868,
	864, 865, 877, 1557, 2596, 0, 0, 876, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 959, 882, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 923, 902, 934, 234,
	892, 933, 932, 0, 235, 236, 894, 893, 239, 240,
	241, 884, 958, 242, 995, 996, 491, 0, 243, 965,
	0, 946, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 968, 259, 260, 949, 947, 948, 955, 951,
	950, 954, 261, 262, 263, 264, 937, 266, 930, 929,
	855, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	928, 273, 0, 274, 0, 275, 276, 0, 277, 861,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 927, 925, 926, 0, 293, 0, 294, 0, 0,
	969, 295, 296, 0, 297, 993, 0, 883, 298, 0,
	299, 300, 301, 302, 960, 961, 964, 355, 971, 303,
	304, 0, 305, 306, 904, 0, 0, 218, 307, 309,
	316, 0, 970, 310, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 317, 972, 962, 973, 318, 319,
	320, 974, 942, 943, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 994, 975, 331, 332,
	976, 0, 333, 334, 953, 952, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 896, 345,
	977, 348, 349, 352, 351, 978, 350, 852, 219, 979,
	353, 874, 963, 354, 931, 356, 357, 0, 905, 359,
	906, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 980, 367, 981, 988, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 989, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 924, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 982, 404, 405, 406, 407, 862, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 183, 425, 426,
	897, 898, 900, 901, 421, 427, 428, 429, 956, 430,
	410, 411, 431, 432, 983, 433, 434, 919, 899, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 967, 442,
	443, 444, 990, 0, 448, 449, 447, 185, 450, 451,
	452, 453, 454, 282, 895, 0, 456, 938, 939, 940,
	941, 0, 463, 0, 457, 458, 991, 459, 992, 872,
	460, 461, 462, 0, 464, 465, 0, 856, 466, 467,
	468, 469, 470, 472, 957, 473, 0, 903, 474, 475,
	476, 1346, 935, 985, 0, 478, 477, 528, 0, 0,
	0, 177, 479, 480, 529, 481, 482, 483, 853, 178,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 908, 866, 867, 868, 864, 865, 877,
	1557, 1555, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 923, 902, 934, 234, 892, 933, 932,
	2222, 235, 236, 894, 893, 239, 240, 241, 884, 958,
	242, 995, 996, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 937, 266, 930, 929, 855, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 928, 273, 0,
	274, 0, 275, 276, 0, 277, 861, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 873, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 927, 925,
	926, 0, 293, 0, 294, 0, 2227, 969, 295, 296,
	0, 297, 993, 0, 883, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 904, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 916, 907, 918, 920, 921, 922, 917, 0, 909,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 942,
	943, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 2223, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 896, 345, 977, 348, 349,
	352, 351, 978, 350, 852, 219, 979, 353, 874, 963,
	354, 931, 356, 357, 0, 905, 359, 906, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 924, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 862, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 897, 898, 900,
	901, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 919, 899, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 967, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 895, 0, 456, 938, 939, 940, 941, 0, 463,
	2224, 457, 458, 991, 459, 992, 872, 460, 461, 462,
	0, 464, 465, 0, 856, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 903, 474, 475, 476, 525, 935,
	985, 0, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 853, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 849, 850,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 0,
	2181, 876, 908, 866, 867, 868, 864, 865, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 882, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 923, 902, 934, 234, 892, 933, 932, 0,
	235, 236, 894, 893, 239, 240, 241, 884, 958, 242,
	995, 996, 491, 0, 243, 965, 0, 946, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 949, 947, 948, 955, 951, 950, 954, 261, 262,
	263, 264, 937, 266, 930, 929, 855, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 928, 273, 0, 274,
	0, 275, 276, 0, 277, 861, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 927, 925, 926,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 993, 0, 883, 298, 0, 299, 300, 301, 302,
	960, 961, 964, 355, 971, 303, 304, 0, 305, 306,
	904, 0, 0, 218, 307, 309, 316, 0, 970, 310,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	317, 972, 962, 973, 318, 319, 320, 974, 942, 943,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 994, 975, 331, 332, 976, 0, 333, 334,
	953, 952, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 896, 345, 977, 348, 349, 352,
	351, 978, 350, 852, 219, 979, 353, 874, 963, 354,
	931, 356, 357, 0, 905, 359, 906, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	988, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 989, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 924, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 862, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 897, 898, 900, 901,
	421, 427, 428, 429, 956, 430, 410, 411, 431, 432,
	983, 433, 434, 919, 899, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 967, 442, 443, 444, 990, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	895, 0, 456, 938, 939, 940, 941, 0, 463, 0,
	457, 458, 991, 459, 992, 872, 460, 461, 462, 0,
	464, 465, 0, 856, 466, 467, 468, 469, 470, 472,
	957, 473, 0, 903, 474, 475, 476, 525, 935, 985,
	0, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 2179, 0, 2178,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 260,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 971, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	972, 962, 973, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 976, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 979, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 983,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 464,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 853, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 0, 849, 850, 0, 0,
	0, 0, 0, 0, 0, 878, 2176, 0, 2175, 876,
	908, 866, 867, 868, 864, 865, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 959,
	882, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	923, 902, 934, 234, 892, 933, 932, 0, 235, 236,
	894, 893, 239, 240, 241, 884, 958, 242, 995, 996,
	491, 0, 243, 965, 0, 946, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 949,
	947, 948, 955, 951, 950, 954, 261, 262, 263, 264,
	937, 266, 930, 929, 855, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 928, 273, 0, 274, 0, 275,
	276, 0, 277, 861, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 927, 925, 926, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 993,
	0, 883, 298, 0, 299, 300, 301, 302, 960, 961,
	964, 355, 971, 303, 304, 0, 305, 306, 904, 0,
	0, 218, 307, 309, 316, 0, 970, 310, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 317, 972,
	962, 973, 318, 319, 320, 974, 942, 943, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	994, 975, 331, 332, 976, 0, 333, 334, 953, 952,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 896, 345, 977, 348, 349, 352, 351, 978,
	350, 852, 219, 979, 353, 874, 963, 354, 931, 356,
	357, 0, 905, 359, 906, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 988, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 989, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 924, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	862, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 897, 898, 900, 901, 421, 427,
	428, 429, 956, 430, 410, 411, 431, 432, 983, 433,
	434, 919, 899, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 967, 442, 443, 444, 990, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 895, 0,
	456, 938, 939, 940, 941, 0, 463, 0, 457, 458,
	991, 459, 992, 872, 460, 461, 462, 0, 464, 465,
	0, 856, 466, 467, 468, 469, 470, 472, 957, 473,
	0, 903, 474, 475, 476, 525, 935, 985, 0, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 0, 0, 0,
	0, 0, 0, 0, 878, 2173, 0, 2172, 876, 908,
	866, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 236, 894,
	893, 239, 240, 241, 884, 958, 242, 995, 996, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 937,
	266, 930, 929, 855, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 928, 273, 0, 274, 0, 275, 276,
	0, 277, 861, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 927, 925, 926, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	883, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 904, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 942, 943, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 896, 345, 977, 348, 349, 352, 351, 978, 350,
	852, 219, 979, 353, 874, 963, 354, 931, 356, 357,
	0, 905, 359, 906, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 924, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 862,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 897, 898, 900, 901, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	919, 899, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 967, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 895, 0, 456,
	938, 939, 940, 941, 0, 463, 0, 457, 458, 991,
	459, 992, 872, 460, 461, 462, 0, 464, 465, 0,
	856, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	903, 474, 475, 476, 525, 935, 985, 0, 478, 477,
	528, 0, 0, 0, 0, 479, 480, 529, 481, 482,
	483, 853, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 849, 850, 0, 0, 0, 0,
	0, 0, 0, 878, 2170, 0, 1416, 876, 908, 866,
	867, 868, 864, 865, 877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 959, 882, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 923, 902,
	934, 234, 892, 933, 932, 0, 235, 236, 894, 893,
	239, 240, 241, 884, 958, 242, 995, 996, 491, 0,
	243, 965, 0, 946, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 949, 947, 948,
	955, 951, 950, 954, 261, 262, 263, 264, 937, 266,
	930, 929, 855, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 928, 273, 0, 274, 0, 275, 276, 0,
	277, 861, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 927, 925, 926, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 993, 0, 883,
	298, 0, 299, 300, 301, 302, 960, 961, 964, 355,
	971, 303, 304, 0, 305, 306, 904, 0, 0, 218,
	307, 309, 316, 0, 970, 310, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 317, 972, 962, 973,
	318, 319, 320, 974, 942, 943, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 994, 975,
	331, 332, 976, 0, 333, 334, 953, 952, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	896, 345, 977, 348, 349, 352, 351, 978, 350, 852,
	219, 979, 353, 874, 963, 354, 931, 356, 357, 0,
	905, 359, 906, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 988, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 989,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 924, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 862, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 897, 898, 900, 901, 421, 427, 428, 429,
	956, 430, 410, 411, 431, 432, 983, 433, 434, 919,
	899, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	967, 442, 443, 444, 990, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 895, 0, 456, 938,
	939, 940, 941, 0, 463, 0, 457, 458, 991, 459,
	992, 872, 460, 461, 462, 0, 464, 465, 0, 856,
	466, 467, 468, 469, 470, 472, 957, 473, 0, 903,
	474, 475, 476, 525, 935, 985, 0, 478, 477, 528,
	1415, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 0, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 845, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 485, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 236, 894, 893, 239,
	240, 241, 884, 958, 242, 995, 996, 491, 0, 243,
	965, 0, 946, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 949, 947, 948, 955,
	951, 950, 954, 261, 262, 263, 264, 937, 266, 930,
	929, 855, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 928, 273, 0, 274, 0, 275, 276, 0, 277,
	861, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	986, 987, 873, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 927, 925, 926, 0, 293, 0, 294, 0,
	0, 969, 295, 296, 0, 297, 993, 0, 883, 298,
	0, 299, 300, 301, 302, 960, 961, 964, 355, 971,
	303, 304, 0, 305, 306, 904, 0, 0, 218, 307,
	309, 316, 0, 970, 310, 916, 907, 918, 920, 921,
	922, 917, 0, 909, 0, 317, 972, 962, 973, 318,
	319, 320, 974, 942, 943, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 994, 975, 331,
	332, 976, 0, 333, 334, 953, 952, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 896,
	345, 977, 348, 349, 352, 351, 978, 350, 852, 219,
	979, 353, 874, 963, 354, 931, 356, 357, 0, 905,
	359, 906, 857, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 988, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 989, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 924, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 862, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 897, 898, 900, 901, 421, 427, 428, 429, 956,
	430, 410, 411, 431, 432, 983, 433, 434, 919, 899,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 967,
	442, 443, 444, 990, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 895, 0, 456, 938, 939,
	940, 941, 0, 463, 0, 457, 458, 991, 459, 992,
	872, 460, 461, 462, 0, 464, 465, 0, 856, 466,
	467, 468, 469, 470, 472, 957, 473, 0, 903, 474,
	475, 476, 525, 935, 985, 0, 478, 477, 528, 0,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 853,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 849, 850, 908, 866, 867, 868, 864, 865,
	877, 878, 0, 0, 0, 876, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 959, 882, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 923, 902, 934, 234, 892, 933,
	932, 0, 235, 236, 894, 893, 239, 240, 241, 884,
	958, 242, 995, 996, 491, 0, 243, 965, 0, 946,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 3620, 257, 0, 258,
	968, 259, 260, 949, 947, 948, 955, 951, 950, 954,
	261, 262, 263, 264, 937, 266, 930, 929, 855, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 928, 273,
	0, 274, 0, 275, 276, 0, 277, 861, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 927,
	925, 926, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 993, 0, 883, 298, 0, 299, 300,
	301, 302, 960, 961, 964, 355, 971, 303, 304, 0,
	305, 306, 904, 0, 0, 218, 307, 309, 316, 0,
	970, 310, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 317, 972, 962, 973, 318, 319, 320, 974,
	942, 943, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 994, 975, 331, 332, 976, 0,
	333, 334, 953, 952, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 896, 345, 977, 348,
	349, 352, 351, 978, 350, 852, 219, 979, 353, 874,
	963, 354, 931, 356, 357, 0, 905, 359, 906, 857,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 988, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 989, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 924,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 862, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 897, 898,
	900, 901, 421, 427, 428, 429, 956, 430, 410, 411,
	431, 432, 983, 433, 434, 919, 899, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 967, 442, 443, 444,
	990, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 895, 0, 456, 938, 939, 940, 941, 0,
	463, 0, 457, 458, 991, 459, 992, 872, 460, 461,
	462, 0, 464, 465, 0, 856, 466, 467, 468, 469,
	470, 472, 957, 473, 0, 903, 474, 475, 476, 525,
	935, 985, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 908, 866, 867, 868, 864, 865, 877, 878, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 3456, 257, 0, 258, 968, 259, 260,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 971, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	972, 962, 973, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 976, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 979, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 857, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 983,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 464,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 853, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 0, 849, 850, 908, 866,
	867, 868, 864, 865, 877, 878, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 959, 882, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 923, 902,
	934, 234, 892, 933, 932, 0, 235, 236, 894, 893,
	239, 240, 241, 884, 958, 242, 995, 996, 491, 0,
	243, 965, 0, 946, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 949, 947, 948,
	955, 951, 950, 954, 261, 262, 263, 264, 937, 266,
	930, 929, 855, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 928, 273, 0, 274, 0, 275, 276, 0,
	277, 861, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 927, 925, 926, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 993, 0, 883,
	298, 0, 299, 300, 301, 302, 960, 961, 964, 355,
	971, 303, 304, 0, 305, 306, 904, 0, 0, 218,
	307, 309, 316, 0, 970, 310, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 317, 972, 962, 973,
	318, 319, 320, 974, 942, 943, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 994, 975,
	331, 332, 976, 0, 333, 334, 953, 952, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	896, 345, 977, 348, 349, 352, 351, 978, 350, 852,
	3174, 979, 353, 874, 963, 354, 931, 356, 357, 0,
	905, 359, 906, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 988, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 989,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 924, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 862, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 897, 898, 900, 901, 421, 427, 428, 429,
	956, 430, 410, 411, 431, 432, 983, 433, 434, 919,
	899, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	967, 442, 443, 444, 990, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 895, 0, 456, 938,
	939, 940, 941, 0, 463, 0, 457, 458, 991, 459,
	992, 872, 460, 461, 462, 0, 464, 465, 0, 856,
	466, 467, 468, 469, 470, 472, 957, 473, 0, 903,
	474, 475, 476, 525, 935, 985, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 1621, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 485, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 236, 894, 893, 239,
	240, 241, 884, 958, 242, 995, 996, 491, 0, 243,
	965, 0, 946, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 949, 947, 948, 955,
	951, 950, 954, 261, 262, 263, 264, 937, 266, 930,
	929, 855, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 928, 273, 0, 274, 0, 275, 276, 0, 277,
	861, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	986, 987, 873, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 927, 925, 926, 0, 293, 0, 294, 0,
	0, 969, 295, 296, 0, 297, 993, 0, 883, 298,
	0, 299, 300, 301, 302, 960, 961, 964, 355, 971,
	303, 304, 0, 305, 306, 904, 0, 0, 218, 307,
	309, 316, 0, 970, 310, 916, 907, 918, 920, 921,
	922, 917, 0, 909, 0, 317, 972, 962, 973, 318,
	319, 320, 974, 942, 943, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 994, 975, 331,
	332, 976, 0, 333, 334, 953, 952, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 896,
	345, 977, 348, 349, 352, 351, 978, 350, 852, 219,
	979, 353, 874, 963, 354, 931, 356, 357, 0, 905,
	359, 906, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 988, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 989, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 924, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 862, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 897, 898, 900, 901, 421, 427, 428, 429, 956,
	430, 410, 411, 431, 432, 983, 433, 434, 919, 899,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 967,
	442, 443, 444, 990, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 895, 0, 456, 938, 939,
	940, 941, 0, 463, 0, 457, 458, 991, 459, 992,
	872, 460, 461, 462, 0, 464, 465, 0, 856, 466,
	467, 468, 469, 470, 472, 957, 473, 0, 903, 474,
	475, 476, 525, 935, 985, 2976, 478, 477, 528, 0,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 853,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 849, 850, 908, 866, 867, 868, 864, 865,
	877, 878, 0, 0, 0, 876, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 959, 882, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 923, 902, 934, 234, 892, 933,
	932, 0, 235, 236, 894, 893, 239, 240, 241, 884,
	958, 242, 995, 996, 491, 0, 243, 965, 0, 946,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	968, 259, 260, 949, 947, 948, 955, 951, 950, 954,
	261, 262, 263, 264, 937, 266, 930, 929, 855, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 928, 273,
	0, 274, 0, 275, 276, 0, 277, 861, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 927,
	925, 926, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 993, 0, 883, 298, 0, 299, 300,
	301, 302, 960, 961, 964, 355, 971, 303, 304, 0,
	305, 306, 904, 0, 0, 2042, 307, 309, 316, 0,
	970, 310, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 317, 972, 962, 973, 318, 319, 320, 974,
	942, 943, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 994, 975, 331, 332, 976, 0,
	333, 334, 953, 952, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 896, 345, 977, 348,
	349, 352, 351, 978, 350, 852, 219, 979, 353, 874,
	963, 354, 931, 356, 357, 0, 905, 359, 906, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 988, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 989, 378, 514, 379, 2041,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 924,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 862, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 897, 898,
	900, 901, 421, 427, 428, 429, 956, 430, 410, 411,
	431, 432, 983, 433, 434, 919, 899, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 967, 442, 443, 444,
	990, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 895, 0, 456, 938, 939, 940, 941, 0,
	463, 0, 457, 458, 991, 459, 992, 872, 460, 461,
	462, 0, 464, 465, 0, 856, 466, 467, 468, 469,
	470, 472, 957, 473, 0, 903, 474, 475, 476, 525,
	935, 985, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 908, 866, 867, 868, 864, 865, 877, 878, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 260,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 971, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	972, 962, 973, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 976, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 979, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 857, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 983,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 464,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 853, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 0, 849, 850, 908, 866,
	867, 868, 864, 865, 877, 878, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 959, 882, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 923, 902,
	934, 234, 892, 933, 932, 0, 235, 236, 894, 893,
	239, 240, 241, 884, 958, 242, 995, 996, 491, 0,
	243, 965, 0, 946, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 949, 947, 948,
	955, 951, 950, 954, 261, 262, 263, 264, 937, 266,
	930, 929, 855, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 928, 273, 0, 274, 0, 275, 276, 0,
	277, 861, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 927, 925, 926, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 993, 0, 883,
	298, 0, 299, 300, 301, 302, 960, 961, 964, 355,
	971, 303, 304, 0, 305, 306, 904, 0, 0, 218,
	307, 309, 316, 0, 970, 310, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 317, 972, 962, 973,
	318, 319, 320, 974, 942, 943, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 994, 975,
	331, 332, 976, 0, 333, 334, 953, 952, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	896, 345, 977, 348, 349, 352, 351, 978, 350, 852,
	219, 979, 353, 874, 963, 354, 931, 356, 357, 0,
	905, 359, 906, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 988, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 989,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 924, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 862, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 897, 898, 900, 901, 421, 427, 428, 429,
	956, 430, 410, 411, 431, 432, 983, 433, 434, 919,
	899, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	967, 442, 443, 444, 990, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 895, 0, 456, 938,
	939, 940, 941, 0, 463, 0, 457, 458, 991, 459,
	992, 872, 460, 461, 462, 0, 464, 465, 0, 856,
	466, 467, 468, 469, 470, 472, 957, 473, 0, 903,
	474, 475, 476, 525, 935, 985, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 1621, 0, 0, 0, 0,
	0, 0, 878, 0, 0, 0, 876, 908, 866, 867,
	868, 864, 865, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 485, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 236, 894, 893, 239,
	240, 241, 884, 958, 242, 995, 996, 491, 0, 243,
	965, 0, 946, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 949, 947, 948, 955,
	951, 950, 954, 261, 262, 263, 264, 937, 266, 930,
	929, 855, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 928, 273, 0, 274, 0, 275, 276, 0, 277,
	861, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	986, 987, 873, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 927, 925, 926, 0, 293, 0, 294, 0,
	2227, 969, 295, 296, 0, 297, 993, 0, 883, 298,
	0, 299, 300, 301, 302, 960, 961, 964, 355, 971,
	303, 304, 0, 305, 306, 904, 0, 0, 218, 307,
	309, 316, 0, 970, 310, 916, 907, 918, 920, 921,
	922, 917, 0, 909, 0, 317, 972, 962, 973, 318,
	319, 320, 974, 942, 943, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 994, 975, 331,
	332, 976, 0, 333, 334, 953, 952, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 896,
	345, 977, 348, 349, 352, 351, 978, 350, 852, 219,
	979, 353, 874, 963, 354, 931, 356, 357, 0, 905,
	359, 906, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 988, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 989, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 924, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 862, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 897, 898, 900, 901, 421, 427, 428, 429, 956,
	430, 410, 411, 431, 432, 983, 433, 434, 919, 899,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 967,
	442, 443, 444, 990, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 895, 0, 456, 938, 939,
	940, 941, 0, 463, 0, 457, 458, 991, 459, 992,
	872, 460, 461, 462, 0, 464, 465, 0, 856, 466,
	467, 468, 469, 470, 472, 957, 473, 0, 903, 474,
	475, 476, 525, 935, 985, 0, 478, 477, 528, 0,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 853,
	0, 0, 0, 0, 0, 851, 0, 0, 0, 0,
	0, 0, 849, 850, 908, 866, 867, 868, 864, 865,
	877, 878, 0, 0, 0, 876, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 959, 882, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 923, 902, 934, 234, 892, 933,
	932, 0, 235, 236, 894, 893, 239, 240, 241, 884,
	958, 242, 995, 996, 491, 0, 243, 965, 0, 946,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	968, 259, 260, 949, 947, 948, 955, 951, 950, 954,
	261, 262, 263, 264, 937, 266, 930, 929, 855, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 928, 273,
	0, 274, 0, 275, 276, 0, 277, 861, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 927,
	925, 926, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 993, 0, 883, 298, 0, 299, 300,
	301, 302, 960, 961, 964, 355, 971, 303, 304, 0,
	305, 306, 904, 0, 0, 218, 307, 309, 316, 0,
	970, 310, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 317, 972, 962, 973, 318, 319, 320, 974,
	942, 943, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 994, 975, 331, 332, 976, 0,
	333, 334, 953, 952, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 896, 345, 977, 348,
	349, 352, 351, 978, 350, 852, 219, 979, 353, 874,
	963, 354, 931, 356, 357, 0, 905, 359, 906, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 988, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 989, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 924,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 862, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 897, 898,
	900, 901, 421, 427, 428, 429, 956, 430, 410, 411,
	431, 432, 983, 433, 434, 919, 899, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 967, 442, 443, 444,
	990, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 895, 0, 456, 938, 939, 940, 941, 0,
	463, 0, 457, 458, 991, 459, 992, 872, 460, 461,
	462, 0, 464, 465, 0, 856, 466, 467, 468, 469,
	470, 472, 957, 473, 0, 903, 474, 475, 476, 525,
	935, 985, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 1555,
	0, 2232, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 236, 894, 893, 239, 240, 241, 884, 958,
	242, 995, 996, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 937, 266, 930, 929, 855, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 928, 273, 0,
	274, 0, 275, 276, 0, 277, 861, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 873, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 927, 925,
	926, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 883, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 904, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 916, 907, 918, 920, 921, 922, 917, 0, 909,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 942,
	943, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 896, 345, 977, 348, 349,
	352, 351, 978, 350, 852, 219, 979, 353, 874, 963,
	354, 931, 356, 357, 0, 905, 359, 906, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 924, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 862, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 897, 898, 900,
	901, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 919, 899, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 967, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 895, 0, 456, 938, 939, 940, 941, 0, 463,
	0, 457, 458, 991, 459, 992, 872, 460, 461, 462,
	0, 464, 465, 0, 856, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 903, 474, 475, 476, 525, 935,
	985, 0, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 853, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 849, 850,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 0,
	2230, 876, 908, 866, 867, 868, 864, 865, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 882, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 923, 902, 934, 234, 892, 933, 932, 0,
	235, 236, 894, 893, 239, 240, 241, 884, 958, 242,
	995, 996, 491, 0, 243, 965, 0, 946, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 949, 947, 948, 955, 951, 950, 954, 261, 262,
	263, 264, 937, 266, 930, 929, 855, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 928, 273, 0, 274,
	0, 275, 276, 0, 277, 861, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 927, 925, 926,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 993, 0, 883, 298, 0, 299, 300, 301, 302,
	960, 961, 964, 355, 971, 303, 304, 0, 305, 306,
	904, 0, 0, 218, 307, 309, 316, 0, 970, 310,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	317, 972, 962, 973, 318, 319, 320, 974, 942, 943,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 994, 975, 331, 332, 976, 0, 333, 334,
	953, 952, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 896, 345, 977, 348, 349, 352,
	351, 978, 350, 852, 219, 979, 353, 874, 963, 354,
	931, 356, 357, 0, 905, 359, 906, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	988, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 989, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 924, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 862, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 897, 898, 900, 901,
	421, 427, 428, 429, 956, 430, 410, 411, 431, 432,
	983, 433, 434, 919, 899, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 967, 442, 443, 444, 990, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	895, 0, 456, 938, 939, 940, 941, 0, 463, 0,
	457, 458, 991, 459, 992, 872, 460, 461, 462, 0,
	464, 465, 0, 856, 466, 467, 468, 469, 470, 472,
	957, 473, 0, 903, 474, 475, 476, 525, 935, 985,
	0, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 2218,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 260,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 971, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	972, 962, 973, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 976, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 979, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 983,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 464,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 853, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 0, 849, 850, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 2207, 876,
	908, 866, 867, 868, 864, 865, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 959,
	882, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	923, 902, 934, 234, 892, 933, 932, 0, 235, 236,
	894, 893, 239, 240, 241, 884, 958, 242, 995, 996,
	491, 0, 243, 965, 0, 946, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 949,
	947, 948, 955, 951, 950, 954, 261, 262, 263, 264,
	937, 266, 930, 929, 855, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 928, 273, 0, 274, 0, 275,
	276, 0, 277, 861, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 927, 925, 926, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 993,
	0, 883, 298, 0, 299, 300, 301, 302, 960, 961,
	964, 355, 971, 303, 304, 0, 305, 306, 904, 0,
	0, 218, 307, 309, 316, 0, 970, 310, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 317, 972,
	962, 973, 318, 319, 320, 974, 942, 943, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	994, 975, 331, 332, 976, 0, 333, 334, 953, 952,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 896, 345, 977, 348, 349, 352, 351, 978,
	350, 852, 219, 979, 353, 874, 963, 354, 931, 356,
	357, 0, 905, 359, 906, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 988, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 989, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 924, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	862, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 897, 898, 900, 901, 421, 427,
	428, 429, 956, 430, 410, 411, 431, 432, 983, 433,
	434, 919, 899, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 967, 442, 443, 444, 990, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 895, 0,
	456, 938, 939, 940, 941, 0, 463, 0, 457, 458,
	991, 459, 992, 872, 460, 461, 462, 0, 464, 465,
	0, 856, 466, 467, 468, 469, 470, 472, 957, 473,
	0, 903, 474, 475, 476, 525, 935, 985, 0, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 853, 0, 0, 0, 0, 0, 851, 0,
	0, 0, 0, 0, 0, 849, 850, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 2205, 876, 2196,
	2203, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 236, 894,
	893, 239, 240, 241, 884, 958, 242, 995, 996, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 937,
	2199, 930, 929, 855, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 928, 273, 0, 274, 0, 275, 276,
	0, 277, 861, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 927, 925, 926, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	883, 298, 0, 299, 300, 301, 2200, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 904, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 942, 943, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 2201, 2198,
	346, 896, 345, 977, 348, 349, 352, 351, 978, 350,
	852, 219, 979, 353, 874, 963, 354, 931, 356, 357,
	0, 905, 359, 906, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 924, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 862,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 2202,
	0, 425, 426, 897, 898, 900, 901, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	919, 899, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 967, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 895, 0, 456,
	938, 939, 940, 941, 0, 463, 0, 457, 458, 991,
	459, 992, 872, 460, 461, 462, 0, 464, 465, 0,
	856, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	903, 474, 475, 476, 525, 935, 985, 0, 478, 477,
	528, 0, 0, 0, 0, 479, 480, 529, 481, 2197,
	483, 853, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 849, 850, 0, 0, 0, 0,
	0, 0, 0, 878, 0, 0, 2193, 876, 2196, 2203,
	867, 868, 864, 865, 877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 959, 882, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 923, 902,
	934, 234, 892, 933, 932, 0, 235, 236, 894, 893,
	239, 240, 241, 884, 958, 242, 995, 996, 491, 0,
	243, 965, 0, 946, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 949, 947, 948,
	955, 951, 950, 954, 261, 262, 263, 264, 937, 2199,
	930, 929, 855, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 928, 273, 0, 274, 0, 275, 276, 0,
	277, 861, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 927, 925, 926, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 993, 0, 883,
	298, 0, 299, 300, 301, 2200, 960, 961, 964, 355,
	971, 303, 304, 0, 305, 306, 904, 0, 0, 218,
	307, 309, 316, 0, 970, 310, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 317, 972, 962, 973,
	318, 319, 320, 974, 942, 943, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 994, 975,
	331, 332, 976, 0, 333, 334, 953, 952, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 2201, 2198, 346,
	896, 345, 977, 348, 349, 352, 351, 978, 350, 852,
	219, 979, 353, 874, 963, 354, 931, 356, 357, 0,
	905, 359, 906, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 988, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 989,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 924, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 862, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 2202, 0,
	425, 426, 897, 898, 900, 901, 421, 427, 428, 429,
	956, 430, 410, 411, 431, 432, 983, 433, 434, 919,
	899, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	967, 442, 443, 444, 990, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 895, 0, 456, 938,
	939, 940, 941, 0, 463, 0, 457, 458, 991, 459,
	992, 872, 460, 461, 462, 0, 464, 465, 0, 856,
	466, 467, 468, 469, 470, 472, 957, 473, 0, 903,
	474, 475, 476, 525, 935, 985, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 2197, 483,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 864,
	865, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 485, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 236, 894, 893, 239, 240, 241,
	884, 958, 242, 995, 996, 491, 0, 243, 965, 0,
	946, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 260, 949, 947, 948, 955, 951, 950,
	954, 261, 262, 263, 264, 937, 266, 930, 929, 855,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 928,
	273, 0, 274, 0, 275, 276, 0, 277, 861, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 986, 987,
	873, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	927, 925, 926, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 993, 0, 883, 298, 0, 299,
	300, 301, 302, 960, 961, 964, 355, 971, 303, 304,
	0, 305, 306, 904, 0, 0, 218, 307, 309, 316,
	0, 970, 310, 916, 907, 918, 920, 921, 922, 917,
	0, 909, 0, 317, 972, 962, 973, 318, 319, 320,
	974, 942, 943, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 994, 975, 331, 332, 976,
	0, 333, 334, 953, 952, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 896, 345, 977,
	348, 349, 352, 351, 978, 350, 852, 219, 979, 353,
	874, 963, 354, 931, 356, 357, 0, 905, 359, 906,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 988, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 989, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	924, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 862, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 897,
	898, 900, 901, 421, 427, 428, 429, 956, 430, 410,
	411, 431, 432, 983, 433, 434, 919, 899, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 967, 442, 443,
	444, 990, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 895, 0, 456, 938, 939, 940, 941,
	0, 463, 0, 457, 458, 991, 459, 992, 872, 460,
	461, 462, 0, 464, 465, 0, 856, 466, 467, 468,
	469, 470, 472, 957, 473, 0, 903, 474, 475, 476,
	525, 935, 985, 0, 478, 477, 528, 0, 0, 0,
	0, 479, 480, 529, 481, 482, 483, 853, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 0, 0, 0,
	849, 850, 0, 0, 0, 0, 0, 1563, 0, 878,
	0, 0, 0, 876, 908, 866, 867, 868, 864, 865,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 2021, 225, 0, 0,
	0, 0, 0, 959, 882, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 923, 902, 934, 234, 892, 933,
	932, 0, 235, 236, 894, 893, 239, 240, 241, 884,
	958, 242, 995, 996, 491, 0, 243, 965, 0, 946,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	968, 259, 260, 949, 947, 948, 955, 951, 950, 954,
	261, 262, 263, 264, 937, 266, 930, 929, 855, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 928, 273,
	0, 274, 0, 275, 276, 0, 277, 861, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 986, 987, 873,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 927,
	925, 926, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 993, 0, 883, 298, 0, 299, 300,
	301, 302, 960, 961, 964, 355, 971, 303, 304, 0,
	305, 306, 904, 0, 0, 218, 307, 309, 316, 0,
	970, 310, 916, 907, 918, 920, 921, 922, 917, 0,
	909, 0, 317, 972, 962, 973, 318, 319, 320, 974,
	942, 943, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 994, 975, 331, 332, 976, 0,
	333, 334, 953, 952, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 896, 345, 977, 348,
	349, 352, 351, 978, 350, 852, 219, 979, 353, 874,
	963, 354, 931, 356, 357, 0, 905, 359, 906, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 988, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 989, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 924,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 862, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 897, 898,
	900, 901, 421, 427, 428, 429, 956, 430, 410, 411,
	431, 432, 983, 433, 434, 919, 899, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 967, 442, 443, 444,
	990, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 895, 0, 456, 938, 939, 940, 941, 0,
	463, 0, 457, 458, 991, 459, 992, 872, 460, 461,
	462, 0, 464, 465, 0, 856, 466, 467, 468, 469,
	470, 472, 957, 473, 0, 903, 474, 475, 476, 525,
	935, 985, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 853, 0, 0, 0,
	0, 0, 851, 0, 0, 0, 0, 0, 0, 849,
	850, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 1234, 876, 908, 866, 867, 868, 864, 865, 877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 236, 894, 893, 239, 240, 241, 884, 958,
	242, 995, 996, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 937, 266, 930, 929, 855, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 928, 273, 0,
	274, 0, 275, 276, 0, 277, 861, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 873, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 927, 925,
	926, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 883, 298, 0, 299, 300, 301,
	302, 1233, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 904, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 916, 907, 918, 920, 921, 922, 917, 0, 909,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 942,
	943, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 896, 345, 977, 348, 349,
	352, 351, 978, 350, 852, 219, 979, 353, 874, 963,
	354, 931, 356, 357, 0, 905, 359, 906, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 924, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 862, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 897, 898, 900,
	901, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 919, 899, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 967, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 895, 0, 456, 938, 939, 940, 941, 0, 463,
	0, 457, 458, 991, 459, 992, 872, 460, 461, 462,
	0, 464, 465, 0, 856, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 903, 474, 475, 476, 525, 935,
	985, 0, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 853, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 849, 850,
	0, 0, 0, 0, 0, 0, 0, 878, 0, 0,
	1228, 876, 908, 866, 867, 868, 864, 865, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 882, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 923, 902, 934, 234, 892, 933, 932, 0,
	235, 236, 894, 893, 239, 240, 241, 884, 958, 242,
	995, 996, 491, 0, 243, 965, 0, 946, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 949, 947, 948, 955, 951, 950, 954, 261, 262,
	263, 264, 937, 266, 930, 929, 855, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 928, 273, 0, 274,
	0, 275, 276, 0, 277, 861, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 927, 925, 926,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 993, 0, 883, 298, 0, 299, 300, 301, 302,
	1227, 961, 964, 355, 971, 303, 304, 0, 305, 306,
	904, 0, 0, 218, 307, 309, 316, 0, 970, 310,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	317, 972, 962, 973, 318, 319, 320, 974, 942, 943,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 994, 975, 331, 332, 976, 0, 333, 334,
	953, 952, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 896, 345, 977, 348, 349, 352,
	351, 978, 350, 852, 219, 979, 353, 874, 963, 354,
	931, 356, 357, 0, 905, 359, 906, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	988, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 989, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 924, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 862, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 897, 898, 900, 901,
	421, 427, 428, 429, 956, 430, 410, 411, 431, 432,
	983, 433, 434, 919, 899, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 967, 442, 443, 444, 990, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	895, 0, 456, 938, 939, 940, 941, 0, 463, 0,
	457, 458, 991, 459, 992, 872, 460, 461, 462, 0,
	464, 465, 0, 856, 466, 467, 468, 469, 470, 472,
	957, 473, 0, 903, 474, 475, 476, 525, 935, 985,
	0, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 0,
	0, 0, 0, 0, 0, 0, 878, 0, 0, 1223,
	876, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 260,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 971, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	972, 962, 973, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 976, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 979, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 983,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 464,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 853, 0, 0, 0, 0, 0, 851,
	0, 0, 0, 0, 0, 0, 849, 850, 908, 866,
	867, 868, 864, 865, 877, 878, 0, 0, 0, 876,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 959, 882, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 923, 902,
	934, 234, 892, 933, 932, 0, 235, 236, 894, 893,
	239, 240, 241, 884, 958, 242, 995, 996, 491, 0,
	243, 965, 0, 946, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 949, 947, 948,
	955, 951, 950, 954, 261, 262, 263, 264, 937, 266,
	930, 929, 855, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 928, 273, 0, 274, 0, 275, 276, 0,
	277, 861, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 986, 987, 873, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 927, 925, 926, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 993, 0, 883,
	298, 0, 299, 300, 301, 302, 960, 961, 964, 355,
	971, 303, 304, 0, 305, 306, 904, 0, 0, 218,
	307, 309, 316, 0, 970, 310, 916, 907, 918, 920,
	921, 922, 917, 0, 909, 0, 317, 972, 962, 973,
	318, 319, 320, 974, 942, 943, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 994, 975,
	331, 332, 976, 0, 333, 334, 953, 952, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	896, 345, 977, 348, 349, 352, 351, 978, 350, 852,
	219, 979, 353, 874, 963, 354, 931, 356, 357, 0,
	905, 359, 906, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 988, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 989,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 924, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 862, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 897, 898, 900, 901, 421, 427, 428, 429,
	956, 430, 410, 411, 431, 432, 983, 433, 434, 919,
	899, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	967, 442, 443, 444, 990, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 895, 0, 456, 938,
	939, 940, 941, 0, 463, 0, 457, 458, 991, 459,
	992, 872, 460, 461, 462, 0, 464, 465, 0, 856,
	466, 467, 468, 469, 470, 472, 957, 473, 0, 903,
	474, 475, 476, 525, 935, 985, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	853, 0, 0, 0, 0, 0, 851, 0, 0, 0,
	0, 0, 0, 849, 850, 908, 866, 867, 868, 864,
	865, 877, 878, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 882, 0, 0, 0, 226,
	228, 227, 229, 230, 485, 923, 902, 934, 234, 892,
	933, 932, 0, 235, 236, 894, 893, 239, 240, 241,
	884, 958, 242, 995, 996, 491, 0, 243, 965, 0,
	946, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 3650, 949, 947, 948, 955, 951, 950,
	954, 261, 262, 263, 264, 937, 266, 930, 929, 855,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 928,
	273, 0, 274, 0, 275, 276, 0, 277, 861, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 986, 987,
	873, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	927, 925, 926, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 993, 0, 883, 298, 0, 299,
	300, 301, 302, 960, 961, 964, 355, 971, 303, 304,
	0, 305, 306, 904, 0, 0, 218, 307, 309, 316,
	0, 970, 310, 916, 907, 918, 920, 921, 922, 917,
	0, 909, 0, 317, 972, 962, 973, 318, 319, 320,
	974, 942, 943, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 994, 975, 331, 332, 976,
	0, 333, 334, 953, 952, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 896, 345, 977,
	348, 349, 352, 351, 978, 350, 852, 219, 979, 353,
	874, 963, 354, 931, 356, 357, 0, 905, 359, 906,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 988, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 989, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	924, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 862, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 897,
	898, 900, 901, 421, 427, 428, 429, 956, 430, 410,
	411, 431, 432, 983, 433, 434, 919, 899, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 967, 442, 443,
	444, 990, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 895, 0, 456, 938, 939, 940, 941,
	0, 463, 0, 457, 458, 991, 459, 992, 872, 460,
	461, 462, 0, 3649, 465, 0, 856, 466, 467, 468,
	469, 470, 472, 957, 473, 0, 903, 474, 475, 476,
	525, 935, 985, 0, 478, 477, 528, 0, 0, 0,
	0, 479, 480, 529, 481, 482, 483, 853, 0, 0,
	0, 0, 0, 851, 0, 0, 0, 0, 0, 0,
	849, 850, 908, 866, 867, 868, 864, 865, 877, 878,
	0, 0, 0, 876, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 959, 882, 0, 0, 0, 226, 228, 227, 229,
	230, 3648, 923, 902, 934, 234, 892, 933, 932, 0,
	235, 236, 894, 893, 239, 240, 241, 884, 958, 242,
	995, 996, 491, 0, 243, 965, 0, 946, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	3650, 949, 947, 948, 955, 951, 950, 954, 261, 262,
	263, 264, 937, 266, 930, 929, 855, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 928, 273, 0, 274,
	0, 275, 276, 0, 277, 861, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 986, 987, 873, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 927, 925, 926,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 993, 0, 883, 298, 0, 299, 300, 301, 302,
	960, 961, 964, 355, 971, 303, 304, 0, 305, 306,
	904, 0, 0, 218, 307, 309, 316, 0, 970, 310,
	916, 907, 918, 920, 921, 922, 917, 0, 909, 0,
	317, 972, 962, 973, 318, 319, 320, 974, 942, 943,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 994, 975, 331, 332, 976, 0, 333, 334,
	953, 952, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 896, 345, 977, 348, 349, 352,
	351, 978, 350, 852, 219, 979, 353, 874, 963, 354,
	931, 356, 357, 0, 905, 359, 906, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	988, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 989, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 924, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 862, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 897, 898, 900, 901,
	421, 427, 428, 429, 956, 430, 410, 411, 431, 432,
	983, 433, 434, 919, 899, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 967, 442, 443, 444, 990, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	895, 0, 456, 938, 939, 940, 941, 0, 463, 0,
	457, 458, 991, 459, 992, 872, 460, 461, 462, 0,
	3649, 465, 0, 856, 466, 467, 468, 469, 470, 472,
	957, 473, 0, 903, 474, 475, 476, 525, 935, 985,
	0, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 853, 0, 0, 0, 0, 0,
	851, 0, 0, 0, 0, 0, 0, 849, 850, 908,
	866, 867, 868, 2563, 2564, 877, 878, 0, 0, 0,
	876, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 236, 894,
	893, 239, 240, 241, 884, 958, 242, 995, 996, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 937,
	266, 930, 929, 855, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 928, 273, 0, 274, 0, 275, 276,
	0, 277, 861, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 927, 925, 926, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	883, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 904, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 942, 943, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 896, 345, 977, 348, 349, 352, 351, 978, 350,
	852, 219, 979, 353, 874, 963, 354, 931, 356, 357,
	0, 905, 359, 906, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 924, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 862,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 897, 898, 900, 901, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	919, 899, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 967, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 895, 0, 456,
	938, 939, 940, 941, 0, 463, 0, 457, 458, 991,
	459, 992, 872, 460, 461, 462, 0, 464, 465, 0,
	856, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	903, 474, 475, 476, 525, 935, 985, 0, 478, 477,
	528, 0, 0, 0, 0, 479, 480, 529, 481, 482,
	483, 853, 0, 0, 0, 0, 0, 851, 0, 0,
	0, 0, 0, 0, 849, 850, 908, 866, 867, 868,
	2561, 2562, 877, 878, 0, 0, 0, 876, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 959, 882, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 923, 902, 934, 234,
	892, 933, 932, 0, 235, 236, 894, 893, 239, 240,
	241, 884, 958, 242, 995, 996, 491, 0, 243, 965,
	0, 946, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 968, 259, 260, 949, 947, 948, 955, 951,
	950, 954, 261, 262, 263, 264, 937, 266, 930, 929,
	855, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	928, 273, 0, 274, 0, 275, 276, 0, 277, 861,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 986,
	987, 873, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 927, 925, 926, 0, 293, 0, 294, 0, 0,
	969, 295, 296, 0, 297, 993, 0, 883, 298, 0,
	299, 300, 301, 302, 960, 961, 964, 355, 971, 303,
	304, 0, 305, 306, 904, 0, 0, 218, 307, 309,
	316, 0, 970, 310, 916, 907, 918, 920, 921, 922,
	917, 0, 909, 0, 317, 972, 962, 973, 318, 319,
	320, 974, 942, 943, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 994, 975, 331, 332,
	976, 0, 333, 334, 953, 952, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 896, 345,
	977, 348, 349, 352, 351, 978, 350, 852, 219, 979,
	353, 874, 963, 354, 931, 356, 357, 0, 905, 359,
	906, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 980, 367, 981, 988, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 989, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 924, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 982, 404, 405, 406, 407, 862, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	897, 898, 900, 901, 421, 427, 428, 429, 956, 430,
	410, 411, 431, 432, 983, 433, 434, 919, 899, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 967, 442,
	443, 444, 990, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 895, 0, 456, 938, 939, 940,
	941, 0, 463, 0, 457, 458, 991, 459, 992, 872,
	460, 461, 462, 0, 464, 465, 0, 856, 466, 467,
	468, 469, 470, 472, 957, 473, 0, 903, 474, 475,
	476, 525, 935, 985, 0, 478, 477, 528, 0, 0,
	0, 0, 479, 480, 529, 481, 482, 483, 853, 0,
	0, 0, 0, 0, 851, 0, 0, 0, 0, 0,
	0, 849, 850, 908, 866, 867, 868, 864, 865, 877,
	878, 0, 0, 0, 876, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 882, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 923, 902, 934, 234, 892, 933, 932,
	0, 235, 236, 894, 893, 239, 240, 241, 884, 958,
	242, 995, 996, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 937, 266, 930, 929, 855, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 928, 273, 0,
	274, 0, 275, 276, 0, 277, 861, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 873, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 927, 925,
	926, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 883, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 904, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 916, 907, 918, 920, 921, 922, 917, 0, 909,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 942,
	943, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 896, 345, 977, 348, 349,
	352, 351, 978, 350, 852, 219, 979, 353, 874, 963,
	354, 931, 356, 357, 0, 905, 359, 906, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 924, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 862, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 897, 898, 900,
	901, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 919, 899, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 967, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 895, 0, 456, 938, 939, 940, 941, 0, 463,
	0, 457, 458, 991, 459, 992, 872, 460, 461, 462,
	0, 464, 465, 0, 856, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 903, 474, 475, 476, 525, 935,
	985, 0, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 853, 0, 0, 0, 0,
	0, 851, 0, 0, 0, 0, 0, 0, 2029, 2030,
	908, 866, 867, 868, 864, 865, 877, 878, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 959,
	882, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	923, 902, 934, 234, 892, 933, 932, 0, 235, 236,
	894, 893, 239, 240, 241, 884, 958, 242, 995, 996,
	491, 0, 243, 965, 0, 946, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 949,
	947, 948, 955, 951, 950, 954, 261, 262, 263, 264,
	937, 266, 930, 929, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 928, 273, 0, 274, 0, 275,
	276, 0, 277, 861, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 986, 987, 873, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 927, 925, 926, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 993,
	0, 883, 298, 0, 299, 300, 301, 302, 960, 961,
	964, 355, 971, 303, 304, 0, 305, 306, 904, 0,
	0, 218, 307, 309, 316, 0, 970, 310, 916, 907,
	918, 920, 921, 922, 917, 0, 909, 0, 317, 972,
	962, 973, 318, 319, 320, 974, 942, 943, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	994, 975, 331, 332, 976, 0, 333, 334, 953, 952,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 896, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 219, 979, 353, 874, 963, 354, 931, 356,
	357, 0, 905, 359, 906, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 988, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 989, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 924, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	862, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 897, 898, 900, 901, 421, 427,
	428, 429, 956, 430, 410, 411, 431, 432, 983, 433,
	434, 919, 899, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 967, 442, 443, 444, 990, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 895, 0,
	456, 938, 939, 940, 941, 0, 463, 0, 457, 458,
	991, 459, 992, 872, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 957, 473,
	0, 903, 474, 475, 476, 525, 935, 985, 0, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 2215, 0,
	0, 0, 0, 0, 0, 2213, 2214, 908, 866, 867,
	868, 864, 865, 877, 878, 0, 0, 0, 876, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 882, 0, 0,
	0, 226, 228, 227, 229, 230, 485, 923, 902, 934,
	234, 892, 933, 932, 0, 235, 236, 894, 893, 239,
	240, 241, 884, 958, 242, 995, 996, 491, 0, 243,
	965, 0, 946, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 949, 947, 948, 955,
	951, 950, 954, 261, 262, 263, 264, 937, 266, 930,
	929, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 928, 273, 0, 274, 0, 275, 276, 0, 277,
	861, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	986, 987, 873, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 927, 925, 926, 0, 293, 0, 294, 0,
	0, 969, 295, 296, 0, 297, 993, 0, 883, 298,
	0, 299, 300, 301, 302, 960, 961, 964, 355, 971,
	303, 304, 0, 305, 306, 904, 0, 0, 218, 307,
	309, 316, 0, 970, 310, 916, 907, 918, 920, 921,
	922, 917, 0, 909, 0, 317, 972, 962, 973, 318,
	319, 320, 974, 942, 943, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 994, 975, 331,
	332, 976, 0, 333, 334, 953, 952, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 896,
	345, 977, 348, 349, 352, 351, 978, 350, 0, 219,
	979, 353, 874, 963, 354, 931, 356, 357, 0, 905,
	359, 906, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 988, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 989, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 924, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 2556, 2557, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 897, 898, 900, 901, 421, 427, 428, 429, 956,
	430, 410, 411, 431, 432, 983, 433, 434, 919, 899,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 967,
	442, 443, 444, 990, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 895, 0, 456, 938, 939,
	940, 941, 0, 463, 0, 457, 458, 991, 459, 992,
	872, 460, 461, 462, 0, 464, 465, 0, 0, 466,
	467, 468, 469, 470, 472, 957, 473, 0, 903, 474,
	475, 476, 525, 935, 985, 0, 478, 477, 528, 0,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 908,
	866, 867, 868, 864, 865, 877, 0, 0, 0, 0,
	0, 0, 1775, 1776, 0, 0, 220, 221, 222, 223,
	224, 878, 225, 0, 0, 876, 0, 0, 959, 882,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 923,
	902, 934, 234, 892, 933, 932, 0, 235, 236, 894,
	893, 239, 240, 241, 0, 958, 242, 995, 996, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 937,
	266, 930, 929, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 928, 273, 0, 274, 0, 275, 276,
	0, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 873, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 927, 925, 926, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	883, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 904, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 916, 907, 918,
	920, 921, 922, 917, 0, 909, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 942, 943, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 896, 345, 977, 348, 349, 352, 351, 978, 350,
	0, 219, 979, 353, 874, 963, 354, 931, 356, 357,
	0, 905, 359, 906, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 924, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 862,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 897, 898, 900, 901, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	919, 899, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 967, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 895, 0, 456,
	938, 939, 940, 941, 0, 463, 0, 457, 458, 991,
	459, 992, 872, 460, 461, 462, 0, 464, 465, 0,
	0, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	903, 474, 475, 476, 525, 935, 985, 0, 478, 477,
	528, 0, 0, 0, 0, 479, 480, 529, 481, 482,
	483, 908, 866, 867, 868, 864, 865, 877, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 878, 225, 0, 0, 876, 0, 0,
	959, 882, 0, 0, 0, 226, 228, 227, 229, 230,
	0, 923, 902, 934, 234, 892, 933, 932, 0, 235,
	236, 894, 893, 239, 240, 241, 884, 958, 242, 995,
	996, 491, 0, 243, 965, 0, 946, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 3650,
	949, 947, 948, 955, 951, 950, 954, 261, 262, 263,
	264, 937, 266, 930, 929, 855, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 928, 273, 0, 274, 0,
	275, 276, 0, 277, 861, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 986, 987, 873, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 927, 925, 926, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	993, 0, 883, 298, 0, 299, 300, 301, 302, 960,
	961, 964, 355, 0, 303, 304, 0, 305, 306, 904,
	0, 0, 218, 307, 309, 316, 0, 970, 310, 916,
	907, 918, 920, 921, 922, 917, 0, 909, 0, 317,
	0, 962, 0, 318, 319, 320, 974, 942, 943, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 994, 975, 331, 332, 0, 0, 333, 334, 953,
	952, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 896, 345, 977, 348, 349, 352, 351,
	978, 350, 852, 219, 0, 353, 874, 963, 354, 931,
	356, 357, 0, 905, 359, 906, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 988,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 989, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 924, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 862, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 897, 898, 900, 901, 421,
	427, 428, 429, 956, 430, 410, 411, 431, 432, 0,
	433, 434, 919, 899, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 967, 442, 443, 444, 990, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 895,
	0, 456, 938, 939, 940, 941, 0, 463, 0, 457,
	458, 991, 459, 992, 872, 460, 461, 462, 0, 3649,
	465, 0, 856, 466, 467, 468, 469, 470, 472, 957,
	473, 0, 903, 474, 475, 476, 525, 935, 985, 0,
	478, 477, 528, 0, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 0, 0, 0, 0, 0, 0, 0,
	0, 842, 0, 1033, 0, 0, 849, 850, 0, 0,
	0, 0, 0, 0, 0, 878, 0, 0, 0, 876,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 958,
	242, 489, 490, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 500, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1019, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 977, 348, 349,
	352, 351, 978, 350, 0, 219, 979, 353, 0, 963,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 1025,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 516, 1027, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 183, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 990,
	0, 448, 449, 447, 185, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 991, 459, 992, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 471, 474, 475, 476, 1346, 526,
	527, 0, 478, 477, 528, 1033, 0, 0, 177, 479,
	480, 529, 481, 482, 483, 0, 178, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 1023, 0, 1645, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 958, 242, 489, 490, 491, 0, 243, 965, 0,
	946, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 260, 949, 947, 948, 955, 951, 950,
	954, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 986, 987,
	0, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 993, 0, 500, 298, 0, 299,
	300, 301, 302, 960, 961, 964, 355, 971, 303, 304,
	0, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	0, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 972, 962, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	1019, 329, 328, 0, 330, 994, 975, 331, 332, 976,
	0, 333, 334, 953, 952, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 0, 219, 979, 353,
	0, 963, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 1025, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 988, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 989, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 516, 1027, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 183, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 956, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 990, 0, 448, 449, 447, 185, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 991, 459, 992, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 957, 473, 0, 471, 474, 475, 476,
	1346, 526, 527, 0, 478, 477, 528, 2709, 0, 1033,
	177, 479, 480, 529, 481, 482, 483, 0, 178, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 1023, 959, 1645,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 958, 242, 489, 490, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 265,
	266, 493, 494, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	500, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 0, 506, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 1019, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	0, 219, 979, 353, 0, 963, 354, 510, 356, 357,
	0, 358, 359, 360, 0, 1025, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 516,
	1027, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 455, 0, 456,
	519, 520, 521, 522, 0, 463, 0, 457, 458, 991,
	459, 992, 0, 460, 461, 462, 0, 464, 465, 0,
	0, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	471, 474, 475, 476, 525, 526, 527, 0, 478, 477,
	528, 1015, 0, 1033, 0, 479, 480, 529, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 1023, 959, 1021, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 958,
	242, 489, 490, 491, 0, 243, 965, 0, 946, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 949, 947, 948, 955, 951, 950, 954, 261,
	262, 263, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 986, 987, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 993, 0, 500, 298, 0, 299, 300, 301,
	302, 960, 961, 964, 355, 971, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 970,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 972, 962, 973, 318, 319, 320, 974, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 1019, 329,
	328, 0, 330, 994, 975, 331, 332, 976, 0, 333,
	334, 953, 952, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 977, 348, 349,
	352, 351, 978, 350, 0, 219, 979, 353, 0, 963,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 1025,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 988, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 989, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 516, 1027, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 956, 430, 410, 411, 431,
	432, 983, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 990,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 991, 459, 992, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 957, 473, 0, 471, 474, 475, 476, 525, 526,
	527, 0, 478, 477, 528, 1033, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 959, 1023, 0, 1021, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 958, 242, 489, 490, 491, 0, 243, 965, 0,
	946, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 260, 949, 947, 948, 955, 951, 950,
	954, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 986, 987,
	0, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 993, 0, 500, 298, 0, 299,
	300, 301, 302, 960, 961, 964, 355, 971, 303, 304,
	0, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	0, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 972, 962, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	1019, 329, 328, 0, 330, 994, 975, 331, 332, 976,
	0, 333, 334, 953, 952, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 0, 219, 979, 353,
	0, 963, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 1025, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 988, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 989, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 516, 1027, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 956, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 990, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 991, 459, 992, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 957, 473, 0, 471, 474, 475, 476,
	525, 526, 527, 0, 478, 477, 528, 1033, 0, 0,
	0, 479, 480, 529, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 959, 1023, 0, 1021,
	0, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 958, 242, 489, 490, 491, 0, 243,
	965, 0, 946, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 949, 947, 948, 955,
	951, 950, 954, 261, 262, 263, 264, 265, 266, 493,
	494, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	986, 987, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 0, 294, 0,
	0, 969, 295, 296, 0, 297, 993, 0, 500, 298,
	0, 299, 300, 301, 302, 960, 961, 964, 355, 971,
	303, 304, 0, 305, 306, 308, 0, 0, 218, 307,
	309, 316, 0, 970, 310, 504, 312, 311, 313, 314,
	315, 505, 0, 506, 0, 317, 972, 962, 973, 318,
	319, 320, 974, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 994, 975, 331,
	332, 976, 0, 333, 334, 953, 952, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 977, 348, 349, 352, 351, 978, 350, 0, 219,
	979, 353, 0, 963, 354, 510, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 988, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 989, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 516, 1027, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 956,
	430, 410, 411, 431, 432, 983, 433, 434, 517, 435,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 990, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 455, 0, 456, 519, 520,
	521, 522, 0, 463, 0, 457, 458, 991, 459, 992,
	0, 460, 461, 462, 0, 464, 465, 0, 0, 466,
	467, 468, 469, 470, 472, 957, 473, 0, 471, 474,
	475, 476, 525, 526, 527, 0, 478, 477, 528, 842,
	0, 1204, 0, 479, 480, 529, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	484, 1546, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 486, 231, 487, 234, 232, 233, 488, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 489,
	490, 491, 0, 243, 492, 0, 1096, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 968, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 493, 494, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 495, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 496, 497, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 498, 291, 292, 0,
	293, 0, 294, 0, 0, 969, 295, 296, 0, 297,
	499, 0, 500, 298, 0, 299, 300, 301, 302, 501,
	502, 503, 355, 971, 303, 304, 0, 305, 306, 308,
	0, 0, 0, 307, 309, 316, 0, 970, 310, 504,
	312, 311, 313, 314, 315, 505, 0, 506, 0, 317,
	972, 507, 973, 318, 319, 320, 974, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 508, 975, 331, 332, 976, 0, 333, 334, 0,
	0, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 347, 345, 977, 348, 349, 352, 351,
	978, 350, 0, 0, 979, 353, 0, 509, 354, 510,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 980, 367, 981, 512,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 513, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 515, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 982, 404, 405, 406,
	407, 516, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 183, 425, 426, 420, 422, 423, 424, 421,
	427, 428, 429, 0, 430, 410, 411, 431, 432, 983,
	433, 434, 517, 435, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 446, 442, 443, 444, 518, 0, 448,
	449, 447, 185, 450, 451, 452, 453, 454, 282, 455,
	0, 456, 519, 520, 521, 522, 0, 463, 0, 457,
	458, 523, 459, 524, 0, 460, 461, 462, 0, 464,
	465, 0, 0, 466, 467, 468, 469, 470, 472, 0,
	473, 0, 471, 474, 475, 476, 1346, 526, 527, 0,
	478, 477, 528, 1343, 0, 1204, 177, 479, 480, 529,
	481, 482, 483, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 484, 152, 0, 0, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 489, 490, 491, 0, 243, 492, 0,
	1096, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	0, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 499, 0, 500, 298, 0, 299,
	300, 301, 302, 501, 502, 503, 355, 971, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 972, 507, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 508, 975, 331, 332, 976,
	0, 333, 334, 0, 0, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 0, 0, 979, 353,
	0, 509, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 513, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 183, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 0, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 0, 448, 449, 447, 185, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 523, 459, 524, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 0, 473, 0, 471, 474, 475, 476,
	1346, 526, 527, 0, 478, 477, 528, 0, 0, 0,
	177, 479, 480, 529, 481, 482, 483, 0, 178, 0,
	0, 0, 0, 1204, 1203, 0, 0, 0, 0, 1201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 152,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 489, 490, 491, 0, 243, 492, 0, 1096, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 968,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 0, 969, 295, 296,
	0, 297, 499, 0, 500, 298, 0, 299, 300, 301,
	302, 501, 502, 503, 355, 971, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 970,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 972, 507, 973, 318, 319, 320, 974, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 508, 975, 331, 332, 976, 0, 333,
	334, 0, 0, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 977, 348, 349,
	352, 351, 978, 350, 0, 0, 979, 353, 0, 509,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 980, 367,
	981, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 513, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 982, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 0, 430, 410, 411, 431,
	432, 983, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 523, 459, 524, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 0, 473, 0, 471, 474, 475, 476, 525, 526,
	527, 0, 478, 477, 528, 0, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 1204, 1203, 0, 0, 0,
	0, 1201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 2913, 225, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 489, 490, 491, 0, 243, 492, 0,
	1096, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 968, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	0, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 969,
	295, 296, 0, 297, 499, 0, 500, 298, 0, 299,
	300, 301, 302, 501, 502, 503, 355, 971, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 970, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 972, 507, 973, 318, 319, 320,
	974, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 508, 975, 331, 332, 976,
	0, 333, 334, 0, 0, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 977,
	348, 349, 352, 351, 978, 350, 0, 0, 979, 353,
	0, 509, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	980, 367, 981, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 513, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	982, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 0, 430, 410,
	411, 431, 432, 983, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 523, 459, 524, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 0, 473, 0, 471, 474, 475, 476,
	525, 526, 527, 0, 478, 477, 528, 0, 0, 0,
	0, 479, 480, 529, 481, 482, 483, 1204, 1203, 0,
	0, 0, 0, 1201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 1213,
	225, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	0, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 489, 490, 491, 0, 243,
	492, 0, 1096, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 968, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 493,
	494, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	496, 497, 0, 217, 0, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 0, 294, 0,
	0, 969, 295, 296, 0, 297, 499, 0, 500, 298,
	0, 299, 300, 301, 302, 501, 502, 503, 355, 971,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 970, 310, 504, 312, 311, 313, 314,
	315, 505, 0, 506, 0, 317, 972, 507, 973, 318,
	319, 320, 974, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 508, 975, 331,
	332, 976, 0, 333, 334, 0, 0, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 977, 348, 349, 352, 351, 978, 350, 0, 0,
	979, 353, 0, 509, 354, 510, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 980, 367, 981, 512, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 513, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 982, 404, 405, 406, 407, 516, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 0,
	430, 410, 411, 431, 432, 983, 433, 434, 517, 435,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 518, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 455, 0, 456, 519, 520,
	521, 522, 0, 463, 0, 457, 458, 523, 459, 524,
	0, 460, 461, 462, 0, 464, 465, 0, 0, 466,
	467, 468, 469, 470, 472, 0, 473, 0, 471, 474,
	475, 476, 525, 526, 527, 0, 478, 477, 528, 1033,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 959, 0,
	0, 1353, 0, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 958, 242, 489, 490, 491,
	0, 243, 965, 0, 946, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 968, 259, 260, 949, 947,
	948, 955, 951, 950, 954, 261, 262, 263, 264, 265,
	266, 493, 494, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 986, 987, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 0,
	294, 0, 0, 969, 295, 296, 0, 297, 993, 0,
	500, 298, 0, 299, 300, 301, 302, 960, 961, 964,
	355, 971, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 970, 310, 504, 312, 311,
	313, 314, 315, 505, 0, 506, 0, 317, 972, 962,
	973, 318, 319, 320, 974, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 994,
	975, 331, 332, 976, 0, 333, 334, 953, 952, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 977, 348, 349, 352, 351, 978, 350,
	0, 219, 979, 353, 0, 963, 354, 510, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 980, 367, 981, 988, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	989, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 982, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 956, 430, 410, 411, 431, 432, 983, 433, 434,
	517, 435, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 990, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 455, 0, 456,
	519, 520, 521, 522, 0, 463, 0, 457, 458, 991,
	459, 992, 0, 460, 461, 462, 0, 464, 465, 0,
	0, 466, 467, 468, 469, 470, 472, 957, 473, 0,
	471, 474, 475, 476, 525, 526, 527, 0, 478, 477,
	528, 842, 0, 214, 0, 479, 480, 529, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 484, 0, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 489, 490, 491, 0, 243, 492, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 0, 0,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 499, 0, 500, 298, 0, 299, 300, 301,
	302, 501, 502, 503, 355, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 0, 307, 309, 316, 0, 0,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 0, 507, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 508, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 0, 348, 349,
	352, 351, 0, 350, 0, 0, 0, 353, 0, 509,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 0, 367,
	0, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 513, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 0, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 183, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 0, 430, 410, 411, 431,
	432, 0, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	0, 448, 449, 447, 185, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 523, 459, 524, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 0, 473, 0, 471, 474, 475, 476, 1346, 526,
	527, 0, 478, 477, 528, 214, 0, 0, 177, 479,
	480, 529, 481, 482, 483, 0, 178, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 484, 0, 0, 152, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 489, 490, 491, 0, 243, 492, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	0, 217, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 499, 0, 500, 298, 0, 299,
	300, 301, 302, 501, 502, 503, 355, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 218, 307, 309, 316,
	0, 0, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 0, 507, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 508, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 0,
	348, 349, 352, 351, 0, 350, 0, 219, 0, 353,
	0, 509, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	0, 367, 0, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 513, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	0, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 0, 430, 410,
	411, 431, 432, 0, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 523, 459, 524, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 0, 473, 0, 471, 474, 475, 476,
	525, 526, 527, 0, 478, 477, 528, 1293, 0, 214,
	0, 479, 480, 529, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 484, 1659,
	0, 0, 0, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 489, 490, 491,
	0, 243, 492, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 493, 494, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 0, 217, 0, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 499, 0,
	500, 298, 0, 299, 300, 301, 302, 501, 502, 503,
	355, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	218, 307, 309, 316, 0, 0, 310, 504, 312, 311,
	313, 314, 315, 505, 0, 506, 0, 317, 0, 507,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 508,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 0, 348, 349, 352, 351, 0, 350,
	0, 219, 0, 353, 0, 509, 354, 510, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 0, 367, 0, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	513, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 0, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 0, 430, 410, 411, 431, 432, 0, 433, 434,
	517, 435, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 455, 0, 456,
	519, 520, 521, 522, 0, 463, 0, 457, 458, 523,
	459, 524, 0, 460, 461, 462, 0, 464, 465, 0,
	0, 466, 467, 468, 469, 470, 472, 0, 473, 0,
	471, 474, 475, 476, 525, 526, 527, 0, 478, 477,
	528, 214, 0, 0, 0, 479, 480, 529, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 220, 221,
	222, 223, 224, 0, 225, 0, 0, 0, 0, 0,
	484, 1297, 0, 0, 0, 226, 228, 227, 229, 230,
	485, 486, 231, 487, 234, 232, 233, 488, 0, 235,
	236, 237, 238, 239, 240, 241, 0, 0, 242, 489,
	490, 491, 0, 243, 492, 0, 0, 0, 244, 245,
	246, 247, 248, 249, 0, 251, 252, 253, 250, 0,
	254, 0, 255, 256, 257, 0, 258, 0, 259, 260,
	0, 0, 0, 0, 0, 0, 0, 261, 262, 263,
	264, 265, 266, 493, 494, 0, 267, 0, 269, 268,
	0, 270, 0, 0, 271, 272, 273, 0, 274, 0,
	275, 276, 0, 277, 495, 278, 279, 281, 283, 280,
	284, 285, 286, 287, 496, 497, 0, 217, 0, 0,
	0, 0, 0, 288, 289, 290, 498, 291, 292, 0,
	293, 0, 294, 0, 0, 0, 295, 296, 0, 297,
	499, 0, 500, 298, 0, 299, 300, 301, 302, 501,
	502, 503, 355, 0, 303, 304, 0, 305, 306, 308,
	0, 0, 218, 307, 309, 316, 0, 0, 310, 504,
	312, 311, 313, 314, 315, 505, 0, 506, 0, 317,
	0, 507, 0, 318, 319, 320, 0, 321, 322, 0,
	0, 323, 324, 325, 326, 327, 0, 329, 328, 0,
	330, 508, 0, 331, 332, 0, 0, 333, 334, 0,
	0, 335, 336, 337, 0, 338, 339, 341, 343, 340,
	342, 344, 346, 347, 345, 0, 348, 349, 352, 351,
	0, 350, 0, 219, 0, 353, 0, 509, 354, 510,
	356, 357, 0, 358, 359, 360, 0, 0, 362, 363,
	364, 0, 0, 365, 366, 511, 0, 367, 0, 512,
	368, 361, 369, 370, 371, 372, 373, 374, 375, 0,
	376, 377, 513, 378, 514, 379, 0, 380, 0, 381,
	382, 383, 384, 385, 386, 387, 515, 388, 389, 0,
	390, 391, 392, 393, 394, 0, 396, 397, 398, 395,
	399, 400, 401, 402, 0, 403, 0, 404, 405, 406,
	407, 516, 408, 0, 409, 413, 414, 415, 416, 417,
	418, 419, 0, 425, 426, 420, 422, 423, 424, 421,
	427, 428, 429, 0, 430, 410, 411, 431, 432, 0,
	433, 434, 517, 435, 436, 0, 437, 438, 439, 440,
	412, 441, 445, 446, 442, 443, 444, 518, 0, 448,
	449, 447, 0, 450, 451, 452, 453, 454, 282, 455,
	0, 456, 519, 520, 521, 522, 0, 463, 0, 457,
	458, 523, 459, 524, 0, 460, 461, 462, 0, 464,
	465, 0, 0, 466, 467, 468, 469, 470, 472, 0,
	473, 0, 471, 474, 475, 476, 525, 526, 527, 0,
	478, 477, 528, 214, 0, 0, 0, 479, 480, 529,
	481, 482, 483, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 484, 2863, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 489, 490, 491, 0, 243, 492, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 263, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 0, 0, 295, 296,
	0, 297, 499, 0, 500, 298, 0, 299, 300, 301,
	302, 501, 502, 503, 355, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 0,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 0, 507, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 508, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 0, 348, 349,
	352, 351, 0, 350, 0, 219, 0, 353, 0, 509,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 0, 367,
	0, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 513, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 0, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 0, 430, 410, 411, 431,
	432, 0, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	0, 448, 449, 447, 0, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 523, 459, 524, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 0, 473, 0, 471, 474, 475, 476, 525, 526,
	527, 0, 478, 477, 528, 214, 0, 0, 0, 479,
	480, 529, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 220, 221, 222, 223, 224, 0, 225, 0,
	0, 0, 0, 0, 484, 1297, 0, 0, 0, 226,
	228, 227, 229, 230, 485, 486, 231, 487, 234, 232,
	233, 488, 0, 235, 236, 237, 238, 239, 240, 241,
	0, 0, 242, 489, 490, 491, 0, 243, 492, 0,
	0, 0, 244, 245, 246, 247, 248, 249, 0, 251,
	252, 253, 250, 0, 254, 0, 255, 256, 257, 0,
	258, 0, 259, 260, 0, 0, 0, 0, 0, 0,
	0, 261, 262, 263, 264, 265, 266, 493, 494, 0,
	267, 0, 269, 268, 0, 270, 0, 0, 271, 272,
	273, 0, 274, 0, 275, 276, 0, 277, 495, 278,
	279, 281, 283, 280, 284, 285, 286, 287, 496, 497,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 290,
	498, 291, 292, 0, 293, 0, 294, 0, 0, 0,
	295, 296, 0, 297, 499, 0, 500, 298, 0, 299,
	300, 301, 302, 501, 502, 503, 355, 0, 303, 304,
	0, 305, 306, 308, 0, 0, 0, 307, 309, 316,
	0, 0, 310, 504, 312, 311, 313, 314, 315, 505,
	0, 506, 0, 317, 0, 507, 0, 318, 319, 320,
	0, 321, 322, 0, 0, 323, 324, 325, 326, 327,
	0, 329, 328, 0, 330, 508, 0, 331, 332, 0,
	0, 333, 334, 0, 0, 335, 336, 337, 0, 338,
	339, 341, 343, 340, 342, 344, 346, 347, 345, 0,
	348, 349, 352, 351, 0, 350, 0, 0, 0, 353,
	0, 509, 354, 510, 356, 357, 0, 358, 359, 360,
	0, 0, 362, 363, 364, 0, 0, 365, 366, 511,
	0, 367, 0, 512, 368, 361, 369, 370, 371, 372,
	373, 374, 375, 0, 376, 377, 513, 378, 514, 379,
	0, 380, 0, 381, 382, 383, 384, 385, 386, 387,
	515, 388, 389, 0, 390, 391, 392, 393, 394, 0,
	396, 397, 398, 395, 399, 400, 401, 402, 0, 403,
	0, 404, 405, 406, 407, 516, 408, 0, 409, 413,
	414, 415, 416, 417, 418, 419, 0, 425, 426, 420,
	422, 423, 424, 421, 427, 428, 429, 0, 430, 410,
	411, 431, 432, 0, 433, 434, 517, 435, 436, 0,
	437, 438, 439, 440, 412, 441, 445, 446, 442, 443,
	444, 518, 0, 448, 449, 447, 0, 450, 451, 452,
	453, 454, 282, 455, 0, 456, 519, 520, 521, 522,
	0, 463, 0, 457, 458, 523, 459, 524, 0, 460,
	461, 462, 0, 464, 465, 0, 0, 466, 467, 468,
	469, 470, 472, 0, 473, 0, 471, 474, 475, 476,
	525, 526, 527, 0, 478, 477, 528, 214, 0, 0,
	0, 479, 480, 529, 481, 482, 483, 0, 0, 0,
	0, 0, 0, 0, 220, 221, 222, 223, 224, 0,
	225, 0, 0, 0, 0, 0, 484, 0, 0, 2461,
	0, 226, 228, 227, 229, 230, 485, 486, 231, 487,
	234, 232, 233, 488, 0, 235, 236, 237, 238, 239,
	240, 241, 0, 0, 242, 489, 490, 491, 0, 243,
	492, 0, 0, 0, 244, 245, 246, 247, 248, 249,
	0, 251, 252, 253, 250, 0, 254, 0, 255, 256,
	257, 0, 258, 0, 259, 260, 0, 0, 0, 0,
	0, 0, 0, 261, 262, 263, 264, 265, 266, 493,
	494, 0, 267, 0, 269, 268, 0, 270, 0, 0,
	271, 272, 273, 0, 274, 0, 275, 276, 0, 277,
	495, 278, 279, 281, 283, 280, 284, 285, 286, 287,
	496, 497, 0, 0, 0, 0, 0, 0, 0, 288,
	289, 290, 498, 291, 292, 0, 293, 0, 294, 0,
	0, 0, 295, 296, 0, 297, 499, 0, 500, 298,
	0, 299, 300, 301, 302, 501, 502, 503, 355, 0,
	303, 304, 0, 305, 306, 308, 0, 0, 0, 307,
	309, 316, 0, 0, 310, 504, 312, 311, 313, 314,
	315, 505, 0, 506, 0, 317, 0, 507, 0, 318,
	319, 320, 0, 321, 322, 0, 0, 323, 324, 325,
	326, 327, 0, 329, 328, 0, 330, 508, 0, 331,
	332, 0, 0, 333, 334, 0, 0, 335, 336, 337,
	0, 338, 339, 341, 343, 340, 342, 344, 346, 347,
	345, 0, 348, 349, 352, 351, 0, 350, 0, 0,
	0, 353, 0, 509, 354, 510, 356, 357, 0, 358,
	359, 360, 0, 0, 362, 363, 364, 0, 0, 365,
	366, 511, 0, 367, 0, 512, 368, 361, 369, 370,
	371, 372, 373, 374, 375, 0, 376, 377, 513, 378,
	514, 379, 0, 380, 0, 381, 382, 383, 384, 385,
	386, 387, 515, 388, 389, 0, 390, 391, 392, 393,
	394, 0, 396, 397, 398, 395, 399, 400, 401, 402,
	0, 403, 0, 404, 405, 406, 407, 516, 408, 0,
	409, 413, 414, 415, 416, 417, 418, 419, 0, 425,
	426, 420, 422, 423, 424, 421, 427, 428, 429, 0,
	430, 410, 411, 431, 432, 0, 433, 434, 517, 435,
	436, 0, 437, 438, 439, 440, 412, 441, 445, 446,
	442, 443, 444, 518, 0, 448, 449, 447, 0, 450,
	451, 452, 453, 454, 282, 455, 0, 456, 519, 520,
	521, 522, 0, 463, 0, 457, 458, 523, 459, 524,
	0, 460, 461, 462, 0, 464, 465, 0, 0, 466,
	467, 468, 469, 470, 472, 0, 473, 0, 471, 474,
	475, 476, 525, 526, 527, 0, 478, 477, 528, 214,
	0, 0, 0, 479, 480, 529, 481, 482, 483, 0,
	0, 0, 0, 0, 0, 0, 220, 221, 222, 223,
	224, 0, 225, 0, 0, 0, 0, 0, 484, 0,
	0, 3001, 0, 226, 228, 227, 229, 230, 485, 486,
	231, 487, 234, 232, 233, 488, 0, 235, 236, 237,
	238, 239, 240, 241, 0, 0, 242, 489, 490, 491,
	0, 243, 492, 0, 0, 0, 244, 245, 246, 247,
	248, 249, 0, 251, 252, 253, 250, 0, 254, 0,
	255, 256, 257, 0, 258, 0, 259, 260, 0, 0,
	0, 0, 0, 0, 0, 261, 262, 263, 264, 265,
	266, 493, 494, 0, 267, 0, 269, 268, 0, 270,
	0, 0, 271, 272, 273, 0, 274, 0, 275, 276,
	0, 277, 495, 278, 279, 281, 283, 280, 284, 285,
	286, 287, 496, 497, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 290, 498, 291, 292, 0, 293, 0,
	294, 0, 0, 0, 295, 296, 0, 297, 499, 0,
	500, 298, 0, 299, 300, 301, 302, 501, 502, 503,
	355, 0, 303, 304, 0, 305, 306, 308, 0, 0,
	0, 307, 309, 316, 0, 0, 310, 504, 312, 311,
	313, 314, 315, 505, 0, 506, 0, 317, 0, 507,
	0, 318, 319, 320, 0, 321, 322, 0, 0, 323,
	324, 325, 326, 327, 0, 329, 328, 0, 330, 508,
	0, 331, 332, 0, 0, 333, 334, 0, 0, 335,
	336, 337, 0, 338, 339, 341, 343, 340, 342, 344,
	346, 347, 345, 0, 348, 349, 352, 351, 0, 350,
	0, 0, 0, 353, 0, 509, 354, 510, 356, 357,
	0, 358, 359, 360, 0, 0, 362, 363, 364, 0,
	0, 365, 366, 511, 0, 367, 0, 512, 368, 361,
	369, 370, 371, 372, 373, 374, 375, 0, 376, 377,
	513, 378, 514, 379, 0, 380, 0, 381, 382, 383,
	384, 385, 386, 387, 515, 388, 389, 0, 390, 391,
	392, 393, 394, 0, 396, 397, 398, 395, 399, 400,
	401, 402, 0, 403, 0, 404, 405, 406, 407, 516,
	408, 0, 409, 413, 414, 415, 416, 417, 418, 419,
	0, 425, 426, 420, 422, 423, 424, 421, 427, 428,
	429, 0, 430, 410, 411, 431, 432, 0, 433, 434,
	517, 435, 436, 0, 437, 438, 439, 440, 412, 441,
	445, 446, 442, 443, 444, 518, 0, 448, 449, 447,
	0, 450, 451, 452, 453, 454, 282, 455, 0, 456,
	519, 520, 521, 522, 0, 463, 0, 457, 458, 523,
	459, 524, 0, 460, 461, 462, 0, 464, 465, 0,
	0, 466, 467, 468, 469, 470, 472, 0, 473, 0,
	471, 474, 475, 476, 525, 526, 527, 0, 478, 477,
	528, 712, 0, 601, 0, 479, 480, 529, 481, 482,
	483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 221, 222, 223, 224, 0, 225, 0, 0, 0,
	0, 0, 484, 1934, 0, 0, 0, 226, 228, 227,
	229, 230, 485, 486, 231, 487, 234, 232, 233, 488,
	0, 235, 236, 237, 238, 239, 240, 241, 0, 0,
	242, 489, 490, 491, 0, 243, 492, 0, 0, 0,
	244, 245, 246, 247, 248, 249, 0, 251, 252, 253,
	250, 0, 254, 0, 255, 256, 257, 0, 258, 0,
	259, 260, 0, 0, 0, 0, 0, 0, 0, 261,
	262, 607, 264, 265, 266, 493, 494, 0, 267, 0,
	269, 268, 0, 270, 0, 0, 271, 272, 273, 0,
	274, 0, 275, 276, 0, 277, 495, 278, 279, 281,
	283, 280, 284, 285, 286, 287, 496, 497, 0, 217,
	0, 0, 0, 0, 0, 288, 289, 290, 498, 291,
	292, 0, 293, 0, 294, 0, 710, 0, 295, 296,
	0, 297, 499, 0, 500, 298, 0, 299, 300, 301,
	302, 501, 502, 503, 355, 0, 303, 304, 0, 305,
	306, 308, 0, 0, 218, 307, 309, 316, 0, 0,
	310, 504, 312, 311, 313, 314, 315, 505, 0, 506,
	0, 317, 0, 507, 0, 318, 319, 320, 0, 321,
	322, 0, 0, 323, 324, 325, 326, 327, 0, 329,
	328, 0, 330, 508, 0, 331, 332, 0, 0, 333,
	334, 0, 0, 335, 336, 337, 0, 338, 339, 341,
	343, 340, 342, 344, 346, 347, 345, 0, 348, 349,
	352, 351, 0, 350, 0, 219, 0, 353, 0, 509,
	354, 510, 356, 357, 0, 358, 359, 360, 0, 0,
	362, 363, 364, 0, 0, 365, 366, 511, 0, 367,
	0, 512, 368, 361, 369, 370, 371, 372, 373, 374,
	375, 0, 376, 377, 513, 378, 514, 379, 0, 380,
	0, 381, 382, 383, 384, 385, 386, 387, 515, 388,
	389, 0, 390, 391, 392, 393, 394, 0, 396, 397,
	398, 395, 399, 400, 401, 402, 0, 403, 0, 404,
	405, 406, 407, 516, 408, 0, 409, 413, 414, 415,
	416, 417, 418, 419, 0, 425, 426, 420, 422, 423,
	424, 421, 427, 428, 429, 0, 430, 410, 411, 431,
	432, 0, 433, 434, 517, 435, 436, 0, 437, 438,
	439, 440, 412, 441, 445, 446, 442, 443, 444, 518,
	0, 448, 449, 447, 606, 450, 451, 452, 453, 454,
	282, 455, 0, 456, 519, 520, 521, 522, 0, 463,
	0, 457, 458, 523, 459, 524, 0, 460, 461, 462,
	0, 464, 465, 0, 0, 466, 467, 468, 469, 470,
	472, 0, 473, 0, 471, 474, 475, 476, 525, 526,
	527, 0, 478, 477, 528, 0, 600, 0, 601, 479,
	480, 529, 481, 482, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	610, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 607, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 606,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 598, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	1204, 1203, 0, 0, 0, 0, 1201, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 1096, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 971, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 970, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 972,
	507, 973, 318, 319, 320, 974, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 975, 331, 332, 976, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 0, 979, 353, 2843, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 983, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 601, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 607, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 1968, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 606,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	601, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 610, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 607, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 606, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 1380, 0, 1204, 1203, 0, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 610, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 1096,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	968, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 1379, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 971, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	970, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 972, 507, 973, 318, 319, 320, 974,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 975, 331, 332, 976, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 977, 348,
	349, 352, 351, 978, 350, 0, 0, 979, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 1378, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 1377, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 983, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 1341, 0, 1204, 1203,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 1096, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 1340, 502, 503, 355,
	971, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 970, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 972, 507, 973,
	318, 319, 320, 974, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 975,
	331, 332, 976, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 977, 348, 349, 352, 351, 978, 350, 0,
	0, 979, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 983, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	1337, 0, 1204, 1203, 0, 0, 0, 0, 1201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 1096, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	1336, 502, 503, 355, 971, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 970, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 972, 507, 973, 318, 319, 320, 974, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 975, 331, 332, 976, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 977, 348, 349, 352,
	351, 978, 350, 0, 0, 979, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	983, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 1273, 0, 1204, 1203, 0, 0,
	0, 0, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 1096, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 968, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	969, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 1272, 502, 503, 355, 971, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 970, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 972, 507, 973, 318, 319,
	320, 974, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 975, 331, 332,
	976, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	977, 348, 349, 352, 351, 978, 350, 0, 0, 979,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 980, 367, 981, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 982, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 983, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 0, 0,
	0, 0, 479, 480, 529, 481, 482, 483, 1270, 0,
	1204, 1203, 0, 0, 0, 0, 1201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 1096, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 1269, 502,
	503, 355, 971, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 970, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 972,
	507, 973, 318, 319, 320, 974, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 975, 331, 332, 976, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 0, 979, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 983, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 1210, 0, 1204, 1203, 0, 0, 0, 0,
	1201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 1096,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	968, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 969, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 1209, 502, 503, 355, 971, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	970, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 972, 507, 973, 318, 319, 320, 974,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 975, 331, 332, 976, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 977, 348,
	349, 352, 351, 978, 350, 0, 0, 979, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 980,
	367, 981, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 982,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 983, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 1199, 0, 1204, 1203,
	0, 0, 0, 0, 1201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 1096, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 968, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 969, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 1198, 502, 503, 355,
	971, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 970, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 972, 507, 973,
	318, 319, 320, 974, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 975,
	331, 332, 976, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 977, 348, 349, 352, 351, 978, 350, 0,
	0, 979, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 980, 367, 981, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 982, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 983, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	1204, 1203, 0, 0, 0, 0, 1201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 1096, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 971, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 970, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 972,
	507, 973, 318, 319, 320, 974, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 975, 331, 332, 976, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 0, 979, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 983, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	1204, 1203, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 610, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 1096, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 1748, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 971, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 970, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 972,
	507, 973, 318, 319, 320, 974, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 975, 331, 332, 976, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 0, 979, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 983, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 1204, 1203, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 1096, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 968, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 969, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 971, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 970, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 972, 507, 973, 318, 319, 320, 974, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 975, 331, 332, 976, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 977, 348, 349, 352,
	351, 978, 350, 0, 0, 979, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 980, 367, 981,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 982, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	983, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	1204, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 1096, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 968, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 969, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 971, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 970, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 972,
	507, 973, 318, 319, 320, 974, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 975, 331, 332, 976, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 977, 348, 349, 352, 351, 978,
	350, 0, 0, 979, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 980, 367, 981, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 982, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 983, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 2341,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 2338, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 2497, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	2344, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 2494,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 2496, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 2493, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 2343, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 2495,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 2341, 243, 492,
	0, 0, 2335, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 2338, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 2344, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 2334, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 2343, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 2342, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 1437, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 1440, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 1438, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 1439,
	477, 528, 1180, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 1182, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 219, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	1025, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 1177, 0, 214, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 1179, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 1025, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	1084, 0, 214, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	1086, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 219, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 1025, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 558, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 557, 224, 547, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	550, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 551, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 552, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 546, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 547, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 550, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 551, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 552, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 2825, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 219, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 1025, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 2433, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 2432, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 1944, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 219, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 214, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 219, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 1870, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 1874, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 1873, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 219, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 1863, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 1865, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 1330, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 1329, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 219, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 1327, 0, 214, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 1326, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	1324, 0, 214, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	1323, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 219, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 1320, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 217, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 1319, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 218, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 219, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 1191, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 1193, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 217, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 218,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	219, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	550, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 551, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 552, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 214, 478, 477, 528, 0, 0,
	0, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 1975, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	217, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 218, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 219, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 214, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	1973, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 217, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 218, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 219, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	214, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 1971, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 217, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 218, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 219, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 703, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 702, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 701, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 214, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 2497, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 3335, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 537, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 536, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	535, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 214, 3344,
	0, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	214, 2484, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 3126, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 2266, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 214, 2484,
	0, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 2481, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 1952, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 1942, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 578, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 1062,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 1060, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 579, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	575, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 1063, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 574, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 1886, 0, 214, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 1885, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	578, 0, 214, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 568, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 579, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 575, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 1352, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 574, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 1334, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 1333, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 1281, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 1280, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 1262, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 1185, 0, 214, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	578, 0, 214, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 1062, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 1060, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 579, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 575, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 1063, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 574, 520, 521, 522, 0, 463, 0,
	457, 1061, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	214, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 220, 221, 222,
	223, 224, 1044, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 0, 478,
	477, 528, 578, 0, 214, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 568, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 566, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 501, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 567, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 579, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 569, 408, 0, 409, 413, 414,
	575, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 570, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 574, 520, 521, 522, 0,
	463, 0, 457, 572, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 0, 478, 477, 528, 562, 0, 214, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 563, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	560, 0, 214, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	501, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	0, 478, 477, 528, 554, 0, 214, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 0, 478, 477, 528, 532, 0,
	214, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 2801, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 430,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 214, 478, 477, 528, 0, 0,
	0, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 2799, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 214, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	2786, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	214, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 2444, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 388, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	298, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 371, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	385, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 408,
	0, 409, 563, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 214, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	0, 0, 0, 220, 221, 222, 223, 224, 0, 225,
	0, 0, 0, 0, 0, 484, 0, 1899, 0, 0,
	226, 228, 227, 229, 230, 485, 486, 231, 487, 234,
	232, 233, 488, 0, 235, 236, 237, 238, 239, 240,
	241, 0, 0, 242, 489, 490, 491, 0, 243, 492,
	0, 0, 0, 244, 245, 246, 247, 248, 249, 0,
	251, 252, 253, 250, 0, 254, 0, 255, 256, 257,
	0, 258, 0, 259, 260, 0, 0, 0, 0, 0,
	0, 0, 261, 262, 263, 264, 265, 266, 493, 494,
	0, 267, 0, 269, 268, 0, 270, 0, 0, 271,
	272, 273, 0, 274, 0, 275, 276, 0, 277, 495,
	278, 279, 281, 283, 280, 284, 285, 286, 287, 496,
	497, 0, 0, 0, 0, 0, 0, 0, 288, 289,
	290, 498, 291, 292, 0, 293, 0, 294, 0, 0,
	0, 295, 296, 0, 297, 499, 0, 500, 298, 0,
	299, 300, 301, 302, 501, 502, 503, 355, 0, 303,
	304, 0, 305, 306, 308, 0, 0, 0, 307, 309,
	316, 0, 0, 310, 504, 312, 311, 313, 314, 315,
	505, 0, 506, 0, 317, 0, 507, 0, 318, 319,
	320, 0, 321, 322, 0, 0, 323, 324, 325, 326,
	327, 0, 329, 328, 0, 330, 508, 0, 331, 332,
	0, 0, 333, 334, 0, 0, 335, 336, 337, 0,
	338, 339, 341, 343, 340, 342, 344, 346, 347, 345,
	0, 348, 349, 352, 351, 0, 350, 0, 0, 0,
	353, 0, 509, 354, 510, 356, 357, 0, 358, 359,
	360, 0, 0, 362, 363, 364, 0, 0, 365, 366,
	511, 0, 367, 0, 512, 368, 361, 369, 370, 371,
	372, 373, 374, 375, 0, 376, 377, 513, 378, 514,
	379, 0, 380, 0, 381, 382, 383, 384, 385, 386,
	387, 515, 388, 389, 0, 390, 391, 392, 393, 394,
	0, 396, 397, 398, 395, 399, 400, 401, 402, 0,
	403, 0, 404, 405, 406, 407, 516, 408, 0, 409,
	413, 414, 415, 416, 417, 418, 419, 0, 425, 426,
	420, 422, 423, 424, 421, 427, 428, 429, 0, 0,
	410, 411, 431, 432, 0, 433, 434, 517, 435, 436,
	0, 437, 438, 439, 440, 412, 441, 445, 446, 442,
	443, 444, 518, 0, 448, 449, 447, 0, 450, 451,
	452, 453, 454, 282, 455, 0, 456, 519, 520, 521,
	522, 0, 463, 0, 457, 458, 523, 459, 524, 0,
	460, 461, 462, 0, 464, 465, 0, 0, 466, 467,
	468, 469, 470, 472, 0, 473, 0, 471, 474, 475,
	476, 525, 526, 527, 214, 478, 477, 528, 0, 0,
	0, 0, 479, 480, 529, 481, 482, 483, 0, 0,
	0, 220, 221, 222, 223, 224, 0, 225, 0, 0,
	0, 0, 0, 484, 0, 0, 0, 0, 226, 228,
	227, 229, 230, 485, 486, 231, 487, 234, 232, 233,
	488, 0, 235, 236, 237, 238, 239, 240, 241, 0,
	0, 242, 489, 490, 491, 0, 243, 492, 0, 0,
	0, 244, 245, 246, 247, 248, 249, 0, 251, 252,
	253, 250, 0, 254, 0, 255, 256, 257, 0, 258,
	0, 259, 260, 0, 0, 0, 0, 0, 0, 0,
	261, 262, 263, 264, 265, 266, 493, 494, 0, 267,
	0, 269, 268, 0, 270, 0, 0, 271, 272, 273,
	0, 274, 0, 275, 276, 0, 277, 495, 278, 279,
	281, 283, 280, 284, 285, 286, 287, 496, 497, 0,
	0, 0, 0, 0, 0, 0, 288, 289, 290, 498,
	291, 292, 0, 293, 0, 294, 0, 0, 0, 295,
	296, 0, 297, 499, 0, 500, 298, 0, 299, 300,
	301, 302, 1303, 502, 503, 355, 0, 303, 304, 0,
	305, 306, 308, 0, 0, 0, 307, 309, 316, 0,
	0, 310, 504, 312, 311, 313, 314, 315, 505, 0,
	506, 0, 317, 0, 507, 0, 318, 319, 320, 0,
	321, 322, 0, 0, 323, 324, 325, 326, 327, 0,
	329, 328, 0, 330, 508, 0, 331, 332, 0, 0,
	333, 334, 0, 0, 335, 336, 337, 0, 338, 339,
	341, 343, 340, 342, 344, 346, 347, 345, 0, 348,
	349, 352, 351, 0, 350, 0, 0, 0, 353, 0,
	509, 354, 510, 356, 357, 0, 358, 359, 360, 0,
	0, 362, 363, 364, 0, 0, 365, 366, 511, 0,
	367, 0, 512, 368, 361, 369, 370, 371, 372, 373,
	374, 375, 0, 376, 377, 513, 378, 514, 379, 0,
	380, 0, 381, 382, 383, 384, 385, 386, 387, 515,
	388, 389, 0, 390, 391, 392, 393, 394, 0, 396,
	397, 398, 395, 399, 400, 401, 402, 0, 403, 0,
	404, 405, 406, 407, 516, 408, 0, 409, 413, 414,
	415, 416, 417, 418, 419, 0, 425, 426, 420, 422,
	423, 424, 421, 427, 428, 429, 0, 430, 410, 411,
	431, 432, 0, 433, 434, 517, 435, 436, 0, 437,
	438, 439, 440, 412, 441, 445, 446, 442, 443, 444,
	518, 0, 448, 449, 447, 0, 450, 451, 452, 453,
	454, 282, 455, 0, 456, 519, 520, 521, 522, 0,
	463, 0, 457, 458, 523, 459, 524, 0, 460, 461,
	462, 0, 464, 465, 0, 0, 466, 467, 468, 469,
	470, 472, 0, 473, 0, 471, 474, 475, 476, 525,
	526, 527, 214, 478, 477, 528, 0, 0, 0, 0,
	479, 480, 529, 481, 482, 483, 0, 0, 0, 220,
	221, 222, 223, 224, 0, 225, 0, 0, 0, 0,
	0, 484, 0, 0, 0, 0, 226, 228, 227, 229,
	230, 485, 486, 231, 487, 234, 232, 233, 488, 0,
	235, 236, 237, 238, 239, 240, 241, 0, 0, 242,
	489, 490, 491, 0, 243, 492, 0, 0, 0, 244,
	245, 246, 247, 248, 249, 0, 251, 252, 253, 250,
	0, 254, 0, 255, 256, 257, 0, 258, 0, 259,
	260, 0, 0, 0, 0, 0, 0, 0, 261, 262,
	263, 264, 265, 266, 493, 494, 0, 267, 0, 269,
	268, 0, 270, 0, 0, 271, 272, 273, 0, 274,
	0, 275, 276, 0, 277, 495, 278, 279, 281, 283,
	280, 284, 285, 286, 287, 496, 497, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 290, 498, 291, 292,
	0, 293, 0, 294, 0, 0, 0, 295, 296, 0,
	297, 499, 0, 500, 298, 0, 299, 300, 301, 302,
	1243, 502, 503, 355, 0, 303, 304, 0, 305, 306,
	308, 0, 0, 0, 307, 309, 316, 0, 0, 310,
	504, 312, 311, 313, 314, 315, 505, 0, 506, 0,
	317, 0, 507, 0, 318, 319, 320, 0, 321, 322,
	0, 0, 323, 324, 325, 326, 327, 0, 329, 328,
	0, 330, 508, 0, 331, 332, 0, 0, 333, 334,
	0, 0, 335, 336, 337, 0, 338, 339, 341, 343,
	340, 342, 344, 346, 347, 345, 0, 348, 349, 352,
	351, 0, 350, 0, 0, 0, 353, 0, 509, 354,
	510, 356, 357, 0, 358, 359, 360, 0, 0, 362,
	363, 364, 0, 0, 365, 366, 511, 0, 367, 0,
	512, 368, 361, 369, 370, 371, 372, 373, 374, 375,
	0, 376, 377, 513, 378, 514, 379, 0, 380, 0,
	381, 382, 383, 384, 385, 386, 387, 515, 388, 389,
	0, 390, 391, 392, 393, 394, 0, 396, 397, 398,
	395, 399, 400, 401, 402, 0, 403, 0, 404, 405,
	406, 407, 516, 408, 0, 409, 413, 414, 415, 416,
	417, 418, 419, 0, 425, 426, 420, 422, 423, 424,
	421, 427, 428, 429, 0, 430, 410, 411, 431, 432,
	0, 433, 434, 517, 435, 436, 0, 437, 438, 439,
	440, 412, 441, 445, 446, 442, 443, 444, 518, 0,
	448, 449, 447, 0, 450, 451, 452, 453, 454, 282,
	455, 0, 456, 519, 520, 521, 522, 0, 463, 0,
	457, 458, 523, 459, 524, 0, 460, 461, 462, 0,
	464, 465, 0, 0, 466, 467, 468, 469, 470, 472,
	0, 473, 0, 471, 474, 475, 476, 525, 526, 527,
	214, 478, 477, 528, 0, 0, 0, 0, 479, 480,
	529, 481, 482, 483, 0, 0, 0, 220, 221, 222,
	223, 224, 0, 225, 0, 0, 0, 0, 0, 484,
	0, 0, 0, 0, 226, 228, 227, 229, 230, 485,
	486, 231, 487, 234, 232, 233, 488, 0, 235, 236,
	237, 238, 239, 240, 241, 0, 0, 242, 489, 490,
	491, 0, 243, 492, 0, 0, 0, 244, 245, 246,
	247, 248, 249, 0, 251, 252, 253, 250, 0, 254,
	0, 255, 256, 257, 0, 258, 0, 259, 260, 0,
	0, 0, 0, 0, 0, 0, 261, 262, 263, 264,
	265, 266, 493, 494, 0, 267, 0, 269, 268, 0,
	270, 0, 0, 271, 272, 273, 0, 274, 0, 275,
	276, 0, 277, 495, 278, 279, 281, 283, 280, 284,
	285, 286, 287, 496, 497, 0, 0, 0, 0, 0,
	0, 0, 288, 289, 290, 498, 291, 292, 0, 293,
	0, 294, 0, 0, 0, 295, 296, 0, 297, 499,
	0, 500, 298, 0, 299, 300, 301, 302, 501, 502,
	503, 355, 0, 303, 304, 0, 305, 306, 308, 0,
	0, 0, 307, 309, 316, 0, 0, 310, 504, 312,
	311, 313, 314, 315, 505, 0, 506, 0, 317, 0,
	507, 0, 318, 319, 320, 0, 321, 322, 0, 0,
	323, 324, 325, 326, 327, 0, 329, 328, 0, 330,
	508, 0, 331, 332, 0, 0, 333, 334, 0, 0,
	335, 336, 337, 0, 338, 339, 341, 343, 340, 342,
	344, 346, 347, 345, 0, 348, 349, 352, 351, 0,
	350, 0, 0, 0, 353, 0, 509, 354, 510, 356,
	357, 0, 358, 359, 360, 0, 0, 362, 363, 364,
	0, 0, 365, 366, 511, 0, 367, 0, 512, 368,
	361, 369, 370, 371, 372, 373, 374, 375, 0, 376,
	377, 513, 378, 514, 379, 0, 380, 0, 381, 382,
	383, 384, 385, 386, 387, 515, 998, 389, 0, 390,
	391, 392, 393, 394, 0, 396, 397, 398, 395, 399,
	400, 401, 402, 0, 403, 0, 404, 405, 406, 407,
	516, 408, 0, 409, 413, 414, 415, 416, 417, 418,
	419, 0, 425, 426, 420, 422, 423, 424, 421, 427,
	428, 429, 0, 430, 410, 411, 431, 432, 0, 433,
	434, 517, 435, 436, 0, 437, 438, 439, 440, 412,
	441, 445, 446, 442, 443, 444, 518, 0, 448, 449,
	447, 0, 450, 451, 452, 453, 454, 282, 455, 0,
	456, 519, 520, 521, 522, 0, 463, 0, 457, 458,
	523, 459, 524, 0, 460, 461, 462, 0, 464, 465,
	0, 0, 466, 467, 468, 469, 470, 472, 0, 473,
	0, 471, 474, 475, 476, 525, 526, 527, 214, 478,
	477, 528, 0, 0, 0, 0, 479, 480, 529, 481,
	482, 483, 0, 0, 0, 220, 221, 222, 223, 224,
	0, 225, 0, 0, 0, 0, 0, 484, 0, 0,
	0, 0, 226, 228, 227, 229, 230, 485, 486, 231,
	487, 234, 232, 233, 488, 0, 235, 236, 237, 238,
	239, 240, 241, 0, 0, 242, 489, 490, 491, 0,
	243, 492, 0, 0, 0, 244, 245, 246, 247, 248,
	249, 0, 251, 252, 253, 250, 0, 254, 0, 255,
	256, 257, 0, 258, 0, 259, 260, 0, 0, 0,
	0, 0, 0, 0, 261, 262, 263, 264, 265, 266,
	493, 494, 0, 267, 0, 269, 268, 0, 270, 0,
	0, 271, 272, 273, 0, 274, 0, 275, 276, 0,
	277, 495, 278, 279, 281, 283, 280, 284, 285, 286,
	287, 496, 497, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 290, 498, 291, 292, 0, 293, 0, 294,
	0, 0, 0, 295, 296, 0, 297, 499, 0, 500,
	0, 0, 299, 300, 301, 302, 501, 502, 503, 355,
	0, 303, 304, 0, 305, 306, 308, 0, 0, 0,
	307, 309, 316, 0, 0, 310, 504, 312, 311, 313,
	314, 315, 505, 0, 506, 0, 317, 0, 507, 0,
	318, 319, 320, 0, 321, 322, 0, 0, 323, 324,
	325, 326, 327, 0, 329, 328, 0, 330, 508, 0,
	331, 332, 0, 0, 333, 334, 0, 0, 335, 336,
	337, 0, 338, 339, 341, 343, 340, 342, 344, 346,
	347, 345, 0, 348, 349, 352, 351, 0, 350, 0,
	0, 0, 353, 0, 509, 354, 510, 356, 357, 0,
	358, 359, 360, 0, 0, 362, 363, 364, 0, 0,
	365, 366, 511, 0, 367, 0, 512, 368, 361, 369,
	370, 0, 372, 373, 374, 375, 0, 376, 377, 513,
	378, 514, 379, 0, 380, 0, 381, 382, 383, 384,
	0, 386, 387, 515, 388, 389, 0, 390, 391, 392,
	393, 394, 0, 396, 397, 398, 395, 399, 400, 401,
	402, 0, 403, 0, 404, 405, 406, 407, 516, 0,
	0, 409, 413, 414, 415, 416, 417, 418, 419, 0,
	425, 426, 420, 422, 423, 424, 421, 427, 428, 429,
	0, 430, 410, 411, 431, 432, 0, 433, 434, 517,
	435, 436, 0, 437, 438, 439, 440, 412, 441, 445,
	446, 442, 443, 444, 518, 0, 448, 449, 447, 0,
	450, 451, 452, 453, 454, 282, 455, 0, 456, 519,
	520, 521, 522, 0, 463, 0, 457, 458, 523, 459,
	524, 0, 460, 461, 462, 0, 464, 465, 0, 0,
	466, 467, 468, 469, 470, 472, 0, 473, 0, 471,
	474, 475, 476, 525, 526, 527, 0, 478, 477, 528,
	0, 0, 0, 0, 479, 480, 529, 481, 482, 483,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	1513, 0, 0, 0, 0, 0, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525,
	1526, 1527, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 1518, 1513, 0, 0, 1504, 0, 0, 0,
	1485, 0, 0, 1501, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	0, 0, 0, 0, 0, 0, 1501, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1507, 1508, 1509, 1510, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 1532, 0,
	0, 0, 1512, 1514, 1507, 1508, 1509, 1510, 0, 0,
	0, 0, 0, 0, 1490, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1529, 0, 0, 0, 0, 0,
	0, 1499, 1500, 0, 0, 0, 0, 0, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 0, 0, 1499, 1500, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 1519, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 1511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	1511, 1523, 0, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 1506, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 1523, 0, 0, 0, 1482, 1483,
	1504, 1515, 1516, 1517, 1525, 1526, 1527, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 1513, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 1521, 0, 0, 1496, 1497,
	1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 0, 1484, 0, 0, 0, 0,
	0, 0, 2648, 0, 1504, 1507, 1508, 1509, 1510, 0,
	0, 1501, 0, 0, 0, 1490, 0, 0, 1521, 0,
	0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 1522,
	0, 0, 1532, 0, 0, 2647, 1512, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 1507,
	1508, 1509, 1510, 0, 0, 1499, 1500, 0, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 0, 1522, 0, 0, 1532, 0, 0, 0,
	1512, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1528, 0, 1529, 0, 0, 0, 0, 1519, 0, 1499,
	1500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 1530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 1518, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 0, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1482, 1483, 0, 1515, 1516,
	1517, 1525, 1526, 1527, 1484, 0, 0, 0, 0, 1523,
	0, 0, 0, 1504, 1518, 1513, 0, 0, 0, 0,
	1501, 0, 1485, 0, 0, 0, 0, 1531, 0, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0,
	0, 0, 1484, 0, 0, 0, 2130, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524,
	1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 1522, 0, 0, 1532, 3600, 0, 0, 1512,
	1514, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 1532, 1520, 0, 0, 1512, 1514, 0,
	0, 0, 0, 1505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 1530, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 1523, 0,
	0, 0, 1511, 1518, 1513, 0, 0, 0, 0, 0,
	0, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1484, 0, 0, 0, 0, 1523, 0, 0, 0,
	1504, 0, 0, 0, 0, 0, 0, 1501, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 0, 0, 0, 0, 3596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 0, 0, 0, 0,
	1521, 0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1522,
	0, 0, 1532, 3517, 0, 0, 1512, 1514, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 0, 0, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 1523, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1518, 1513,
	1532, 0, 0, 0, 1512, 1514, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1520,
	0, 0, 1501, 0, 0, 0, 0, 0, 1505, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1530, 0,
	0, 0, 3516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 1523, 0, 0, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1518, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1511, 0, 0, 0,
	3401, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	1523, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1518, 1513, 1532, 0, 0, 0, 1512,
	1514, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 1520, 0, 0, 1501, 0, 0,
	0, 0, 0, 1505, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1530, 0, 0, 0, 3298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 1522,
	0, 0, 1532, 0, 0, 0, 1512, 1514, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 0, 1523, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1511, 0, 0, 0, 3251, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 1523, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1518, 1513,
	1532, 0, 0, 0, 1512, 1514, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1520,
	0, 0, 1501, 0, 0, 0, 0, 0, 1505, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1530, 0,
	0, 0, 3250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 1523, 0, 0, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1518, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1511, 0, 0, 0,
	3249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	1523, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1518, 1513, 1532, 0, 0, 0, 1512,
	1514, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 1520, 0, 0, 1501, 0, 0,
	0, 0, 0, 1505, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1530, 0, 0, 0, 3008, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 1522,
	0, 0, 1532, 0, 0, 0, 1512, 1514, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 0, 1523, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1518, 1513, 0, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1511, 0, 0, 0, 2645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 1523, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1518, 1513,
	1532, 0, 0, 0, 1512, 1514, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1520,
	0, 0, 1501, 0, 0, 0, 0, 0, 1505, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1530, 0,
	0, 0, 2644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 1523, 0, 0, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 1518, 1513, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1511, 0, 0, 0,
	2643, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	1523, 0, 0, 0, 1482, 1483, 0, 1515, 1516, 1517,
	1525, 1526, 1527, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 1518, 1513, 1532, 0, 0, 0, 1512,
	1514, 1485, 0, 0, 0, 0, 1531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 1484, 0, 0, 0, 0, 0, 0, 0, 0,
	1504, 0, 0, 0, 1520, 0, 0, 1501, 0, 0,
	0, 0, 0, 1505, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1530, 0, 0, 0, 2642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1507, 1508, 1509, 1510, 0,
	0, 0, 0, 0, 0, 1490, 3705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 1522,
	0, 0, 1532, 0, 0, 0, 1512, 1514, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1528, 0, 1529, 0,
	0, 0, 0, 0, 0, 1499, 1500, 0, 1523, 0,
	0, 0, 1482, 1483, 0, 1515, 1516, 1517, 1525, 1526,
	1527, 1520, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 1518, 1513, 0, 0, 0, 0, 2571, 0, 1485,
	0, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 3704,
	0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1511, 0, 2600, 2572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1506,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 1523, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 1518, 1513,
	1532, 0, 0, 0, 1512, 1514, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 0, 0, 0, 1520,
	0, 0, 1501, 0, 0, 0, 0, 0, 1505, 1521,
	0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495,
	1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 1508, 1509, 1510, 0, 0, 0, 0, 0, 0,
	1490, 0, 2692, 0, 0, 2691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 0, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 0, 0, 0, 0, 0, 0,
	1499, 1500, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 1511, 0, 0, 0,
	0, 0, 0, 0, 0, 2240, 0, 0, 0, 0,
	0, 0, 1482, 1483, 1506, 1515, 1516, 1517, 1525, 1526,
	1527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 1513, 0, 0, 0, 2239, 0, 0, 1485,
	1523, 0, 0, 0, 1531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 1484,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 1518,
	1513, 0, 0, 0, 0, 1501, 0, 1485, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1484, 0, 0,
	0, 0, 0, 0, 1521, 0, 1504, 1496, 1497, 1503,
	1524, 1502, 1498, 1501, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 1507, 1508, 1509, 1510, 0, 0, 0,
	0, 0, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	1532, 0, 0, 0, 1512, 1514, 0, 0, 0, 0,
	0, 1507, 1508, 1509, 1510, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 1528, 0, 1529, 0, 0, 0,
	0, 0, 0, 1499, 1500, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1522, 0, 0, 1532, 1520,
	0, 0, 1512, 1514, 0, 0, 0, 0, 1505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 1529, 0, 0, 0, 1530, 0,
	0, 1499, 1500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1519, 0, 1520, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 0, 1519, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1482,
	1483, 0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 1511, 1518, 1513,
	0, 0, 0, 0, 0, 0, 1485, 0, 0, 0,
	0, 1531, 0, 0, 0, 1506, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 1523, 0, 1482, 1483, 1504, 1515, 1516, 1517, 1525,
	1526, 1527, 1501, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 1513, 0, 0, 0, 0, 0, 0,
	1485, 0, 0, 0, 0, 1531, 0, 1521, 0, 0,
	1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493, 1494,
	1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 0, 0,
	1484, 0, 0, 0, 0, 0, 0, 0, 0, 1504,
	1507, 1508, 1509, 1510, 0, 0, 1501, 0, 0, 0,
	1490, 0, 0, 0, 0, 1521, 0, 0, 1496, 1497,
	1503, 1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487,
	1488, 1489, 1491, 1492, 1522, 0, 0, 1532, 0, 0,
	0, 1512, 1514, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1528, 0, 1529, 1507, 1508, 1509, 1510, 0, 0,
	1499, 1500, 0, 0, 1490, 0, 0, 0, 0, 2698,
	0, 0, 0, 0, 0, 0, 1520, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 1522, 0,
	0, 1532, 0, 0, 0, 1512, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 1530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 1529, 0, 0,
	0, 0, 1519, 0, 1499, 1500, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1511, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 1519, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1518, 1513, 0, 0,
	1523, 2693, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2987, 0, 0, 1484, 0, 0, 0, 1506, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 0, 1496, 1497, 1503,
	1524, 1502, 1498, 0, 1495, 1493, 1494, 1486, 1487, 1488,
	1489, 1491, 1492, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 0, 0, 0, 0, 0, 0, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1522, 0, 0, 1532, 0, 0, 1521, 1512,
	1514, 1496, 1497, 1503, 1524, 1502, 1498, 0, 1495, 1493,
	1494, 1486, 1487, 1488, 1489, 1491, 1492, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 0, 0, 1499, 1500,
	0, 0, 0, 0, 0, 1482, 1483, 0, 1515, 1516,
	1517, 1525, 1526, 1527, 1520, 0, 0, 0, 0, 0,
	0, 0, 0, 1505, 1518, 1513, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 1531, 0, 0,
	0, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 1482, 1483, 0,
	1515, 1516, 1517, 1525, 1526, 1527, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 1518, 1513, 0, 0,
	0, 2646, 0, 0, 1485, 0, 0, 0, 0, 1531,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 1484, 0, 1490, 0, 1523, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	1501, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1522, 0, 0, 1532, 0, 0, 0, 1512, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 0, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1508,
	1509, 1510, 1520, 0, 0, 0, 0, 0, 1490, 0,
	0, 1505, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1530, 1522, 0, 0, 1532, 0, 0, 0, 1512,
	1514, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1528,
	0, 1529, 0, 0, 0, 0, 2660, 0, 1499, 1500,
	0, 0, 0, 0, 0, 1482, 1483, 0, 1515, 1516,
	1517, 1525, 1526, 1527, 1520, 0, 0, 0, 0, 0,
	0, 0, 1511, 1505, 1518, 1513, 0, 0, 0, 0,
	0, 0, 1485, 0, 0, 0, 0, 1531, 0, 0,
	1506, 0, 0, 1530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 1484, 0, 0, 0, 1523, 0, 0, 0,
	0, 1504, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1507, 1508, 1509, 1510,
	0, 0, 0, 0, 0, 0, 1490, 0, 1523, 0,
	1521, 0, 0, 1496, 1497, 1503, 1524, 1502, 1498, 0,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 0,
	1522, 0, 0, 1532, 0, 0, 0, 1512, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1528, 0, 1529,
	0, 0, 0, 0, 0, 0, 1499, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1520, 0, 0, 0, 0, 0, 0, 0,
	0, 1505, 1521, 0, 0, 1496, 1497, 1503, 1524, 1502,
	1498, 0, 1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491,
	1492, 1530, 0, 0, 0, 0, 0, 0, 1482, 1483,
	0, 1515, 1516, 1517, 1525, 1526, 1527, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1513, 0,
	0, 748, 0, 784, 0, 1485, 0, 0, 0, 0,
	1531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 1511, 0, 0, 1484, 0, 0, 0, 767,
	753, 0, 0, 0, 1504, 0, 0, 0, 0, 0,
	1506, 1501, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 754, 0, 0, 0, 0,
	757, 0, 0, 0, 790, 0, 1523, 0, 0, 0,
	0, 764, 765, 0, 0, 0, 0, 777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 759, 0, 0, 0, 0, 0, 0, 1507,
	1508, 1509, 1510, 0, 0, 0, 0, 0, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1522, 0, 0, 1532, 0, 0, 0,
	1512, 1514, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 760, 0, 1496, 1497, 1503, 1524, 1502, 1498, 752,
	1495, 1493, 1494, 1486, 1487, 1488, 1489, 1491, 1492, 1499,
	1500, 0, 0, 0, 761, 762, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1520, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 769, 768, 0, 0,
	0, 0, 0, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1511, 0, 758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 756, 0, 1506, 0, 781, 782, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1523,
	779, 0, 0, 0, 0, 0, 0, 775, 0, 0,
	772, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	0, 0, 0, 750, 0, 787, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 774, 0, 0, 0, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 788, 0, 0, 0, 0, 0,
	0, 0, 776, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 0, 1496, 1497, 1503, 1524,
	1502, 1498, 778, 1495, 1493, 1494, 1486, 1487, 1488, 1489,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 780,
}
var sqlPact = [...]int{

	9048, -1000, -1000, -1000, -1000, -1000, -1000, 233, 227, 226,
	223, 222, 214, 212, 211, -1000, -1000, -1000, 210, -1000,
	-1000, 209, -1000, 208, 207, 206, 204, -1000, 203, 202,
	194, -1000, -1000, -1000, -1000, 192, 191, 190, 61184, 1889,
	73276, 64192, 2123, 55566, 72842, 55132, 72408, 71974, 189, -1000,
	71540, 188, 187, 177, -1000, -1000, 176, 173, 2227, 45534,
	172, 171, 169, 1834, 168, 166, -1000, 164, -1000, 11266,
	1337, -1000, 162, 160, -1000, 9973, 6785, 63330, 2296, 157,
	156, 45099, 2272, 2324, -1000, -1000, 1697, -1000, -1000, 155,
	149, 147, 142, 141, 140, 138, 134, 133, -1000, 131,
	116, 115, 113, 112, 110, 104, -1000, 102, 97, 96,
	94, 89, 85, 81, 79, 78, 77, 75, 74, -1000,
	83699, 1588, 1470, 1464, 1463, 1454, 1453, 904, 73, 72,
	70, 68, 64, 63, 61, -1000, 60, 58, 55, 52,
	-1000, 51, 50, 240, 43, 41, 35, 31, 28, 2724,
	-1000, 1414, 1132, 22133, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 77556, 73704, 27,
	-108, 26, -1000, 2677, 838, 37709, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 490, -1000, -1000, -1000,
	292, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1604, 722, -1000, -1000, -1000, 71106, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1887, -5, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 721, -1000, 1883, 165, 1784, -1000, -1000,
	-1000, -1000, -1000, 73704, -1000, -1000, 2972, 2971, 1714, 718,
	70678, -1000, 1382, -1000, 859, 24887, -1000, 1107, -1000, 24887,
	289, -1000, -1000, -1000, -1000, -1000, -1000, 54698, 16593, 54264,
	53830, 70244, 16149, 60756, 49944, 49500, -1000, -1000, 40331, 1149,
	-1000, -1000, -1000, -1000, -1000, 4, 50814, 73704, -1000, 287,
	-1000, -1000, -1000, -1000, -1000, -1000, 31417, 896, 30948, 431,
	30479, 428, -1000, -1000, -1000, -1000, 2970, 2968, 1047, 2966,
	2610, 77128, 1552, 2965, 1457, 1131, 942, 2964, 2963, 2962,
	2960, 2957, 2956, 2953, 1247, 69810, 2413, 1426, 49056, 48612,
	61184, 61184, 2122, 69376, 1187, 1186, -1000, -1000, -1000, -1000,
	2483, 2308, 2299, 42505, -1000, -1000, 2951, 2947, 2946, 2945,
	2944, 76700, 1498, 2943, 2040, 2940, 2938, 2936, 2935, 2934,
	2930, 2929, 2928, 2922, -1000, 60322, 59888, 59454, 59020, 68942,
	48168, 47724, -1000, -1000, -1000, 39441, 8593, 7699, 6765, 68508,
	40773, 61184, 61184, -1000, -1000, 31874, 86, -1000, -1000, -1000,
	40331, 2358, -1000, 31874, 86, -1000, 73704, -1000, 2412, 1601,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1859, 1395, 2834, 47280, 1648, 1232, 2664, 2480, 2475, 1314,
	2098, 2462, 2447, 2444, 2439, 2436, 1438, 2085, 427, 21664,
	1347, 1316, 2433, 2399, 2842, 1645, 1690, 53396, 2918, 2913,
	2632, 2398, 2394, 2356, -1000, -1000, -1000, -1000, 1283, -1000,
	-1000, 56422, -1000, -1000, 1096, -1000, -1000, 1096, -1000, -1000,
	-1000, -1000, -1000, 1144, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1414, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1823, -1000, 1711, -1000, -1000, 2049, 2658, 2658, 2658, 2694,
	467, 464, -1000, 240, -1000, -1000, 83414, -1000, -1000, 31874,
	31874, 31874, 31874, 31874, 1670, -1000, 716, -1000, -1000, 753,
	-1000, 715, 596, -1000, -1000, -1000, -1000, -1000, -1000, 713,
	2847, -1000, -1000, -1000, -1000, -1000, 2807, -1000, 18862, -1000,
	-1000, -1000, 435, 710, 31874, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 895,
	-1000, 281, 874, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 645, 1567, 642,
	642, 642, -1000, -1000, 936, -1000, -1000, -1000, 319, 641,
	317, 635, -1000, -1000, -1000, -1000, 2410, 703, 702, -1000,
	701, 700, 699, 698, 695, -1000, -1000, -1000, 693, 690,
	689, 688, 687, 686, 685, 682, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 933, -1000, 681, 680, 677, 675,
	673, 672, 670, 669, 668, -1000, -1000, 2, 73704, -1000,
	490, 2, -1000, -1000, 667, -1000, 25344, 25344, 25344, -1000,
	-1000, 1882, 31874, -1000, 2388, -1000, 9, 9, 832, 38573,
	-1000, 36841, 832, 237, 766, 42071, -1000, 2349, -1000, -1000,
	664, 261, -1000, -1000, 2348, 73704, 17035, 73704, 61184, 61184,
	61184, 2571, 31874, -1000, -1000, 46836, 73704, 61612, 2772, 11249,
	46836, 73704, 2408, -1000, -1000, -1000, 73704, -1000, 31874, -1000,
	2769, 1269, 51246, 2728, -10, -1000, -1000, -1000, -1000, -1000,
	-1000, 2020, 2052, 1026, 1937, 1315, -1000, 24887, 2602, -1000,
	-1000, -1000, 260, 17035, -1000, 1994, 2539, 1203, -1000, 1933,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1504, 2536,
	-1000, 1579, 2532, 1484, -1000, -1000, 1703, -1000, -1000, 2627,
	-1000, -1000, 1795, 2531, 10, -1000, -1000, 894, 2530, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 894, 2527,
	-1000, 810, -1000, 50386, 40331, 50814, -1, -1000, -1000, -22,
	-1000, 15705, 83414, -1000, -1000, -1000, 83414, 808, -1000, -1000,
	2526, -1000, 83414, 807, -1000, -1000, 2525, -1000, -1000, -1000,
	2907, -1000, 2906, 1982, 2905, 2904, 2902, -1000, 1466, 1564,
	2900, -1000, 2899, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	58586, 1876, -1000, -1000, 57718, 58152, 941, -1000, 894, 1979,
	-1000, 894, 1978, -1000, 879, -1000, 2898, 68074, 2142, 894,
	1977, -1000, -1000, -1000, -1000, -1000, 43369, -1000, 43369, -1000,
	43369, -1000, 1350, -1000, 76272, 9, 9, 2807, -1000, -1000,
	-1000, -1000, -1000, 2523, 2897, 2896, 2895, -1000, 73704, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 183, 2521,
	-1000, -1000, 183, 2519, -1000, 183, 2517, -1000, 182, 2508,
	-1000, -1000, 1752, 2507, -1000, -25, 2506, -1000, -1000, -25,
	2502, -1000, -24, -1000, -1000, -1000, 838, -1000, 39007, -1000,
	39007, -1000, 67640, 50386, 883, 650, 44665, 83414, -1000, -131,
	-1000, 40331, 83414, -1000, 50386, 57718, -1000, 67206, 57290, -1000,
	-1000, 1243, 2053, -1000, -1000, -1000, 883, 50386, 50386, 50386,
	-1000, 66772, -1000, -1000, 1674, 1411, 2635, 1671, 61184, -1000,
	1516, -1000, -1000, -1000, 2653, 2407, -1000, 46404, 62896, -1000,
	62468, -1000, 62040, -1000, 61184, -1000, 61184, -1000, 2893, 2892,
	2891, -1000, 2890, 2642, 83414, 2640, -1000, 2427, 1479, 1472,
	73704, -1000, -1000, 73704, -1000, 73704, -1000, -1000, -1000, -1000,
	-1000, 2019, -1000, -1000, -1000, -1000, 61184, -1000, -1000, -1000,
	-1000, -1000, -1000, 2406, -1000, 1458, -1000, 1514, -1000, 1212,
	-1000, -1000, 184, -1000, -1000, -10, -1000, 75844, -1000, 2049,
	-1000, 73704, -1000, 2032, 2389, 2405, 1388, 1863, 2104, -1000,
	30010, 2095, 34159, 1931, 240, -1000, -1000, 240, 240, 24430,
	-1000, -1000, 11249, 11249, 17035, 1173, 31874, 31874, 31874, 31874,
	31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874,
	31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874,
	31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874, 31874,
	31874, 1603, 31874, 1142, 31874, 31874, 31874, 31874, 1791, -1000,
	-1000, 1607, 520, 1705, -1000, 2813, 2813, 2813, 7507, 7507,
	563, 2889, 753, -1000, 31874, -1000, 86, 31874, 17479, -1000,
	-1000, -1000, 464, 9252, 1914, -1000, 460, 17948, -1000, -1000,
	-1000, 18862, 596, 29541, 31874, 916, 83414, 1526, 2830, 15263,
	2309, 2215, -1000, 2835, -1000, -1000, 2830, -1000, -1000, -1000,
	-1000, 2830, 1165, 1159, 2830, -1000, 2830, 2830, 662, 708,
	651, 21195, 20726, 20257, 19788, 549, 31874, 31874, 31874, 31874,
	31874, 31874, 31874, 31874, -1000, 29084, 28615, 28146, 34616, 27677,
	31874, 19319, 27208, 26739, 73704, 2, 2768, 31874, 107, -1000,
	82251, -1000, 107, 107, 661, -27, 83414, 2081, 2081, 38141,
	1906, 1692, 1692, 1692, -1000, 832, 11701, 832, 65912, 1715,
	832, 832, 251, 333, 459, 36409, 2388, 65912, 743, 660,
	23, 21, 19, -1000, -1000, 18, 13, -1000, -1000, 61184,
	659, 17479, 17035, 1268, -29, 250, 2101, 2092, 2091, -1000,
	2076, 1369, -30, 1130, -18, -1000, 7331, -32, -1000, 890,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 927, 655, 653, 371, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 645, 1567, 642, 642, 642, -1000, -1000, -1000,
	319, 641, 317, 635, -1000, -1000, -1000, -1000, -1000, -1000,
	2340, -22, 61612, 837, -35, 1056, -10, -1000, -1000, -1000,
	51246, 1096, -1000, 1845, -1000, -1000, -1000, -1000, -1000, -1000,
	1234, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 895, -1000,
	-1000, -1000, -1000, -1000, -1000, 2826, 2821, 0, -1000, -1000,
	17035, -1000, -13, 1425, -1000, 52962, 1806, 2630, 2622, 1341,
	-1000, 1273, 2692, 56422, 2742, 2745, 586, -1000, 2333, -1000,
	-1000, 856, 1456, 1123, 56422, 1579, -1000, 11249, -1000, 2173,
	2681, 1196, 1262, 1196, 1196, 949, -1000, 56422, 1120, -1000,
	1113, -1000, -15, 2739, 2730, 108, -1000, 2332, 1112, -1000,
	-1000, 61184, 17035, -1000, 1847, -1000, 50386, -1000, 50386, 2153,
	-1000, -51, 810, -1, 50814, 73704, 249, -1000, 31874, 86,
	31874, 86, -1000, -1000, 2500, -1000, -1000, -1000, 2884, 1540,
	2039, -1000, -1000, -1000, 634, 1976, 2331, 73704, 2102, -4,
	61184, -1000, 1579, 1975, -1000, -1000, 56856, -1000, 2499, -1000,
	2498, 455, 2881, -1000, 1872, 1973, -1000, -1000, -1000, 75416,
	1198, 2497, 996, 526, 2763, -1000, 526, 43801, -1000, 73704,
	-1000, -1000, 73704, -1000, -1000, -1000, 2878, -1000, 61184, -1000,
	-1000, 61184, -1000, 61184, -1000, 61184, -1000, 61184, 61184, -1000,
	73704, 50386, 50386, 50386, 6765, 52106, -53, -54, 458, -1000,
	66344, 73704, 989, 52534, 73704, 2592, 883, 40331, -131, 883,
	883, 810, -1000, 810, -1000, 61184, 2404, -1000, 883, 883,
	883, -1000, -1000, -1000, -1000, 2877, 2874, -1000, -1000, -1000,
	893, 61184, 73704, 61184, -1000, -1000, 73704, -1000, 73704, -1000,
	893, 73704, 893, 73704, 893, 73704, -1000, -1000, -1000, -1000,
	-1000, -1000, 86, 31874, 1372, -1000, 2400, -1000, 2391, -1000,
	46, -1000, -1000, -1000, -1000, 1842, 61184, 61184, 61184, 61184,
	73704, 61184, -1000, 56422, -1000, 2032, 2389, -1000, -1000, -1000,
	-1000, -1000, -1000, 1276, 1810, -1000, 2073, -1000, 1308, -1000,
	-1000, -1000, 83414, 35073, -1000, -1000, 83414, 1429, -1000, 33702,
	33245, -1000, -1000, 1404, 61184, 2109, -1000, 2109, -3, -1000,
	81781, 2071, 61184, -1000, -1000, -1000, -1000, -1000, 852, 875,
	875, 1114, 1114, 1114, 1114, 2726, 1708, 335, 981, 4995,
	4995, 737, 737, 737, 737, 737, 4995, 386, 445, 445,
	386, 386, 386, 386, 386, 445, 445, 445, 4995, 4995,
	4995, 7507, 5631, 8201, 31874, 31874, 1111, 1596, 520, 8146,
	31874, 4783, 4783, 4783, 4783, -1000, 2060, -1000, -1000, -1000,
	-1000, 2326, 633, 34616, 34616, -1000, -1000, -1000, -1000, 18405,
	31874, -1000, -1000, -1000, -1000, 26270, -1000, -1000, 81426, -242,
	457, -111, 1, -1000, 31874, 31874, 31874, 456, -1000, 244,
	31874, 73704, -1000, 78753, 741, -74, -1000, -59, 1239, -1000,
	31874, -1000, -1000, 1110, -1000, 1106, 1105, 1104, -1000, 631,
	453, -1000, 243, -1000, 1672, 630, 626, 450, -60, 449,
	841, 839, 448, 447, 446, 31874, -1000, -1000, -1000, -1000,
	-1000, 81218, -1000, -1000, 81071, -1000, -1000, 80863, -1000, -1000,
	80716, -1000, -1000, -1000, 83206, 78462, 78419, 11028, 6572, 10701,
	10554, -61, 443, -1000, 2318, -111, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 441, -1000, 433, -1000, 83124, -111,
	425, 5171, -1000, 34616, 34616, 34616, -1000, 424, -1000, 81928,
	-1000, 82916, 25813, 25813, 25813, 423, 82652, 31874, -111, -62,
	-1000, -67, -1000, -1000, 625, -68, 908, 25344, 37275, 17035,
	-1000, 908, 908, 31874, -1000, 31874, 2083, -1000, -1000, -1000,
	2082, 1493, 2081, 38141, -1000, -1000, -1000, -1000, 65912, -1000,
	2807, 2229, -1000, 65912, -1000, -1000, 73704, 490, -1000, 65912,
	65912, 17035, 832, -1000, 832, 65912, 628, -1000, -1000, -1000,
	-1000, -1000, 419, 41205, 1, 242, 883, -1000, 17035, 2199,
	2199, 2199, 2199, -1000, -1000, 73704, 2786, -1000, 1586, -1000,
	11249, -1000, 751, 1009, 624, -1000, 2830, 2830, -1000, 2830,
	73704, 101, 24887, -1000, 1096, -1000, -1000, 1379, -1000, 1544,
	-1000, 1152, -1000, -1000, -1000, -1000, 24887, -1000, 1821, 73704,
	73704, 61184, -1000, -1000, 1971, 74988, 1970, 11249, 73704, -1000,
	-1000, 623, 615, 2070, 2069, 73704, 73704, 2068, 74560, 74132,
	73704, 1605, 31874, 1905, 1706, 86, 86, -1000, -1000, 86,
	606, 1168, 61184, 61184, 61184, 1465, -1000, -1000, -1000, -1000,
	-1000, 55994, -1000, -1000, 2833, 2832, -1000, 1196, -1000, -1000,
	-1000, 1196, 1579, 1461, 61184, 73704, 1585, 86, 86, -1000,
	-1000, 86, 604, 17035, 1515, -1000, 1847, -1000, -1000, -1000,
	-1000, 45976, 894, 894, 883, 2311, -1000, 2153, -1000, -1000,
	14821, 83414, -1000, 83414, -1000, 73704, -1000, 939, 73704, 52534,
	871, 2494, 42937, -22, 883, 50386, 61184, -4, -1000, 1579,
	2493, 490, 1968, -1000, -1000, 50386, 50386, 2873, 603, 2872,
	-1000, 61184, 2488, 1868, 1967, 2557, 788, 73704, 908, 38141,
	1578, -1000, 41639, 958, 73704, 1433, 80, -1000, -1000, -1000,
	40, 73704, -1000, 2871, -1000, -1000, 183, 183, 183, -1000,
	182, 1752, -1000, -25, -25, -1000, -1000, 6765, 6765, 883,
	-8, 602, -1000, 821, 817, 39889, 50386, -77, -1000, -1000,
	-1000, -1000, -1000, 61184, 73704, 619, 2133, 73704, -78, -1000,
	239, 601, -1000, -1000, 883, 2306, -1000, -1000, 905, -1000,
	1204, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8, -22, -22, -1000, 893, -1000, 893, -1000, 893, -1000,
	83414, -1000, 1371, 1360, 73704, -1000, 17035, 73704, 61184, 17035,
	61184, 2380, 2377, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1031, -1000, 1429, 1796, -1000, 596, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2007, -1000, -9, 24430,
	1940, -1000, -1000, 61184, 7, 31874, 31874, 7171, 6091, 31874,
	34616, 34616, -1000, 31874, 4315, -1000, -1000, -1000, -1000, -1000,
	2302, 594, 31874, 11249, 4228, 3963, -1000, 416, 10198, 386,
	-1000, 31874, -1000, 408, 23973, -1000, 82299, -37, -83, -1000,
	12155, -111, -84, -1000, -1000, 747, -1000, 2553, -1000, 31874,
	82588, 1995, 1563, 1507, 1394, 2830, 2845, 14379, -1000, 44233,
	911, 1734, -1000, -1000, 2830, 833, -1000, -1000, -1000, 833,
	-1000, 80508, -1000, -1000, -1000, -1000, 11249, 11249, 31874, 31874,
	-1000, 31874, 31874, 31874, -1000, -1000, 31874, -1000, -1000, 2277,
	31874, -1000, 11249, 11249, 34616, 34616, 34616, 34616, 34616, 34616,
	34616, 34616, 34616, 34616, 34616, 34616, 34616, 34616, 34616, 34616,
	34616, 34616, 34616, 2065, 34616, 2806, 2806, 2806, -1000, 2366,
	2277, 31874, 31874, 11249, 403, 393, 385, -1000, 31874, -111,
	-1000, -1000, 6765, -1000, 2188, -1000, 31874, -1000, -167, -1000,
	2388, -1000, -1000, 2188, 2188, -85, 83414, 38141, 38141, -1000,
	592, 31874, 2057, -1000, -1000, 739, -240, -1000, 812, -1000,
	-1000, -1000, -1000, -1000, 490, -1000, -1000, -1000, 236, 65912,
	65912, 738, -1000, -86, -1000, -1000, -91, -1000, 2761, 382,
	17035, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -22,
	1765, 2844, -1000, 2831, 746, 736, 2830, 367, 366, 365,
	-22, 73704, -1000, -10, -1000, -1000, -1000, 31874, -1000, -1000,
	2626, 1102, 1094, -1000, 2473, -1000, 1965, -1000, 964, -1000,
	1389, -1000, 31874, 31874, 590, 588, 1590, 2869, 987, 2468,
	1752, 2459, 1752, -1000, -1000, 862, -1000, 83414, 585, 577,
	-1000, -13, 1400, 902, -1000, -1000, 31874, 31874, 65484, -1000,
	381, 2627, 6, -1000, 1092, -1000, -1000, -1000, -1000, 1579,
	1090, -1000, -1000, -1000, 901, -1000, -1000, 31874, -1000, -15,
	1088, -1000, -1000, -1000, -1000, -1000, -1000, 50386, 883, -1000,
	2868, 2867, 2865, 363, -92, -21, 11249, 2760, 1836, 566,
	61184, 851, -1000, 2807, -1000, -1000, -1000, 61184, 2756, 2455,
	894, 894, -1000, 2864, -1000, 970, 17035, 61184, 2452, 2031,
	788, 51678, -1000, 894, 1734, -41, -1000, 1433, 23504, 2628,
	-94, -1000, -1000, -1000, 908, 43801, 38141, 31874, 2863, -97,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 65056,
	65056, 50386, 50386, 50386, 883, 73704, 73704, 52534, 2862, 575,
	73704, 73704, 574, -1000, 73704, 73704, 2861, 50386, -1000, 86,
	-1000, 1739, 61184, 13937, -1000, -1000, -1000, -1000, -1000, 893,
	-1000, -1000, 1599, 1920, 1599, 1437, 1427, -1000, 1789, -1000,
	-1000, -1000, -1000, 2107, 2650, 17035, 2732, 4783, 31874, 31874,
	3875, 1074, 547, 4783, 31874, 31874, 11249, 83667, -99, 31874,
	31874, -1000, 31874, 725, 83414, 2841, 31874, 362, 361, -1000,
	-1000, -1000, 2829, -1000, -1000, -1000, 83414, 31874, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 360, -1000, 109, -1000, -1000,
	-1000, 77984, -1000, 31874, 359, 358, -1000, -1000, -1000, 357,
	355, 9725, 283, 80361, 80153, 80006, 83414, 2366, 83414, -1000,
	-1000, 712, 712, 1222, 1222, 1222, 1222, 2806, 618, 516,
	972, 1148, 1148, 1148, 1660, 955, 955, 1148, 1148, 1148,
	2271, 2059, 564, 5601, -1000, -1000, 83414, 83414, 342, -1000,
	-1000, -1000, -111, 341, 2174, 2680, 83414, -1000, 38141, 2174,
	2174, -1000, -1000, 1493, 73704, 83414, 38141, -1000, 2229, -1000,
	12607, -1000, 17035, -1000, -1000, -1000, -1000, 2807, -1000, 41205,
	-1000, 554, -1000, 47, -1000, -1000, 724, 2860, 745, 337,
	-1000, -1000, -1000, -22, 83414, 73704, 73704, 73704, 2449, -1000,
	2573, -1000, 79798, -105, -1000, 81781, 31874, 73704, -1000, 1627,
	2116, 1041, -1000, 2651, 73704, -1000, 73704, -1000, -1000, 73704,
	73704, 61184, 2438, -112, 83414, -23, -1000, 809, -1000, 1226,
	-1000, 13495, 61184, 61184, 2419, -114, 17035, -25, -1000, -1000,
	-1000, -1000, 2124, -1000, 63758, 1803, 86, -1000, 64624, 2857,
	553, -1000, 1737, -1000, 652, 1579, 86, 61184, -1000, -1000,
	-1000, 552, 73704, 1861, 548, 17035, 2033, 788, 51678, -1000,
	1198, 2104, -1000, -26, -1000, 532, 86, 1734, -1000, -41,
	83414, -1000, 806, -1000, -115, -1000, -1000, 321, -1000, 2591,
	2590, -1000, -1000, 31874, 546, 545, 73704, 2589, -1000, -1000,
	-117, -1000, 2008, -1000, -1000, -1000, -1000, -1000, 17035, 1455,
	-1000, 534, 533, -1000, -1000, -1000, -1000, 2650, 4783, 4783,
	31874, 31874, 31874, 4783, 83667, -120, -1000, 4783, 4783, -111,
	-1000, -1000, 82299, -1000, -1000, -1000, 83414, -1000, 13053, 1600,
	-1000, 79651, -1000, -1000, -1000, -1000, 31874, 31874, -1000, -1000,
	-1000, -1000, -1000, 34616, 2268, 527, 11249, -1000, -1000, 891,
	31874, 31874, 2388, 891, 891, -1000, -125, -1000, -1000, -1000,
	2807, 47, -1000, -1000, 2856, 17035, 714, -1000, 2855, -1000,
	-1000, -1000, -1000, 73704, -1000, 73704, -1000, 17035, 73704, 2220,
	1951, -1000, -1000, 2066, 523, 34616, 61184, 801, 2258, 1580,
	31874, 1940, -128, -130, 1950, -1000, -1000, 1946, 31874, -1000,
	11249, 521, 1752, 1752, -133, -136, -1000, 31874, 1087, 73704,
	23047, -1000, 2854, 2627, -1000, -1000, 31874, 1084, -1000, 1585,
	2158, -1000, -1000, -1000, -1000, 2063, -1000, -1000, 73704, 2055,
	887, -139, -1000, 804, 789, -1000, 52534, 871, 873, -1000,
	-1000, -1000, 490, 31874, -1000, 61184, 31874, 1858, -1000, 788,
	51678, -1000, 2557, 1433, -1000, 2566, 73704, 2620, -1000, 2104,
	520, -1000, 883, 518, 517, -141, 31874, 31874, -144, 514,
	883, -50, -1000, 794, 774, -1000, -1000, 61184, 61184, 31874,
	31874, -1000, 4783, 4783, 4783, -1000, 305, -1000, -1000, 1734,
	2678, -1000, 79443, 79154, 489, 34616, 11249, -146, -1000, 73704,
	83414, -111, -1000, -1000, -1000, 629, -1000, 2853, -1000, -1000,
	2003, -1000, -1000, -1000, 73704, 1964, -1000, 971, 31874, 5601,
	504, 31874, -1000, -1000, 2120, 2294, 2124, 502, -1000, -1000,
	-1000, -1000, 968, 1523, -1000, -1000, 83414, 2659, 31874, -1000,
	-1000, 501, 500, 83414, 496, 787, 2251, -1000, -1000, -1000,
	83414, 495, 871, -1000, 1663, 1803, 494, -1000, -1000, -1000,
	2137, -1000, 64624, 35515, 35515, 298, 2754, 873, -1000, 2811,
	-1000, 2750, -149, 970, -154, 61184, 51678, -1000, 2031, -1000,
	1166, -157, 73704, 1433, -1000, -1000, 50386, 50386, 968, -164,
	-165, -1000, 50386, -1000, 2008, -1000, 73704, -1000, 73704, -1000,
	-1000, -166, -177, -1000, 1881, 31874, -1000, -1000, 489, -180,
	-1000, -73, -1000, 2746, -1000, -1000, -1000, -1000, 2448, 2177,
	79106, 2004, 73704, 78817, 2255, -1000, -1000, 1585, 73704, 2124,
	2170, 61184, 969, 17035, -182, 1599, 1599, 31874, 22590, 1619,
	31874, -1000, 61184, 73704, -1000, 2588, -1000, -1000, -1000, 2124,
	86, -1000, -1000, 86, 968, 493, 1580, 492, -1000, 2033,
	1336, -1000, 908, -1000, -1000, -183, -185, 1580, 968, -1000,
	-190, -1000, -191, -196, -1000, -1000, 294, 32788, 32788, 32788,
	-111, -1000, 73704, 491, 2430, 892, -1000, 1828, 1491, 238,
	977, -1000, -1000, 2258, -198, -1000, 888, 490, -1000, 31874,
	-1000, 968, -199, -1000, 952, -204, -1000, 948, -206, -1000,
	2238, -1000, -212, 476, -213, -1000, -1000, -1000, 1585, 887,
	-1000, 1580, 31874, 2124, 31874, -1000, 43801, -1000, 883, 883,
	2124, 1580, 883, -1000, -1000, -1000, 2547, -1000, 35957, 1757,
	1420, 81573, 2547, 2547, -1000, -1000, 73704, 2708, -1000, 1843,
	1841, 1313, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2701, 2004, 83414, 2124, -1000, 1599, 2156, -1000, 1599, 2225,
	-1000, 1610, -1000, 73704, -1000, 73704, 871, -1000, 2124, -214,
	1585, -219, -201, -1000, -1000, 1585, 2124, -1000, -1000, 1495,
	2778, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 780,
	-1000, 2576, -1000, 1027, 1857, 1857, 778, 1828, -1000, -1000,
	474, -1000, 473, -1000, -220, -1000, -1000, 1585, 968, 897,
	1580, -1000, -1000, 1585, 1410, -1000, -1000, 1698, 32331, 31874,
	-1000, 2789, -1000, -1000, 2100, -1000, 31874, 2258, 31874, 31874,
	1750, 897, 1580, -1000, 2851, 2124, -1000, -1000, -1000, -1000,
	83414, -1000, -1000, -1000, 83414, -1000, -221, -222, -1000, -1000,
	-1000, -1000, 2124, -1000, 1585, 1585, 1081, 1585, 897, -1000,
	469, 897, -1000, 31874, -1000, -230, 1585, -1000,
}
var sqlPgo = [...]int{

	0, 3482, 3481, 3480, 3479, 3478, 3477, 3472, 3471, 3470,
	3467, 3466, 3463, 3462, 3461, 3460, 3459, 3458, 3457, 3456,
	3455, 3453, 3449, 3448, 3447, 3446, 3443, 3442, 3441, 3440,
	3439, 3438, 3437, 3436, 3434, 3433, 3431, 3430, 3429, 3420,
	3419, 3417, 3413, 3412, 3411, 3408, 3400, 3395, 36, 3394,
	3393, 3391, 3387, 3386, 3384, 3382, 3381, 3380, 3379, 3377,
	3376, 3374, 3373, 3372, 3368, 3366, 40, 3365, 228, 3363,
	3362, 3359, 3358, 3352, 3349, 3348, 3346, 3345, 3344, 227,
	3343, 124, 3341, 3337, 3334, 3333, 3332, 224, 3330, 3329,
	3328, 3327, 3324, 3321, 3319, 3317, 156, 204, 3315, 161,
	3307, 3306, 3305, 3303, 3301, 3300, 3299, 3298, 3296, 3291,
	200, 3290, 222, 3285, 3282, 3281, 3280, 3279, 3273, 3272,
	3271, 3270, 3268, 3266, 3264, 3263, 3262, 3260, 3259, 3258,
	3257, 3254, 3253, 3252, 3251, 3250, 3242, 3241, 3240, 3238,
	3236, 230, 152, 3234, 3229, 221, 220, 3228, 134, 100,
	90, 111, 3227, 91, 49, 3226, 12, 165, 206, 4034,
	191, 3223, 3221, 3216, 194, 155, 3208, 195, 3207, 3205,
	3204, 3203, 113, 68, 143, 141, 136, 131, 138, 3202,
	3201, 75, 53, 38, 32, 3200, 3198, 3196, 2623, 96,
	3195, 219, 199, 130, 3193, 3192, 1508, 3191, 183, 128,
	93, 31, 89, 3190, 109, 25, 3189, 132, 56, 3188,
	135, 74, 34, 7508, 3435, 3186, 84, 232, 87, 76,
	186, 184, 175, 170, 139, 1479, 3185, 209, 3184, 101,
	159, 3183, 3182, 3181, 62, 158, 81, 3178, 17, 2,
	137, 13, 108, 18, 3177, 11, 3175, 3172, 3170, 3164,
	22, 127, 3162, 110, 69, 3160, 67, 3151, 59, 168,
	3148, 193, 97, 3147, 3144, 212, 163, 171, 3143, 16,
	188, 3142, 3141, 3140, 3139, 3136, 106, 26, 102, 3135,
	3131, 107, 192, 157, 3130, 35, 3129, 146, 77, 133,
	229, 118, 181, 86, 182, 144, 189, 3126, 3123, 3118,
	151, 3116, 3114, 172, 129, 3113, 3112, 231, 50, 52,
	190, 58, 153, 126, 3107, 160, 3106, 3105, 3104, 226,
	145, 176, 9, 4, 73, 99, 27, 8, 187, 122,
	202, 83, 3103, 4844, 1139, 369, 63, 114, 92, 61,
	95, 116, 218, 57, 3102, 3100, 1188, 3099, 3095, 3094,
	3093, 147, 3092, 3090, 3089, 105, 119, 149, 3088, 117,
	70, 10, 94, 205, 223, 88, 180, 198, 210, 3087,
	150, 3086, 43, 142, 3085, 162, 208, 72, 3083, 1303,
	125, 3082, 215, 3081, 3077, 3076, 3075, 3074, 3072, 3070,
	112, 3069, 115, 3067, 3066, 217, 154, 3064, 216, 123,
	166, 79, 30, 3063, 65, 28, 3062, 169, 37, 3061,
	3468, 33, 0, 8188, 6078, 7190, 3060, 4626, 3059, 174,
	98, 3055, 3033, 3032, 80, 3031, 64, 3030, 3029, 55,
	3028, 15, 6, 7, 19, 20, 530, 338, 3027, 3025,
	85, 103, 120, 3023, 225, 185, 3022, 3021, 3020, 71,
	3019, 24, 3013, 21, 3012, 3011, 29, 5, 23, 3009,
	3006, 203, 3004, 196, 3003, 3000, 2770, 104, 2999, 2997,
	213, 66, 2996, 211, 2993, 140, 167, 2992, 2991, 2990,
	2986, 207, 2985, 2723, 2984, 14, 1, 2983, 2982, 164,
	3, 2572, 2981, 2979, 54, 2978, 2977, 148,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 12, 12, 7, 7, 8, 8,
	8, 36, 36, 9, 9, 9, 11, 11, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 15, 15, 26,
	26, 16, 16, 28, 28, 17, 17, 29, 29, 470,
	470, 20, 31, 21, 32, 14, 471, 471, 471, 471,
	25, 22, 33, 23, 23, 23, 23, 23, 152, 152,
	152, 152, 19, 19, 27, 27, 175, 175, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	469, 469, 177, 177, 176, 171, 171, 472, 472, 178,
	178, 178, 180, 180, 37, 37, 37, 95, 95, 95,
	96, 96, 97, 97, 153, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 83, 83, 410, 410, 411, 411,
	148, 148, 149, 149, 149, 149, 150, 150, 151, 151,
	151, 51, 39, 39, 39, 39, 39, 39, 39, 40,
	40, 40, 40, 41, 41, 41, 41, 41, 41, 42,
	42, 42, 42, 42, 42, 49, 49, 49, 49, 142,
	142, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 479, 479, 480, 480, 481, 481, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 63, 63, 252, 252, 228, 228, 64, 64,
	64, 65, 65, 66, 66, 53, 53, 463, 463, 266,
	266, 374, 374, 68, 68, 286, 286, 69, 69, 69,
	69, 69, 69, 70, 70, 70, 70, 70, 70, 70,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	77, 77, 77, 78, 78, 78, 75, 75, 75, 73,
	73, 73, 72, 72, 72, 76, 76, 76, 74, 74,
	74, 267, 267, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 376, 376, 80,
	80, 80, 344, 344, 84, 84, 84, 301, 301, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 98, 98,
	98, 98, 466, 466, 259, 259, 191, 191, 191, 191,
	91, 91, 91, 91, 92, 92, 92, 93, 93, 147,
	147, 104, 104, 104, 104, 104, 103, 103, 103, 103,
	103, 103, 43, 43, 43, 44, 44, 45, 45, 46,
	46, 47, 47, 48, 48, 48, 48, 48, 106, 106,
	475, 475, 108, 105, 105, 105, 107, 107, 107, 107,
	109, 110, 110, 110, 110, 110, 110, 110, 110, 111,
	111, 404, 404, 275, 275, 402, 402, 418, 418, 403,
	403, 232, 232, 232, 232, 232, 233, 233, 233, 409,
	409, 409, 409, 409, 409, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 131,
	131, 131, 141, 141, 141, 141, 141, 141, 141, 134,
	134, 134, 121, 121, 113, 113, 113, 113, 113, 117,
	117, 117, 117, 117, 117, 117, 117, 114, 114, 123,
	123, 123, 123, 123, 118, 118, 120, 120, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 115, 115, 115,
	115, 125, 125, 125, 125, 307, 307, 307, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 137, 137,
	137, 137, 137, 137, 358, 358, 132, 132, 132, 132,
	136, 136, 136, 136, 291, 291, 129, 129, 129, 130,
	130, 130, 135, 135, 133, 133, 138, 138, 138, 138,
	116, 116, 116, 484, 484, 484, 139, 139, 128, 128,
	140, 140, 140, 140, 140, 140, 140, 140, 127, 127,
	127, 126, 126, 126, 126, 119, 464, 464, 461, 461,
	461, 461, 461, 461, 461, 462, 462, 465, 465, 89,
	89, 89, 58, 58, 156, 156, 156, 156, 154, 154,
	155, 155, 59, 59, 485, 485, 485, 473, 473, 473,
	474, 474, 474, 474, 474, 474, 234, 234, 235, 235,
	325, 325, 325, 325, 325, 238, 238, 179, 179, 179,
	241, 242, 242, 239, 239, 240, 240, 240, 244, 244,
	243, 246, 246, 245, 324, 425, 425, 427, 427, 427,
	427, 427, 427, 427, 429, 429, 429, 429, 429, 429,
	429, 429, 429, 429, 429, 423, 423, 423, 424, 419,
	419, 420, 420, 420, 420, 236, 236, 237, 237, 237,
	237, 421, 422, 257, 257, 361, 426, 426, 428, 428,
	430, 486, 486, 486, 486, 486, 486, 487, 487, 323,
	323, 322, 322, 250, 250, 431, 431, 431, 431, 432,
	432, 432, 432, 432, 435, 434, 433, 433, 433, 433,
	433, 62, 62, 62, 288, 288, 287, 287, 289, 289,
	289, 289, 289, 289, 289, 289, 289, 289, 289, 289,
	289, 289, 289, 144, 144, 194, 194, 60, 60, 60,
	57, 57, 57, 10, 10, 10, 13, 13, 13, 483,
	483, 61, 61, 61, 61, 193, 193, 193, 468, 468,
	467, 467, 489, 489, 67, 67, 67, 67, 67, 67,
	56, 56, 56, 56, 56, 490, 490, 308, 308, 306,
	306, 256, 256, 360, 197, 197, 172, 172, 172, 24,
	18, 18, 34, 34, 35, 35, 30, 30, 476, 476,
	477, 477, 90, 90, 94, 94, 94, 102, 102, 143,
	143, 143, 143, 143, 143, 143, 38, 38, 38, 38,
	50, 50, 50, 50, 100, 492, 492, 492, 101, 101,
	101, 491, 491, 192, 192, 319, 319, 320, 320, 493,
	493, 321, 321, 321, 321, 186, 185, 187, 187, 55,
	55, 55, 181, 181, 182, 182, 183, 183, 184, 184,
	494, 494, 87, 87, 87, 146, 146, 227, 227, 227,
	315, 315, 315, 251, 251, 202, 202, 318, 318, 316,
	316, 316, 316, 285, 285, 285, 145, 145, 264, 264,
	277, 277, 278, 278, 371, 371, 279, 99, 99, 159,
	159, 157, 157, 157, 157, 157, 157, 157, 157, 164,
	164, 165, 165, 166, 166, 167, 168, 168, 168, 168,
	268, 268, 169, 169, 169, 158, 158, 158, 160, 160,
	160, 160, 160, 160, 160, 163, 163, 163, 163, 170,
	170, 170, 162, 162, 442, 442, 442, 444, 444, 445,
	441, 441, 443, 443, 488, 488, 290, 290, 290, 248,
	249, 247, 247, 254, 254, 253, 255, 255, 359, 359,
	359, 173, 173, 173, 282, 282, 282, 282, 283, 283,
	311, 311, 309, 309, 309, 309, 310, 310, 312, 312,
	312, 313, 313, 314, 314, 281, 281, 340, 340, 161,
	161, 161, 261, 261, 261, 262, 262, 331, 331, 331,
	331, 331, 331, 332, 332, 330, 330, 330, 330, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 363, 364,
	364, 263, 263, 365, 317, 317, 459, 459, 459, 460,
	460, 357, 357, 366, 366, 366, 366, 366, 366, 355,
	355, 356, 356, 372, 373, 373, 294, 294, 294, 294,
	292, 292, 295, 295, 295, 295, 293, 293, 367, 367,
	367, 367, 284, 284, 368, 368, 368, 368, 369, 326,
	327, 327, 377, 377, 377, 377, 392, 260, 260, 260,
	260, 260, 495, 495, 378, 378, 378, 378, 378, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 382, 382, 382, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 391, 391, 391, 391, 391, 383, 383, 388,
	388, 389, 389, 389, 384, 385, 390, 390, 390, 390,
	496, 496, 394, 394, 386, 386, 386, 386, 386, 386,
	386, 386, 386, 380, 380, 380, 387, 387, 387, 303,
	303, 303, 303, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 302, 302, 304, 304, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 333, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 335, 335, 335, 335, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	436, 436, 436, 436, 436, 436, 436, 436, 439, 439,
	440, 440, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 446, 446, 447, 447, 449, 449, 450, 450, 451,
	452, 452, 452, 453, 454, 454, 448, 448, 455, 455,
	455, 455, 456, 456, 457, 457, 457, 457, 457, 458,
	458, 458, 458, 458, 346, 346, 347, 347, 353, 353,
	353, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 195, 195, 195,
	195, 195, 273, 273, 271, 271, 271, 274, 274, 272,
	272, 270, 270, 269, 269, 343, 343, 341, 341, 345,
	345, 296, 296, 393, 393, 393, 393, 393, 393, 393,
	393, 297, 297, 297, 305, 298, 298, 299, 299, 299,
	299, 299, 337, 338, 300, 300, 300, 339, 339, 348,
	352, 352, 351, 350, 350, 349, 349, 328, 328, 329,
	329, 280, 280, 497, 497, 276, 276, 370, 370, 370,
	370, 230, 230, 265, 265, 229, 229, 222, 222, 223,
	223, 223, 223, 258, 258, 354, 354, 395, 395, 396,
	396, 397, 397, 398, 398, 399, 400, 401, 342, 342,
	212, 211, 199, 200, 210, 209, 208, 198, 201, 205,
	206, 207, 203, 204, 218, 217, 216, 214, 215, 375,
	224, 224, 225, 225, 225, 226, 226, 226, 226, 196,
	196, 219, 219, 220, 221, 221, 213, 213, 213, 188,
	188, 188, 189, 189, 190, 190, 408, 408, 406, 406,
	406, 407, 407, 407, 407, 405, 405, 405, 405, 405,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 415, 415, 415,
	413, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 413, 413, 414, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 417, 417,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 0, 1, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 3, 1, 1,
	3, 4, 6, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 5, 5, 6, 6, 4, 4, 4, 4, 3,
	4, 4, 4, 7, 7, 9, 8, 9, 5, 3,
	5, 7, 4, 12, 4, 12, 1, 3, 5, 5,
	2, 5, 3, 6, 4, 6, 5, 6, 6, 4,
	8, 3, 4, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 6, 7, 2, 5, 6, 2,
	1, 3, 1, 3, 1, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 6, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 9, 3, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 3, 4, 6, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 3, 5, 3, 3, 5,
	3, 1, 3, 2, 2, 5, 3, 3, 6, 6,
	3, 3, 1, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 2, 6, 4,
	7, 2, 1, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	1, 1, 5, 3, 2, 6, 3, 3, 4, 4,
	3, 1, 3, 2, 3, 3, 1, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 3, 5, 3,
	6, 5, 6, 3, 5, 6, 3, 4, 3, 4,
	3, 3, 4, 4, 5, 0, 1, 1, 3, 2,
	4, 3, 3, 5, 4, 3, 5, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 3, 3, 4, 3, 3, 3,
	3, 4, 3, 1, 1, 1, 2, 3, 2, 3,
	6, 6, 7, 9, 7, 9, 3, 4, 10, 10,
	3, 5, 5, 5, 3, 5, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 1, 2, 0, 3,
	3, 2, 10, 13, 0, 2, 4, 3, 3, 3,
	1, 3, 9, 12, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 9, 9, 3, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 1, 2, 8, 4,
	2, 5, 5, 5, 2, 9, 10, 6, 5, 3,
	1, 5, 8, 7, 11, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 8, 11, 7, 5, 1, 1, 1, 1, 2,
	2, 0, 0, 1, 6, 7, 6, 5, 3, 4,
	15, 18, 14, 17, 4, 0, 2, 2, 0, 1,
	0, 1, 3, 3, 2, 0, 1, 1, 0, 6,
	6, 8, 6, 8, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 8,
	11, 3, 3, 0, 3, 0, 3, 0, 3, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 8, 5, 3,
	4, 3, 0, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 6,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 1, 3, 3, 4,
	5, 2, 2, 0, 2, 2, 1, 1, 1, 0,
	1, 0, 2, 2, 5, 4, 2, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 3, 2, 4, 4, 0, 4,
	4, 3, 4, 1, 5, 3, 4, 5, 5, 1,
	5, 1, 3, 2, 0, 3, 0, 2, 3, 1,
	3, 2, 0, 3, 5, 6, 4, 6, 4, 3,
	2, 1, 0, 5, 1, 0, 2, 2, 2, 1,
	1, 0, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 2, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 5, 4, 6, 3, 5, 4, 6, 4, 6,
	5, 7, 3, 3, 3, 3, 3, 4, 3, 2,
	4, 2, 3, 3, 4, 3, 4, 3, 4, 5,
	6, 6, 7, 6, 7, 6, 7, 3, 4, 4,
	1, 3, 1, 3, 3, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 2, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 7, 1, 7, 5, 3, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 471, -81, -51, -49, -84, -85, -69,
	-86, -80, -98, -102, -90, -104, -143, -3, -37, -39,
	-52, -68, -70, -79, -88, -87, -89, -91, -95, -94,
	-83, -43, -99, -103, -112, -144, -145, -146, 86, 72,
	128, 109, 114, 161, 298, 328, 338, 322, -107, -108,
	357, -38, -50, -101, -100, -4, -13, -10, 27, 41,
	-40, -41, -42, 57, -57, -60, -54, -63, -478, 88,
	-443, -71, -74, -76, -482, 119, 134, 178, 290, -92,
	-93, 324, 326, 135, -45, -44, 129, -157, -159, -105,
	-106, -147, -113, -114, -115, -116, -117, -118, -119, -120,
	-121, -122, -123, -124, -125, -126, -127, -128, -133, -129,
	-130, -131, -132, -134, -135, -136, -137, -138, -139, -140,
	361, 408, 42, 371, 73, 122, 332, 21, -5, -6,
	-7, -8, -9, -11, -12, -53, -55, -56, -58, -59,
	-67, -61, -62, -442, -72, -73, -75, -77, -78, 323,
	-160, -158, 468, 421, -15, -20, -21, -16, -17, -19,
	-22, -18, -26, -31, -32, -28, -29, -27, -30, -33,
	-34, -35, -36, -24, -25, -14, -23, 439, 447, -163,
	-161, -162, -170, 345, 429, 385, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, -214, -219, -220, -221,
	-213, -188, -414, -417, 4, -412, -415, 140, 185, 256,
	21, 22, 23, 24, 25, 27, 38, 40, 39, 41,
	42, 45, 48, 49, 47, 52, 53, 54, 55, 56,
	57, 58, 61, 66, 71, 72, 73, 74, 75, 76,
	81, 78, 79, 80, 83, 85, 86, 87, 89, 91,
	92, 100, 101, 102, 103, 104, 105, 109, 112, 111,
	114, 117, 118, 119, 121, 123, 124, 126, 128, 129,
	132, 130, 391, 131, 133, 134, 135, 136, 146, 147,
	148, 150, 151, 153, 155, 159, 160, 162, 166, 168,
	169, 170, 171, 177, 178, 180, 181, 186, 182, 187,
	191, 194, 193, 195, 196, 197, 188, 202, 206, 207,
	208, 210, 211, 214, 215, 216, 217, 218, 221, 220,
	223, 226, 227, 230, 231, 234, 235, 236, 238, 239,
	242, 240, 243, 241, 244, 247, 245, 246, 249, 250,
	254, 252, 251, 258, 261, 175, 263, 264, 266, 267,
	268, 284, 271, 272, 273, 276, 277, 280, 283, 285,
	286, 287, 288, 289, 290, 291, 293, 294, 296, 298,
	300, 302, 303, 304, 305, 306, 307, 308, 310, 311,
	313, 314, 315, 316, 317, 322, 319, 320, 321, 323,
	324, 325, 326, 328, 330, 331, 332, 333, 335, 337,
	358, 359, 373, 338, 339, 340, 341, 342, 343, 344,
	348, 352, 349, 350, 351, 346, 347, 353, 354, 355,
	357, 360, 361, 363, 364, 366, 367, 369, 370, 371,
	372, 374, 377, 378, 379, 375, 376, 384, 382, 383,
	386, 387, 388, 389, 390, 392, 394, 402, 403, 405,
	408, 409, 410, 400, 412, 413, 416, 417, 418, 419,
	420, 425, 421, 423, 426, 427, 428, 434, 433, 440,
	441, 443, 444, 445, 33, 43, 44, 46, 50, 62,
	63, 64, 67, 106, 107, 127, 137, 138, 149, 163,
	165, 172, 173, 174, 192, 198, 200, 204, 224, 260,
	262, 278, 282, 295, 297, 309, 334, 365, 380, 395,
	396, 397, 398, 404, 406, 429, 430, 431, 435, 442,
	269, -207, 2, -188, -188, 298, 26, 2, 26, 294,
	347, 387, 389, 2, -466, -259, 2, 26, -191, -188,
	88, 161, 345, -207, 2, -466, -259, 24, 2, -188,
	2, -192, 2, 338, -188, 471, 83, 231, 66, 334,
	354, -110, 403, -109, 395, 340, -111, -404, 2, 247,
	-188, 471, 471, 471, 471, 471, 2, 385, 287, 433,
	346, 102, 306, 185, 422, -483, 330, 164, 399, -461,
	2, 4, -415, -412, -223, -222, 385, 102, -221, -213,
	461, -220, 471, 471, 471, 2, 207, 208, 305, 304,
	354, 355, 471, 471, 471, 2, 25, 60, 82, 85,
	108, 136, 156, 159, 274, -479, 239, 284, 303, 340,
	353, 384, 392, 405, -474, 372, 61, -473, 422, -483,
	410, 117, -306, 102, 231, 160, 417, 389, 387, 415,
	112, 191, 420, 419, 471, 471, 25, 60, 69, 85,
	117, 136, 156, 159, -481, 284, 303, 337, 340, 353,
	384, 392, 410, 405, 2, 433, 346, 385, 185, 102,
	422, -483, 301, -81, 2, 468, 29, 28, 52, 357,
	-153, 385, 201, 2, -188, 207, 208, 2, 471, 471,
	157, -461, 2, 207, 208, 2, 201, 2, 61, 342,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 2, -141,
	354, 372, 170, 41, 66, 26, 302, 71, 288, 103,
	162, 185, 186, 215, 82, 83, -307, 40, 208, 207,
	-358, 386, 341, 347, 382, 338, 403, 88, 423, 331,
	445, 306, 307, 130, 4, 102, 247, 356, 395, 231,
	75, -488, 2, 385, -491, 2, 403, 403, 2, -491,
	2, -491, 2, -491, 2, -492, 403, 442, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 471,
	471, -158, -160, -159, 471, 471, 471, 471, 471, -141,
	354, 2, 66, 26, -253, -254, 414, 199, 125, 275,
	-157, -159, 2, -442, -402, 2, -333, -418, -335, 459,
	460, 452, 255, 446, -346, 108, 415, 269, -417, -336,
	-348, 127, 334, -274, 8, 9, 5, 6, 7, -196,
	-379, -342, 407, 139, 259, -226, 472, 10, 468, -439,
	-159, -347, 34, 165, 59, -406, -225, -381, -389, -385,
	-386, -495, 48, 55, 54, 392, 246, 348, 349, 366,
	350, 351, 45, 425, 182, 266, 268, 193, 4, 200,
	-224, -213, -436, -437, -412, -413, 192, 198, 194, 365,
	195, 196, 197, 44, 309, 150, 151, 149, 118, 107,
	106, 262, 50, 49, 46, 430, -390, 104, 395, 396,
	397, 398, 210, 211, -188, -414, 69, 94, 95, 93,
	98, 97, 233, 232, 99, 96, 356, 422, 60, 33,
	172, 173, 204, 260, 174, 67, -438, 376, 90, 158,
	190, 176, 203, 205, 209, 225, 228, 248, 253, 257,
	279, 281, 329, 362, -496, 431, 137, 138, 282, 295,
	380, 404, 406, 163, 224, 62, 63, -444, 310, -445,
	-207, -444, 471, 471, 473, 471, -247, -248, -249, 2,
	26, 115, 468, 2, -362, 2, -363, -367, -159, 219,
	-366, 468, -364, 466, -214, 270, -440, 335, -436, -437,
	-196, -213, -225, 4, -250, 468, 470, 102, 385, 70,
	185, -301, 468, -188, 26, 269, 399, 473, -344, 468,
	269, 157, 272, -188, 2, 2, 358, 2, 468, -110,
	64, 403, 39, 354, -320, 2, -321, -185, -186, -187,
	-372, 206, 300, 308, 448, 445, -402, -475, 157, 451,
	399, -402, -275, 470, 2, -367, 172, -214, 2, -211,
	-405, 4, -412, -415, -413, -416, 69, -414, 26, 28,
	29, 30, 32, 34, 35, 36, 37, 51, 59, 60,
	65, 68, 70, 82, 88, 93, 94, 96, 95, 97,
	98, 99, 108, 110, 113, 115, 116, 120, 122, 125,
	139, 141, 154, 156, 157, 161, 164, 167, 179, 189,
	199, 201, 219, 222, 229, 232, 233, 255, 259, 265,
	269, 270, 274, 275, 292, 299, 312, 327, 345, 356,
	368, 381, 385, 393, 399, 401, 407, 414, 415, 422,
	424, 432, 436, 437, 438, 439, -417, 2, -367, 172,
	2, -216, 172, -367, -219, 2, -198, -188, 2, -210,
	-405, 2, -229, 172, -214, -215, -219, -410, 172, 2,
	-408, 10, -407, 5, 4, -412, -415, -413, -410, 172,
	2, -96, -410, 468, 399, 473, -265, -222, -223, -258,
	-188, 470, -333, 2, -99, 2, -333, 172, 2, -99,
	172, 2, -333, 172, 2, -99, 172, 2, 2, 2,
	405, 2, 85, 172, -188, 385, 101, 2, 321, -480,
	337, 409, 433, 2, 2, 2, 2, 2, 2, 2,
	385, -203, 2, -188, 154, 346, -489, 310, -410, 172,
	2, -410, 172, 2, -217, -219, -217, 185, 202, -198,
	172, 2, 389, 387, 389, 387, 157, 2, 201, 2,
	201, 2, -368, 2, -369, -363, -214, 466, 2, 2,
	2, 2, 2, 172, -188, 385, 101, 2, 217, 2,
	2, 2, 2, 2, 2, 2, 2, 2, -267, 172,
	2, -214, -267, 172, 2, -267, 172, 2, -230, 172,
	2, -229, -198, 172, 2, -411, 172, 2, -410, -411,
	172, 2, -376, 2, -375, -407, 429, -81, 468, -81,
	468, -81, 354, 468, -410, -214, -214, -333, -99, -97,
	-96, 157, -333, -99, -153, 154, 2, 102, 385, -141,
	2, 154, 424, 2, 8, 2, -410, 341, 307, 146,
	2, 358, 2, 359, 66, -307, 445, 66, 157, 2,
	157, 2, -291, 2, 439, -464, 2, 269, 157, 2,
	157, 2, 157, 2, 157, 2, 157, 2, 304, 355,
	208, 2, -99, 436, -333, 436, 2, 402, 216, 131,
	157, -291, 2, 157, 2, 157, 2, 5, 2, 373,
	2, 206, 300, 373, 2, -214, -484, 2, 385, 433,
	346, 2, 2, 78, 79, 157, 2, 157, 2, 157,
	445, 2, -284, -367, -319, -320, -319, 399, -253, -254,
	-141, 358, 2, -164, -282, -166, 154, -309, -310, -167,
	229, 141, 265, -168, -290, 26, 115, -290, -290, 53,
	469, 469, 11, 12, 68, 38, 459, 460, 461, 462,
	152, 463, 464, 457, 458, 456, 449, 450, 454, 212,
	213, 84, 453, 451, 77, 237, 336, 142, 143, 144,
	145, 318, 183, 31, 184, 14, 15, 16, 30, 274,
	228, 446, 176, 362, 452, 17, 18, 19, 203, 205,
	257, 43, 179, -195, -231, -333, -333, -333, -333, -333,
	281, 468, -280, -328, 466, -159, 468, 468, 468, 5,
	-401, 8, -159, -333, -346, 469, -272, 468, -159, -346,
	-341, 468, 334, 466, 468, -349, -333, 5, 468, 470,
	-446, 440, -383, 468, 297, -382, 468, -382, -382, 434,
	-380, 468, 447, 441, 468, -380, 468, 468, 154, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 434, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 473, -444, -250, 468, -276, -370,
	-333, 461, -276, -276, 269, -269, -333, 90, -294, 209,
	248, 158, 225, 329, 190, -330, 472, -330, -357, 447,
	-159, -364, -213, -159, -366, 468, -362, -357, -82, -401,
	-68, -79, -87, -99, -112, -145, -146, 461, -214, 468,
	157, 468, 470, 157, -258, -405, -198, -214, -224, -225,
	-229, 114, -269, -461, -258, -191, 35, -343, -377, -378,
	-379, -388, -384, -387, -391, 48, 55, 54, 392, 246,
	348, 349, 366, 350, 351, 45, 425, 182, 266, 268,
	193, 4, 46, 430, -390, 200, 314, 315, 313, 317,
	316, 192, 198, 194, 365, 195, 196, 197, 44, 309,
	150, 151, 149, 118, 107, 106, 262, 50, 49, 104,
	395, 396, 397, 398, 210, 211, 431, 376, 62, 63,
	-461, -258, 154, -404, -269, 35, -320, 2, 108, -408,
	39, -493, 473, 227, -233, 236, 254, 169, 270, 443,
	263, -409, 5, 4, -342, -354, 108, 231, 200, -395,
	-397, 8, -396, 9, -398, 459, 460, -403, -402, 92,
	470, -405, -175, 319, -174, 23, 27, 119, 427, 132,
	-240, 187, 287, 127, 369, 418, -470, -471, 339, 390,
	391, 80, 263, 319, 127, -287, -289, 35, 100, 250,
	283, 56, 180, 241, 242, 371, 435, 127, 319, -471,
	319, -471, -177, 369, 418, -470, -471, 339, 319, -176,
	-240, 127, 472, -467, -441, 439, 127, -467, 127, -373,
	-372, -411, -96, -265, 473, 473, -405, 461, 127, 127,
	127, 127, 2, 2, 255, 2, 2, 2, 159, -473,
	-481, 2, 2, 2, -214, 172, -252, 269, -463, -266,
	385, -214, -216, 172, 2, -219, 433, -467, 255, -467,
	255, 35, 468, 2, -200, 172, 2, -189, -188, 185,
	-441, 255, -368, -227, -214, -363, -227, 357, -207, 35,
	-330, -330, 127, 2, 2, 2, -188, -178, 473, 58,
	325, 127, -178, 127, -178, 127, -178, 473, 127, -178,
	127, 473, 127, 127, 469, 473, -376, -376, -410, -151,
	439, 157, 88, 468, 468, -153, -373, 473, -97, -410,
	-463, -198, 2, -214, 2, 385, 210, -151, -410, -410,
	-410, -404, 26, 359, 2, 304, 355, 79, 359, 2,
	-214, 385, 102, 185, 72, -465, 154, -462, 330, -461,
	-214, 102, -214, 102, -214, 102, -214, -214, 2, 2,
	2, 2, 76, 76, 154, 2, 402, 2, 402, 2,
	-188, -188, -188, 227, -214, 154, 385, 185, 385, 185,
	102, 385, -178, 473, -192, -164, -282, -404, -283, -282,
	-165, -164, -167, 154, 308, 419, 250, 360, 214, -310,
	-309, 26, -333, -314, 148, 249, -333, -312, -335, 459,
	460, -396, -398, -268, 263, -158, -158, -158, -255, -359,
	-333, 299, 185, -392, -377, -377, -212, -405, 395, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, -333, -333, -333, -333, -333, -333,
	-333, -333, -333, -333, 228, 176, 362, 43, 179, -333,
	399, -333, -333, -333, -333, 245, 255, 259, 407, 139,
	416, 115, 263, -497, 381, 37, -339, -159, -273, 468,
	-353, 32, 368, 26, -346, 468, 2, -328, -333, -329,
	-270, -269, -269, 469, 432, 26, 115, 461, 2, 469,
	473, 35, 469, -333, -270, -345, -341, -269, -352, -351,
	436, -302, -303, 444, 244, 105, 171, 243, -304, 344,
	-399, 8, -405, 461, -447, 147, 164, 8, -399, -399,
	395, 395, -399, -399, -399, 468, 469, 2, 469, 2,
	469, -333, 2, 469, -333, 2, 469, -333, 2, 469,
	-333, 2, 469, 2, -333, -333, -333, -333, -333, -333,
	-333, -269, -296, 2, -393, -269, 4, 444, 244, 105,
	171, 243, 344, 5, -296, 2, -297, 2, -333, -269,
	-298, -334, -335, 459, 460, 452, -346, -299, 2, -333,
	-270, -333, 51, 222, 401, -300, -333, 157, -269, -269,
	2, -269, 2, -445, 35, -269, -261, 473, 157, 35,
	4, -261, -261, 468, 469, 473, -295, 168, 240, 235,
	-295, -362, -294, 209, -292, 279, -292, -292, -357, -199,
	466, 474, -405, -357, -356, -355, 35, -207, 276, -357,
	-357, 470, 469, -356, 467, -459, 468, 471, 471, 471,
	471, 471, -214, 468, -269, -405, 374, 469, 470, 203,
	203, 203, 203, 335, 469, 399, 439, -81, 271, 469,
	473, -260, 34, 466, -394, 434, 468, 468, -303, 468,
	157, -259, -475, 469, 403, -321, -232, 308, 367, 320,
	352, 383, 8, 9, 8, 9, 473, -405, 473, -476,
	82, 399, 70, -324, 172, 70, -419, -201, 82, -420,
	-188, 65, 415, 299, 156, -476, 82, 299, -476, 82,
	82, 357, 372, 53, -367, 38, 38, 26, -99, 223,
	157, 445, 385, 185, 399, -367, -289, -377, 100, 241,
	242, 53, -400, -395, 459, 460, -400, 53, -400, -400,
	-400, 439, -216, -367, 399, 399, 473, 38, 38, 26,
	-99, 223, 157, 399, -229, -199, -468, -193, 89, 251,
	-194, 289, -410, -410, -148, 181, 469, -373, -222, -188,
	470, -333, -99, -333, -99, 127, 2, -489, 217, 468,
	-236, 255, 157, -258, -374, 201, 473, -266, -288, -287,
	255, -218, 172, 2, -214, 127, 127, 468, 123, 306,
	2, 269, 255, -200, 172, -181, 388, 127, -286, 424,
	-315, -99, 468, 108, 35, -315, -277, -278, -371, -279,
	-201, 468, -207, -188, 2, -214, -267, -267, -267, -229,
	-230, -198, -410, -411, -411, -81, -375, 469, 469, 469,
	-150, 273, -149, -188, 5, -153, 424, -235, -325, -324,
	-423, -424, -419, 228, 185, 415, 202, 140, -251, -202,
	-201, 101, -151, -96, -373, -151, -151, -373, -373, -214,
	154, -151, -151, -151, 2, 2, -291, -214, -198, -229,
	-214, -258, -258, -291, -198, -291, -198, -291, -198, -99,
	-333, 354, 154, 154, 470, -291, 306, 102, 385, 287,
	185, -214, -229, -214, -229, -198, -214, -367, -283, -165,
	270, 214, 360, -312, -313, -335, 334, 335, -313, 334,
	335, 8, 9, 8, 9, -169, 364, 258, -267, 473,
	-172, 36, 113, 214, -214, 445, 124, -333, -333, 399,
	-497, 381, -339, 124, -333, 245, 259, 407, 139, 416,
	115, 263, 157, 468, -334, -334, 469, -271, -333, -333,
	467, 476, 469, -254, 473, -253, -333, -269, -269, 469,
	470, -269, -258, 467, 467, 473, 469, -350, -351, 120,
	-333, 399, 399, 399, 399, 468, 469, 470, -452, 280,
	468, 468, 469, 469, 473, 469, 445, 445, 469, 469,
	469, -333, 469, 469, 469, 469, 35, 473, 473, 473,
	469, 473, 473, 473, 469, 469, 157, 469, 469, -305,
	292, 469, 11, 12, 459, 460, 461, 462, 152, 463,
	464, 457, 458, 456, 449, 450, 451, 77, 237, 336,
	14, 15, 16, 203, 179, -334, -334, -334, 469, -337,
	-338, 157, 154, 35, -300, -300, -300, 469, 157, -269,
	469, 469, 468, 469, -327, -326, 437, -370, -262, 2,
	-362, -209, -405, -327, -327, -269, -333, 209, 209, -293,
	424, 269, -295, -362, -356, -401, -332, -331, 155, 36,
	113, 252, 175, -356, -207, -250, -356, -356, -405, -357,
	-357, -355, 469, -460, -401, 469, -263, -365, -440, -254,
	470, -151, -405, -142, 5, 259, -142, -142, -142, -258,
	24, 293, -377, 466, 467, 8, 468, -399, -399, -399,
	-258, 157, -402, -320, 413, 74, 308, 395, -402, -174,
	319, -201, -201, -214, 255, -324, 172, -180, 255, -377,
	-208, -188, 468, 468, 214, 214, -201, -208, 214, 172,
	-201, 172, -208, -208, -469, 308, 264, -333, 230, 306,
	256, -175, 319, -99, -99, -99, 468, -475, 424, 114,
	-214, -229, -214, -218, 319, 253, -224, -400, -400, -287,
	319, -216, -198, -176, -99, -99, -99, 468, -199, -177,
	319, -193, -410, 259, -467, -467, -151, 157, -148, 461,
	-188, 433, -188, -234, -237, -235, -201, -156, 441, 439,
	127, -228, -214, 466, -151, -410, -214, 127, -250, 255,
	-410, -410, 2, 468, 2, -214, 127, 269, 255, -182,
	121, -494, 451, -198, -327, -262, -285, -318, 327, 269,
	-251, 429, -207, -285, -264, 473, 157, 451, 470, -251,
	2, -178, -178, -178, -178, -178, -81, -81, -151, 473,
	468, 451, 451, 468, -410, -410, 469, 473, -214, -200,
	185, 185, -206, -189, 469, 473, 470, 468, -151, 157,
	-46, 439, 385, 472, -291, -291, -291, 354, 354, -188,
	-210, -198, -214, -211, -229, 154, 154, 419, -313, 270,
	234, -359, -173, 261, -214, 472, -333, -333, 124, 124,
	-333, -334, -334, -333, 124, 157, 468, -333, -343, 30,
	30, 469, 473, -329, -333, 469, 432, -254, -254, 469,
	461, -405, 472, 469, -341, 122, -333, 393, 244, 171,
	243, -304, 243, -304, -304, -399, 5, -405, 461, -453,
	-204, 468, -188, 437, -253, -399, -380, -380, 469, -392,
	-377, -333, -333, -333, -333, -333, -333, -337, -333, -392,
	-377, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	115, 255, 263, -334, -338, -337, -333, -333, -377, 469,
	469, 469, -269, -81, -281, 164, -333, -373, 473, -281,
	-281, 469, -362, -362, 468, -333, 209, 467, 473, 475,
	451, -250, 470, -355, -356, 467, 469, 473, 469, 473,
	-317, 35, 469, -405, 272, 5, 8, 466, 467, -399,
	469, 469, 469, -258, -333, 399, 399, 127, 255, 426,
	-425, -420, -333, -256, -360, -333, 468, 468, -171, 119,
	357, -477, 2, 424, 127, -178, 127, -178, 443, 468,
	468, 399, 439, -269, -333, -152, 108, -404, -471, 472,
	-471, 472, 399, 399, 439, -269, 399, -411, -151, 2,
	2, 2, 469, 469, 473, -426, 35, 267, 468, 267,
	-214, -64, 439, -372, -401, -216, 35, 127, -467, -467,
	2, -308, 424, -199, -214, 127, -183, 221, -494, -408,
	-441, -254, -285, -276, 256, 81, 469, -327, -278, -262,
	-333, 2, 469, -149, -150, -410, -410, -410, -151, -153,
	-153, -325, 2, 468, -200, -189, 468, -153, -202, 2,
	-411, -99, 273, -214, 461, -291, -242, -241, 287, 263,
	-242, 334, 334, 270, 148, 218, -172, -199, -333, -333,
	124, 30, 30, -333, -333, -343, 469, -333, -333, -269,
	467, 5, -333, 469, 469, 8, -333, 469, 470, -454,
	-188, -333, 469, 469, 469, 469, 473, 473, 469, 469,
	469, 469, -338, 157, 115, 263, 468, 469, 469, -340,
	167, 53, -362, -340, -340, -293, -258, -362, -331, -199,
	466, -405, -401, -365, 468, 470, 467, 2, 466, 469,
	-201, -201, -324, 127, -427, 82, -429, 68, 140, 88,
	255, 259, 415, 299, 65, 108, 312, 35, 469, 469,
	473, -172, -256, -258, 255, 378, 108, 255, 108, 101,
	410, 71, -201, -208, -258, -258, -214, 133, 469, 473,
	451, 2, 461, 461, -218, -216, 133, 469, -199, -238,
	188, -201, -424, -421, -422, 299, -428, -430, 140, 299,
	-99, -155, -154, -188, 5, 2, 468, -236, 273, 467,
	-288, -99, -218, 468, -188, 269, 468, -199, -184, 220,
	-494, -408, -181, -311, -309, -316, 468, 269, -99, -254,
	451, 469, 469, 101, 101, -256, 468, 468, -258, 101,
	469, -47, -48, 185, 82, 291, -211, 385, 185, 468,
	468, -172, -333, -333, -333, 469, -254, -405, 461, -448,
	287, 469, -333, -333, -334, 157, 468, -343, -449, 438,
	-333, -269, -449, -449, 469, -401, 2, 466, 2, -324,
	-208, -212, -205, -188, 140, 172, 259, 214, 468, -334,
	-214, 468, 2, -486, 110, 189, -323, -487, 87, 379,
	-360, -173, 469, 469, 259, 259, -333, -377, 468, -178,
	-178, 469, 469, -333, 399, -404, 86, -402, 2, -471,
	-333, 399, -239, -240, 179, -426, 214, -205, 214, -485,
	439, 469, 473, 451, 451, -234, -156, -65, -66, 400,
	-372, -250, -256, -214, -256, 269, -494, -408, -182, -285,
	116, -258, 82, -311, -339, -151, 468, 468, 469, -256,
	-256, 469, 468, -151, 473, 26, 468, 26, 468, -214,
	-229, -269, -269, 469, -254, 53, 469, 469, -334, -343,
	469, -450, -451, -204, 467, 2, -429, -205, 255, 424,
	-333, -190, 468, -333, 189, 111, 177, -238, 468, -322,
	424, 312, -197, 68, -256, 468, 468, 468, 451, 157,
	468, -156, 285, 468, 101, 250, -154, -336, -336, 469,
	35, -66, 9, 35, 469, -308, 469, -214, -408, -183,
	419, 256, 469, -208, -285, -411, -411, -322, 469, 469,
	-411, -48, -258, -258, 469, 469, -455, 306, 335, 166,
	-269, 469, 473, 35, 127, 168, 469, -431, 238, -188,
	469, 111, 177, -239, -258, -238, 168, -214, -472, 424,
	-212, 469, -244, -243, -241, -246, -245, -241, -269, -402,
	86, 285, -269, -214, -257, -361, -201, 101, -238, -99,
	-99, -322, 468, -323, 468, -184, 357, -326, 469, 469,
	-323, -322, 469, 469, 469, 469, -456, -457, 43, 412,
	92, -333, -456, -456, -451, -453, 140, 439, -432, -435,
	-434, 269, 363, 158, 286, 469, 378, 435, -486, 469,
	439, -250, -333, -322, 469, 473, 429, 469, 473, 429,
	469, 157, 469, 468, 469, 473, -239, -485, -323, -256,
	-238, -256, -277, -151, -151, -238, -323, -151, -458, 126,
	-457, 296, 153, 334, 296, 153, -458, -458, -205, 47,
	-434, 269, -435, 269, 419, 112, 47, -431, -238, -243,
	179, -245, 157, 285, -258, -361, -156, -238, 469, -239,
	469, -327, -239, -238, 92, 164, 394, 250, 30, 451,
	-433, 250, 325, 58, 357, -433, 451, -432, 468, 468,
	469, -239, -322, -490, 437, -323, -239, 334, 277, -457,
	-333, 22, 259, 108, -333, -486, -269, -269, -179, 58,
	325, -490, -323, 2, -238, 469, 469, -238, -239, -239,
	399, -239, -490, 468, -490, -269, 469, -239,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 5, 6, 8, 10,
	12, 14, 16, 18, 20, 22, 23, 372, 373, 375,
	376, 377, 379, 380, 382, 384, 386, 388, 389, 391,
	393, 395, 396, 397, 398, 399, 401, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 463,
	0, 959, 961, 963, 965, 25, 26, 28, 0, 0,
	192, 194, 196, 0, 221, 223, 225, 226, 228, -2,
	0, 323, 324, 326, 328, -2, -2, 0, 0, 450,
	452, 0, 0, 0, 472, 473, 0, 1047, -2, 466,
	468, 470, 535, 537, 539, 541, 543, 545, 547, 548,
	550, 552, 554, 556, 558, 560, 562, 563, 565, 567,
	569, 571, 573, 575, 577, 579, 581, 583, 585, 587,
	-2, -2, -2, 0, -2, -2, -2, 977, 31, 33,
	35, 37, 39, 41, 43, 277, 278, 280, 282, 284,
	287, 288, 290, 1102, 330, 332, 334, 336, 338, 0,
	-2, 1114, 0, 0, 45, 46, 47, 48, 49, 50,
	51, 52, 68, 69, 70, 71, 72, 73, 74, 75,
	56, 58, 59, 63, 64, 66, 54, 0, 0, 1078,
	1080, 1082, 1084, -2, 0, 0, 7, 9, 11, 13,
	15, 17, 19, 21, 374, 378, 381, 383, 385, 387,
	390, 392, 394, 400, 402, 404, 844, 1737, 1751, 1752,
	1753, 1756, 1757, 1758, 1759, 1760, 1761, 2108, 2188, 2189,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849,
	1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869,
	1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909,
	1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919,
	1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929,
	1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	0, 428, 426, 1731, 429, 1939, 431, 433, 317, 318,
	319, 320, 321, 322, 0, 443, 437, 442, 444, 446,
	447, 448, 449, 423, 421, 0, 443, 1783, 441, 957,
	958, 952, 953, 1973, 984, 462, -2, -2, -2, 2076,
	-2, 494, -2, 501, 2079, 1975, 506, 0, 508, -2,
	511, 960, 962, 964, 27, 29, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 899, 900, 0, 0,
	156, -2, -2, -2, -2, 0, 0, 1823, 1699, 1753,
	1702, 1697, 193, 195, 197, 198, 0, 0, 0, 0,
	0, 0, 222, 224, 227, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 755, 747, 748, 929,
	0, 0, 0, 0, 325, 327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 255, 363, 364, 0, 1103, 1103, 1103, 0,
	0, 0, 0, 173, 164, 0, 0, 731, 451, 453,
	0, 0, 159, 0, 0, 956, 0, 175, 0, 0,
	467, 469, 471, 536, 538, 540, 542, 544, 546, 549,
	551, 553, 555, 557, 559, 561, 564, 566, 568, 570,
	572, 574, 576, 578, 580, 582, 584, 586, 588, 589,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	0, -2, -2, -2, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 592, 594, 595, 596, 0, 647,
	664, 0, 884, 1104, 986, 967, 981, 986, 969, 970,
	971, 972, 973, 978, 980, 974, 975, 976, 32, 34,
	36, 38, 40, 42, 44, 279, 281, 283, 285, 289,
	291, -2, 1076, 1077, 331, 333, 335, 337, 339, 454,
	0, 456, 0, 593, -2, 0, 1108, 1108, 1108, 0,
	0, 1077, 1075, 0, 459, 460, 515, 516, 1346, 0,
	0, 0, 0, 0, 1596, 1430, 0, 517, -2, 1461,
	1463, 2055, 2076, 1595, 1465, 1466, 1467, 1468, 1469, 0,
	0, 1472, 1473, 1474, 1475, 1476, 0, 1478, 0, 1483,
	1484, 1485, 0, 2060, 1676, 1749, -2, 1249, 1250, 1251,
	1252, 1253, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2066,
	1745, 0, 1562, 1499, -2, 1770, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1832, -2,
	-2, -2, -2, -2, -2, -2, 1305, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 2090, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 0, 2044,
	2061, 2062, 2067, 2069, 2063, 2052, 1524, -2, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 1306, -2, 2056, 2057, 2072, 2073,
	2078, 2083, 2084, 2059, 2068, -2, -2, 1094, 1948, 1097,
	844, 1095, 1079, 1081, 0, 1083, 0, 0, 0, 1088,
	1111, 1109, 0, 1150, 1092, 1093, 1168, 1168, 1192, 0,
	1173, 0, 1192, 1103, 1218, 0, 1179, 1968, 1500, 1501,
	0, 1753, 1750, -2, 0, 0, 0, 0, 0, 0,
	0, 424, 0, 430, 432, 0, 0, 0, 0, 0,
	0, 0, 0, 983, 464, 465, 0, 489, 0, 493,
	2051, -2, 1788, 1988, -2, 497, 987, 991, 992, 993,
	994, 0, 0, 0, 0, 0, 503, 0, 0, 490,
	491, 509, 512, 0, 53, 0, 2061, 1218, 55, 0,
	1721, 1775, 1776, 1777, 1778, 1779, 2090, 2107, 2109, 2110,
	2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120,
	2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130,
	2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140,
	2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150,
	2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170,
	2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180,
	2181, 2182, 2183, 2184, 2185, 2186, 2187, 57, 0, 2061,
	60, 0, 2061, 0, -2, 65, 0, 1727, 67, 0,
	1724, 76, 0, 2061, 0, 1696, -2, -2, 2061, 895,
	176, 177, 1766, 1767, 1771, 1772, 1773, 1774, -2, 2061,
	898, 1205, 160, 0, 0, 0, 723, 1693, 1698, 724,
	1703, 0, 199, 200, 201, 202, 203, 2061, 205, 206,
	0, 208, 209, 2061, 211, 212, 0, 214, 230, 231,
	0, 233, 0, 2061, 0, 0, 0, 239, -2, 256,
	0, 253, 0, 243, 244, 246, 247, 248, 249, 250,
	0, 295, 293, 1732, 0, 0, 0, 913, -2, 2061,
	889, -2, 2061, 892, 918, 1735, 0, -2, 0, 1101,
	2061, 1001, 751, 752, 753, 754, 0, 314, 0, 1014,
	0, 1016, 0, 1037, 1224, 1168, 1168, 0, 257, 258,
	259, 260, 261, 2061, 0, 0, 0, 266, 0, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 151, 2061,
	342, 361, 151, 2061, 345, 151, 2061, 348, 151, 2061,
	351, 1691, 151, 2061, 354, 355, 2061, 357, 178, 358,
	2061, 360, 0, -2, 417, 1739, -2, 366, 0, 367,
	0, 370, -2, 0, 190, 0, 0, 729, 730, 1205,
	162, 0, 954, 955, 0, 0, 474, 0, 0, 590,
	591, 0, 0, 601, 602, 603, 190, 1976, 1946, 1848,
	608, 0, 611, 614, -2, 0, 0, 0, 0, 618,
	0, 623, 624, 625, 0, 728, 627, 0, 0, 629,
	0, 633, 0, 636, 0, 638, 0, 640, -2, -2,
	-2, 651, -2, 0, 655, 0, 657, 0, 0, 0,
	0, 672, 673, 0, 678, 0, 681, 682, 683, 684,
	685, 0, 687, 688, 689, 690, 0, 692, 693, -2,
	-2, 697, 699, 0, 706, 0, 710, 0, 714, 0,
	597, 598, 151, 1222, 966, -2, 968, 0, -2, 0,
	455, 0, 458, 1129, 1062, 1059, 0, 1126, 1127, 1063,
	0, 0, 0, 1070, 0, 1106, 1107, 0, 0, 0,
	1049, 1050, 0, 0, 0, 0, 1601, 1602, 1603, 1604,
	1605, 1606, 1609, 1610, 1607, 1608, 1611, 1612, 0, 0,
	0, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1614, 1615, 1616, 0, 0,
	1618, 0, 1620, 0, 0, 0, 0, 0, 0, 1409,
	1411, 1684, 0, 0, 1617, 1351, 1352, 1353, 1388, 1389,
	0, 0, 1462, 1681, 1680, 1464, 0, 1632, 0, 1471,
	1477, 1717, -2, 0, 1596, 1627, 0, 0, 1486, 1487,
	1488, 0, 0, 1632, 0, 0, 1675, 1343, 0, 0,
	1564, 0, 1285, 0, 1286, 1287, 0, 1288, 1289, 1302,
	1315, 0, 0, 0, 0, 1319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1307, 0, 0, 0, 1656, -2,
	0, 0, 0, 0, 0, 1096, 0, 0, 1154, 1685,
	1689, 1690, 1154, 1154, 0, 0, 1633, 1215, 1215, 0,
	0, 1211, 1211, 1211, 1209, 1192, 0, 1192, 1202, 0,
	1192, 1192, 0, -2, 1173, 0, 0, 1202, 0, 1186,
	405, 407, 409, 411, 412, 413, 415, 1219, 1220, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 1741,
	0, 0, 0, 0, 435, 445, 1103, 0, 1635, 1241,
	1244, 1245, 1246, 1247, 1248, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, -2, 1303, 1305, 1326, 1292, 1293, 1294, 1295,
	1296, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1298, 0, 1273, 1273, 1273, 1290, 1291, 1314,
	1325, 1317, 1325, 1321, 1242, 1243, 1308, 1309, 1310, 1311,
	0, 439, 0, 0, 0, 0, -2, 499, 504, 505,
	0, 0, 989, 0, 995, 526, 527, 528, 997, 998,
	0, 502, 529, 530, 531, 532, 533, 534, 0, 1705,
	1706, 1707, 1708, 1711, 1712, 0, 0, 500, 519, 507,
	0, 513, 77, 949, 116, 0, 949, 949, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 101, 112, 89,
	90, 0, 0, 0, 0, 61, 866, 0, 869, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 0, 100,
	0, 95, 79, 0, 0, 0, 102, 114, 0, 142,
	144, 0, 0, 893, 0, 1100, 0, 896, 0, 181,
	1204, 0, 1205, 722, 0, 0, 1754, 1701, 0, 0,
	0, 0, 232, 234, 0, 236, 237, 238, 0, 912,
	0, 245, 242, 286, 816, 2061, 0, 0, 312, 307,
	0, 309, 865, 2061, 863, 1736, 0, 887, 0, 890,
	0, 0, 0, 919, 0, 2061, 924, 1723, 1762, 1763,
	1003, 0, 316, 0, 1017, 1019, 0, 0, 1225, 0,
	1227, 1228, 0, 263, 264, 265, 0, 340, 0, 149,
	150, 0, 343, 0, 346, 0, 349, 0, 0, 352,
	0, 0, 0, 0, 1103, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 0, 190, 0, 1205, 190,
	190, 1205, 476, 1205, 478, 0, 0, 604, 190, 190,
	190, 609, 610, 612, 613, -2, -2, 707, 615, 616,
	675, 0, 0, 0, 674, 626, 0, 716, 1964, 726,
	675, 1823, 675, 1823, 675, 1823, 637, 639, 642, 667,
	650, 654, 0, 0, 0, 659, 0, 661, 0, 663,
	675, 676, 679, 686, 691, 0, 0, 0, 0, 0,
	0, 0, 883, 0, 979, 1129, 1062, 457, 1053, 1128,
	1054, 1061, 1064, 0, 0, 1066, 0, 1068, 0, 1124,
	1125, 1132, 1133, 0, 1143, 1144, 1136, 0, -2, 0,
	0, 1139, 1140, 1072, 0, 1089, 1090, 1091, 1115, 1116,
	938, 0, 2188, 1347, 1236, 1348, 1349, 1720, 0, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, -2,
	-2, -2, -2, -2, -2, -2, -2, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, -2, -2,
	-2, 1386, 1387, -2, 1619, 1621, 0, 1684, 0, -2,
	0, -2, -2, -2, -2, 1406, 0, 1408, 1413, 1415,
	1417, 0, 0, 0, 0, 1683, 1427, 1667, 1668, 0,
	0, 1598, 1599, 1600, 1412, 0, 1431, 1682, 1679, 0,
	0, 1631, 1114, 1490, 0, 0, 0, 0, 1497, 1482,
	1629, 0, 1628, 0, 0, 0, 1639, 0, 1674, 1670,
	0, 1718, 1342, 1329, 1330, 1331, 1332, 1333, 1334, 1344,
	0, 1715, 1742, 1748, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 1526, 1527, 1528,
	1529, 0, 1531, 1532, 0, 1534, 1535, 0, 1537, 1538,
	0, 1540, 1541, 1542, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1544, 0, 1642, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1546, 0, 1548, 1633, 1653,
	0, 0, 1432, 0, 0, 0, 1596, 0, 1551, 1633,
	1661, 0, 0, 0, 0, 0, 1633, 0, 1666, 0,
	1558, 0, 1560, 1098, 0, 0, 1231, 0, 0, 0,
	1688, 1231, 1231, 0, 1149, 0, 0, 1212, 1213, 1214,
	0, 0, 1215, 0, 1206, 1210, 1207, 1208, 1202, 1165,
	0, 0, 1722, 1202, 1171, 1201, 0, 844, 1191, 1202,
	1202, 0, -2, 1175, 1192, 0, 0, 406, 408, 410,
	414, 416, 0, 0, 1114, -2, 190, 843, 0, 0,
	0, 0, 0, 425, 427, 0, 0, 419, 0, 422,
	0, 1232, 1235, 0, 0, -2, 0, 0, 1327, 0,
	0, 0, 0, 492, 0, 988, 996, 0, 523, 0,
	525, 0, 1709, 1713, 1710, 1714, 0, 514, 0, 0,
	0, 0, 948, 120, 2061, 0, 153, 0, 0, 810,
	1728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 91, 0,
	0, 0, 0, 0, 0, 0, 867, 868, 870, 877,
	879, 0, 873, 1716, 0, 0, 874, 0, 876, 878,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	92, 0, 0, 0, 0, 1695, 910, 908, 905, 906,
	907, 0, -2, -2, 190, 0, 161, 181, 1694, 1704,
	0, 204, 207, 210, 213, 0, 240, 0, 0, 757,
	734, 0, 0, 294, 190, 0, 0, 308, 861, 864,
	0, 844, 2061, 904, 1734, 0, 0, 0, 0, 0,
	917, 0, 0, 0, 2061, 1005, 1011, 0, 1231, 0,
	1035, 1020, 0, 0, 0, 1035, 1039, 1040, 1042, 1043,
	0, 0, 1226, 0, 267, 362, 151, 151, 151, 1692,
	151, 151, 179, 356, 359, 365, 418, 1103, 1103, 190,
	188, 1924, 186, 183, 185, 0, 0, 0, 758, 760,
	761, 762, 763, 0, 1763, 0, 1877, 1763, 0, 1023,
	1025, 0, 157, 163, 190, 0, 306, 475, 480, 599,
	0, 605, 606, 607, 644, 669, 617, 619, 620, 621,
	0, 727, 725, 628, 675, 631, 675, 634, 675, 653,
	656, 658, 0, 0, 0, 671, 0, 0, 0, 0,
	0, 0, 0, 711, 712, 713, 715, 1223, 1057, 1058,
	1060, 0, 1069, 0, 0, 1138, -2, -2, 1137, 1141,
	1142, -2, -2, -2, -2, 1065, 0, 1074, 1071, 0,
	1123, 936, 937, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1428, 0, -2, 1407, 1410, 1414, 1416, 1418,
	0, 0, 0, 0, 0, 0, 1622, 0, 1624, 1429,
	1677, 1680, 1594, 0, 0, 1113, 1114, 1114, 0, 1496,
	0, 1630, 0, 1637, 1638, 0, 1489, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1498, 0,
	0, 0, 1297, 1271, 0, 1325, 1323, 1324, 1318, 1325,
	1322, 0, 1530, 1533, 1536, 1539, 0, 0, 0, 0,
	1519, 0, 0, 0, 1523, 1543, 0, 1545, 1547, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1435, 1436, 1437, 1550, 1659,
	1660, 0, 0, 0, 0, 0, 0, 1556, 0, 1665,
	1557, 1559, 1103, 1151, 1146, 1230, 0, 1686, 1205, 1153,
	1155, 1687, 1725, 1146, 1146, 0, 1634, 0, 0, 1196,
	0, 0, 0, 1198, 1169, 0, 0, 1163, 0, 1159,
	1160, 1161, 1162, 1170, 844, 1200, 1172, 1176, 1742, 0,
	1202, 0, 1187, 0, 1189, 1221, 0, 1181, 1184, 0,
	0, 191, 1755, 215, 219, 220, 216, 217, 218, 434,
	0, 0, 1636, 0, 1237, 0, 0, 0, 0, 0,
	438, 0, 488, -2, 521, 522, 524, 0, 520, 117,
	949, 0, 0, 940, 0, 122, 2061, 131, 0, 786,
	0, 1726, 0, 0, 0, 0, 951, 0, 0, 2061,
	151, 2061, 151, 134, 137, 0, 141, 139, 0, 0,
	777, 78, 949, 81, 85, 93, 0, 0, 0, 99,
	0, 0, 0, 942, 0, 871, 872, 875, 881, 62,
	0, 944, 939, 143, 83, 87, 94, 0, 946, 80,
	0, 909, 885, 886, 894, 897, 154, 0, 190, 1700,
	0, 0, 0, 0, 0, 756, 827, 0, 0, 0,
	0, 300, 296, 0, 305, 311, 310, 0, 0, 0,
	-2, -2, 914, 0, 916, 928, 0, 0, 0, 1007,
	1011, 0, 1010, 1101, 1114, 315, 1012, 1035, 0, 0,
	0, 1022, 1018, 1015, 1231, 0, 0, 0, 0, 0,
	262, 341, 344, 347, 350, 353, 368, 369, 165, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	1763, 1763, 0, 1730, 0, 0, 0, 0, 158, 0,
	477, 0, 0, 0, 630, 632, 635, 660, 662, 675,
	700, 701, 772, 0, 772, 0, 0, 1067, 0, 1135,
	1073, 1117, 1118, 0, 938, 0, 1350, 1391, 0, 0,
	-2, 0, 0, 1395, 0, 0, 0, -2, 0, 0,
	0, 1623, 1625, 0, 1679, 1491, 0, 0, 0, 1495,
	1479, 1480, 0, 1597, 1640, 1669, 1673, 0, 1335, 1336,
	1337, 1338, 1339, 1340, 1341, 0, 1719, 1743, 1747, 1570,
	1571, 1575, 1733, 0, 0, 0, 1316, 1320, 1502, 0,
	0, 0, 0, 0, 0, 0, 1641, 1652, 1654, 1433,
	1434, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, -2, -2, -2, 1451, 1452, 1453, -2, -2, -2,
	0, 0, 0, 1655, 1657, 1658, 1662, 1663, 0, 1553,
	1554, 1555, 1664, 0, 1148, 0, 1229, 1152, 0, 1148,
	1148, 1110, 1194, 0, 0, 1217, 0, 1166, 0, 1167,
	0, 1199, 0, 1174, 1177, 1178, 1188, 0, 1180, 0,
	1183, 0, 1491, -2, 436, 420, 0, 0, 1239, 0,
	1300, 1304, 1328, 440, 1203, 0, 0, 0, 0, 152,
	784, 809, 0, 0, 931, 938, 0, 0, 124, 0,
	0, 0, 132, 0, 0, 129, 0, 136, 140, 0,
	0, 0, 0, 0, 96, 97, 98, 0, 103, 0,
	104, 0, 0, 0, 0, 0, 0, 180, 155, 235,
	903, 241, 766, 815, 0, 817, 0, 735, 0, 0,
	816, 292, 0, 299, 0, 865, 0, 0, 888, 891,
	915, 0, 0, 0, 0, 0, 1009, 1011, 0, 1002,
	1003, 1131, 1013, 1033, -2, 1032, 0, 1114, 1041, 1038,
	1044, 1045, 0, 187, 0, 182, 184, 0, 168, 0,
	0, 759, 764, 0, 0, 0, 0, 0, 1024, 1026,
	0, 174, 0, 600, 622, 670, 702, 771, 0, 0,
	704, 0, 0, 1134, 1121, 1122, 1119, 938, 1393, 1397,
	0, 0, 0, 1399, -2, 0, 1421, -2, -2, 1626,
	1678, 1470, 1114, 1492, 1494, 1481, 1672, 1345, 0, 1577,
	1574, 0, 1561, 1272, 1514, 1515, 0, 0, 1518, 1520,
	1521, 1522, 1651, 0, 0, 0, 0, 1552, 1099, 1566,
	0, 0, 1156, 1566, 1566, 1195, 0, 1197, 1164, 1157,
	0, 1743, 1190, 1182, 0, 0, 1233, 1238, 0, 1299,
	118, 119, 121, 0, 785, 0, 788, 0, 0, 0,
	0, 795, 796, 0, 0, 0, 0, 0, 831, 840,
	0, 1123, 0, 0, 0, 126, 146, 0, 0, 950,
	0, 0, 151, 151, 0, 0, 941, 0, 0, 0,
	0, 106, 0, 0, 943, 945, 0, 0, 947, 774,
	0, 827, 819, 820, 821, 0, 826, 828, 0, 0,
	744, 0, 740, 0, 0, 737, 757, 734, 0, 297,
	862, 901, 844, 0, 927, 0, 0, 0, 999, 1011,
	0, 1004, 1005, 1035, 1130, 0, 0, 0, 1021, 1131,
	0, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	190, 479, 481, 0, 0, 487, 770, 0, 0, 0,
	0, 1120, 1401, -2, -2, 1422, 0, 1744, 1746, 1114,
	0, 1563, 0, 0, -2, 0, 0, 0, 1085, 0,
	1147, 1145, 1086, 1087, 1216, 0, 1185, 0, 1240, 123,
	0, 789, 790, 1729, 792, 0, 794, 797, 0, 800,
	1765, 0, 804, 811, 832, 0, 766, 0, 837, 838,
	932, 933, 842, 0, 125, 127, 145, 935, 0, 128,
	135, 0, 0, 82, 0, 0, 1816, 109, 107, 105,
	84, 0, 734, 773, 0, 818, 0, 829, 830, 742,
	0, 736, 0, 0, 0, 0, 0, 298, 301, 0,
	304, 0, 0, 928, 0, 0, 0, 1006, 1007, 313,
	0, 0, 0, 1035, 1046, 167, 0, 0, 842, 0,
	0, 808, 0, 172, 0, 483, 0, 485, 0, 703,
	705, 0, 0, 1493, 1581, 0, 1516, 1517, -2, 0,
	1459, 1565, 1567, 0, 1158, 1234, 787, 791, 0, 0,
	0, 848, 0, 0, 0, 835, 836, 774, 0, 766,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 745, 0, 741, 738, 739, 766,
	0, 302, 303, 0, 842, 0, 840, 0, 1008, 1009,
	0, 1028, 1029, 1031, 1036, 0, 0, 840, 842, 807,
	0, 482, 0, 0, 708, 709, 0, 0, 0, 0,
	1576, 1460, 0, 0, 0, 0, 799, 853, 0, 0,
	0, 833, 834, 831, 0, 813, 0, 844, 130, 0,
	934, 842, 0, 778, 0, 0, 781, 0, 0, 110,
	1816, 108, 0, 0, 0, 823, 825, 746, 774, 744,
	902, 840, 0, 766, 0, 1000, 0, 1030, 190, 190,
	766, 840, 190, 484, 486, 1573, 1593, 1582, -2, 2024,
	1820, 0, 1593, 1593, 1568, 1569, 0, 0, 801, 849,
	850, 0, 845, 846, 847, 1764, 802, 803, 812, 839,
	0, 848, 147, 766, 775, 0, 0, 776, 0, 0,
	113, 0, 115, 0, 822, 0, 734, 743, 766, 0,
	774, 0, 1231, 169, 170, 774, 766, 171, 1578, 0,
	0, 1584, 1585, 1586, 1587, 1588, 1579, 1580, 793, 0,
	851, 0, 852, 0, 0, 0, 0, 853, 133, 779,
	0, 782, 0, 111, 0, 824, 733, 774, 842, 925,
	840, 1027, 805, 774, 0, 1590, 1591, 0, 0, 0,
	854, 0, 857, 858, 0, 855, 0, 831, 0, 0,
	769, 925, 840, 922, 0, 766, 806, 1589, 1592, 1583,
	798, 856, 859, 860, 841, 814, 0, 0, 765, 767,
	768, 920, 766, 926, 774, 774, 0, 774, 925, 780,
	0, 925, 923, 0, 921, 0, 774, 783,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 457, 3, 463, 458, 3,
	468, 469, 461, 459, 473, 460, 470, 462, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 476, 3,
	449, 451, 450, 454, 472, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 466, 3, 467, 464, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 474, 456, 475, 452,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 453, 57792, 455, 57793, 465, 57794, 471,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1116
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1121
		{
			return helpWith(sqllex, "")
		}
	case 7:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1125
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1126
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1127
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1128
		{
			return helpWith(sqllex, "GRANT")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1129
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1130
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1131
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1132
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1136
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1145
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1146
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1147
		{
			return helpWith(sqllex, "ALTER")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1150
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1151
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1152
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1153
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1154
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1155
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1156
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1210
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1266
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 62:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1270
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1284
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1303
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1335
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1339
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 78:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1343
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1349
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1353
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1359
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1368
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1389
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 86:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1397
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 87:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1407
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 88:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1411
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 91:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1421
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1432
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1439
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1451
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1458
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1466
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1475
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1486
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1505
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1515
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1525
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 105:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1534
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 106:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1545
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 107:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1551
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1559
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1563
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1571
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1577
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1582
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1597
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1603
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 118:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1619
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1644
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1654
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1659
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1664
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.colType(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1695
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1702
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1714
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1721
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1751
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1760
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1782
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = nil
		}
	case 147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1792
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1796
		{
			sqlVAL.union.val = nil
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1821
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 154:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = &tree.Backup{DescriptorCoverage: tree.AllDescriptors, To: sqlDollar[3].union.partitionedBackup(), IncrementalFrom: sqlDollar[5].union.exprs(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = &tree.Backup{Targets: sqlDollar[2].union.targetList(), To: sqlDollar[4].union.partitionedBackup(), IncrementalFrom: sqlDollar[6].union.exprs(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[7].union.kvOptions()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1854
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.Restore{DescriptorCoverage: tree.AllDescriptors, From: sqlDollar[3].union.partitionedBackups(), AsOf: sqlDollar[4].union.asOfClause(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Restore{Targets: sqlDollar[2].union.targetList(), From: sqlDollar[4].union.partitionedBackups(), AsOf: sqlDollar[5].union.asOfClause(), Options: sqlDollar[6].union.kvOptions()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1884
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.PartitionedBackup{sqlDollar[1].union.expr()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = tree.PartitionedBackup(sqlDollar[2].union.exprs())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = []tree.PartitionedBackup{sqlDollar[1].union.partitionedBackup()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = append(sqlDollar[1].union.partitionedBackups(), sqlDollar[3].union.partitionedBackup())
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1954
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1960
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1965
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1970
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1975
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1980
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1984
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2000
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2003
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2011
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2029
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2033
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2047
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2051
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2075
		{
			sqlVAL.union.val = nil
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2081
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2095
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2098
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2116
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2121
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2157
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2184
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2190
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2193
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2205
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2224
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2229
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2241
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2242
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2244
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2245
		{
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2246
		{
			return helpWith(sqllex, "CREATE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2249
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			return unimplemented(sqllex, "create cast")
		}
	case 232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2251
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2252
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2253
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2254
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2255
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2256
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2257
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2260
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2261
		{
			return unimplementedWithIssue(sqllex, 41649)
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2262
		{
			return unimplemented(sqllex, "create operator")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			return unimplemented(sqllex, "create publication")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2264
		{
			return unimplemented(sqllex, "create rule")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2265
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "create")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2266
		{
			return unimplemented(sqllex, "create server")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2267
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2268
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2269
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2272
		{
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2273
		{
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2277
		{
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2281
		{
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2284
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2285
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2286
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2288
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2289
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2290
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2291
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2292
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2293
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2294
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2296
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2297
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2298
		{
			return unimplementedWithIssueDetail(sqllex, 26443, "drop")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplemented(sqllex, "drop server")
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2302
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "drop type")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2303
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2309
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2310
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2313
		{
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2314
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2325
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2333
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 295:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2341
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2351
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2383
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2406
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2422
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2432
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2453
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2457
		{

			sqlVAL.union.val = nil
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			return helpWith(sqllex, "DELETE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2485
		{
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2493
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2496
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2497
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2498
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2499
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2500
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2510
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2512
		{
			return helpWith(sqllex, "DROP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2515
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2516
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2518
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2519
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2534
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2564
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[3].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[5].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2587
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2595
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[3].union.exprs(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = &tree.DropUser{Names: sqlDollar[5].union.exprs(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2625
		{
			return helpWith(sqllex, "DROP USER")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: true}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2640
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2649
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = &tree.Explain{Statement: sqlDollar[2].union.stmt()}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.Explain{Options: sqlDollar[3].union.strs(), Statement: sqlDollar[5].union.stmt()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.Explain{Options: []string{"DISTSQL", "ANALYZE"}, Statement: sqlDollar[3].union.stmt()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.Explain{Options: append(sqlDollar[4].union.strs(), "ANALYZE"), Statement: sqlDollar[6].union.stmt()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.ExplainBundle{Statement: sqlDollar[3].union.stmt()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2704
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2708
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2711
		{
			return helpWith(sqllex, "DELETE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2713
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2714
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2715
		{
			return helpWith(sqllex, "INSERT")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2716
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2718
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2719
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2728
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2735
		{
			return helpWith(sqllex, "DELETE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2736
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2737
		{
			return helpWith(sqllex, "INSERT")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2744
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2748
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2762
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2770
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.colTypes(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = sqlDollar[2].union.colTypes()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = []*types.T(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 425:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2803
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2844
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2875
		{
			return helpWith(sqllex, "GRANT")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2899
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2943
		{
			return helpWith(sqllex, "RESET")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2944
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2959
		{
			return helpWith(sqllex, "RESET")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2967
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "USE")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2991
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			return helpWith(sqllex, "USE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3013
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3031
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3057
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3071
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3081
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3085
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3093
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3097
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3111
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3121
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3137
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3166
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3171
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "set from current")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3225
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3230
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3293
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = tree.Low
		}
	case 527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = tree.Normal
		}
	case 528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = tree.High
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3334
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3338
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3343
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3360
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3363
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3365
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3367
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3372
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3375
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3383
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3384
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3385
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3386
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "SHOW")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3396
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.str = "client_encoding"
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.str = "timezone"
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3412
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3430
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3461
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3487
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3505
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3519
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3523
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3553
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3557
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3571
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3584
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3605
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3616
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3657
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = true
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = true
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = false
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3727
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3729
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3733
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = true
		}
	case 665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = false
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3750
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3761
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3771
		{
			sqlVAL.union.val = &tree.ShowTables{TableNamePrefix: tree.TableNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3787
		{
			sqlVAL.union.val = true
		}
	case 675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = false
		}
	case 676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3795
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3809
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3823
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3845
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3871
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3891
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3914
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3922
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3959
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3967
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3982
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3998
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4130
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4138
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4181
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4186
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4270
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4284
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Temporary:     sqlDollar[2].union.persistenceType(),
				StorageParams: sqlDollar[13].union.storageParams(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = nil
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{

			sqlVAL.union.val = nil
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4310
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4325
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 742:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4341
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4353
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
			}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4366
		{
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = true
		}
	case 748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = true
		}
	case 749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = false
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = true
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = true
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = true
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			sqlVAL.union.val = true
		}
	case 755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4396
		{
			return unimplemented(sqllex, "create unlogged")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4426
		{
			return unimplementedWithIssue(sqllex, 30840)
		}
	case 765:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4430
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4439
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4446
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.str = ""
		}
	case 774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 775:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 780:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 783:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4546
		{
			typ := sqlDollar[2].union.colType()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, isSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4567
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4571
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4613
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4617
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4625
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4640
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4654
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 805:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4665
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:        tree.Name(sqlDollar[2].str),
				Columns:     sqlDollar[4].union.idxElems(),
				Sharded:     sqlDollar[6].union.shardedIndexDef(),
				Storing:     sqlDollar[7].union.nameList(),
				Interleave:  sqlDollar[8].union.interleave(),
				PartitionBy: sqlDollar[9].union.partitionBy(),
			}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:        tree.Name(sqlDollar[3].str),
					Columns:     sqlDollar[5].union.idxElems(),
					Sharded:     sqlDollar[7].union.shardedIndexDef(),
					Storing:     sqlDollar[8].union.nameList(),
					Interleave:  sqlDollar[9].union.interleave(),
					PartitionBy: sqlDollar[10].union.partitionBy(),
				},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:     tree.Name(sqlDollar[3].str),
				Columns:  sqlDollar[5].union.idxElems(),
				Inverted: true,
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4711
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
				},
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4751
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 816:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4813
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4844
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4865
		{
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4867
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4868
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4869
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4870
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4945
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4966
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4970
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4982
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4998
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5025
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:      name,
				Temporary: sqlDollar[2].union.persistenceType(),
				Options:   sqlDollar[5].union.seqOpts(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5034
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.colType().SQLString())
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5068
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5073
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5075
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5078
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5081
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5083
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5114
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = &tree.CreateUser{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5121
		{
			return helpWith(sqllex, "CREATE USER")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5129
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: true}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.AlterUser{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "ALTER USER")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5159
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: true}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
		}
	case 900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5172
		{
		}
	case 901:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5180
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: false,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5191
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Temporary:   sqlDollar[2].union.persistenceType(),
				IfNotExists: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5201
		{
			return unimplementedWithIssue(sqllex, 24897)
		}
	case 904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5202
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 911:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5231
		{
			sqlVAL.union.val = nil
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5236
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5237
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5243
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 915:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5245
		{
			return unimplementedWithIssue(sqllex, 24873)
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5247
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5249
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5251
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5269
		{
			table := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[4].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Columns:     sqlDollar[9].union.idxElems(),
				Sharded:     sqlDollar[11].union.shardedIndexDef(),
				Storing:     sqlDollar[12].union.nameList(),
				Interleave:  sqlDollar[13].union.interleave(),
				PartitionBy: sqlDollar[14].union.partitionBy(),
				Inverted:    sqlDollar[7].union.bool(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:5284
		{
			table := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[7].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Sharded:     sqlDollar[14].union.shardedIndexDef(),
				Storing:     sqlDollar[15].union.nameList(),
				Interleave:  sqlDollar[16].union.interleave(),
				PartitionBy: sqlDollar[17].union.partitionBy(),
				Inverted:    sqlDollar[10].union.bool(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5300
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[5].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				Columns:     sqlDollar[9].union.idxElems(),
				Storing:     sqlDollar[11].union.nameList(),
				Interleave:  sqlDollar[12].union.interleave(),
				PartitionBy: sqlDollar[13].union.partitionBy(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:5314
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:        tree.Name(sqlDollar[8].str),
				Table:       table,
				Unique:      sqlDollar[2].union.bool(),
				Inverted:    true,
				IfNotExists: true,
				Columns:     sqlDollar[12].union.idxElems(),
				Storing:     sqlDollar[14].union.nameList(),
				Interleave:  sqlDollar[15].union.interleave(),
				PartitionBy: sqlDollar[16].union.partitionBy(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5331
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5332
		{
			return unimplementedWithIssue(sqllex, 9683)
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5336
		{

			switch sqlDollar[2].str {
			case "gin":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "gist", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = false
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = true
		}
	case 930:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = false
		}
	case 931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5380
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5402
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.str = ""
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5407
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = tree.Descending
		}
	case 938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5415
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5427
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5433
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5441
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5447
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5455
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5461
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5478
		{
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5479
		{
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5482
		{
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5483
		{
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5504
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5516
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5524
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5527
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5532
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5533
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5549
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5557
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5570
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5584
		{
		}
	case 976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
		}
	case 977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5586
		{
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5603
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5606
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5607
		{
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5635
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5648
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5650
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5654
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5667
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5685
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.str = ""
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5733
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.str = ""
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.str = ""
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5757
		{
			sqlVAL.str = ""
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5762
		{
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5763
		{
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5800
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5807
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5811
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5820
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5869
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5873
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), Exprs: sqlDollar[7].union.updateExprs(), Where: tree.NewWhere(tree.AstWhere, sqlDollar[8].union.expr())}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.OnConflict{Columns: sqlDollar[3].union.nameList(), DoNothing: true}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5883
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			return unimplementedWithIssue(sqllex, 32557)
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5887
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5895
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6045
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6150
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6151
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6294
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6302
		{
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6303
		{
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = nil
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6317
		{
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = true
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = false
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = false
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = true
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6341
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6346
		{
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6347
		{
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6351
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6355
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6398
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6403
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6432
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6452
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6461
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6465
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6521
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6525
		{
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6575
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6578
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6580
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6595
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6603
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6617
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6627
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6638
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6650
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6708
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6718
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6753
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6764
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6794
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6827
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = nil
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = true
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = false
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6922
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.str = tree.AstFull
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.str = tree.AstRight
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.str = tree.AstInner
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6946
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6947
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6968
		{
			sqlVAL.str = tree.AstHash
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6976
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.str = ""
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7002
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7044
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.colType()
			}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7096
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7104
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7105
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.colType(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7115
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7123
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7125
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7133
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7134
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = types.Jsonb
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7166
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.union.val = types.Bytes
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = types.String
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7182
		{
			sqlVAL.union.val = types.Name
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7186
		{
			switch sqllex.(*lexer).nakedIntType.Width() {
			case 32:
				sqlVAL.union.val = &serial4Type
			default:
				sqlVAL.union.val = &serial8Type
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = &serial2Type
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7203
		{
			sqlVAL.union.val = &serial4Type
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = &serial8Type
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = types.Uuid
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = types.INet
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = types.Oid
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7227
		{
			sqlVAL.union.val = types.OidVector
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = types.Int2Vector
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else {
				var ok bool
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						sqllex.Error("type does not exist")
						return 1
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7266
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7274
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = nil
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = types.Int2
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = types.Int2
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = types.Int4
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = types.Int
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = types.Int
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = types.Int
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = types.Float4
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = types.Float4
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = types.Float
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = types.Float
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = types.Bool
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = types.Bool
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = types.RegProc
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = types.RegProcedure
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = types.RegClass
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = types.RegType
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = types.RegNamespace
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7398
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7411
		{
			sqlVAL.union.val = types.Float
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7417
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7423
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7445
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = types.String
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = true
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = false
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = types.Date
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7494
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7502
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7516
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7525
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7533
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7546
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7550
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = true
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = false
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = types.Interval
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7574
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7625
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7658
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = nil
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7703
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7752
		{

			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7765
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7786
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7790
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7822
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7826
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7838
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7842
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7846
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7886
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7954
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8009
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8027
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8035
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.CastShort}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8113
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.colType(), SyntaxMode: tree.AnnotateShort}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8117
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8121
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8173
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8197
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.colTypes()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.colTypes()}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8239
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8283
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8287
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8291
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8296
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8322
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8331
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8338
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8342
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8346
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8376
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy()}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8387
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8388
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy()}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8403
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8414
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.CastExplicit}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.colType(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8534
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8539
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8548
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8554
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8557
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8568
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8575
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8585
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8590
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8595
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8604
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8605
		{
			return unimplemented(sqllex, "treat")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8626
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8631
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8636
		{
			return unimplemented(sqllex, "within group")
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8637
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8641
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8656
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8666
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.str = ""
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8721
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8739
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8774
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8842
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8871
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.Any
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.Some
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.All
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8897
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8898
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.Div
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.LT
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.GT
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = tree.LE
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = tree.GE
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.NE
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.Like
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8918
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8945
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8997
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9007
		{
			sqlVAL.union.val = []*types.T{sqlDollar[1].union.colType()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colTypes(), sqlDollar[3].union.colType())
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9037
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9068
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9072
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9078
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9154
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9210
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9223
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9232
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9233
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9260
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9313
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.TableName)
			name.TableName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9431
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9451
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9555
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9629
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9636
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9661
		{
			sqlVAL.str = ""
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
